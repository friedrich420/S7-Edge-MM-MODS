.class public Lcom/android/server/policy/PhoneWindowManager;
.super Ljava/lang/Object;
.source "PhoneWindowManager.java"

# interfaces
.implements Landroid/view/WindowManagerPolicy;


# annotations
.annotation system Ldalvik/annotation/MemberClasses;
    value = {
        Lcom/android/server/policy/PhoneWindowManager$ScreenLockTimeout;,
        Lcom/android/server/policy/PhoneWindowManager$HideNavInputEventReceiver;,
        Lcom/android/server/policy/PhoneWindowManager$HdmiControl;,
        Lcom/android/server/policy/PhoneWindowManager$MyOrientationListener;,
        Lcom/android/server/policy/PhoneWindowManager$MyWakeGestureListener;,
        Lcom/android/server/policy/PhoneWindowManager$SettingsObserver;,
        Lcom/android/server/policy/PhoneWindowManager$PolicyHandler;,
        Lcom/android/server/policy/PhoneWindowManager$TwToolBoxPointerEventListener;
    }
.end annotation


# static fields
.field private static final ACTION_WIFI_DISPLAY_VIDEO:Ljava/lang/String; = "org.codeaurora.intent.action.WIFI_DISPLAY_VIDEO"

.field static final APPLICATION_ABOVE_SUB_PANEL_SUBLAYER:I = 0x3

.field static final APPLICATION_MEDIA_OVERLAY_SUBLAYER:I = -0x1

.field static final APPLICATION_MEDIA_SUBLAYER:I = -0x2

.field static final APPLICATION_PANEL_SUBLAYER:I = 0x1

.field static final APPLICATION_SUB_PANEL_SUBLAYER:I = 0x2

.field private static final BRIGHTNESS_STEPS:I = 0xa

.field static final DEBUG:Z = false

.field static final DEBUG_DUAL_STATUSBAR:Z

.field static DEBUG_INPUT:Z = false

.field static DEBUG_KEYGUARD:Z = false

.field static DEBUG_LAYOUT:Z = false

.field static final DEBUG_STARTING_WINDOW:Z = false

.field static DEBUG_WAKEUP:Z = false

.field static final DEFAULT_LONG_PRESS_POWERON_TIME:I = 0x1f4

.field private static final DISMISS_KEYGUARD_CONTINUE:I = 0x2

.field private static final DISMISS_KEYGUARD_NONE:I = 0x0

.field private static final DISMISS_KEYGUARD_START:I = 0x1

.field static final DOUBLE_TAP_HOME_NOTHING:I = 0x0

.field static final DOUBLE_TAP_HOME_RECENT_SYSTEM_UI:I = 0x1

.field static final ENABLE_CAR_DOCK_HOME_CAPTURE:Z = true

.field static final ENABLE_DESK_DOCK_HOME_CAPTURE:Z = true

.field static final ENABLE_MIRRORLINK_DOCK_HOME_CAPTURE:Z = true

.field private static final HIDE_SVIEW_COVER_ALWAYS:I = 0x1

.field private static final HIDE_SVIEW_COVER_NONE:I = 0x0

.field private static final HIDE_SVIEW_COVER_ONCE:I = 0x2

.field private static final INTENT_ACTION_SHOW_POPUP:Ljava/lang/String; = "samsung.vzw.setupwizard.intent.action.SHOW_POPUP"

.field private static final INTENT_ACTION_START_DOCK_OR_HOME:Ljava/lang/String; = "com.samsung.android.action.START_DOCK_OR_HOME"

.field private static final INTENT_PERMISSION_START_DOCK_OR_HOME:Ljava/lang/String; = "com.samsung.android.permisson.START_DOCK_OR_HOME"

.field private static final KEYGUARD_SCREENSHOT_CHORD_DELAY_MULTIPLIER:F = 2.5f

.field static final LONG_PRESS_HOME_ASSIST:I = 0x2

.field static final LONG_PRESS_HOME_NOTHING:I = 0x0

.field static final LONG_PRESS_HOME_RECENT_SYSTEM_UI:I = 0x1

.field static final LONG_PRESS_HOME_SREMINDER:I = 0x3

.field static final LONG_PRESS_POWER_GLOBAL_ACTIONS:I = 0x1

.field static final LONG_PRESS_POWER_NOTHING:I = 0x0

.field static final LONG_PRESS_POWER_SHUT_OFF:I = 0x2

.field static final LONG_PRESS_POWER_SHUT_OFF_NO_CONFIRM:I = 0x3

.field private static final MSG_DISABLE_EASY_ONE_HAND:I = 0x39

.field private static final MSG_DISABLE_POINTER_LOCATION:I = 0x2

.field private static final MSG_DISABLE_SIDE_KEY_PANEL:I = 0x33

.field private static final MSG_DISABLE_TOOL_BOX:I = 0x13

.field private static final MSG_DISPATCH_MEDIA_KEY_REPEAT_WITH_WAKE_LOCK:I = 0x4

.field private static final MSG_DISPATCH_MEDIA_KEY_WITH_WAKE_LOCK:I = 0x3

.field private static final MSG_DISPATCH_SHOW_GLOBAL_ACTIONS:I = 0xa

.field private static final MSG_DISPATCH_SHOW_RECENTS:I = 0x9

.field private static final MSG_ENABLE_BOTTOM_SOFTKEY:I = 0x34

.field private static final MSG_ENABLE_EASY_ONE_HAND:I = 0x38

.field private static final MSG_ENABLE_POINTER_LOCATION:I = 0x1

.field private static final MSG_ENABLE_SIDE_KEY_PANEL:I = 0x32

.field private static final MSG_ENABLE_SPEN_GESTURE:I = 0x10

.field private static final MSG_ENABLE_TOOL_BOX:I = 0x12

.field private static final MSG_ENDCALL_DELAYED_PRESS:I = 0x3e

.field private static final MSG_HIDE_BOOT_MESSAGE:I = 0xb

.field private static final MSG_HIDE_BOTTOM_SOFTKEY:I = 0x37

.field private static final MSG_KEYGUARD_DRAWN_COMPLETE:I = 0x5

.field private static final MSG_KEYGUARD_DRAWN_TIMEOUT:I = 0x6

.field private static final MSG_LAUNCH_VOICE_ASSIST_WITH_WAKE_LOCK:I = 0xc

.field private static final MSG_NOTIFY_DISPLAY_ADDED:I = 0x64

.field private static final MSG_OPEN_BOTTOM_SOFTKEY:I = 0x35

.field private static final MSG_POWER_DELAYED_PRESS:I = 0xd

.field private static final MSG_POWER_LONG_PRESS:I = 0xe

.field private static final MSG_REQUEST_CONFIGURATION_BY_MOBILEKEYBOARD:I = 0x3d

.field private static final MSG_REQUEST_TRAVERSAL_BY_PWM:I = 0x3c

.field private static final MSG_SD_KEYGUARD_DRAWN_COMPLETE:I = 0x69

.field private static final MSG_SHOW_BOTTOM_SOFTKEY:I = 0x36

.field private static final MSG_SSRM_NOTIFICATION:I = 0x11

.field private static final MSG_UPDATE_DREAMING_SLEEP_TOKEN:I = 0xf

.field private static final MSG_WINDOW_MANAGER_DRAWN_COMPLETE:I = 0x7

.field static final MULTI_PRESS_POWER_BRIGHTNESS_BOOST:I = 0x2

.field static final MULTI_PRESS_POWER_CURTAIN_MODE:I = 0x3

.field static final MULTI_PRESS_POWER_NOTHING:I = 0x0

.field static final MULTI_PRESS_POWER_SOS_MESSAGE_MODE:I = 0x4

.field static final MULTI_PRESS_POWER_THEATER_MODE:I = 0x1

.field private static final PANIC_GESTURE_EXPIRATION:J = 0x7530L

.field static final PRINT_ANIM:Z = false

.field static final QUICKBOOT_LAUNCH_TIMEOUT:I = 0x7d0

.field static final SAFE_DEBUG:Z

.field private static final SCREENSHOT_CHORD_DEBOUNCE_DELAY_MILLIS:J = 0x96L

.field static final SHORT_PRESS_POWER_GO_HOME:I = 0x4

.field static final SHORT_PRESS_POWER_GO_TO_SLEEP:I = 0x1

.field static final SHORT_PRESS_POWER_NOTHING:I = 0x0

.field static final SHORT_PRESS_POWER_REALLY_GO_TO_SLEEP:I = 0x2

.field static final SHORT_PRESS_POWER_REALLY_GO_TO_SLEEP_AND_GO_HOME:I = 0x3

.field static final SHORT_PRESS_SLEEP_GO_TO_SLEEP:I = 0x0

.field static final SHORT_PRESS_SLEEP_GO_TO_SLEEP_AND_GO_HOME:I = 0x1

.field static final SHOW_PROCESSES_ON_ALT_MENU:Z = false

.field static final SHOW_STARTING_ANIMATIONS:Z = true

.field public static final SYSTEM_DIALOG_REASON_ASSIST:Ljava/lang/String; = "assist"

.field public static final SYSTEM_DIALOG_REASON_COVER:Ljava/lang/String; = "cover"

.field public static final SYSTEM_DIALOG_REASON_GLOBAL_ACTIONS:Ljava/lang/String; = "globalactions"

.field public static final SYSTEM_DIALOG_REASON_HOME_KEY:Ljava/lang/String; = "homekey"

.field public static final SYSTEM_DIALOG_REASON_KEY:Ljava/lang/String; = "reason"

.field public static final SYSTEM_DIALOG_REASON_RECENT_APPS:Ljava/lang/String; = "recentapps"

.field static final SYSTEM_UI_CHANGING_LAYOUT:I = -0x3fff7ffa

.field static final TAG:Ljava/lang/String; = "WindowManager"

.field private static final VIBRATION_ATTRIBUTES:Landroid/media/AudioAttributes;

.field static final WAITING_FOR_DRAWN_TIMEOUT:I = 0x3e8

.field private static final WINDOW_TYPES_WHERE_HOME_DOESNT_WORK:[I

.field static final localLOGV:Z

.field private static mScreenTurnDisplayId:I

.field static final mTmpCarModeFrame:Landroid/graphics/Rect;

.field static final mTmpContentFrame:Landroid/graphics/Rect;

.field static final mTmpDecorFrame:Landroid/graphics/Rect;

.field static final mTmpDisplayFrame:Landroid/graphics/Rect;

.field static final mTmpNavigationFrame:Landroid/graphics/Rect;

.field static final mTmpOutsetFrame:Landroid/graphics/Rect;

.field static final mTmpOverscanFrame:Landroid/graphics/Rect;

.field static final mTmpParentFrame:Landroid/graphics/Rect;

.field static final mTmpStableFrame:Landroid/graphics/Rect;

.field static final mTmpVisibleFrame:Landroid/graphics/Rect;

.field static sApplicationLaunchKeyCategories:Landroid/util/SparseArray;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Landroid/util/SparseArray",
            "<",
            "Ljava/lang/String;",
            ">;"
        }
    .end annotation
.end field

.field private static wasTopFullscreen:Z


# instance fields
.field public final ALARM_STARTED:[Ljava/lang/String;

.field public final ALARM_STOPPED:[Ljava/lang/String;

.field private alertToast:Landroid/widget/Toast;

.field private bIsCharging:Z

.field private cursorWindowTouchableRegion:Landroid/graphics/Region;

.field private final isElasticEnabled:Z

.field private final isFrontLEDMgrEnabled:Z

.field mAccelerometerDefault:Z

.field mAccessibilityManager:Landroid/view/accessibility/AccessibilityManager;

.field mActivityManagerInternal:Landroid/app/ActivityManagerInternal;

.field mAlarmReceivedFlag:Z

.field mAlarmReceiver:Landroid/content/BroadcastReceiver;

.field mAllowAllRotations:I

.field mAllowLockscreenWhenOn:Z

.field private mAllowTheaterModeWakeFromCameraLens:Z

.field private mAllowTheaterModeWakeFromKey:Z

.field private mAllowTheaterModeWakeFromLidSwitch:Z

.field private mAllowTheaterModeWakeFromMotion:Z

.field private mAllowTheaterModeWakeFromMotionWhenNotDreaming:Z

.field private mAllowTheaterModeWakeFromPowerKey:Z

.field private mAllowTheaterModeWakeFromWakeGesture:Z

.field mAppOpsManager:Landroid/app/AppOpsManager;

.field mAppsShowWhenLocked:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList",
            "<",
            "Landroid/view/IApplicationToken;",
            ">;"
        }
    .end annotation
.end field

.field mAppsThatDismissKeyguard:Ljava/util/HashSet;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/HashSet",
            "<",
            "Landroid/view/IApplicationToken;",
            ">;"
        }
    .end annotation
.end field

.field mAppsToBeHidden:Ljava/util/HashSet;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/HashSet",
            "<",
            "Landroid/view/IApplicationToken;",
            ">;"
        }
    .end annotation
.end field

.field mAppsToBeHiddenBySViewCover:Ljava/util/HashSet;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/HashSet",
            "<",
            "Landroid/view/IApplicationToken;",
            ">;"
        }
    .end annotation
.end field

.field mAssistKeyLongPressed:Z

.field mAutoRotation:Landroid/content/BroadcastReceiver;

.field mAwake:Z

.field private mBatteryLevel:I

.field mBatteryReceiver:Landroid/content/BroadcastReceiver;

.field mBeforeKeyDown:I

.field volatile mBeganFromNonInteractive:Z

.field volatile mBeganFromNonInteractiveEndCall:Z

.field mBootMessageNeedsHiding:Z

.field mBootMsgDialog:Landroid/app/ProgressDialog;

.field private mBottomKeyPanelWindow:Landroid/view/WindowManagerPolicy$WindowState;

.field mBroadcastWakeLock:Landroid/os/PowerManager$WakeLock;

.field mBurnInProtectionHelper:Lcom/android/server/policy/BurnInProtectionHelper;

.field mCalendarDateVibePattern:[J

.field mCameraLensCoverState:I

.field mCanHideNavigationBar:Z

.field mCarDockEnablesAccelerometer:Z

.field mCarDockIntent:Landroid/content/Intent;

.field mCarDockRotation:I

.field private mCarModeBar:Landroid/view/WindowManagerPolicy$WindowState;

.field private mCarModeBarOnBottom:Z

.field private mCarModeSize:I

.field mChargingReceiver:Landroid/content/BroadcastReceiver;

.field private final mClearHideNavigationFlag:Ljava/lang/Runnable;

.field mClockTickVibePattern:[J

.field private mCocktail180RotationEnabled:I

.field private mCocktailPhoneWindowManager:Lcom/android/server/policy/cocktail/CocktailPhoneWindowManager;

.field mConsumeSearchKeyUp:Z

.field mContentBottom:I

.field mContentLeft:I

.field mContentRight:I

.field mContentTop:I

.field mContext:Landroid/content/Context;

.field mContextClickVibePattern:[J

.field mCoverCloseRotation:I

.field mCoverManager:Lcom/samsung/android/cover/ICoverManager;

.field mCoverState:Lcom/samsung/android/cover/CoverState;

.field mCurBottom:I

.field mCurLeft:I

.field mCurRight:I

.field mCurTop:I

.field mCurrentAppOrientation:I

.field private mCurrentDisplayRotation:I

.field private mCurrentUserId:I

.field mCustomBootMsgDialog:Lcom/samsung/android/app/CustomBootMsgDialog;

.field mCustomDialog:Z

.field private mDeferBindKeyguard:Z

.field mDemoHdmiRotation:I

.field mDemoHdmiRotationLock:Z

.field mDemoRotation:I

.field mDemoRotationLock:Z

.field mDeskDockEnablesAccelerometer:Z

.field mDeskDockIntent:Landroid/content/Intent;

.field mDeskDockRotation:I

.field mDismissKeyguard:I

.field mDisplay:Landroid/view/Display;

.field mDisplayManager:Landroid/hardware/display/DisplayManagerGlobal;

.field private mDisplayRotation:I

.field private mDisplaySystemGestures:[Lcom/android/server/policy/SystemGesturesPointerEventListener;

.field mDisplayWindowPolicy:Lcom/samsung/android/multidisplay/common/FallbackArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Lcom/samsung/android/multidisplay/common/FallbackArrayList",
            "<",
            "Lcom/android/server/policy/DisplayWindowPolicy;",
            ">;"
        }
    .end annotation
.end field

.field mDockBottom:I

.field mDockLayer:I

.field mDockLeft:I

.field mDockMode:I

.field mDockReceiver:Landroid/content/BroadcastReceiver;

.field mDockRight:I

.field mDockTop:I

.field mDoublePressOnPowerBehavior:I

.field private mDoubleTapOnHomeBehavior:I

.field mDreamManagerInternal:Landroid/service/dreams/DreamManagerInternal;

.field mDreamReceiver:Landroid/content/BroadcastReceiver;

.field mDreamingLockscreen:Z

.field mDreamingSleepToken:Landroid/app/ActivityManagerInternal$SleepToken;

.field mDreamingSleepTokenNeeded:Z

.field mDualScreenManager:Lcom/samsung/android/dualscreen/DualScreenManager;

.field private mEDM:Landroid/app/enterprise/EnterpriseDeviceManager;

.field private mEasyOneHandEnabled:I

.field mEnableShiftMenuBugReports:Z

.field volatile mEndCallKeyHandled:Z

.field volatile mEndCallKeyPressCounter:I

.field private final mEndCallLongPress:Ljava/lang/Runnable;

.field mEndcallBehavior:I

.field mFakeFocusedWindow:Landroid/view/WindowManagerPolicy$WindowState;

.field private final mFallbackActions:Landroid/util/SparseArray;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Landroid/util/SparseArray",
            "<",
            "Landroid/view/KeyCharacterMap$FallbackAction;",
            ">;"
        }
    .end annotation
.end field

.field mFixedTaskId:I

.field mFocusedApp:Landroid/view/IApplicationToken;

.field mFocusedWindow:Landroid/view/WindowManagerPolicy$WindowState;

.field private mFoldingAndWrapAroundLock:Ljava/lang/Object;

.field public mFoldingState:I

.field mForceClearedSystemUiFlags:I

.field private mForceDefaultOrientation:Z

.field private mForceHideStatusBarForCocktail:Z

.field mForceStatusBar:Z

.field mForceStatusBarFromKeyguard:Z

.field mForceStatusBarFromSViewCover:Z

.field private mForceStatusBarTransparent:Z

.field mForceUserActivityTimeoutWin:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList",
            "<",
            "Landroid/view/WindowManagerPolicy$WindowState;",
            ">;"
        }
    .end annotation
.end field

.field mForcingShowNavBar:Z

.field mForcingShowNavBarLayer:I

.field mFrontLEDManager:Lcom/samsung/android/FrontLED/IFrontLEDManager;

.field mGlobalActions:Lcom/android/server/policy/GlobalActions;

.field private mGlobalKeyManager:Lcom/android/server/policy/GlobalKeyManager;

.field private mGoToSleepOnButtonPressTheaterMode:Z

.field private mHDMIObserver:Landroid/os/UEventObserver;

.field mHandler:Landroid/os/Handler;

.field mHasNavigationBar:Z

.field mHasSoftInput:Z

.field mHaveBuiltInKeyboard:Z

.field mHavePendingMediaKeyRepeatWithWakeLock:Z

.field mHdmiControl:Lcom/android/server/policy/PhoneWindowManager$HdmiControl;

.field mHdmiPlugged:Z

.field private final mHiddenNavPanic:Ljava/lang/Runnable;

.field mHideLockScreen:Z

.field mHideLockScreenByCover:Z

.field final mHideNavInputEventReceiverFactory:Landroid/view/InputEventReceiver$Factory;

.field private mHideSDKeyguard:Z

.field mHideSViewCover:I

.field mHideSViewCoverWindowState:Landroid/view/WindowManagerPolicy$WindowState;

.field mHomeConsumed:Z

.field mHomeDoubleTapPending:Z

.field private final mHomeDoubleTapTimeoutRunnable:Ljava/lang/Runnable;

.field mHomeIntent:Landroid/content/Intent;

.field mHomeLongPressCanceled:Z

.field mHomePressed:Z

.field private mImmersiveModeConfirmation:Lcom/android/server/policy/ImmersiveModeConfirmation;

.field mIncallPowerBehavior:I

.field mInputConsumer:Landroid/view/WindowManagerPolicy$InputConsumer;

.field mInputMethod:Landroid/view/WindowManagerPolicy$WindowState;

.field private mIsDefaultKeyguardRotationAnmationAlwaysUsed:Z

.field private mIsKNOX2Supported:Z

.field private mIsNightClockShow:Z

.field private mIsOWCSetting:Z

.field mIsSupportFlipCover:Z

.field mIsSupportSViewCover:Z

.field mKeyboardTapVibePattern:[J

.field mKeyguardDelegate:Lcom/android/server/policy/keyguard/KeyguardServiceDelegate;

.field mKeyguardDrawComplete:Z

.field final mKeyguardDrawnCallback:Lcom/android/server/policy/keyguard/KeyguardServiceDelegate$DrawnListener;

.field private mKeyguardDrawnOnce:Z

.field private mKeyguardHidden:Z

.field volatile mKeyguardOccluded:Z

.field private mKeyguardScrim:Landroid/view/WindowManagerPolicy$WindowState;

.field mKeyguardSecure:Z

.field mKeyguardSecureIncludingHidden:Z

.field private mKeyguardShowingState:Z

.field mLandscapeRotation:I

.field mLanguageSwitchKeyPressed:Z

.field mLastCoverAppCovered:Z

.field mLastFocusNeedsMenu:Z

.field mLastInputMethodTargetWindow:Landroid/view/WindowManagerPolicy$WindowState;

.field mLastInputMethodWindow:Landroid/view/WindowManagerPolicy$WindowState;

.field mLastSystemUiFlags:I

.field private mLastWinShowWhenLocked:Landroid/view/WindowManagerPolicy$WindowState;

.field private mLastWrapAroundMode:I

.field mLaunchHomeFromSubHotKey:Z

.field mLidControlsSleep:Z

.field mLidKeyboardAccessibility:I

.field mLidNavigationAccessibility:I

.field mLidOpenRotation:I

.field public mLidState:I

.field private final mLock:Ljava/lang/Object;

.field private mLockPatternUtils:Lcom/android/internal/widget/LockPatternUtils;

.field mLockScreenTimeout:I

.field mLockScreenTimerActive:Z

.field private mLockTaskModeState:I

.field private final mLogDecelerateInterpolator:Lcom/android/server/policy/LogDecelerateInterpolator;

.field private mLongPressOnHomeBehavior:I

.field mLongPressOnPowerBehavior:I

.field mLongPressPoweronTime:I

.field mLongPressVibePattern:[J

.field mMirrorLinkDockEnablesAccelerometer:Z

.field mMirrorLinkDockIntent:Landroid/content/Intent;

.field mMirrorlinkDockRotation:I

.field public mMobileKeyboardEnabled:Z

.field private mMobileKeyboardHeight:I

.field mMouseConnectReceiver:Landroid/content/BroadcastReceiver;

.field mMouseConnectedDock:I

.field mMouseDockedFlag:Z

.field private mMultiPhoneWindowManager:Lcom/android/server/policy/multiwindow/MultiPhoneWindowManager;

.field private mMultitapKeyManager:Lcom/android/server/policy/sec/MultitapKeyManager;

.field mMultiuserReceiver:Landroid/content/BroadcastReceiver;

.field mNavigationBar:Landroid/view/WindowManagerPolicy$WindowState;

.field mNavigationBarCanMove:Z

.field private final mNavigationBarController:Lcom/android/server/policy/BarController;

.field mNavigationBarHeightForRotation:[I

.field mNavigationBarOnBottom:Z

.field mNavigationBarWidthForRotation:[I

.field private mNeedTriggerOWC:Z

.field private mNightClock:Landroid/view/WindowManagerPolicy$WindowState;

.field mOldMouseDockedValue:Z

.field mOpenByNotification:Z

.field mOrientationListener:Lcom/android/server/policy/PhoneWindowManager$MyOrientationListener;

.field mOrientationSensorEnabled:Z

.field mOriginalDockBottom:I

.field mOriginalDockLeft:I

.field mOriginalDockRight:I

.field mOriginalDockTop:I

.field mOriginalStableBottom:I

.field mOriginalStableFullscreenBottom:I

.field mOriginalStableFullscreenLeft:I

.field mOriginalStableFullscreenRight:I

.field mOriginalStableFullscreenTop:I

.field mOriginalStableLeft:I

.field mOriginalStableRight:I

.field mOriginalStableTop:I

.field mOriginalSystemBottom:I

.field mOriginalSystemLeft:I

.field mOriginalSystemRight:I

.field mOriginalSystemTop:I

.field mOriginalUnrestrictedScreenHeight:I

.field mOriginalUnrestrictedScreenLeft:I

.field mOriginalUnrestrictedScreenTop:I

.field mOriginalUnrestrictedScreenWidth:I

.field mOverscanBottom:I

.field mOverscanLeft:I

.field mOverscanRight:I

.field mOverscanScreenHeight:I

.field mOverscanScreenLeft:I

.field mOverscanScreenTop:I

.field mOverscanScreenWidth:I

.field mOverscanTop:I

.field mPanelOrientation:I

.field mPendingMetaAction:Z

.field private mPendingPanicGestureUptime:J

.field mPendingPowerKeyUpCanceled:Z

.field private mPersonaManager:Landroid/os/PersonaManager;

.field private mPersonaManagerService:Lcom/android/server/pm/PersonaManagerService;

.field public mPhoneStateListener:Landroid/telephony/PhoneStateListener;

.field mPointerLocationMode:I

.field mPointerLocationView:Lcom/android/internal/widget/PointerLocationView;

.field mPointerLocationViewOnSubscreen:Lcom/android/internal/widget/PointerLocationView;

.field mPortraitRotation:I

.field volatile mPowerKeyHandled:Z

.field volatile mPowerKeyPressCounter:I

.field private mPowerKeyTime:J

.field mPowerKeyWakeLock:Landroid/os/PowerManager$WakeLock;

.field mPowerManager:Landroid/os/PowerManager;

.field mPowerManagerInternal:Landroid/os/PowerManagerInternal;

.field mPreloadedRecentApps:Z

.field mPresentationFlag:Z

.field mPresentationStartReceiver:Landroid/content/BroadcastReceiver;

.field mPresentationStopReceiver:Landroid/content/BroadcastReceiver;

.field mQuickBootWakeLock:Landroid/os/PowerManager$WakeLock;

.field mRecentAppsHeldModifiers:I

.field mRecentsVisible:Z

.field mReconfigureDebugReceiver:Landroid/content/BroadcastReceiver;

.field mResettingSystemUiFlags:I

.field mRestrictedOverscanScreenHeight:I

.field mRestrictedOverscanScreenLeft:I

.field mRestrictedOverscanScreenTop:I

.field mRestrictedOverscanScreenWidth:I

.field mRestrictedScreenHeight:I

.field mRestrictedScreenLeft:I

.field mRestrictedScreenTop:I

.field mRestrictedScreenWidth:I

.field private mSPWM:Lcom/android/server/policy/sec/SamsungPhoneWindowManager;

.field mSViewCoverDockBottom:I

.field mSViewCoverDockLeft:I

.field mSViewCoverDockRight:I

.field mSViewCoverDockTop:I

.field mSViewCoverStableBottom:I

.field mSViewCoverStableFullscreenBottom:I

.field mSViewCoverStableFullscreenLeft:I

.field mSViewCoverStableFullscreenRight:I

.field mSViewCoverStableFullscreenTop:I

.field mSViewCoverStableLeft:I

.field mSViewCoverStableRight:I

.field mSViewCoverStableTop:I

.field mSViewCoverSystemBottom:I

.field mSViewCoverSystemLeft:I

.field mSViewCoverSystemRight:I

.field mSViewCoverSystemTop:I

.field mSViewCoverUnrestrictedScreenHeight:I

.field mSViewCoverUnrestrictedScreenLeft:I

.field mSViewCoverUnrestrictedScreenTop:I

.field mSViewCoverUnrestrictedScreenWidth:I

.field mSafeMode:Z

.field mSafeModeDisabledVibePattern:[J

.field mSafeModeEnabledVibePattern:[J

.field mScreenLockTimeout:Lcom/android/server/policy/PhoneWindowManager$ScreenLockTimeout;

.field mScreenOffSleepToken:Landroid/app/ActivityManagerInternal$SleepToken;

.field mScreenOnEarly:Z

.field mScreenOnFully:Z

.field mScreenOnListener:Landroid/view/WindowManagerPolicy$ScreenOnListener;

.field private mScreenshotChordEnabled:Z

.field private mScreenshotChordPowerKeyTime:J

.field private mScreenshotChordPowerKeyTriggered:Z

.field private mScreenshotChordVolumeDownKeyConsumed:Z

.field private mScreenshotChordVolumeDownKeyTime:J

.field private mScreenshotChordVolumeDownKeyTriggered:Z

.field private mScreenshotChordVolumeUpKeyTriggered:Z

.field mScreenshotConnection:Landroid/content/ServiceConnection;

.field private final mScreenshotForLog:Ljava/lang/Runnable;

.field final mScreenshotLock:Ljava/lang/Object;

.field private final mScreenshotRunnable:Ljava/lang/Runnable;

.field final mScreenshotTimeout:Ljava/lang/Runnable;

.field mSearchKeyShortcutPending:Z

.field mSearchManager:Landroid/app/SearchManager;

.field mSeascapeRotation:I

.field mSecondLcdLastRotation:I

.field mSecondLcdUserRotationMode:I

.field private mSecureDismissingKeyguard:Z

.field final mServiceAquireLock:Ljava/lang/Object;

.field mSettingsObserver:Lcom/android/server/policy/PhoneWindowManager$SettingsObserver;

.field mShortPressOnPowerBehavior:I

.field mShortPressOnSleepBehavior:I

.field mShortcutManager:Lcom/android/server/policy/ShortcutManager;

.field mShowFullStatusBar:Z

.field mShowStatusBarByNotification:Ljava/lang/Runnable;

.field mShowingDream:Z

.field mShowingLockscreen:Z

.field mShowingSViewCover:Z

.field private mSideKeyPanelEnabled:I

.field mStableBottom:I

.field mStableFullscreenBottom:I

.field mStableFullscreenLeft:I

.field mStableFullscreenRight:I

.field mStableFullscreenTop:I

.field mStableLeft:I

.field mStableRight:I

.field mStableTop:I

.field mStarKeyLongPressConsumed:Z

.field mStatusBar:Landroid/view/WindowManagerPolicy$WindowState;

.field private final mStatusBarController:Lcom/android/server/policy/StatusBarController;

.field mStatusBarHeight:I

.field mStatusBarLayer:I

.field mStatusBarService:Lcom/android/internal/statusbar/IStatusBarService;

.field mSubScreenOffSleepToken:Landroid/app/ActivityManagerInternal$SleepToken;

.field mSubScreenOnEarly:Z

.field mSubScreenOnFully:Z

.field mSupportAutoRotation:Z

.field private mSupportLongPressPowerWhenNonInteractive:Z

.field mSystemBooted:Z

.field mSystemBottom:I

.field private mSystemGestures:Lcom/android/server/policy/SystemGesturesPointerEventListener;

.field private mSystemKeyManager:Lcom/android/server/policy/sec/SystemKeyManager;

.field mSystemLeft:I

.field mSystemReady:Z

.field mSystemRight:I

.field mSystemTop:I

.field mSystemUIReplacedReceiver:Landroid/content/BroadcastReceiver;

.field mTelephonyManager:Landroid/telephony/TelephonyManager;

.field mToolBoxMode:I

.field mToolBoxPackageList:Ljava/lang/String;

.field mTopFullscreenOpaqueOrDimmingWindowState:Landroid/view/WindowManagerPolicy$WindowState;

.field mTopFullscreenOpaqueWindowState:Landroid/view/WindowManagerPolicy$WindowState;

.field mTopIsFullscreen:Z

.field private mTouchExplorationEnabled:Z

.field mTranslucentDecorEnabled:Z

.field mTriplePressOnPowerBehavior:I

.field private mTspStateManager:Lcom/android/server/policy/sec/TspStateManager;

.field mTwToolBoxFloatingViewer:Lcom/samsung/android/toolbox/TwToolBoxFloatingViewer;

.field mTwToolBoxPointerEventListener:Lcom/android/server/policy/PhoneWindowManager$TwToolBoxPointerEventListener;

.field mUiMode:I

.field mUiModeManager:Landroid/app/IUiModeManager;

.field mUndockedHdmiRotation:I

.field mUnrestrictedScreenHeight:I

.field mUnrestrictedScreenLeft:I

.field mUnrestrictedScreenTop:I

.field mUnrestrictedScreenWidth:I

.field mUpsideDownRotation:I

.field mUseTvRouting:Z

.field mUserRotation:I

.field mUserRotationMode:I

.field mVibrator:Landroid/os/Vibrator;

.field mVirtualKeyVibePattern:[J

.field mVoiceContentBottom:I

.field mVoiceContentLeft:I

.field mVoiceContentRight:I

.field mVoiceContentTop:I

.field private mVolumeUpKeyConsumedByScreenshotChord:Z

.field private mVolumeUpKeyTime:J

.field mWakeGestureEnabledSetting:Z

.field mWakeGestureListener:Lcom/android/server/policy/PhoneWindowManager$MyWakeGestureListener;

.field public mWatchLaunching:Z

.field mWifiDisplayConnected:Z

.field mWifiDisplayCustomRotation:I

.field mWifiDisplayReceiver:Landroid/content/BroadcastReceiver;

.field private mWinDismissingKeyguard:Landroid/view/WindowManagerPolicy$WindowState;

.field private mWinShowWhenLocked:Landroid/view/WindowManagerPolicy$WindowState;

.field mWindowManager:Landroid/view/IWindowManager;

.field final mWindowManagerDrawCallback:Ljava/lang/Runnable;

.field mWindowManagerDrawComplete:Z

.field mWindowManagerFuncs:Landroid/view/WindowManagerPolicy$WindowManagerFuncs;

.field mWindowManagerInternal:Landroid/view/WindowManagerInternal;


# direct methods
.method static constructor <clinit>()V
    .registers 4

    .prologue
    const/4 v0, 0x1

    const/4 v1, 0x0

    .line 307
    invoke-static {}, Landroid/os/Debug;->isProductShip()I

    move-result v2

    if-ne v2, v0, :cond_9

    move v0, v1

    :cond_9
    sput-boolean v0, SAFE_DEBUG:Z

    .line 309
    sput-boolean v1, DEBUG_INPUT:Z

    .line 310
    sput-boolean v1, DEBUG_KEYGUARD:Z

    .line 311
    sput-boolean v1, DEBUG_LAYOUT:Z

    .line 313
    sget-boolean v0, SAFE_DEBUG:Z

    sput-boolean v0, DEBUG_WAKEUP:Z

    .line 384
    new-instance v0, Landroid/media/AudioAttributes$Builder;

    invoke-direct {v0}, Landroid/media/AudioAttributes$Builder;-><init>()V

    const/4 v2, 0x4

    invoke-virtual {v0, v2}, Landroid/media/AudioAttributes$Builder;->setContentType(I)Landroid/media/AudioAttributes$Builder;

    move-result-object v0

    const/16 v2, 0xd

    invoke-virtual {v0, v2}, Landroid/media/AudioAttributes$Builder;->setUsage(I)Landroid/media/AudioAttributes$Builder;

    move-result-object v0

    invoke-virtual {v0}, Landroid/media/AudioAttributes$Builder;->build()Landroid/media/AudioAttributes;

    move-result-object v0

    sput-object v0, VIBRATION_ATTRIBUTES:Landroid/media/AudioAttributes;

    .line 421
    new-instance v0, Landroid/util/SparseArray;

    invoke-direct {v0}, Landroid/util/SparseArray;-><init>()V

    sput-object v0, sApplicationLaunchKeyCategories:Landroid/util/SparseArray;

    .line 422
    sget-object v0, sApplicationLaunchKeyCategories:Landroid/util/SparseArray;

    const/16 v2, 0x40

    const-string v3, "android.intent.category.APP_BROWSER"

    invoke-virtual {v0, v2, v3}, Landroid/util/SparseArray;->append(ILjava/lang/Object;)V

    .line 424
    sget-object v0, sApplicationLaunchKeyCategories:Landroid/util/SparseArray;

    const/16 v2, 0x41

    const-string v3, "android.intent.category.APP_EMAIL"

    invoke-virtual {v0, v2, v3}, Landroid/util/SparseArray;->append(ILjava/lang/Object;)V

    .line 426
    sget-object v0, sApplicationLaunchKeyCategories:Landroid/util/SparseArray;

    const/16 v2, 0xcf

    const-string v3, "android.intent.category.APP_CONTACTS"

    invoke-virtual {v0, v2, v3}, Landroid/util/SparseArray;->append(ILjava/lang/Object;)V

    .line 428
    sget-object v0, sApplicationLaunchKeyCategories:Landroid/util/SparseArray;

    const/16 v2, 0xd0

    const-string v3, "android.intent.category.APP_CALENDAR"

    invoke-virtual {v0, v2, v3}, Landroid/util/SparseArray;->append(ILjava/lang/Object;)V

    .line 430
    sget-object v0, sApplicationLaunchKeyCategories:Landroid/util/SparseArray;

    const/16 v2, 0xd1

    const-string v3, "android.intent.category.APP_MUSIC"

    invoke-virtual {v0, v2, v3}, Landroid/util/SparseArray;->append(ILjava/lang/Object;)V

    .line 432
    sget-object v0, sApplicationLaunchKeyCategories:Landroid/util/SparseArray;

    const/16 v2, 0xd2

    const-string v3, "android.intent.category.APP_CALCULATOR"

    invoke-virtual {v0, v2, v3}, Landroid/util/SparseArray;->append(ILjava/lang/Object;)V

    .line 434
    sget-object v0, sApplicationLaunchKeyCategories:Landroid/util/SparseArray;

    const/16 v2, 0x430

    const-string v3, "android.intent.category.APP_MESSAGING"

    invoke-virtual {v0, v2, v3}, Landroid/util/SparseArray;->append(ILjava/lang/Object;)V

    .line 825
    new-instance v0, Landroid/graphics/Rect;

    invoke-direct {v0}, Landroid/graphics/Rect;-><init>()V

    sput-object v0, mTmpParentFrame:Landroid/graphics/Rect;

    .line 826
    new-instance v0, Landroid/graphics/Rect;

    invoke-direct {v0}, Landroid/graphics/Rect;-><init>()V

    sput-object v0, mTmpDisplayFrame:Landroid/graphics/Rect;

    .line 827
    new-instance v0, Landroid/graphics/Rect;

    invoke-direct {v0}, Landroid/graphics/Rect;-><init>()V

    sput-object v0, mTmpOverscanFrame:Landroid/graphics/Rect;

    .line 828
    new-instance v0, Landroid/graphics/Rect;

    invoke-direct {v0}, Landroid/graphics/Rect;-><init>()V

    sput-object v0, mTmpContentFrame:Landroid/graphics/Rect;

    .line 829
    new-instance v0, Landroid/graphics/Rect;

    invoke-direct {v0}, Landroid/graphics/Rect;-><init>()V

    sput-object v0, mTmpVisibleFrame:Landroid/graphics/Rect;

    .line 830
    new-instance v0, Landroid/graphics/Rect;

    invoke-direct {v0}, Landroid/graphics/Rect;-><init>()V

    sput-object v0, mTmpDecorFrame:Landroid/graphics/Rect;

    .line 831
    new-instance v0, Landroid/graphics/Rect;

    invoke-direct {v0}, Landroid/graphics/Rect;-><init>()V

    sput-object v0, mTmpStableFrame:Landroid/graphics/Rect;

    .line 832
    new-instance v0, Landroid/graphics/Rect;

    invoke-direct {v0}, Landroid/graphics/Rect;-><init>()V

    sput-object v0, mTmpNavigationFrame:Landroid/graphics/Rect;

    .line 833
    new-instance v0, Landroid/graphics/Rect;

    invoke-direct {v0}, Landroid/graphics/Rect;-><init>()V

    sput-object v0, mTmpOutsetFrame:Landroid/graphics/Rect;

    .line 1061
    sget-boolean v0, DEBUG_LAYOUT:Z

    sput-boolean v0, DEBUG_DUAL_STATUSBAR:Z

    .line 1063
    sput v1, mScreenTurnDisplayId:I

    .line 1102
    new-instance v0, Landroid/graphics/Rect;

    invoke-direct {v0}, Landroid/graphics/Rect;-><init>()V

    sput-object v0, mTmpCarModeFrame:Landroid/graphics/Rect;

    .line 5035
    const/4 v0, 0x2

    new-array v0, v0, [I

    fill-array-data v0, :array_c8

    sput-object v0, WINDOW_TYPES_WHERE_HOME_DOESNT_WORK:[I

    .line 8576
    sput-boolean v1, wasTopFullscreen:Z

    return-void

    .line 5035
    :array_c8
    .array-data 4
        0x7d3
        0x7da
    .end array-data
.end method

.method public constructor <init>()V
    .registers 10

    .prologue
    const/4 v5, 0x2

    const/4 v3, 0x1

    const/4 v2, -0x1

    const/4 v8, 0x0

    const/4 v7, 0x0

    .line 304
    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    .line 446
    new-instance v0, Ljava/lang/Object;

    invoke-direct {v0}, Ljava/lang/Object;-><init>()V

    iput-object v0, p0, mLock:Ljava/lang/Object;

    .line 458
    new-instance v0, Ljava/lang/Object;

    invoke-direct {v0}, Ljava/lang/Object;-><init>()V

    iput-object v0, p0, mServiceAquireLock:Ljava/lang/Object;

    .line 493
    iput-boolean v7, p0, mEnableShiftMenuBugReports:Z

    .line 496
    iput-object v8, p0, mStatusBar:Landroid/view/WindowManagerPolicy$WindowState;

    .line 497
    iput-object v8, p0, mInputMethod:Landroid/view/WindowManagerPolicy$WindowState;

    .line 499
    iput-object v8, p0, mNavigationBar:Landroid/view/WindowManagerPolicy$WindowState;

    .line 500
    iput-boolean v7, p0, mHasNavigationBar:Z

    .line 501
    iput-boolean v7, p0, mCanHideNavigationBar:Z

    .line 502
    iput-boolean v7, p0, mNavigationBarCanMove:Z

    .line 503
    iput-boolean v3, p0, mNavigationBarOnBottom:Z

    .line 504
    const/4 v0, 0x4

    new-array v0, v0, [I

    iput-object v0, p0, mNavigationBarHeightForRotation:[I

    .line 505
    const/4 v0, 0x4

    new-array v0, v0, [I

    iput-object v0, p0, mNavigationBarWidthForRotation:[I

    .line 508
    new-instance v0, Ljava/util/HashSet;

    invoke-direct {v0}, Ljava/util/HashSet;-><init>()V

    iput-object v0, p0, mAppsToBeHiddenBySViewCover:Ljava/util/HashSet;

    .line 514
    iput-boolean v7, p0, mIsSupportFlipCover:Z

    .line 515
    iput-boolean v7, p0, mIsSupportSViewCover:Z

    .line 520
    iput-object v8, p0, mHideSViewCoverWindowState:Landroid/view/WindowManagerPolicy$WindowState;

    .line 525
    iput v7, p0, mHideSViewCover:I

    .line 526
    iput-boolean v7, p0, mHideLockScreenByCover:Z

    .line 557
    iput-boolean v7, p0, mLastCoverAppCovered:Z

    .line 571
    iput v2, p0, mEasyOneHandEnabled:I

    .line 575
    iput v7, p0, mSideKeyPanelEnabled:I

    .line 576
    iput v7, p0, mCocktail180RotationEnabled:I

    .line 577
    iput v2, p0, mCurrentDisplayRotation:I

    .line 584
    new-instance v0, Lcom/android/server/policy/PhoneWindowManager$1;

    invoke-direct {v0, p0}, Lcom/android/server/policy/PhoneWindowManager$1;-><init>(Lcom/android/server/policy/PhoneWindowManager;)V

    iput-object v0, p0, mWindowManagerDrawCallback:Ljava/lang/Runnable;

    .line 591
    new-instance v0, Lcom/android/server/policy/PhoneWindowManager$2;

    invoke-direct {v0, p0}, Lcom/android/server/policy/PhoneWindowManager$2;-><init>(Lcom/android/server/policy/PhoneWindowManager;)V

    iput-object v0, p0, mKeyguardDrawnCallback:Lcom/android/server/policy/keyguard/KeyguardServiceDelegate$DrawnListener;

    .line 601
    iput-object v8, p0, mLastInputMethodWindow:Landroid/view/WindowManagerPolicy$WindowState;

    .line 602
    iput-object v8, p0, mLastInputMethodTargetWindow:Landroid/view/WindowManagerPolicy$WindowState;

    .line 627
    iput v2, p0, mLidState:I

    .line 628
    iput v2, p0, mCameraLensCoverState:I

    .line 638
    iput v7, p0, mDockMode:I

    .line 644
    iput v7, p0, mMouseConnectedDock:I

    .line 645
    const/4 v0, 0x3

    new-array v0, v0, [Ljava/lang/String;

    const-string v1, "com.samsung.sec.android.clockpackage.alarm.ALARM_STARTED_IN_ALERT"

    aput-object v1, v0, v7

    const-string v1, "com.android.deskclock.ALARM_ALERT"

    aput-object v1, v0, v3

    const-string v1, "com.samsung.sec.android.clockpackage.alarm.ALARM_ALERT"

    aput-object v1, v0, v5

    iput-object v0, p0, ALARM_STARTED:[Ljava/lang/String;

    .line 650
    const/4 v0, 0x3

    new-array v0, v0, [Ljava/lang/String;

    const-string v1, "com.samsung.sec.android.clockpackage.alarm.ALARM_STOPPED_IN_ALERT"

    aput-object v1, v0, v7

    const-string v1, "com.android.deskclock.ALARM_DONE"

    aput-object v1, v0, v3

    const-string v1, "com.samsung.sec.android.clockpackage.alarm.ALARM_STOP"

    aput-object v1, v0, v5

    iput-object v0, p0, ALARM_STOPPED:[Ljava/lang/String;

    .line 656
    iput-boolean v7, p0, mAlarmReceivedFlag:Z

    .line 657
    iput-boolean v7, p0, mOldMouseDockedValue:Z

    .line 658
    iput-boolean v7, p0, mMouseDockedFlag:Z

    .line 659
    iput-boolean v7, p0, mPresentationFlag:Z

    .line 673
    iput-boolean v7, p0, mForceDefaultOrientation:Z

    .line 675
    iput v7, p0, mUserRotationMode:I

    .line 676
    iput v7, p0, mUserRotation:I

    .line 678
    iput v7, p0, mSecondLcdUserRotationMode:I

    .line 679
    iput v2, p0, mSecondLcdLastRotation:I

    .line 684
    iput v2, p0, mAllowAllRotations:I

    .line 702
    iput-boolean v7, p0, mOrientationSensorEnabled:Z

    .line 703
    iput v2, p0, mCurrentAppOrientation:I

    .line 704
    iput-boolean v7, p0, mHasSoftInput:Z

    .line 705
    iput-boolean v3, p0, mTranslucentDecorEnabled:Z

    .line 708
    iput v7, p0, mPointerLocationMode:I

    .line 710
    const/16 v0, 0x1f4

    iput v0, p0, mLongPressPoweronTime:I

    .line 717
    new-instance v0, Ljava/util/ArrayList;

    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    iput-object v0, p0, mForceUserActivityTimeoutWin:Ljava/util/ArrayList;

    .line 720
    iput v7, p0, mBeforeKeyDown:I

    .line 723
    iput-boolean v3, p0, mCustomDialog:Z

    .line 725
    invoke-static {}, Landroid/graphics/Region;->obtain()Landroid/graphics/Region;

    move-result-object v0

    iput-object v0, p0, cursorWindowTouchableRegion:Landroid/graphics/Region;

    .line 746
    iput-boolean v3, p0, isElasticEnabled:Z

    .line 750
    iput-boolean v7, p0, isFrontLEDMgrEnabled:Z

    .line 762
    iput v7, p0, mToolBoxMode:I

    .line 763
    const-string v0, ""

    iput-object v0, p0, mToolBoxPackageList:Ljava/lang/String;

    .line 814
    iput v7, p0, mResettingSystemUiFlags:I

    .line 816
    iput v7, p0, mForceClearedSystemUiFlags:I

    .line 819
    iput-boolean v7, p0, mLastFocusNeedsMenu:Z

    .line 823
    iput-object v8, p0, mInputConsumer:Landroid/view/WindowManagerPolicy$InputConsumer;

    .line 837
    new-instance v0, Ljava/util/HashSet;

    invoke-direct {v0}, Ljava/util/HashSet;-><init>()V

    iput-object v0, p0, mAppsToBeHidden:Ljava/util/HashSet;

    .line 838
    new-instance v0, Ljava/util/HashSet;

    invoke-direct {v0}, Ljava/util/HashSet;-><init>()V

    iput-object v0, p0, mAppsThatDismissKeyguard:Ljava/util/HashSet;

    .line 851
    iput v7, p0, mDismissKeyguard:I

    .line 875
    new-instance v0, Ljava/util/ArrayList;

    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    iput-object v0, p0, mAppsShowWhenLocked:Ljava/util/ArrayList;

    .line 899
    iput-boolean v7, p0, mStarKeyLongPressConsumed:Z

    .line 909
    iput-boolean v7, p0, mWatchLaunching:Z

    .line 919
    iput v7, p0, mLandscapeRotation:I

    .line 920
    iput v7, p0, mSeascapeRotation:I

    .line 921
    iput v7, p0, mPortraitRotation:I

    .line 922
    iput v7, p0, mUpsideDownRotation:I

    .line 924
    iput v7, p0, mOverscanLeft:I

    .line 925
    iput v7, p0, mOverscanTop:I

    .line 926
    iput v7, p0, mOverscanRight:I

    .line 927
    iput v7, p0, mOverscanBottom:I

    .line 930
    iput v7, p0, mPanelOrientation:I

    .line 987
    iput-boolean v7, p0, mMobileKeyboardEnabled:Z

    .line 1003
    new-instance v0, Landroid/util/SparseArray;

    invoke-direct {v0}, Landroid/util/SparseArray;-><init>()V

    iput-object v0, p0, mFallbackActions:Landroid/util/SparseArray;

    .line 1006
    new-instance v0, Lcom/android/server/policy/LogDecelerateInterpolator;

    const/16 v1, 0x64

    invoke-direct {v0, v1, v7}, Lcom/android/server/policy/LogDecelerateInterpolator;-><init>(II)V

    iput-object v0, p0, mLogDecelerateInterpolator:Lcom/android/server/policy/LogDecelerateInterpolator;

    .line 1023
    iput-boolean v7, p0, mWifiDisplayConnected:Z

    .line 1024
    iput v2, p0, mWifiDisplayCustomRotation:I

    .line 1064
    iput-boolean v7, p0, mSubScreenOnEarly:Z

    .line 1065
    iput-boolean v7, p0, mSubScreenOnFully:Z

    .line 1069
    new-instance v0, Lcom/samsung/android/multidisplay/common/FallbackArrayList;

    invoke-direct {v0}, Lcom/samsung/android/multidisplay/common/FallbackArrayList;-><init>()V

    iput-object v0, p0, mDisplayWindowPolicy:Lcom/samsung/android/multidisplay/common/FallbackArrayList;

    .line 1073
    iput v2, p0, mFixedTaskId:I

    .line 1075
    iput-boolean v7, p0, mLaunchHomeFromSubHotKey:Z

    .line 1077
    new-instance v0, Ljava/lang/Object;

    invoke-direct {v0}, Ljava/lang/Object;-><init>()V

    iput-object v0, p0, mFoldingAndWrapAroundLock:Ljava/lang/Object;

    .line 1078
    iput v7, p0, mLastWrapAroundMode:I

    .line 1079
    iput v2, p0, mFoldingState:I

    .line 1085
    iput-boolean v7, p0, mHideSDKeyguard:Z

    .line 1089
    iput-boolean v7, p0, mIsKNOX2Supported:Z

    .line 1090
    iput-object v8, p0, mPersonaManager:Landroid/os/PersonaManager;

    .line 1095
    iput-boolean v7, p0, mIsNightClockShow:Z

    .line 1104
    iput-boolean v7, p0, mCarModeBarOnBottom:Z

    .line 1107
    const/16 v0, 0x64

    iput v0, p0, mBatteryLevel:I

    .line 1108
    iput-boolean v7, p0, bIsCharging:Z

    .line 1111
    iput-boolean v7, p0, mNeedTriggerOWC:Z

    .line 1112
    iput-boolean v7, p0, mIsOWCSetting:Z

    .line 1298
    new-instance v0, Lcom/android/server/policy/PhoneWindowManager$3;

    invoke-direct {v0, p0}, Lcom/android/server/policy/PhoneWindowManager$3;-><init>(Lcom/android/server/policy/PhoneWindowManager;)V

    iput-object v0, p0, mHDMIObserver:Landroid/os/UEventObserver;

    .line 1444
    new-instance v0, Lcom/android/server/policy/StatusBarController;

    invoke-direct {v0}, Lcom/android/server/policy/StatusBarController;-><init>()V

    iput-object v0, p0, mStatusBarController:Lcom/android/server/policy/StatusBarController;

    .line 1446
    new-instance v0, Lcom/android/server/policy/BarController;

    const-string v1, "NavigationBar"

    const/high16 v2, 0x8000000

    const/high16 v3, 0x20000000

    const/high16 v4, -0x80000000

    const/high16 v6, 0x8000000

    invoke-direct/range {v0 .. v6}, Lcom/android/server/policy/BarController;-><init>(Ljava/lang/String;IIIII)V

    iput-object v0, p0, mNavigationBarController:Lcom/android/server/policy/BarController;

    .line 1458
    const/4 v0, 0x4

    new-array v0, v0, [Lcom/android/server/policy/SystemGesturesPointerEventListener;

    iput-object v0, p0, mDisplaySystemGestures:[Lcom/android/server/policy/SystemGesturesPointerEventListener;

    .line 2153
    new-instance v0, Lcom/android/server/policy/PhoneWindowManager$4;

    invoke-direct {v0, p0}, Lcom/android/server/policy/PhoneWindowManager$4;-><init>(Lcom/android/server/policy/PhoneWindowManager;)V

    iput-object v0, p0, mEndCallLongPress:Ljava/lang/Runnable;

    .line 2183
    new-instance v0, Lcom/android/server/policy/PhoneWindowManager$5;

    invoke-direct {v0, p0}, Lcom/android/server/policy/PhoneWindowManager$5;-><init>(Lcom/android/server/policy/PhoneWindowManager;)V

    iput-object v0, p0, mScreenshotRunnable:Ljava/lang/Runnable;

    .line 2190
    new-instance v0, Lcom/android/server/policy/PhoneWindowManager$6;

    invoke-direct {v0, p0}, Lcom/android/server/policy/PhoneWindowManager$6;-><init>(Lcom/android/server/policy/PhoneWindowManager;)V

    iput-object v0, p0, mScreenshotForLog:Ljava/lang/Runnable;

    .line 2343
    new-instance v0, Lcom/android/server/policy/PhoneWindowManager$8;

    invoke-direct {v0, p0}, Lcom/android/server/policy/PhoneWindowManager$8;-><init>(Lcom/android/server/policy/PhoneWindowManager;)V

    iput-object v0, p0, mHomeDoubleTapTimeoutRunnable:Ljava/lang/Runnable;

    .line 2985
    new-instance v0, Lcom/android/server/policy/PhoneWindowManager$12;

    invoke-direct {v0, p0}, Lcom/android/server/policy/PhoneWindowManager$12;-><init>(Lcom/android/server/policy/PhoneWindowManager;)V

    iput-object v0, p0, mReconfigureDebugReceiver:Landroid/content/BroadcastReceiver;

    .line 6042
    new-instance v0, Lcom/android/server/policy/PhoneWindowManager$15;

    invoke-direct {v0, p0}, Lcom/android/server/policy/PhoneWindowManager$15;-><init>(Lcom/android/server/policy/PhoneWindowManager;)V

    iput-object v0, p0, mClearHideNavigationFlag:Ljava/lang/Runnable;

    .line 6132
    new-instance v0, Lcom/android/server/policy/PhoneWindowManager$16;

    invoke-direct {v0, p0}, Lcom/android/server/policy/PhoneWindowManager$16;-><init>(Lcom/android/server/policy/PhoneWindowManager;)V

    iput-object v0, p0, mHideNavInputEventReceiverFactory:Landroid/view/InputEventReceiver$Factory;

    .line 8899
    new-instance v0, Ljava/lang/Object;

    invoke-direct {v0}, Ljava/lang/Object;-><init>()V

    iput-object v0, p0, mScreenshotLock:Ljava/lang/Object;

    .line 8900
    iput-object v8, p0, mScreenshotConnection:Landroid/content/ServiceConnection;

    .line 8902
    new-instance v0, Lcom/android/server/policy/PhoneWindowManager$22;

    invoke-direct {v0, p0}, Lcom/android/server/policy/PhoneWindowManager$22;-><init>(Lcom/android/server/policy/PhoneWindowManager;)V

    iput-object v0, p0, mScreenshotTimeout:Ljava/lang/Runnable;

    .line 9625
    new-instance v0, Lcom/android/server/policy/PhoneWindowManager$24;

    invoke-direct {v0, p0}, Lcom/android/server/policy/PhoneWindowManager$24;-><init>(Lcom/android/server/policy/PhoneWindowManager;)V

    iput-object v0, p0, mDockReceiver:Landroid/content/BroadcastReceiver;

    .line 9646
    new-instance v0, Lcom/android/server/policy/PhoneWindowManager$25;

    invoke-direct {v0, p0}, Lcom/android/server/policy/PhoneWindowManager$25;-><init>(Lcom/android/server/policy/PhoneWindowManager;)V

    iput-object v0, p0, mSystemUIReplacedReceiver:Landroid/content/BroadcastReceiver;

    .line 9669
    new-instance v0, Lcom/android/server/policy/PhoneWindowManager$26;

    invoke-direct {v0, p0}, Lcom/android/server/policy/PhoneWindowManager$26;-><init>(Lcom/android/server/policy/PhoneWindowManager;)V

    iput-object v0, p0, mPresentationStartReceiver:Landroid/content/BroadcastReceiver;

    .line 9685
    new-instance v0, Lcom/android/server/policy/PhoneWindowManager$27;

    invoke-direct {v0, p0}, Lcom/android/server/policy/PhoneWindowManager$27;-><init>(Lcom/android/server/policy/PhoneWindowManager;)V

    iput-object v0, p0, mPresentationStopReceiver:Landroid/content/BroadcastReceiver;

    .line 9701
    new-instance v0, Lcom/android/server/policy/PhoneWindowManager$28;

    invoke-direct {v0, p0}, Lcom/android/server/policy/PhoneWindowManager$28;-><init>(Lcom/android/server/policy/PhoneWindowManager;)V

    iput-object v0, p0, mAlarmReceiver:Landroid/content/BroadcastReceiver;

    .line 9734
    new-instance v0, Lcom/android/server/policy/PhoneWindowManager$29;

    invoke-direct {v0, p0}, Lcom/android/server/policy/PhoneWindowManager$29;-><init>(Lcom/android/server/policy/PhoneWindowManager;)V

    iput-object v0, p0, mMouseConnectReceiver:Landroid/content/BroadcastReceiver;

    .line 9792
    new-instance v0, Lcom/android/server/policy/PhoneWindowManager$30;

    invoke-direct {v0, p0}, Lcom/android/server/policy/PhoneWindowManager$30;-><init>(Lcom/android/server/policy/PhoneWindowManager;)V

    iput-object v0, p0, mDreamReceiver:Landroid/content/BroadcastReceiver;

    .line 9807
    new-instance v0, Lcom/android/server/policy/PhoneWindowManager$31;

    invoke-direct {v0, p0}, Lcom/android/server/policy/PhoneWindowManager$31;-><init>(Lcom/android/server/policy/PhoneWindowManager;)V

    iput-object v0, p0, mMultiuserReceiver:Landroid/content/BroadcastReceiver;

    .line 9839
    new-instance v0, Lcom/android/server/policy/PhoneWindowManager$32;

    invoke-direct {v0, p0}, Lcom/android/server/policy/PhoneWindowManager$32;-><init>(Lcom/android/server/policy/PhoneWindowManager;)V

    iput-object v0, p0, mAutoRotation:Landroid/content/BroadcastReceiver;

    .line 9852
    new-instance v0, Lcom/android/server/policy/PhoneWindowManager$33;

    invoke-direct {v0, p0}, Lcom/android/server/policy/PhoneWindowManager$33;-><init>(Lcom/android/server/policy/PhoneWindowManager;)V

    iput-object v0, p0, mBatteryReceiver:Landroid/content/BroadcastReceiver;

    .line 9861
    new-instance v0, Lcom/android/server/policy/PhoneWindowManager$34;

    invoke-direct {v0, p0}, Lcom/android/server/policy/PhoneWindowManager$34;-><init>(Lcom/android/server/policy/PhoneWindowManager;)V

    iput-object v0, p0, mChargingReceiver:Landroid/content/BroadcastReceiver;

    .line 9872
    new-instance v0, Lcom/android/server/policy/PhoneWindowManager$35;

    invoke-direct {v0, p0}, Lcom/android/server/policy/PhoneWindowManager$35;-><init>(Lcom/android/server/policy/PhoneWindowManager;)V

    iput-object v0, p0, mHiddenNavPanic:Ljava/lang/Runnable;

    .line 9956
    new-instance v0, Lcom/android/server/policy/PhoneWindowManager$36;

    invoke-direct {v0, p0}, Lcom/android/server/policy/PhoneWindowManager$36;-><init>(Lcom/android/server/policy/PhoneWindowManager;)V

    iput-object v0, p0, mWifiDisplayReceiver:Landroid/content/BroadcastReceiver;

    .line 11242
    iput-object v8, p0, mBootMsgDialog:Landroid/app/ProgressDialog;

    .line 11243
    iput-object v8, p0, mCustomBootMsgDialog:Lcom/samsung/android/app/CustomBootMsgDialog;

    .line 11373
    new-instance v0, Lcom/android/server/policy/PhoneWindowManager$ScreenLockTimeout;

    invoke-direct {v0, p0}, Lcom/android/server/policy/PhoneWindowManager$ScreenLockTimeout;-><init>(Lcom/android/server/policy/PhoneWindowManager;)V

    iput-object v0, p0, mScreenLockTimeout:Lcom/android/server/policy/PhoneWindowManager$ScreenLockTimeout;

    .line 12810
    iput-boolean v7, p0, mOpenByNotification:Z

    .line 12811
    new-instance v0, Lcom/android/server/policy/PhoneWindowManager$43;

    invoke-direct {v0, p0}, Lcom/android/server/policy/PhoneWindowManager$43;-><init>(Lcom/android/server/policy/PhoneWindowManager;)V

    iput-object v0, p0, mShowStatusBarByNotification:Ljava/lang/Runnable;

    .line 12834
    iput v7, p0, mLockTaskModeState:I

    .line 12857
    iput-boolean v7, p0, mIsDefaultKeyguardRotationAnmationAlwaysUsed:Z

    return-void
.end method

.method static synthetic access$000(Lcom/android/server/policy/PhoneWindowManager;)Landroid/graphics/Region;
    .registers 2
    .param p0, "x0"    # Lcom/android/server/policy/PhoneWindowManager;

    .prologue
    .line 304
    iget-object v0, p0, cursorWindowTouchableRegion:Landroid/graphics/Region;

    return-object v0
.end method

.method static synthetic access$100(Lcom/android/server/policy/PhoneWindowManager;)V
    .registers 1
    .param p0, "x0"    # Lcom/android/server/policy/PhoneWindowManager;

    .prologue
    .line 304
    invoke-direct {p0}, enablePointerLocation()V

    return-void
.end method

.method static synthetic access$1000(Lcom/android/server/policy/PhoneWindowManager;)V
    .registers 1
    .param p0, "x0"    # Lcom/android/server/policy/PhoneWindowManager;

    .prologue
    .line 304
    invoke-direct {p0}, finishPowerKeyPress()V

    return-void
.end method

.method static synthetic access$1100(Lcom/android/server/policy/PhoneWindowManager;JZI)V
    .registers 6
    .param p0, "x0"    # Lcom/android/server/policy/PhoneWindowManager;
    .param p1, "x1"    # J
    .param p3, "x2"    # Z
    .param p4, "x3"    # I

    .prologue
    .line 304
    invoke-direct {p0, p1, p2, p3, p4}, endCallPress(JZI)V

    return-void
.end method

.method static synthetic access$1200(Lcom/android/server/policy/PhoneWindowManager;)V
    .registers 1
    .param p0, "x0"    # Lcom/android/server/policy/PhoneWindowManager;

    .prologue
    .line 304
    invoke-direct {p0}, finishEndCallKeyPress()V

    return-void
.end method

.method static synthetic access$1300(Lcom/android/server/policy/PhoneWindowManager;)V
    .registers 1
    .param p0, "x0"    # Lcom/android/server/policy/PhoneWindowManager;

    .prologue
    .line 304
    invoke-direct {p0}, powerLongPress()V

    return-void
.end method

.method static synthetic access$1400(Lcom/android/server/policy/PhoneWindowManager;Z)V
    .registers 2
    .param p0, "x0"    # Lcom/android/server/policy/PhoneWindowManager;
    .param p1, "x1"    # Z

    .prologue
    .line 304
    invoke-direct {p0, p1}, updateDreamingSleepToken(Z)V

    return-void
.end method

.method static synthetic access$1500(Lcom/android/server/policy/PhoneWindowManager;Z)V
    .registers 2
    .param p0, "x0"    # Lcom/android/server/policy/PhoneWindowManager;
    .param p1, "x1"    # Z

    .prologue
    .line 304
    invoke-direct {p0, p1}, notifyToSSRM(Z)V

    return-void
.end method

.method static synthetic access$1600(Lcom/android/server/policy/PhoneWindowManager;)V
    .registers 1
    .param p0, "x0"    # Lcom/android/server/policy/PhoneWindowManager;

    .prologue
    .line 304
    invoke-direct {p0}, enableToolBox()V

    return-void
.end method

.method static synthetic access$1700(Lcom/android/server/policy/PhoneWindowManager;)V
    .registers 1
    .param p0, "x0"    # Lcom/android/server/policy/PhoneWindowManager;

    .prologue
    .line 304
    invoke-direct {p0}, disableToolBox()V

    return-void
.end method

.method static synthetic access$1800(Lcom/android/server/policy/PhoneWindowManager;)Lcom/android/server/policy/sec/SamsungPhoneWindowManager;
    .registers 2
    .param p0, "x0"    # Lcom/android/server/policy/PhoneWindowManager;

    .prologue
    .line 304
    iget-object v0, p0, mSPWM:Lcom/android/server/policy/sec/SamsungPhoneWindowManager;

    return-object v0
.end method

.method static synthetic access$1900(Lcom/android/server/policy/PhoneWindowManager;)Ljava/lang/Object;
    .registers 2
    .param p0, "x0"    # Lcom/android/server/policy/PhoneWindowManager;

    .prologue
    .line 304
    iget-object v0, p0, mLock:Ljava/lang/Object;

    return-object v0
.end method

.method static synthetic access$200(Lcom/android/server/policy/PhoneWindowManager;)V
    .registers 1
    .param p0, "x0"    # Lcom/android/server/policy/PhoneWindowManager;

    .prologue
    .line 304
    invoke-direct {p0}, disablePointerLocation()V

    return-void
.end method

.method static synthetic access$2000(Lcom/android/server/policy/PhoneWindowManager;)Z
    .registers 2
    .param p0, "x0"    # Lcom/android/server/policy/PhoneWindowManager;

    .prologue
    .line 304
    invoke-direct {p0}, shouldEnableWakeGestureLp()Z

    move-result v0

    return v0
.end method

.method static synthetic access$2100(Lcom/android/server/policy/PhoneWindowManager;)Z
    .registers 2
    .param p0, "x0"    # Lcom/android/server/policy/PhoneWindowManager;

    .prologue
    .line 304
    iget-boolean v0, p0, mAllowTheaterModeWakeFromWakeGesture:Z

    return v0
.end method

.method static synthetic access$2200(Lcom/android/server/policy/PhoneWindowManager;JZI)Z
    .registers 6
    .param p0, "x0"    # Lcom/android/server/policy/PhoneWindowManager;
    .param p1, "x1"    # J
    .param p3, "x2"    # Z
    .param p4, "x3"    # I

    .prologue
    .line 304
    invoke-direct {p0, p1, p2, p3, p4}, wakeUp(JZI)Z

    move-result v0

    return v0
.end method

.method static synthetic access$2300(Lcom/android/server/policy/PhoneWindowManager;)V
    .registers 1
    .param p0, "x0"    # Lcom/android/server/policy/PhoneWindowManager;

    .prologue
    .line 304
    invoke-direct {p0}, performAuditoryFeedbackForAccessibilityIfNeed()V

    return-void
.end method

.method static synthetic access$2400(Lcom/android/server/policy/PhoneWindowManager;)V
    .registers 1
    .param p0, "x0"    # Lcom/android/server/policy/PhoneWindowManager;

    .prologue
    .line 304
    invoke-direct {p0}, takeScreenshot()V

    return-void
.end method

.method static synthetic access$2600(Lcom/android/server/policy/PhoneWindowManager;)Landroid/widget/Toast;
    .registers 2
    .param p0, "x0"    # Lcom/android/server/policy/PhoneWindowManager;

    .prologue
    .line 304
    iget-object v0, p0, alertToast:Landroid/widget/Toast;

    return-object v0
.end method

.method static synthetic access$2602(Lcom/android/server/policy/PhoneWindowManager;Landroid/widget/Toast;)Landroid/widget/Toast;
    .registers 2
    .param p0, "x0"    # Lcom/android/server/policy/PhoneWindowManager;
    .param p1, "x1"    # Landroid/widget/Toast;

    .prologue
    .line 304
    iput-object p1, p0, alertToast:Landroid/widget/Toast;

    return-object p1
.end method

.method static synthetic access$2700(Lcom/android/server/policy/PhoneWindowManager;)V
    .registers 1
    .param p0, "x0"    # Lcom/android/server/policy/PhoneWindowManager;

    .prologue
    .line 304
    invoke-direct {p0}, handleShortPressOnHome()V

    return-void
.end method

.method static synthetic access$2900(Lcom/android/server/policy/PhoneWindowManager;)Lcom/android/server/policy/multiwindow/MultiPhoneWindowManager;
    .registers 2
    .param p0, "x0"    # Lcom/android/server/policy/PhoneWindowManager;

    .prologue
    .line 304
    iget-object v0, p0, mMultiPhoneWindowManager:Lcom/android/server/policy/multiwindow/MultiPhoneWindowManager;

    return-object v0
.end method

.method static synthetic access$300(Lcom/android/server/policy/PhoneWindowManager;Z)V
    .registers 2
    .param p0, "x0"    # Lcom/android/server/policy/PhoneWindowManager;
    .param p1, "x1"    # Z

    .prologue
    .line 304
    invoke-direct {p0, p1}, showRecentApps(Z)V

    return-void
.end method

.method static synthetic access$3000(Lcom/android/server/policy/PhoneWindowManager;)Z
    .registers 2
    .param p0, "x0"    # Lcom/android/server/policy/PhoneWindowManager;

    .prologue
    .line 304
    iget-boolean v0, p0, mForceHideStatusBarForCocktail:Z

    return v0
.end method

.method static synthetic access$3100(Lcom/android/server/policy/PhoneWindowManager;Landroid/view/WindowManagerPolicy$WindowState;)V
    .registers 2
    .param p0, "x0"    # Lcom/android/server/policy/PhoneWindowManager;
    .param p1, "x1"    # Landroid/view/WindowManagerPolicy$WindowState;

    .prologue
    .line 304
    invoke-direct {p0, p1}, requestTransientBars(Landroid/view/WindowManagerPolicy$WindowState;)V

    return-void
.end method

.method static synthetic access$3200(Lcom/android/server/policy/PhoneWindowManager;)I
    .registers 2
    .param p0, "x0"    # Lcom/android/server/policy/PhoneWindowManager;

    .prologue
    .line 304
    iget v0, p0, mCocktail180RotationEnabled:I

    return v0
.end method

.method static synthetic access$3300(Lcom/android/server/policy/PhoneWindowManager;)I
    .registers 2
    .param p0, "x0"    # Lcom/android/server/policy/PhoneWindowManager;

    .prologue
    .line 304
    iget v0, p0, mCurrentDisplayRotation:I

    return v0
.end method

.method static synthetic access$3400(Lcom/android/server/policy/PhoneWindowManager;)I
    .registers 2
    .param p0, "x0"    # Lcom/android/server/policy/PhoneWindowManager;

    .prologue
    .line 304
    iget v0, p0, mEasyOneHandEnabled:I

    return v0
.end method

.method static synthetic access$3500(Lcom/android/server/policy/PhoneWindowManager;)Lcom/android/server/policy/cocktail/CocktailPhoneWindowManager;
    .registers 2
    .param p0, "x0"    # Lcom/android/server/policy/PhoneWindowManager;

    .prologue
    .line 304
    iget-object v0, p0, mCocktailPhoneWindowManager:Lcom/android/server/policy/cocktail/CocktailPhoneWindowManager;

    return-object v0
.end method

.method static synthetic access$3600(Lcom/android/server/policy/PhoneWindowManager;[Z)V
    .registers 2
    .param p0, "x0"    # Lcom/android/server/policy/PhoneWindowManager;
    .param p1, "x1"    # [Z

    .prologue
    .line 304
    invoke-direct {p0, p1}, reconfigureDebug([Z)V

    return-void
.end method

.method static synthetic access$3800(Lcom/android/server/policy/PhoneWindowManager;)Ljava/lang/Runnable;
    .registers 2
    .param p0, "x0"    # Lcom/android/server/policy/PhoneWindowManager;

    .prologue
    .line 304
    iget-object v0, p0, mClearHideNavigationFlag:Ljava/lang/Runnable;

    return-object v0
.end method

.method static synthetic access$3900(Lcom/android/server/policy/PhoneWindowManager;)I
    .registers 2
    .param p0, "x0"    # Lcom/android/server/policy/PhoneWindowManager;

    .prologue
    .line 304
    invoke-direct {p0}, updateSystemUiVisibilityLw()I

    move-result v0

    return v0
.end method

.method static synthetic access$400(Lcom/android/server/policy/PhoneWindowManager;)V
    .registers 1
    .param p0, "x0"    # Lcom/android/server/policy/PhoneWindowManager;

    .prologue
    .line 304
    invoke-direct {p0}, launchKeyguardOwner()V

    return-void
.end method

.method static synthetic access$4002(Lcom/android/server/policy/PhoneWindowManager;I)I
    .registers 2
    .param p0, "x0"    # Lcom/android/server/policy/PhoneWindowManager;
    .param p1, "x1"    # I

    .prologue
    .line 304
    iput p1, p0, mBatteryLevel:I

    return p1
.end method

.method static synthetic access$4102(Lcom/android/server/policy/PhoneWindowManager;Z)Z
    .registers 2
    .param p0, "x0"    # Lcom/android/server/policy/PhoneWindowManager;
    .param p1, "x1"    # Z

    .prologue
    .line 304
    iput-boolean p1, p0, bIsCharging:Z

    return p1
.end method

.method static synthetic access$4202(Lcom/android/server/policy/PhoneWindowManager;J)J
    .registers 4
    .param p0, "x0"    # Lcom/android/server/policy/PhoneWindowManager;
    .param p1, "x1"    # J

    .prologue
    .line 304
    iput-wide p1, p0, mPendingPanicGestureUptime:J

    return-wide p1
.end method

.method static synthetic access$4300(Lcom/android/server/policy/PhoneWindowManager;)Lcom/android/server/policy/BarController;
    .registers 2
    .param p0, "x0"    # Lcom/android/server/policy/PhoneWindowManager;

    .prologue
    .line 304
    iget-object v0, p0, mNavigationBarController:Lcom/android/server/policy/BarController;

    return-object v0
.end method

.method static synthetic access$500()I
    .registers 1

    .prologue
    .line 304
    sget v0, mScreenTurnDisplayId:I

    return v0
.end method

.method static synthetic access$600(Lcom/android/server/policy/PhoneWindowManager;I)V
    .registers 2
    .param p0, "x0"    # Lcom/android/server/policy/PhoneWindowManager;
    .param p1, "x1"    # I

    .prologue
    .line 304
    invoke-direct {p0, p1}, finishKeyguardDrawn(I)V

    return-void
.end method

.method static synthetic access$700(Lcom/android/server/policy/PhoneWindowManager;I)V
    .registers 2
    .param p0, "x0"    # Lcom/android/server/policy/PhoneWindowManager;
    .param p1, "x1"    # I

    .prologue
    .line 304
    invoke-direct {p0, p1}, finishWindowsDrawn(I)V

    return-void
.end method

.method static synthetic access$800(Lcom/android/server/policy/PhoneWindowManager;)V
    .registers 1
    .param p0, "x0"    # Lcom/android/server/policy/PhoneWindowManager;

    .prologue
    .line 304
    invoke-direct {p0}, handleHideBootMessage()V

    return-void
.end method

.method static synthetic access$900(Lcom/android/server/policy/PhoneWindowManager;JZI)V
    .registers 6
    .param p0, "x0"    # Lcom/android/server/policy/PhoneWindowManager;
    .param p1, "x1"    # J
    .param p3, "x2"    # Z
    .param p4, "x3"    # I

    .prologue
    .line 304
    invoke-direct {p0, p1, p2, p3, p4}, powerPress(JZI)V

    return-void
.end method

.method private acquireQuickBootWakeLock()V
    .registers 2

    .prologue
    .line 8969
    iget-object v0, p0, mQuickBootWakeLock:Landroid/os/PowerManager$WakeLock;

    invoke-virtual {v0}, Landroid/os/PowerManager$WakeLock;->isHeld()Z

    move-result v0

    if-nez v0, :cond_d

    .line 8970
    iget-object v0, p0, mQuickBootWakeLock:Landroid/os/PowerManager$WakeLock;

    invoke-virtual {v0}, Landroid/os/PowerManager$WakeLock;->acquire()V

    .line 8972
    :cond_d
    return-void
.end method

.method private applyLidSwitchState()V
    .registers 6

    .prologue
    .line 11464
    iget-object v0, p0, mPowerManager:Landroid/os/PowerManager;

    invoke-direct {p0}, isBuiltInKeyboardVisible()Z

    move-result v1

    invoke-virtual {v0, v1}, Landroid/os/PowerManager;->setKeyboardVisibility(Z)V

    .line 11467
    invoke-static {}, Landroid/os/FactoryTest;->isRunningFactoryApp()Z

    move-result v0

    if-eqz v0, :cond_17

    .line 11468
    const-string v0, "WindowManager"

    const-string v1, "applyLidSwitchState isRunningFactoryApp() = true. ignore it."

    invoke-static {v0, v1}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 11482
    :goto_16
    return-void

    .line 11473
    :cond_17
    iget v0, p0, mLidState:I

    if-nez v0, :cond_2a

    iget-boolean v0, p0, mLidControlsSleep:Z

    if-eqz v0, :cond_2a

    .line 11474
    iget-object v0, p0, mPowerManager:Landroid/os/PowerManager;

    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v2

    const/4 v1, 0x3

    const/4 v4, 0x1

    invoke-virtual {v0, v2, v3, v1, v4}, Landroid/os/PowerManager;->goToSleep(JII)V

    .line 11479
    :cond_2a
    iget-object v1, p0, mLock:Ljava/lang/Object;

    monitor-enter v1

    .line 11480
    :try_start_2d
    invoke-direct {p0}, updateWakeGestureListenerLp()V

    .line 11481
    monitor-exit v1

    goto :goto_16

    :catchall_32
    move-exception v0

    monitor-exit v1
    :try_end_34
    .catchall {:try_start_2d .. :try_end_34} :catchall_32

    throw v0
.end method

.method private applyPostLayoutPolicyForFullStatusBarLw()V
    .registers 1

    .prologue
    .line 12560
    return-void
.end method

.method private applyStableConstraints(IILandroid/graphics/Rect;)V
    .registers 6
    .param p1, "sysui"    # I
    .param p2, "fl"    # I
    .param p3, "r"    # Landroid/graphics/Rect;

    .prologue
    .line 6777
    and-int/lit16 v0, p1, 0x100

    if-eqz v0, :cond_30

    .line 6780
    and-int/lit16 v0, p2, 0x400

    if-eqz v0, :cond_31

    .line 6781
    iget v0, p3, Landroid/graphics/Rect;->left:I

    iget v1, p0, mStableFullscreenLeft:I

    if-ge v0, v1, :cond_12

    iget v0, p0, mStableFullscreenLeft:I

    iput v0, p3, Landroid/graphics/Rect;->left:I

    .line 6782
    :cond_12
    iget v0, p3, Landroid/graphics/Rect;->top:I

    iget v1, p0, mStableFullscreenTop:I

    if-ge v0, v1, :cond_1c

    iget v0, p0, mStableFullscreenTop:I

    iput v0, p3, Landroid/graphics/Rect;->top:I

    .line 6783
    :cond_1c
    iget v0, p3, Landroid/graphics/Rect;->right:I

    iget v1, p0, mStableFullscreenRight:I

    if-le v0, v1, :cond_26

    iget v0, p0, mStableFullscreenRight:I

    iput v0, p3, Landroid/graphics/Rect;->right:I

    .line 6784
    :cond_26
    iget v0, p3, Landroid/graphics/Rect;->bottom:I

    iget v1, p0, mStableFullscreenBottom:I

    if-le v0, v1, :cond_30

    iget v0, p0, mStableFullscreenBottom:I

    iput v0, p3, Landroid/graphics/Rect;->bottom:I

    .line 6792
    :cond_30
    :goto_30
    return-void

    .line 6786
    :cond_31
    iget v0, p3, Landroid/graphics/Rect;->left:I

    iget v1, p0, mStableLeft:I

    if-ge v0, v1, :cond_3b

    iget v0, p0, mStableLeft:I

    iput v0, p3, Landroid/graphics/Rect;->left:I

    .line 6787
    :cond_3b
    iget v0, p3, Landroid/graphics/Rect;->top:I

    iget v1, p0, mStableTop:I

    if-ge v0, v1, :cond_45

    iget v0, p0, mStableTop:I

    iput v0, p3, Landroid/graphics/Rect;->top:I

    .line 6788
    :cond_45
    iget v0, p3, Landroid/graphics/Rect;->right:I

    iget v1, p0, mStableRight:I

    if-le v0, v1, :cond_4f

    iget v0, p0, mStableRight:I

    iput v0, p3, Landroid/graphics/Rect;->right:I

    .line 6789
    :cond_4f
    iget v0, p3, Landroid/graphics/Rect;->bottom:I

    iget v1, p0, mStableBottom:I

    if-le v0, v1, :cond_30

    iget v0, p0, mStableBottom:I

    iput v0, p3, Landroid/graphics/Rect;->bottom:I

    goto :goto_30
.end method

.method private areTranslucentBarsAllowed()Z
    .registers 2

    .prologue
    .line 12239
    iget-boolean v0, p0, mTranslucentDecorEnabled:Z

    if-eqz v0, :cond_e

    iget-object v0, p0, mAccessibilityManager:Landroid/view/accessibility/AccessibilityManager;

    invoke-virtual {v0}, Landroid/view/accessibility/AccessibilityManager;->isTouchExplorationEnabled()Z

    move-result v0

    if-nez v0, :cond_e

    const/4 v0, 0x1

    :goto_d
    return v0

    :cond_e
    const/4 v0, 0x0

    goto :goto_d
.end method

.method private static awakenDreams()V
    .registers 2

    .prologue
    .line 4933
    invoke-static {}, getDreamManager()Landroid/service/dreams/IDreamManager;

    move-result-object v0

    .line 4934
    .local v0, "dreamManager":Landroid/service/dreams/IDreamManager;
    if-eqz v0, :cond_9

    .line 4936
    :try_start_6
    invoke-interface {v0}, Landroid/service/dreams/IDreamManager;->awaken()V
    :try_end_9
    .catch Landroid/os/RemoteException; {:try_start_6 .. :try_end_9} :catch_a

    .line 4941
    :cond_9
    :goto_9
    return-void

    .line 4937
    :catch_a
    move-exception v1

    goto :goto_9
.end method

.method private canBeGetSViewCoverSize()Z
    .registers 2

    .prologue
    .line 12898
    iget-object v0, p0, mCoverState:Lcom/samsung/android/cover/CoverState;

    if-eqz v0, :cond_12

    .line 12899
    iget-object v0, p0, mCoverState:Lcom/samsung/android/cover/CoverState;

    iget v0, v0, Lcom/samsung/android/cover/CoverState;->widthPixel:I

    if-eqz v0, :cond_12

    iget-object v0, p0, mCoverState:Lcom/samsung/android/cover/CoverState;

    iget v0, v0, Lcom/samsung/android/cover/CoverState;->heightPixel:I

    if-eqz v0, :cond_12

    .line 12900
    const/4 v0, 0x1

    .line 12903
    :goto_11
    return v0

    :cond_12
    const/4 v0, 0x0

    goto :goto_11
.end method

.method private canHideNavigationBar()Z
    .registers 2

    .prologue
    .line 3223
    iget-boolean v0, p0, mHasNavigationBar:Z

    if-eqz v0, :cond_e

    iget-object v0, p0, mAccessibilityManager:Landroid/view/accessibility/AccessibilityManager;

    invoke-virtual {v0}, Landroid/view/accessibility/AccessibilityManager;->isTouchExplorationEnabled()Z

    move-result v0

    if-nez v0, :cond_e

    const/4 v0, 0x1

    :goto_d
    return v0

    :cond_e
    const/4 v0, 0x0

    goto :goto_d
.end method

.method private canReceiveInput(Landroid/view/WindowManagerPolicy$WindowState;)Z
    .registers 9
    .param p1, "win"    # Landroid/view/WindowManagerPolicy$WindowState;

    .prologue
    const/4 v3, 0x1

    const/4 v4, 0x0

    .line 6795
    invoke-interface {p1}, Landroid/view/WindowManagerPolicy$WindowState;->getAttrs()Landroid/view/WindowManager$LayoutParams;

    move-result-object v5

    iget v5, v5, Landroid/view/WindowManager$LayoutParams;->flags:I

    and-int/lit8 v5, v5, 0x8

    if-eqz v5, :cond_1e

    move v1, v3

    .line 6797
    .local v1, "notFocusable":Z
    :goto_d
    invoke-interface {p1}, Landroid/view/WindowManagerPolicy$WindowState;->getAttrs()Landroid/view/WindowManager$LayoutParams;

    move-result-object v5

    iget v5, v5, Landroid/view/WindowManager$LayoutParams;->flags:I

    const/high16 v6, 0x20000

    and-int/2addr v5, v6

    if-eqz v5, :cond_20

    move v0, v3

    .line 6799
    .local v0, "altFocusableIm":Z
    :goto_19
    xor-int v2, v1, v0

    .line 6800
    .local v2, "notFocusableForIm":Z
    if-nez v2, :cond_22

    :goto_1d
    return v3

    .end local v0    # "altFocusableIm":Z
    .end local v1    # "notFocusable":Z
    .end local v2    # "notFocusableForIm":Z
    :cond_1e
    move v1, v4

    .line 6795
    goto :goto_d

    .restart local v1    # "notFocusable":Z
    :cond_20
    move v0, v4

    .line 6797
    goto :goto_19

    .restart local v0    # "altFocusableIm":Z
    .restart local v2    # "notFocusableForIm":Z
    :cond_22
    move v3, v4

    .line 6800
    goto :goto_1d
.end method

.method private cancelPendingPowerKeyAction()V
    .registers 3

    .prologue
    .line 1863
    const/4 v0, 0x1

    iput-boolean v0, p0, mPowerKeyHandled:Z

    .line 1864
    iget-object v0, p0, mHandler:Landroid/os/Handler;

    const/16 v1, 0xe

    invoke-virtual {v0, v1}, Landroid/os/Handler;->removeMessages(I)V

    .line 1865
    return-void
.end method

.method private cancelPendingScreenshotChordAction()V
    .registers 3

    .prologue
    .line 2150
    iget-object v0, p0, mHandler:Landroid/os/Handler;

    iget-object v1, p0, mScreenshotRunnable:Ljava/lang/Runnable;

    invoke-virtual {v0, v1}, Landroid/os/Handler;->removeCallbacks(Ljava/lang/Runnable;)V

    .line 2151
    return-void
.end method

.method private cancelPendingScreenshotForLog()V
    .registers 3

    .prologue
    .line 2137
    iget-object v0, p0, mHandler:Landroid/os/Handler;

    iget-object v1, p0, mScreenshotForLog:Ljava/lang/Runnable;

    invoke-virtual {v0, v1}, Landroid/os/Handler;->removeCallbacks(Ljava/lang/Runnable;)V

    .line 2138
    return-void
.end method

.method private cancelPreloadRecentApps()V
    .registers 5

    .prologue
    .line 5864
    iget-boolean v2, p0, mPreloadedRecentApps:Z

    if-eqz v2, :cond_10

    .line 5865
    const/4 v2, 0x0

    iput-boolean v2, p0, mPreloadedRecentApps:Z

    .line 5867
    :try_start_7
    invoke-virtual {p0}, getStatusBarService()Lcom/android/internal/statusbar/IStatusBarService;

    move-result-object v1

    .line 5868
    .local v1, "statusbar":Lcom/android/internal/statusbar/IStatusBarService;
    if-eqz v1, :cond_10

    .line 5869
    invoke-interface {v1}, Lcom/android/internal/statusbar/IStatusBarService;->cancelPreloadRecentApps()V
    :try_end_10
    .catch Landroid/os/RemoteException; {:try_start_7 .. :try_end_10} :catch_11

    .line 5877
    .end local v1    # "statusbar":Lcom/android/internal/statusbar/IStatusBarService;
    :cond_10
    :goto_10
    return-void

    .line 5871
    :catch_11
    move-exception v0

    .line 5872
    .local v0, "e":Landroid/os/RemoteException;
    const-string v2, "WindowManager"

    const-string v3, "RemoteException when cancelling recent apps preload"

    invoke-static {v2, v3, v0}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 5874
    const/4 v2, 0x0

    iput-object v2, p0, mStatusBarService:Lcom/android/internal/statusbar/IStatusBarService;

    goto :goto_10
.end method

.method private checkTriggerOWC(Z)Z
    .registers 4
    .param p1, "isDown"    # Z

    .prologue
    .line 9415
    if-eqz p1, :cond_18

    iget-boolean v0, p0, mIsOWCSetting:Z

    if-eqz v0, :cond_18

    iget-object v0, p0, mLockPatternUtils:Lcom/android/internal/widget/LockPatternUtils;

    invoke-static {}, Landroid/os/UserHandle;->myUserId()I

    move-result v1

    invoke-virtual {v0, v1}, Lcom/android/internal/widget/LockPatternUtils;->isFingerPrintLockscreen(I)Z

    move-result v0

    if-nez v0, :cond_18

    .line 9416
    const/4 v0, 0x1

    iput-boolean v0, p0, mNeedTriggerOWC:Z

    .line 9421
    :goto_15
    iget-boolean v0, p0, mNeedTriggerOWC:Z

    return v0

    .line 9418
    :cond_18
    const/4 v0, 0x0

    iput-boolean v0, p0, mNeedTriggerOWC:Z

    goto :goto_15
.end method

.method private clearClearableFlagsLw()V
    .registers 2

    .prologue
    .line 12188
    const/4 v0, 0x0

    invoke-direct {p0, v0}, clearClearableFlagsLw(I)V

    .line 12189
    return-void
.end method

.method private clearClearableFlagsLw(I)V
    .registers 5
    .param p1, "displayId"    # I

    .prologue
    .line 12191
    const/4 v0, 0x0

    .line 12200
    .local v0, "mResettingSystemUiFlags":I
    iget v0, p0, mResettingSystemUiFlags:I

    .line 12203
    or-int/lit8 v1, v0, 0x7

    .line 12204
    .local v1, "newVal":I
    if-eq v1, v0, :cond_f

    .line 12205
    move v0, v1

    .line 12217
    iput v0, p0, mResettingSystemUiFlags:I

    .line 12218
    iget-object v2, p0, mWindowManagerFuncs:Landroid/view/WindowManagerPolicy$WindowManagerFuncs;

    invoke-interface {v2}, Landroid/view/WindowManagerPolicy$WindowManagerFuncs;->reevaluateStatusBarVisibility()V

    .line 12222
    :cond_f
    return-void
.end method

.method private disablePointerLocation()V
    .registers 4

    .prologue
    .line 3474
    iget-object v1, p0, mPointerLocationView:Lcom/android/internal/widget/PointerLocationView;

    if-eqz v1, :cond_1e

    .line 3475
    iget-object v1, p0, mWindowManagerFuncs:Landroid/view/WindowManagerPolicy$WindowManagerFuncs;

    iget-object v2, p0, mPointerLocationView:Lcom/android/internal/widget/PointerLocationView;

    invoke-interface {v1, v2}, Landroid/view/WindowManagerPolicy$WindowManagerFuncs;->unregisterPointerEventListener(Landroid/view/WindowManagerPolicy$PointerEventListener;)V

    .line 3476
    iget-object v1, p0, mContext:Landroid/content/Context;

    const-string/jumbo v2, "window"

    invoke-virtual {v1, v2}, Landroid/content/Context;->getSystemService(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Landroid/view/WindowManager;

    .line 3477
    .local v0, "wm":Landroid/view/WindowManager;
    iget-object v1, p0, mPointerLocationView:Lcom/android/internal/widget/PointerLocationView;

    invoke-interface {v0, v1}, Landroid/view/WindowManager;->removeView(Landroid/view/View;)V

    .line 3478
    const/4 v1, 0x0

    iput-object v1, p0, mPointerLocationView:Lcom/android/internal/widget/PointerLocationView;

    .line 3488
    .end local v0    # "wm":Landroid/view/WindowManager;
    :cond_1e
    return-void
.end method

.method private disableQbCharger()V
    .registers 3

    .prologue
    .line 9951
    const-string/jumbo v0, "sys.quickboot.enable"

    const/4 v1, 0x0

    invoke-static {v0, v1}, Landroid/os/SystemProperties;->getInt(Ljava/lang/String;I)I

    move-result v0

    const/4 v1, 0x1

    if-ne v0, v1, :cond_14

    .line 9952
    const-string/jumbo v0, "sys.qbcharger.enable"

    const-string/jumbo v1, "false"

    invoke-static {v0, v1}, Landroid/os/SystemProperties;->set(Ljava/lang/String;Ljava/lang/String;)V

    .line 9954
    :cond_14
    return-void
.end method

.method private disableToolBox()V
    .registers 5

    .prologue
    const/4 v3, 0x0

    .line 3510
    iget-object v1, p0, mTwToolBoxPointerEventListener:Lcom/android/server/policy/PhoneWindowManager$TwToolBoxPointerEventListener;

    if-eqz v1, :cond_e

    .line 3511
    iget-object v1, p0, mWindowManagerFuncs:Landroid/view/WindowManagerPolicy$WindowManagerFuncs;

    iget-object v2, p0, mTwToolBoxPointerEventListener:Lcom/android/server/policy/PhoneWindowManager$TwToolBoxPointerEventListener;

    invoke-interface {v1, v2}, Landroid/view/WindowManagerPolicy$WindowManagerFuncs;->unregisterPointerEventListener(Landroid/view/WindowManagerPolicy$PointerEventListener;)V

    .line 3512
    iput-object v3, p0, mTwToolBoxPointerEventListener:Lcom/android/server/policy/PhoneWindowManager$TwToolBoxPointerEventListener;

    .line 3515
    :cond_e
    iget-object v1, p0, mTwToolBoxFloatingViewer:Lcom/samsung/android/toolbox/TwToolBoxFloatingViewer;

    if-eqz v1, :cond_29

    .line 3516
    iget-object v1, p0, mTwToolBoxFloatingViewer:Lcom/samsung/android/toolbox/TwToolBoxFloatingViewer;

    invoke-virtual {v1}, Lcom/samsung/android/toolbox/TwToolBoxFloatingViewer;->unregisterCallback()V

    .line 3517
    iget-object v1, p0, mContext:Landroid/content/Context;

    const-string/jumbo v2, "window"

    invoke-virtual {v1, v2}, Landroid/content/Context;->getSystemService(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Landroid/view/WindowManager;

    .line 3518
    .local v0, "wm":Landroid/view/WindowManager;
    iget-object v1, p0, mTwToolBoxFloatingViewer:Lcom/samsung/android/toolbox/TwToolBoxFloatingViewer;

    invoke-interface {v0, v1}, Landroid/view/WindowManager;->removeView(Landroid/view/View;)V

    .line 3519
    iput-object v3, p0, mTwToolBoxFloatingViewer:Lcom/samsung/android/toolbox/TwToolBoxFloatingViewer;

    .line 3521
    .end local v0    # "wm":Landroid/view/WindowManager;
    :cond_29
    return-void
.end method

.method private dispatchDirectAudioEvent(Landroid/view/KeyEvent;)V
    .registers 10
    .param p1, "event"    # Landroid/view/KeyEvent;

    .prologue
    .line 9518
    invoke-virtual {p1}, Landroid/view/KeyEvent;->getAction()I

    move-result v0

    if-eqz v0, :cond_7

    .line 9554
    :cond_6
    :goto_6
    return-void

    .line 9521
    :cond_7
    invoke-virtual {p1}, Landroid/view/KeyEvent;->getKeyCode()I

    move-result v7

    .line 9522
    .local v7, "keyCode":I
    const/16 v3, 0x1005

    .line 9524
    .local v3, "flags":I
    iget-object v0, p0, mContext:Landroid/content/Context;

    invoke-virtual {v0}, Landroid/content/Context;->getOpPackageName()Ljava/lang/String;

    move-result-object v4

    .line 9525
    .local v4, "pkgName":Ljava/lang/String;
    sparse-switch v7, :sswitch_data_60

    goto :goto_6

    .line 9528
    :sswitch_17
    :try_start_17
    invoke-static {}, getAudioService()Landroid/media/IAudioService;

    move-result-object v0

    const/4 v1, 0x1

    const/high16 v2, -0x80000000

    const-string v5, "WindowManager"

    invoke-interface/range {v0 .. v5}, Landroid/media/IAudioService;->adjustSuggestedStreamVolume(IIILjava/lang/String;Ljava/lang/String;)V
    :try_end_23
    .catch Landroid/os/RemoteException; {:try_start_17 .. :try_end_23} :catch_24

    goto :goto_6

    .line 9530
    :catch_24
    move-exception v6

    .line 9531
    .local v6, "e":Landroid/os/RemoteException;
    const-string v0, "WindowManager"

    const-string v1, "Error dispatching volume up in dispatchTvAudioEvent."

    invoke-static {v0, v1, v6}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    goto :goto_6

    .line 9536
    .end local v6    # "e":Landroid/os/RemoteException;
    :sswitch_2d
    :try_start_2d
    invoke-static {}, getAudioService()Landroid/media/IAudioService;

    move-result-object v0

    const/4 v1, -0x1

    const/high16 v2, -0x80000000

    const-string v5, "WindowManager"

    invoke-interface/range {v0 .. v5}, Landroid/media/IAudioService;->adjustSuggestedStreamVolume(IIILjava/lang/String;Ljava/lang/String;)V
    :try_end_39
    .catch Landroid/os/RemoteException; {:try_start_2d .. :try_end_39} :catch_3a

    goto :goto_6

    .line 9538
    :catch_3a
    move-exception v6

    .line 9539
    .restart local v6    # "e":Landroid/os/RemoteException;
    const-string v0, "WindowManager"

    const-string v1, "Error dispatching volume down in dispatchTvAudioEvent."

    invoke-static {v0, v1, v6}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    goto :goto_6

    .line 9544
    .end local v6    # "e":Landroid/os/RemoteException;
    :sswitch_43
    :try_start_43
    invoke-virtual {p1}, Landroid/view/KeyEvent;->getRepeatCount()I

    move-result v0

    if-nez v0, :cond_6

    .line 9545
    invoke-static {}, getAudioService()Landroid/media/IAudioService;

    move-result-object v0

    const/16 v1, 0x65

    const/high16 v2, -0x80000000

    const-string v5, "WindowManager"

    invoke-interface/range {v0 .. v5}, Landroid/media/IAudioService;->adjustSuggestedStreamVolume(IIILjava/lang/String;Ljava/lang/String;)V
    :try_end_56
    .catch Landroid/os/RemoteException; {:try_start_43 .. :try_end_56} :catch_57

    goto :goto_6

    .line 9549
    :catch_57
    move-exception v6

    .line 9550
    .restart local v6    # "e":Landroid/os/RemoteException;
    const-string v0, "WindowManager"

    const-string v1, "Error dispatching mute in dispatchTvAudioEvent."

    invoke-static {v0, v1, v6}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    goto :goto_6

    .line 9525
    :sswitch_data_60
    .sparse-switch
        0x18 -> :sswitch_17
        0x19 -> :sswitch_2d
        0xa4 -> :sswitch_43
    .end sparse-switch
.end method

.method private enablePointerLocation()V
    .registers 6

    .prologue
    const/4 v4, -0x1

    .line 3422
    iget-object v2, p0, mPointerLocationView:Lcom/android/internal/widget/PointerLocationView;

    if-nez v2, :cond_59

    .line 3423
    new-instance v2, Lcom/android/internal/widget/PointerLocationView;

    iget-object v3, p0, mContext:Landroid/content/Context;

    invoke-direct {v2, v3}, Lcom/android/internal/widget/PointerLocationView;-><init>(Landroid/content/Context;)V

    iput-object v2, p0, mPointerLocationView:Lcom/android/internal/widget/PointerLocationView;

    .line 3424
    iget-object v2, p0, mPointerLocationView:Lcom/android/internal/widget/PointerLocationView;

    const/4 v3, 0x0

    invoke-virtual {v2, v3}, Lcom/android/internal/widget/PointerLocationView;->setPrintCoords(Z)V

    .line 3425
    new-instance v0, Landroid/view/WindowManager$LayoutParams;

    invoke-direct {v0, v4, v4}, Landroid/view/WindowManager$LayoutParams;-><init>(II)V

    .line 3428
    .local v0, "lp":Landroid/view/WindowManager$LayoutParams;
    const/16 v2, 0x7df

    iput v2, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    .line 3429
    const/16 v2, 0x518

    iput v2, v0, Landroid/view/WindowManager$LayoutParams;->flags:I

    .line 3433
    invoke-static {}, Landroid/app/ActivityManager;->isHighEndGfx()Z

    move-result v2

    if-eqz v2, :cond_34

    .line 3434
    iget v2, v0, Landroid/view/WindowManager$LayoutParams;->flags:I

    const/high16 v3, 0x1000000

    or-int/2addr v2, v3

    iput v2, v0, Landroid/view/WindowManager$LayoutParams;->flags:I

    .line 3435
    iget v2, v0, Landroid/view/WindowManager$LayoutParams;->privateFlags:I

    or-int/lit8 v2, v2, 0x2

    iput v2, v0, Landroid/view/WindowManager$LayoutParams;->privateFlags:I

    .line 3438
    :cond_34
    const/4 v2, -0x3

    iput v2, v0, Landroid/view/WindowManager$LayoutParams;->format:I

    .line 3439
    const-string v2, "PointerLocation"

    invoke-virtual {v0, v2}, Landroid/view/WindowManager$LayoutParams;->setTitle(Ljava/lang/CharSequence;)V

    .line 3440
    iget-object v2, p0, mContext:Landroid/content/Context;

    const-string/jumbo v3, "window"

    invoke-virtual {v2, v3}, Landroid/content/Context;->getSystemService(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Landroid/view/WindowManager;

    .line 3442
    .local v1, "wm":Landroid/view/WindowManager;
    iget v2, v0, Landroid/view/WindowManager$LayoutParams;->inputFeatures:I

    or-int/lit8 v2, v2, 0x2

    iput v2, v0, Landroid/view/WindowManager$LayoutParams;->inputFeatures:I

    .line 3443
    iget-object v2, p0, mPointerLocationView:Lcom/android/internal/widget/PointerLocationView;

    invoke-interface {v1, v2, v0}, Landroid/view/WindowManager;->addView(Landroid/view/View;Landroid/view/ViewGroup$LayoutParams;)V

    .line 3444
    iget-object v2, p0, mWindowManagerFuncs:Landroid/view/WindowManagerPolicy$WindowManagerFuncs;

    iget-object v3, p0, mPointerLocationView:Lcom/android/internal/widget/PointerLocationView;

    invoke-interface {v2, v3}, Landroid/view/WindowManagerPolicy$WindowManagerFuncs;->registerPointerEventListener(Landroid/view/WindowManagerPolicy$PointerEventListener;)V

    .line 3471
    .end local v0    # "lp":Landroid/view/WindowManager$LayoutParams;
    .end local v1    # "wm":Landroid/view/WindowManager;
    :cond_59
    return-void
.end method

.method private enableToolBox()V
    .registers 4

    .prologue
    .line 3491
    iget-object v1, p0, mTwToolBoxFloatingViewer:Lcom/samsung/android/toolbox/TwToolBoxFloatingViewer;

    if-nez v1, :cond_3e

    .line 3492
    new-instance v1, Lcom/samsung/android/toolbox/TwToolBoxFloatingViewer;

    iget-object v2, p0, mContext:Landroid/content/Context;

    invoke-direct {v1, v2}, Lcom/samsung/android/toolbox/TwToolBoxFloatingViewer;-><init>(Landroid/content/Context;)V

    iput-object v1, p0, mTwToolBoxFloatingViewer:Lcom/samsung/android/toolbox/TwToolBoxFloatingViewer;

    .line 3493
    iget-object v1, p0, mContext:Landroid/content/Context;

    const-string/jumbo v2, "window"

    invoke-virtual {v1, v2}, Landroid/content/Context;->getSystemService(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Landroid/view/WindowManager;

    .line 3494
    .local v0, "wm":Landroid/view/WindowManager;
    iget-object v1, p0, mTwToolBoxFloatingViewer:Lcom/samsung/android/toolbox/TwToolBoxFloatingViewer;

    iget-object v2, p0, mTwToolBoxFloatingViewer:Lcom/samsung/android/toolbox/TwToolBoxFloatingViewer;

    iget-object v2, v2, Lcom/samsung/android/toolbox/TwToolBoxFloatingViewer;->mWindowAttributes:Landroid/view/WindowManager$LayoutParams;

    invoke-interface {v0, v1, v2}, Landroid/view/WindowManager;->addView(Landroid/view/View;Landroid/view/ViewGroup$LayoutParams;)V

    .line 3496
    new-instance v1, Lcom/android/server/policy/PhoneWindowManager$TwToolBoxPointerEventListener;

    const/4 v2, 0x0

    invoke-direct {v1, p0, v2}, Lcom/android/server/policy/PhoneWindowManager$TwToolBoxPointerEventListener;-><init>(Lcom/android/server/policy/PhoneWindowManager;Lcom/android/server/policy/PhoneWindowManager$1;)V

    iput-object v1, p0, mTwToolBoxPointerEventListener:Lcom/android/server/policy/PhoneWindowManager$TwToolBoxPointerEventListener;

    .line 3497
    iget-object v1, p0, mWindowManagerFuncs:Landroid/view/WindowManagerPolicy$WindowManagerFuncs;

    iget-object v2, p0, mTwToolBoxPointerEventListener:Lcom/android/server/policy/PhoneWindowManager$TwToolBoxPointerEventListener;

    invoke-interface {v1, v2}, Landroid/view/WindowManagerPolicy$WindowManagerFuncs;->registerPointerEventListener(Landroid/view/WindowManagerPolicy$PointerEventListener;)V

    .line 3498
    iget-object v1, p0, mTwToolBoxFloatingViewer:Lcom/samsung/android/toolbox/TwToolBoxFloatingViewer;

    invoke-virtual {v1}, Lcom/samsung/android/toolbox/TwToolBoxFloatingViewer;->registerCallback()V

    .line 3499
    iget-object v1, p0, mTwToolBoxFloatingViewer:Lcom/samsung/android/toolbox/TwToolBoxFloatingViewer;

    new-instance v2, Lcom/android/server/policy/PhoneWindowManager$13;

    invoke-direct {v2, p0}, Lcom/android/server/policy/PhoneWindowManager$13;-><init>(Lcom/android/server/policy/PhoneWindowManager;)V

    iput-object v2, v1, Lcom/samsung/android/toolbox/TwToolBoxFloatingViewer;->mDelegateKeyguardShowing:Lcom/samsung/android/toolbox/TwToolBoxFloatingViewer$DelegateKeyguardShowing;

    .line 3506
    .end local v0    # "wm":Landroid/view/WindowManager;
    :cond_3e
    return-void
.end method

.method private endCallPress(JZI)V
    .registers 8
    .param p1, "eventTime"    # J
    .param p3, "interactive"    # Z
    .param p4, "count"    # I

    .prologue
    .line 1874
    const/4 v1, 0x2

    if-ne p4, v1, :cond_9

    .line 1875
    iget v1, p0, mDoublePressOnPowerBehavior:I

    invoke-direct {p0, p1, p2, p3, v1}, powerMultiPressAction(JZI)V

    .line 1885
    :cond_8
    :goto_8
    return-void

    .line 1876
    :cond_9
    const/4 v1, 0x3

    if-ne p4, v1, :cond_12

    .line 1877
    iget v1, p0, mTriplePressOnPowerBehavior:I

    invoke-direct {p0, p1, p2, p3, v1}, powerMultiPressAction(JZI)V

    goto :goto_8

    .line 1878
    :cond_12
    if-eqz p3, :cond_8

    iget-boolean v1, p0, mBeganFromNonInteractiveEndCall:Z

    if-nez v1, :cond_8

    iget-object v1, p0, mSystemKeyManager:Lcom/android/server/policy/sec/SystemKeyManager;

    const/4 v2, 0x6

    invoke-virtual {v1, v2}, Lcom/android/server/policy/sec/SystemKeyManager;->isSystemKeyEventRequested(I)Z

    move-result v1

    if-nez v1, :cond_8

    .line 1880
    const-string/jumbo v1, "security.ode.encrypting"

    invoke-static {v1}, Landroid/os/SystemProperties;->get(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v0

    .line 1881
    .local v0, "state":Ljava/lang/String;
    iget-object v1, p0, mSPWM:Lcom/android/server/policy/sec/SamsungPhoneWindowManager;

    invoke-virtual {v1}, Lcom/android/server/policy/sec/SamsungPhoneWindowManager;->isRingingOrOffhook()Z

    move-result v1

    if-nez v1, :cond_8

    const-string/jumbo v1, "true"

    invoke-virtual {v1, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-nez v1, :cond_8

    iget-object v1, p0, mContext:Landroid/content/Context;

    invoke-static {v1}, Lcom/android/server/policy/sec/SamsungPolicyProperties;->isBlockKey(Landroid/content/Context;)Z

    move-result v1

    if-nez v1, :cond_8

    .line 1882
    invoke-virtual {p0}, launchHomeFromHotKey()V

    goto :goto_8
.end method

.method private finishEndCallKeyPress()V
    .registers 2

    .prologue
    const/4 v0, 0x0

    .line 1869
    iput-boolean v0, p0, mBeganFromNonInteractiveEndCall:Z

    .line 1870
    iput v0, p0, mEndCallKeyPressCounter:I

    .line 1871
    return-void
.end method

.method private finishKeyguardDrawn(I)V
    .registers 8
    .param p1, "displayId"    # I

    .prologue
    .line 10164
    iget-object v2, p0, mLock:Ljava/lang/Object;

    monitor-enter v2

    .line 10166
    :try_start_3
    iget-boolean v0, p0, mScreenOnEarly:Z

    .line 10171
    .local v0, "mScreenOnEarly":Z
    if-eqz v0, :cond_b

    iget-boolean v1, p0, mKeyguardDrawComplete:Z

    if-eqz v1, :cond_36

    .line 10172
    :cond_b
    sget-boolean v1, DEBUG_WAKEUP:Z

    if-eqz v1, :cond_34

    const-string v1, "WindowManager"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v4, "finishKeyguardDrawn is failed... mScreenOnEarly : "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v3

    const-string v4, ", mKeyguardDrawComplete : "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    iget-boolean v4, p0, mKeyguardDrawComplete:Z

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v1, v3}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 10173
    :cond_34
    monitor-exit v2

    .line 10192
    :goto_35
    return-void

    .line 10176
    :cond_36
    const/4 v1, 0x1

    iput-boolean v1, p0, mKeyguardDrawComplete:Z

    .line 10177
    iget-object v1, p0, mKeyguardDelegate:Lcom/android/server/policy/keyguard/KeyguardServiceDelegate;

    if-eqz v1, :cond_43

    .line 10178
    iget-object v1, p0, mHandler:Landroid/os/Handler;

    const/4 v3, 0x6

    invoke-virtual {v1, v3}, Landroid/os/Handler;->removeMessages(I)V

    .line 10180
    :cond_43
    const/4 v1, 0x0

    iput-boolean v1, p0, mWindowManagerDrawComplete:Z

    .line 10181
    monitor-exit v2
    :try_end_47
    .catchall {:try_start_3 .. :try_end_47} :catchall_55

    .line 10185
    iget-object v1, p0, mScreenOnListener:Landroid/view/WindowManagerPolicy$ScreenOnListener;

    if-eqz v1, :cond_58

    .line 10186
    iget-object v1, p0, mWindowManagerInternal:Landroid/view/WindowManagerInternal;

    iget-object v2, p0, mWindowManagerDrawCallback:Ljava/lang/Runnable;

    const-wide/16 v4, 0x3e8

    invoke-virtual {v1, v2, v4, v5, p1}, Landroid/view/WindowManagerInternal;->waitForAllWindowsDrawn(Ljava/lang/Runnable;JI)V

    goto :goto_35

    .line 10181
    .end local v0    # "mScreenOnEarly":Z
    :catchall_55
    move-exception v1

    :try_start_56
    monitor-exit v2
    :try_end_57
    .catchall {:try_start_56 .. :try_end_57} :catchall_55

    throw v1

    .line 10189
    .restart local v0    # "mScreenOnEarly":Z
    :cond_58
    iget-object v1, p0, mWindowManagerInternal:Landroid/view/WindowManagerInternal;

    invoke-virtual {v1}, Landroid/view/WindowManagerInternal;->requestTraversalFromDisplayManager()V

    .line 10190
    iget-object v1, p0, mHandler:Landroid/os/Handler;

    const/4 v2, 0x7

    invoke-virtual {v1, v2}, Landroid/os/Handler;->sendEmptyMessage(I)Z

    goto :goto_35
.end method

.method private finishPowerKeyPress()V
    .registers 2

    .prologue
    const/4 v0, 0x0

    .line 1855
    iput-boolean v0, p0, mBeganFromNonInteractive:Z

    .line 1856
    iput v0, p0, mPowerKeyPressCounter:I

    .line 1857
    iget-object v0, p0, mPowerKeyWakeLock:Landroid/os/PowerManager$WakeLock;

    invoke-virtual {v0}, Landroid/os/PowerManager$WakeLock;->isHeld()Z

    move-result v0

    if-eqz v0, :cond_12

    .line 1858
    iget-object v0, p0, mPowerKeyWakeLock:Landroid/os/PowerManager$WakeLock;

    invoke-virtual {v0}, Landroid/os/PowerManager$WakeLock;->release()V

    .line 1860
    :cond_12
    return-void
.end method

.method private finishScreenTurningOn(I)V
    .registers 8
    .param p1, "displayId"    # I

    .prologue
    .line 10379
    iget-object v3, p0, mLock:Ljava/lang/Object;

    monitor-enter v3

    .line 10382
    :try_start_3
    invoke-virtual {p0}, updateOrientationListenerLp()V

    .line 10383
    monitor-exit v3
    :try_end_7
    .catchall {:try_start_3 .. :try_end_7} :catchall_6f

    .line 10386
    iget-object v3, p0, mLock:Ljava/lang/Object;

    monitor-enter v3

    .line 10428
    :try_start_a
    sget-boolean v2, DEBUG_WAKEUP:Z

    if-eqz v2, :cond_59

    const-string v2, "WindowManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v5, "finishScreenTurningOn: mAwake="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    iget-boolean v5, p0, mAwake:Z

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, ", mScreenOnEarly="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    iget-boolean v5, p0, mScreenOnEarly:Z

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, ", mScreenOnFully="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    iget-boolean v5, p0, mScreenOnFully:Z

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, ", mKeyguardDrawComplete="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    iget-boolean v5, p0, mKeyguardDrawComplete:Z

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, ", mWindowManagerDrawComplete="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    iget-boolean v5, p0, mWindowManagerDrawComplete:Z

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v2, v4}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 10435
    :cond_59
    iget-boolean v2, p0, mScreenOnFully:Z

    if-nez v2, :cond_6d

    iget-boolean v2, p0, mScreenOnEarly:Z

    if-eqz v2, :cond_6d

    iget-boolean v2, p0, mWindowManagerDrawComplete:Z

    if-eqz v2, :cond_6d

    iget-boolean v2, p0, mAwake:Z

    if-eqz v2, :cond_72

    iget-boolean v2, p0, mKeyguardDrawComplete:Z

    if-nez v2, :cond_72

    .line 10437
    :cond_6d
    monitor-exit v3
    :try_end_6e
    .catchall {:try_start_a .. :try_end_6e} :catchall_cb

    .line 10485
    :cond_6e
    :goto_6e
    return-void

    .line 10383
    :catchall_6f
    move-exception v2

    :try_start_70
    monitor-exit v3
    :try_end_71
    .catchall {:try_start_70 .. :try_end_71} :catchall_6f

    throw v2

    .line 10440
    :cond_72
    :try_start_72
    sget-boolean v2, DEBUG_WAKEUP:Z

    if-eqz v2, :cond_7d

    const-string v2, "WindowManager"

    const-string v4, "Finished screen turning on..."

    invoke-static {v2, v4}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 10441
    :cond_7d
    iget-object v1, p0, mScreenOnListener:Landroid/view/WindowManagerPolicy$ScreenOnListener;

    .line 10442
    .local v1, "listener":Landroid/view/WindowManagerPolicy$ScreenOnListener;
    const/4 v2, 0x0

    iput-object v2, p0, mScreenOnListener:Landroid/view/WindowManagerPolicy$ScreenOnListener;

    .line 10443
    const/4 v2, 0x1

    iput-boolean v2, p0, mScreenOnFully:Z

    .line 10450
    iget-boolean v2, p0, mKeyguardDrawnOnce:Z

    if-nez v2, :cond_c9

    iget-boolean v2, p0, mAwake:Z

    if-eqz v2, :cond_c9

    .line 10451
    const/4 v2, 0x1

    iput-boolean v2, p0, mKeyguardDrawnOnce:Z

    .line 10452
    const/4 v0, 0x1

    .line 10453
    .local v0, "enableScreen":Z
    iget-boolean v2, p0, mBootMessageNeedsHiding:Z

    if-eqz v2, :cond_9b

    .line 10454
    const/4 v2, 0x0

    iput-boolean v2, p0, mBootMessageNeedsHiding:Z

    .line 10455
    invoke-virtual {p0}, hideBootMessages()V

    .line 10460
    :cond_9b
    :goto_9b
    monitor-exit v3
    :try_end_9c
    .catchall {:try_start_72 .. :try_end_9c} :catchall_cb

    .line 10462
    if-eqz v1, :cond_a1

    .line 10463
    invoke-interface {v1}, Landroid/view/WindowManagerPolicy$ScreenOnListener;->onScreenOn()V

    .line 10466
    :cond_a1
    if-eqz v0, :cond_a8

    .line 10468
    :try_start_a3
    iget-object v2, p0, mWindowManager:Landroid/view/IWindowManager;

    invoke-interface {v2}, Landroid/view/IWindowManager;->enableScreenIfNeeded()V
    :try_end_a8
    .catch Landroid/os/RemoteException; {:try_start_a3 .. :try_end_a8} :catch_ce

    .line 10474
    :cond_a8
    :goto_a8
    iget-object v2, p0, mContext:Landroid/content/Context;

    invoke-static {v2}, Lcom/samsung/android/cocktailbar/CocktailBarFeatures;->isSystemBarType(Landroid/content/Context;)Z

    move-result v2

    if-eqz v2, :cond_bd

    .line 10475
    iget-boolean v2, p0, mTouchExplorationEnabled:Z

    if-eqz v2, :cond_bd

    .line 10476
    iget-object v2, p0, mCocktailPhoneWindowManager:Lcom/android/server/policy/cocktail/CocktailPhoneWindowManager;

    iget-boolean v3, p0, mTouchExplorationEnabled:Z

    const/16 v4, 0x1f4

    invoke-virtual {v2, v3, v4}, Lcom/android/server/policy/cocktail/CocktailPhoneWindowManager;->updateGripState(ZI)V

    .line 10481
    :cond_bd
    iget-object v2, p0, mFocusedWindow:Landroid/view/WindowManagerPolicy$WindowState;

    if-eqz v2, :cond_6e

    .line 10482
    iget-object v2, p0, mTspStateManager:Lcom/android/server/policy/sec/TspStateManager;

    iget-object v3, p0, mFocusedWindow:Landroid/view/WindowManagerPolicy$WindowState;

    invoke-virtual {v2, v3}, Lcom/android/server/policy/sec/TspStateManager;->updateWindowPolicy(Landroid/view/WindowManagerPolicy$WindowState;)V

    goto :goto_6e

    .line 10458
    .end local v0    # "enableScreen":Z
    :cond_c9
    const/4 v0, 0x0

    .restart local v0    # "enableScreen":Z
    goto :goto_9b

    .line 10460
    .end local v0    # "enableScreen":Z
    .end local v1    # "listener":Landroid/view/WindowManagerPolicy$ScreenOnListener;
    :catchall_cb
    move-exception v2

    :try_start_cc
    monitor-exit v3
    :try_end_cd
    .catchall {:try_start_cc .. :try_end_cd} :catchall_cb

    throw v2

    .line 10469
    .restart local v0    # "enableScreen":Z
    .restart local v1    # "listener":Landroid/view/WindowManagerPolicy$ScreenOnListener;
    :catch_ce
    move-exception v2

    goto :goto_a8
.end method

.method private finishWindowsDrawn(I)V
    .registers 6
    .param p1, "displayId"    # I

    .prologue
    .line 10356
    iget-object v1, p0, mLock:Ljava/lang/Object;

    monitor-enter v1

    .line 10364
    :try_start_3
    iget-boolean v0, p0, mScreenOnEarly:Z

    if-eqz v0, :cond_b

    iget-boolean v0, p0, mWindowManagerDrawComplete:Z

    if-eqz v0, :cond_38

    .line 10365
    :cond_b
    sget-boolean v0, DEBUG_WAKEUP:Z

    if-eqz v0, :cond_36

    const-string v0, "WindowManager"

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v3, "finishWindowsDrawn is failed... mScreenOnEarly : "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    iget-boolean v3, p0, mScreenOnEarly:Z

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string v3, ", mWindowManagerDrawComplete : "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    iget-boolean v3, p0, mWindowManagerDrawComplete:Z

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v0, v2}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 10366
    :cond_36
    monitor-exit v1

    .line 10376
    :goto_37
    return-void

    .line 10372
    :cond_38
    const/4 v0, 0x1

    iput-boolean v0, p0, mWindowManagerDrawComplete:Z

    .line 10373
    monitor-exit v1
    :try_end_3c
    .catchall {:try_start_3 .. :try_end_3c} :catchall_40

    .line 10375
    invoke-direct {p0, p1}, finishScreenTurningOn(I)V

    goto :goto_37

    .line 10373
    :catchall_40
    move-exception v0

    :try_start_41
    monitor-exit v1
    :try_end_42
    .catchall {:try_start_41 .. :try_end_42} :catchall_40

    throw v0
.end method

.method static getAudioService()Landroid/media/IAudioService;
    .registers 3

    .prologue
    .line 4953
    const-string v1, "audio"

    invoke-static {v1}, Landroid/os/ServiceManager;->checkService(Ljava/lang/String;)Landroid/os/IBinder;

    move-result-object v1

    invoke-static {v1}, Landroid/media/IAudioService$Stub;->asInterface(Landroid/os/IBinder;)Landroid/media/IAudioService;

    move-result-object v0

    .line 4955
    .local v0, "audioService":Landroid/media/IAudioService;
    if-nez v0, :cond_13

    .line 4956
    const-string v1, "WindowManager"

    const-string v2, "Unable to find IAudioService interface."

    invoke-static {v1, v2}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 4958
    :cond_13
    return-object v0
.end method

.method private declared-synchronized getCoverManager()Lcom/samsung/android/cover/ICoverManager;
    .registers 3

    .prologue
    .line 12872
    monitor-enter p0

    :try_start_1
    iget-object v0, p0, mCoverManager:Lcom/samsung/android/cover/ICoverManager;

    if-nez v0, :cond_1d

    .line 12873
    const-string v0, "cover"

    invoke-static {v0}, Landroid/os/ServiceManager;->getService(Ljava/lang/String;)Landroid/os/IBinder;

    move-result-object v0

    invoke-static {v0}, Lcom/samsung/android/cover/ICoverManager$Stub;->asInterface(Landroid/os/IBinder;)Lcom/samsung/android/cover/ICoverManager;

    move-result-object v0

    iput-object v0, p0, mCoverManager:Lcom/samsung/android/cover/ICoverManager;

    .line 12874
    iget-object v0, p0, mCoverManager:Lcom/samsung/android/cover/ICoverManager;

    if-nez v0, :cond_1d

    .line 12875
    const-string v0, "WindowManager"

    const-string/jumbo v1, "warning: no COVER_MANAGER_SERVICE"

    invoke-static {v0, v1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 12878
    :cond_1d
    iget-object v0, p0, mCoverManager:Lcom/samsung/android/cover/ICoverManager;
    :try_end_1f
    .catchall {:try_start_1 .. :try_end_1f} :catchall_21

    monitor-exit p0

    return-object v0

    .line 12872
    :catchall_21
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method static getDreamManager()Landroid/service/dreams/IDreamManager;
    .registers 1

    .prologue
    .line 4944
    const-string/jumbo v0, "dreams"

    invoke-static {v0}, Landroid/os/ServiceManager;->checkService(Ljava/lang/String;)Landroid/os/IBinder;

    move-result-object v0

    invoke-static {v0}, Landroid/service/dreams/IDreamManager$Stub;->asInterface(Landroid/os/IBinder;)Landroid/service/dreams/IDreamManager;

    move-result-object v0

    return-object v0
.end method

.method private getEDM()Landroid/app/enterprise/EnterpriseDeviceManager;
    .registers 3

    .prologue
    .line 4963
    iget-object v0, p0, mEDM:Landroid/app/enterprise/EnterpriseDeviceManager;

    if-nez v0, :cond_11

    .line 4964
    iget-object v0, p0, mContext:Landroid/content/Context;

    const-string/jumbo v1, "enterprise_policy"

    invoke-virtual {v0, v1}, Landroid/content/Context;->getSystemService(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Landroid/app/enterprise/EnterpriseDeviceManager;

    iput-object v0, p0, mEDM:Landroid/app/enterprise/EnterpriseDeviceManager;

    .line 4967
    :cond_11
    iget-object v0, p0, mEDM:Landroid/app/enterprise/EnterpriseDeviceManager;

    return-object v0
.end method

.method private declared-synchronized getFrontLEDManager()Lcom/samsung/android/FrontLED/IFrontLEDManager;
    .registers 3

    .prologue
    .line 13668
    monitor-enter p0

    :try_start_1
    const-string v0, "WindowManager"

    const-string/jumbo v1, "getFrontLEDManager"

    invoke-static {v0, v1}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 13675
    iget-object v0, p0, mFrontLEDManager:Lcom/samsung/android/FrontLED/IFrontLEDManager;
    :try_end_b
    .catchall {:try_start_1 .. :try_end_b} :catchall_d

    monitor-exit p0

    return-object v0

    .line 13668
    :catchall_d
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method private getHdmiControl()Lcom/android/server/policy/PhoneWindowManager$HdmiControl;
    .registers 5

    .prologue
    .line 2262
    iget-object v2, p0, mHdmiControl:Lcom/android/server/policy/PhoneWindowManager$HdmiControl;

    if-nez v2, :cond_1e

    .line 2263
    iget-object v2, p0, mContext:Landroid/content/Context;

    const-string/jumbo v3, "hdmi_control"

    invoke-virtual {v2, v3}, Landroid/content/Context;->getSystemService(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Landroid/hardware/hdmi/HdmiControlManager;

    .line 2265
    .local v1, "manager":Landroid/hardware/hdmi/HdmiControlManager;
    const/4 v0, 0x0

    .line 2266
    .local v0, "client":Landroid/hardware/hdmi/HdmiPlaybackClient;
    if-eqz v1, :cond_16

    .line 2267
    invoke-virtual {v1}, Landroid/hardware/hdmi/HdmiControlManager;->getPlaybackClient()Landroid/hardware/hdmi/HdmiPlaybackClient;

    move-result-object v0

    .line 2269
    :cond_16
    new-instance v2, Lcom/android/server/policy/PhoneWindowManager$HdmiControl;

    const/4 v3, 0x0

    invoke-direct {v2, v0, v3}, Lcom/android/server/policy/PhoneWindowManager$HdmiControl;-><init>(Landroid/hardware/hdmi/HdmiPlaybackClient;Lcom/android/server/policy/PhoneWindowManager$1;)V

    iput-object v2, p0, mHdmiControl:Lcom/android/server/policy/PhoneWindowManager$HdmiControl;

    .line 2271
    .end local v0    # "client":Landroid/hardware/hdmi/HdmiPlaybackClient;
    .end local v1    # "manager":Landroid/hardware/hdmi/HdmiControlManager;
    :cond_1e
    iget-object v2, p0, mHdmiControl:Lcom/android/server/policy/PhoneWindowManager$HdmiControl;

    return-object v2
.end method

.method static getLongIntArray(Landroid/content/res/Resources;I)[J
    .registers 8
    .param p0, "r"    # Landroid/content/res/Resources;
    .param p1, "resid"    # I

    .prologue
    .line 11108
    invoke-virtual {p0, p1}, Landroid/content/res/Resources;->getIntArray(I)[I

    move-result-object v0

    .line 11109
    .local v0, "ar":[I
    if-nez v0, :cond_8

    .line 11110
    const/4 v2, 0x0

    .line 11116
    :cond_7
    return-object v2

    .line 11112
    :cond_8
    array-length v3, v0

    new-array v2, v3, [J

    .line 11113
    .local v2, "out":[J
    const/4 v1, 0x0

    .local v1, "i":I
    :goto_c
    array-length v3, v0

    if-ge v1, v3, :cond_7

    .line 11114
    aget v3, v0, v1

    int-to-long v4, v3

    aput-wide v4, v2, v1

    .line 11113
    add-int/lit8 v1, v1, 0x1

    goto :goto_c
.end method

.method private getMaxMultiPressPowerCount()I
    .registers 2

    .prologue
    .line 1983
    iget v0, p0, mTriplePressOnPowerBehavior:I

    if-eqz v0, :cond_e

    iget-object v0, p0, mSPWM:Lcom/android/server/policy/sec/SamsungPhoneWindowManager;

    invoke-virtual {v0}, Lcom/android/server/policy/sec/SamsungPhoneWindowManager;->isSafetyAssuranceEnabled()Z

    move-result v0

    if-eqz v0, :cond_e

    .line 1984
    const/4 v0, 0x3

    .line 1989
    :goto_d
    return v0

    .line 1986
    :cond_e
    iget v0, p0, mDoublePressOnPowerBehavior:I

    if-eqz v0, :cond_1c

    iget-object v0, p0, mSPWM:Lcom/android/server/policy/sec/SamsungPhoneWindowManager;

    invoke-virtual {v0}, Lcom/android/server/policy/sec/SamsungPhoneWindowManager;->isDoubleTapOnPowerEnabled()Z

    move-result v0

    if-eqz v0, :cond_1c

    .line 1987
    const/4 v0, 0x2

    goto :goto_d

    .line 1989
    :cond_1c
    const/4 v0, 0x1

    goto :goto_d
.end method

.method private getPersonaManagerLocked()Landroid/os/PersonaManager;
    .registers 3

    .prologue
    .line 3008
    iget-boolean v0, p0, mIsKNOX2Supported:Z

    if-eqz v0, :cond_18

    .line 3009
    iget-object v0, p0, mPersonaManager:Landroid/os/PersonaManager;

    if-nez v0, :cond_15

    .line 3010
    iget-object v0, p0, mContext:Landroid/content/Context;

    const-string/jumbo v1, "persona"

    invoke-virtual {v0, v1}, Landroid/content/Context;->getSystemService(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Landroid/os/PersonaManager;

    iput-object v0, p0, mPersonaManager:Landroid/os/PersonaManager;

    .line 3012
    :cond_15
    iget-object v0, p0, mPersonaManager:Landroid/os/PersonaManager;

    .line 3014
    :goto_17
    return-object v0

    :cond_18
    const/4 v0, 0x0

    goto :goto_17
.end method

.method private getResolvedLongPressOnPowerBehavior()I
    .registers 2

    .prologue
    .line 2092
    invoke-static {}, Landroid/os/FactoryTest;->isLongPressOnPowerOffEnabled()Z

    move-result v0

    if-nez v0, :cond_14

    invoke-static {}, Landroid/os/FactoryTest;->isFactoryMode()Z

    move-result v0

    if-nez v0, :cond_14

    iget-object v0, p0, mContext:Landroid/content/Context;

    invoke-static {v0}, Landroid/os/FactoryTest;->isAutomaticTestMode(Landroid/content/Context;)Z

    move-result v0

    if-eqz v0, :cond_16

    .line 2097
    :cond_14
    const/4 v0, 0x3

    .line 2099
    :goto_15
    return v0

    :cond_16
    iget v0, p0, mLongPressOnPowerBehavior:I

    goto :goto_15
.end method

.method private getScreenshotChordLongPressDelay()J
    .registers 5

    .prologue
    .line 2141
    iget-object v0, p0, mKeyguardDelegate:Lcom/android/server/policy/keyguard/KeyguardServiceDelegate;

    invoke-virtual {v0}, Lcom/android/server/policy/keyguard/KeyguardServiceDelegate;->isShowing()Z

    move-result v0

    if-eqz v0, :cond_18

    .line 2143
    const/high16 v0, 0x40200000    # 2.5f

    iget-object v1, p0, mContext:Landroid/content/Context;

    invoke-static {v1}, Landroid/view/ViewConfiguration;->get(Landroid/content/Context;)Landroid/view/ViewConfiguration;

    move-result-object v1

    invoke-virtual {v1}, Landroid/view/ViewConfiguration;->getDeviceGlobalActionKeyTimeout()J

    move-result-wide v2

    long-to-float v1, v2

    mul-float/2addr v0, v1

    float-to-long v0, v0

    .line 2146
    :goto_17
    return-wide v0

    :cond_18
    iget-object v0, p0, mContext:Landroid/content/Context;

    invoke-static {v0}, Landroid/view/ViewConfiguration;->get(Landroid/content/Context;)Landroid/view/ViewConfiguration;

    move-result-object v0

    invoke-virtual {v0}, Landroid/view/ViewConfiguration;->getDeviceGlobalActionKeyTimeout()J

    move-result-wide v0

    goto :goto_17
.end method

.method private getSearchManager()Landroid/app/SearchManager;
    .registers 3

    .prologue
    .line 5843
    iget-object v0, p0, mSearchManager:Landroid/app/SearchManager;

    if-nez v0, :cond_11

    .line 5844
    iget-object v0, p0, mContext:Landroid/content/Context;

    const-string/jumbo v1, "search"

    invoke-virtual {v0, v1}, Landroid/content/Context;->getSystemService(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Landroid/app/SearchManager;

    iput-object v0, p0, mSearchManager:Landroid/app/SearchManager;

    .line 5846
    :cond_11
    iget-object v0, p0, mSearchManager:Landroid/app/SearchManager;

    return-object v0
.end method

.method private getTopFullscreenOpaqueWindowState(I)Landroid/view/WindowManagerPolicy$WindowState;
    .registers 3
    .param p1, "displayId"    # I

    .prologue
    .line 12522
    iget-object v0, p0, mTopFullscreenOpaqueWindowState:Landroid/view/WindowManagerPolicy$WindowState;

    return-object v0
.end method

.method private handleDoubleTapOnHome()V
    .registers 3

    .prologue
    const/4 v1, 0x1

    .line 2337
    iget v0, p0, mDoubleTapOnHomeBehavior:I

    if-ne v0, v1, :cond_a

    .line 2338
    iput-boolean v1, p0, mHomeConsumed:Z

    .line 2339
    invoke-direct {p0}, toggleRecentApps()V

    .line 2341
    :cond_a
    return-void
.end method

.method private handleHideBootMessage()V
    .registers 4

    .prologue
    const/4 v2, 0x0

    .line 10488
    iget-object v1, p0, mLock:Ljava/lang/Object;

    monitor-enter v1

    .line 10489
    :try_start_4
    iget-boolean v0, p0, mKeyguardDrawnOnce:Z

    if-nez v0, :cond_d

    .line 10490
    const/4 v0, 0x1

    iput-boolean v0, p0, mBootMessageNeedsHiding:Z

    .line 10491
    monitor-exit v1

    .line 10509
    :cond_c
    :goto_c
    return-void

    .line 10493
    :cond_d
    monitor-exit v1
    :try_end_e
    .catchall {:try_start_4 .. :try_end_e} :catchall_2a

    .line 10495
    iget-boolean v0, p0, mCustomDialog:Z

    if-eqz v0, :cond_2d

    .line 10496
    iget-object v0, p0, mCustomBootMsgDialog:Lcom/samsung/android/app/CustomBootMsgDialog;

    if-eqz v0, :cond_c

    .line 10497
    sget-boolean v0, DEBUG_WAKEUP:Z

    if-eqz v0, :cond_22

    .line 10498
    const-string v0, "WindowManager"

    const-string/jumbo v1, "handleHideBootMessage: mCustomBootMsgDialog dismissing"

    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 10499
    :cond_22
    iget-object v0, p0, mCustomBootMsgDialog:Lcom/samsung/android/app/CustomBootMsgDialog;

    invoke-virtual {v0}, Lcom/samsung/android/app/CustomBootMsgDialog;->dismiss()V

    .line 10500
    iput-object v2, p0, mCustomBootMsgDialog:Lcom/samsung/android/app/CustomBootMsgDialog;

    goto :goto_c

    .line 10493
    :catchall_2a
    move-exception v0

    :try_start_2b
    monitor-exit v1
    :try_end_2c
    .catchall {:try_start_2b .. :try_end_2c} :catchall_2a

    throw v0

    .line 10503
    :cond_2d
    iget-object v0, p0, mBootMsgDialog:Landroid/app/ProgressDialog;

    if-eqz v0, :cond_c

    .line 10504
    sget-boolean v0, DEBUG_WAKEUP:Z

    if-eqz v0, :cond_3d

    const-string v0, "WindowManager"

    const-string/jumbo v1, "handleHideBootMessage: dismissing"

    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 10505
    :cond_3d
    iget-object v0, p0, mBootMsgDialog:Landroid/app/ProgressDialog;

    invoke-virtual {v0}, Landroid/app/ProgressDialog;->dismiss()V

    .line 10506
    iput-object v2, p0, mBootMsgDialog:Landroid/app/ProgressDialog;

    goto :goto_c
.end method

.method private handleLongPressOnHome(I)V
    .registers 7
    .param p1, "deviceId"    # I

    .prologue
    const/4 v4, 0x1

    const/4 v2, 0x0

    const/4 v3, 0x0

    .line 2297
    iget-object v1, p0, mSPWM:Lcom/android/server/policy/sec/SamsungPhoneWindowManager;

    invoke-virtual {v1}, Lcom/android/server/policy/sec/SamsungPhoneWindowManager;->handleLongPressOnHome()Z

    move-result v1

    if-eqz v1, :cond_c

    .line 2334
    :cond_b
    :goto_b
    return-void

    .line 2298
    :cond_c
    iget v1, p0, mLongPressOnHomeBehavior:I

    if-eqz v1, :cond_b

    .line 2299
    iput-boolean v4, p0, mHomeConsumed:Z

    .line 2300
    invoke-virtual {p0, v3, v2, v2}, performHapticFeedbackLw(Landroid/view/WindowManagerPolicy$WindowState;IZ)Z

    .line 2302
    iget v1, p0, mLongPressOnHomeBehavior:I

    if-ne v1, v4, :cond_1d

    .line 2303
    invoke-direct {p0}, toggleRecentApps()V

    goto :goto_b

    .line 2304
    :cond_1d
    iget v1, p0, mLongPressOnHomeBehavior:I

    const/4 v2, 0x2

    if-ne v1, v2, :cond_40

    .line 2305
    invoke-virtual {p0}, isLockTaskModeEnabled()Z

    move-result v1

    if-nez v1, :cond_2c

    .line 2306
    invoke-direct {p0, v3, p1}, launchAssistAction(Ljava/lang/String;I)V

    goto :goto_b

    .line 2309
    :cond_2c
    new-instance v0, Landroid/os/Handler;

    invoke-static {}, Landroid/os/Looper;->getMainLooper()Landroid/os/Looper;

    move-result-object v1

    invoke-direct {v0, v1}, Landroid/os/Handler;-><init>(Landroid/os/Looper;)V

    .line 2310
    .local v0, "handler":Landroid/os/Handler;
    new-instance v1, Lcom/android/server/policy/PhoneWindowManager$7;

    invoke-direct {v1, p0}, Lcom/android/server/policy/PhoneWindowManager$7;-><init>(Lcom/android/server/policy/PhoneWindowManager;)V

    const-wide/16 v2, 0x0

    invoke-virtual {v0, v1, v2, v3}, Landroid/os/Handler;->postDelayed(Ljava/lang/Runnable;J)Z

    goto :goto_b

    .line 2326
    .end local v0    # "handler":Landroid/os/Handler;
    :cond_40
    iget v1, p0, mLongPressOnHomeBehavior:I

    const/4 v2, 0x3

    if-ne v1, v2, :cond_b

    .line 2327
    iget-boolean v1, p0, mNeedTriggerOWC:Z

    if-eqz v1, :cond_4d

    .line 2328
    invoke-direct {p0, v3, p1}, launchAssistAction(Ljava/lang/String;I)V

    goto :goto_b

    .line 2330
    :cond_4d
    iget-object v1, p0, mSPWM:Lcom/android/server/policy/sec/SamsungPhoneWindowManager;

    invoke-virtual {v1}, Lcom/android/server/policy/sec/SamsungPhoneWindowManager;->launchSReminder()V

    goto :goto_b
.end method

.method private handleNotifyDisplayAdded(I)V
    .registers 2
    .param p1, "displayId"    # I

    .prologue
    .line 12456
    return-void
.end method

.method private handleShortPressOnHome()V
    .registers 3

    .prologue
    .line 2243
    invoke-direct {p0}, getHdmiControl()Lcom/android/server/policy/PhoneWindowManager$HdmiControl;

    move-result-object v0

    invoke-virtual {v0}, Lcom/android/server/policy/PhoneWindowManager$HdmiControl;->turnOnTv()V

    .line 2247
    iget-object v0, p0, mDreamManagerInternal:Landroid/service/dreams/DreamManagerInternal;

    if-eqz v0, :cond_1a

    iget-object v0, p0, mDreamManagerInternal:Landroid/service/dreams/DreamManagerInternal;

    invoke-virtual {v0}, Landroid/service/dreams/DreamManagerInternal;->isDreaming()Z

    move-result v0

    if-eqz v0, :cond_1a

    .line 2248
    iget-object v0, p0, mDreamManagerInternal:Landroid/service/dreams/DreamManagerInternal;

    const/4 v1, 0x0

    invoke-virtual {v0, v1}, Landroid/service/dreams/DreamManagerInternal;->stopDream(Z)V

    .line 2254
    :goto_19
    return-void

    .line 2253
    :cond_1a
    invoke-virtual {p0}, launchHomeFromHotKey()V

    goto :goto_19
.end method

.method private hasLongPressOnPowerBehavior()Z
    .registers 2

    .prologue
    .line 2103
    invoke-direct {p0}, getResolvedLongPressOnPowerBehavior()I

    move-result v0

    if-eqz v0, :cond_8

    const/4 v0, 0x1

    :goto_7
    return v0

    :cond_8
    const/4 v0, 0x0

    goto :goto_7
.end method

.method private hideRecentApps(ZZ)V
    .registers 7
    .param p1, "triggeredFromAltTab"    # Z
    .param p2, "triggeredFromHome"    # Z

    .prologue
    .line 5921
    iget-object v2, p0, mSPWM:Lcom/android/server/policy/sec/SamsungPhoneWindowManager;

    invoke-virtual {v2, p1}, Lcom/android/server/policy/sec/SamsungPhoneWindowManager;->hideRecentApps(Z)Z

    move-result v2

    if-eqz v2, :cond_9

    .line 5935
    :cond_8
    :goto_8
    return-void

    .line 5924
    :cond_9
    const/4 v2, 0x0

    iput-boolean v2, p0, mPreloadedRecentApps:Z

    .line 5926
    :try_start_c
    invoke-virtual {p0}, getStatusBarService()Lcom/android/internal/statusbar/IStatusBarService;

    move-result-object v1

    .line 5927
    .local v1, "statusbar":Lcom/android/internal/statusbar/IStatusBarService;
    if-eqz v1, :cond_8

    .line 5928
    invoke-interface {v1, p1, p2}, Lcom/android/internal/statusbar/IStatusBarService;->hideRecentApps(ZZ)V
    :try_end_15
    .catch Landroid/os/RemoteException; {:try_start_c .. :try_end_15} :catch_16

    goto :goto_8

    .line 5930
    .end local v1    # "statusbar":Lcom/android/internal/statusbar/IStatusBarService;
    :catch_16
    move-exception v0

    .line 5931
    .local v0, "e":Landroid/os/RemoteException;
    const-string v2, "WindowManager"

    const-string v3, "RemoteException when closing recent apps"

    invoke-static {v2, v3, v0}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 5933
    const/4 v2, 0x0

    iput-object v2, p0, mStatusBarService:Lcom/android/internal/statusbar/IStatusBarService;

    goto :goto_8
.end method

.method private interceptEndCallKeyDown(Landroid/view/KeyEvent;Z)V
    .registers 11
    .param p1, "event"    # Landroid/view/KeyEvent;
    .param p2, "interactive"    # Z

    .prologue
    const/4 v5, 0x0

    const/4 v4, 0x1

    .line 1591
    invoke-virtual {p0}, getTelecommService()Landroid/telecom/TelecomManager;

    move-result-object v2

    .line 1592
    .local v2, "telecomManager":Landroid/telecom/TelecomManager;
    const/4 v0, 0x0

    .line 1593
    .local v0, "hungUp":Z
    if-eqz v2, :cond_f

    if-eqz p2, :cond_f

    .line 1594
    invoke-virtual {v2}, Landroid/telecom/TelecomManager;->endCall()Z

    move-result v0

    .line 1597
    :cond_f
    if-eqz p2, :cond_27

    if-nez v0, :cond_27

    .line 1598
    iput-boolean v5, p0, mEndCallKeyHandled:Z

    .line 1599
    iget-object v3, p0, mHandler:Landroid/os/Handler;

    iget-object v4, p0, mEndCallLongPress:Ljava/lang/Runnable;

    iget-object v5, p0, mContext:Landroid/content/Context;

    invoke-static {v5}, Landroid/view/ViewConfiguration;->get(Landroid/content/Context;)Landroid/view/ViewConfiguration;

    move-result-object v5

    invoke-virtual {v5}, Landroid/view/ViewConfiguration;->getDeviceGlobalActionKeyTimeout()J

    move-result-wide v6

    invoke-virtual {v3, v4, v6, v7}, Landroid/os/Handler;->postDelayed(Ljava/lang/Runnable;J)Z

    .line 1611
    :cond_26
    :goto_26
    return-void

    .line 1602
    :cond_27
    iput-boolean v4, p0, mEndCallKeyHandled:Z

    .line 1603
    iget-object v3, p0, mContext:Landroid/content/Context;

    invoke-static {v3}, Lcom/android/server/policy/sec/SamsungPolicyProperties;->FolderTypeFeature(Landroid/content/Context;)I

    move-result v3

    if-eqz v3, :cond_26

    .line 1604
    invoke-direct {p0}, getMaxMultiPressPowerCount()I

    move-result v1

    .line 1605
    .local v1, "maxCount":I
    if-le v1, v4, :cond_26

    .line 1606
    iput-boolean v4, p0, mBeganFromNonInteractiveEndCall:Z

    .line 1607
    iput-boolean v5, p0, mEndCallKeyHandled:Z

    goto :goto_26
.end method

.method private interceptEndCallKeyUp(Landroid/view/KeyEvent;ZZ)V
    .registers 14
    .param p1, "event"    # Landroid/view/KeyEvent;
    .param p2, "interactive"    # Z
    .param p3, "canceled"    # Z

    .prologue
    const/4 v5, 0x1

    .line 1614
    iget-boolean v4, p0, mEndCallKeyHandled:Z

    if-nez v4, :cond_44

    .line 1615
    iget-object v4, p0, mHandler:Landroid/os/Handler;

    iget-object v6, p0, mEndCallLongPress:Ljava/lang/Runnable;

    invoke-virtual {v4, v6}, Landroid/os/Handler;->removeCallbacks(Ljava/lang/Runnable;)V

    .line 1616
    iget-object v4, p0, mContext:Landroid/content/Context;

    invoke-static {v4}, Lcom/android/server/policy/sec/SamsungPolicyProperties;->FolderTypeFeature(Landroid/content/Context;)I

    move-result v4

    if-eqz v4, :cond_50

    .line 1617
    iget v4, p0, mEndCallKeyPressCounter:I

    add-int/lit8 v4, v4, 0x1

    iput v4, p0, mEndCallKeyPressCounter:I

    .line 1618
    invoke-direct {p0}, getMaxMultiPressPowerCount()I

    move-result v2

    .line 1619
    .local v2, "maxCount":I
    invoke-virtual {p1}, Landroid/view/KeyEvent;->getDownTime()J

    move-result-wide v0

    .line 1621
    .local v0, "eventTime":J
    iget v4, p0, mEndCallKeyPressCounter:I

    if-ge v4, v2, :cond_47

    .line 1623
    iget-object v6, p0, mHandler:Landroid/os/Handler;

    const/16 v7, 0x3e

    if-eqz p2, :cond_45

    move v4, v5

    :goto_2d
    iget v8, p0, mEndCallKeyPressCounter:I

    invoke-static {v0, v1}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object v9

    invoke-virtual {v6, v7, v4, v8, v9}, Landroid/os/Handler;->obtainMessage(IIILjava/lang/Object;)Landroid/os/Message;

    move-result-object v3

    .line 1625
    .local v3, "msg":Landroid/os/Message;
    invoke-virtual {v3, v5}, Landroid/os/Message;->setAsynchronous(Z)V

    .line 1626
    iget-object v4, p0, mHandler:Landroid/os/Handler;

    invoke-static {}, Landroid/view/ViewConfiguration;->getDoubleTapTimeout()I

    move-result v5

    int-to-long v6, v5

    invoke-virtual {v4, v3, v6, v7}, Landroid/os/Handler;->sendMessageDelayed(Landroid/os/Message;J)Z

    .line 1642
    .end local v0    # "eventTime":J
    .end local v2    # "maxCount":I
    .end local v3    # "msg":Landroid/os/Message;
    :cond_44
    :goto_44
    return-void

    .line 1623
    .restart local v0    # "eventTime":J
    .restart local v2    # "maxCount":I
    :cond_45
    const/4 v4, 0x0

    goto :goto_2d

    .line 1629
    :cond_47
    iget v4, p0, mEndCallKeyPressCounter:I

    invoke-direct {p0, v0, v1, p2, v4}, endCallPress(JZI)V

    .line 1631
    invoke-direct {p0}, finishEndCallKeyPress()V

    goto :goto_44

    .line 1633
    .end local v0    # "eventTime":J
    .end local v2    # "maxCount":I
    :cond_50
    if-nez p3, :cond_44

    .line 1634
    iget v4, p0, mEndcallBehavior:I

    and-int/lit8 v4, v4, 0x1

    if-eqz v4, :cond_44

    .line 1636
    invoke-virtual {p0}, goHome()Z

    move-result v4

    if-eqz v4, :cond_44

    goto :goto_44
.end method

.method private interceptFallback(Landroid/view/WindowManagerPolicy$WindowState;Landroid/view/KeyEvent;I)Z
    .registers 10
    .param p1, "win"    # Landroid/view/WindowManagerPolicy$WindowState;
    .param p2, "fallbackEvent"    # Landroid/view/KeyEvent;
    .param p3, "policyFlags"    # I

    .prologue
    .line 5764
    invoke-virtual {p0, p2, p3}, interceptKeyBeforeQueueing(Landroid/view/KeyEvent;I)I

    move-result v0

    .line 5765
    .local v0, "actions":I
    and-int/lit8 v1, v0, 0x1

    if-eqz v1, :cond_14

    .line 5766
    invoke-virtual {p0, p1, p2, p3}, interceptKeyBeforeDispatching(Landroid/view/WindowManagerPolicy$WindowState;Landroid/view/KeyEvent;I)J

    move-result-wide v2

    .line 5768
    .local v2, "delayMillis":J
    const-wide/16 v4, 0x0

    cmp-long v1, v2, v4

    if-nez v1, :cond_14

    .line 5769
    const/4 v1, 0x1

    .line 5772
    .end local v2    # "delayMillis":J
    :goto_13
    return v1

    :cond_14
    const/4 v1, 0x0

    goto :goto_13
.end method

.method private interceptPowerKeyDown(Landroid/view/KeyEvent;Z)V
    .registers 19
    .param p1, "event"    # Landroid/view/KeyEvent;
    .param p2, "interactive"    # Z

    .prologue
    .line 1647
    move-object/from16 v0, p0

    iget-object v12, v0, mPowerKeyWakeLock:Landroid/os/PowerManager$WakeLock;

    invoke-virtual {v12}, Landroid/os/PowerManager$WakeLock;->isHeld()Z

    move-result v12

    if-nez v12, :cond_11

    .line 1648
    move-object/from16 v0, p0

    iget-object v12, v0, mPowerKeyWakeLock:Landroid/os/PowerManager$WakeLock;

    invoke-virtual {v12}, Landroid/os/PowerManager$WakeLock;->acquire()V

    .line 1652
    :cond_11
    move-object/from16 v0, p0

    iget v12, v0, mPowerKeyPressCounter:I

    if-eqz v12, :cond_20

    .line 1653
    move-object/from16 v0, p0

    iget-object v12, v0, mHandler:Landroid/os/Handler;

    const/16 v13, 0xd

    invoke-virtual {v12, v13}, Landroid/os/Handler;->removeMessages(I)V

    .line 1658
    :cond_20
    move-object/from16 v0, p0

    iget-object v12, v0, mImmersiveModeConfirmation:Lcom/android/server/policy/ImmersiveModeConfirmation;

    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J

    move-result-wide v14

    move-object/from16 v0, p0

    iget v13, v0, mLastSystemUiFlags:I

    move-object/from16 v0, p0

    invoke-direct {v0, v13}, isImmersiveMode(I)Z

    move-result v13

    move/from16 v0, p2

    invoke-virtual {v12, v0, v14, v15, v13}, Lcom/android/server/policy/ImmersiveModeConfirmation;->onPowerKeyDown(ZJZ)Z

    move-result v8

    .line 1660
    .local v8, "panic":Z
    if-eqz v8, :cond_45

    .line 1661
    move-object/from16 v0, p0

    iget-object v12, v0, mHandler:Landroid/os/Handler;

    move-object/from16 v0, p0

    iget-object v13, v0, mHiddenNavPanic:Ljava/lang/Runnable;

    invoke-virtual {v12, v13}, Landroid/os/Handler;->post(Ljava/lang/Runnable;)Z

    .line 1665
    :cond_45
    if-eqz p2, :cond_5a

    move-object/from16 v0, p0

    iget-boolean v12, v0, mScreenshotChordPowerKeyTriggered:Z

    if-nez v12, :cond_5a

    invoke-virtual/range {p1 .. p1}, Landroid/view/KeyEvent;->getFlags()I

    move-result v12

    and-int/lit16 v12, v12, 0x400

    if-nez v12, :cond_5a

    .line 1667
    const/4 v12, 0x1

    move-object/from16 v0, p0

    iput-boolean v12, v0, mScreenshotChordPowerKeyTriggered:Z

    .line 1675
    :cond_5a
    const/4 v5, 0x0

    .line 1676
    .local v5, "hungUp":Z
    invoke-virtual/range {p0 .. p0}, getTelecommService()Landroid/telecom/TelecomManager;

    move-result-object v9

    .line 1687
    .local v9, "telecomManager":Landroid/telecom/TelecomManager;
    move-object/from16 v0, p0

    iget-object v12, v0, mSPWM:Lcom/android/server/policy/sec/SamsungPhoneWindowManager;

    invoke-static {}, Lcom/android/server/policy/sec/SamsungPhoneWindowManager;->getVoIPInterfaceService()Landroid/os/IVoIPInterface;

    move-result-object v10

    .line 1688
    .local v10, "voipInterfaceService":Landroid/os/IVoIPInterface;
    const-string v11, "com.amc.ui"

    .line 1690
    .local v11, "voipPackageName":Ljava/lang/String;
    if-eqz v9, :cond_7e

    .line 1692
    :try_start_6b
    invoke-virtual {v9}, Landroid/telecom/TelecomManager;->isRinging()Z

    move-result v12

    if-eqz v12, :cond_122

    .line 1695
    invoke-virtual {v9}, Landroid/telecom/TelecomManager;->silenceRinger()V

    .line 1697
    move-object/from16 v0, p0

    iget-object v12, v0, mSPWM:Lcom/android/server/policy/sec/SamsungPhoneWindowManager;

    const-string v13, "VCPS"

    const/4 v14, 0x0

    invoke-virtual {v12, v13, v14}, Lcom/android/server/policy/sec/SamsungPhoneWindowManager;->insertLog(Ljava/lang/String;Ljava/lang/String;)V
    :try_end_7e
    .catch Landroid/os/RemoteException; {:try_start_6b .. :try_end_7e} :catch_152

    .line 1724
    :cond_7e
    :goto_7e
    const-class v12, Lcom/android/server/GestureLauncherService;

    invoke-static {v12}, Lcom/android/server/LocalServices;->getService(Ljava/lang/Class;)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/GestureLauncherService;

    .line 1726
    .local v3, "gestureService":Lcom/android/server/GestureLauncherService;
    const/4 v4, 0x0

    .line 1727
    .local v4, "gesturedServiceIntercepted":Z
    if-eqz v3, :cond_91

    .line 1728
    move-object/from16 v0, p1

    move/from16 v1, p2

    invoke-virtual {v3, v0, v1}, Lcom/android/server/GestureLauncherService;->interceptPowerKeyDown(Landroid/view/KeyEvent;Z)Z

    move-result v4

    .line 1739
    :cond_91
    if-nez v5, :cond_9d

    move-object/from16 v0, p0

    iget-object v12, v0, mSPWM:Lcom/android/server/policy/sec/SamsungPhoneWindowManager;

    invoke-virtual {v12}, Lcom/android/server/policy/sec/SamsungPhoneWindowManager;->isCombinationKeyTriggered()Z

    move-result v12

    if-eqz v12, :cond_17e

    :cond_9d
    const/4 v12, 0x1

    :goto_9e
    move-object/from16 v0, p0

    iput-boolean v12, v0, mPowerKeyHandled:Z

    .line 1745
    move-object/from16 v0, p0

    iget-boolean v12, v0, mPowerKeyHandled:Z

    if-nez v12, :cond_d5

    .line 1746
    if-eqz p2, :cond_1aa

    .line 1748
    move-object/from16 v0, p0

    iget-object v12, v0, mSPWM:Lcom/android/server/policy/sec/SamsungPhoneWindowManager;

    invoke-virtual {v12}, Lcom/android/server/policy/sec/SamsungPhoneWindowManager;->isLiveDemo()Z

    move-result v12

    if-eqz v12, :cond_181

    move-object/from16 v0, p0

    iget-object v12, v0, mSPWM:Lcom/android/server/policy/sec/SamsungPhoneWindowManager;

    invoke-virtual {v12}, Lcom/android/server/policy/sec/SamsungPhoneWindowManager;->isHMTSupportAndConnected()Z

    move-result v12

    if-eqz v12, :cond_181

    .line 1749
    move-object/from16 v0, p0

    iget-object v12, v0, mHandler:Landroid/os/Handler;

    const/16 v13, 0xe

    invoke-virtual {v12, v13}, Landroid/os/Handler;->obtainMessage(I)Landroid/os/Message;

    move-result-object v7

    .line 1750
    .local v7, "msg":Landroid/os/Message;
    const/4 v12, 0x1

    invoke-virtual {v7, v12}, Landroid/os/Message;->setAsynchronous(Z)V

    .line 1751
    move-object/from16 v0, p0

    iget-object v12, v0, mHandler:Landroid/os/Handler;

    const-wide/16 v14, 0x1388

    invoke-virtual {v12, v7, v14, v15}, Landroid/os/Handler;->sendMessageDelayed(Landroid/os/Message;J)Z

    .line 1785
    .end local v7    # "msg":Landroid/os/Message;
    :cond_d5
    :goto_d5
    move-object/from16 v0, p0

    iget-object v12, v0, mCoverManager:Lcom/samsung/android/cover/ICoverManager;

    if-nez v12, :cond_ef

    move-object/from16 v0, p0

    iget-boolean v12, v0, mIsSupportFlipCover:Z

    if-nez v12, :cond_e7

    move-object/from16 v0, p0

    iget-boolean v12, v0, mIsSupportSViewCover:Z

    if-eqz v12, :cond_ef

    .line 1786
    :cond_e7
    invoke-direct/range {p0 .. p0}, getCoverManager()Lcom/samsung/android/cover/ICoverManager;

    move-result-object v12

    move-object/from16 v0, p0

    iput-object v12, v0, mCoverManager:Lcom/samsung/android/cover/ICoverManager;

    .line 1788
    :cond_ef
    move-object/from16 v0, p0

    iget-object v12, v0, mCoverManager:Lcom/samsung/android/cover/ICoverManager;

    if-eqz v12, :cond_121

    move-object/from16 v0, p0

    iget-object v12, v0, mCoverState:Lcom/samsung/android/cover/CoverState;

    if-eqz v12, :cond_121

    move-object/from16 v0, p0

    iget-boolean v12, v0, mIsSupportFlipCover:Z

    if-nez v12, :cond_107

    move-object/from16 v0, p0

    iget-boolean v12, v0, mIsSupportSViewCover:Z

    if-eqz v12, :cond_121

    .line 1789
    :cond_107
    move-object/from16 v0, p0

    iget-object v12, v0, mCoverState:Lcom/samsung/android/cover/CoverState;

    iget-boolean v12, v12, Lcom/samsung/android/cover/CoverState;->switchState:Z

    if-nez v12, :cond_121

    move-object/from16 v0, p0

    iget-object v12, v0, mCoverState:Lcom/samsung/android/cover/CoverState;

    invoke-virtual {v12}, Lcom/samsung/android/cover/CoverState;->getType()I

    move-result v12

    const/4 v13, 0x7

    if-ne v12, v13, :cond_121

    .line 1793
    :try_start_11a
    move-object/from16 v0, p0

    iget-object v12, v0, mCoverManager:Lcom/samsung/android/cover/ICoverManager;

    invoke-interface {v12}, Lcom/samsung/android/cover/ICoverManager;->sendPowerKeyToCover()V
    :try_end_121
    .catch Landroid/os/RemoteException; {:try_start_11a .. :try_end_121} :catch_1f8

    .line 1814
    :cond_121
    :goto_121
    return-void

    .line 1699
    .end local v3    # "gestureService":Lcom/android/server/GestureLauncherService;
    .end local v4    # "gesturedServiceIntercepted":Z
    :cond_122
    :try_start_122
    move-object/from16 v0, p0

    iget-object v12, v0, mContext:Landroid/content/Context;

    invoke-static {v12}, Lcom/android/server/policy/sec/SamsungPolicyProperties;->FolderTypeFeature(Landroid/content/Context;)I

    move-result v12

    if-nez v12, :cond_15c

    move-object/from16 v0, p0

    iget v12, v0, mIncallPowerBehavior:I

    and-int/lit8 v12, v12, 0x2

    if-eqz v12, :cond_15c

    invoke-virtual {v9}, Landroid/telecom/TelecomManager;->isInCall()Z

    move-result v12

    if-eqz v12, :cond_15c

    if-nez p2, :cond_142

    move-object/from16 v0, p0

    iget-boolean v12, v0, mHasNavigationBar:Z

    if-nez v12, :cond_15c

    .line 1704
    :cond_142
    invoke-virtual {v9}, Landroid/telecom/TelecomManager;->endCall()Z

    move-result v5

    .line 1706
    move-object/from16 v0, p0

    iget-object v12, v0, mSPWM:Lcom/android/server/policy/sec/SamsungPhoneWindowManager;

    const-string v13, "VCPE"

    const/4 v14, 0x0

    invoke-virtual {v12, v13, v14}, Lcom/android/server/policy/sec/SamsungPhoneWindowManager;->insertLog(Ljava/lang/String;Ljava/lang/String;)V
    :try_end_150
    .catch Landroid/os/RemoteException; {:try_start_122 .. :try_end_150} :catch_152

    goto/16 :goto_7e

    .line 1718
    :catch_152
    move-exception v2

    .line 1719
    .local v2, "ex":Landroid/os/RemoteException;
    const-string v12, "WindowManager"

    const-string v13, "ITelephony threw RemoteException"

    invoke-static {v12, v13, v2}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    goto/16 :goto_7e

    .line 1711
    .end local v2    # "ex":Landroid/os/RemoteException;
    :cond_15c
    :try_start_15c
    move-object/from16 v0, p0

    iget v12, v0, mIncallPowerBehavior:I

    and-int/lit8 v12, v12, 0x2

    if-eqz v12, :cond_7e

    if-eqz v10, :cond_7e

    invoke-interface {v10}, Landroid/os/IVoIPInterface;->isVoIPDialing()Z

    move-result v12

    if-nez v12, :cond_172

    invoke-interface {v10}, Landroid/os/IVoIPInterface;->isVoIPActivated()Z

    move-result v12

    if-eqz v12, :cond_7e

    :cond_172
    invoke-interface {v10, v11}, Landroid/os/IVoIPInterface;->getVoIPCallCount(Ljava/lang/String;)I

    move-result v12

    if-lez v12, :cond_7e

    .line 1715
    invoke-interface {v10}, Landroid/os/IVoIPInterface;->hangupVoIPCall()Z
    :try_end_17b
    .catch Landroid/os/RemoteException; {:try_start_15c .. :try_end_17b} :catch_152

    move-result v5

    goto/16 :goto_7e

    .line 1739
    .restart local v3    # "gestureService":Lcom/android/server/GestureLauncherService;
    .restart local v4    # "gesturedServiceIntercepted":Z
    :cond_17e
    const/4 v12, 0x0

    goto/16 :goto_9e

    .line 1756
    :cond_181
    invoke-direct/range {p0 .. p0}, hasLongPressOnPowerBehavior()Z

    move-result v12

    if-eqz v12, :cond_d5

    .line 1757
    move-object/from16 v0, p0

    iget-object v12, v0, mHandler:Landroid/os/Handler;

    const/16 v13, 0xe

    invoke-virtual {v12, v13}, Landroid/os/Handler;->obtainMessage(I)Landroid/os/Message;

    move-result-object v7

    .line 1758
    .restart local v7    # "msg":Landroid/os/Message;
    const/4 v12, 0x1

    invoke-virtual {v7, v12}, Landroid/os/Message;->setAsynchronous(Z)V

    .line 1759
    move-object/from16 v0, p0

    iget-object v12, v0, mHandler:Landroid/os/Handler;

    move-object/from16 v0, p0

    iget-object v13, v0, mContext:Landroid/content/Context;

    invoke-static {v13}, Landroid/view/ViewConfiguration;->get(Landroid/content/Context;)Landroid/view/ViewConfiguration;

    move-result-object v13

    invoke-virtual {v13}, Landroid/view/ViewConfiguration;->getDeviceGlobalActionKeyTimeout()J

    move-result-wide v14

    invoke-virtual {v12, v7, v14, v15}, Landroid/os/Handler;->sendMessageDelayed(Landroid/os/Message;J)Z

    goto/16 :goto_d5

    .line 1763
    .end local v7    # "msg":Landroid/os/Message;
    :cond_1aa
    invoke-virtual/range {p1 .. p1}, Landroid/view/KeyEvent;->getDownTime()J

    move-result-wide v12

    move-object/from16 v0, p0

    invoke-direct {v0, v12, v13}, wakeUpFromPowerKey(J)V

    .line 1764
    invoke-direct/range {p0 .. p0}, getMaxMultiPressPowerCount()I

    move-result v6

    .line 1766
    .local v6, "maxCount":I
    const/4 v12, 0x1

    if-gt v6, v12, :cond_1f2

    .line 1767
    const/4 v12, 0x1

    move-object/from16 v0, p0

    iput-boolean v12, v0, mPowerKeyHandled:Z

    .line 1773
    :goto_1bf
    move-object/from16 v0, p0

    iget-object v12, v0, mContext:Landroid/content/Context;

    invoke-static {v12}, Lcom/android/server/policy/sec/SamsungPolicyProperties;->FolderTypeFeature(Landroid/content/Context;)I

    move-result v12

    if-eqz v12, :cond_d5

    invoke-direct/range {p0 .. p0}, isCallRecord()Z

    move-result v12

    if-eqz v12, :cond_d5

    .line 1775
    move-object/from16 v0, p0

    iget-object v12, v0, mHandler:Landroid/os/Handler;

    const/16 v13, 0xe

    invoke-virtual {v12, v13}, Landroid/os/Handler;->obtainMessage(I)Landroid/os/Message;

    move-result-object v7

    .line 1776
    .restart local v7    # "msg":Landroid/os/Message;
    const/4 v12, 0x1

    invoke-virtual {v7, v12}, Landroid/os/Message;->setAsynchronous(Z)V

    .line 1777
    move-object/from16 v0, p0

    iget-object v12, v0, mHandler:Landroid/os/Handler;

    move-object/from16 v0, p0

    iget-object v13, v0, mContext:Landroid/content/Context;

    invoke-static {v13}, Landroid/view/ViewConfiguration;->get(Landroid/content/Context;)Landroid/view/ViewConfiguration;

    move-result-object v13

    invoke-virtual {v13}, Landroid/view/ViewConfiguration;->getDeviceGlobalActionKeyTimeout()J

    move-result-wide v14

    invoke-virtual {v12, v7, v14, v15}, Landroid/os/Handler;->sendMessageDelayed(Landroid/os/Message;J)Z

    goto/16 :goto_d5

    .line 1769
    .end local v7    # "msg":Landroid/os/Message;
    :cond_1f2
    const/4 v12, 0x1

    move-object/from16 v0, p0

    iput-boolean v12, v0, mBeganFromNonInteractive:Z

    goto :goto_1bf

    .line 1794
    .end local v6    # "maxCount":I
    :catch_1f8
    move-exception v2

    .line 1795
    .restart local v2    # "ex":Landroid/os/RemoteException;
    const-string v12, "WindowManager"

    const-string v13, "CoverManager threw RemoteException"

    invoke-static {v12, v13, v2}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    goto/16 :goto_121
.end method

.method private interceptPowerKeyUp(Landroid/view/KeyEvent;ZZ)V
    .registers 15
    .param p1, "event"    # Landroid/view/KeyEvent;
    .param p2, "interactive"    # Z
    .param p3, "canceled"    # Z

    .prologue
    const/4 v6, 0x1

    const/4 v5, 0x0

    .line 1817
    if-nez p3, :cond_8

    iget-boolean v7, p0, mPowerKeyHandled:Z

    if-eqz v7, :cond_44

    :cond_8
    move v2, v6

    .line 1818
    .local v2, "handled":Z
    :goto_9
    iput-boolean v5, p0, mScreenshotChordPowerKeyTriggered:Z

    .line 1819
    invoke-direct {p0}, cancelPendingScreenshotChordAction()V

    .line 1820
    invoke-direct {p0}, cancelPendingPowerKeyAction()V

    .line 1830
    if-nez v2, :cond_4b

    .line 1832
    iget v7, p0, mPowerKeyPressCounter:I

    add-int/lit8 v7, v7, 0x1

    iput v7, p0, mPowerKeyPressCounter:I

    .line 1834
    invoke-direct {p0}, getMaxMultiPressPowerCount()I

    move-result v3

    .line 1835
    .local v3, "maxCount":I
    invoke-virtual {p1}, Landroid/view/KeyEvent;->getDownTime()J

    move-result-wide v0

    .line 1836
    .local v0, "eventTime":J
    iget v7, p0, mPowerKeyPressCounter:I

    if-ge v7, v3, :cond_46

    .line 1839
    iget-object v7, p0, mHandler:Landroid/os/Handler;

    const/16 v8, 0xd

    if-eqz p2, :cond_2c

    move v5, v6

    :cond_2c
    iget v9, p0, mPowerKeyPressCounter:I

    invoke-static {v0, v1}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object v10

    invoke-virtual {v7, v8, v5, v9, v10}, Landroid/os/Handler;->obtainMessage(IIILjava/lang/Object;)Landroid/os/Message;

    move-result-object v4

    .line 1841
    .local v4, "msg":Landroid/os/Message;
    invoke-virtual {v4, v6}, Landroid/os/Message;->setAsynchronous(Z)V

    .line 1842
    iget-object v5, p0, mHandler:Landroid/os/Handler;

    invoke-static {}, Landroid/view/ViewConfiguration;->getDoubleTapTimeout()I

    move-result v6

    int-to-long v6, v6

    invoke-virtual {v5, v4, v6, v7}, Landroid/os/Handler;->sendMessageDelayed(Landroid/os/Message;J)Z

    .line 1852
    .end local v0    # "eventTime":J
    .end local v3    # "maxCount":I
    .end local v4    # "msg":Landroid/os/Message;
    :goto_43
    return-void

    .end local v2    # "handled":Z
    :cond_44
    move v2, v5

    .line 1817
    goto :goto_9

    .line 1847
    .restart local v0    # "eventTime":J
    .restart local v2    # "handled":Z
    .restart local v3    # "maxCount":I
    :cond_46
    iget v5, p0, mPowerKeyPressCounter:I

    invoke-direct {p0, v0, v1, p2, v5}, powerPress(JZI)V

    .line 1851
    .end local v0    # "eventTime":J
    .end local v3    # "maxCount":I
    :cond_4b
    invoke-direct {p0}, finishPowerKeyPress()V

    goto :goto_43
.end method

.method private interceptScreenshotChord()V
    .registers 7

    .prologue
    const-wide/16 v4, 0x96

    .line 2107
    iget-boolean v2, p0, mScreenshotChordEnabled:Z

    if-eqz v2, :cond_35

    iget-boolean v2, p0, mScreenshotChordVolumeDownKeyTriggered:Z

    if-eqz v2, :cond_35

    iget-boolean v2, p0, mScreenshotChordPowerKeyTriggered:Z

    if-eqz v2, :cond_35

    iget-boolean v2, p0, mScreenshotChordVolumeUpKeyTriggered:Z

    if-nez v2, :cond_35

    .line 2110
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v0

    .line 2111
    .local v0, "now":J
    iget-wide v2, p0, mScreenshotChordVolumeDownKeyTime:J

    add-long/2addr v2, v4

    cmp-long v2, v0, v2

    if-gtz v2, :cond_35

    iget-wide v2, p0, mScreenshotChordPowerKeyTime:J

    add-long/2addr v2, v4

    cmp-long v2, v0, v2

    if-gtz v2, :cond_35

    .line 2114
    const/4 v2, 0x1

    iput-boolean v2, p0, mScreenshotChordVolumeDownKeyConsumed:Z

    .line 2115
    invoke-direct {p0}, cancelPendingPowerKeyAction()V

    .line 2117
    iget-object v2, p0, mHandler:Landroid/os/Handler;

    iget-object v3, p0, mScreenshotRunnable:Ljava/lang/Runnable;

    invoke-direct {p0}, getScreenshotChordLongPressDelay()J

    move-result-wide v4

    invoke-virtual {v2, v3, v4, v5}, Landroid/os/Handler;->postDelayed(Ljava/lang/Runnable;J)Z

    .line 2120
    .end local v0    # "now":J
    :cond_35
    return-void
.end method

.method private interceptScreenshotLog()V
    .registers 7

    .prologue
    const-wide/16 v4, 0x96

    .line 2123
    iget-boolean v2, p0, mScreenshotChordEnabled:Z

    if-eqz v2, :cond_35

    iget-boolean v2, p0, mScreenshotChordVolumeUpKeyTriggered:Z

    if-eqz v2, :cond_35

    iget-boolean v2, p0, mScreenshotChordPowerKeyTriggered:Z

    if-eqz v2, :cond_35

    iget-boolean v2, p0, mScreenshotChordVolumeDownKeyTriggered:Z

    if-nez v2, :cond_35

    .line 2125
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v0

    .line 2126
    .local v0, "now":J
    iget-wide v2, p0, mVolumeUpKeyTime:J

    add-long/2addr v2, v4

    cmp-long v2, v0, v2

    if-gtz v2, :cond_35

    iget-wide v2, p0, mScreenshotChordPowerKeyTime:J

    add-long/2addr v2, v4

    cmp-long v2, v0, v2

    if-gtz v2, :cond_35

    .line 2128
    const/4 v2, 0x1

    iput-boolean v2, p0, mVolumeUpKeyConsumedByScreenshotChord:Z

    .line 2129
    invoke-direct {p0}, cancelPendingScreenshotForLog()V

    .line 2131
    iget-object v2, p0, mHandler:Landroid/os/Handler;

    iget-object v3, p0, mScreenshotForLog:Ljava/lang/Runnable;

    invoke-direct {p0}, getScreenshotChordLongPressDelay()J

    move-result-wide v4

    invoke-virtual {v2, v3, v4, v5}, Landroid/os/Handler;->postDelayed(Ljava/lang/Runnable;J)Z

    .line 2134
    .end local v0    # "now":J
    :cond_35
    return-void
.end method

.method private isAnyPortrait(I)Z
    .registers 3
    .param p1, "rotation"    # I

    .prologue
    .line 11035
    const/4 v0, 0x0

    invoke-direct {p0, p1, v0}, isAnyPortrait(II)Z

    move-result v0

    return v0
.end method

.method private isAnyPortrait(II)Z
    .registers 4
    .param p1, "rotation"    # I
    .param p2, "displayId"    # I

    .prologue
    .line 11044
    iget v0, p0, mPortraitRotation:I

    if-eq p1, v0, :cond_8

    iget v0, p0, mUpsideDownRotation:I

    if-ne p1, v0, :cond_a

    :cond_8
    const/4 v0, 0x1

    :goto_9
    return v0

    :cond_a
    const/4 v0, 0x0

    goto :goto_9
.end method

.method private isBuiltInKeyboardVisible()Z
    .registers 2

    .prologue
    .line 11485
    iget-boolean v0, p0, mHaveBuiltInKeyboard:Z

    if-eqz v0, :cond_e

    iget v0, p0, mLidKeyboardAccessibility:I

    invoke-direct {p0, v0}, isHidden(I)Z

    move-result v0

    if-nez v0, :cond_e

    const/4 v0, 0x1

    :goto_d
    return v0

    :cond_e
    const/4 v0, 0x0

    goto :goto_d
.end method

.method private isCallRecord()Z
    .registers 8

    .prologue
    const/4 v2, 0x1

    const/4 v3, 0x0

    .line 13681
    invoke-virtual {p0}, getTelecommService()Landroid/telecom/TelecomManager;

    move-result-object v1

    .line 13682
    .local v1, "telecomManager":Landroid/telecom/TelecomManager;
    iget-object v4, p0, mContext:Landroid/content/Context;

    invoke-virtual {v4}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v4

    const-string/jumbo v5, "hold_key_record_calls_enable_sharedpref"

    const/4 v6, -0x2

    invoke-static {v4, v5, v3, v6}, Landroid/provider/Settings$System;->getIntForUser(Landroid/content/ContentResolver;Ljava/lang/String;II)I

    move-result v4

    if-eqz v4, :cond_41

    move v0, v2

    .line 13684
    .local v0, "isRecordCallEnable":Z
    :goto_17
    const-string v4, "WindowManager"

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v6, "isRecordCallEnable = "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5, v0}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v4, v5}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 13685
    if-eqz v0, :cond_43

    if-eqz v1, :cond_43

    invoke-virtual {v1}, Landroid/telecom/TelecomManager;->isInCall()Z

    move-result v4

    if-eqz v4, :cond_43

    invoke-virtual {v1}, Landroid/telecom/TelecomManager;->isRinging()Z

    move-result v4

    if-nez v4, :cond_43

    .line 13688
    :goto_40
    return v2

    .end local v0    # "isRecordCallEnable":Z
    :cond_41
    move v0, v3

    .line 13682
    goto :goto_17

    .restart local v0    # "isRecordCallEnable":Z
    :cond_43
    move v2, v3

    .line 13688
    goto :goto_40
.end method

.method private isForceHideStatusBarWithFullDisplay(I)Z
    .registers 3
    .param p1, "displayId"    # I

    .prologue
    .line 12496
    const/4 v0, 0x0

    return v0
.end method

.method private isGlobalAccessibilityGestureEnabled()Z
    .registers 5

    .prologue
    const/4 v0, 0x1

    const/4 v1, 0x0

    .line 11775
    iget-object v2, p0, mContext:Landroid/content/Context;

    invoke-virtual {v2}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v2

    const-string/jumbo v3, "enable_accessibility_global_gesture_enabled"

    invoke-static {v2, v3, v1}, Landroid/provider/Settings$Global;->getInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I

    move-result v2

    if-ne v2, v0, :cond_12

    :goto_11
    return v0

    :cond_12
    move v0, v1

    goto :goto_11
.end method

.method private isHidden(I)Z
    .registers 5
    .param p1, "accessibilityMode"    # I

    .prologue
    const/4 v0, 0x1

    const/4 v1, 0x0

    .line 3766
    packed-switch p1, :pswitch_data_14

    move v0, v1

    .line 3772
    :cond_6
    :goto_6
    return v0

    .line 3768
    :pswitch_7
    iget v2, p0, mLidState:I

    if-eqz v2, :cond_6

    move v0, v1

    goto :goto_6

    .line 3770
    :pswitch_d
    iget v2, p0, mLidState:I

    if-eq v2, v0, :cond_6

    move v0, v1

    goto :goto_6

    .line 3766
    nop

    :pswitch_data_14
    .packed-switch 0x1
        :pswitch_7
        :pswitch_d
    .end packed-switch
.end method

.method private isImmersiveMode(I)Z
    .registers 4
    .param p1, "vis"    # I

    .prologue
    .line 12225
    const/16 v0, 0x1800

    .line 12226
    .local v0, "flags":I
    iget-object v1, p0, mNavigationBar:Landroid/view/WindowManagerPolicy$WindowState;

    if-eqz v1, :cond_16

    and-int/lit8 v1, p1, 0x2

    if-eqz v1, :cond_16

    and-int/lit16 v1, p1, 0x1800

    if-eqz v1, :cond_16

    invoke-direct {p0}, canHideNavigationBar()Z

    move-result v1

    if-eqz v1, :cond_16

    const/4 v1, 0x1

    :goto_15
    return v1

    :cond_16
    const/4 v1, 0x0

    goto :goto_15
.end method

.method private isKnoxKeyguardShownForKioskMode()Z
    .registers 3

    .prologue
    .line 8593
    invoke-direct {p0}, getPersonaManagerLocked()Landroid/os/PersonaManager;

    move-result-object v0

    if-eqz v0, :cond_25

    iget-object v0, p0, mPersonaManager:Landroid/os/PersonaManager;

    invoke-virtual {v0}, Landroid/os/PersonaManager;->isKioskContainerExistOnDevice()Z

    move-result v0

    if-eqz v0, :cond_25

    .line 8594
    iget-object v0, p0, mPersonaManager:Landroid/os/PersonaManager;

    iget-object v1, p0, mPersonaManager:Landroid/os/PersonaManager;

    invoke-virtual {v1}, Landroid/os/PersonaManager;->getFocusedUser()I

    move-result v1

    invoke-virtual {v0, v1}, Landroid/os/PersonaManager;->getKeyguardShowState(I)Z

    move-result v0

    if-eqz v0, :cond_25

    .line 8595
    const-string v0, "WindowManager"

    const-string v1, "Animations disallowed by KNOX COM keyguard."

    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 8596
    const/4 v0, 0x1

    .line 8599
    :goto_24
    return v0

    :cond_25
    const/4 v0, 0x0

    goto :goto_24
.end method

.method private isKnoxKeyguardShownForKioskMode(I)Z
    .registers 4
    .param p1, "userid"    # I

    .prologue
    .line 8605
    invoke-direct {p0}, getPersonaManagerLocked()Landroid/os/PersonaManager;

    move-result-object v0

    if-eqz v0, :cond_1f

    iget-object v0, p0, mPersonaManager:Landroid/os/PersonaManager;

    invoke-virtual {v0}, Landroid/os/PersonaManager;->isKioskContainerExistOnDevice()Z

    move-result v0

    if-eqz v0, :cond_1f

    .line 8606
    iget-object v0, p0, mPersonaManager:Landroid/os/PersonaManager;

    invoke-virtual {v0, p1}, Landroid/os/PersonaManager;->getKeyguardShowState(I)Z

    move-result v0

    if-eqz v0, :cond_1f

    .line 8607
    const-string v0, "WindowManager"

    const-string v1, "Animations disallowed by KNOX COM keyguard."

    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 8608
    const/4 v0, 0x1

    .line 8611
    :goto_1e
    return v0

    :cond_1f
    const/4 v0, 0x0

    goto :goto_1e
.end method

.method private isLandscapeOrSeascape(I)Z
    .registers 3
    .param p1, "rotation"    # I

    .prologue
    .line 11021
    const/4 v0, 0x0

    invoke-direct {p0, p1, v0}, isLandscapeOrSeascape(II)Z

    move-result v0

    return v0
.end method

.method private isLandscapeOrSeascape(II)Z
    .registers 4
    .param p1, "rotation"    # I
    .param p2, "displayId"    # I

    .prologue
    .line 11030
    iget v0, p0, mLandscapeRotation:I

    if-eq p1, v0, :cond_8

    iget v0, p0, mSeascapeRotation:I

    if-ne p1, v0, :cond_a

    :cond_8
    const/4 v0, 0x1

    :goto_9
    return v0

    :cond_a
    const/4 v0, 0x0

    goto :goto_9
.end method

.method private isRoundWindow()Z
    .registers 2

    .prologue
    .line 2354
    iget-object v0, p0, mContext:Landroid/content/Context;

    invoke-virtual {v0}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    move-result-object v0

    invoke-virtual {v0}, Landroid/content/res/Resources;->getConfiguration()Landroid/content/res/Configuration;

    move-result-object v0

    invoke-virtual {v0}, Landroid/content/res/Configuration;->isScreenRound()Z

    move-result v0

    return v0
.end method

.method private isSViewCoverHostWindow(Landroid/view/WindowManager$LayoutParams;)Z
    .registers 4
    .param p1, "attrs"    # Landroid/view/WindowManager$LayoutParams;

    .prologue
    .line 13048
    iget v0, p1, Landroid/view/WindowManager$LayoutParams;->type:I

    const/16 v1, 0x7d0

    if-ne v0, v1, :cond_8

    const/4 v0, 0x1

    :goto_7
    return v0

    :cond_8
    const/4 v0, 0x0

    goto :goto_7
.end method

.method private isSupportAndAttachedSViewCover()Z
    .registers 4

    .prologue
    const/4 v2, 0x3

    const/4 v0, 0x1

    .line 12883
    iget-boolean v1, p0, mIsSupportSViewCover:Z

    if-eqz v1, :cond_34

    .line 12884
    iget-object v1, p0, mCoverState:Lcom/samsung/android/cover/CoverState;

    if-eqz v1, :cond_34

    iget-object v1, p0, mCoverState:Lcom/samsung/android/cover/CoverState;

    iget v1, v1, Lcom/samsung/android/cover/CoverState;->type:I

    if-ne v1, v0, :cond_16

    iget-object v1, p0, mCoverState:Lcom/samsung/android/cover/CoverState;

    iget v1, v1, Lcom/samsung/android/cover/CoverState;->model:I

    if-ne v1, v2, :cond_33

    :cond_16
    iget-object v1, p0, mCoverState:Lcom/samsung/android/cover/CoverState;

    iget v1, v1, Lcom/samsung/android/cover/CoverState;->type:I

    if-eq v1, v2, :cond_33

    iget-object v1, p0, mCoverState:Lcom/samsung/android/cover/CoverState;

    iget v1, v1, Lcom/samsung/android/cover/CoverState;->type:I

    const/4 v2, 0x6

    if-eq v1, v2, :cond_33

    iget-object v1, p0, mCoverState:Lcom/samsung/android/cover/CoverState;

    iget v1, v1, Lcom/samsung/android/cover/CoverState;->type:I

    const/16 v2, 0xff

    if-eq v1, v2, :cond_33

    iget-object v1, p0, mCoverState:Lcom/samsung/android/cover/CoverState;

    iget v1, v1, Lcom/samsung/android/cover/CoverState;->type:I

    const/16 v2, 0x8

    if-ne v1, v2, :cond_34

    .line 12894
    :cond_33
    :goto_33
    return v0

    :cond_34
    const/4 v0, 0x0

    goto :goto_33
.end method

.method private isTheaterModeEnabled()Z
    .registers 5

    .prologue
    const/4 v0, 0x1

    const/4 v1, 0x0

    .line 11770
    iget-object v2, p0, mContext:Landroid/content/Context;

    invoke-virtual {v2}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v2

    const-string/jumbo v3, "theater_mode_on"

    invoke-static {v2, v3, v1}, Landroid/provider/Settings$Global;->getInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I

    move-result v2

    if-ne v2, v0, :cond_12

    :goto_11
    return v0

    :cond_12
    move v0, v1

    goto :goto_11
.end method

.method private static isValidGlobalKey(I)Z
    .registers 2
    .param p0, "keyCode"    # I

    .prologue
    .line 9403
    sparse-switch p0, :sswitch_data_8

    .line 9409
    const/4 v0, 0x1

    :goto_4
    return v0

    .line 9407
    :sswitch_5
    const/4 v0, 0x0

    goto :goto_4

    .line 9403
    nop

    :sswitch_data_8
    .sparse-switch
        0x1a -> :sswitch_5
        0xdf -> :sswitch_5
        0xe0 -> :sswitch_5
    .end sparse-switch
.end method

.method private isWakeKeyWhenScreenOff(I)Z
    .registers 5
    .param p1, "keyCode"    # I

    .prologue
    const/4 v1, 0x0

    const/4 v0, 0x1

    .line 9433
    sparse-switch p1, :sswitch_data_16

    .line 9464
    :cond_5
    :goto_5
    return v0

    .line 9438
    :sswitch_6
    iget v2, p0, mDockMode:I

    if-nez v2, :cond_5

    move v0, v1

    goto :goto_5

    .line 9442
    :sswitch_c
    iget-object v2, p0, mContext:Landroid/content/Context;

    invoke-static {v2}, Lcom/android/server/policy/sec/SamsungPolicyProperties;->FolderTypeFeature(Landroid/content/Context;)I

    move-result v2

    if-eq v2, v0, :cond_5

    :sswitch_14
    move v0, v1

    .line 9462
    goto :goto_5

    .line 9433
    :sswitch_data_16
    .sparse-switch
        0x18 -> :sswitch_6
        0x19 -> :sswitch_6
        0x1b -> :sswitch_c
        0x4f -> :sswitch_14
        0x55 -> :sswitch_14
        0x56 -> :sswitch_14
        0x57 -> :sswitch_14
        0x58 -> :sswitch_14
        0x59 -> :sswitch_14
        0x5a -> :sswitch_14
        0x5b -> :sswitch_14
        0x7e -> :sswitch_14
        0x7f -> :sswitch_14
        0x82 -> :sswitch_14
        0xa4 -> :sswitch_6
        0xde -> :sswitch_14
        0x42d -> :sswitch_14
    .end sparse-switch
.end method

.method private launchAssistAction(Ljava/lang/String;I)V
    .registers 9
    .param p1, "hint"    # Ljava/lang/String;
    .param p2, "deviceId"    # I

    .prologue
    .line 5796
    const-string v4, "assist"

    invoke-virtual {p0, v4}, sendCloseSystemWindows(Ljava/lang/String;)V

    .line 5797
    invoke-virtual {p0}, isUserSetupComplete()Z

    move-result v4

    if-nez v4, :cond_c

    .line 5829
    :cond_b
    :goto_b
    return-void

    .line 5801
    :cond_c
    const/4 v0, 0x0

    .line 5802
    .local v0, "args":Landroid/os/Bundle;
    const/high16 v4, -0x80000000

    if-le p2, v4, :cond_1b

    .line 5803
    new-instance v0, Landroid/os/Bundle;

    .end local v0    # "args":Landroid/os/Bundle;
    invoke-direct {v0}, Landroid/os/Bundle;-><init>()V

    .line 5804
    .restart local v0    # "args":Landroid/os/Bundle;
    const-string v4, "android.intent.extra.ASSIST_INPUT_DEVICE_ID"

    invoke-virtual {v0, v4, p2}, Landroid/os/Bundle;->putInt(Ljava/lang/String;I)V

    .line 5806
    :cond_1b
    iget-object v4, p0, mContext:Landroid/content/Context;

    invoke-virtual {v4}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    move-result-object v4

    invoke-virtual {v4}, Landroid/content/res/Resources;->getConfiguration()Landroid/content/res/Configuration;

    move-result-object v4

    iget v4, v4, Landroid/content/res/Configuration;->uiMode:I

    and-int/lit8 v4, v4, 0xf

    const/4 v5, 0x4

    if-ne v4, v5, :cond_3f

    .line 5809
    iget-object v4, p0, mContext:Landroid/content/Context;

    const-string/jumbo v5, "search"

    invoke-virtual {v4, v5}, Landroid/content/Context;->getSystemService(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Landroid/app/SearchManager;

    invoke-static {}, Landroid/os/UserHandle;->myUserId()I

    move-result v5

    invoke-virtual {v4, p1, v5, v0}, Landroid/app/SearchManager;->launchLegacyAssist(Ljava/lang/String;ILandroid/os/Bundle;)Z

    goto :goto_b

    .line 5813
    :cond_3f
    if-eqz p1, :cond_4d

    .line 5814
    if-nez v0, :cond_49

    .line 5815
    :try_start_43
    new-instance v1, Landroid/os/Bundle;

    invoke-direct {v1}, Landroid/os/Bundle;-><init>()V

    .end local v0    # "args":Landroid/os/Bundle;
    .local v1, "args":Landroid/os/Bundle;
    move-object v0, v1

    .line 5817
    .end local v1    # "args":Landroid/os/Bundle;
    .restart local v0    # "args":Landroid/os/Bundle;
    :cond_49
    const/4 v4, 0x1

    invoke-virtual {v0, p1, v4}, Landroid/os/Bundle;->putBoolean(Ljava/lang/String;Z)V

    .line 5819
    :cond_4d
    invoke-virtual {p0}, getStatusBarService()Lcom/android/internal/statusbar/IStatusBarService;

    move-result-object v3

    .line 5820
    .local v3, "statusbar":Lcom/android/internal/statusbar/IStatusBarService;
    if-eqz v3, :cond_b

    .line 5821
    invoke-interface {v3, v0}, Lcom/android/internal/statusbar/IStatusBarService;->startAssist(Landroid/os/Bundle;)V
    :try_end_56
    .catch Landroid/os/RemoteException; {:try_start_43 .. :try_end_56} :catch_57

    goto :goto_b

    .line 5823
    .end local v3    # "statusbar":Lcom/android/internal/statusbar/IStatusBarService;
    :catch_57
    move-exception v2

    .line 5824
    .local v2, "e":Landroid/os/RemoteException;
    const-string v4, "WindowManager"

    const-string v5, "RemoteException when starting assist"

    invoke-static {v4, v5, v2}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 5826
    const/4 v4, 0x0

    iput-object v4, p0, mStatusBarService:Lcom/android/internal/statusbar/IStatusBarService;

    goto :goto_b
.end method

.method private launchAssistLongPressAction()V
    .registers 6

    .prologue
    const/4 v4, 0x0

    .line 5776
    const/4 v3, 0x0

    invoke-virtual {p0, v3, v4, v4}, performHapticFeedbackLw(Landroid/view/WindowManagerPolicy$WindowState;IZ)Z

    .line 5777
    const-string v3, "assist"

    invoke-virtual {p0, v3}, sendCloseSystemWindows(Ljava/lang/String;)V

    .line 5780
    new-instance v1, Landroid/content/Intent;

    const-string v3, "android.intent.action.SEARCH_LONG_PRESS"

    invoke-direct {v1, v3}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 5781
    .local v1, "intent":Landroid/content/Intent;
    const/high16 v3, 0x10000000

    invoke-virtual {v1, v3}, Landroid/content/Intent;->setFlags(I)Landroid/content/Intent;

    .line 5785
    :try_start_16
    invoke-direct {p0}, getSearchManager()Landroid/app/SearchManager;

    move-result-object v2

    .line 5786
    .local v2, "searchManager":Landroid/app/SearchManager;
    if-eqz v2, :cond_1f

    .line 5787
    invoke-virtual {v2}, Landroid/app/SearchManager;->stopSearch()V

    .line 5789
    :cond_1f
    sget-object v3, Landroid/os/UserHandle;->CURRENT:Landroid/os/UserHandle;

    invoke-direct {p0, v1, v3}, startActivityAsUser(Landroid/content/Intent;Landroid/os/UserHandle;)V
    :try_end_24
    .catch Landroid/content/ActivityNotFoundException; {:try_start_16 .. :try_end_24} :catch_25

    .line 5793
    .end local v2    # "searchManager":Landroid/app/SearchManager;
    :goto_24
    return-void

    .line 5790
    :catch_25
    move-exception v0

    .line 5791
    .local v0, "e":Landroid/content/ActivityNotFoundException;
    const-string v3, "WindowManager"

    const-string v4, "No activity to handle assist long press action."

    invoke-static {v3, v4, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    goto :goto_24
.end method

.method private launchKeyguardOwner()V
    .registers 3

    .prologue
    .line 4999
    iget-object v0, p0, mKeyguardDelegate:Lcom/android/server/policy/keyguard/KeyguardServiceDelegate;

    if-eqz v0, :cond_11

    .line 5000
    iget-object v0, p0, mKeyguardDelegate:Lcom/android/server/policy/keyguard/KeyguardServiceDelegate;

    invoke-virtual {v0}, Lcom/android/server/policy/keyguard/KeyguardServiceDelegate;->onSystemReady()V

    .line 5001
    const-string v0, "WindowManager"

    const-string/jumbo v1, "show keyguard"

    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 5003
    :cond_11
    return-void
.end method

.method private notifyToSSRM(Z)V
    .registers 5
    .param p1, "isTopFullscreen"    # Z

    .prologue
    .line 8578
    sget-boolean v1, wasTopFullscreen:Z

    if-ne v1, p1, :cond_5

    .line 8588
    :goto_4
    return-void

    .line 8581
    :cond_5
    sput-boolean p1, wasTopFullscreen:Z

    .line 8583
    new-instance v0, Landroid/content/Intent;

    invoke-direct {v0}, Landroid/content/Intent;-><init>()V

    .line 8584
    .local v0, "boostIntent":Landroid/content/Intent;
    const-string v1, "com.sec.android.intent.action.SSRM_REQUEST"

    invoke-virtual {v0, v1}, Landroid/content/Intent;->setAction(Ljava/lang/String;)Landroid/content/Intent;

    .line 8585
    const-string v1, "SSRM_STATUS_NAME"

    const-string v2, "FullScreen"

    invoke-virtual {v0, v1, v2}, Landroid/content/Intent;->putExtra(Ljava/lang/String;Ljava/lang/String;)Landroid/content/Intent;

    .line 8586
    const-string v1, "SSRM_STATUS_VALUE"

    sget-boolean v2, wasTopFullscreen:Z

    invoke-virtual {v0, v1, v2}, Landroid/content/Intent;->putExtra(Ljava/lang/String;Z)Landroid/content/Intent;

    .line 8587
    iget-object v1, p0, mContext:Landroid/content/Context;

    invoke-virtual {v1, v0}, Landroid/content/Context;->sendBroadcast(Landroid/content/Intent;)V

    goto :goto_4
.end method

.method private offsetInputMethodWindowLw(Landroid/view/WindowManagerPolicy$WindowState;)V
    .registers 6
    .param p1, "win"    # Landroid/view/WindowManagerPolicy$WindowState;

    .prologue
    .line 7486
    invoke-interface {p1}, Landroid/view/WindowManagerPolicy$WindowState;->getDisplayFrameLw()Landroid/graphics/Rect;

    move-result-object v1

    iget v1, v1, Landroid/graphics/Rect;->top:I

    invoke-interface {p1}, Landroid/view/WindowManagerPolicy$WindowState;->getContentFrameLw()Landroid/graphics/Rect;

    move-result-object v2

    iget v2, v2, Landroid/graphics/Rect;->top:I

    invoke-static {v1, v2}, Ljava/lang/Math;->max(II)I

    move-result v0

    .line 7487
    .local v0, "top":I
    invoke-interface {p1}, Landroid/view/WindowManagerPolicy$WindowState;->getGivenContentInsetsLw()Landroid/graphics/Rect;

    move-result-object v1

    iget v1, v1, Landroid/graphics/Rect;->top:I

    add-int/2addr v0, v1

    .line 7488
    iget v1, p0, mContentBottom:I

    if-le v1, v0, :cond_1d

    .line 7489
    iput v0, p0, mContentBottom:I

    .line 7491
    :cond_1d
    iget v1, p0, mVoiceContentBottom:I

    if-le v1, v0, :cond_23

    .line 7492
    iput v0, p0, mVoiceContentBottom:I

    .line 7494
    :cond_23
    invoke-interface {p1}, Landroid/view/WindowManagerPolicy$WindowState;->getVisibleFrameLw()Landroid/graphics/Rect;

    move-result-object v1

    iget v0, v1, Landroid/graphics/Rect;->top:I

    .line 7495
    invoke-interface {p1}, Landroid/view/WindowManagerPolicy$WindowState;->getGivenVisibleInsetsLw()Landroid/graphics/Rect;

    move-result-object v1

    iget v1, v1, Landroid/graphics/Rect;->top:I

    add-int/2addr v0, v1

    .line 7496
    iget v1, p0, mCurBottom:I

    if-le v1, v0, :cond_36

    .line 7497
    iput v0, p0, mCurBottom:I

    .line 7499
    :cond_36
    sget-boolean v1, DEBUG_LAYOUT:Z

    if-eqz v1, :cond_6c

    const-string v1, "WindowManager"

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Input method: mDockBottom="

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    iget v3, p0, mDockBottom:I

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string v3, " mContentBottom="

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    iget v3, p0, mContentBottom:I

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string v3, " mCurBottom="

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    iget v3, p0, mCurBottom:I

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v1, v2}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 7502
    :cond_6c
    return-void
.end method

.method private offsetVoiceInputWindowLw(Landroid/view/WindowManagerPolicy$WindowState;)V
    .registers 5
    .param p1, "win"    # Landroid/view/WindowManagerPolicy$WindowState;

    .prologue
    .line 7505
    invoke-interface {p1}, Landroid/view/WindowManagerPolicy$WindowState;->getDisplayFrameLw()Landroid/graphics/Rect;

    move-result-object v1

    iget v1, v1, Landroid/graphics/Rect;->top:I

    invoke-interface {p1}, Landroid/view/WindowManagerPolicy$WindowState;->getContentFrameLw()Landroid/graphics/Rect;

    move-result-object v2

    iget v2, v2, Landroid/graphics/Rect;->top:I

    invoke-static {v1, v2}, Ljava/lang/Math;->max(II)I

    move-result v0

    .line 7506
    .local v0, "top":I
    invoke-interface {p1}, Landroid/view/WindowManagerPolicy$WindowState;->getGivenContentInsetsLw()Landroid/graphics/Rect;

    move-result-object v1

    iget v1, v1, Landroid/graphics/Rect;->top:I

    add-int/2addr v0, v1

    .line 7507
    iget v1, p0, mVoiceContentBottom:I

    if-le v1, v0, :cond_1d

    .line 7508
    iput v0, p0, mVoiceContentBottom:I

    .line 7510
    :cond_1d
    return-void
.end method

.method private performAuditoryFeedbackForAccessibilityIfNeed()V
    .registers 5

    .prologue
    .line 11755
    invoke-direct {p0}, isGlobalAccessibilityGestureEnabled()Z

    move-result v2

    if-nez v2, :cond_7

    .line 11767
    :cond_6
    :goto_6
    return-void

    .line 11758
    :cond_7
    iget-object v2, p0, mContext:Landroid/content/Context;

    const-string v3, "audio"

    invoke-virtual {v2, v3}, Landroid/content/Context;->getSystemService(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Landroid/media/AudioManager;

    .line 11760
    .local v0, "audioManager":Landroid/media/AudioManager;
    invoke-virtual {v0}, Landroid/media/AudioManager;->isSilentMode()Z

    move-result v2

    if-nez v2, :cond_6

    .line 11763
    iget-object v2, p0, mContext:Landroid/content/Context;

    sget-object v3, Landroid/provider/Settings$System;->DEFAULT_NOTIFICATION_URI:Landroid/net/Uri;

    invoke-static {v2, v3}, Landroid/media/RingtoneManager;->getRingtone(Landroid/content/Context;Landroid/net/Uri;)Landroid/media/Ringtone;

    move-result-object v1

    .line 11765
    .local v1, "ringTone":Landroid/media/Ringtone;
    const/4 v2, 0x3

    invoke-virtual {v1, v2}, Landroid/media/Ringtone;->setStreamType(I)V

    .line 11766
    invoke-virtual {v1}, Landroid/media/Ringtone;->play()V

    goto :goto_6
.end method

.method private powerLongPress()V
    .registers 9

    .prologue
    const/4 v5, 0x0

    const/4 v4, 0x1

    .line 1995
    iget-object v6, p0, mSPWM:Lcom/android/server/policy/sec/SamsungPhoneWindowManager;

    invoke-virtual {v6}, Lcom/android/server/policy/sec/SamsungPhoneWindowManager;->ignorePowerKeyInEncrypting()Z

    move-result v6

    if-eqz v6, :cond_b

    .line 2072
    :goto_a
    :pswitch_a
    return-void

    .line 2029
    :cond_b
    iget-object v6, p0, mContext:Landroid/content/Context;

    invoke-static {v6}, Lcom/android/server/policy/sec/SamsungPolicyProperties;->FolderTypeFeature(Landroid/content/Context;)I

    move-result v6

    if-eqz v6, :cond_4b

    invoke-direct {p0}, isCallRecord()Z

    move-result v6

    if-eqz v6, :cond_4b

    .line 2030
    iput-boolean v4, p0, mPowerKeyHandled:Z

    .line 2032
    :try_start_1b
    new-instance v1, Landroid/content/ComponentName;

    const-string v4, "com.android.phone"

    const-string v5, "com.android.phone.PhoneVoiceRecorderService"

    invoke-direct {v1, v4, v5}, Landroid/content/ComponentName;-><init>(Ljava/lang/String;Ljava/lang/String;)V

    .line 2033
    .local v1, "cn":Landroid/content/ComponentName;
    new-instance v4, Landroid/content/Intent;

    const-string v5, "com.samsung.phone.PhoneVoiceRecorderService"

    invoke-direct {v4, v5}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    invoke-virtual {v4, v1}, Landroid/content/Intent;->setComponent(Landroid/content/ComponentName;)Landroid/content/Intent;

    move-result-object v3

    .line 2034
    .local v3, "intent":Landroid/content/Intent;
    const-string v4, "StartByLongPressPowerKey"

    const/4 v5, 0x1

    invoke-virtual {v3, v4, v5}, Landroid/content/Intent;->putExtra(Ljava/lang/String;Z)Landroid/content/Intent;

    .line 2035
    iget-object v4, p0, mContext:Landroid/content/Context;

    invoke-virtual {v4, v3}, Landroid/content/Context;->startService(Landroid/content/Intent;)Landroid/content/ComponentName;

    .line 2036
    const-string v4, "WindowManager"

    const-string v5, "Start PhoneVoiceRecorderService"

    invoke-static {v4, v5}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_41
    .catch Ljava/lang/Exception; {:try_start_1b .. :try_end_41} :catch_42

    goto :goto_a

    .line 2037
    .end local v1    # "cn":Landroid/content/ComponentName;
    .end local v3    # "intent":Landroid/content/Intent;
    :catch_42
    move-exception v2

    .line 2038
    .local v2, "e":Ljava/lang/Exception;
    const-string v4, "WindowManager"

    const-string v5, "Exception PhoneVoiceRecorderService: "

    invoke-static {v4, v5, v2}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    goto :goto_a

    .line 2044
    .end local v2    # "e":Ljava/lang/Exception;
    :cond_4b
    invoke-direct {p0}, getResolvedLongPressOnPowerBehavior()I

    move-result v0

    .line 2046
    .local v0, "behavior":I
    iget-object v6, p0, mSPWM:Lcom/android/server/policy/sec/SamsungPhoneWindowManager;

    invoke-virtual {v6}, Lcom/android/server/policy/sec/SamsungPhoneWindowManager;->isLiveDemo()Z

    move-result v6

    if-eqz v6, :cond_67

    iget-object v6, p0, mSPWM:Lcom/android/server/policy/sec/SamsungPhoneWindowManager;

    invoke-virtual {v6}, Lcom/android/server/policy/sec/SamsungPhoneWindowManager;->isHMTSupportAndConnected()Z

    move-result v6

    if-eqz v6, :cond_67

    .line 2047
    const-string v6, "WindowManager"

    const-string v7, "LDU HTM set, so no confirm shutdown"

    invoke-static {v6, v7}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 2048
    const/4 v0, 0x3

    .line 2051
    :cond_67
    packed-switch v0, :pswitch_data_94

    goto :goto_a

    .line 2055
    :pswitch_6b
    iput-boolean v4, p0, mPowerKeyHandled:Z

    .line 2056
    const/4 v6, 0x0

    invoke-virtual {p0, v6, v5, v5}, performHapticFeedbackLw(Landroid/view/WindowManagerPolicy$WindowState;IZ)Z

    move-result v5

    if-nez v5, :cond_77

    .line 2057
    invoke-direct {p0}, performAuditoryFeedbackForAccessibilityIfNeed()V

    .line 2059
    :cond_77
    invoke-virtual {p0}, showGlobalActionsInternal()V

    .line 2061
    iget-object v5, p0, mSPWM:Lcom/android/server/policy/sec/SamsungPhoneWindowManager;

    invoke-virtual {v5, v4}, Lcom/android/server/policy/sec/SamsungPhoneWindowManager;->setProKioskReEnableVolumeUpKey(Z)V

    goto :goto_a

    .line 2066
    :pswitch_80
    iput-boolean v4, p0, mPowerKeyHandled:Z

    .line 2068
    const-string/jumbo v6, "globalactions"

    invoke-virtual {p0, v6}, sendCloseSystemWindows(Ljava/lang/String;)V

    .line 2069
    iget-object v6, p0, mWindowManagerFuncs:Landroid/view/WindowManagerPolicy$WindowManagerFuncs;

    const/4 v7, 0x2

    if-ne v0, v7, :cond_92

    :goto_8d
    invoke-interface {v6, v4}, Landroid/view/WindowManagerPolicy$WindowManagerFuncs;->shutdown(Z)V

    goto/16 :goto_a

    :cond_92
    move v4, v5

    goto :goto_8d

    .line 2051
    :pswitch_data_94
    .packed-switch 0x0
        :pswitch_a
        :pswitch_6b
        :pswitch_80
        :pswitch_80
    .end packed-switch
.end method

.method private powerMultiPressAction(JZI)V
    .registers 10
    .param p1, "eventTime"    # J
    .param p3, "interactive"    # Z
    .param p4, "behavior"    # I

    .prologue
    const/4 v3, 0x0

    .line 1926
    packed-switch p4, :pswitch_data_90

    .line 1973
    :cond_4
    :goto_4
    :pswitch_4
    return-void

    .line 1930
    :pswitch_5
    invoke-virtual {p0}, isUserSetupComplete()Z

    move-result v0

    if-nez v0, :cond_13

    .line 1931
    const-string v0, "WindowManager"

    const-string v1, "Ignoring toggling theater mode - device not setup."

    invoke-static {v0, v1}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_4

    .line 1935
    :cond_13
    invoke-direct {p0}, isTheaterModeEnabled()Z

    move-result v0

    if-eqz v0, :cond_32

    .line 1936
    const-string v0, "WindowManager"

    const-string v1, "Toggling theater mode off."

    invoke-static {v0, v1}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 1937
    iget-object v0, p0, mContext:Landroid/content/Context;

    invoke-virtual {v0}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v0

    const-string/jumbo v1, "theater_mode_on"

    invoke-static {v0, v1, v3}, Landroid/provider/Settings$Global;->putInt(Landroid/content/ContentResolver;Ljava/lang/String;I)Z

    .line 1939
    if-nez p3, :cond_4

    .line 1940
    invoke-direct {p0, p1, p2}, wakeUpFromPowerKey(J)V

    goto :goto_4

    .line 1943
    :cond_32
    const-string v0, "WindowManager"

    const-string v1, "Toggling theater mode on."

    invoke-static {v0, v1}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 1944
    iget-object v0, p0, mContext:Landroid/content/Context;

    invoke-virtual {v0}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v0

    const-string/jumbo v1, "theater_mode_on"

    const/4 v2, 0x1

    invoke-static {v0, v1, v2}, Landroid/provider/Settings$Global;->putInt(Landroid/content/ContentResolver;Ljava/lang/String;I)Z

    .line 1947
    iget-boolean v0, p0, mGoToSleepOnButtonPressTheaterMode:Z

    if-eqz v0, :cond_4

    if-eqz p3, :cond_4

    .line 1948
    iget-object v0, p0, mPowerManager:Landroid/os/PowerManager;

    const/4 v1, 0x4

    invoke-virtual {v0, p1, p2, v1, v3}, Landroid/os/PowerManager;->goToSleep(JII)V

    goto :goto_4

    .line 1954
    :pswitch_53
    const-string v0, "WindowManager"

    const-string v1, "Starting brightness boost."

    invoke-static {v0, v1}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 1955
    if-nez p3, :cond_5f

    .line 1956
    invoke-direct {p0, p1, p2}, wakeUpFromPowerKey(J)V

    .line 1958
    :cond_5f
    iget-object v0, p0, mPowerManager:Landroid/os/PowerManager;

    invoke-virtual {v0, p1, p2}, Landroid/os/PowerManager;->boostScreenBrightness(J)V

    goto :goto_4

    .line 1961
    :pswitch_65
    const-string v0, "WindowManager"

    const-string v1, "Screen Curtain mode toggle."

    invoke-static {v0, v1}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 1962
    iget-object v0, p0, mSPWM:Lcom/android/server/policy/sec/SamsungPhoneWindowManager;

    invoke-virtual {v0}, Lcom/android/server/policy/sec/SamsungPhoneWindowManager;->isDoubleTapOnPowerEnabled()Z

    move-result v0

    if-eqz v0, :cond_4

    .line 1963
    iget-object v0, p0, mSPWM:Lcom/android/server/policy/sec/SamsungPhoneWindowManager;

    invoke-virtual {v0}, Lcom/android/server/policy/sec/SamsungPhoneWindowManager;->callAccessibilityScreenCurtain()V

    goto :goto_4

    .line 1967
    :pswitch_7a
    const-string v0, "WindowManager"

    const-string v1, "SOS Message mode toggle."

    invoke-static {v0, v1}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 1968
    iget-object v0, p0, mSPWM:Lcom/android/server/policy/sec/SamsungPhoneWindowManager;

    invoke-virtual {v0}, Lcom/android/server/policy/sec/SamsungPhoneWindowManager;->isSafetyAssuranceEnabled()Z

    move-result v0

    if-eqz v0, :cond_4

    .line 1969
    iget-object v0, p0, mSPWM:Lcom/android/server/policy/sec/SamsungPhoneWindowManager;

    invoke-virtual {v0}, Lcom/android/server/policy/sec/SamsungPhoneWindowManager;->sendBroadcastForSafetyAssurance()V

    goto/16 :goto_4

    .line 1926
    :pswitch_data_90
    .packed-switch 0x0
        :pswitch_4
        :pswitch_5
        :pswitch_53
        :pswitch_65
        :pswitch_7a
    .end packed-switch
.end method

.method private powerPress(JZI)V
    .registers 10
    .param p1, "eventTime"    # J
    .param p3, "interactive"    # Z
    .param p4, "count"    # I

    .prologue
    const/4 v3, 0x0

    const/4 v2, 0x1

    const/4 v1, 0x4

    .line 1889
    iget-boolean v0, p0, mScreenOnEarly:Z

    if-eqz v0, :cond_17

    iget-boolean v0, p0, mScreenOnFully:Z

    if-nez v0, :cond_17

    iget v0, p0, mTriplePressOnPowerBehavior:I

    if-eq v0, v1, :cond_17

    .line 1890
    const-string v0, "WindowManager"

    const-string v1, "Suppressed redundant power key press while already in the process of turning the screen on. Except sos message mode"

    invoke-static {v0, v1}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 1923
    :cond_16
    :goto_16
    :pswitch_16
    return-void

    .line 1895
    :cond_17
    const/4 v0, 0x2

    if-ne p4, v0, :cond_20

    .line 1896
    iget v0, p0, mDoublePressOnPowerBehavior:I

    invoke-direct {p0, p1, p2, p3, v0}, powerMultiPressAction(JZI)V

    goto :goto_16

    .line 1897
    :cond_20
    const/4 v0, 0x3

    if-ne p4, v0, :cond_29

    .line 1898
    iget v0, p0, mTriplePressOnPowerBehavior:I

    invoke-direct {p0, p1, p2, p3, v0}, powerMultiPressAction(JZI)V

    goto :goto_16

    .line 1899
    :cond_29
    if-eqz p3, :cond_16

    iget-boolean v0, p0, mBeganFromNonInteractive:Z

    if-nez v0, :cond_16

    .line 1900
    iget v0, p0, mShortPressOnPowerBehavior:I

    packed-switch v0, :pswitch_data_4e

    goto :goto_16

    .line 1904
    :pswitch_35
    iget-object v0, p0, mPowerManager:Landroid/os/PowerManager;

    invoke-virtual {v0, p1, p2, v1, v3}, Landroid/os/PowerManager;->goToSleep(JII)V

    goto :goto_16

    .line 1908
    :pswitch_3b
    iget-object v0, p0, mPowerManager:Landroid/os/PowerManager;

    invoke-virtual {v0, p1, p2, v1, v2}, Landroid/os/PowerManager;->goToSleep(JII)V

    goto :goto_16

    .line 1913
    :pswitch_41
    iget-object v0, p0, mPowerManager:Landroid/os/PowerManager;

    invoke-virtual {v0, p1, p2, v1, v2}, Landroid/os/PowerManager;->goToSleep(JII)V

    .line 1916
    invoke-virtual {p0}, launchHomeFromHotKey()V

    goto :goto_16

    .line 1919
    :pswitch_4a
    invoke-virtual {p0, v2, v3}, launchHomeFromHotKey(ZZ)V

    goto :goto_16

    .line 1900
    :pswitch_data_4e
    .packed-switch 0x0
        :pswitch_16
        :pswitch_35
        :pswitch_3b
        :pswitch_41
        :pswitch_4a
    .end packed-switch
.end method

.method private preloadRecentApps()V
    .registers 5

    .prologue
    .line 5850
    const/4 v2, 0x1

    iput-boolean v2, p0, mPreloadedRecentApps:Z

    .line 5852
    :try_start_3
    invoke-virtual {p0}, getStatusBarService()Lcom/android/internal/statusbar/IStatusBarService;

    move-result-object v1

    .line 5853
    .local v1, "statusbar":Lcom/android/internal/statusbar/IStatusBarService;
    if-eqz v1, :cond_c

    .line 5854
    invoke-interface {v1}, Lcom/android/internal/statusbar/IStatusBarService;->preloadRecentApps()V
    :try_end_c
    .catch Landroid/os/RemoteException; {:try_start_3 .. :try_end_c} :catch_d

    .line 5861
    .end local v1    # "statusbar":Lcom/android/internal/statusbar/IStatusBarService;
    :cond_c
    :goto_c
    return-void

    .line 5856
    :catch_d
    move-exception v0

    .line 5857
    .local v0, "e":Landroid/os/RemoteException;
    const-string v2, "WindowManager"

    const-string v3, "RemoteException when preloading recent apps"

    invoke-static {v2, v3, v0}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 5859
    const/4 v2, 0x0

    iput-object v2, p0, mStatusBarService:Lcom/android/internal/statusbar/IStatusBarService;

    goto :goto_c
.end method

.method private prepareSViewCoverLayout(IIIIIIIIIIIIIIIIIIIIIIIII)V
    .registers 32
    .param p1, "displayRotation"    # I
    .param p2, "displayWidth"    # I
    .param p3, "displayHeight"    # I
    .param p4, "systemLeft"    # I
    .param p5, "systemTop"    # I
    .param p6, "systemRight"    # I
    .param p7, "systemBottom"    # I
    .param p8, "unrestrictedScreenLeft"    # I
    .param p9, "unrestrictedScreenTop"    # I
    .param p10, "unrestrictedScreenWidth"    # I
    .param p11, "unrestrictedScreenHeight"    # I
    .param p12, "stableFullscreenLeft"    # I
    .param p13, "stableFullscreenTop"    # I
    .param p14, "stableFullscreenRight"    # I
    .param p15, "stableFullscreenBottom"    # I
    .param p16, "stableLeft"    # I
    .param p17, "stableTop"    # I
    .param p18, "stableRight"    # I
    .param p19, "stableBottom"    # I
    .param p20, "dockLeft"    # I
    .param p21, "dockTop"    # I
    .param p22, "dockRight"    # I
    .param p23, "dockBottom"    # I
    .param p24, "coverHeight"    # I
    .param p25, "coverWidth"    # I

    .prologue
    .line 13066
    iput p4, p0, mOriginalSystemLeft:I

    iput p4, p0, mSViewCoverSystemLeft:I

    .line 13067
    iput p5, p0, mOriginalSystemTop:I

    iput p5, p0, mSViewCoverSystemTop:I

    .line 13068
    iput p6, p0, mOriginalSystemRight:I

    iput p6, p0, mSViewCoverSystemRight:I

    .line 13069
    iput p7, p0, mOriginalSystemBottom:I

    iput p7, p0, mSViewCoverSystemBottom:I

    .line 13071
    iput p8, p0, mOriginalUnrestrictedScreenLeft:I

    iput p8, p0, mSViewCoverUnrestrictedScreenLeft:I

    .line 13072
    iput p9, p0, mOriginalUnrestrictedScreenTop:I

    iput p9, p0, mSViewCoverUnrestrictedScreenTop:I

    .line 13073
    move/from16 v0, p10

    iput v0, p0, mOriginalUnrestrictedScreenWidth:I

    move/from16 v0, p10

    iput v0, p0, mSViewCoverUnrestrictedScreenWidth:I

    .line 13074
    move/from16 v0, p11

    iput v0, p0, mOriginalUnrestrictedScreenHeight:I

    move/from16 v0, p11

    iput v0, p0, mSViewCoverUnrestrictedScreenHeight:I

    .line 13076
    move/from16 v0, p12

    iput v0, p0, mOriginalStableFullscreenLeft:I

    move/from16 v0, p12

    iput v0, p0, mSViewCoverStableFullscreenLeft:I

    .line 13077
    move/from16 v0, p13

    iput v0, p0, mOriginalStableFullscreenTop:I

    move/from16 v0, p13

    iput v0, p0, mSViewCoverStableFullscreenTop:I

    .line 13078
    move/from16 v0, p14

    iput v0, p0, mOriginalStableFullscreenRight:I

    move/from16 v0, p14

    iput v0, p0, mSViewCoverStableFullscreenRight:I

    .line 13079
    move/from16 v0, p15

    iput v0, p0, mOriginalStableFullscreenBottom:I

    move/from16 v0, p15

    iput v0, p0, mSViewCoverStableFullscreenBottom:I

    .line 13081
    move/from16 v0, p16

    iput v0, p0, mSViewCoverStableLeft:I

    move/from16 v0, p16

    iput v0, p0, mOriginalStableLeft:I

    .line 13082
    move/from16 v0, p17

    iput v0, p0, mSViewCoverStableTop:I

    move/from16 v0, p17

    iput v0, p0, mOriginalStableTop:I

    .line 13083
    move/from16 v0, p18

    iput v0, p0, mSViewCoverStableRight:I

    move/from16 v0, p18

    iput v0, p0, mOriginalStableRight:I

    .line 13084
    move/from16 v0, p19

    iput v0, p0, mSViewCoverStableBottom:I

    move/from16 v0, p19

    iput v0, p0, mOriginalStableBottom:I

    .line 13086
    move/from16 v0, p20

    iput v0, p0, mSViewCoverDockLeft:I

    move/from16 v0, p20

    iput v0, p0, mOriginalDockLeft:I

    .line 13087
    move/from16 v0, p21

    iput v0, p0, mSViewCoverDockTop:I

    move/from16 v0, p21

    iput v0, p0, mOriginalDockTop:I

    .line 13088
    move/from16 v0, p22

    iput v0, p0, mSViewCoverDockRight:I

    move/from16 v0, p22

    iput v0, p0, mOriginalDockRight:I

    .line 13089
    move/from16 v0, p23

    iput v0, p0, mSViewCoverDockBottom:I

    move/from16 v0, p23

    iput v0, p0, mOriginalDockBottom:I

    .line 13092
    if-eqz p24, :cond_dc

    if-eqz p25, :cond_dc

    .line 13093
    packed-switch p1, :pswitch_data_f0

    .line 13110
    const/4 v3, 0x0

    .local v3, "coverRight":I
    move v2, v3

    .line 13111
    .local v2, "coverLeft":I
    const/4 v4, 0x0

    .line 13112
    .local v4, "coverTop":I
    sub-int v1, p3, p24

    .line 13116
    .local v1, "coverBottom":I
    :goto_94
    iget v5, p0, mOriginalSystemLeft:I

    add-int/2addr v5, v2

    iput v5, p0, mSViewCoverSystemLeft:I

    .line 13117
    iget v5, p0, mOriginalSystemTop:I

    add-int/2addr v5, v4

    iput v5, p0, mSViewCoverSystemTop:I

    .line 13118
    iget v5, p0, mOriginalSystemRight:I

    sub-int/2addr v5, v3

    iput v5, p0, mSViewCoverSystemRight:I

    .line 13119
    iget v5, p0, mOriginalSystemBottom:I

    sub-int/2addr v5, v1

    iput v5, p0, mSViewCoverSystemBottom:I

    .line 13121
    iget v5, p0, mOriginalUnrestrictedScreenLeft:I

    add-int/2addr v5, v2

    iput v5, p0, mSViewCoverUnrestrictedScreenLeft:I

    .line 13122
    iget v5, p0, mOriginalUnrestrictedScreenTop:I

    add-int/2addr v5, v4

    iput v5, p0, mSViewCoverUnrestrictedScreenTop:I

    .line 13123
    iget v5, p0, mOriginalUnrestrictedScreenWidth:I

    sub-int/2addr v5, v2

    sub-int/2addr v5, v3

    iput v5, p0, mSViewCoverUnrestrictedScreenWidth:I

    .line 13125
    iget v5, p0, mOriginalUnrestrictedScreenHeight:I

    sub-int/2addr v5, v4

    sub-int/2addr v5, v1

    iput v5, p0, mSViewCoverUnrestrictedScreenHeight:I

    .line 13128
    iget v5, p0, mOriginalStableFullscreenRight:I

    sub-int/2addr v5, v3

    iput v5, p0, mSViewCoverStableFullscreenRight:I

    .line 13129
    iget v5, p0, mOriginalStableFullscreenBottom:I

    sub-int/2addr v5, v1

    iput v5, p0, mSViewCoverStableFullscreenBottom:I

    .line 13131
    iget v5, p0, mOriginalStableRight:I

    sub-int/2addr v5, v3

    iput v5, p0, mSViewCoverStableRight:I

    .line 13132
    iget v5, p0, mOriginalStableBottom:I

    sub-int/2addr v5, v1

    iput v5, p0, mSViewCoverStableBottom:I

    .line 13134
    iget v5, p0, mOriginalDockRight:I

    sub-int/2addr v5, v3

    iput v5, p0, mSViewCoverDockRight:I

    .line 13135
    iget v5, p0, mOriginalDockBottom:I

    sub-int/2addr v5, v1

    iput v5, p0, mSViewCoverDockBottom:I

    .line 13137
    .end local v1    # "coverBottom":I
    .end local v2    # "coverLeft":I
    .end local v3    # "coverRight":I
    .end local v4    # "coverTop":I
    :cond_dc
    return-void

    .line 13095
    :pswitch_dd
    const/4 v2, 0x0

    .line 13096
    .restart local v2    # "coverLeft":I
    const/4 v1, 0x0

    .restart local v1    # "coverBottom":I
    move v4, v1

    .line 13097
    .restart local v4    # "coverTop":I
    sub-int v3, p2, p24

    .line 13098
    .restart local v3    # "coverRight":I
    goto :goto_94

    .line 13100
    .end local v1    # "coverBottom":I
    .end local v2    # "coverLeft":I
    .end local v3    # "coverRight":I
    .end local v4    # "coverTop":I
    :pswitch_e3
    const/4 v3, 0x0

    .restart local v3    # "coverRight":I
    move v2, v3

    .line 13101
    .restart local v2    # "coverLeft":I
    sub-int v4, p3, p24

    .line 13102
    .restart local v4    # "coverTop":I
    const/4 v1, 0x0

    .line 13103
    .restart local v1    # "coverBottom":I
    goto :goto_94

    .line 13105
    .end local v1    # "coverBottom":I
    .end local v2    # "coverLeft":I
    .end local v3    # "coverRight":I
    .end local v4    # "coverTop":I
    :pswitch_e9
    sub-int v2, p2, p24

    .line 13106
    .restart local v2    # "coverLeft":I
    const/4 v1, 0x0

    .restart local v1    # "coverBottom":I
    move v4, v1

    .line 13107
    .restart local v4    # "coverTop":I
    const/4 v3, 0x0

    .line 13108
    .restart local v3    # "coverRight":I
    goto :goto_94

    .line 13093
    nop

    :pswitch_data_f0
    .packed-switch 0x1
        :pswitch_dd
        :pswitch_e3
        :pswitch_e9
    .end packed-switch
.end method

.method private processSViewCoverSetHiddenResultLw(I)Z
    .registers 6
    .param p1, "setHiddenResult"    # I

    .prologue
    const/4 v0, 0x1

    .line 13036
    iget-object v1, p0, mStatusBar:Landroid/view/WindowManagerPolicy$WindowState;

    if-eqz v1, :cond_17

    and-int/lit8 v1, p1, 0x1

    if-eqz v1, :cond_17

    .line 13037
    iget-object v1, p0, mStatusBar:Landroid/view/WindowManagerPolicy$WindowState;

    invoke-interface {v1}, Landroid/view/WindowManagerPolicy$WindowState;->getAttrs()Landroid/view/WindowManager$LayoutParams;

    move-result-object v1

    iget v2, v1, Landroid/view/WindowManager$LayoutParams;->samsungFlags:I

    const/high16 v3, 0x10000000

    or-int/2addr v2, v3

    iput v2, v1, Landroid/view/WindowManager$LayoutParams;->samsungFlags:I

    .line 13043
    :goto_16
    return v0

    .line 13039
    :cond_17
    iget-object v1, p0, mStatusBar:Landroid/view/WindowManagerPolicy$WindowState;

    if-eqz v1, :cond_2e

    and-int/lit8 v1, p1, 0x2

    if-eqz v1, :cond_2e

    .line 13040
    iget-object v1, p0, mStatusBar:Landroid/view/WindowManagerPolicy$WindowState;

    invoke-interface {v1}, Landroid/view/WindowManagerPolicy$WindowState;->getAttrs()Landroid/view/WindowManager$LayoutParams;

    move-result-object v1

    iget v2, v1, Landroid/view/WindowManager$LayoutParams;->samsungFlags:I

    const v3, -0x10000001

    and-int/2addr v2, v3

    iput v2, v1, Landroid/view/WindowManager$LayoutParams;->samsungFlags:I

    goto :goto_16

    .line 13043
    :cond_2e
    const/4 v0, 0x0

    goto :goto_16
.end method

.method private readCameraLensCoverState()V
    .registers 2

    .prologue
    .line 3762
    iget-object v0, p0, mWindowManagerFuncs:Landroid/view/WindowManagerPolicy$WindowManagerFuncs;

    invoke-interface {v0}, Landroid/view/WindowManagerPolicy$WindowManagerFuncs;->getCameraLensCoverState()I

    move-result v0

    iput v0, p0, mCameraLensCoverState:I

    .line 3763
    return-void
.end method

.method private readConfigurationDependentBehaviors()V
    .registers 5

    .prologue
    const/4 v3, 0x1

    const/4 v2, 0x0

    .line 3025
    iget-object v0, p0, mContext:Landroid/content/Context;

    invoke-virtual {v0}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    move-result-object v0

    const v1, 0x10e0059

    invoke-virtual {v0, v1}, Landroid/content/res/Resources;->getInteger(I)I

    move-result v0

    iput v0, p0, mLongPressOnHomeBehavior:I

    .line 3027
    iget v0, p0, mLongPressOnHomeBehavior:I

    if-ltz v0, :cond_1a

    iget v0, p0, mLongPressOnHomeBehavior:I

    const/4 v1, 0x3

    if-le v0, v1, :cond_1c

    .line 3029
    :cond_1a
    iput v2, p0, mLongPressOnHomeBehavior:I

    .line 3032
    :cond_1c
    iget v0, p0, mLongPressOnHomeBehavior:I

    if-ne v0, v3, :cond_32

    iget-object v0, p0, mContext:Landroid/content/Context;

    invoke-virtual {v0}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    move-result-object v0

    const v1, 0x11200cb

    invoke-virtual {v0, v1}, Landroid/content/res/Resources;->getBoolean(I)Z

    move-result v0

    if-eqz v0, :cond_32

    .line 3034
    const/4 v0, 0x2

    iput v0, p0, mLongPressOnHomeBehavior:I

    .line 3038
    :cond_32
    iget-object v0, p0, mContext:Landroid/content/Context;

    invoke-virtual {v0}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    move-result-object v0

    const v1, 0x10e005a

    invoke-virtual {v0, v1}, Landroid/content/res/Resources;->getInteger(I)I

    move-result v0

    iput v0, p0, mDoubleTapOnHomeBehavior:I

    .line 3040
    iget v0, p0, mDoubleTapOnHomeBehavior:I

    if-ltz v0, :cond_49

    iget v0, p0, mDoubleTapOnHomeBehavior:I

    if-le v0, v3, :cond_4b

    .line 3042
    :cond_49
    iput v2, p0, mDoubleTapOnHomeBehavior:I

    .line 3044
    :cond_4b
    return-void
.end method

.method private readRotation(I)I
    .registers 4
    .param p1, "resID"    # I

    .prologue
    .line 3525
    :try_start_0
    iget-object v1, p0, mContext:Landroid/content/Context;

    invoke-virtual {v1}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    move-result-object v1

    invoke-virtual {v1, p1}, Landroid/content/res/Resources;->getInteger(I)I
    :try_end_9
    .catch Landroid/content/res/Resources$NotFoundException; {:try_start_0 .. :try_end_9} :catch_17

    move-result v0

    .line 3526
    .local v0, "rotation":I
    sparse-switch v0, :sswitch_data_1a

    .line 3539
    .end local v0    # "rotation":I
    :goto_d
    const/4 v1, -0x1

    :goto_e
    return v1

    .line 3528
    .restart local v0    # "rotation":I
    :sswitch_f
    const/4 v1, 0x0

    goto :goto_e

    .line 3530
    :sswitch_11
    const/4 v1, 0x1

    goto :goto_e

    .line 3532
    :sswitch_13
    const/4 v1, 0x2

    goto :goto_e

    .line 3534
    :sswitch_15
    const/4 v1, 0x3

    goto :goto_e

    .line 3536
    .end local v0    # "rotation":I
    :catch_17
    move-exception v1

    goto :goto_d

    .line 3526
    nop

    :sswitch_data_1a
    .sparse-switch
        0x0 -> :sswitch_f
        0x5a -> :sswitch_11
        0xb4 -> :sswitch_13
        0x10e -> :sswitch_15
    .end sparse-switch
.end method

.method private reconfigureDebug([Z)V
    .registers 6
    .param p1, "value"    # [Z

    .prologue
    .line 2996
    const/4 v0, 0x0

    .line 2997
    .local v0, "i":I
    array-length v2, p1

    const/4 v3, 0x4

    if-eq v2, v3, :cond_6

    .line 3004
    :goto_5
    return-void

    .line 3000
    :cond_6
    add-int/lit8 v1, v0, 0x1

    .end local v0    # "i":I
    .local v1, "i":I
    aget-boolean v2, p1, v0

    sput-boolean v2, DEBUG_INPUT:Z

    .line 3001
    add-int/lit8 v0, v1, 0x1

    .end local v1    # "i":I
    .restart local v0    # "i":I
    aget-boolean v2, p1, v1

    sput-boolean v2, DEBUG_KEYGUARD:Z

    .line 3002
    add-int/lit8 v1, v0, 0x1

    .end local v0    # "i":I
    .restart local v1    # "i":I
    aget-boolean v2, p1, v0

    sput-boolean v2, DEBUG_LAYOUT:Z

    .line 3003
    aget-boolean v2, p1, v1

    sput-boolean v2, DEBUG_WAKEUP:Z

    move v0, v1

    .line 3004
    .end local v1    # "i":I
    .restart local v0    # "i":I
    goto :goto_5
.end method

.method private releaseQuickBootWakeLock()V
    .registers 2

    .prologue
    .line 8975
    iget-object v0, p0, mQuickBootWakeLock:Landroid/os/PowerManager$WakeLock;

    invoke-virtual {v0}, Landroid/os/PowerManager$WakeLock;->isHeld()Z

    move-result v0

    if-eqz v0, :cond_d

    .line 8976
    iget-object v0, p0, mQuickBootWakeLock:Landroid/os/PowerManager$WakeLock;

    invoke-virtual {v0}, Landroid/os/PowerManager$WakeLock;->release()V

    .line 8978
    :cond_d
    return-void
.end method

.method private requestTransientBars(Landroid/view/WindowManagerPolicy$WindowState;)V
    .registers 3
    .param p1, "swipeTarget"    # Landroid/view/WindowManagerPolicy$WindowState;

    .prologue
    .line 9888
    const/4 v0, 0x0

    invoke-direct {p0, p1, v0}, requestTransientBars(Landroid/view/WindowManagerPolicy$WindowState;I)V

    .line 9889
    return-void
.end method

.method private requestTransientBars(Landroid/view/WindowManagerPolicy$WindowState;I)V
    .registers 10
    .param p1, "swipeTarget"    # Landroid/view/WindowManagerPolicy$WindowState;
    .param p2, "displayId"    # I

    .prologue
    .line 9896
    invoke-static {}, Landroid/os/FactoryTest;->isFactoryMode()Z

    move-result v4

    if-nez v4, :cond_14

    iget-object v4, p0, mContext:Landroid/content/Context;

    invoke-static {v4}, Landroid/os/FactoryTest;->isAutomaticTestMode(Landroid/content/Context;)Z

    move-result v4

    if-nez v4, :cond_14

    invoke-static {}, Landroid/os/FactoryTest;->isRunningFactoryApp()Z

    move-result v4

    if-eqz v4, :cond_1c

    .line 9897
    :cond_14
    const-string v4, "WindowManager"

    const-string v5, "Not showing transient bar, becuase Factory mode"

    invoke-static {v4, v5}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 9948
    :cond_1b
    :goto_1b
    return-void

    .line 9899
    :cond_1c
    invoke-virtual {p0}, isLockTaskModeEnabled()Z

    move-result v4

    if-nez v4, :cond_1b

    .line 9903
    invoke-static {}, Lcom/android/internal/app/AppLockPolicy;->isSupportAppLock()Z

    move-result v4

    if-eqz v4, :cond_38

    .line 9904
    iget-object v4, p0, mSPWM:Lcom/android/server/policy/sec/SamsungPhoneWindowManager;

    invoke-virtual {v4}, Lcom/android/server/policy/sec/SamsungPhoneWindowManager;->isAppLockRunning()Z

    move-result v4

    if-eqz v4, :cond_38

    .line 9905
    const-string v4, "WindowManager"

    const-string v5, "Not showing transient bar, becuase AppLock running"

    invoke-static {v4, v5}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_1b

    .line 9911
    :cond_38
    iget-object v4, p0, mWindowManagerFuncs:Landroid/view/WindowManagerPolicy$WindowManagerFuncs;

    invoke-interface {v4}, Landroid/view/WindowManagerPolicy$WindowManagerFuncs;->getWindowManagerLock()Ljava/lang/Object;

    move-result-object v5

    monitor-enter v5

    .line 9920
    :try_start_3f
    iget-object v1, p0, mStatusBar:Landroid/view/WindowManagerPolicy$WindowState;

    .line 9921
    .local v1, "mStatusBar":Landroid/view/WindowManagerPolicy$WindowState;
    iget-object v0, p0, mNavigationBar:Landroid/view/WindowManagerPolicy$WindowState;

    .line 9924
    .local v0, "mNavigationBar":Landroid/view/WindowManagerPolicy$WindowState;
    invoke-virtual {p0}, isUserSetupComplete()Z

    move-result v4

    if-nez v4, :cond_4e

    .line 9926
    monitor-exit v5

    goto :goto_1b

    .line 9947
    .end local v0    # "mNavigationBar":Landroid/view/WindowManagerPolicy$WindowState;
    .end local v1    # "mStatusBar":Landroid/view/WindowManagerPolicy$WindowState;
    :catchall_4b
    move-exception v4

    monitor-exit v5
    :try_end_4d
    .catchall {:try_start_3f .. :try_end_4d} :catchall_4b

    throw v4

    .line 9929
    .restart local v0    # "mNavigationBar":Landroid/view/WindowManagerPolicy$WindowState;
    .restart local v1    # "mStatusBar":Landroid/view/WindowManagerPolicy$WindowState;
    :cond_4e
    :try_start_4e
    iget-object v4, p0, mSPWM:Lcom/android/server/policy/sec/SamsungPhoneWindowManager;

    invoke-virtual {v4}, Lcom/android/server/policy/sec/SamsungPhoneWindowManager;->isMirrorLinkEnabled()Z

    move-result v4

    if-eqz v4, :cond_5f

    .line 9930
    const-string v4, "WindowManager"

    const-string v6, "Block requestTransientBars, isMirrorLinkEnabled() true"

    invoke-static {v4, v6}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 9931
    monitor-exit v5

    goto :goto_1b

    .line 9934
    :cond_5f
    iget-object v4, p0, mStatusBarController:Lcom/android/server/policy/StatusBarController;

    invoke-virtual {v4, p2}, Lcom/android/server/policy/StatusBarController;->checkShowTransientBarLw(I)Z

    move-result v3

    .line 9935
    .local v3, "sb":Z
    iget-object v4, p0, mNavigationBarController:Lcom/android/server/policy/BarController;

    invoke-virtual {v4, p2}, Lcom/android/server/policy/BarController;->checkShowTransientBarLw(I)Z

    move-result v2

    .line 9936
    .local v2, "nb":Z
    if-nez v3, :cond_6f

    if-eqz v2, :cond_8b

    .line 9938
    :cond_6f
    if-nez v2, :cond_75

    if-ne p1, v0, :cond_75

    .line 9940
    monitor-exit v5

    goto :goto_1b

    .line 9942
    :cond_75
    if-eqz v3, :cond_7c

    iget-object v4, p0, mStatusBarController:Lcom/android/server/policy/StatusBarController;

    invoke-virtual {v4, p2}, Lcom/android/server/policy/StatusBarController;->showTransient(I)V

    .line 9943
    :cond_7c
    if-eqz v2, :cond_83

    iget-object v4, p0, mNavigationBarController:Lcom/android/server/policy/BarController;

    invoke-virtual {v4, p2}, Lcom/android/server/policy/BarController;->showTransient(I)V

    .line 9944
    :cond_83
    iget-object v4, p0, mImmersiveModeConfirmation:Lcom/android/server/policy/ImmersiveModeConfirmation;

    invoke-virtual {v4}, Lcom/android/server/policy/ImmersiveModeConfirmation;->confirmCurrentPrompt()V

    .line 9945
    invoke-direct {p0, p2}, updateSystemUiVisibilityLw(I)I

    .line 9947
    :cond_8b
    monitor-exit v5
    :try_end_8c
    .catchall {:try_start_4e .. :try_end_8c} :catchall_4b

    goto :goto_1b
.end method

.method private rotationForSecondLcdOrientationLw(II)I
    .registers 13
    .param p1, "orientation"    # I
    .param p2, "secondLastRotation"    # I

    .prologue
    const/16 v9, 0xd

    const/16 v8, 0xa

    const/4 v7, 0x2

    const/4 v6, 0x1

    .line 13599
    iget-object v3, p0, mLock:Ljava/lang/Object;

    monitor-enter v3

    .line 13600
    :try_start_9
    const-string v4, "WindowManager"

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "2nd LCD, rotationForSecondLcdOrientationLw(orient="

    invoke-virtual {v2, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string v5, ", last="

    invoke-virtual {v2, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string v5, "); user="

    invoke-virtual {v2, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    iget v5, p0, mUserRotation:I

    invoke-virtual {v2, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string v5, " "

    invoke-virtual {v2, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    iget v2, p0, mSecondLcdUserRotationMode:I

    if-ne v2, v6, :cond_69

    const-string v2, "USER_ROTATION_LOCKED"

    :goto_3c
    invoke-virtual {v5, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string v5, " sensorRotation="

    invoke-virtual {v2, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    iget-object v5, p0, mOrientationListener:Lcom/android/server/policy/PhoneWindowManager$MyOrientationListener;

    invoke-virtual {v5}, Lcom/android/server/policy/PhoneWindowManager$MyOrientationListener;->getProposedRotation()I

    move-result v5

    invoke-virtual {v2, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v4, v2}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 13609
    iput p2, p0, mSecondLcdLastRotation:I

    .line 13610
    iget-object v2, p0, mOrientationListener:Lcom/android/server/policy/PhoneWindowManager$MyOrientationListener;

    invoke-virtual {v2}, Lcom/android/server/policy/PhoneWindowManager$MyOrientationListener;->getProposedRotation()I

    move-result v1

    .line 13612
    .local v1, "sensorRotation":I
    const/16 v2, 0xe

    if-ne p1, v2, :cond_6c

    .line 13614
    iget v0, p0, mSecondLcdLastRotation:I

    .line 13648
    .local v0, "preferredSecondRotation":I
    :goto_65
    iput v0, p0, mSecondLcdLastRotation:I

    .line 13649
    monitor-exit v3

    return v0

    .line 13600
    .end local v0    # "preferredSecondRotation":I
    .end local v1    # "sensorRotation":I
    :cond_69
    const-string v2, ""

    goto :goto_3c

    .line 13615
    .restart local v1    # "sensorRotation":I
    :cond_6c
    iget v2, p0, mSecondLcdUserRotationMode:I

    if-nez v2, :cond_7f

    if-eq p1, v7, :cond_8a

    const/4 v2, -0x1

    if-eq p1, v2, :cond_8a

    const/16 v2, 0xb

    if-eq p1, v2, :cond_8a

    const/16 v2, 0xc

    if-eq p1, v2, :cond_8a

    if-eq p1, v9, :cond_8a

    :cond_7f
    const/4 v2, 0x4

    if-eq p1, v2, :cond_8a

    if-eq p1, v8, :cond_8a

    const/4 v2, 0x6

    if-eq p1, v2, :cond_8a

    const/4 v2, 0x7

    if-ne p1, v2, :cond_99

    .line 13627
    :cond_8a
    if-ne v1, v7, :cond_94

    iget v2, p0, mAllowAllRotations:I

    if-eq v2, v6, :cond_94

    if-eq p1, v8, :cond_94

    if-ne p1, v9, :cond_96

    .line 13631
    :cond_94
    move v0, v1

    .restart local v0    # "preferredSecondRotation":I
    goto :goto_65

    .line 13633
    .end local v0    # "preferredSecondRotation":I
    :cond_96
    iget v0, p0, mSecondLcdLastRotation:I

    .restart local v0    # "preferredSecondRotation":I
    goto :goto_65

    .line 13635
    .end local v0    # "preferredSecondRotation":I
    :cond_99
    iget v2, p0, mSecondLcdUserRotationMode:I

    if-ne v2, v6, :cond_a3

    const/4 v2, 0x5

    if-eq p1, v2, :cond_a3

    .line 13641
    iget v0, p0, mUserRotation:I

    .restart local v0    # "preferredSecondRotation":I
    goto :goto_65

    .line 13645
    .end local v0    # "preferredSecondRotation":I
    :cond_a3
    const/4 v0, -0x1

    .restart local v0    # "preferredSecondRotation":I
    goto :goto_65

    .line 13650
    .end local v0    # "preferredSecondRotation":I
    .end local v1    # "sensorRotation":I
    :catchall_a5
    move-exception v2

    monitor-exit v3
    :try_end_a7
    .catchall {:try_start_9 .. :try_end_a7} :catchall_a5

    throw v2
.end method

.method public static sendCloseSystemWindows(Landroid/content/Context;Ljava/lang/String;)V
    .registers 2
    .param p0, "context"    # Landroid/content/Context;
    .param p1, "reason"    # Ljava/lang/String;

    .prologue
    .line 10706
    invoke-static {p0, p1}, Lcom/android/internal/policy/PhoneWindow;->sendCloseSystemWindows(Landroid/content/Context;Ljava/lang/String;)V

    .line 10707
    return-void
.end method

.method private setBottomSoftkeyRotation(I)V
    .registers 4
    .param p1, "rotation"    # I

    .prologue
    const/4 v1, 0x2

    .line 11007
    iget v0, p0, mCurrentDisplayRotation:I

    if-eq v0, p1, :cond_10

    .line 11008
    if-ne p1, v1, :cond_11

    .line 11009
    iget-object v0, p0, mHandler:Landroid/os/Handler;

    const/16 v1, 0x36

    invoke-virtual {v0, v1}, Landroid/os/Handler;->sendEmptyMessage(I)Z

    .line 11013
    :cond_e
    :goto_e
    iput p1, p0, mCurrentDisplayRotation:I

    .line 11016
    :cond_10
    return-void

    .line 11010
    :cond_11
    iget v0, p0, mCurrentDisplayRotation:I

    if-ne v0, v1, :cond_e

    .line 11011
    iget-object v0, p0, mHandler:Landroid/os/Handler;

    const/16 v1, 0x37

    invoke-virtual {v0, v1}, Landroid/os/Handler;->sendEmptyMessage(I)Z

    goto :goto_e
.end method

.method private setKeyguardOccludedLw(Z)Z
    .registers 3
    .param p1, "isOccluded"    # Z

    .prologue
    .line 8508
    const/4 v0, 0x0

    invoke-direct {p0, p1, v0}, setKeyguardOccludedLw(ZI)Z

    move-result v0

    return v0
.end method

.method private setKeyguardOccludedLw(ZI)Z
    .registers 13
    .param p1, "isOccluded"    # Z
    .param p2, "displayId"    # I

    .prologue
    const/4 v9, 0x2

    const/4 v4, 0x1

    const/4 v5, 0x0

    .line 8511
    const/4 v1, 0x0

    .line 8512
    .local v1, "mStatusBar":Landroid/view/WindowManagerPolicy$WindowState;
    const/4 v0, 0x0

    .line 8518
    .local v0, "mKeyguardOccluded":Z
    iget-object v1, p0, mStatusBar:Landroid/view/WindowManagerPolicy$WindowState;

    .line 8519
    iget-boolean v0, p0, mKeyguardOccluded:Z

    .line 8523
    move v3, v0

    .line 8524
    .local v3, "wasOccluded":Z
    iget-object v6, p0, mKeyguardDelegate:Lcom/android/server/policy/keyguard/KeyguardServiceDelegate;

    invoke-virtual {v6}, Lcom/android/server/policy/keyguard/KeyguardServiceDelegate;->isShowing()Z

    move-result v2

    .line 8525
    .local v2, "showing":Z
    if-eqz v3, :cond_5f

    if-nez p1, :cond_5f

    if-eqz v2, :cond_5f

    .line 8526
    const/4 v0, 0x0

    .line 8530
    iput-boolean v0, p0, mKeyguardOccluded:Z

    .line 8532
    sget-boolean v6, DEBUG_KEYGUARD:Z

    if-eqz v6, :cond_39

    const-string v6, "WindowManager"

    new-instance v7, Ljava/lang/StringBuilder;

    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    const-string v8, "Keyguard setOccluded false  Callers="

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-static {v9}, Landroid/os/Debug;->getCallers(I)Ljava/lang/String;

    move-result-object v8

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v7

    invoke-static {v6, v7}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 8533
    :cond_39
    iget-object v6, p0, mKeyguardDelegate:Lcom/android/server/policy/keyguard/KeyguardServiceDelegate;

    invoke-virtual {v6, v5, p2}, Lcom/android/server/policy/keyguard/KeyguardServiceDelegate;->setOccluded(ZI)V

    .line 8534
    invoke-interface {v1}, Landroid/view/WindowManagerPolicy$WindowState;->getAttrs()Landroid/view/WindowManager$LayoutParams;

    move-result-object v6

    iget v7, v6, Landroid/view/WindowManager$LayoutParams;->privateFlags:I

    or-int/lit16 v7, v7, 0x400

    iput v7, v6, Landroid/view/WindowManager$LayoutParams;->privateFlags:I

    .line 8536
    invoke-interface {v1}, Landroid/view/WindowManagerPolicy$WindowState;->getAttrs()Landroid/view/WindowManager$LayoutParams;

    move-result-object v6

    iget v7, v6, Landroid/view/WindowManager$LayoutParams;->flags:I

    and-int/lit8 v7, v7, -0x9

    iput v7, v6, Landroid/view/WindowManager$LayoutParams;->flags:I

    .line 8537
    invoke-interface {v1}, Landroid/view/WindowManagerPolicy$WindowState;->getAttrs()Landroid/view/WindowManager$LayoutParams;

    move-result-object v6

    iget-object v7, p0, mKeyguardDelegate:Lcom/android/server/policy/keyguard/KeyguardServiceDelegate;

    invoke-virtual {v7, v5}, Lcom/android/server/policy/keyguard/KeyguardServiceDelegate;->getScreenOrientation(Z)I

    move-result v5

    iput v5, v6, Landroid/view/WindowManager$LayoutParams;->screenOrientation:I

    .line 8571
    :goto_5e
    return v4

    .line 8544
    :cond_5f
    if-nez v3, :cond_ba

    if-eqz p1, :cond_ba

    if-eqz v2, :cond_ba

    .line 8545
    const/4 v0, 0x1

    .line 8549
    iput-boolean v0, p0, mKeyguardOccluded:Z

    .line 8551
    sget-boolean v5, DEBUG_KEYGUARD:Z

    if-eqz v5, :cond_88

    const-string v5, "WindowManager"

    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "Keyguard setOccluded true Callers="

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-static {v9}, Landroid/os/Debug;->getCallers(I)Ljava/lang/String;

    move-result-object v7

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-static {v5, v6}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 8552
    :cond_88
    iget-object v5, p0, mKeyguardDelegate:Lcom/android/server/policy/keyguard/KeyguardServiceDelegate;

    invoke-virtual {v5, v4, p2}, Lcom/android/server/policy/keyguard/KeyguardServiceDelegate;->setOccluded(ZI)V

    .line 8553
    invoke-interface {v1}, Landroid/view/WindowManagerPolicy$WindowState;->getAttrs()Landroid/view/WindowManager$LayoutParams;

    move-result-object v5

    iget v6, v5, Landroid/view/WindowManager$LayoutParams;->privateFlags:I

    and-int/lit16 v6, v6, -0x401

    iput v6, v5, Landroid/view/WindowManager$LayoutParams;->privateFlags:I

    .line 8554
    invoke-interface {v1}, Landroid/view/WindowManagerPolicy$WindowState;->getAttrs()Landroid/view/WindowManager$LayoutParams;

    move-result-object v5

    iget v6, v5, Landroid/view/WindowManager$LayoutParams;->flags:I

    const v7, -0x100001

    and-int/2addr v6, v7

    iput v6, v5, Landroid/view/WindowManager$LayoutParams;->flags:I

    .line 8555
    invoke-interface {v1}, Landroid/view/WindowManagerPolicy$WindowState;->getAttrs()Landroid/view/WindowManager$LayoutParams;

    move-result-object v5

    iget v6, v5, Landroid/view/WindowManager$LayoutParams;->flags:I

    or-int/lit8 v6, v6, 0x8

    iput v6, v5, Landroid/view/WindowManager$LayoutParams;->flags:I

    .line 8557
    invoke-interface {v1}, Landroid/view/WindowManagerPolicy$WindowState;->getAttrs()Landroid/view/WindowManager$LayoutParams;

    move-result-object v5

    iget-object v6, p0, mKeyguardDelegate:Lcom/android/server/policy/keyguard/KeyguardServiceDelegate;

    invoke-virtual {v6, v4}, Lcom/android/server/policy/keyguard/KeyguardServiceDelegate;->getScreenOrientation(Z)I

    move-result v6

    iput v6, v5, Landroid/view/WindowManager$LayoutParams;->screenOrientation:I

    goto :goto_5e

    .line 8561
    :cond_ba
    if-eqz v3, :cond_e8

    if-nez p1, :cond_e8

    if-nez v2, :cond_e8

    .line 8562
    const/4 v0, 0x0

    .line 8566
    iput-boolean v0, p0, mKeyguardOccluded:Z

    .line 8568
    sget-boolean v4, DEBUG_KEYGUARD:Z

    if-eqz v4, :cond_e3

    const-string v4, "WindowManager"

    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "Keyguard setOccluded false Callers="

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-static {v9}, Landroid/os/Debug;->getCallers(I)Ljava/lang/String;

    move-result-object v7

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-static {v4, v6}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 8569
    :cond_e3
    iget-object v4, p0, mKeyguardDelegate:Lcom/android/server/policy/keyguard/KeyguardServiceDelegate;

    invoke-virtual {v4, v5, p2}, Lcom/android/server/policy/keyguard/KeyguardServiceDelegate;->setOccluded(ZI)V

    :cond_e8
    move v4, v5

    .line 8571
    goto/16 :goto_5e
.end method

.method private shouldDispatchInputWhenNonInteractive()Z
    .registers 6

    .prologue
    const/4 v3, 0x0

    const/4 v2, 0x1

    .line 9492
    iget-object v4, p0, mDisplay:Landroid/view/Display;

    if-eqz v4, :cond_e

    iget-object v4, p0, mDisplay:Landroid/view/Display;

    invoke-virtual {v4}, Landroid/view/Display;->getState()I

    move-result v4

    if-ne v4, v2, :cond_10

    :cond_e
    move v2, v3

    .line 9514
    :cond_f
    :goto_f
    return v2

    .line 9496
    :cond_10
    invoke-virtual {p0}, isKeyguardShowingAndNotOccluded()Z

    move-result v4

    if-nez v4, :cond_f

    .line 9502
    invoke-static {}, getDreamManager()Landroid/service/dreams/IDreamManager;

    move-result-object v0

    .line 9505
    .local v0, "dreamManager":Landroid/service/dreams/IDreamManager;
    if-eqz v0, :cond_22

    :try_start_1c
    invoke-interface {v0}, Landroid/service/dreams/IDreamManager;->isDreaming()Z
    :try_end_1f
    .catch Landroid/os/RemoteException; {:try_start_1c .. :try_end_1f} :catch_24

    move-result v4

    if-nez v4, :cond_f

    :cond_22
    :goto_22
    move v2, v3

    .line 9514
    goto :goto_f

    .line 9508
    :catch_24
    move-exception v1

    .line 9509
    .local v1, "e":Landroid/os/RemoteException;
    const-string v2, "WindowManager"

    const-string v4, "RemoteException when checking if dreaming"

    invoke-static {v2, v4, v1}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    goto :goto_22
.end method

.method private shouldEnableWakeGestureLp()Z
    .registers 2

    .prologue
    .line 3416
    iget-boolean v0, p0, mWakeGestureEnabledSetting:Z

    if-eqz v0, :cond_1a

    iget-boolean v0, p0, mAwake:Z

    if-nez v0, :cond_1a

    iget-boolean v0, p0, mLidControlsSleep:Z

    if-eqz v0, :cond_10

    iget v0, p0, mLidState:I

    if-eqz v0, :cond_1a

    :cond_10
    iget-object v0, p0, mWakeGestureListener:Lcom/android/server/policy/PhoneWindowManager$MyWakeGestureListener;

    invoke-virtual {v0}, Lcom/android/server/policy/PhoneWindowManager$MyWakeGestureListener;->isSupported()Z

    move-result v0

    if-eqz v0, :cond_1a

    const/4 v0, 0x1

    :goto_19
    return v0

    :cond_1a
    const/4 v0, 0x0

    goto :goto_19
.end method

.method private shouldUseOutsets(Landroid/view/WindowManager$LayoutParams;I)Z
    .registers 5
    .param p1, "attrs"    # Landroid/view/WindowManager$LayoutParams;
    .param p2, "fl"    # I

    .prologue
    .line 6244
    iget v0, p1, Landroid/view/WindowManager$LayoutParams;->type:I

    const/16 v1, 0x7dd

    if-eq v0, v1, :cond_c

    const v0, 0x2000400

    and-int/2addr v0, p2

    if-eqz v0, :cond_e

    :cond_c
    const/4 v0, 0x1

    :goto_d
    return v0

    :cond_e
    const/4 v0, 0x0

    goto :goto_d
.end method

.method private showRecentApps(Z)V
    .registers 6
    .param p1, "triggeredFromAltTab"    # Z

    .prologue
    .line 5904
    iget-object v2, p0, mSPWM:Lcom/android/server/policy/sec/SamsungPhoneWindowManager;

    invoke-virtual {v2, p1}, Lcom/android/server/policy/sec/SamsungPhoneWindowManager;->showRecentApps(Z)Z

    move-result v2

    if-eqz v2, :cond_9

    .line 5918
    :cond_8
    :goto_8
    return-void

    .line 5907
    :cond_9
    const/4 v2, 0x0

    iput-boolean v2, p0, mPreloadedRecentApps:Z

    .line 5909
    :try_start_c
    invoke-virtual {p0}, getStatusBarService()Lcom/android/internal/statusbar/IStatusBarService;

    move-result-object v1

    .line 5910
    .local v1, "statusbar":Lcom/android/internal/statusbar/IStatusBarService;
    if-eqz v1, :cond_8

    .line 5911
    invoke-interface {v1, p1}, Lcom/android/internal/statusbar/IStatusBarService;->showRecentApps(Z)V
    :try_end_15
    .catch Landroid/os/RemoteException; {:try_start_c .. :try_end_15} :catch_16

    goto :goto_8

    .line 5913
    .end local v1    # "statusbar":Lcom/android/internal/statusbar/IStatusBarService;
    :catch_16
    move-exception v0

    .line 5914
    .local v0, "e":Landroid/os/RemoteException;
    const-string v2, "WindowManager"

    const-string v3, "RemoteException when showing recent apps"

    invoke-static {v2, v3, v0}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 5916
    const/4 v2, 0x0

    iput-object v2, p0, mStatusBarService:Lcom/android/internal/statusbar/IStatusBarService;

    goto :goto_8
.end method

.method private sleepPress(J)V
    .registers 5
    .param p1, "eventTime"    # J

    .prologue
    const/4 v1, 0x1

    .line 2075
    iget v0, p0, mShortPressOnSleepBehavior:I

    if-ne v0, v1, :cond_9

    .line 2076
    const/4 v0, 0x0

    invoke-virtual {p0, v0, v1}, launchHomeFromHotKey(ZZ)V

    .line 2078
    :cond_9
    return-void
.end method

.method private sleepRelease(J)V
    .registers 6
    .param p1, "eventTime"    # J

    .prologue
    .line 2081
    iget v0, p0, mShortPressOnSleepBehavior:I

    packed-switch v0, :pswitch_data_16

    .line 2089
    :goto_5
    return-void

    .line 2084
    :pswitch_6
    const-string v0, "WindowManager"

    const-string/jumbo v1, "sleepRelease() calling goToSleep(GO_TO_SLEEP_REASON_SLEEP_BUTTON)"

    invoke-static {v0, v1}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 2085
    iget-object v0, p0, mPowerManager:Landroid/os/PowerManager;

    const/4 v1, 0x6

    const/4 v2, 0x0

    invoke-virtual {v0, p1, p2, v1, v2}, Landroid/os/PowerManager;->goToSleep(JII)V

    goto :goto_5

    .line 2081
    :pswitch_data_16
    .packed-switch 0x0
        :pswitch_6
        :pswitch_6
    .end packed-switch
.end method

.method private startActivityAsUser(Landroid/content/Intent;Landroid/os/UserHandle;)V
    .registers 6
    .param p1, "intent"    # Landroid/content/Intent;
    .param p2, "handle"    # Landroid/os/UserHandle;

    .prologue
    .line 5832
    invoke-virtual {p0}, isUserSetupComplete()Z

    move-result v0

    if-eqz v0, :cond_c

    .line 5834
    :try_start_6
    iget-object v0, p0, mContext:Landroid/content/Context;

    invoke-virtual {v0, p1, p2}, Landroid/content/Context;->startActivityAsUser(Landroid/content/Intent;Landroid/os/UserHandle;)V
    :try_end_b
    .catch Landroid/content/ActivityNotFoundException; {:try_start_6 .. :try_end_b} :catch_25

    .line 5840
    :goto_b
    return-void

    .line 5838
    :cond_c
    const-string v0, "WindowManager"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Not starting activity because user setup is in progress: "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_b

    .line 5835
    :catch_25
    move-exception v0

    goto :goto_b
.end method

.method private takeScreenshot()V
    .registers 9

    .prologue
    .line 8915
    iget-object v4, p0, mScreenshotLock:Ljava/lang/Object;

    monitor-enter v4

    .line 8916
    :try_start_3
    iget-object v3, p0, mScreenshotConnection:Landroid/content/ServiceConnection;

    if-eqz v3, :cond_9

    .line 8917
    monitor-exit v4

    .line 8966
    :goto_8
    return-void

    .line 8919
    :cond_9
    new-instance v0, Landroid/content/ComponentName;

    const-string v3, "com.android.systemui"

    const-string v5, "com.android.systemui.screenshot.TakeScreenshotService"

    invoke-direct {v0, v3, v5}, Landroid/content/ComponentName;-><init>(Ljava/lang/String;Ljava/lang/String;)V

    .line 8921
    .local v0, "cn":Landroid/content/ComponentName;
    new-instance v2, Landroid/content/Intent;

    invoke-direct {v2}, Landroid/content/Intent;-><init>()V

    .line 8922
    .local v2, "intent":Landroid/content/Intent;
    invoke-virtual {v2, v0}, Landroid/content/Intent;->setComponent(Landroid/content/ComponentName;)Landroid/content/Intent;

    .line 8923
    new-instance v1, Lcom/android/server/policy/PhoneWindowManager$23;

    invoke-direct {v1, p0}, Lcom/android/server/policy/PhoneWindowManager$23;-><init>(Lcom/android/server/policy/PhoneWindowManager;)V

    .line 8960
    .local v1, "conn":Landroid/content/ServiceConnection;
    iget-object v3, p0, mContext:Landroid/content/Context;

    const/4 v5, 0x1

    sget-object v6, Landroid/os/UserHandle;->CURRENT:Landroid/os/UserHandle;

    invoke-virtual {v3, v2, v1, v5, v6}, Landroid/content/Context;->bindServiceAsUser(Landroid/content/Intent;Landroid/content/ServiceConnection;ILandroid/os/UserHandle;)Z

    move-result v3

    if-eqz v3, :cond_35

    .line 8962
    iput-object v1, p0, mScreenshotConnection:Landroid/content/ServiceConnection;

    .line 8963
    iget-object v3, p0, mHandler:Landroid/os/Handler;

    iget-object v5, p0, mScreenshotTimeout:Ljava/lang/Runnable;

    const-wide/16 v6, 0x2710

    invoke-virtual {v3, v5, v6, v7}, Landroid/os/Handler;->postDelayed(Ljava/lang/Runnable;J)Z

    .line 8965
    :cond_35
    monitor-exit v4

    goto :goto_8

    .end local v0    # "cn":Landroid/content/ComponentName;
    .end local v1    # "conn":Landroid/content/ServiceConnection;
    .end local v2    # "intent":Landroid/content/Intent;
    :catchall_37
    move-exception v3

    monitor-exit v4
    :try_end_39
    .catchall {:try_start_3 .. :try_end_39} :catchall_37

    throw v3
.end method

.method private toggleRecentApps()V
    .registers 5

    .prologue
    .line 5880
    const/4 v2, 0x0

    iput-boolean v2, p0, mPreloadedRecentApps:Z

    .line 5882
    :try_start_3
    invoke-virtual {p0}, getStatusBarService()Lcom/android/internal/statusbar/IStatusBarService;

    move-result-object v1

    .line 5883
    .local v1, "statusbar":Lcom/android/internal/statusbar/IStatusBarService;
    if-eqz v1, :cond_c

    .line 5884
    invoke-interface {v1}, Lcom/android/internal/statusbar/IStatusBarService;->toggleRecentApps()V
    :try_end_c
    .catch Landroid/os/RemoteException; {:try_start_3 .. :try_end_c} :catch_12

    .line 5893
    .end local v1    # "statusbar":Lcom/android/internal/statusbar/IStatusBarService;
    :cond_c
    :goto_c
    iget-object v2, p0, mMultiPhoneWindowManager:Lcom/android/server/policy/multiwindow/MultiPhoneWindowManager;

    invoke-virtual {v2}, Lcom/android/server/policy/multiwindow/MultiPhoneWindowManager;->toggleRecentApps()V

    .line 5895
    return-void

    .line 5886
    :catch_12
    move-exception v0

    .line 5887
    .local v0, "e":Landroid/os/RemoteException;
    const-string v2, "WindowManager"

    const-string v3, "RemoteException when toggling recent apps"

    invoke-static {v2, v3, v0}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 5889
    const/4 v2, 0x0

    iput-object v2, p0, mStatusBarService:Lcom/android/internal/statusbar/IStatusBarService;

    goto :goto_c
.end method

.method private updateDisplayRotationInfos(Landroid/view/Display;II)V
    .registers 13
    .param p1, "display"    # Landroid/view/Display;
    .param p2, "width"    # I
    .param p3, "height"    # I

    .prologue
    const v8, 0x112003e

    const/4 v7, 0x2

    const/4 v6, 0x0

    const/4 v5, 0x3

    const/4 v4, 0x1

    .line 3186
    iget-object v2, p0, mContext:Landroid/content/Context;

    if-nez v2, :cond_c

    .line 3215
    :goto_b
    return-void

    .line 3190
    :cond_c
    iget-object v2, p0, mDisplayWindowPolicy:Lcom/samsung/android/multidisplay/common/FallbackArrayList;

    invoke-virtual {p1}, Landroid/view/Display;->getDisplayId()I

    move-result v3

    invoke-virtual {v2, v3}, Lcom/samsung/android/multidisplay/common/FallbackArrayList;->get(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/policy/DisplayWindowPolicy;

    .line 3192
    .local v0, "policy":Lcom/android/server/policy/DisplayWindowPolicy;
    iget-object v2, p0, mContext:Landroid/content/Context;

    invoke-virtual {v2}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    move-result-object v1

    .line 3194
    .local v1, "res":Landroid/content/res/Resources;
    if-le p2, p3, :cond_34

    .line 3195
    iput v6, v0, Lcom/android/server/policy/DisplayWindowPolicy;->mLandscapeRotation:I

    .line 3196
    iput v7, v0, Lcom/android/server/policy/DisplayWindowPolicy;->mSeascapeRotation:I

    .line 3197
    invoke-virtual {v1, v8}, Landroid/content/res/Resources;->getBoolean(I)Z

    move-result v2

    if-eqz v2, :cond_2f

    .line 3198
    iput v4, v0, Lcom/android/server/policy/DisplayWindowPolicy;->mPortraitRotation:I

    .line 3199
    iput v5, v0, Lcom/android/server/policy/DisplayWindowPolicy;->mUpsideDownRotation:I

    goto :goto_b

    .line 3201
    :cond_2f
    iput v5, v0, Lcom/android/server/policy/DisplayWindowPolicy;->mPortraitRotation:I

    .line 3202
    iput v4, v0, Lcom/android/server/policy/DisplayWindowPolicy;->mUpsideDownRotation:I

    goto :goto_b

    .line 3205
    :cond_34
    iput v6, v0, Lcom/android/server/policy/DisplayWindowPolicy;->mPortraitRotation:I

    .line 3206
    iput v7, v0, Lcom/android/server/policy/DisplayWindowPolicy;->mUpsideDownRotation:I

    .line 3207
    invoke-virtual {v1, v8}, Landroid/content/res/Resources;->getBoolean(I)Z

    move-result v2

    if-eqz v2, :cond_43

    .line 3208
    iput v5, v0, Lcom/android/server/policy/DisplayWindowPolicy;->mLandscapeRotation:I

    .line 3209
    iput v4, v0, Lcom/android/server/policy/DisplayWindowPolicy;->mSeascapeRotation:I

    goto :goto_b

    .line 3211
    :cond_43
    iput v4, v0, Lcom/android/server/policy/DisplayWindowPolicy;->mLandscapeRotation:I

    .line 3212
    iput v5, v0, Lcom/android/server/policy/DisplayWindowPolicy;->mSeascapeRotation:I

    goto :goto_b
.end method

.method private updateDreamingSleepToken(Z)V
    .registers 4
    .param p1, "acquire"    # Z

    .prologue
    .line 11405
    if-eqz p1, :cond_11

    .line 11406
    iget-object v0, p0, mDreamingSleepToken:Landroid/app/ActivityManagerInternal$SleepToken;

    if-nez v0, :cond_10

    .line 11407
    iget-object v0, p0, mActivityManagerInternal:Landroid/app/ActivityManagerInternal;

    const-string v1, "Dream"

    invoke-virtual {v0, v1}, Landroid/app/ActivityManagerInternal;->acquireSleepToken(Ljava/lang/String;)Landroid/app/ActivityManagerInternal$SleepToken;

    move-result-object v0

    iput-object v0, p0, mDreamingSleepToken:Landroid/app/ActivityManagerInternal$SleepToken;

    .line 11415
    :cond_10
    :goto_10
    return-void

    .line 11410
    :cond_11
    iget-object v0, p0, mDreamingSleepToken:Landroid/app/ActivityManagerInternal$SleepToken;

    if-eqz v0, :cond_10

    .line 11411
    iget-object v0, p0, mDreamingSleepToken:Landroid/app/ActivityManagerInternal$SleepToken;

    invoke-virtual {v0}, Landroid/app/ActivityManagerInternal$SleepToken;->release()V

    .line 11412
    const/4 v0, 0x0

    iput-object v0, p0, mDreamingSleepToken:Landroid/app/ActivityManagerInternal$SleepToken;

    goto :goto_10
.end method

.method private updateLightStatusBarLw(I)I
    .registers 3
    .param p1, "vis"    # I

    .prologue
    .line 11983
    const/4 v0, 0x0

    invoke-direct {p0, p1, v0}, updateLightStatusBarLw(II)I

    move-result v0

    return v0
.end method

.method private updateLightStatusBarLw(II)I
    .registers 9
    .param p1, "vis"    # I
    .param p2, "displayId"    # I

    .prologue
    .line 11995
    iget-object v0, p0, mStatusBar:Landroid/view/WindowManagerPolicy$WindowState;

    .line 11996
    .local v0, "mStatusBar":Landroid/view/WindowManagerPolicy$WindowState;
    iget-object v2, p0, mTopFullscreenOpaqueWindowState:Landroid/view/WindowManagerPolicy$WindowState;

    .line 11997
    .local v2, "mTopFullscreenOpaqueWindowState":Landroid/view/WindowManagerPolicy$WindowState;
    iget-object v1, p0, mTopFullscreenOpaqueOrDimmingWindowState:Landroid/view/WindowManagerPolicy$WindowState;

    .line 12000
    .local v1, "mTopFullscreenOpaqueOrDimmingWindowState":Landroid/view/WindowManagerPolicy$WindowState;
    invoke-virtual {p0}, isStatusBarKeyguard()Z

    move-result v4

    if-eqz v4, :cond_20

    iget-boolean v4, p0, mHideLockScreen:Z

    if-nez v4, :cond_20

    move-object v3, v0

    .line 12007
    .local v3, "statusColorWin":Landroid/view/WindowManagerPolicy$WindowState;
    :goto_11
    if-eqz v3, :cond_1f

    .line 12008
    if-ne v3, v2, :cond_47

    .line 12011
    and-int/lit16 p1, p1, -0x2001

    .line 12012
    const/4 v4, 0x0

    invoke-static {v3, v4}, Lcom/android/server/policy/PolicyControl;->getSystemUiVisibility(Landroid/view/WindowManagerPolicy$WindowState;Landroid/view/WindowManager$LayoutParams;)I

    move-result v4

    and-int/lit16 v4, v4, 0x2000

    or-int/2addr p1, v4

    .line 12019
    :cond_1f
    :goto_1f
    return p1

    .line 12000
    .end local v3    # "statusColorWin":Landroid/view/WindowManagerPolicy$WindowState;
    :cond_20
    iget-object v4, p0, mFocusedWindow:Landroid/view/WindowManagerPolicy$WindowState;

    if-eqz v4, :cond_45

    iget-object v4, p0, mFocusedWindow:Landroid/view/WindowManagerPolicy$WindowState;

    if-eq v4, v1, :cond_45

    iget-object v4, p0, mFocusedWindow:Landroid/view/WindowManagerPolicy$WindowState;

    iget-object v5, p0, mFocusedWindow:Landroid/view/WindowManagerPolicy$WindowState;

    invoke-interface {v5}, Landroid/view/WindowManagerPolicy$WindowState;->getAttrs()Landroid/view/WindowManager$LayoutParams;

    move-result-object v5

    invoke-virtual {p0, v4, v5}, checkTopFullscreenOpaqueWindowState(Landroid/view/WindowManagerPolicy$WindowState;Landroid/view/WindowManager$LayoutParams;)Z

    move-result v4

    if-eqz v4, :cond_45

    iget-object v4, p0, mFocusedWindow:Landroid/view/WindowManagerPolicy$WindowState;

    invoke-interface {v4}, Landroid/view/WindowManagerPolicy$WindowState;->getAttrs()Landroid/view/WindowManager$LayoutParams;

    move-result-object v4

    iget v4, v4, Landroid/view/WindowManager$LayoutParams;->flags:I

    and-int/lit16 v4, v4, 0x400

    if-nez v4, :cond_45

    iget-object v3, p0, mFocusedWindow:Landroid/view/WindowManagerPolicy$WindowState;

    goto :goto_11

    :cond_45
    move-object v3, v1

    goto :goto_11

    .line 12014
    .restart local v3    # "statusColorWin":Landroid/view/WindowManagerPolicy$WindowState;
    :cond_47
    if-eqz v3, :cond_1f

    invoke-interface {v3}, Landroid/view/WindowManagerPolicy$WindowState;->isDimming()Z

    move-result v4

    if-eqz v4, :cond_1f

    .line 12016
    and-int/lit16 p1, p1, -0x2001

    goto :goto_1f
.end method

.method private updateLockScreenTimeout()V
    .registers 7

    .prologue
    .line 11388
    iget-object v2, p0, mScreenLockTimeout:Lcom/android/server/policy/PhoneWindowManager$ScreenLockTimeout;

    monitor-enter v2

    .line 11389
    :try_start_3
    iget-boolean v1, p0, mAllowLockscreenWhenOn:Z

    if-eqz v1, :cond_2c

    iget-boolean v1, p0, mAwake:Z

    if-eqz v1, :cond_2c

    iget-object v1, p0, mKeyguardDelegate:Lcom/android/server/policy/keyguard/KeyguardServiceDelegate;

    if-eqz v1, :cond_2c

    iget-object v1, p0, mKeyguardDelegate:Lcom/android/server/policy/keyguard/KeyguardServiceDelegate;

    invoke-virtual {v1}, Lcom/android/server/policy/keyguard/KeyguardServiceDelegate;->isSecure()Z

    move-result v1

    if-eqz v1, :cond_2c

    const/4 v0, 0x1

    .line 11391
    .local v0, "enable":Z
    :goto_18
    iget-boolean v1, p0, mLockScreenTimerActive:Z

    if-eq v1, v0, :cond_2a

    .line 11392
    if-eqz v0, :cond_2e

    .line 11394
    iget-object v1, p0, mHandler:Landroid/os/Handler;

    iget-object v3, p0, mScreenLockTimeout:Lcom/android/server/policy/PhoneWindowManager$ScreenLockTimeout;

    iget v4, p0, mLockScreenTimeout:I

    int-to-long v4, v4

    invoke-virtual {v1, v3, v4, v5}, Landroid/os/Handler;->postDelayed(Ljava/lang/Runnable;J)Z

    .line 11399
    :goto_28
    iput-boolean v0, p0, mLockScreenTimerActive:Z

    .line 11401
    :cond_2a
    monitor-exit v2

    .line 11402
    return-void

    .line 11389
    .end local v0    # "enable":Z
    :cond_2c
    const/4 v0, 0x0

    goto :goto_18

    .line 11397
    .restart local v0    # "enable":Z
    :cond_2e
    iget-object v1, p0, mHandler:Landroid/os/Handler;

    iget-object v3, p0, mScreenLockTimeout:Lcom/android/server/policy/PhoneWindowManager$ScreenLockTimeout;

    invoke-virtual {v1, v3}, Landroid/os/Handler;->removeCallbacks(Ljava/lang/Runnable;)V

    goto :goto_28

    .line 11401
    .end local v0    # "enable":Z
    :catchall_36
    move-exception v1

    monitor-exit v2
    :try_end_38
    .catchall {:try_start_3 .. :try_end_38} :catchall_36

    throw v1
.end method

.method private updateScreenOffSleepToken(Z)V
    .registers 3
    .param p1, "acquire"    # Z

    .prologue
    .line 11419
    const/4 v0, 0x0

    invoke-direct {p0, p1, v0}, updateScreenOffSleepToken(ZI)V

    .line 11420
    return-void
.end method

.method private updateScreenOffSleepToken(ZI)V
    .registers 7
    .param p1, "acquire"    # Z
    .param p2, "displayId"    # I

    .prologue
    const/4 v1, 0x0

    const/4 v3, 0x1

    const/4 v2, 0x2

    .line 11423
    if-eqz p1, :cond_2a

    .line 11424
    if-eqz p2, :cond_9

    if-ne p2, v2, :cond_17

    .line 11425
    :cond_9
    iget-object v0, p0, mScreenOffSleepToken:Landroid/app/ActivityManagerInternal$SleepToken;

    if-nez v0, :cond_17

    .line 11426
    iget-object v0, p0, mActivityManagerInternal:Landroid/app/ActivityManagerInternal;

    const-string v1, "MainScreenOff"

    invoke-virtual {v0, v1}, Landroid/app/ActivityManagerInternal;->acquireSleepToken(Ljava/lang/String;)Landroid/app/ActivityManagerInternal$SleepToken;

    move-result-object v0

    iput-object v0, p0, mScreenOffSleepToken:Landroid/app/ActivityManagerInternal$SleepToken;

    .line 11429
    :cond_17
    if-eq p2, v3, :cond_1b

    if-ne p2, v2, :cond_29

    .line 11430
    :cond_1b
    iget-object v0, p0, mSubScreenOffSleepToken:Landroid/app/ActivityManagerInternal$SleepToken;

    if-nez v0, :cond_29

    .line 11431
    iget-object v0, p0, mActivityManagerInternal:Landroid/app/ActivityManagerInternal;

    const-string v1, "SubScreenOff"

    invoke-virtual {v0, v1}, Landroid/app/ActivityManagerInternal;->acquireSleepToken(Ljava/lang/String;)Landroid/app/ActivityManagerInternal$SleepToken;

    move-result-object v0

    iput-object v0, p0, mSubScreenOffSleepToken:Landroid/app/ActivityManagerInternal$SleepToken;

    .line 11448
    :cond_29
    :goto_29
    return-void

    .line 11435
    :cond_2a
    if-eqz p2, :cond_2e

    if-ne p2, v2, :cond_39

    .line 11436
    :cond_2e
    iget-object v0, p0, mScreenOffSleepToken:Landroid/app/ActivityManagerInternal$SleepToken;

    if-eqz v0, :cond_39

    .line 11437
    iget-object v0, p0, mScreenOffSleepToken:Landroid/app/ActivityManagerInternal$SleepToken;

    invoke-virtual {v0}, Landroid/app/ActivityManagerInternal$SleepToken;->release()V

    .line 11438
    iput-object v1, p0, mScreenOffSleepToken:Landroid/app/ActivityManagerInternal$SleepToken;

    .line 11441
    :cond_39
    if-eq p2, v3, :cond_3d

    if-ne p2, v2, :cond_29

    .line 11442
    :cond_3d
    iget-object v0, p0, mSubScreenOffSleepToken:Landroid/app/ActivityManagerInternal$SleepToken;

    if-eqz v0, :cond_29

    .line 11443
    iget-object v0, p0, mSubScreenOffSleepToken:Landroid/app/ActivityManagerInternal$SleepToken;

    invoke-virtual {v0}, Landroid/app/ActivityManagerInternal$SleepToken;->release()V

    .line 11444
    iput-object v1, p0, mSubScreenOffSleepToken:Landroid/app/ActivityManagerInternal$SleepToken;

    goto :goto_29
.end method

.method private updateSystemBarsLw(Landroid/view/WindowManagerPolicy$WindowState;II)I
    .registers 5
    .param p1, "win"    # Landroid/view/WindowManagerPolicy$WindowState;
    .param p2, "oldVis"    # I
    .param p3, "vis"    # I

    .prologue
    .line 12024
    const/4 v0, 0x0

    invoke-direct {p0, p1, p2, p3, v0}, updateSystemBarsLw(Landroid/view/WindowManagerPolicy$WindowState;III)I

    move-result v0

    return v0
.end method

.method private updateSystemBarsLw(Landroid/view/WindowManagerPolicy$WindowState;III)I
    .registers 39
    .param p1, "win"    # Landroid/view/WindowManagerPolicy$WindowState;
    .param p2, "oldVis"    # I
    .param p3, "vis"    # I
    .param p4, "displayId"    # I

    .prologue
    .line 12028
    const/4 v15, 0x0

    .line 12029
    .local v15, "mStatusBar":Landroid/view/WindowManagerPolicy$WindowState;
    const/4 v14, 0x0

    .line 12037
    .local v14, "mNavigationBar":Landroid/view/WindowManagerPolicy$WindowState;
    move-object/from16 v0, p0

    iget-object v15, v0, mStatusBar:Landroid/view/WindowManagerPolicy$WindowState;

    .line 12038
    move-object/from16 v0, p0

    iget-object v14, v0, mNavigationBar:Landroid/view/WindowManagerPolicy$WindowState;

    .line 12039
    move-object/from16 v0, p0

    iget-object v0, v0, mTopFullscreenOpaqueWindowState:Landroid/view/WindowManagerPolicy$WindowState;

    move-object/from16 v16, v0

    .line 12044
    .local v16, "mTopFullscreenOpaqueWindowState":Landroid/view/WindowManagerPolicy$WindowState;
    invoke-virtual/range {p0 .. p0}, isStatusBarKeyguard()Z

    move-result v29

    if-eqz v29, :cond_236

    move-object/from16 v0, p0

    iget-boolean v0, v0, mHideLockScreen:Z

    move/from16 v29, v0

    if-nez v29, :cond_236

    move-object/from16 v25, v15

    .line 12049
    .local v25, "transWin":Landroid/view/WindowManagerPolicy$WindowState;
    :goto_20
    invoke-virtual/range {p0 .. p0}, isStatusBarSViewCover()Z

    move-result v29

    if-eqz v29, :cond_38

    move-object/from16 v0, p0

    iget v0, v0, mHideSViewCover:I

    move/from16 v29, v0

    if-nez v29, :cond_38

    move-object/from16 v0, p0

    iget-object v0, v0, mHideSViewCoverWindowState:Landroid/view/WindowManagerPolicy$WindowState;

    move-object/from16 v29, v0

    if-nez v29, :cond_38

    .line 12052
    move-object/from16 v25, v15

    .line 12060
    :cond_38
    if-eqz v16, :cond_4c

    invoke-interface/range {v16 .. v16}, Landroid/view/WindowManagerPolicy$WindowState;->getMultiWindowStyleLw()Lcom/samsung/android/multiwindow/MultiWindowStyle;

    move-result-object v29

    invoke-virtual/range {v29 .. v29}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->getType()I

    move-result v29

    const/16 v30, 0x1

    move/from16 v0, v29

    move/from16 v1, v30

    if-ne v0, v1, :cond_4c

    .line 12062
    or-int/lit8 p3, p3, 0x4

    .line 12068
    :cond_4c
    move-object/from16 v0, p0

    iget-boolean v0, v0, mForceHideStatusBarForCocktail:Z

    move/from16 v29, v0

    if-eqz v29, :cond_56

    .line 12069
    or-int/lit8 p3, p3, 0x4

    .line 12073
    :cond_56
    move-object/from16 v0, p0

    iget-object v0, v0, mPersonaManager:Landroid/os/PersonaManager;

    move-object/from16 v29, v0

    if-eqz v29, :cond_76

    move-object/from16 v0, p0

    iget-object v0, v0, mPersonaManager:Landroid/os/PersonaManager;

    move-object/from16 v29, v0

    move-object/from16 v0, p0

    iget-object v0, v0, mPersonaManager:Landroid/os/PersonaManager;

    move-object/from16 v30, v0

    invoke-virtual/range {v30 .. v30}, Landroid/os/PersonaManager;->getFocusedUser()I

    move-result v30

    invoke-virtual/range {v29 .. v30}, Landroid/os/PersonaManager;->isKnoxKeyguardShown(I)Z

    move-result v29

    if-eqz v29, :cond_76

    .line 12074
    or-int/lit8 p3, p3, 0x4

    .line 12077
    :cond_76
    move-object/from16 v0, p0

    iget-object v0, v0, mStatusBarController:Lcom/android/server/policy/StatusBarController;

    move-object/from16 v29, v0

    move-object/from16 v0, v29

    move-object/from16 v1, v25

    move/from16 v2, p3

    move/from16 v3, p2

    invoke-virtual {v0, v1, v2, v3}, Lcom/android/server/policy/StatusBarController;->applyTranslucentFlagLw(Landroid/view/WindowManagerPolicy$WindowState;II)I

    move-result p3

    .line 12078
    move-object/from16 v0, p0

    iget-object v0, v0, mNavigationBarController:Lcom/android/server/policy/BarController;

    move-object/from16 v29, v0

    move-object/from16 v0, v29

    move-object/from16 v1, v25

    move/from16 v2, p3

    move/from16 v3, p2

    invoke-virtual {v0, v1, v2, v3}, Lcom/android/server/policy/BarController;->applyTranslucentFlagLw(Landroid/view/WindowManagerPolicy$WindowState;II)I

    move-result p3

    .line 12081
    invoke-interface/range {p1 .. p1}, Landroid/view/WindowManagerPolicy$WindowState;->getAttrs()Landroid/view/WindowManager$LayoutParams;

    move-result-object v29

    move-object/from16 v0, v29

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    move/from16 v28, v0

    .line 12082
    .local v28, "type":I
    const/16 v29, 0x7d0

    move/from16 v0, v28

    move/from16 v1, v29

    if-ne v0, v1, :cond_23a

    const/16 v24, 0x1

    .line 12083
    .local v24, "statusBarHasFocus":Z
    :goto_ae
    if-eqz v24, :cond_cc

    invoke-virtual/range {p0 .. p0}, isStatusBarKeyguard()Z

    move-result v29

    if-nez v29, :cond_cc

    .line 12084
    const/16 v8, 0x3806

    .line 12089
    .local v8, "flags":I
    move-object/from16 v0, p0

    iget-boolean v0, v0, mHideLockScreen:Z

    move/from16 v29, v0

    if-eqz v29, :cond_c4

    .line 12090
    const/high16 v29, -0x40000000    # -2.0f

    or-int v8, v8, v29

    .line 12092
    :cond_c4
    xor-int/lit8 v29, v8, -0x1

    and-int v29, v29, p3

    and-int v30, p2, v8

    or-int p3, v29, v30

    .line 12095
    .end local v8    # "flags":I
    :cond_cc
    invoke-direct/range {p0 .. p0}, areTranslucentBarsAllowed()Z

    move-result v29

    if-nez v29, :cond_db

    move-object/from16 v0, v25

    if-eq v0, v15, :cond_db

    .line 12096
    const v29, 0x3fff7fff

    and-int p3, p3, v29

    .line 12101
    :cond_db
    move/from16 v0, p3

    and-int/lit16 v0, v0, 0x1000

    move/from16 v29, v0

    if-eqz v29, :cond_23e

    const/4 v13, 0x1

    .line 12103
    .local v13, "immersiveSticky":Z
    :goto_e4
    if-eqz v16, :cond_241

    const/16 v29, 0x0

    move-object/from16 v0, v16

    move-object/from16 v1, v29

    invoke-static {v0, v1}, Lcom/android/server/policy/PolicyControl;->getWindowFlags(Landroid/view/WindowManagerPolicy$WindowState;Landroid/view/WindowManager$LayoutParams;)I

    move-result v29

    move/from16 v0, v29

    and-int/lit16 v0, v0, 0x400

    move/from16 v29, v0

    if-eqz v29, :cond_241

    const/4 v11, 0x1

    .line 12107
    .local v11, "hideStatusBarWM":Z
    :goto_f9
    and-int/lit8 v29, p3, 0x4

    if-eqz v29, :cond_244

    const/4 v10, 0x1

    .line 12109
    .local v10, "hideStatusBarSysui":Z
    :goto_fe
    and-int/lit8 v29, p3, 0x2

    if-eqz v29, :cond_247

    const/4 v9, 0x1

    .line 12112
    .local v9, "hideNavBarSysui":Z
    :goto_103
    if-eqz v15, :cond_24a

    if-nez v11, :cond_10d

    if-eqz v10, :cond_10b

    if-nez v13, :cond_10d

    :cond_10b
    if-eqz v24, :cond_24a

    :cond_10d
    const/16 v27, 0x1

    .line 12117
    .local v27, "transientStatusBarAllowed":Z
    :goto_10f
    if-nez v27, :cond_11d

    move-object/from16 v0, p0

    iget-object v0, v0, mMultiPhoneWindowManager:Lcom/android/server/policy/multiwindow/MultiPhoneWindowManager;

    move-object/from16 v29, v0

    invoke-virtual/range {v29 .. v29}, Lcom/android/server/policy/multiwindow/MultiPhoneWindowManager;->isStatusBarTransient()Z

    move-result v29

    if-eqz v29, :cond_24e

    :cond_11d
    const/16 v27, 0x1

    .line 12121
    :goto_11f
    if-eqz v14, :cond_252

    if-eqz v9, :cond_252

    if-eqz v13, :cond_252

    const/16 v26, 0x1

    .line 12125
    .local v26, "transientNavBarAllowed":Z
    :goto_127
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v20

    .line 12126
    .local v20, "now":J
    move-object/from16 v0, p0

    iget-wide v0, v0, mPendingPanicGestureUptime:J

    move-wide/from16 v30, v0

    const-wide/16 v32, 0x0

    cmp-long v29, v30, v32

    if-eqz v29, :cond_256

    move-object/from16 v0, p0

    iget-wide v0, v0, mPendingPanicGestureUptime:J

    move-wide/from16 v30, v0

    sub-long v30, v20, v30

    const-wide/16 v32, 0x7530

    cmp-long v29, v30, v32

    if-gtz v29, :cond_256

    const/16 v22, 0x1

    .line 12128
    .local v22, "pendingPanic":Z
    :goto_147
    if-eqz v22, :cond_173

    if-eqz v9, :cond_173

    invoke-virtual/range {p0 .. p0}, isStatusBarKeyguard()Z

    move-result v29

    if-nez v29, :cond_173

    move-object/from16 v0, p0

    iget-boolean v0, v0, mKeyguardDrawComplete:Z

    move/from16 v29, v0

    if-eqz v29, :cond_173

    .line 12131
    const-wide/16 v30, 0x0

    move-wide/from16 v0, v30

    move-object/from16 v2, p0

    iput-wide v0, v2, mPendingPanicGestureUptime:J

    .line 12132
    move-object/from16 v0, p0

    iget-object v0, v0, mStatusBarController:Lcom/android/server/policy/StatusBarController;

    move-object/from16 v29, v0

    invoke-virtual/range {v29 .. v29}, Lcom/android/server/policy/StatusBarController;->showTransient()V

    .line 12133
    move-object/from16 v0, p0

    iget-object v0, v0, mNavigationBarController:Lcom/android/server/policy/BarController;

    move-object/from16 v29, v0

    invoke-virtual/range {v29 .. v29}, Lcom/android/server/policy/BarController;->showTransient()V

    .line 12136
    :cond_173
    move-object/from16 v0, p0

    iget-object v0, v0, mStatusBarController:Lcom/android/server/policy/StatusBarController;

    move-object/from16 v29, v0

    move-object/from16 v0, v29

    move/from16 v1, p4

    invoke-virtual {v0, v1}, Lcom/android/server/policy/StatusBarController;->isTransientShowRequested(I)Z

    move-result v29

    if-eqz v29, :cond_25a

    if-nez v27, :cond_25a

    if-eqz v10, :cond_25a

    const/4 v7, 0x1

    .line 12138
    .local v7, "denyTransientStatus":Z
    :goto_188
    move-object/from16 v0, p0

    iget-object v0, v0, mNavigationBarController:Lcom/android/server/policy/BarController;

    move-object/from16 v29, v0

    move-object/from16 v0, v29

    move/from16 v1, p4

    invoke-virtual {v0, v1}, Lcom/android/server/policy/BarController;->isTransientShowRequested(I)Z

    move-result v29

    if-eqz v29, :cond_25d

    if-nez v26, :cond_25d

    const/4 v6, 0x1

    .line 12140
    .local v6, "denyTransientNav":Z
    :goto_19b
    if-nez v7, :cond_19f

    if-eqz v6, :cond_1a4

    .line 12147
    :cond_19f
    invoke-direct/range {p0 .. p0}, clearClearableFlagsLw()V

    .line 12151
    and-int/lit8 p3, p3, -0x8

    .line 12154
    :cond_1a4
    move/from16 v0, p3

    and-int/lit16 v0, v0, 0x800

    move/from16 v29, v0

    if-eqz v29, :cond_260

    const/4 v12, 0x1

    .line 12155
    .local v12, "immersive":Z
    :goto_1ad
    move/from16 v0, p3

    and-int/lit16 v0, v0, 0x1000

    move/from16 v29, v0

    if-eqz v29, :cond_263

    const/4 v13, 0x1

    .line 12156
    :goto_1b6
    if-nez v12, :cond_1ba

    if-eqz v13, :cond_266

    :cond_1ba
    const/16 v17, 0x1

    .line 12158
    .local v17, "navAllowedHidden":Z
    :goto_1bc
    if-eqz v9, :cond_1de

    if-nez v17, :cond_1de

    invoke-interface/range {p1 .. p1}, Landroid/view/WindowManagerPolicy$WindowState;->getBaseType()I

    move-result v29

    move-object/from16 v0, p0

    move/from16 v1, v29

    invoke-virtual {v0, v1}, windowTypeToLayerLw(I)I

    move-result v29

    const/16 v30, 0x7e6

    move-object/from16 v0, p0

    move/from16 v1, v30

    invoke-virtual {v0, v1}, windowTypeToLayerLw(I)I

    move-result v30

    move/from16 v0, v29

    move/from16 v1, v30

    if-le v0, v1, :cond_1de

    .line 12162
    and-int/lit8 p3, p3, -0x3

    .line 12165
    :cond_1de
    move-object/from16 v0, p0

    iget-object v0, v0, mStatusBarController:Lcom/android/server/policy/StatusBarController;

    move-object/from16 v29, v0

    move-object/from16 v0, v29

    move/from16 v1, v27

    move/from16 v2, p2

    move/from16 v3, p3

    move/from16 v4, p4

    invoke-virtual {v0, v1, v2, v3, v4}, Lcom/android/server/policy/StatusBarController;->updateVisibilityLw(ZIII)I

    move-result p3

    .line 12168
    move-object/from16 v0, p0

    move/from16 v1, p2

    invoke-direct {v0, v1}, isImmersiveMode(I)Z

    move-result v19

    .line 12169
    .local v19, "oldImmersiveMode":Z
    move-object/from16 v0, p0

    move/from16 v1, p3

    invoke-direct {v0, v1}, isImmersiveMode(I)Z

    move-result v18

    .line 12170
    .local v18, "newImmersiveMode":Z
    move/from16 v0, v19

    move/from16 v1, v18

    if-eq v0, v1, :cond_221

    .line 12171
    invoke-interface/range {p1 .. p1}, Landroid/view/WindowManagerPolicy$WindowState;->getOwningPackage()Ljava/lang/String;

    move-result-object v23

    .line 12172
    .local v23, "pkg":Ljava/lang/String;
    move-object/from16 v0, p0

    iget-object v0, v0, mImmersiveModeConfirmation:Lcom/android/server/policy/ImmersiveModeConfirmation;

    move-object/from16 v29, v0

    invoke-virtual/range {p0 .. p0}, isUserSetupComplete()Z

    move-result v30

    move-object/from16 v0, v29

    move-object/from16 v1, v23

    move/from16 v2, v18

    move/from16 v3, v30

    invoke-virtual {v0, v1, v2, v3}, Lcom/android/server/policy/ImmersiveModeConfirmation;->immersiveModeChanged(Ljava/lang/String;ZZ)V

    .line 12176
    .end local v23    # "pkg":Ljava/lang/String;
    :cond_221
    move-object/from16 v0, p0

    iget-object v0, v0, mNavigationBarController:Lcom/android/server/policy/BarController;

    move-object/from16 v29, v0

    move-object/from16 v0, v29

    move/from16 v1, v26

    move/from16 v2, p2

    move/from16 v3, p3

    move/from16 v4, p4

    invoke-virtual {v0, v1, v2, v3, v4}, Lcom/android/server/policy/BarController;->updateVisibilityLw(ZIII)I

    move-result p3

    .line 12178
    return p3

    .end local v6    # "denyTransientNav":Z
    .end local v7    # "denyTransientStatus":Z
    .end local v9    # "hideNavBarSysui":Z
    .end local v10    # "hideStatusBarSysui":Z
    .end local v11    # "hideStatusBarWM":Z
    .end local v12    # "immersive":Z
    .end local v13    # "immersiveSticky":Z
    .end local v17    # "navAllowedHidden":Z
    .end local v18    # "newImmersiveMode":Z
    .end local v19    # "oldImmersiveMode":Z
    .end local v20    # "now":J
    .end local v22    # "pendingPanic":Z
    .end local v24    # "statusBarHasFocus":Z
    .end local v25    # "transWin":Landroid/view/WindowManagerPolicy$WindowState;
    .end local v26    # "transientNavBarAllowed":Z
    .end local v27    # "transientStatusBarAllowed":Z
    .end local v28    # "type":I
    :cond_236
    move-object/from16 v25, v16

    .line 12044
    goto/16 :goto_20

    .line 12082
    .restart local v25    # "transWin":Landroid/view/WindowManagerPolicy$WindowState;
    .restart local v28    # "type":I
    :cond_23a
    const/16 v24, 0x0

    goto/16 :goto_ae

    .line 12101
    .restart local v24    # "statusBarHasFocus":Z
    :cond_23e
    const/4 v13, 0x0

    goto/16 :goto_e4

    .line 12103
    .restart local v13    # "immersiveSticky":Z
    :cond_241
    const/4 v11, 0x0

    goto/16 :goto_f9

    .line 12107
    .restart local v11    # "hideStatusBarWM":Z
    :cond_244
    const/4 v10, 0x0

    goto/16 :goto_fe

    .line 12109
    .restart local v10    # "hideStatusBarSysui":Z
    :cond_247
    const/4 v9, 0x0

    goto/16 :goto_103

    .line 12112
    .restart local v9    # "hideNavBarSysui":Z
    :cond_24a
    const/16 v27, 0x0

    goto/16 :goto_10f

    .line 12117
    .restart local v27    # "transientStatusBarAllowed":Z
    :cond_24e
    const/16 v27, 0x0

    goto/16 :goto_11f

    .line 12121
    :cond_252
    const/16 v26, 0x0

    goto/16 :goto_127

    .line 12126
    .restart local v20    # "now":J
    .restart local v26    # "transientNavBarAllowed":Z
    :cond_256
    const/16 v22, 0x0

    goto/16 :goto_147

    .line 12136
    .restart local v22    # "pendingPanic":Z
    :cond_25a
    const/4 v7, 0x0

    goto/16 :goto_188

    .line 12138
    .restart local v7    # "denyTransientStatus":Z
    :cond_25d
    const/4 v6, 0x0

    goto/16 :goto_19b

    .line 12154
    .restart local v6    # "denyTransientNav":Z
    :cond_260
    const/4 v12, 0x0

    goto/16 :goto_1ad

    .line 12155
    .restart local v12    # "immersive":Z
    :cond_263
    const/4 v13, 0x0

    goto/16 :goto_1b6

    .line 12156
    :cond_266
    const/16 v17, 0x0

    goto/16 :goto_1bc
.end method

.method private updateSystemUiVisibilityLw()I
    .registers 2

    .prologue
    .line 11855
    const/4 v0, 0x0

    invoke-direct {p0, v0}, updateSystemUiVisibilityLw(I)I

    move-result v0

    return v0
.end method

.method private updateSystemUiVisibilityLw(I)I
    .registers 19
    .param p1, "displayId"    # I

    .prologue
    .line 11861
    const/4 v12, 0x0

    .line 11862
    .local v12, "mResettingSystemUiFlags":I
    const/4 v9, 0x0

    .line 11864
    .local v9, "mForceClearedSystemUiFlags":I
    const/4 v10, 0x0

    .line 11875
    .local v10, "mLastFocusNeedsMenu":Z
    move-object/from16 v0, p0

    iget v12, v0, mResettingSystemUiFlags:I

    .line 11876
    move-object/from16 v0, p0

    iget v9, v0, mForceClearedSystemUiFlags:I

    .line 11877
    move-object/from16 v0, p0

    iget v11, v0, mLastSystemUiFlags:I

    .line 11878
    .local v11, "mLastSystemUiFlags":I
    move-object/from16 v0, p0

    iget-boolean v10, v0, mLastFocusNeedsMenu:Z

    .line 11879
    move-object/from16 v0, p0

    iget-object v13, v0, mTopFullscreenOpaqueWindowState:Landroid/view/WindowManagerPolicy$WindowState;

    .line 11887
    .local v13, "mTopFullscreenOpaqueWindowState":Landroid/view/WindowManagerPolicy$WindowState;
    move-object/from16 v0, p0

    iget-object v2, v0, mFocusedWindow:Landroid/view/WindowManagerPolicy$WindowState;

    if-eqz v2, :cond_33

    move-object/from16 v0, p0

    iget-object v14, v0, mFocusedWindow:Landroid/view/WindowManagerPolicy$WindowState;

    .line 11898
    .local v14, "tempWin":Landroid/view/WindowManagerPolicy$WindowState;
    :goto_21
    if-eqz v14, :cond_2e

    invoke-interface {v14}, Landroid/view/WindowManagerPolicy$WindowState;->getMultiWindowStyleLw()Lcom/samsung/android/multiwindow/MultiWindowStyle;

    move-result-object v2

    invoke-virtual {v2}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->isCascade()Z

    move-result v2

    if-eqz v2, :cond_2e

    .line 11899
    move-object v14, v13

    .line 11903
    :cond_2e
    move-object v6, v14

    .line 11904
    .local v6, "win":Landroid/view/WindowManagerPolicy$WindowState;
    if-nez v6, :cond_35

    .line 11905
    const/4 v8, 0x0

    .line 11979
    :goto_32
    return v8

    .end local v6    # "win":Landroid/view/WindowManagerPolicy$WindowState;
    .end local v14    # "tempWin":Landroid/view/WindowManagerPolicy$WindowState;
    :cond_33
    move-object v14, v13

    .line 11887
    goto :goto_21

    .line 11907
    .restart local v6    # "win":Landroid/view/WindowManagerPolicy$WindowState;
    .restart local v14    # "tempWin":Landroid/view/WindowManagerPolicy$WindowState;
    :cond_35
    invoke-interface {v6}, Landroid/view/WindowManagerPolicy$WindowState;->getAttrs()Landroid/view/WindowManager$LayoutParams;

    move-result-object v2

    iget v2, v2, Landroid/view/WindowManager$LayoutParams;->privateFlags:I

    and-int/lit16 v2, v2, 0x400

    if-eqz v2, :cond_48

    move-object/from16 v0, p0

    iget-boolean v2, v0, mHideLockScreen:Z

    const/4 v3, 0x1

    if-ne v2, v3, :cond_48

    .line 11914
    const/4 v8, 0x0

    goto :goto_32

    .line 11918
    :cond_48
    invoke-interface {v6}, Landroid/view/WindowManagerPolicy$WindowState;->getAttrs()Landroid/view/WindowManager$LayoutParams;

    move-result-object v2

    iget v2, v2, Landroid/view/WindowManager$LayoutParams;->samsungFlags:I

    const/high16 v3, 0x10000000

    and-int/2addr v2, v3

    if-eqz v2, :cond_5b

    move-object/from16 v0, p0

    iget v2, v0, mHideSViewCover:I

    if-eqz v2, :cond_5b

    .line 11921
    const/4 v8, 0x0

    goto :goto_32

    .line 11925
    :cond_5b
    const/4 v2, 0x0

    invoke-static {v6, v2}, Lcom/android/server/policy/PolicyControl;->getSystemUiVisibility(Landroid/view/WindowManagerPolicy$WindowState;Landroid/view/WindowManager$LayoutParams;)I

    move-result v2

    xor-int/lit8 v3, v12, -0x1

    and-int/2addr v2, v3

    xor-int/lit8 v3, v9, -0x1

    and-int v15, v2, v3

    .line 11928
    .local v15, "tmpVisibility":I
    move-object/from16 v0, p0

    iget-boolean v2, v0, mForcingShowNavBar:Z

    if-eqz v2, :cond_7f

    invoke-interface {v6}, Landroid/view/WindowManagerPolicy$WindowState;->getSurfaceLayer()I

    move-result v2

    move-object/from16 v0, p0

    iget v3, v0, mForcingShowNavBarLayer:I

    if-ge v2, v3, :cond_7f

    .line 11929
    const/4 v2, 0x7

    invoke-static {v6, v2}, Lcom/android/server/policy/PolicyControl;->adjustClearableFlags(Landroid/view/WindowManagerPolicy$WindowState;I)I

    move-result v2

    xor-int/lit8 v2, v2, -0x1

    and-int/2addr v15, v2

    .line 11931
    :cond_7f
    move-object/from16 v0, p0

    move/from16 v1, p1

    invoke-direct {v0, v15, v1}, updateLightStatusBarLw(II)I

    move-result v15

    .line 11932
    move-object/from16 v0, p0

    move/from16 v1, p1

    invoke-direct {v0, v6, v11, v15, v1}, updateSystemBarsLw(Landroid/view/WindowManagerPolicy$WindowState;III)I

    move-result v5

    .line 11933
    .local v5, "visibility":I
    xor-int v8, v5, v11

    .line 11934
    .local v8, "diff":I
    invoke-interface {v6, v13}, Landroid/view/WindowManagerPolicy$WindowState;->getNeedsMenuLw(Landroid/view/WindowManagerPolicy$WindowState;)Z

    move-result v7

    .line 11935
    .local v7, "needsMenu":Z
    if-nez v8, :cond_a5

    if-ne v10, v7, :cond_a5

    move-object/from16 v0, p0

    iget-object v2, v0, mFocusedApp:Landroid/view/IApplicationToken;

    invoke-interface {v6}, Landroid/view/WindowManagerPolicy$WindowState;->getAppToken()Landroid/view/IApplicationToken;

    move-result-object v3

    if-ne v2, v3, :cond_a5

    .line 11937
    const/4 v8, 0x0

    goto :goto_32

    .line 11939
    :cond_a5
    move v11, v5

    .line 11940
    move v10, v7

    .line 11941
    invoke-interface {v6}, Landroid/view/WindowManagerPolicy$WindowState;->getAppToken()Landroid/view/IApplicationToken;

    move-result-object v2

    move-object/from16 v0, p0

    iput-object v2, v0, mFocusedApp:Landroid/view/IApplicationToken;

    .line 11949
    move-object/from16 v0, p0

    iput v11, v0, mLastSystemUiFlags:I

    .line 11950
    move-object/from16 v0, p0

    iput-boolean v10, v0, mLastFocusNeedsMenu:Z

    .line 11954
    move-object/from16 v0, p0

    iget-object v0, v0, mHandler:Landroid/os/Handler;

    move-object/from16 v16, v0

    new-instance v2, Lcom/android/server/policy/PhoneWindowManager$42;

    move-object/from16 v3, p0

    move/from16 v4, p1

    invoke-direct/range {v2 .. v7}, Lcom/android/server/policy/PhoneWindowManager$42;-><init>(Lcom/android/server/policy/PhoneWindowManager;IILandroid/view/WindowManagerPolicy$WindowState;Z)V

    move-object/from16 v0, v16

    invoke-virtual {v0, v2}, Landroid/os/Handler;->post(Ljava/lang/Runnable;)Z

    goto/16 :goto_32
.end method

.method private updateWakeGestureListenerLp()V
    .registers 2

    .prologue
    .line 3408
    invoke-direct {p0}, shouldEnableWakeGestureLp()Z

    move-result v0

    if-eqz v0, :cond_c

    .line 3409
    iget-object v0, p0, mWakeGestureListener:Lcom/android/server/policy/PhoneWindowManager$MyWakeGestureListener;

    invoke-virtual {v0}, Lcom/android/server/policy/PhoneWindowManager$MyWakeGestureListener;->requestWakeUpTrigger()V

    .line 3413
    :goto_b
    return-void

    .line 3411
    :cond_c
    iget-object v0, p0, mWakeGestureListener:Lcom/android/server/policy/PhoneWindowManager$MyWakeGestureListener;

    invoke-virtual {v0}, Lcom/android/server/policy/PhoneWindowManager$MyWakeGestureListener;->cancelWakeUpTrigger()V

    goto :goto_b
.end method

.method private wakeUp(JZI)Z
    .registers 10
    .param p1, "wakeTime"    # J
    .param p3, "wakeInTheaterMode"    # Z
    .param p4, "reason"    # I

    .prologue
    const/4 v1, 0x0

    .line 10148
    invoke-direct {p0}, isTheaterModeEnabled()Z

    move-result v0

    .line 10149
    .local v0, "theaterModeEnabled":Z
    if-nez p3, :cond_a

    if-eqz v0, :cond_a

    .line 10160
    :goto_9
    return v1

    .line 10153
    :cond_a
    if-eqz v0, :cond_18

    .line 10154
    iget-object v2, p0, mContext:Landroid/content/Context;

    invoke-virtual {v2}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v2

    const-string/jumbo v3, "theater_mode_on"

    invoke-static {v2, v3, v1}, Landroid/provider/Settings$Global;->putInt(Landroid/content/ContentResolver;Ljava/lang/String;I)Z

    .line 10158
    :cond_18
    iget-object v1, p0, mSPWM:Lcom/android/server/policy/sec/SamsungPhoneWindowManager;

    invoke-virtual {v1}, Lcom/android/server/policy/sec/SamsungPhoneWindowManager;->performCPUBoost()V

    .line 10159
    iget-object v1, p0, mPowerManager:Landroid/os/PowerManager;

    invoke-virtual {v1, p1, p2, p4}, Landroid/os/PowerManager;->wakeUp(JI)V

    .line 10160
    const/4 v1, 0x1

    goto :goto_9
.end method

.method private wakeUpFromPowerKey(J)V
    .registers 6
    .param p1, "eventTime"    # J

    .prologue
    .line 10144
    iget-boolean v0, p0, mAllowTheaterModeWakeFromPowerKey:Z

    const/4 v1, 0x1

    invoke-direct {p0, p1, p2, v0, v1}, wakeUp(JZI)Z

    .line 10145
    return-void
.end method


# virtual methods
.method public addBackWindow(I)Landroid/view/View;
    .registers 16
    .param p1, "displayId"    # I

    .prologue
    const/4 v13, 0x0

    .line 4407
    invoke-static {}, Landroid/hardware/display/DisplayManagerGlobal;->getInstance()Landroid/hardware/display/DisplayManagerGlobal;

    move-result-object v8

    .line 4408
    .local v8, "dm":Landroid/hardware/display/DisplayManagerGlobal;
    invoke-virtual {v8, p1}, Landroid/hardware/display/DisplayManagerGlobal;->getRealDisplay(I)Landroid/view/Display;

    move-result-object v7

    .line 4409
    .local v7, "display":Landroid/view/Display;
    const/4 v12, 0x0

    .line 4410
    .local v12, "wm":Landroid/view/WindowManagerImpl;
    const/4 v10, 0x0

    .line 4413
    .local v10, "view":Landroid/widget/ImageView;
    :try_start_b
    new-instance v1, Landroid/view/WindowManager$LayoutParams;

    const/4 v2, -0x1

    const/4 v3, -0x1

    const/16 v4, 0x831

    const/16 v5, 0x708

    const/4 v6, -0x1

    invoke-direct/range {v1 .. v6}, Landroid/view/WindowManager$LayoutParams;-><init>(IIIII)V

    .line 4421
    .local v1, "params":Landroid/view/WindowManager$LayoutParams;
    const/4 v2, 0x0

    iput-object v2, v1, Landroid/view/WindowManager$LayoutParams;->token:Landroid/os/IBinder;

    .line 4423
    iget v2, v1, Landroid/view/WindowManager$LayoutParams;->privateFlags:I

    or-int/lit8 v2, v2, 0x1

    iput v2, v1, Landroid/view/WindowManager$LayoutParams;->privateFlags:I

    .line 4424
    iget v2, v1, Landroid/view/WindowManager$LayoutParams;->privateFlags:I

    or-int/lit8 v2, v2, 0x10

    iput v2, v1, Landroid/view/WindowManager$LayoutParams;->privateFlags:I

    .line 4425
    iget v2, v1, Landroid/view/WindowManager$LayoutParams;->samsungFlags:I

    or-int/lit16 v2, v2, 0x2000

    iput v2, v1, Landroid/view/WindowManager$LayoutParams;->samsungFlags:I

    .line 4426
    const-string v2, "BackWindow"

    invoke-virtual {v1, v2}, Landroid/view/WindowManager$LayoutParams;->setTitle(Ljava/lang/CharSequence;)V

    .line 4428
    new-instance v11, Landroid/widget/ImageView;

    iget-object v2, p0, mContext:Landroid/content/Context;

    invoke-direct {v11, v2}, Landroid/widget/ImageView;-><init>(Landroid/content/Context;)V
    :try_end_38
    .catch Ljava/lang/Exception; {:try_start_b .. :try_end_38} :catch_79
    .catchall {:try_start_b .. :try_end_38} :catchall_99

    .line 4429
    .end local v10    # "view":Landroid/widget/ImageView;
    .local v11, "view":Landroid/widget/ImageView;
    const v2, 0x1080300

    :try_start_3b
    invoke-virtual {v11, v2}, Landroid/widget/ImageView;->setImageResource(I)V

    .line 4430
    sget-object v2, Landroid/widget/ImageView$ScaleType;->CENTER_CROP:Landroid/widget/ImageView$ScaleType;

    invoke-virtual {v11, v2}, Landroid/widget/ImageView;->setScaleType(Landroid/widget/ImageView$ScaleType;)V

    .line 4432
    iget-object v2, p0, mContext:Landroid/content/Context;

    const-string/jumbo v3, "window"

    invoke-virtual {v2, v3}, Landroid/content/Context;->getSystemService(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v2

    move-object v0, v2

    check-cast v0, Landroid/view/WindowManagerImpl;

    move-object v12, v0

    .line 4433
    if-eqz p1, :cond_56

    .line 4434
    invoke-virtual {v12, v7}, Landroid/view/WindowManagerImpl;->createPresentationWindowManager(Landroid/view/Display;)Landroid/view/WindowManagerImpl;

    move-result-object v12

    .line 4436
    :cond_56
    invoke-virtual {v12, v11, v1}, Landroid/view/WindowManagerImpl;->addView(Landroid/view/View;Landroid/view/ViewGroup$LayoutParams;)V

    .line 4437
    invoke-virtual {v11}, Landroid/widget/ImageView;->getParent()Landroid/view/ViewParent;
    :try_end_5c
    .catch Ljava/lang/Exception; {:try_start_3b .. :try_end_5c} :catch_b3
    .catchall {:try_start_3b .. :try_end_5c} :catchall_b0

    move-result-object v2

    if-eqz v2, :cond_77

    move-object v2, v11

    .line 4441
    :goto_60
    if-eqz v11, :cond_75

    invoke-virtual {v11}, Landroid/widget/ImageView;->getParent()Landroid/view/ViewParent;

    move-result-object v3

    if-nez v3, :cond_75

    if-eqz v12, :cond_75

    .line 4442
    const-string v3, "WindowManager"

    const-string/jumbo v4, "view not successfully added to wm, removing view"

    invoke-static {v3, v4}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 4443
    invoke-virtual {v12, v11}, Landroid/view/WindowManagerImpl;->removeViewImmediate(Landroid/view/View;)V

    :cond_75
    move-object v10, v11

    .line 4446
    .end local v1    # "params":Landroid/view/WindowManager$LayoutParams;
    .end local v11    # "view":Landroid/widget/ImageView;
    .restart local v10    # "view":Landroid/widget/ImageView;
    :goto_76
    return-object v2

    .end local v10    # "view":Landroid/widget/ImageView;
    .restart local v1    # "params":Landroid/view/WindowManager$LayoutParams;
    .restart local v11    # "view":Landroid/widget/ImageView;
    :cond_77
    move-object v2, v13

    .line 4437
    goto :goto_60

    .line 4438
    .end local v1    # "params":Landroid/view/WindowManager$LayoutParams;
    .end local v11    # "view":Landroid/widget/ImageView;
    .restart local v10    # "view":Landroid/widget/ImageView;
    :catch_79
    move-exception v9

    .line 4439
    .local v9, "e":Ljava/lang/Exception;
    :goto_7a
    :try_start_7a
    const-string v2, "WindowManager"

    const-string/jumbo v3, "failed creating back window"

    invoke-static {v2, v3, v9}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_82
    .catchall {:try_start_7a .. :try_end_82} :catchall_99

    .line 4441
    if-eqz v10, :cond_97

    invoke-virtual {v10}, Landroid/widget/ImageView;->getParent()Landroid/view/ViewParent;

    move-result-object v2

    if-nez v2, :cond_97

    if-eqz v12, :cond_97

    .line 4442
    const-string v2, "WindowManager"

    const-string/jumbo v3, "view not successfully added to wm, removing view"

    invoke-static {v2, v3}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 4443
    invoke-virtual {v12, v10}, Landroid/view/WindowManagerImpl;->removeViewImmediate(Landroid/view/View;)V

    :cond_97
    move-object v2, v13

    .line 4446
    goto :goto_76

    .line 4441
    .end local v9    # "e":Ljava/lang/Exception;
    :catchall_99
    move-exception v2

    :goto_9a
    if-eqz v10, :cond_af

    invoke-virtual {v10}, Landroid/widget/ImageView;->getParent()Landroid/view/ViewParent;

    move-result-object v3

    if-nez v3, :cond_af

    if-eqz v12, :cond_af

    .line 4442
    const-string v3, "WindowManager"

    const-string/jumbo v4, "view not successfully added to wm, removing view"

    invoke-static {v3, v4}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 4443
    invoke-virtual {v12, v10}, Landroid/view/WindowManagerImpl;->removeViewImmediate(Landroid/view/View;)V

    :cond_af
    throw v2

    .line 4441
    .end local v10    # "view":Landroid/widget/ImageView;
    .restart local v1    # "params":Landroid/view/WindowManager$LayoutParams;
    .restart local v11    # "view":Landroid/widget/ImageView;
    :catchall_b0
    move-exception v2

    move-object v10, v11

    .end local v11    # "view":Landroid/widget/ImageView;
    .restart local v10    # "view":Landroid/widget/ImageView;
    goto :goto_9a

    .line 4438
    .end local v10    # "view":Landroid/widget/ImageView;
    .restart local v11    # "view":Landroid/widget/ImageView;
    :catch_b3
    move-exception v9

    move-object v10, v11

    .end local v11    # "view":Landroid/widget/ImageView;
    .restart local v10    # "view":Landroid/widget/ImageView;
    goto :goto_7a
.end method

.method public addStartingWindow(Landroid/os/IBinder;Ljava/lang/String;ILandroid/content/res/CompatibilityInfo;Ljava/lang/CharSequence;IIIILcom/samsung/android/multiwindow/MultiWindowStyle;Landroid/graphics/Bitmap;III)Landroid/view/View;
    .registers 35
    .param p1, "appToken"    # Landroid/os/IBinder;
    .param p2, "packageName"    # Ljava/lang/String;
    .param p3, "theme"    # I
    .param p4, "compatInfo"    # Landroid/content/res/CompatibilityInfo;
    .param p5, "nonLocalizedLabel"    # Ljava/lang/CharSequence;
    .param p6, "labelRes"    # I
    .param p7, "icon"    # I
    .param p8, "logo"    # I
    .param p9, "windowFlags"    # I
    .param p10, "mwStyle"    # Lcom/samsung/android/multiwindow/MultiWindowStyle;
    .param p11, "image"    # Landroid/graphics/Bitmap;
    .param p12, "resId"    # I
    .param p13, "displayId"    # I
    .param p14, "originalUserId"    # I

    .prologue
    .line 4209
    if-nez p2, :cond_5

    .line 4210
    const/16 v16, 0x0

    .line 4389
    :cond_4
    :goto_4
    return-object v16

    .line 4217
    :cond_5
    move-object/from16 v0, p0

    iget-object v0, v0, mWinShowWhenLocked:Landroid/view/WindowManagerPolicy$WindowState;

    move-object/from16 v16, v0

    if-eqz v16, :cond_10

    .line 4219
    const/16 v16, 0x0

    goto :goto_4

    .line 4225
    :cond_10
    const/4 v15, 0x0

    .line 4226
    .local v15, "wm":Landroid/view/WindowManagerImpl;
    invoke-static {}, Landroid/hardware/display/DisplayManagerGlobal;->getInstance()Landroid/hardware/display/DisplayManagerGlobal;

    move-result-object v4

    .line 4227
    .local v4, "dm":Landroid/hardware/display/DisplayManagerGlobal;
    move/from16 v0, p13

    invoke-virtual {v4, v0}, Landroid/hardware/display/DisplayManagerGlobal;->getRealDisplay(I)Landroid/view/Display;

    move-result-object v3

    .line 4229
    .local v3, "display":Landroid/view/Display;
    const/4 v13, 0x0

    .line 4232
    .local v13, "view":Landroid/view/View;
    :try_start_1c
    move-object/from16 v0, p0

    iget-object v2, v0, mContext:Landroid/content/Context;

    .line 4236
    .local v2, "context":Landroid/content/Context;
    invoke-virtual {v2}, Landroid/content/Context;->getThemeResId()I
    :try_end_23
    .catch Landroid/view/WindowManager$BadTokenException; {:try_start_1c .. :try_end_23} :catch_178
    .catch Ljava/lang/RuntimeException; {:try_start_1c .. :try_end_23} :catch_280
    .catchall {:try_start_1c .. :try_end_23} :catchall_2d9

    move-result v16

    move/from16 v0, p3

    move/from16 v1, v16

    if-ne v0, v1, :cond_2c

    if-eqz p6, :cond_59

    .line 4239
    :cond_2c
    const/4 v6, 0x0

    .line 4240
    .local v6, "flags":I
    :try_start_2d
    invoke-static/range {p14 .. p14}, Landroid/os/PersonaManager;->isKnoxId(I)Z

    move-result v16

    if-nez v16, :cond_41

    invoke-virtual {v2}, Landroid/content/Context;->getPackageManager()Landroid/content/pm/PackageManager;

    move-result-object v16

    move-object/from16 v0, v16

    move-object/from16 v1, p2

    invoke-virtual {v0, v1}, Landroid/content/pm/PackageManager;->isThemeChanged(Ljava/lang/String;)Z

    move-result v16

    if-eqz v16, :cond_43

    .line 4242
    :cond_41
    or-int/lit8 v6, v6, 0x0

    .line 4245
    :cond_43
    new-instance v16, Landroid/os/UserHandle;

    move-object/from16 v0, v16

    move/from16 v1, p14

    invoke-direct {v0, v1}, Landroid/os/UserHandle;-><init>(I)V

    move-object/from16 v0, p2

    move-object/from16 v1, v16

    invoke-virtual {v2, v0, v6, v1}, Landroid/content/Context;->createPackageContextAsUser(Ljava/lang/String;ILandroid/os/UserHandle;)Landroid/content/Context;

    move-result-object v2

    .line 4247
    move/from16 v0, p3

    invoke-virtual {v2, v0}, Landroid/content/Context;->setTheme(I)V
    :try_end_59
    .catch Landroid/content/pm/PackageManager$NameNotFoundException; {:try_start_2d .. :try_end_59} :catch_2ee
    .catch Landroid/view/WindowManager$BadTokenException; {:try_start_2d .. :try_end_59} :catch_178
    .catch Ljava/lang/RuntimeException; {:try_start_2d .. :try_end_59} :catch_280
    .catchall {:try_start_2d .. :try_end_59} :catchall_2d9

    .line 4253
    .end local v6    # "flags":I
    :cond_59
    :goto_59
    :try_start_59
    new-instance v14, Lcom/android/internal/policy/PhoneWindow;

    invoke-direct {v14, v2}, Lcom/android/internal/policy/PhoneWindow;-><init>(Landroid/content/Context;)V

    .line 4254
    .local v14, "win":Lcom/android/internal/policy/PhoneWindow;
    const/16 v16, 0x1

    move/from16 v0, v16

    invoke-virtual {v14, v0}, Lcom/android/internal/policy/PhoneWindow;->setIsStartingWindow(Z)V

    .line 4255
    invoke-virtual {v14}, Lcom/android/internal/policy/PhoneWindow;->getWindowStyle()Landroid/content/res/TypedArray;

    move-result-object v12

    .line 4256
    .local v12, "ta":Landroid/content/res/TypedArray;
    const/16 v16, 0xc

    const/16 v17, 0x0

    move/from16 v0, v16

    move/from16 v1, v17

    invoke-virtual {v12, v0, v1}, Landroid/content/res/TypedArray;->getBoolean(IZ)Z

    move-result v16

    if-nez v16, :cond_85

    const/16 v16, 0xe

    const/16 v17, 0x0

    move/from16 v0, v16

    move/from16 v1, v17

    invoke-virtual {v12, v0, v1}, Landroid/content/res/TypedArray;->getBoolean(IZ)Z
    :try_end_82
    .catch Landroid/view/WindowManager$BadTokenException; {:try_start_59 .. :try_end_82} :catch_178
    .catch Ljava/lang/RuntimeException; {:try_start_59 .. :try_end_82} :catch_280
    .catchall {:try_start_59 .. :try_end_82} :catchall_2d9

    move-result v16

    if-eqz v16, :cond_9c

    .line 4260
    :cond_85
    const/16 v16, 0x0

    .line 4383
    if-eqz v13, :cond_4

    invoke-virtual {v13}, Landroid/view/View;->getParent()Landroid/view/ViewParent;

    move-result-object v17

    if-nez v17, :cond_4

    .line 4384
    const-string v17, "WindowManager"

    const-string/jumbo v18, "view not successfully added to wm, removing view"

    invoke-static/range {v17 .. v18}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 4385
    invoke-virtual {v15, v13}, Landroid/view/WindowManagerImpl;->removeViewImmediate(Landroid/view/View;)V

    goto/16 :goto_4

    .line 4263
    :cond_9c
    :try_start_9c
    invoke-virtual {v2}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    move-result-object v11

    .line 4264
    .local v11, "r":Landroid/content/res/Resources;
    move/from16 v0, p6

    move-object/from16 v1, p5

    invoke-virtual {v11, v0, v1}, Landroid/content/res/Resources;->getText(ILjava/lang/CharSequence;)Ljava/lang/CharSequence;

    move-result-object v16

    move-object/from16 v0, v16

    invoke-virtual {v14, v0}, Lcom/android/internal/policy/PhoneWindow;->setTitle(Ljava/lang/CharSequence;)V

    .line 4266
    const/16 v16, 0x3

    move/from16 v0, v16

    invoke-virtual {v14, v0}, Lcom/android/internal/policy/PhoneWindow;->setType(I)V

    .line 4269
    move-object/from16 v0, p0

    iget-object v0, v0, mWindowManagerFuncs:Landroid/view/WindowManagerPolicy$WindowManagerFuncs;

    move-object/from16 v16, v0

    invoke-interface/range {v16 .. v16}, Landroid/view/WindowManagerPolicy$WindowManagerFuncs;->getWindowManagerLock()Ljava/lang/Object;

    move-result-object v17

    monitor-enter v17
    :try_end_bf
    .catch Landroid/view/WindowManager$BadTokenException; {:try_start_9c .. :try_end_bf} :catch_178
    .catch Ljava/lang/RuntimeException; {:try_start_9c .. :try_end_bf} :catch_280
    .catchall {:try_start_9c .. :try_end_bf} :catchall_2d9

    .line 4273
    :try_start_bf
    move-object/from16 v0, p0

    iget-boolean v0, v0, mKeyguardHidden:Z

    move/from16 v16, v0

    if-eqz v16, :cond_cb

    .line 4274
    const/high16 v16, 0x80000

    or-int p9, p9, v16

    .line 4276
    :cond_cb
    monitor-exit v17
    :try_end_cc
    .catchall {:try_start_bf .. :try_end_cc} :catchall_175

    .line 4282
    or-int/lit8 v16, p9, 0x10

    or-int/lit8 v16, v16, 0x8

    const/high16 v17, 0x20000

    or-int v16, v16, v17

    or-int/lit8 v17, p9, 0x10

    or-int/lit8 v17, v17, 0x8

    const/high16 v18, 0x20000

    or-int v17, v17, v18

    :try_start_dc
    move/from16 v0, v16

    move/from16 v1, v17

    invoke-virtual {v14, v0, v1}, Lcom/android/internal/policy/PhoneWindow;->setFlags(II)V

    .line 4292
    move/from16 v0, p7

    invoke-virtual {v14, v0}, Lcom/android/internal/policy/PhoneWindow;->setDefaultIcon(I)V

    .line 4293
    move/from16 v0, p8

    invoke-virtual {v14, v0}, Lcom/android/internal/policy/PhoneWindow;->setDefaultLogo(I)V

    .line 4295
    const/16 v16, -0x1

    const/16 v17, -0x1

    move/from16 v0, v16

    move/from16 v1, v17

    invoke-virtual {v14, v0, v1}, Lcom/android/internal/policy/PhoneWindow;->setLayout(II)V

    .line 4298
    invoke-virtual {v14}, Lcom/android/internal/policy/PhoneWindow;->getAttributes()Landroid/view/WindowManager$LayoutParams;

    move-result-object v10

    .line 4299
    .local v10, "params":Landroid/view/WindowManager$LayoutParams;
    move-object/from16 v0, p1

    iput-object v0, v10, Landroid/view/WindowManager$LayoutParams;->token:Landroid/os/IBinder;

    .line 4300
    move-object/from16 v0, p2

    iput-object v0, v10, Landroid/view/WindowManager$LayoutParams;->packageName:Ljava/lang/String;

    .line 4301
    invoke-virtual {v14}, Lcom/android/internal/policy/PhoneWindow;->getWindowStyle()Landroid/content/res/TypedArray;

    move-result-object v16

    const/16 v17, 0x8

    const/16 v18, 0x0

    invoke-virtual/range {v16 .. v18}, Landroid/content/res/TypedArray;->getResourceId(II)I

    move-result v16

    move/from16 v0, v16

    iput v0, v10, Landroid/view/WindowManager$LayoutParams;->windowAnimations:I

    .line 4303
    iget v0, v10, Landroid/view/WindowManager$LayoutParams;->privateFlags:I

    move/from16 v16, v0

    or-int/lit8 v16, v16, 0x1

    move/from16 v0, v16

    iput v0, v10, Landroid/view/WindowManager$LayoutParams;->privateFlags:I

    .line 4305
    iget v0, v10, Landroid/view/WindowManager$LayoutParams;->privateFlags:I

    move/from16 v16, v0

    or-int/lit8 v16, v16, 0x10

    move/from16 v0, v16

    iput v0, v10, Landroid/view/WindowManager$LayoutParams;->privateFlags:I

    .line 4307
    invoke-virtual/range {p4 .. p4}, Landroid/content/res/CompatibilityInfo;->supportsScreen()Z

    move-result v16

    if-nez v16, :cond_13c

    .line 4308
    iget v0, v10, Landroid/view/WindowManager$LayoutParams;->privateFlags:I

    move/from16 v16, v0

    move/from16 v0, v16

    or-int/lit16 v0, v0, 0x80

    move/from16 v16, v0

    move/from16 v0, v16

    iput v0, v10, Landroid/view/WindowManager$LayoutParams;->privateFlags:I

    .line 4311
    :cond_13c
    new-instance v16, Ljava/lang/StringBuilder;

    invoke-direct/range {v16 .. v16}, Ljava/lang/StringBuilder;-><init>()V

    const-string v17, "Starting "

    invoke-virtual/range {v16 .. v17}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v16

    move-object/from16 v0, v16

    move-object/from16 v1, p2

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v16

    invoke-virtual/range {v16 .. v16}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v16

    move-object/from16 v0, v16

    invoke-virtual {v10, v0}, Landroid/view/WindowManager$LayoutParams;->setTitle(Ljava/lang/CharSequence;)V

    .line 4315
    invoke-virtual/range {p10 .. p10}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->isCascade()Z
    :try_end_15b
    .catch Landroid/view/WindowManager$BadTokenException; {:try_start_dc .. :try_end_15b} :catch_178
    .catch Ljava/lang/RuntimeException; {:try_start_dc .. :try_end_15b} :catch_280
    .catchall {:try_start_dc .. :try_end_15b} :catchall_2d9

    move-result v16

    if-eqz v16, :cond_1b4

    .line 4316
    const/16 v16, 0x0

    .line 4383
    if-eqz v13, :cond_4

    invoke-virtual {v13}, Landroid/view/View;->getParent()Landroid/view/ViewParent;

    move-result-object v17

    if-nez v17, :cond_4

    .line 4384
    const-string v17, "WindowManager"

    const-string/jumbo v18, "view not successfully added to wm, removing view"

    invoke-static/range {v17 .. v18}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 4385
    invoke-virtual {v15, v13}, Landroid/view/WindowManagerImpl;->removeViewImmediate(Landroid/view/View;)V

    goto/16 :goto_4

    .line 4276
    .end local v10    # "params":Landroid/view/WindowManager$LayoutParams;
    :catchall_175
    move-exception v16

    :try_start_176
    monitor-exit v17
    :try_end_177
    .catchall {:try_start_176 .. :try_end_177} :catchall_175

    :try_start_177
    throw v16
    :try_end_178
    .catch Landroid/view/WindowManager$BadTokenException; {:try_start_177 .. :try_end_178} :catch_178
    .catch Ljava/lang/RuntimeException; {:try_start_177 .. :try_end_178} :catch_280
    .catchall {:try_start_177 .. :try_end_178} :catchall_2d9

    .line 4373
    .end local v2    # "context":Landroid/content/Context;
    .end local v11    # "r":Landroid/content/res/Resources;
    .end local v12    # "ta":Landroid/content/res/TypedArray;
    .end local v14    # "win":Lcom/android/internal/policy/PhoneWindow;
    :catch_178
    move-exception v5

    .line 4375
    .local v5, "e":Landroid/view/WindowManager$BadTokenException;
    :try_start_179
    const-string v16, "WindowManager"

    new-instance v17, Ljava/lang/StringBuilder;

    invoke-direct/range {v17 .. v17}, Ljava/lang/StringBuilder;-><init>()V

    move-object/from16 v0, v17

    move-object/from16 v1, p1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v17

    const-string v18, " already running, starting window not displayed. "

    invoke-virtual/range {v17 .. v18}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v17

    invoke-virtual {v5}, Landroid/view/WindowManager$BadTokenException;->getMessage()Ljava/lang/String;

    move-result-object v18

    invoke-virtual/range {v17 .. v18}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v17

    invoke-virtual/range {v17 .. v17}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v17

    invoke-static/range {v16 .. v17}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_19d
    .catchall {:try_start_179 .. :try_end_19d} :catchall_2d9

    .line 4383
    if-eqz v13, :cond_1b0

    invoke-virtual {v13}, Landroid/view/View;->getParent()Landroid/view/ViewParent;

    move-result-object v16

    if-nez v16, :cond_1b0

    .line 4384
    const-string v16, "WindowManager"

    const-string/jumbo v17, "view not successfully added to wm, removing view"

    invoke-static/range {v16 .. v17}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 4385
    invoke-virtual {v15, v13}, Landroid/view/WindowManagerImpl;->removeViewImmediate(Landroid/view/View;)V

    .line 4389
    .end local v5    # "e":Landroid/view/WindowManager$BadTokenException;
    :cond_1b0
    :goto_1b0
    const/16 v16, 0x0

    goto/16 :goto_4

    .line 4323
    .restart local v2    # "context":Landroid/content/Context;
    .restart local v10    # "params":Landroid/view/WindowManager$LayoutParams;
    .restart local v11    # "r":Landroid/content/res/Resources;
    .restart local v12    # "ta":Landroid/content/res/TypedArray;
    .restart local v14    # "win":Lcom/android/internal/policy/PhoneWindow;
    :cond_1b4
    :try_start_1b4
    const-string/jumbo v16, "window"

    move-object/from16 v0, v16

    invoke-virtual {v2, v0}, Landroid/content/Context;->getSystemService(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v16

    move-object/from16 v0, v16

    check-cast v0, Landroid/view/WindowManagerImpl;

    move-object v15, v0

    .line 4324
    if-eqz p13, :cond_1c8

    .line 4325
    invoke-virtual {v15, v3}, Landroid/view/WindowManagerImpl;->createPresentationWindowManager(Landroid/view/Display;)Landroid/view/WindowManagerImpl;

    move-result-object v15

    .line 4328
    :cond_1c8
    invoke-virtual {v14}, Lcom/android/internal/policy/PhoneWindow;->getDecorView()Landroid/view/View;

    move-result-object v13

    .line 4332
    move-object/from16 v0, p0

    iget-object v0, v0, mCoverState:Lcom/samsung/android/cover/CoverState;

    move-object/from16 v16, v0

    if-eqz v16, :cond_1e2

    move-object/from16 v0, p0

    iget-object v0, v0, mCoverState:Lcom/samsung/android/cover/CoverState;

    move-object/from16 v16, v0

    move-object/from16 v0, v16

    iget-boolean v0, v0, Lcom/samsung/android/cover/CoverState;->switchState:Z

    move/from16 v16, v0
    :try_end_1e0
    .catch Landroid/view/WindowManager$BadTokenException; {:try_start_1b4 .. :try_end_1e0} :catch_178
    .catch Ljava/lang/RuntimeException; {:try_start_1b4 .. :try_end_1e0} :catch_280
    .catchall {:try_start_1b4 .. :try_end_1e0} :catchall_2d9

    if-eqz v16, :cond_221

    .line 4334
    :cond_1e2
    :try_start_1e2
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v8

    .line 4335
    .local v8, "now":J
    const/4 v7, 0x0

    .line 4336
    .local v7, "imageView":Landroid/widget/ImageView;
    if-eqz p11, :cond_23e

    move-object/from16 v0, p0

    iget-boolean v0, v0, mMobileKeyboardEnabled:Z

    move/from16 v16, v0

    if-nez v16, :cond_23e

    .line 4337
    new-instance v7, Landroid/widget/ImageView;

    .end local v7    # "imageView":Landroid/widget/ImageView;
    invoke-direct {v7, v2}, Landroid/widget/ImageView;-><init>(Landroid/content/Context;)V

    .line 4338
    .restart local v7    # "imageView":Landroid/widget/ImageView;
    sget-object v16, Landroid/widget/ImageView$ScaleType;->CENTER_CROP:Landroid/widget/ImageView$ScaleType;

    move-object/from16 v0, v16

    invoke-virtual {v7, v0}, Landroid/widget/ImageView;->setScaleType(Landroid/widget/ImageView$ScaleType;)V

    .line 4339
    move-object/from16 v0, p11

    invoke-virtual {v7, v0}, Landroid/widget/ImageView;->setImageBitmap(Landroid/graphics/Bitmap;)V

    .line 4340
    move-object v13, v7

    .line 4341
    const-string v16, "WindowManager"

    new-instance v17, Ljava/lang/StringBuilder;

    invoke-direct/range {v17 .. v17}, Ljava/lang/StringBuilder;-><init>()V

    const-string v18, "CustomStartingWindow for IMAGE "

    invoke-virtual/range {v17 .. v18}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v17

    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v18

    sub-long v18, v18, v8

    invoke-virtual/range {v17 .. v19}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    move-result-object v17

    invoke-virtual/range {v17 .. v17}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v17

    invoke-static/range {v16 .. v17}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_221
    .catch Landroid/view/InflateException; {:try_start_1e2 .. :try_end_221} :catch_264
    .catch Landroid/view/WindowManager$BadTokenException; {:try_start_1e2 .. :try_end_221} :catch_178
    .catch Ljava/lang/RuntimeException; {:try_start_1e2 .. :try_end_221} :catch_280
    .catchall {:try_start_1e2 .. :try_end_221} :catchall_2d9

    .line 4353
    .end local v7    # "imageView":Landroid/widget/ImageView;
    .end local v8    # "now":J
    :cond_221
    :goto_221
    :try_start_221
    invoke-virtual {v14}, Lcom/android/internal/policy/PhoneWindow;->isFloating()Z
    :try_end_224
    .catch Landroid/view/WindowManager$BadTokenException; {:try_start_221 .. :try_end_224} :catch_178
    .catch Ljava/lang/RuntimeException; {:try_start_221 .. :try_end_224} :catch_280
    .catchall {:try_start_221 .. :try_end_224} :catchall_2d9

    move-result v16

    if-eqz v16, :cond_2b6

    .line 4360
    const/16 v16, 0x0

    .line 4383
    if-eqz v13, :cond_4

    invoke-virtual {v13}, Landroid/view/View;->getParent()Landroid/view/ViewParent;

    move-result-object v17

    if-nez v17, :cond_4

    .line 4384
    const-string v17, "WindowManager"

    const-string/jumbo v18, "view not successfully added to wm, removing view"

    invoke-static/range {v17 .. v18}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 4385
    invoke-virtual {v15, v13}, Landroid/view/WindowManagerImpl;->removeViewImmediate(Landroid/view/View;)V

    goto/16 :goto_4

    .line 4342
    .restart local v7    # "imageView":Landroid/widget/ImageView;
    .restart local v8    # "now":J
    :cond_23e
    if-lez p12, :cond_221

    .line 4343
    :try_start_240
    move/from16 v0, p12

    invoke-virtual {v14, v0}, Lcom/android/internal/policy/PhoneWindow;->setContentView(I)V

    .line 4344
    const-string v16, "WindowManager"

    new-instance v17, Ljava/lang/StringBuilder;

    invoke-direct/range {v17 .. v17}, Ljava/lang/StringBuilder;-><init>()V

    const-string v18, "CustomStartingWindow for LAYOUT "

    invoke-virtual/range {v17 .. v18}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v17

    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v18

    sub-long v18, v18, v8

    invoke-virtual/range {v17 .. v19}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    move-result-object v17

    invoke-virtual/range {v17 .. v17}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v17

    invoke-static/range {v16 .. v17}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_263
    .catch Landroid/view/InflateException; {:try_start_240 .. :try_end_263} :catch_264
    .catch Landroid/view/WindowManager$BadTokenException; {:try_start_240 .. :try_end_263} :catch_178
    .catch Ljava/lang/RuntimeException; {:try_start_240 .. :try_end_263} :catch_280
    .catchall {:try_start_240 .. :try_end_263} :catchall_2d9

    goto :goto_221

    .line 4346
    .end local v7    # "imageView":Landroid/widget/ImageView;
    .end local v8    # "now":J
    :catch_264
    move-exception v5

    .line 4347
    .local v5, "e":Landroid/view/InflateException;
    :try_start_265
    const-string v16, "WindowManager"

    new-instance v17, Ljava/lang/StringBuilder;

    invoke-direct/range {v17 .. v17}, Ljava/lang/StringBuilder;-><init>()V

    const-string v18, "CustomStartingWindow just show original starting window. Due to : "

    invoke-virtual/range {v17 .. v18}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v17

    move-object/from16 v0, v17

    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v17

    invoke-virtual/range {v17 .. v17}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v17

    invoke-static/range {v16 .. v17}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_27f
    .catch Landroid/view/WindowManager$BadTokenException; {:try_start_265 .. :try_end_27f} :catch_178
    .catch Ljava/lang/RuntimeException; {:try_start_265 .. :try_end_27f} :catch_280
    .catchall {:try_start_265 .. :try_end_27f} :catchall_2d9

    goto :goto_221

    .line 4377
    .end local v2    # "context":Landroid/content/Context;
    .end local v5    # "e":Landroid/view/InflateException;
    .end local v10    # "params":Landroid/view/WindowManager$LayoutParams;
    .end local v11    # "r":Landroid/content/res/Resources;
    .end local v12    # "ta":Landroid/content/res/TypedArray;
    .end local v14    # "win":Lcom/android/internal/policy/PhoneWindow;
    :catch_280
    move-exception v5

    .line 4381
    .local v5, "e":Ljava/lang/RuntimeException;
    :try_start_281
    const-string v16, "WindowManager"

    new-instance v17, Ljava/lang/StringBuilder;

    invoke-direct/range {v17 .. v17}, Ljava/lang/StringBuilder;-><init>()V

    move-object/from16 v0, v17

    move-object/from16 v1, p1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v17

    const-string v18, " failed creating starting window"

    invoke-virtual/range {v17 .. v18}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v17

    invoke-virtual/range {v17 .. v17}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v17

    move-object/from16 v0, v16

    move-object/from16 v1, v17

    invoke-static {v0, v1, v5}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_2a1
    .catchall {:try_start_281 .. :try_end_2a1} :catchall_2d9

    .line 4383
    if-eqz v13, :cond_1b0

    invoke-virtual {v13}, Landroid/view/View;->getParent()Landroid/view/ViewParent;

    move-result-object v16

    if-nez v16, :cond_1b0

    .line 4384
    const-string v16, "WindowManager"

    const-string/jumbo v17, "view not successfully added to wm, removing view"

    invoke-static/range {v16 .. v17}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 4385
    invoke-virtual {v15, v13}, Landroid/view/WindowManagerImpl;->removeViewImmediate(Landroid/view/View;)V

    goto/16 :goto_1b0

    .line 4368
    .end local v5    # "e":Ljava/lang/RuntimeException;
    .restart local v2    # "context":Landroid/content/Context;
    .restart local v10    # "params":Landroid/view/WindowManager$LayoutParams;
    .restart local v11    # "r":Landroid/content/res/Resources;
    .restart local v12    # "ta":Landroid/content/res/TypedArray;
    .restart local v14    # "win":Lcom/android/internal/policy/PhoneWindow;
    :cond_2b6
    :try_start_2b6
    invoke-virtual {v15, v13, v10}, Landroid/view/WindowManagerImpl;->addView(Landroid/view/View;Landroid/view/ViewGroup$LayoutParams;)V

    .line 4372
    invoke-virtual {v13}, Landroid/view/View;->getParent()Landroid/view/ViewParent;
    :try_end_2bc
    .catch Landroid/view/WindowManager$BadTokenException; {:try_start_2b6 .. :try_end_2bc} :catch_178
    .catch Ljava/lang/RuntimeException; {:try_start_2b6 .. :try_end_2bc} :catch_280
    .catchall {:try_start_2b6 .. :try_end_2bc} :catchall_2d9

    move-result-object v16

    if-eqz v16, :cond_2d6

    move-object/from16 v16, v13

    .line 4383
    :goto_2c1
    if-eqz v13, :cond_4

    invoke-virtual {v13}, Landroid/view/View;->getParent()Landroid/view/ViewParent;

    move-result-object v17

    if-nez v17, :cond_4

    .line 4384
    const-string v17, "WindowManager"

    const-string/jumbo v18, "view not successfully added to wm, removing view"

    invoke-static/range {v17 .. v18}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 4385
    invoke-virtual {v15, v13}, Landroid/view/WindowManagerImpl;->removeViewImmediate(Landroid/view/View;)V

    goto/16 :goto_4

    .line 4372
    :cond_2d6
    const/16 v16, 0x0

    goto :goto_2c1

    .line 4383
    .end local v2    # "context":Landroid/content/Context;
    .end local v10    # "params":Landroid/view/WindowManager$LayoutParams;
    .end local v11    # "r":Landroid/content/res/Resources;
    .end local v12    # "ta":Landroid/content/res/TypedArray;
    .end local v14    # "win":Lcom/android/internal/policy/PhoneWindow;
    :catchall_2d9
    move-exception v16

    if-eqz v13, :cond_2ed

    invoke-virtual {v13}, Landroid/view/View;->getParent()Landroid/view/ViewParent;

    move-result-object v17

    if-nez v17, :cond_2ed

    .line 4384
    const-string v17, "WindowManager"

    const-string/jumbo v18, "view not successfully added to wm, removing view"

    invoke-static/range {v17 .. v18}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 4385
    invoke-virtual {v15, v13}, Landroid/view/WindowManagerImpl;->removeViewImmediate(Landroid/view/View;)V

    :cond_2ed
    throw v16

    .line 4248
    .restart local v2    # "context":Landroid/content/Context;
    .restart local v6    # "flags":I
    :catch_2ee
    move-exception v16

    goto/16 :goto_59
.end method

.method public adjustConfigurationLw(Landroid/content/res/Configuration;II)V
    .registers 8
    .param p1, "config"    # Landroid/content/res/Configuration;
    .param p2, "keyboardPresence"    # I
    .param p3, "navigationPresence"    # I

    .prologue
    const/4 v2, 0x0

    const/4 v3, 0x2

    const/4 v1, 0x1

    .line 3780
    and-int/lit8 v0, p2, 0x1

    if-eqz v0, :cond_48

    move v0, v1

    :goto_8
    iput-boolean v0, p0, mHaveBuiltInKeyboard:Z

    .line 3782
    invoke-direct {p0}, readConfigurationDependentBehaviors()V

    .line 3783
    invoke-virtual {p0}, readLidState()V

    .line 3784
    invoke-direct {p0}, applyLidSwitchState()V

    .line 3786
    iget v0, p1, Landroid/content/res/Configuration;->keyboard:I

    if-eq v0, v1, :cond_29

    iget-object v0, p0, mContext:Landroid/content/Context;

    invoke-static {v0}, Lcom/android/server/policy/sec/SamsungPolicyProperties;->FolderTypeFeature(Landroid/content/Context;)I

    move-result v0

    if-eq v0, v1, :cond_31

    if-ne p2, v1, :cond_31

    iget v0, p0, mLidKeyboardAccessibility:I

    invoke-direct {p0, v0}, isHidden(I)Z

    move-result v0

    if-eqz v0, :cond_31

    .line 3790
    :cond_29
    iput v3, p1, Landroid/content/res/Configuration;->hardKeyboardHidden:I

    .line 3791
    iget-boolean v0, p0, mHasSoftInput:Z

    if-nez v0, :cond_31

    .line 3792
    iput v3, p1, Landroid/content/res/Configuration;->keyboardHidden:I

    .line 3796
    :cond_31
    iget v0, p1, Landroid/content/res/Configuration;->navigation:I

    if-eq v0, v1, :cond_3f

    if-ne p3, v1, :cond_41

    iget v0, p0, mLidNavigationAccessibility:I

    invoke-direct {p0, v0}, isHidden(I)Z

    move-result v0

    if-eqz v0, :cond_41

    .line 3799
    :cond_3f
    iput v3, p1, Landroid/content/res/Configuration;->navigationHidden:I

    .line 3804
    :cond_41
    iget-boolean v0, p0, mMobileKeyboardEnabled:Z

    if-eqz v0, :cond_4a

    .line 3805
    iput v1, p1, Landroid/content/res/Configuration;->mobileKeyboardCovered:I

    .line 3811
    :goto_47
    return-void

    :cond_48
    move v0, v2

    .line 3780
    goto :goto_8

    .line 3807
    :cond_4a
    iput v2, p1, Landroid/content/res/Configuration;->mobileKeyboardCovered:I

    goto :goto_47
.end method

.method public adjustSystemUiVisibilityLw(I)I
    .registers 3
    .param p1, "visibility"    # I

    .prologue
    .line 6143
    const/4 v0, 0x0

    invoke-virtual {p0, p1, v0}, adjustSystemUiVisibilityLw(II)I

    move-result v0

    return v0
.end method

.method public adjustSystemUiVisibilityLw(II)I
    .registers 7
    .param p1, "visibility"    # I
    .param p2, "displayId"    # I

    .prologue
    .line 6154
    iget v0, p0, mLastSystemUiFlags:I

    .line 6155
    .local v0, "mLastSystemUiFlags":I
    iget v1, p0, mResettingSystemUiFlags:I

    .line 6158
    .local v1, "mResettingSystemUiFlags":I
    iget-object v2, p0, mStatusBarController:Lcom/android/server/policy/StatusBarController;

    invoke-virtual {v2, v0, p1, p2}, Lcom/android/server/policy/StatusBarController;->adjustSystemUiVisibilityLw(III)V

    .line 6159
    iget-object v2, p0, mNavigationBarController:Lcom/android/server/policy/BarController;

    invoke-virtual {v2, v0, p1, p2}, Lcom/android/server/policy/BarController;->adjustSystemUiVisibilityLw(III)V

    .line 6160
    and-int/lit16 v2, p1, 0x4000

    if-lez v2, :cond_21

    const/4 v2, 0x1

    :goto_13
    iput-boolean v2, p0, mRecentsVisible:Z

    .line 6164
    and-int/2addr v1, p1

    .line 6171
    iput v1, p0, mResettingSystemUiFlags:I

    .line 6177
    xor-int/lit8 v2, v1, -0x1

    and-int/2addr v2, p1

    iget v3, p0, mForceClearedSystemUiFlags:I

    xor-int/lit8 v3, v3, -0x1

    and-int/2addr v2, v3

    return v2

    .line 6160
    :cond_21
    const/4 v2, 0x0

    goto :goto_13
.end method

.method public adjustWindowParamsLw(Landroid/view/WindowManager$LayoutParams;)V
    .registers 3
    .param p1, "attrs"    # Landroid/view/WindowManager$LayoutParams;

    .prologue
    .line 3702
    const/4 v0, 0x0

    invoke-virtual {p0, p1, v0}, adjustWindowParamsLw(Landroid/view/WindowManager$LayoutParams;I)V

    .line 3703
    return-void
.end method

.method public adjustWindowParamsLw(Landroid/view/WindowManager$LayoutParams;I)V
    .registers 7
    .param p1, "attrs"    # Landroid/view/WindowManager$LayoutParams;
    .param p2, "displayId"    # I

    .prologue
    const v3, -0x10000001

    .line 3707
    iget v1, p1, Landroid/view/WindowManager$LayoutParams;->type:I

    sparse-switch v1, :sswitch_data_5c

    .line 3741
    :cond_8
    :goto_8
    iget v1, p1, Landroid/view/WindowManager$LayoutParams;->type:I

    const/16 v2, 0x7d0

    if-eq v1, v2, :cond_19

    .line 3743
    iget v1, p1, Landroid/view/WindowManager$LayoutParams;->privateFlags:I

    and-int/lit16 v1, v1, -0x401

    iput v1, p1, Landroid/view/WindowManager$LayoutParams;->privateFlags:I

    .line 3746
    iget v1, p1, Landroid/view/WindowManager$LayoutParams;->samsungFlags:I

    and-int/2addr v1, v3

    iput v1, p1, Landroid/view/WindowManager$LayoutParams;->samsungFlags:I

    .line 3751
    :cond_19
    iget v1, p1, Landroid/view/WindowManager$LayoutParams;->flags:I

    const/high16 v2, -0x80000000

    and-int/2addr v1, v2

    if-eqz v1, :cond_26

    .line 3752
    iget v1, p1, Landroid/view/WindowManager$LayoutParams;->subtreeSystemUiVisibility:I

    or-int/lit16 v1, v1, 0x600

    iput v1, p1, Landroid/view/WindowManager$LayoutParams;->subtreeSystemUiVisibility:I

    .line 3755
    :cond_26
    return-void

    .line 3711
    :sswitch_27
    iget v1, p1, Landroid/view/WindowManager$LayoutParams;->flags:I

    or-int/lit8 v1, v1, 0x18

    iput v1, p1, Landroid/view/WindowManager$LayoutParams;->flags:I

    .line 3713
    iget v1, p1, Landroid/view/WindowManager$LayoutParams;->flags:I

    const v2, -0x40001

    and-int/2addr v1, v2

    iput v1, p1, Landroid/view/WindowManager$LayoutParams;->flags:I

    goto :goto_8

    .line 3725
    :sswitch_36
    iget-boolean v0, p0, mKeyguardHidden:Z

    .line 3728
    .local v0, "mKeyguardHidden":Z
    if-eqz v0, :cond_52

    invoke-virtual {p0}, isKeyguardSecure()Z

    move-result v1

    if-eqz v1, :cond_44

    iget-boolean v1, p0, mHideLockScreen:Z

    if-eqz v1, :cond_52

    .line 3730
    :cond_44
    iget v1, p1, Landroid/view/WindowManager$LayoutParams;->flags:I

    const v2, -0x100001

    and-int/2addr v1, v2

    iput v1, p1, Landroid/view/WindowManager$LayoutParams;->flags:I

    .line 3731
    iget v1, p1, Landroid/view/WindowManager$LayoutParams;->privateFlags:I

    and-int/lit16 v1, v1, -0x401

    iput v1, p1, Landroid/view/WindowManager$LayoutParams;->privateFlags:I

    .line 3734
    :cond_52
    iget v1, p0, mHideSViewCover:I

    if-eqz v1, :cond_8

    .line 3735
    iget v1, p1, Landroid/view/WindowManager$LayoutParams;->samsungFlags:I

    and-int/2addr v1, v3

    iput v1, p1, Landroid/view/WindowManager$LayoutParams;->samsungFlags:I

    goto :goto_8

    .line 3707
    :sswitch_data_5c
    .sparse-switch
        0x7d0 -> :sswitch_36
        0x7d6 -> :sswitch_27
        0x7df -> :sswitch_27
    .end sparse-switch
.end method

.method public allowAppAnimationsLw()Z
    .registers 2

    .prologue
    .line 8617
    invoke-virtual {p0}, isStatusBarKeyguard()Z

    move-result v0

    if-nez v0, :cond_10

    iget-boolean v0, p0, mShowingDream:Z

    if-nez v0, :cond_10

    invoke-direct {p0}, isKnoxKeyguardShownForKioskMode()Z

    move-result v0

    if-eqz v0, :cond_12

    .line 8623
    :cond_10
    const/4 v0, 0x0

    .line 8625
    :goto_11
    return v0

    :cond_12
    const/4 v0, 0x1

    goto :goto_11
.end method

.method public applyPostLayoutPolicyLw(Landroid/view/WindowManagerPolicy$WindowState;Landroid/view/WindowManager$LayoutParams;Landroid/view/WindowManagerPolicy$WindowState;)V
    .registers 26
    .param p1, "win"    # Landroid/view/WindowManagerPolicy$WindowState;
    .param p2, "attrs"    # Landroid/view/WindowManager$LayoutParams;
    .param p3, "attached"    # Landroid/view/WindowManagerPolicy$WindowState;

    .prologue
    .line 7613
    invoke-interface/range {p1 .. p1}, Landroid/view/WindowManagerPolicy$WindowState;->getDisplayId()I

    move-result v9

    .line 7623
    .local v9, "displayId":I
    move-object/from16 v0, p0

    iget-object v13, v0, mTopFullscreenOpaqueWindowState:Landroid/view/WindowManagerPolicy$WindowState;

    .line 7624
    .local v13, "mTopFullscreenOpaqueWindowState":Landroid/view/WindowManagerPolicy$WindowState;
    move-object/from16 v0, p0

    iget-object v12, v0, mTopFullscreenOpaqueOrDimmingWindowState:Landroid/view/WindowManagerPolicy$WindowState;

    .line 7625
    .local v12, "mTopFullscreenOpaqueOrDimmingWindowState":Landroid/view/WindowManagerPolicy$WindowState;
    move-object/from16 v0, p0

    iget-object v14, v0, mWinShowWhenLocked:Landroid/view/WindowManagerPolicy$WindowState;

    .line 7632
    .local v14, "mWinShowWhenLocked":Landroid/view/WindowManagerPolicy$WindowState;
    move-object/from16 v0, p0

    iget-object v0, v0, mMultiPhoneWindowManager:Lcom/android/server/policy/multiwindow/MultiPhoneWindowManager;

    move-object/from16 v17, v0

    move-object/from16 v0, v17

    move-object/from16 v1, p1

    move-object/from16 v2, p2

    invoke-virtual {v0, v1, v2}, Lcom/android/server/policy/multiwindow/MultiPhoneWindowManager;->applyPostLayoutPolicyLw(Landroid/view/WindowManagerPolicy$WindowState;Landroid/view/WindowManager$LayoutParams;)V

    .line 7636
    sget-boolean v17, DEBUG_LAYOUT:Z

    if-eqz v17, :cond_4d

    const-string v17, "WindowManager"

    new-instance v18, Ljava/lang/StringBuilder;

    invoke-direct/range {v18 .. v18}, Ljava/lang/StringBuilder;-><init>()V

    const-string v19, "Win "

    invoke-virtual/range {v18 .. v19}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v18

    move-object/from16 v0, v18

    move-object/from16 v1, p1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v18

    const-string v19, ": isVisibleOrBehindKeyguardLw="

    invoke-virtual/range {v18 .. v19}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v18

    invoke-interface/range {p1 .. p1}, Landroid/view/WindowManagerPolicy$WindowState;->isVisibleOrBehindKeyguardLw()Z

    move-result v19

    invoke-virtual/range {v18 .. v19}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v18

    invoke-virtual/range {v18 .. v18}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v18

    invoke-static/range {v17 .. v18}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 7638
    :cond_4d
    invoke-static/range {p1 .. p2}, Lcom/android/server/policy/PolicyControl;->getWindowFlags(Landroid/view/WindowManagerPolicy$WindowState;Landroid/view/WindowManager$LayoutParams;)I

    move-result v10

    .line 7639
    .local v10, "fl":I
    if-nez v13, :cond_87

    invoke-interface/range {p1 .. p1}, Landroid/view/WindowManagerPolicy$WindowState;->isVisibleLw()Z

    move-result v17

    if-eqz v17, :cond_87

    move-object/from16 v0, p2

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    move/from16 v17, v0

    const/16 v18, 0x7db

    move/from16 v0, v17

    move/from16 v1, v18

    if-eq v0, v1, :cond_75

    move-object/from16 v0, p2

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    move/from16 v17, v0

    const/16 v18, 0x8e8

    move/from16 v0, v17

    move/from16 v1, v18

    if-ne v0, v1, :cond_87

    .line 7641
    :cond_75
    const/16 v17, 0x1

    move/from16 v0, v17

    move-object/from16 v1, p0

    iput-boolean v0, v1, mForcingShowNavBar:Z

    .line 7642
    invoke-interface/range {p1 .. p1}, Landroid/view/WindowManagerPolicy$WindowState;->getSurfaceLayer()I

    move-result v17

    move/from16 v0, v17

    move-object/from16 v1, p0

    iput v0, v1, mForcingShowNavBarLayer:I

    .line 7644
    :cond_87
    move-object/from16 v0, p2

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    move/from16 v17, v0

    const/16 v18, 0x7d0

    move/from16 v0, v17

    move/from16 v1, v18

    if-ne v0, v1, :cond_ea

    .line 7645
    move-object/from16 v0, p2

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->privateFlags:I

    move/from16 v17, v0

    move/from16 v0, v17

    and-int/lit16 v0, v0, 0x400

    move/from16 v17, v0

    if-eqz v17, :cond_d4

    .line 7647
    move-object/from16 v0, p0

    iget-boolean v0, v0, mForceStatusBarFromKeyguard:Z

    move/from16 v17, v0

    if-nez v17, :cond_c4

    move-object/from16 v0, p0

    iget-object v0, v0, mStatusBarController:Lcom/android/server/policy/StatusBarController;

    move-object/from16 v17, v0

    move-object/from16 v0, v17

    invoke-virtual {v0, v9}, Lcom/android/server/policy/StatusBarController;->isTransientHiding(I)Z

    move-result v17

    if-eqz v17, :cond_c4

    .line 7648
    move-object/from16 v0, p0

    iget-object v0, v0, mStatusBarController:Lcom/android/server/policy/StatusBarController;

    move-object/from16 v17, v0

    move-object/from16 v0, v17

    invoke-virtual {v0, v9}, Lcom/android/server/policy/StatusBarController;->resetTransient(I)V

    .line 7651
    :cond_c4
    const/16 v17, 0x1

    move/from16 v0, v17

    move-object/from16 v1, p0

    iput-boolean v0, v1, mForceStatusBarFromKeyguard:Z

    .line 7652
    const/16 v17, 0x1

    move/from16 v0, v17

    move-object/from16 v1, p0

    iput-boolean v0, v1, mShowingLockscreen:Z

    .line 7654
    :cond_d4
    move-object/from16 v0, p2

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->privateFlags:I

    move/from16 v17, v0

    move/from16 v0, v17

    and-int/lit16 v0, v0, 0x1000

    move/from16 v17, v0

    if-eqz v17, :cond_ea

    .line 7655
    const/16 v17, 0x1

    move/from16 v0, v17

    move-object/from16 v1, p0

    iput-boolean v0, v1, mForceStatusBarTransparent:Z

    .line 7661
    :cond_ea
    move-object/from16 v0, p2

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    move/from16 v17, v0

    const/16 v18, 0x7d0

    move/from16 v0, v17

    move/from16 v1, v18

    if-ne v0, v1, :cond_4bf

    move-object/from16 v0, p2

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->samsungFlags:I

    move/from16 v17, v0

    const/high16 v18, 0x10000000

    and-int v17, v17, v18

    if-eqz v17, :cond_4bf

    const/4 v11, 0x1

    .line 7663
    .local v11, "isStatusBarAndSViewCover":Z
    :goto_105
    move-object/from16 v0, p0

    iget v0, v0, mHideSViewCover:I

    move/from16 v17, v0

    if-nez v17, :cond_4c2

    invoke-virtual/range {p0 .. p0}, isForceHideBySViewCover()Z

    move-result v17

    if-eqz v17, :cond_4c2

    const/4 v15, 0x1

    .line 7665
    .local v15, "needShowSViewCover":Z
    :goto_114
    if-nez v11, :cond_118

    if-eqz v15, :cond_120

    .line 7666
    :cond_118
    const/16 v17, 0x1

    move/from16 v0, v17

    move-object/from16 v1, p0

    iput-boolean v0, v1, mForceStatusBarFromSViewCover:Z

    .line 7671
    :cond_120
    move-object/from16 v0, p2

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    move/from16 v17, v0

    const/16 v18, 0x1

    move/from16 v0, v17

    move/from16 v1, v18

    if-lt v0, v1, :cond_4c5

    move-object/from16 v0, p2

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    move/from16 v17, v0

    const/16 v18, 0x7d0

    move/from16 v0, v17

    move/from16 v1, v18

    if-ge v0, v1, :cond_4c5

    const/4 v5, 0x1

    .line 7673
    .local v5, "appWindow":Z
    :goto_13d
    const/high16 v17, 0x80000

    and-int v17, v17, v10

    if-eqz v17, :cond_4c8

    const/16 v16, 0x1

    .line 7674
    .local v16, "showWhenLocked":Z
    :goto_145
    const/high16 v17, 0x400000

    and-int v17, v17, v10

    if-eqz v17, :cond_4cc

    const/4 v8, 0x1

    .line 7676
    .local v8, "dismissKeyguard":Z
    :goto_14c
    if-nez v13, :cond_5d6

    invoke-interface/range {p1 .. p1}, Landroid/view/WindowManagerPolicy$WindowState;->isVisibleOrBehindKeyguardLw()Z

    move-result v17

    if-eqz v17, :cond_5d6

    invoke-interface/range {p1 .. p1}, Landroid/view/WindowManagerPolicy$WindowState;->isGoneForLayoutLw()Z

    move-result v17

    if-nez v17, :cond_5d6

    invoke-interface/range {p1 .. p1}, Landroid/view/WindowManagerPolicy$WindowState;->getMultiWindowStyleLw()Lcom/samsung/android/multiwindow/MultiWindowStyle;

    move-result-object v17

    invoke-virtual/range {v17 .. v17}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->isCascade()Z

    move-result v17

    if-nez v17, :cond_5d6

    .line 7680
    and-int/lit16 v0, v10, 0x800

    move/from16 v17, v0

    if-eqz v17, :cond_1b1

    .line 7681
    move-object/from16 v0, p2

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->privateFlags:I

    move/from16 v17, v0

    move/from16 v0, v17

    and-int/lit16 v0, v0, 0x400

    move/from16 v17, v0

    if-eqz v17, :cond_4cf

    .line 7682
    const/16 v17, 0x1

    move/from16 v0, v17

    move-object/from16 v1, p0

    iput-boolean v0, v1, mForceStatusBarFromKeyguard:Z

    .line 7703
    :cond_180
    :goto_180
    move-object/from16 v0, p2

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->samsungFlags:I

    move/from16 v17, v0

    const/high16 v18, 0x10000000

    and-int v17, v17, v18

    if-eqz v17, :cond_194

    .line 7704
    const/16 v17, 0x1

    move/from16 v0, v17

    move-object/from16 v1, p0

    iput-boolean v0, v1, mForceStatusBarFromSViewCover:Z

    .line 7709
    :cond_194
    move-object/from16 v0, p2

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->privateFlags:I

    move/from16 v17, v0

    move/from16 v0, v17

    and-int/lit16 v0, v0, 0x2000

    move/from16 v17, v0

    if-eqz v17, :cond_1b1

    .line 7710
    const/16 v17, 0x1

    move/from16 v0, v17

    move-object/from16 v1, p0

    iput-boolean v0, v1, mForceStatusBar:Z

    .line 7711
    const-string v17, "Shared devices"

    const-string v18, "Force status bar SD type privflag"

    invoke-static/range {v17 .. v18}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 7718
    :cond_1b1
    move-object/from16 v0, p2

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->samsungFlags:I

    move/from16 v17, v0

    const/high16 v18, 0x10000000

    and-int v17, v17, v18

    if-eqz v17, :cond_1c5

    .line 7719
    const/16 v17, 0x1

    move/from16 v0, v17

    move-object/from16 v1, p0

    iput-boolean v0, v1, mShowingSViewCover:Z

    .line 7726
    :cond_1c5
    move-object/from16 v0, p0

    iget-object v0, v0, mMultiPhoneWindowManager:Lcom/android/server/policy/multiwindow/MultiPhoneWindowManager;

    move-object/from16 v17, v0

    move-object/from16 v0, p2

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    move/from16 v18, v0

    invoke-virtual/range {v17 .. v18}, Lcom/android/server/policy/multiwindow/MultiPhoneWindowManager;->applyPostLayoutPolicyForRecenUI(I)V

    .line 7730
    move-object/from16 v0, p2

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    move/from16 v17, v0

    const/16 v18, 0x7e7

    move/from16 v0, v17

    move/from16 v1, v18

    if-ne v0, v1, :cond_1ff

    .line 7733
    move-object/from16 v0, p0

    iget-boolean v0, v0, mDreamingLockscreen:Z

    move/from16 v17, v0

    if-eqz v17, :cond_1f6

    invoke-interface/range {p1 .. p1}, Landroid/view/WindowManagerPolicy$WindowState;->isVisibleLw()Z

    move-result v17

    if-eqz v17, :cond_1ff

    invoke-interface/range {p1 .. p1}, Landroid/view/WindowManagerPolicy$WindowState;->hasDrawnLw()Z

    move-result v17

    if-eqz v17, :cond_1ff

    .line 7735
    :cond_1f6
    const/16 v17, 0x1

    move/from16 v0, v17

    move-object/from16 v1, p0

    iput-boolean v0, v1, mShowingDream:Z

    .line 7736
    const/4 v5, 0x1

    .line 7741
    :cond_1ff
    move-object/from16 v0, p2

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    move/from16 v17, v0

    const/16 v18, 0x89a

    move/from16 v0, v17

    move/from16 v1, v18

    if-ne v0, v1, :cond_21a

    .line 7744
    invoke-interface/range {p1 .. p1}, Landroid/view/WindowManagerPolicy$WindowState;->isVisibleLw()Z

    move-result v17

    if-eqz v17, :cond_21a

    invoke-interface/range {p1 .. p1}, Landroid/view/WindowManagerPolicy$WindowState;->hasDrawnLw()Z

    move-result v17

    if-eqz v17, :cond_21a

    .line 7745
    const/4 v5, 0x1

    .line 7750
    :cond_21a
    invoke-interface/range {p1 .. p1}, Landroid/view/WindowManagerPolicy$WindowState;->getAppToken()Landroid/view/IApplicationToken;

    move-result-object v4

    .line 7755
    .local v4, "appToken":Landroid/view/IApplicationToken;
    if-eqz v5, :cond_340

    if-nez p3, :cond_340

    .line 7756
    if-eqz v16, :cond_513

    .line 7758
    move-object/from16 v0, p0

    iget-object v0, v0, mAppsToBeHidden:Ljava/util/HashSet;

    move-object/from16 v17, v0

    move-object/from16 v0, v17

    invoke-virtual {v0, v4}, Ljava/util/HashSet;->remove(Ljava/lang/Object;)Z

    .line 7759
    move-object/from16 v0, p0

    iget-object v0, v0, mAppsThatDismissKeyguard:Ljava/util/HashSet;

    move-object/from16 v17, v0

    move-object/from16 v0, v17

    invoke-virtual {v0, v4}, Ljava/util/HashSet;->remove(Ljava/lang/Object;)Z

    .line 7760
    move-object/from16 v0, p0

    iget-object v0, v0, mAppsToBeHidden:Ljava/util/HashSet;

    move-object/from16 v17, v0

    invoke-virtual/range {v17 .. v17}, Ljava/util/HashSet;->isEmpty()Z

    move-result v17

    if-eqz v17, :cond_263

    .line 7761
    if-eqz v8, :cond_4e5

    move-object/from16 v0, p0

    iget-boolean v0, v0, mKeyguardSecure:Z

    move/from16 v17, v0

    if-nez v17, :cond_4e5

    .line 7762
    move-object/from16 v0, p0

    iget-object v0, v0, mAppsThatDismissKeyguard:Ljava/util/HashSet;

    move-object/from16 v17, v0

    move-object/from16 v0, v17

    invoke-virtual {v0, v4}, Ljava/util/HashSet;->add(Ljava/lang/Object;)Z

    .line 7776
    :cond_25b
    :goto_25b
    const/16 v17, 0x1

    move/from16 v0, v17

    move-object/from16 v1, p0

    iput-boolean v0, v1, mHideSDKeyguard:Z

    .line 7794
    :cond_263
    :goto_263
    invoke-virtual/range {p0 .. p2}, checkTopFullscreenOpaqueWindowState(Landroid/view/WindowManagerPolicy$WindowState;Landroid/view/WindowManager$LayoutParams;)Z

    move-result v17

    if-eqz v17, :cond_31b

    .line 7796
    sget-boolean v17, DEBUG_LAYOUT:Z

    if-eqz v17, :cond_289

    const-string v17, "WindowManager"

    new-instance v18, Ljava/lang/StringBuilder;

    invoke-direct/range {v18 .. v18}, Ljava/lang/StringBuilder;-><init>()V

    const-string v19, "Fullscreen window: "

    invoke-virtual/range {v18 .. v19}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v18

    move-object/from16 v0, v18

    move-object/from16 v1, p1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v18

    invoke-virtual/range {v18 .. v18}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v18

    invoke-static/range {v17 .. v18}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 7797
    :cond_289
    move-object/from16 v13, p1

    .line 7798
    if-nez v12, :cond_28f

    .line 7799
    move-object/from16 v12, p1

    .line 7810
    :cond_28f
    move-object/from16 v0, p0

    iput-object v13, v0, mTopFullscreenOpaqueWindowState:Landroid/view/WindowManagerPolicy$WindowState;

    .line 7811
    move-object/from16 v0, p0

    iput-object v12, v0, mTopFullscreenOpaqueOrDimmingWindowState:Landroid/view/WindowManagerPolicy$WindowState;

    .line 7814
    move-object/from16 v0, p0

    iget-object v0, v0, mAppsThatDismissKeyguard:Ljava/util/HashSet;

    move-object/from16 v17, v0

    invoke-virtual/range {v17 .. v17}, Ljava/util/HashSet;->isEmpty()Z

    move-result v17

    if-nez v17, :cond_552

    move-object/from16 v0, p0

    iget v0, v0, mDismissKeyguard:I

    move/from16 v17, v0

    if-nez v17, :cond_552

    .line 7816
    sget-boolean v17, DEBUG_LAYOUT:Z

    if-eqz v17, :cond_2cb

    const-string v17, "WindowManager"

    new-instance v18, Ljava/lang/StringBuilder;

    invoke-direct/range {v18 .. v18}, Ljava/lang/StringBuilder;-><init>()V

    const-string v19, "Setting mDismissKeyguard true by win "

    invoke-virtual/range {v18 .. v19}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v18

    move-object/from16 v0, v18

    move-object/from16 v1, p1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v18

    invoke-virtual/range {v18 .. v18}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v18

    invoke-static/range {v17 .. v18}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 7818
    :cond_2cb
    move-object/from16 v0, p0

    iget-object v0, v0, mWinDismissingKeyguard:Landroid/view/WindowManagerPolicy$WindowState;

    move-object/from16 v17, v0

    move-object/from16 v0, v17

    move-object/from16 v1, p1

    if-ne v0, v1, :cond_54e

    move-object/from16 v0, p0

    iget-boolean v0, v0, mSecureDismissingKeyguard:Z

    move/from16 v17, v0

    move-object/from16 v0, p0

    iget-boolean v0, v0, mKeyguardSecure:Z

    move/from16 v18, v0

    move/from16 v0, v17

    move/from16 v1, v18

    if-ne v0, v1, :cond_54e

    const/16 v17, 0x2

    :goto_2eb
    move/from16 v0, v17

    move-object/from16 v1, p0

    iput v0, v1, mDismissKeyguard:I

    .line 7821
    move-object/from16 v0, p1

    move-object/from16 v1, p0

    iput-object v0, v1, mWinDismissingKeyguard:Landroid/view/WindowManagerPolicy$WindowState;

    .line 7822
    move-object/from16 v0, p0

    iget-boolean v0, v0, mKeyguardSecure:Z

    move/from16 v17, v0

    move/from16 v0, v17

    move-object/from16 v1, p0

    iput-boolean v0, v1, mSecureDismissingKeyguard:Z

    .line 7827
    move-object/from16 v0, p0

    iget-boolean v0, v0, mShowingLockscreen:Z

    move/from16 v17, v0

    move/from16 v0, v17

    move-object/from16 v1, p0

    iput-boolean v0, v1, mForceStatusBarFromKeyguard:Z

    .line 7848
    :cond_30f
    :goto_30f
    and-int/lit8 v17, v10, 0x1

    if-eqz v17, :cond_31b

    .line 7849
    const/16 v17, 0x1

    move/from16 v0, v17

    move-object/from16 v1, p0

    iput-boolean v0, v1, mAllowLockscreenWhenOn:Z

    .line 7853
    :cond_31b
    if-eqz v14, :cond_340

    invoke-interface {v14}, Landroid/view/WindowManagerPolicy$WindowState;->getAppToken()Landroid/view/IApplicationToken;

    move-result-object v17

    invoke-interface/range {p1 .. p1}, Landroid/view/WindowManagerPolicy$WindowState;->getAppToken()Landroid/view/IApplicationToken;

    move-result-object v18

    move-object/from16 v0, v17

    move-object/from16 v1, v18

    if-eq v0, v1, :cond_340

    move-object/from16 v0, p2

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->flags:I

    move/from16 v17, v0

    const/high16 v18, 0x80000

    and-int v17, v17, v18

    if-nez v17, :cond_340

    .line 7856
    const/16 v17, 0x0

    move-object/from16 v0, p1

    move/from16 v1, v17

    invoke-interface {v0, v1}, Landroid/view/WindowManagerPolicy$WindowState;->hideLw(Z)Z

    .line 7877
    .end local v4    # "appToken":Landroid/view/IApplicationToken;
    :cond_340
    :goto_340
    if-nez v12, :cond_35a

    invoke-interface/range {p1 .. p1}, Landroid/view/WindowManagerPolicy$WindowState;->isVisibleOrBehindKeyguardLw()Z

    move-result v17

    if-eqz v17, :cond_35a

    invoke-interface/range {p1 .. p1}, Landroid/view/WindowManagerPolicy$WindowState;->isGoneForLayoutLw()Z

    move-result v17

    if-nez v17, :cond_35a

    invoke-interface/range {p1 .. p1}, Landroid/view/WindowManagerPolicy$WindowState;->isDimming()Z

    move-result v17

    if-eqz v17, :cond_35a

    .line 7880
    move-object/from16 v12, p1

    .line 7884
    move-object/from16 v0, p0

    iput-object v12, v0, mTopFullscreenOpaqueOrDimmingWindowState:Landroid/view/WindowManagerPolicy$WindowState;

    .line 7890
    :cond_35a
    invoke-direct/range {p0 .. p0}, isSupportAndAttachedSViewCover()Z

    move-result v17

    if-eqz v17, :cond_430

    move-object/from16 v0, p0

    iget-object v0, v0, mCoverState:Lcom/samsung/android/cover/CoverState;

    move-object/from16 v17, v0

    move-object/from16 v0, v17

    iget-boolean v0, v0, Lcom/samsung/android/cover/CoverState;->switchState:Z

    move/from16 v17, v0

    if-nez v17, :cond_430

    .line 7891
    const/16 v17, 0x1

    move/from16 v0, v17

    move-object/from16 v1, p0

    iput-boolean v0, v1, mHideLockScreenByCover:Z

    .line 7892
    move-object/from16 v0, p0

    iget-object v0, v0, mHideSViewCoverWindowState:Landroid/view/WindowManagerPolicy$WindowState;

    move-object/from16 v17, v0

    if-nez v17, :cond_430

    .line 7893
    invoke-interface/range {p1 .. p1}, Landroid/view/WindowManagerPolicy$WindowState;->getCoverMode()I

    move-result v7

    .line 7894
    .local v7, "coverMode":I
    move-object/from16 v0, p2

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    move/from16 v17, v0

    const/16 v18, 0x1

    move/from16 v0, v17

    move/from16 v1, v18

    if-lt v0, v1, :cond_3aa

    move-object/from16 v0, p2

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    move/from16 v17, v0

    const/16 v18, 0x63

    move/from16 v0, v17

    move/from16 v1, v18

    if-gt v0, v1, :cond_3aa

    move-object/from16 v0, p2

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->flags:I

    move/from16 v17, v0

    const/high16 v18, 0x80000

    and-int v17, v17, v18

    if-nez v17, :cond_3ba

    :cond_3aa
    move-object/from16 v0, p2

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    move/from16 v17, v0

    const/16 v18, 0x3

    move/from16 v0, v17

    move/from16 v1, v18

    if-ne v0, v1, :cond_5fc

    if-eqz v7, :cond_5fc

    :cond_3ba
    const/4 v6, 0x1

    .line 7898
    .local v6, "applyWindow":Z
    :goto_3bb
    invoke-interface/range {p1 .. p1}, Landroid/view/WindowManagerPolicy$WindowState;->getAppToken()Landroid/view/IApplicationToken;

    move-result-object v4

    .line 7899
    .restart local v4    # "appToken":Landroid/view/IApplicationToken;
    if-eqz v6, :cond_430

    .line 7900
    const/16 v17, 0x1

    move/from16 v0, v17

    if-ne v7, v0, :cond_5ff

    .line 7901
    const/16 v17, 0x1

    move/from16 v0, v17

    move-object/from16 v1, p0

    iput v0, v1, mHideSViewCover:I

    .line 7902
    move-object/from16 v0, p0

    iget-object v0, v0, mAppsToBeHiddenBySViewCover:Ljava/util/HashSet;

    move-object/from16 v17, v0

    move-object/from16 v0, v17

    invoke-virtual {v0, v4}, Ljava/util/HashSet;->remove(Ljava/lang/Object;)Z

    .line 7911
    :cond_3da
    :goto_3da
    move-object/from16 v0, p0

    iget v0, v0, mHideSViewCover:I

    move/from16 v17, v0

    if-eqz v17, :cond_430

    .line 7912
    move-object/from16 v0, p0

    iget-object v0, v0, mAppsToBeHiddenBySViewCover:Ljava/util/HashSet;

    move-object/from16 v17, v0

    invoke-virtual/range {v17 .. v17}, Ljava/util/HashSet;->isEmpty()Z

    move-result v17

    if-eqz v17, :cond_430

    .line 7913
    move-object/from16 v0, p1

    move-object/from16 v1, p0

    iput-object v0, v1, mHideSViewCoverWindowState:Landroid/view/WindowManagerPolicy$WindowState;

    .line 7914
    move-object/from16 v0, p0

    iget-boolean v0, v0, mShowingSViewCover:Z

    move/from16 v17, v0

    move/from16 v0, v17

    move-object/from16 v1, p0

    iput-boolean v0, v1, mForceStatusBarFromSViewCover:Z

    .line 7915
    sget-boolean v17, DEBUG_LAYOUT:Z

    if-eqz v17, :cond_430

    .line 7916
    const-string v17, "WindowManager"

    new-instance v18, Ljava/lang/StringBuilder;

    invoke-direct/range {v18 .. v18}, Ljava/lang/StringBuilder;-><init>()V

    const-string v19, "Hide sview cover : mHideSViewCover ="

    invoke-virtual/range {v18 .. v19}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v18

    move-object/from16 v0, p0

    iget v0, v0, mHideSViewCover:I

    move/from16 v19, v0

    invoke-virtual/range {v18 .. v19}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v18

    const-string v19, ", SViewCoverWindow = "

    invoke-virtual/range {v18 .. v19}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v18

    move-object/from16 v0, v18

    move-object/from16 v1, p1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v18

    invoke-virtual/range {v18 .. v18}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v18

    invoke-static/range {v17 .. v18}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 7929
    .end local v4    # "appToken":Landroid/view/IApplicationToken;
    .end local v6    # "applyWindow":Z
    .end local v7    # "coverMode":I
    :cond_430
    invoke-virtual/range {p0 .. p0}, isKeyguardLocked()Z

    move-result v17

    if-eqz v17, :cond_481

    if-eqz v16, :cond_481

    invoke-interface/range {p1 .. p1}, Landroid/view/WindowManagerPolicy$WindowState;->isOnScreen()Z

    move-result v17

    if-eqz v17, :cond_481

    move-object/from16 v0, p0

    iget-object v0, v0, mAppsToBeHidden:Ljava/util/HashSet;

    move-object/from16 v17, v0

    invoke-virtual/range {v17 .. v17}, Ljava/util/HashSet;->isEmpty()Z

    move-result v17

    if-eqz v17, :cond_481

    .line 7930
    invoke-interface/range {p1 .. p1}, Landroid/view/WindowManagerPolicy$WindowState;->getAppToken()Landroid/view/IApplicationToken;

    move-result-object v4

    .line 7931
    .restart local v4    # "appToken":Landroid/view/IApplicationToken;
    if-eqz v4, :cond_481

    move-object/from16 v0, p0

    iget-object v0, v0, mAppsShowWhenLocked:Ljava/util/ArrayList;

    move-object/from16 v17, v0

    move-object/from16 v0, v17

    invoke-virtual {v0, v4}, Ljava/util/ArrayList;->contains(Ljava/lang/Object;)Z

    move-result v17

    if-nez v17, :cond_481

    .line 7932
    invoke-interface/range {p1 .. p1}, Landroid/view/WindowManagerPolicy$WindowState;->getMultiWindowStyleLw()Lcom/samsung/android/multiwindow/MultiWindowStyle;

    move-result-object v17

    invoke-virtual/range {v17 .. v17}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->getType()I

    move-result v17

    if-nez v17, :cond_481

    .line 7933
    move-object/from16 v0, p2

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    move/from16 v17, v0

    const/16 v18, 0x3

    move/from16 v0, v17

    move/from16 v1, v18

    if-eq v0, v1, :cond_481

    .line 7934
    move-object/from16 v0, p0

    iget-object v0, v0, mAppsShowWhenLocked:Ljava/util/ArrayList;

    move-object/from16 v17, v0

    move-object/from16 v0, v17

    invoke-virtual {v0, v4}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 7943
    .end local v4    # "appToken":Landroid/view/IApplicationToken;
    :cond_481
    move-object/from16 v0, p0

    iget-object v0, v0, mContext:Landroid/content/Context;

    move-object/from16 v17, v0

    invoke-static/range {v17 .. v17}, Lcom/samsung/android/cocktailbar/CocktailBarFeatures;->isSystemBarType(Landroid/content/Context;)Z

    move-result v17

    if-eqz v17, :cond_4ac

    .line 7944
    move-object/from16 v0, p0

    iget-object v0, v0, mCocktailPhoneWindowManager:Lcom/android/server/policy/cocktail/CocktailPhoneWindowManager;

    move-object/from16 v17, v0

    move-object/from16 v0, v17

    move-object/from16 v1, p1

    move-object/from16 v2, p2

    invoke-virtual {v0, v1, v13, v2}, Lcom/android/server/policy/cocktail/CocktailPhoneWindowManager;->applyPostLayoutPolicyLw(Landroid/view/WindowManagerPolicy$WindowState;Landroid/view/WindowManagerPolicy$WindowState;Landroid/view/WindowManager$LayoutParams;)V

    .line 7945
    move-object/from16 v0, p0

    iget-boolean v0, v0, mForceHideStatusBarForCocktail:Z

    move/from16 v17, v0

    if-eqz v17, :cond_4ac

    .line 7951
    const/16 v17, 0x0

    move/from16 v0, v17

    move-object/from16 v1, p0

    iput-boolean v0, v1, mForceStatusBar:Z

    .line 7960
    :cond_4ac
    move-object/from16 v0, p2

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->samsungFlags:I

    move/from16 v17, v0

    const/high16 v18, 0x10000

    and-int v17, v17, v18

    if-eqz v17, :cond_4be

    .line 7961
    move-object/from16 v0, p1

    move-object/from16 v1, p0

    iput-object v0, v1, mFakeFocusedWindow:Landroid/view/WindowManagerPolicy$WindowState;

    .line 7963
    :cond_4be
    return-void

    .line 7661
    .end local v5    # "appWindow":Z
    .end local v8    # "dismissKeyguard":Z
    .end local v11    # "isStatusBarAndSViewCover":Z
    .end local v15    # "needShowSViewCover":Z
    .end local v16    # "showWhenLocked":Z
    :cond_4bf
    const/4 v11, 0x0

    goto/16 :goto_105

    .line 7663
    .restart local v11    # "isStatusBarAndSViewCover":Z
    :cond_4c2
    const/4 v15, 0x0

    goto/16 :goto_114

    .line 7671
    .restart local v15    # "needShowSViewCover":Z
    :cond_4c5
    const/4 v5, 0x0

    goto/16 :goto_13d

    .line 7673
    .restart local v5    # "appWindow":Z
    :cond_4c8
    const/16 v16, 0x0

    goto/16 :goto_145

    .line 7674
    .restart local v16    # "showWhenLocked":Z
    :cond_4cc
    const/4 v8, 0x0

    goto/16 :goto_14c

    .line 7685
    .restart local v8    # "dismissKeyguard":Z
    :cond_4cf
    move-object/from16 v0, p0

    iget-object v0, v0, mMultiPhoneWindowManager:Lcom/android/server/policy/multiwindow/MultiPhoneWindowManager;

    move-object/from16 v17, v0

    invoke-virtual/range {v17 .. v17}, Lcom/android/server/policy/multiwindow/MultiPhoneWindowManager;->isStatusBarTransient()Z

    move-result v17

    if-nez v17, :cond_180

    .line 7693
    const/16 v17, 0x1

    move/from16 v0, v17

    move-object/from16 v1, p0

    iput-boolean v0, v1, mForceStatusBar:Z

    goto/16 :goto_180

    .line 7763
    .restart local v4    # "appToken":Landroid/view/IApplicationToken;
    :cond_4e5
    invoke-interface/range {p1 .. p1}, Landroid/view/WindowManagerPolicy$WindowState;->isDrawnLw()Z

    move-result v17

    if-nez v17, :cond_4f1

    invoke-interface/range {p1 .. p1}, Landroid/view/WindowManagerPolicy$WindowState;->hasAppShownWindows()Z

    move-result v17

    if-eqz v17, :cond_25b

    :cond_4f1
    invoke-interface/range {p1 .. p1}, Landroid/view/WindowManagerPolicy$WindowState;->getMultiWindowStyleLw()Lcom/samsung/android/multiwindow/MultiWindowStyle;

    move-result-object v17

    invoke-virtual/range {v17 .. v17}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->isNormal()Z

    move-result v17

    if-eqz v17, :cond_25b

    .line 7764
    move-object/from16 v14, p1

    .line 7770
    move-object/from16 v0, p0

    iput-object v14, v0, mWinShowWhenLocked:Landroid/view/WindowManagerPolicy$WindowState;

    .line 7773
    const/16 v17, 0x1

    move/from16 v0, v17

    move-object/from16 v1, p0

    iput-boolean v0, v1, mHideLockScreen:Z

    .line 7774
    const/16 v17, 0x0

    move/from16 v0, v17

    move-object/from16 v1, p0

    iput-boolean v0, v1, mForceStatusBarFromKeyguard:Z

    goto/16 :goto_25b

    .line 7778
    :cond_513
    if-eqz v8, :cond_541

    .line 7779
    move-object/from16 v0, p0

    iget-boolean v0, v0, mKeyguardSecure:Z

    move/from16 v17, v0

    if-eqz v17, :cond_535

    .line 7780
    move-object/from16 v0, p0

    iget-object v0, v0, mAppsToBeHidden:Ljava/util/HashSet;

    move-object/from16 v17, v0

    move-object/from16 v0, v17

    invoke-virtual {v0, v4}, Ljava/util/HashSet;->add(Ljava/lang/Object;)Z

    .line 7784
    :goto_528
    move-object/from16 v0, p0

    iget-object v0, v0, mAppsThatDismissKeyguard:Ljava/util/HashSet;

    move-object/from16 v17, v0

    move-object/from16 v0, v17

    invoke-virtual {v0, v4}, Ljava/util/HashSet;->add(Ljava/lang/Object;)Z

    goto/16 :goto_263

    .line 7782
    :cond_535
    move-object/from16 v0, p0

    iget-object v0, v0, mAppsToBeHidden:Ljava/util/HashSet;

    move-object/from16 v17, v0

    move-object/from16 v0, v17

    invoke-virtual {v0, v4}, Ljava/util/HashSet;->remove(Ljava/lang/Object;)Z

    goto :goto_528

    .line 7786
    :cond_541
    move-object/from16 v0, p0

    iget-object v0, v0, mAppsToBeHidden:Ljava/util/HashSet;

    move-object/from16 v17, v0

    move-object/from16 v0, v17

    invoke-virtual {v0, v4}, Ljava/util/HashSet;->add(Ljava/lang/Object;)Z

    goto/16 :goto_263

    .line 7818
    :cond_54e
    const/16 v17, 0x1

    goto/16 :goto_2eb

    .line 7829
    :cond_552
    move-object/from16 v0, p0

    iget-object v0, v0, mAppsToBeHidden:Ljava/util/HashSet;

    move-object/from16 v17, v0

    invoke-virtual/range {v17 .. v17}, Ljava/util/HashSet;->isEmpty()Z

    move-result v17

    if-eqz v17, :cond_30f

    if-eqz v16, :cond_30f

    invoke-interface/range {p1 .. p1}, Landroid/view/WindowManagerPolicy$WindowState;->isDrawnLw()Z

    move-result v17

    if-nez v17, :cond_56c

    invoke-interface/range {p1 .. p1}, Landroid/view/WindowManagerPolicy$WindowState;->hasAppShownWindows()Z

    move-result v17

    if-eqz v17, :cond_30f

    .line 7831
    :cond_56c
    sget-boolean v17, DEBUG_LAYOUT:Z

    if-eqz v17, :cond_58c

    const-string v17, "WindowManager"

    new-instance v18, Ljava/lang/StringBuilder;

    invoke-direct/range {v18 .. v18}, Ljava/lang/StringBuilder;-><init>()V

    const-string v19, "Setting mHideLockScreen to true by win "

    invoke-virtual/range {v18 .. v19}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v18

    move-object/from16 v0, v18

    move-object/from16 v1, p1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v18

    invoke-virtual/range {v18 .. v18}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v18

    invoke-static/range {v17 .. v18}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 7833
    :cond_58c
    const/16 v17, 0x1

    move/from16 v0, v17

    move-object/from16 v1, p0

    iput-boolean v0, v1, mHideLockScreen:Z

    .line 7834
    const/16 v17, 0x0

    move/from16 v0, v17

    move-object/from16 v1, p0

    iput-boolean v0, v1, mForceStatusBarFromKeyguard:Z

    .line 7836
    move-object/from16 v0, p2

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->flags:I

    move/from16 v17, v0

    const/high16 v18, 0x200000

    and-int v17, v17, v18

    if-eqz v17, :cond_30f

    move-object/from16 v0, p2

    iget-wide v0, v0, Landroid/view/WindowManager$LayoutParams;->userActivityTimeout:J

    move-wide/from16 v18, v0

    const-wide/16 v20, 0x0

    cmp-long v17, v18, v20

    if-gez v17, :cond_30f

    move-object/from16 v0, p0

    iget-object v0, v0, mForceUserActivityTimeoutWin:Ljava/util/ArrayList;

    move-object/from16 v17, v0

    move-object/from16 v0, v17

    move-object/from16 v1, p1

    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->contains(Ljava/lang/Object;)Z

    move-result v17

    if-eqz v17, :cond_30f

    .line 7843
    const-wide/16 v18, 0x146a

    move-wide/from16 v0, v18

    move-object/from16 v2, p2

    iput-wide v0, v2, Landroid/view/WindowManager$LayoutParams;->userActivityTimeout:J

    .line 7844
    const-wide/16 v18, 0x0

    move-wide/from16 v0, v18

    move-object/from16 v2, p2

    iput-wide v0, v2, Landroid/view/WindowManager$LayoutParams;->screenDimDuration:J

    goto/16 :goto_30f

    .line 7859
    .end local v4    # "appToken":Landroid/view/IApplicationToken;
    :cond_5d6
    if-nez v13, :cond_340

    if-nez v14, :cond_340

    .line 7864
    invoke-interface/range {p1 .. p1}, Landroid/view/WindowManagerPolicy$WindowState;->isAnimatingLw()Z

    move-result v17

    if-eqz v17, :cond_340

    if-eqz v5, :cond_340

    if-eqz v16, :cond_340

    move-object/from16 v0, p0

    iget-boolean v0, v0, mKeyguardHidden:Z

    move/from16 v17, v0

    if-eqz v17, :cond_340

    .line 7865
    const/16 v17, 0x1

    move/from16 v0, v17

    move-object/from16 v1, p0

    iput-boolean v0, v1, mHideLockScreen:Z

    .line 7866
    move-object/from16 v14, p1

    .line 7872
    move-object/from16 v0, p0

    iput-object v14, v0, mWinShowWhenLocked:Landroid/view/WindowManagerPolicy$WindowState;

    goto/16 :goto_340

    .line 7894
    .restart local v7    # "coverMode":I
    :cond_5fc
    const/4 v6, 0x0

    goto/16 :goto_3bb

    .line 7903
    .restart local v4    # "appToken":Landroid/view/IApplicationToken;
    .restart local v6    # "applyWindow":Z
    :cond_5ff
    const/16 v17, 0x2

    move/from16 v0, v17

    if-ne v7, v0, :cond_620

    .line 7904
    invoke-interface/range {p1 .. p1}, Landroid/view/WindowManagerPolicy$WindowState;->willBeHideSViewCoverOnce()Z

    move-result v17

    if-eqz v17, :cond_3da

    .line 7905
    const/16 v17, 0x2

    move/from16 v0, v17

    move-object/from16 v1, p0

    iput v0, v1, mHideSViewCover:I

    .line 7906
    move-object/from16 v0, p0

    iget-object v0, v0, mAppsToBeHiddenBySViewCover:Ljava/util/HashSet;

    move-object/from16 v17, v0

    move-object/from16 v0, v17

    invoke-virtual {v0, v4}, Ljava/util/HashSet;->remove(Ljava/lang/Object;)Z

    goto/16 :goto_3da

    .line 7909
    :cond_620
    move-object/from16 v0, p0

    iget-object v0, v0, mAppsToBeHiddenBySViewCover:Ljava/util/HashSet;

    move-object/from16 v17, v0

    move-object/from16 v0, v17

    invoke-virtual {v0, v4}, Ljava/util/HashSet;->add(Ljava/lang/Object;)Z

    goto/16 :goto_3da
.end method

.method public beginLayoutLw(ZIII)V
    .registers 12
    .param p1, "isDefaultDisplay"    # Z
    .param p2, "displayWidth"    # I
    .param p3, "displayHeight"    # I
    .param p4, "displayRotation"    # I

    .prologue
    .line 6253
    const/4 v5, 0x0

    const/4 v6, 0x1

    move-object v0, p0

    move v1, p1

    move v2, p2

    move v3, p3

    move v4, p4

    invoke-virtual/range {v0 .. v6}, beginLayoutLw(ZIIIIZ)V

    .line 6254
    return-void
.end method

.method public beginLayoutLw(ZIIIIZ)V
    .registers 70
    .param p1, "isDefaultDisplay"    # Z
    .param p2, "displayWidth"    # I
    .param p3, "displayHeight"    # I
    .param p4, "displayRotation"    # I
    .param p5, "displayId"    # I
    .param p6, "isBuiltInDisplay"    # Z

    .prologue
    .line 6260
    move/from16 v0, p4

    move-object/from16 v1, p0

    iput v0, v1, mDisplayRotation:I

    .line 6262
    if-eqz p1, :cond_80b

    .line 6263
    packed-switch p4, :pswitch_data_976

    .line 6283
    move-object/from16 v0, p0

    iget v0, v0, mOverscanLeft:I

    move/from16 v52, v0

    .line 6284
    .local v52, "overscanLeft":I
    move-object/from16 v0, p0

    iget v0, v0, mOverscanTop:I

    move/from16 v54, v0

    .line 6285
    .local v54, "overscanTop":I
    move-object/from16 v0, p0

    iget v0, v0, mOverscanRight:I

    move/from16 v53, v0

    .line 6286
    .local v53, "overscanRight":I
    move-object/from16 v0, p0

    iget v0, v0, mOverscanBottom:I

    move/from16 v51, v0

    .line 6295
    .local v51, "overscanBottom":I
    :goto_23
    const/4 v3, 0x0

    move-object/from16 v0, p0

    iput v3, v0, mRestrictedOverscanScreenLeft:I

    move-object/from16 v0, p0

    iput v3, v0, mOverscanScreenLeft:I

    .line 6296
    const/4 v3, 0x0

    move-object/from16 v0, p0

    iput v3, v0, mRestrictedOverscanScreenTop:I

    move-object/from16 v0, p0

    iput v3, v0, mOverscanScreenTop:I

    .line 6297
    move/from16 v0, p2

    move-object/from16 v1, p0

    iput v0, v1, mRestrictedOverscanScreenWidth:I

    move/from16 v0, p2

    move-object/from16 v1, p0

    iput v0, v1, mOverscanScreenWidth:I

    .line 6298
    move/from16 v0, p3

    move-object/from16 v1, p0

    iput v0, v1, mRestrictedOverscanScreenHeight:I

    move/from16 v0, p3

    move-object/from16 v1, p0

    iput v0, v1, mOverscanScreenHeight:I

    .line 6299
    const/4 v3, 0x0

    move-object/from16 v0, p0

    iput v3, v0, mSystemLeft:I

    .line 6300
    const/4 v3, 0x0

    move-object/from16 v0, p0

    iput v3, v0, mSystemTop:I

    .line 6301
    move/from16 v0, p2

    move-object/from16 v1, p0

    iput v0, v1, mSystemRight:I

    .line 6302
    move/from16 v0, p3

    move-object/from16 v1, p0

    iput v0, v1, mSystemBottom:I

    .line 6303
    move/from16 v0, v52

    move-object/from16 v1, p0

    iput v0, v1, mUnrestrictedScreenLeft:I

    .line 6304
    move/from16 v0, v54

    move-object/from16 v1, p0

    iput v0, v1, mUnrestrictedScreenTop:I

    .line 6305
    sub-int v3, p2, v52

    sub-int v3, v3, v53

    move-object/from16 v0, p0

    iput v3, v0, mUnrestrictedScreenWidth:I

    .line 6306
    sub-int v3, p3, v54

    sub-int v3, v3, v51

    move-object/from16 v0, p0

    iput v3, v0, mUnrestrictedScreenHeight:I

    .line 6307
    move-object/from16 v0, p0

    iget v3, v0, mUnrestrictedScreenLeft:I

    move-object/from16 v0, p0

    iput v3, v0, mRestrictedScreenLeft:I

    .line 6308
    move-object/from16 v0, p0

    iget v3, v0, mUnrestrictedScreenTop:I

    move-object/from16 v0, p0

    iput v3, v0, mRestrictedScreenTop:I

    .line 6316
    move-object/from16 v0, p0

    iget-object v3, v0, mSystemGestures:Lcom/android/server/policy/SystemGesturesPointerEventListener;

    move-object/from16 v0, p0

    iget v4, v0, mUnrestrictedScreenWidth:I

    iput v4, v3, Lcom/android/server/policy/SystemGesturesPointerEventListener;->screenWidth:I

    move-object/from16 v0, p0

    iput v4, v0, mRestrictedScreenWidth:I

    .line 6317
    move-object/from16 v0, p0

    iget-object v3, v0, mSystemGestures:Lcom/android/server/policy/SystemGesturesPointerEventListener;

    move-object/from16 v0, p0

    iget v4, v0, mUnrestrictedScreenHeight:I

    iput v4, v3, Lcom/android/server/policy/SystemGesturesPointerEventListener;->screenHeight:I

    move-object/from16 v0, p0

    iput v4, v0, mRestrictedScreenHeight:I

    .line 6320
    move-object/from16 v0, p0

    iget v3, v0, mUnrestrictedScreenLeft:I

    move-object/from16 v0, p0

    iput v3, v0, mCurLeft:I

    move-object/from16 v0, p0

    iput v3, v0, mStableFullscreenLeft:I

    move-object/from16 v0, p0

    iput v3, v0, mStableLeft:I

    move-object/from16 v0, p0

    iput v3, v0, mVoiceContentLeft:I

    move-object/from16 v0, p0

    iput v3, v0, mContentLeft:I

    move-object/from16 v0, p0

    iput v3, v0, mDockLeft:I

    .line 6322
    move-object/from16 v0, p0

    iget v3, v0, mUnrestrictedScreenTop:I

    move-object/from16 v0, p0

    iput v3, v0, mCurTop:I

    move-object/from16 v0, p0

    iput v3, v0, mStableFullscreenTop:I

    move-object/from16 v0, p0

    iput v3, v0, mStableTop:I

    move-object/from16 v0, p0

    iput v3, v0, mVoiceContentTop:I

    move-object/from16 v0, p0

    iput v3, v0, mContentTop:I

    move-object/from16 v0, p0

    iput v3, v0, mDockTop:I

    .line 6324
    sub-int v3, p2, v53

    move-object/from16 v0, p0

    iput v3, v0, mCurRight:I

    move-object/from16 v0, p0

    iput v3, v0, mStableFullscreenRight:I

    move-object/from16 v0, p0

    iput v3, v0, mStableRight:I

    move-object/from16 v0, p0

    iput v3, v0, mVoiceContentRight:I

    move-object/from16 v0, p0

    iput v3, v0, mContentRight:I

    move-object/from16 v0, p0

    iput v3, v0, mDockRight:I

    .line 6326
    sub-int v3, p3, v51

    move-object/from16 v0, p0

    iput v3, v0, mCurBottom:I

    move-object/from16 v0, p0

    iput v3, v0, mStableFullscreenBottom:I

    move-object/from16 v0, p0

    iput v3, v0, mStableBottom:I

    move-object/from16 v0, p0

    iput v3, v0, mVoiceContentBottom:I

    move-object/from16 v0, p0

    iput v3, v0, mContentBottom:I

    move-object/from16 v0, p0

    iput v3, v0, mDockBottom:I

    .line 6328
    const/high16 v3, 0x10000000

    move-object/from16 v0, p0

    iput v3, v0, mDockLayer:I

    .line 6329
    const/4 v3, -0x1

    move-object/from16 v0, p0

    iput v3, v0, mStatusBarLayer:I

    .line 6332
    sget-object v55, mTmpParentFrame:Landroid/graphics/Rect;

    .line 6333
    .local v55, "pf":Landroid/graphics/Rect;
    sget-object v35, mTmpDisplayFrame:Landroid/graphics/Rect;

    .line 6334
    .local v35, "df":Landroid/graphics/Rect;
    sget-object v49, mTmpOverscanFrame:Landroid/graphics/Rect;

    .line 6335
    .local v49, "of":Landroid/graphics/Rect;
    sget-object v62, mTmpVisibleFrame:Landroid/graphics/Rect;

    .line 6336
    .local v62, "vf":Landroid/graphics/Rect;
    sget-object v8, mTmpDecorFrame:Landroid/graphics/Rect;

    .line 6337
    .local v8, "dcf":Landroid/graphics/Rect;
    sget-object v50, mTmpOutsetFrame:Landroid/graphics/Rect;

    .line 6338
    .local v50, "osf":Landroid/graphics/Rect;
    move-object/from16 v0, p0

    iget v3, v0, mDockLeft:I

    move-object/from16 v0, v62

    iput v3, v0, Landroid/graphics/Rect;->left:I

    move-object/from16 v0, v49

    iput v3, v0, Landroid/graphics/Rect;->left:I

    move-object/from16 v0, v35

    iput v3, v0, Landroid/graphics/Rect;->left:I

    move-object/from16 v0, v55

    iput v3, v0, Landroid/graphics/Rect;->left:I

    .line 6339
    move-object/from16 v0, p0

    iget v3, v0, mDockTop:I

    move-object/from16 v0, v62

    iput v3, v0, Landroid/graphics/Rect;->top:I

    move-object/from16 v0, v49

    iput v3, v0, Landroid/graphics/Rect;->top:I

    move-object/from16 v0, v35

    iput v3, v0, Landroid/graphics/Rect;->top:I

    move-object/from16 v0, v55

    iput v3, v0, Landroid/graphics/Rect;->top:I

    .line 6340
    move-object/from16 v0, p0

    iget v3, v0, mDockRight:I

    move-object/from16 v0, v62

    iput v3, v0, Landroid/graphics/Rect;->right:I

    move-object/from16 v0, v49

    iput v3, v0, Landroid/graphics/Rect;->right:I

    move-object/from16 v0, v35

    iput v3, v0, Landroid/graphics/Rect;->right:I

    move-object/from16 v0, v55

    iput v3, v0, Landroid/graphics/Rect;->right:I

    .line 6341
    move-object/from16 v0, p0

    iget v3, v0, mDockBottom:I

    move-object/from16 v0, v62

    iput v3, v0, Landroid/graphics/Rect;->bottom:I

    move-object/from16 v0, v49

    iput v3, v0, Landroid/graphics/Rect;->bottom:I

    move-object/from16 v0, v35

    iput v3, v0, Landroid/graphics/Rect;->bottom:I

    move-object/from16 v0, v55

    iput v3, v0, Landroid/graphics/Rect;->bottom:I

    .line 6342
    invoke-virtual {v8}, Landroid/graphics/Rect;->setEmpty()V

    .line 6344
    if-eqz p1, :cond_727

    .line 6346
    const/16 v43, 0x0

    .line 6347
    .local v43, "mStatusBar":Landroid/view/WindowManagerPolicy$WindowState;
    const/4 v2, 0x0

    .line 6349
    .local v2, "mNavigationBar":Landroid/view/WindowManagerPolicy$WindowState;
    const/16 v41, 0x0

    .line 6357
    .local v41, "mInputConsumer":Landroid/view/WindowManagerPolicy$InputConsumer;
    move-object/from16 v0, p0

    iget-object v0, v0, mStatusBar:Landroid/view/WindowManagerPolicy$WindowState;

    move-object/from16 v43, v0

    .line 6358
    move-object/from16 v0, p0

    iget-object v2, v0, mNavigationBar:Landroid/view/WindowManagerPolicy$WindowState;

    .line 6359
    move-object/from16 v0, p0

    iget v0, v0, mLastSystemUiFlags:I

    move/from16 v42, v0

    .line 6360
    .local v42, "mLastSystemUiFlags":I
    move-object/from16 v0, p0

    iget-object v0, v0, mInputConsumer:Landroid/view/WindowManagerPolicy$InputConsumer;

    move-object/from16 v41, v0

    .line 6365
    move/from16 v58, v42

    .line 6366
    .local v58, "sysui":I
    and-int/lit8 v3, v58, 0x2

    if-nez v3, :cond_815

    const/16 v48, 0x1

    .line 6367
    .local v48, "navVisible":Z
    :goto_1a6
    const v3, -0x7fff8000

    and-int v3, v3, v58

    if-eqz v3, :cond_819

    const/16 v47, 0x1

    .line 6369
    .local v47, "navTranslucent":Z
    :goto_1af
    move/from16 v0, v58

    and-int/lit16 v3, v0, 0x800

    if-eqz v3, :cond_81d

    const/16 v36, 0x1

    .line 6370
    .local v36, "immersive":Z
    :goto_1b7
    move/from16 v0, v58

    and-int/lit16 v3, v0, 0x1000

    if-eqz v3, :cond_821

    const/16 v37, 0x1

    .line 6371
    .local v37, "immersiveSticky":Z
    :goto_1bf
    if-nez v36, :cond_1c3

    if-eqz v37, :cond_825

    :cond_1c3
    const/16 v46, 0x1

    .line 6372
    .local v46, "navAllowedHidden":Z
    :goto_1c5
    if-nez v37, :cond_829

    const/4 v3, 0x1

    :goto_1c8
    and-int v47, v47, v3

    .line 6373
    invoke-virtual/range {p0 .. p0}, isStatusBarSViewCover()Z

    move-result v3

    if-nez v3, :cond_82c

    invoke-virtual/range {p0 .. p0}, isStatusBarKeyguard()Z

    move-result v3

    if-eqz v3, :cond_82c

    move-object/from16 v0, p0

    iget-boolean v3, v0, mHideLockScreen:Z

    if-nez v3, :cond_82c

    const/16 v39, 0x1

    .line 6375
    .local v39, "isKeyguardShowing":Z
    :goto_1de
    invoke-virtual/range {p0 .. p0}, isStatusBarSViewCover()Z

    move-result v3

    if-eqz v3, :cond_830

    move-object/from16 v0, p0

    iget-boolean v3, v0, mLastCoverAppCovered:Z

    if-nez v3, :cond_830

    const/16 v38, 0x1

    .line 6377
    .local v38, "isCoverShowing":Z
    :goto_1ec
    if-nez v39, :cond_1f4

    .line 6378
    invoke-direct/range {p0 .. p0}, areTranslucentBarsAllowed()Z

    move-result v3

    and-int v47, v47, v3

    .line 6385
    :cond_1f4
    if-nez v48, :cond_1f8

    if-eqz v46, :cond_834

    .line 6386
    :cond_1f8
    if-eqz v41, :cond_202

    .line 6387
    invoke-interface/range {v41 .. v41}, Landroid/view/WindowManagerPolicy$InputConsumer;->dismiss()V

    .line 6393
    const/4 v3, 0x0

    move-object/from16 v0, p0

    iput-object v3, v0, mInputConsumer:Landroid/view/WindowManagerPolicy$InputConsumer;

    .line 6412
    :cond_202
    :goto_202
    invoke-direct/range {p0 .. p0}, canHideNavigationBar()Z

    move-result v3

    if-nez v3, :cond_850

    const/4 v3, 0x1

    :goto_209
    or-int v48, v48, v3

    .line 6414
    const/16 v61, 0x0

    .line 6415
    .local v61, "updateSysUiVisibility":Z
    if-eqz v2, :cond_305

    .line 6416
    move-object/from16 v0, p0

    iget-object v3, v0, mNavigationBarController:Lcom/android/server/policy/BarController;

    move/from16 v0, p5

    invoke-virtual {v3, v0}, Lcom/android/server/policy/BarController;->isTransientShowing(I)Z

    move-result v60

    .line 6421
    .local v60, "transientNavBarShowing":Z
    move-object/from16 v0, p0

    iget-boolean v3, v0, mNavigationBarCanMove:Z

    if-eqz v3, :cond_225

    move/from16 v0, p2

    move/from16 v1, p3

    if-ge v0, v1, :cond_853

    :cond_225
    const/4 v3, 0x1

    :goto_226
    move-object/from16 v0, p0

    iput-boolean v3, v0, mNavigationBarOnBottom:Z

    .line 6422
    move-object/from16 v0, p0

    iget-boolean v3, v0, mNavigationBarOnBottom:Z

    if-eqz v3, :cond_894

    .line 6424
    sub-int v3, p3, v51

    move-object/from16 v0, p0

    iget-object v4, v0, mNavigationBarHeightForRotation:[I

    aget v4, v4, p4

    sub-int v59, v3, v4

    .line 6426
    .local v59, "top":I
    sget-object v3, mTmpNavigationFrame:Landroid/graphics/Rect;

    const/4 v4, 0x0

    sub-int v5, p3, v51

    move/from16 v0, v59

    move/from16 v1, p2

    invoke-virtual {v3, v4, v0, v1, v5}, Landroid/graphics/Rect;->set(IIII)V

    .line 6427
    sget-object v3, mTmpNavigationFrame:Landroid/graphics/Rect;

    iget v3, v3, Landroid/graphics/Rect;->top:I

    move-object/from16 v0, p0

    iput v3, v0, mStableFullscreenBottom:I

    move-object/from16 v0, p0

    iput v3, v0, mStableBottom:I

    .line 6428
    if-eqz v60, :cond_856

    .line 6429
    move-object/from16 v0, p0

    iget-object v3, v0, mNavigationBarController:Lcom/android/server/policy/BarController;

    const/4 v4, 0x1

    const/4 v5, 0x1

    move/from16 v0, p5

    invoke-virtual {v3, v4, v5, v0}, Lcom/android/server/policy/BarController;->setBarShowingLw(ZZI)Z

    .line 6439
    :goto_25f
    if-eqz v48, :cond_27f

    if-nez v47, :cond_27f

    if-nez v46, :cond_27f

    invoke-interface {v2}, Landroid/view/WindowManagerPolicy$WindowState;->isAnimatingLw()Z

    move-result v3

    if-nez v3, :cond_27f

    move-object/from16 v0, p0

    iget-object v3, v0, mNavigationBarController:Lcom/android/server/policy/BarController;

    move/from16 v0, p5

    invoke-virtual {v3, v0}, Lcom/android/server/policy/BarController;->wasRecentlyTranslucent(I)Z

    move-result v3

    if-nez v3, :cond_27f

    .line 6445
    sget-object v3, mTmpNavigationFrame:Landroid/graphics/Rect;

    iget v3, v3, Landroid/graphics/Rect;->top:I

    move-object/from16 v0, p0

    iput v3, v0, mSystemBottom:I

    .line 6475
    .end local v59    # "top":I
    :cond_27f
    :goto_27f
    move-object/from16 v0, p0

    iget v3, v0, mDockTop:I

    move-object/from16 v0, p0

    iput v3, v0, mCurTop:I

    move-object/from16 v0, p0

    iput v3, v0, mVoiceContentTop:I

    move-object/from16 v0, p0

    iput v3, v0, mContentTop:I

    .line 6476
    move-object/from16 v0, p0

    iget v3, v0, mDockBottom:I

    move-object/from16 v0, p0

    iput v3, v0, mCurBottom:I

    move-object/from16 v0, p0

    iput v3, v0, mVoiceContentBottom:I

    move-object/from16 v0, p0

    iput v3, v0, mContentBottom:I

    .line 6477
    move-object/from16 v0, p0

    iget v3, v0, mDockLeft:I

    move-object/from16 v0, p0

    iput v3, v0, mCurLeft:I

    move-object/from16 v0, p0

    iput v3, v0, mVoiceContentLeft:I

    move-object/from16 v0, p0

    iput v3, v0, mContentLeft:I

    .line 6478
    move-object/from16 v0, p0

    iget v3, v0, mDockRight:I

    move-object/from16 v0, p0

    iput v3, v0, mCurRight:I

    move-object/from16 v0, p0

    iput v3, v0, mVoiceContentRight:I

    move-object/from16 v0, p0

    iput v3, v0, mContentRight:I

    .line 6479
    invoke-interface {v2}, Landroid/view/WindowManagerPolicy$WindowState;->getSurfaceLayer()I

    move-result v3

    move-object/from16 v0, p0

    iput v3, v0, mStatusBarLayer:I

    .line 6481
    sget-object v3, mTmpNavigationFrame:Landroid/graphics/Rect;

    sget-object v4, mTmpNavigationFrame:Landroid/graphics/Rect;

    sget-object v5, mTmpNavigationFrame:Landroid/graphics/Rect;

    sget-object v6, mTmpNavigationFrame:Landroid/graphics/Rect;

    sget-object v7, mTmpNavigationFrame:Landroid/graphics/Rect;

    sget-object v9, mTmpNavigationFrame:Landroid/graphics/Rect;

    sget-object v10, mTmpNavigationFrame:Landroid/graphics/Rect;

    invoke-interface/range {v2 .. v10}, Landroid/view/WindowManagerPolicy$WindowState;->computeFrameLw(Landroid/graphics/Rect;Landroid/graphics/Rect;Landroid/graphics/Rect;Landroid/graphics/Rect;Landroid/graphics/Rect;Landroid/graphics/Rect;Landroid/graphics/Rect;Landroid/graphics/Rect;)V

    .line 6484
    sget-boolean v3, DEBUG_LAYOUT:Z

    if-eqz v3, :cond_2f7

    const-string v3, "WindowManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v5, "mNavigationBar frame: "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    sget-object v5, mTmpNavigationFrame:Landroid/graphics/Rect;

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v3, v4}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 6485
    :cond_2f7
    move-object/from16 v0, p0

    iget-object v3, v0, mNavigationBarController:Lcom/android/server/policy/BarController;

    move/from16 v0, p5

    invoke-virtual {v3, v0}, Lcom/android/server/policy/BarController;->checkHiddenLw(I)Z

    move-result v3

    if-eqz v3, :cond_305

    .line 6486
    const/16 v61, 0x1

    .line 6489
    .end local v60    # "transientNavBarShowing":Z
    :cond_305
    sget-boolean v3, DEBUG_LAYOUT:Z

    if-eqz v3, :cond_344

    const-string v3, "WindowManager"

    const-string/jumbo v4, "mDock rect: (%d,%d - %d,%d)"

    const/4 v5, 0x4

    new-array v5, v5, [Ljava/lang/Object;

    const/4 v6, 0x0

    move-object/from16 v0, p0

    iget v7, v0, mDockLeft:I

    invoke-static {v7}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v7

    aput-object v7, v5, v6

    const/4 v6, 0x1

    move-object/from16 v0, p0

    iget v7, v0, mDockTop:I

    invoke-static {v7}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v7

    aput-object v7, v5, v6

    const/4 v6, 0x2

    move-object/from16 v0, p0

    iget v7, v0, mDockRight:I

    invoke-static {v7}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v7

    aput-object v7, v5, v6

    const/4 v6, 0x3

    move-object/from16 v0, p0

    iget v7, v0, mDockBottom:I

    invoke-static {v7}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v7

    aput-object v7, v5, v6

    invoke-static {v4, v5}, Ljava/lang/String;->format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v4

    invoke-static {v3, v4}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 6495
    :cond_344
    move-object/from16 v0, p0

    iget-object v9, v0, mCocktailPhoneWindowManager:Lcom/android/server/policy/cocktail/CocktailPhoneWindowManager;

    move-object/from16 v0, p0

    iget v13, v0, mOverscanScreenLeft:I

    move-object/from16 v0, p0

    iget v14, v0, mOverscanScreenTop:I

    move-object/from16 v0, p0

    iget v15, v0, mOverscanScreenWidth:I

    move-object/from16 v0, p0

    iget v0, v0, mOverscanScreenHeight:I

    move/from16 v16, v0

    move/from16 v10, p2

    move/from16 v11, p3

    move/from16 v12, p4

    invoke-virtual/range {v9 .. v16}, Lcom/android/server/policy/cocktail/CocktailPhoneWindowManager;->beginLayoutLw(IIIIIII)V

    .line 6502
    move-object/from16 v0, p0

    iget-boolean v3, v0, mMobileKeyboardEnabled:Z

    if-eqz v3, :cond_3e5

    .line 6503
    const/16 v45, 0x0

    .local v45, "mobileKeyboardRight":I
    const/16 v44, 0x0

    .line 6504
    .local v44, "mobileKeyboardBottom":I
    move/from16 v0, p2

    move/from16 v1, p3

    if-ge v0, v1, :cond_921

    .line 6505
    move-object/from16 v0, p0

    iget v0, v0, mMobileKeyboardHeight:I

    move/from16 v44, v0

    .line 6510
    :goto_379
    move-object/from16 v0, p0

    iget v3, v0, mSystemRight:I

    sub-int v3, v3, v45

    move-object/from16 v0, p0

    iput v3, v0, mSystemRight:I

    .line 6511
    move-object/from16 v0, p0

    iget v3, v0, mSystemBottom:I

    sub-int v3, v3, v44

    move-object/from16 v0, p0

    iput v3, v0, mSystemBottom:I

    .line 6513
    move-object/from16 v0, p0

    iget v3, v0, mUnrestrictedScreenWidth:I

    sub-int v3, v3, v45

    move-object/from16 v0, p0

    iput v3, v0, mUnrestrictedScreenWidth:I

    move-object/from16 v0, p0

    iput v3, v0, mRestrictedScreenWidth:I

    move-object/from16 v0, p0

    iput v3, v0, mRestrictedOverscanScreenWidth:I

    .line 6515
    move-object/from16 v0, p0

    iget v3, v0, mUnrestrictedScreenHeight:I

    sub-int v3, v3, v44

    move-object/from16 v0, p0

    iput v3, v0, mUnrestrictedScreenHeight:I

    move-object/from16 v0, p0

    iput v3, v0, mRestrictedScreenHeight:I

    move-object/from16 v0, p0

    iput v3, v0, mRestrictedOverscanScreenHeight:I

    .line 6517
    move-object/from16 v0, p0

    iget v3, v0, mCurRight:I

    sub-int v3, v3, v45

    move-object/from16 v0, p0

    iput v3, v0, mCurRight:I

    move-object/from16 v0, p0

    iput v3, v0, mStableFullscreenRight:I

    move-object/from16 v0, p0

    iput v3, v0, mStableRight:I

    move-object/from16 v0, p0

    iput v3, v0, mContentRight:I

    move-object/from16 v0, p0

    iput v3, v0, mDockRight:I

    .line 6519
    move-object/from16 v0, p0

    iget v3, v0, mCurBottom:I

    sub-int v3, v3, v44

    move-object/from16 v0, p0

    iput v3, v0, mCurBottom:I

    move-object/from16 v0, p0

    iput v3, v0, mStableFullscreenBottom:I

    move-object/from16 v0, p0

    iput v3, v0, mStableBottom:I

    move-object/from16 v0, p0

    iput v3, v0, mContentBottom:I

    move-object/from16 v0, p0

    iput v3, v0, mDockBottom:I

    .line 6526
    .end local v44    # "mobileKeyboardBottom":I
    .end local v45    # "mobileKeyboardRight":I
    :cond_3e5
    move-object/from16 v0, p0

    iget-object v3, v0, mCarModeBar:Landroid/view/WindowManagerPolicy$WindowState;

    if-eqz v3, :cond_4be

    .line 6527
    const-string v3, "WindowManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "beginLayoutLw mCarModeBar = "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p0

    iget-object v5, v0, mCarModeBar:Landroid/view/WindowManagerPolicy$WindowState;

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v3, v4}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 6528
    packed-switch p4, :pswitch_data_980

    .line 6536
    :pswitch_40a
    const/4 v3, 0x1

    move-object/from16 v0, p0

    iput-boolean v3, v0, mCarModeBarOnBottom:Z

    .line 6537
    sget-object v3, mTmpCarModeFrame:Landroid/graphics/Rect;

    const/4 v4, 0x0

    move-object/from16 v0, p0

    iget v5, v0, mCarModeSize:I

    sub-int v5, p3, v5

    move/from16 v0, p2

    move/from16 v1, p3

    invoke-virtual {v3, v4, v5, v0, v1}, Landroid/graphics/Rect;->set(IIII)V

    .line 6541
    :goto_41f
    invoke-virtual/range {p0 .. p0}, isCarModeBarVisible()Z

    move-result v3

    if-eqz v3, :cond_4a4

    .line 6542
    move-object/from16 v0, p0

    iget-boolean v3, v0, mCarModeBarOnBottom:Z

    if-eqz v3, :cond_93d

    .line 6543
    move-object/from16 v0, p0

    iget v3, v0, mSystemBottom:I

    move-object/from16 v0, p0

    iget v4, v0, mCarModeSize:I

    sub-int/2addr v3, v4

    move-object/from16 v0, p0

    iput v3, v0, mSystemBottom:I

    .line 6544
    move-object/from16 v0, p0

    iget v3, v0, mUnrestrictedScreenHeight:I

    move-object/from16 v0, p0

    iget v4, v0, mCarModeSize:I

    sub-int/2addr v3, v4

    move-object/from16 v0, p0

    iput v3, v0, mUnrestrictedScreenHeight:I

    move-object/from16 v0, p0

    iput v3, v0, mRestrictedOverscanScreenHeight:I

    .line 6551
    :goto_449
    move-object/from16 v0, p0

    iget v3, v0, mUnrestrictedScreenLeft:I

    move-object/from16 v0, p0

    iput v3, v0, mRestrictedScreenLeft:I

    .line 6552
    move-object/from16 v0, p0

    iget v3, v0, mUnrestrictedScreenTop:I

    move-object/from16 v0, p0

    iput v3, v0, mRestrictedScreenTop:I

    .line 6553
    move-object/from16 v0, p0

    iget v3, v0, mUnrestrictedScreenWidth:I

    move-object/from16 v0, p0

    iput v3, v0, mRestrictedScreenWidth:I

    .line 6554
    move-object/from16 v0, p0

    iget v3, v0, mUnrestrictedScreenHeight:I

    move-object/from16 v0, p0

    iput v3, v0, mRestrictedScreenHeight:I

    .line 6556
    move-object/from16 v0, p0

    iget v3, v0, mUnrestrictedScreenLeft:I

    move-object/from16 v0, p0

    iput v3, v0, mCurLeft:I

    move-object/from16 v0, p0

    iput v3, v0, mStableFullscreenLeft:I

    move-object/from16 v0, p0

    iput v3, v0, mStableLeft:I

    move-object/from16 v0, p0

    iput v3, v0, mContentLeft:I

    move-object/from16 v0, p0

    iput v3, v0, mDockLeft:I

    .line 6558
    move-object/from16 v0, p0

    iget-boolean v3, v0, mCarModeBarOnBottom:Z

    if-eqz v3, :cond_4a4

    .line 6559
    move-object/from16 v0, p0

    iget v3, v0, mCurBottom:I

    move-object/from16 v0, p0

    iget v4, v0, mCarModeSize:I

    sub-int/2addr v3, v4

    move-object/from16 v0, p0

    iput v3, v0, mCurBottom:I

    move-object/from16 v0, p0

    iput v3, v0, mStableFullscreenBottom:I

    move-object/from16 v0, p0

    iput v3, v0, mStableBottom:I

    move-object/from16 v0, p0

    iput v3, v0, mContentBottom:I

    move-object/from16 v0, p0

    iput v3, v0, mDockBottom:I

    .line 6564
    :cond_4a4
    move-object/from16 v0, p0

    iget-object v9, v0, mCarModeBar:Landroid/view/WindowManagerPolicy$WindowState;

    sget-object v10, mTmpCarModeFrame:Landroid/graphics/Rect;

    sget-object v11, mTmpCarModeFrame:Landroid/graphics/Rect;

    sget-object v12, mTmpCarModeFrame:Landroid/graphics/Rect;

    sget-object v13, mTmpCarModeFrame:Landroid/graphics/Rect;

    sget-object v14, mTmpCarModeFrame:Landroid/graphics/Rect;

    new-instance v15, Landroid/graphics/Rect;

    invoke-direct {v15}, Landroid/graphics/Rect;-><init>()V

    sget-object v16, mTmpCarModeFrame:Landroid/graphics/Rect;

    const/16 v17, 0x0

    invoke-interface/range {v9 .. v17}, Landroid/view/WindowManagerPolicy$WindowState;->computeFrameLw(Landroid/graphics/Rect;Landroid/graphics/Rect;Landroid/graphics/Rect;Landroid/graphics/Rect;Landroid/graphics/Rect;Landroid/graphics/Rect;Landroid/graphics/Rect;Landroid/graphics/Rect;)V

    .line 6570
    :cond_4be
    if-eqz v43, :cond_722

    .line 6572
    move-object/from16 v0, p0

    iget v3, v0, mUnrestrictedScreenLeft:I

    move-object/from16 v0, v49

    iput v3, v0, Landroid/graphics/Rect;->left:I

    move-object/from16 v0, v35

    iput v3, v0, Landroid/graphics/Rect;->left:I

    move-object/from16 v0, v55

    iput v3, v0, Landroid/graphics/Rect;->left:I

    .line 6573
    move-object/from16 v0, p0

    iget v3, v0, mUnrestrictedScreenTop:I

    move-object/from16 v0, v49

    iput v3, v0, Landroid/graphics/Rect;->top:I

    move-object/from16 v0, v35

    iput v3, v0, Landroid/graphics/Rect;->top:I

    move-object/from16 v0, v55

    iput v3, v0, Landroid/graphics/Rect;->top:I

    .line 6574
    move-object/from16 v0, p0

    iget v3, v0, mUnrestrictedScreenWidth:I

    move-object/from16 v0, p0

    iget v4, v0, mUnrestrictedScreenLeft:I

    add-int/2addr v3, v4

    move-object/from16 v0, v49

    iput v3, v0, Landroid/graphics/Rect;->right:I

    move-object/from16 v0, v35

    iput v3, v0, Landroid/graphics/Rect;->right:I

    move-object/from16 v0, v55

    iput v3, v0, Landroid/graphics/Rect;->right:I

    .line 6575
    move-object/from16 v0, p0

    iget v3, v0, mUnrestrictedScreenHeight:I

    move-object/from16 v0, p0

    iget v4, v0, mUnrestrictedScreenTop:I

    add-int/2addr v3, v4

    move-object/from16 v0, v49

    iput v3, v0, Landroid/graphics/Rect;->bottom:I

    move-object/from16 v0, v35

    iput v3, v0, Landroid/graphics/Rect;->bottom:I

    move-object/from16 v0, v55

    iput v3, v0, Landroid/graphics/Rect;->bottom:I

    .line 6577
    move-object/from16 v0, p0

    iget v3, v0, mStableLeft:I

    move-object/from16 v0, v62

    iput v3, v0, Landroid/graphics/Rect;->left:I

    .line 6578
    move-object/from16 v0, p0

    iget v3, v0, mStableTop:I

    move-object/from16 v0, v62

    iput v3, v0, Landroid/graphics/Rect;->top:I

    .line 6579
    move-object/from16 v0, p0

    iget v3, v0, mStableRight:I

    move-object/from16 v0, v62

    iput v3, v0, Landroid/graphics/Rect;->right:I

    .line 6580
    move-object/from16 v0, p0

    iget v3, v0, mStableBottom:I

    move-object/from16 v0, v62

    iput v3, v0, Landroid/graphics/Rect;->bottom:I

    .line 6582
    move-object/from16 v0, p0

    iget-object v3, v0, mContext:Landroid/content/Context;

    invoke-static {v3}, Lcom/samsung/android/cocktailbar/CocktailBarFeatures;->isSystemBarType(Landroid/content/Context;)Z

    move-result v3

    if-eqz v3, :cond_57e

    .line 6584
    move-object/from16 v0, p0

    iget v3, v0, mOverscanScreenLeft:I

    move-object/from16 v0, v62

    iput v3, v0, Landroid/graphics/Rect;->left:I

    move-object/from16 v0, v35

    iput v3, v0, Landroid/graphics/Rect;->left:I

    move-object/from16 v0, v55

    iput v3, v0, Landroid/graphics/Rect;->left:I

    .line 6585
    move-object/from16 v0, p0

    iget v3, v0, mOverscanScreenTop:I

    move-object/from16 v0, v62

    iput v3, v0, Landroid/graphics/Rect;->top:I

    move-object/from16 v0, v35

    iput v3, v0, Landroid/graphics/Rect;->top:I

    move-object/from16 v0, v55

    iput v3, v0, Landroid/graphics/Rect;->top:I

    .line 6586
    move-object/from16 v0, p0

    iget v3, v0, mOverscanScreenLeft:I

    move-object/from16 v0, p0

    iget v4, v0, mOverscanScreenWidth:I

    add-int/2addr v3, v4

    move-object/from16 v0, v62

    iput v3, v0, Landroid/graphics/Rect;->right:I

    move-object/from16 v0, v35

    iput v3, v0, Landroid/graphics/Rect;->right:I

    move-object/from16 v0, v55

    iput v3, v0, Landroid/graphics/Rect;->right:I

    .line 6588
    move-object/from16 v0, p0

    iget v3, v0, mOverscanScreenTop:I

    move-object/from16 v0, p0

    iget v4, v0, mOverscanScreenHeight:I

    add-int/2addr v3, v4

    move-object/from16 v0, v62

    iput v3, v0, Landroid/graphics/Rect;->bottom:I

    move-object/from16 v0, v35

    iput v3, v0, Landroid/graphics/Rect;->bottom:I

    move-object/from16 v0, v55

    iput v3, v0, Landroid/graphics/Rect;->bottom:I

    .line 6592
    :cond_57e
    invoke-interface/range {v43 .. v43}, Landroid/view/WindowManagerPolicy$WindowState;->getSurfaceLayer()I

    move-result v3

    move-object/from16 v0, p0

    iput v3, v0, mStatusBarLayer:I

    move-object/from16 v9, v43

    move-object/from16 v10, v55

    move-object/from16 v11, v35

    move-object/from16 v12, v62

    move-object/from16 v13, v62

    move-object/from16 v14, v62

    move-object v15, v8

    move-object/from16 v16, v62

    move-object/from16 v17, v62

    .line 6595
    invoke-interface/range {v9 .. v17}, Landroid/view/WindowManagerPolicy$WindowState;->computeFrameLw(Landroid/graphics/Rect;Landroid/graphics/Rect;Landroid/graphics/Rect;Landroid/graphics/Rect;Landroid/graphics/Rect;Landroid/graphics/Rect;Landroid/graphics/Rect;Landroid/graphics/Rect;)V

    .line 6601
    move-object/from16 v0, p0

    iget-boolean v3, v0, mForceHideStatusBarForCocktail:Z

    if-nez v3, :cond_5ad

    .line 6602
    move-object/from16 v0, p0

    iget v3, v0, mUnrestrictedScreenTop:I

    move-object/from16 v0, p0

    iget v4, v0, mStatusBarHeight:I

    add-int/2addr v3, v4

    move-object/from16 v0, p0

    iput v3, v0, mStableTop:I

    .line 6606
    :cond_5ad
    const/high16 v3, 0x4000000

    and-int v3, v3, v58

    if-eqz v3, :cond_96e

    const/16 v56, 0x1

    .line 6607
    .local v56, "statusBarTransient":Z
    :goto_5b5
    const v3, 0x40008000    # 2.0078125f

    and-int v3, v3, v58

    if-eqz v3, :cond_972

    const/16 v57, 0x1

    .line 6609
    .local v57, "statusBarTranslucent":Z
    :goto_5be
    if-nez v39, :cond_5c6

    .line 6610
    invoke-direct/range {p0 .. p0}, areTranslucentBarsAllowed()Z

    move-result v3

    and-int v57, v57, v3

    .line 6619
    :cond_5c6
    invoke-interface/range {v43 .. v43}, Landroid/view/WindowManagerPolicy$WindowState;->isVisibleLw()Z

    move-result v3

    if-eqz v3, :cond_6e9

    if-nez v56, :cond_6e9

    if-nez v39, :cond_6e9

    .line 6623
    move-object/from16 v0, p0

    iget v3, v0, mUnrestrictedScreenTop:I

    move-object/from16 v0, p0

    iget v4, v0, mStatusBarHeight:I

    add-int/2addr v3, v4

    move-object/from16 v0, p0

    iput v3, v0, mDockTop:I

    .line 6627
    move-object/from16 v0, p0

    iget-object v3, v0, mMultiPhoneWindowManager:Lcom/android/server/policy/multiwindow/MultiPhoneWindowManager;

    invoke-virtual {v3}, Lcom/android/server/policy/multiwindow/MultiPhoneWindowManager;->isSplitTopApplicationWindow()Z

    move-result v3

    if-nez v3, :cond_5ed

    move-object/from16 v0, p0

    iget-boolean v3, v0, mForceHideStatusBarForCocktail:Z

    if-eqz v3, :cond_5fa

    .line 6630
    :cond_5ed
    move-object/from16 v0, p0

    iget v3, v0, mDockTop:I

    move-object/from16 v0, p0

    iget v4, v0, mStatusBarHeight:I

    sub-int/2addr v3, v4

    move-object/from16 v0, p0

    iput v3, v0, mDockTop:I

    .line 6634
    :cond_5fa
    move-object/from16 v0, p0

    iget v3, v0, mDockTop:I

    move-object/from16 v0, p0

    iput v3, v0, mCurTop:I

    move-object/from16 v0, p0

    iput v3, v0, mVoiceContentTop:I

    move-object/from16 v0, p0

    iput v3, v0, mContentTop:I

    .line 6635
    move-object/from16 v0, p0

    iget v3, v0, mDockBottom:I

    move-object/from16 v0, p0

    iput v3, v0, mCurBottom:I

    move-object/from16 v0, p0

    iput v3, v0, mVoiceContentBottom:I

    move-object/from16 v0, p0

    iput v3, v0, mContentBottom:I

    .line 6636
    move-object/from16 v0, p0

    iget v3, v0, mDockLeft:I

    move-object/from16 v0, p0

    iput v3, v0, mCurLeft:I

    move-object/from16 v0, p0

    iput v3, v0, mVoiceContentLeft:I

    move-object/from16 v0, p0

    iput v3, v0, mContentLeft:I

    .line 6637
    move-object/from16 v0, p0

    iget v3, v0, mDockRight:I

    move-object/from16 v0, p0

    iput v3, v0, mCurRight:I

    move-object/from16 v0, p0

    iput v3, v0, mVoiceContentRight:I

    move-object/from16 v0, p0

    iput v3, v0, mContentRight:I

    .line 6639
    sget-boolean v3, DEBUG_LAYOUT:Z

    if-eqz v3, :cond_6e9

    const-string v3, "WindowManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Status bar: "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string/jumbo v5, "dock=[%d,%d][%d,%d] content=[%d,%d][%d,%d] cur=[%d,%d][%d,%d]"

    const/16 v6, 0xc

    new-array v6, v6, [Ljava/lang/Object;

    const/4 v7, 0x0

    move-object/from16 v0, p0

    iget v9, v0, mDockLeft:I

    invoke-static {v9}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v9

    aput-object v9, v6, v7

    const/4 v7, 0x1

    move-object/from16 v0, p0

    iget v9, v0, mDockTop:I

    invoke-static {v9}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v9

    aput-object v9, v6, v7

    const/4 v7, 0x2

    move-object/from16 v0, p0

    iget v9, v0, mDockRight:I

    invoke-static {v9}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v9

    aput-object v9, v6, v7

    const/4 v7, 0x3

    move-object/from16 v0, p0

    iget v9, v0, mDockBottom:I

    invoke-static {v9}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v9

    aput-object v9, v6, v7

    const/4 v7, 0x4

    move-object/from16 v0, p0

    iget v9, v0, mContentLeft:I

    invoke-static {v9}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v9

    aput-object v9, v6, v7

    const/4 v7, 0x5

    move-object/from16 v0, p0

    iget v9, v0, mContentTop:I

    invoke-static {v9}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v9

    aput-object v9, v6, v7

    const/4 v7, 0x6

    move-object/from16 v0, p0

    iget v9, v0, mContentRight:I

    invoke-static {v9}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v9

    aput-object v9, v6, v7

    const/4 v7, 0x7

    move-object/from16 v0, p0

    iget v9, v0, mContentBottom:I

    invoke-static {v9}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v9

    aput-object v9, v6, v7

    const/16 v7, 0x8

    move-object/from16 v0, p0

    iget v9, v0, mCurLeft:I

    invoke-static {v9}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v9

    aput-object v9, v6, v7

    const/16 v7, 0x9

    move-object/from16 v0, p0

    iget v9, v0, mCurTop:I

    invoke-static {v9}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v9

    aput-object v9, v6, v7

    const/16 v7, 0xa

    move-object/from16 v0, p0

    iget v9, v0, mCurRight:I

    invoke-static {v9}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v9

    aput-object v9, v6, v7

    const/16 v7, 0xb

    move-object/from16 v0, p0

    iget v9, v0, mCurBottom:I

    invoke-static {v9}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v9

    aput-object v9, v6, v7

    invoke-static {v5, v6}, Ljava/lang/String;->format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v5

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v3, v4}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 6646
    :cond_6e9
    invoke-interface/range {v43 .. v43}, Landroid/view/WindowManagerPolicy$WindowState;->isVisibleLw()Z

    move-result v3

    if-eqz v3, :cond_714

    invoke-interface/range {v43 .. v43}, Landroid/view/WindowManagerPolicy$WindowState;->isAnimatingLw()Z

    move-result v3

    if-nez v3, :cond_714

    if-nez v56, :cond_714

    if-nez v57, :cond_714

    if-nez v39, :cond_714

    move-object/from16 v0, p0

    iget-object v3, v0, mStatusBarController:Lcom/android/server/policy/StatusBarController;

    move/from16 v0, p5

    invoke-virtual {v3, v0}, Lcom/android/server/policy/StatusBarController;->wasRecentlyTranslucent(I)Z

    move-result v3

    if-nez v3, :cond_714

    .line 6652
    move-object/from16 v0, p0

    iget v3, v0, mUnrestrictedScreenTop:I

    move-object/from16 v0, p0

    iget v4, v0, mStatusBarHeight:I

    add-int/2addr v3, v4

    move-object/from16 v0, p0

    iput v3, v0, mSystemTop:I

    .line 6654
    :cond_714
    move-object/from16 v0, p0

    iget-object v3, v0, mStatusBarController:Lcom/android/server/policy/StatusBarController;

    move/from16 v0, p5

    invoke-virtual {v3, v0}, Lcom/android/server/policy/StatusBarController;->checkHiddenLw(I)Z

    move-result v3

    if-eqz v3, :cond_722

    .line 6655
    const/16 v61, 0x1

    .line 6658
    .end local v56    # "statusBarTransient":Z
    .end local v57    # "statusBarTranslucent":Z
    :cond_722
    if-eqz v61, :cond_727

    .line 6664
    invoke-direct/range {p0 .. p0}, updateSystemUiVisibilityLw()I

    .line 6673
    .end local v2    # "mNavigationBar":Landroid/view/WindowManagerPolicy$WindowState;
    .end local v36    # "immersive":Z
    .end local v37    # "immersiveSticky":Z
    .end local v38    # "isCoverShowing":Z
    .end local v39    # "isKeyguardShowing":Z
    .end local v41    # "mInputConsumer":Landroid/view/WindowManagerPolicy$InputConsumer;
    .end local v42    # "mLastSystemUiFlags":I
    .end local v43    # "mStatusBar":Landroid/view/WindowManagerPolicy$WindowState;
    .end local v46    # "navAllowedHidden":Z
    .end local v47    # "navTranslucent":Z
    .end local v48    # "navVisible":Z
    .end local v58    # "sysui":I
    .end local v61    # "updateSysUiVisibility":Z
    :cond_727
    invoke-virtual/range {p0 .. p0}, isForceHideBySViewCover()Z

    move-result v3

    if-eqz v3, :cond_7bc

    if-eqz p1, :cond_7bc

    .line 6674
    move-object/from16 v0, p0

    iget v13, v0, mSystemLeft:I

    move-object/from16 v0, p0

    iget v14, v0, mSystemTop:I

    move-object/from16 v0, p0

    iget v15, v0, mSystemRight:I

    move-object/from16 v0, p0

    iget v0, v0, mSystemBottom:I

    move/from16 v16, v0

    move-object/from16 v0, p0

    iget v0, v0, mUnrestrictedScreenLeft:I

    move/from16 v17, v0

    move-object/from16 v0, p0

    iget v0, v0, mUnrestrictedScreenTop:I

    move/from16 v18, v0

    move-object/from16 v0, p0

    iget v0, v0, mUnrestrictedScreenWidth:I

    move/from16 v19, v0

    move-object/from16 v0, p0

    iget v0, v0, mUnrestrictedScreenHeight:I

    move/from16 v20, v0

    move-object/from16 v0, p0

    iget v0, v0, mStableFullscreenLeft:I

    move/from16 v21, v0

    move-object/from16 v0, p0

    iget v0, v0, mStableFullscreenTop:I

    move/from16 v22, v0

    move-object/from16 v0, p0

    iget v0, v0, mStableFullscreenRight:I

    move/from16 v23, v0

    move-object/from16 v0, p0

    iget v0, v0, mStableFullscreenBottom:I

    move/from16 v24, v0

    move-object/from16 v0, p0

    iget v0, v0, mStableLeft:I

    move/from16 v25, v0

    move-object/from16 v0, p0

    iget v0, v0, mStableTop:I

    move/from16 v26, v0

    move-object/from16 v0, p0

    iget v0, v0, mStableRight:I

    move/from16 v27, v0

    move-object/from16 v0, p0

    iget v0, v0, mStableBottom:I

    move/from16 v28, v0

    move-object/from16 v0, p0

    iget v0, v0, mDockLeft:I

    move/from16 v29, v0

    move-object/from16 v0, p0

    iget v0, v0, mDockTop:I

    move/from16 v30, v0

    move-object/from16 v0, p0

    iget v0, v0, mDockRight:I

    move/from16 v31, v0

    move-object/from16 v0, p0

    iget v0, v0, mDockBottom:I

    move/from16 v32, v0

    move-object/from16 v0, p0

    iget-object v3, v0, mCoverState:Lcom/samsung/android/cover/CoverState;

    iget v0, v3, Lcom/samsung/android/cover/CoverState;->heightPixel:I

    move/from16 v33, v0

    move-object/from16 v0, p0

    iget-object v3, v0, mCoverState:Lcom/samsung/android/cover/CoverState;

    iget v0, v3, Lcom/samsung/android/cover/CoverState;->widthPixel:I

    move/from16 v34, v0

    move-object/from16 v9, p0

    move/from16 v10, p4

    move/from16 v11, p2

    move/from16 v12, p3

    invoke-direct/range {v9 .. v34}, prepareSViewCoverLayout(IIIIIIIIIIIIIIIIIIIIIIIII)V

    .line 6686
    :cond_7bc
    return-void

    .line 6265
    .end local v8    # "dcf":Landroid/graphics/Rect;
    .end local v35    # "df":Landroid/graphics/Rect;
    .end local v49    # "of":Landroid/graphics/Rect;
    .end local v50    # "osf":Landroid/graphics/Rect;
    .end local v51    # "overscanBottom":I
    .end local v52    # "overscanLeft":I
    .end local v53    # "overscanRight":I
    .end local v54    # "overscanTop":I
    .end local v55    # "pf":Landroid/graphics/Rect;
    .end local v62    # "vf":Landroid/graphics/Rect;
    :pswitch_7bd
    move-object/from16 v0, p0

    iget v0, v0, mOverscanTop:I

    move/from16 v52, v0

    .line 6266
    .restart local v52    # "overscanLeft":I
    move-object/from16 v0, p0

    iget v0, v0, mOverscanRight:I

    move/from16 v54, v0

    .line 6267
    .restart local v54    # "overscanTop":I
    move-object/from16 v0, p0

    iget v0, v0, mOverscanBottom:I

    move/from16 v53, v0

    .line 6268
    .restart local v53    # "overscanRight":I
    move-object/from16 v0, p0

    iget v0, v0, mOverscanLeft:I

    move/from16 v51, v0

    .line 6269
    .restart local v51    # "overscanBottom":I
    goto/16 :goto_23

    .line 6271
    .end local v51    # "overscanBottom":I
    .end local v52    # "overscanLeft":I
    .end local v53    # "overscanRight":I
    .end local v54    # "overscanTop":I
    :pswitch_7d7
    move-object/from16 v0, p0

    iget v0, v0, mOverscanRight:I

    move/from16 v52, v0

    .line 6272
    .restart local v52    # "overscanLeft":I
    move-object/from16 v0, p0

    iget v0, v0, mOverscanBottom:I

    move/from16 v54, v0

    .line 6273
    .restart local v54    # "overscanTop":I
    move-object/from16 v0, p0

    iget v0, v0, mOverscanLeft:I

    move/from16 v53, v0

    .line 6274
    .restart local v53    # "overscanRight":I
    move-object/from16 v0, p0

    iget v0, v0, mOverscanTop:I

    move/from16 v51, v0

    .line 6275
    .restart local v51    # "overscanBottom":I
    goto/16 :goto_23

    .line 6277
    .end local v51    # "overscanBottom":I
    .end local v52    # "overscanLeft":I
    .end local v53    # "overscanRight":I
    .end local v54    # "overscanTop":I
    :pswitch_7f1
    move-object/from16 v0, p0

    iget v0, v0, mOverscanBottom:I

    move/from16 v52, v0

    .line 6278
    .restart local v52    # "overscanLeft":I
    move-object/from16 v0, p0

    iget v0, v0, mOverscanLeft:I

    move/from16 v54, v0

    .line 6279
    .restart local v54    # "overscanTop":I
    move-object/from16 v0, p0

    iget v0, v0, mOverscanTop:I

    move/from16 v53, v0

    .line 6280
    .restart local v53    # "overscanRight":I
    move-object/from16 v0, p0

    iget v0, v0, mOverscanRight:I

    move/from16 v51, v0

    .line 6281
    .restart local v51    # "overscanBottom":I
    goto/16 :goto_23

    .line 6290
    .end local v51    # "overscanBottom":I
    .end local v52    # "overscanLeft":I
    .end local v53    # "overscanRight":I
    .end local v54    # "overscanTop":I
    :cond_80b
    const/16 v52, 0x0

    .line 6291
    .restart local v52    # "overscanLeft":I
    const/16 v54, 0x0

    .line 6292
    .restart local v54    # "overscanTop":I
    const/16 v53, 0x0

    .line 6293
    .restart local v53    # "overscanRight":I
    const/16 v51, 0x0

    .restart local v51    # "overscanBottom":I
    goto/16 :goto_23

    .line 6366
    .restart local v2    # "mNavigationBar":Landroid/view/WindowManagerPolicy$WindowState;
    .restart local v8    # "dcf":Landroid/graphics/Rect;
    .restart local v35    # "df":Landroid/graphics/Rect;
    .restart local v41    # "mInputConsumer":Landroid/view/WindowManagerPolicy$InputConsumer;
    .restart local v42    # "mLastSystemUiFlags":I
    .restart local v43    # "mStatusBar":Landroid/view/WindowManagerPolicy$WindowState;
    .restart local v49    # "of":Landroid/graphics/Rect;
    .restart local v50    # "osf":Landroid/graphics/Rect;
    .restart local v55    # "pf":Landroid/graphics/Rect;
    .restart local v58    # "sysui":I
    .restart local v62    # "vf":Landroid/graphics/Rect;
    :cond_815
    const/16 v48, 0x0

    goto/16 :goto_1a6

    .line 6367
    .restart local v48    # "navVisible":Z
    :cond_819
    const/16 v47, 0x0

    goto/16 :goto_1af

    .line 6369
    .restart local v47    # "navTranslucent":Z
    :cond_81d
    const/16 v36, 0x0

    goto/16 :goto_1b7

    .line 6370
    .restart local v36    # "immersive":Z
    :cond_821
    const/16 v37, 0x0

    goto/16 :goto_1bf

    .line 6371
    .restart local v37    # "immersiveSticky":Z
    :cond_825
    const/16 v46, 0x0

    goto/16 :goto_1c5

    .line 6372
    .restart local v46    # "navAllowedHidden":Z
    :cond_829
    const/4 v3, 0x0

    goto/16 :goto_1c8

    .line 6373
    :cond_82c
    const/16 v39, 0x0

    goto/16 :goto_1de

    .line 6375
    .restart local v39    # "isKeyguardShowing":Z
    :cond_830
    const/16 v38, 0x0

    goto/16 :goto_1ec

    .line 6396
    .restart local v38    # "isCoverShowing":Z
    :cond_834
    if-nez v41, :cond_202

    .line 6404
    move-object/from16 v0, p0

    iget-object v3, v0, mWindowManagerFuncs:Landroid/view/WindowManagerPolicy$WindowManagerFuncs;

    move-object/from16 v0, p0

    iget-object v4, v0, mHandler:Landroid/os/Handler;

    invoke-virtual {v4}, Landroid/os/Handler;->getLooper()Landroid/os/Looper;

    move-result-object v4

    move-object/from16 v0, p0

    iget-object v5, v0, mHideNavInputEventReceiverFactory:Landroid/view/InputEventReceiver$Factory;

    invoke-interface {v3, v4, v5}, Landroid/view/WindowManagerPolicy$WindowManagerFuncs;->addInputConsumer(Landroid/os/Looper;Landroid/view/InputEventReceiver$Factory;)Landroid/view/WindowManagerPolicy$InputConsumer;

    move-result-object v3

    move-object/from16 v0, p0

    iput-object v3, v0, mInputConsumer:Landroid/view/WindowManagerPolicy$InputConsumer;

    goto/16 :goto_202

    .line 6412
    :cond_850
    const/4 v3, 0x0

    goto/16 :goto_209

    .line 6421
    .restart local v60    # "transientNavBarShowing":Z
    .restart local v61    # "updateSysUiVisibility":Z
    :cond_853
    const/4 v3, 0x0

    goto/16 :goto_226

    .line 6430
    .restart local v59    # "top":I
    :cond_856
    if-eqz v48, :cond_887

    .line 6431
    move-object/from16 v0, p0

    iget-object v3, v0, mNavigationBarController:Lcom/android/server/policy/BarController;

    const/4 v4, 0x1

    const/4 v5, 0x1

    move/from16 v0, p5

    invoke-virtual {v3, v4, v5, v0}, Lcom/android/server/policy/BarController;->setBarShowingLw(ZZI)Z

    .line 6432
    sget-object v3, mTmpNavigationFrame:Landroid/graphics/Rect;

    iget v3, v3, Landroid/graphics/Rect;->top:I

    move-object/from16 v0, p0

    iput v3, v0, mDockBottom:I

    .line 6433
    move-object/from16 v0, p0

    iget v3, v0, mDockBottom:I

    move-object/from16 v0, p0

    iget v4, v0, mRestrictedScreenTop:I

    sub-int/2addr v3, v4

    move-object/from16 v0, p0

    iput v3, v0, mRestrictedScreenHeight:I

    .line 6434
    move-object/from16 v0, p0

    iget v3, v0, mDockBottom:I

    move-object/from16 v0, p0

    iget v4, v0, mRestrictedOverscanScreenTop:I

    sub-int/2addr v3, v4

    move-object/from16 v0, p0

    iput v3, v0, mRestrictedOverscanScreenHeight:I

    goto/16 :goto_25f

    .line 6437
    :cond_887
    move-object/from16 v0, p0

    iget-object v3, v0, mNavigationBarController:Lcom/android/server/policy/BarController;

    const/4 v4, 0x0

    const/4 v5, 0x1

    move/from16 v0, p5

    invoke-virtual {v3, v4, v5, v0}, Lcom/android/server/policy/BarController;->setBarShowingLw(ZZI)Z

    goto/16 :goto_25f

    .line 6449
    .end local v59    # "top":I
    :cond_894
    sub-int v3, p2, v53

    move-object/from16 v0, p0

    iget-object v4, v0, mNavigationBarWidthForRotation:[I

    aget v4, v4, p4

    sub-int v40, v3, v4

    .line 6451
    .local v40, "left":I
    sget-object v3, mTmpNavigationFrame:Landroid/graphics/Rect;

    const/4 v4, 0x0

    sub-int v5, p2, v53

    move/from16 v0, v40

    move/from16 v1, p3

    invoke-virtual {v3, v0, v4, v5, v1}, Landroid/graphics/Rect;->set(IIII)V

    .line 6452
    sget-object v3, mTmpNavigationFrame:Landroid/graphics/Rect;

    iget v3, v3, Landroid/graphics/Rect;->left:I

    move-object/from16 v0, p0

    iput v3, v0, mStableFullscreenRight:I

    move-object/from16 v0, p0

    iput v3, v0, mStableRight:I

    .line 6453
    if-eqz v60, :cond_8e5

    .line 6454
    move-object/from16 v0, p0

    iget-object v3, v0, mNavigationBarController:Lcom/android/server/policy/BarController;

    const/4 v4, 0x1

    const/4 v5, 0x1

    move/from16 v0, p5

    invoke-virtual {v3, v4, v5, v0}, Lcom/android/server/policy/BarController;->setBarShowingLw(ZZI)Z

    .line 6464
    :goto_8c3
    if-eqz v48, :cond_27f

    if-nez v47, :cond_27f

    if-nez v46, :cond_27f

    invoke-interface {v2}, Landroid/view/WindowManagerPolicy$WindowState;->isAnimatingLw()Z

    move-result v3

    if-nez v3, :cond_27f

    move-object/from16 v0, p0

    iget-object v3, v0, mNavigationBarController:Lcom/android/server/policy/BarController;

    move/from16 v0, p5

    invoke-virtual {v3, v0}, Lcom/android/server/policy/BarController;->wasRecentlyTranslucent(I)Z

    move-result v3

    if-nez v3, :cond_27f

    .line 6470
    sget-object v3, mTmpNavigationFrame:Landroid/graphics/Rect;

    iget v3, v3, Landroid/graphics/Rect;->left:I

    move-object/from16 v0, p0

    iput v3, v0, mSystemRight:I

    goto/16 :goto_27f

    .line 6455
    :cond_8e5
    if-eqz v48, :cond_915

    .line 6456
    move-object/from16 v0, p0

    iget-object v3, v0, mNavigationBarController:Lcom/android/server/policy/BarController;

    const/4 v4, 0x1

    const/4 v5, 0x1

    move/from16 v0, p5

    invoke-virtual {v3, v4, v5, v0}, Lcom/android/server/policy/BarController;->setBarShowingLw(ZZI)Z

    .line 6457
    sget-object v3, mTmpNavigationFrame:Landroid/graphics/Rect;

    iget v3, v3, Landroid/graphics/Rect;->left:I

    move-object/from16 v0, p0

    iput v3, v0, mDockRight:I

    .line 6458
    move-object/from16 v0, p0

    iget v3, v0, mDockRight:I

    move-object/from16 v0, p0

    iget v4, v0, mRestrictedScreenLeft:I

    sub-int/2addr v3, v4

    move-object/from16 v0, p0

    iput v3, v0, mRestrictedScreenWidth:I

    .line 6459
    move-object/from16 v0, p0

    iget v3, v0, mDockRight:I

    move-object/from16 v0, p0

    iget v4, v0, mRestrictedOverscanScreenLeft:I

    sub-int/2addr v3, v4

    move-object/from16 v0, p0

    iput v3, v0, mRestrictedOverscanScreenWidth:I

    goto :goto_8c3

    .line 6462
    :cond_915
    move-object/from16 v0, p0

    iget-object v3, v0, mNavigationBarController:Lcom/android/server/policy/BarController;

    const/4 v4, 0x0

    const/4 v5, 0x1

    move/from16 v0, p5

    invoke-virtual {v3, v4, v5, v0}, Lcom/android/server/policy/BarController;->setBarShowingLw(ZZI)Z

    goto :goto_8c3

    .line 6507
    .end local v40    # "left":I
    .end local v60    # "transientNavBarShowing":Z
    .restart local v44    # "mobileKeyboardBottom":I
    .restart local v45    # "mobileKeyboardRight":I
    :cond_921
    move-object/from16 v0, p0

    iget v0, v0, mMobileKeyboardHeight:I

    move/from16 v45, v0

    goto/16 :goto_379

    .line 6531
    .end local v44    # "mobileKeyboardBottom":I
    .end local v45    # "mobileKeyboardRight":I
    :pswitch_929
    const/4 v3, 0x0

    move-object/from16 v0, p0

    iput-boolean v3, v0, mCarModeBarOnBottom:Z

    .line 6532
    sget-object v3, mTmpCarModeFrame:Landroid/graphics/Rect;

    const/4 v4, 0x0

    const/4 v5, 0x0

    move-object/from16 v0, p0

    iget v6, v0, mCarModeSize:I

    move/from16 v0, p3

    invoke-virtual {v3, v4, v5, v6, v0}, Landroid/graphics/Rect;->set(IIII)V

    goto/16 :goto_41f

    .line 6546
    :cond_93d
    move-object/from16 v0, p0

    iget v3, v0, mSystemLeft:I

    move-object/from16 v0, p0

    iget v4, v0, mCarModeSize:I

    add-int/2addr v3, v4

    move-object/from16 v0, p0

    iput v3, v0, mSystemLeft:I

    .line 6547
    move-object/from16 v0, p0

    iget v3, v0, mUnrestrictedScreenLeft:I

    move-object/from16 v0, p0

    iget v4, v0, mCarModeSize:I

    add-int/2addr v3, v4

    move-object/from16 v0, p0

    iput v3, v0, mUnrestrictedScreenLeft:I

    move-object/from16 v0, p0

    iput v3, v0, mRestrictedOverscanScreenLeft:I

    .line 6548
    move-object/from16 v0, p0

    iget v3, v0, mUnrestrictedScreenWidth:I

    move-object/from16 v0, p0

    iget v4, v0, mCarModeSize:I

    sub-int/2addr v3, v4

    move-object/from16 v0, p0

    iput v3, v0, mUnrestrictedScreenWidth:I

    move-object/from16 v0, p0

    iput v3, v0, mRestrictedOverscanScreenWidth:I

    goto/16 :goto_449

    .line 6606
    :cond_96e
    const/16 v56, 0x0

    goto/16 :goto_5b5

    .line 6607
    .restart local v56    # "statusBarTransient":Z
    :cond_972
    const/16 v57, 0x0

    goto/16 :goto_5be

    .line 6263
    :pswitch_data_976
    .packed-switch 0x1
        :pswitch_7bd
        :pswitch_7d7
        :pswitch_7f1
    .end packed-switch

    .line 6528
    :pswitch_data_980
    .packed-switch 0x1
        :pswitch_929
        :pswitch_40a
        :pswitch_929
    .end packed-switch
.end method

.method public beginPostLayoutPolicyLw(II)V
    .registers 5
    .param p1, "displayWidth"    # I
    .param p2, "displayHeight"    # I

    .prologue
    .line 7522
    const/4 v0, 0x0

    const/4 v1, 0x1

    invoke-virtual {p0, p1, p2, v0, v1}, beginPostLayoutPolicyLw(IIIZ)V

    .line 7523
    return-void
.end method

.method public beginPostLayoutPolicyLw(IIIZ)V
    .registers 9
    .param p1, "displayWidth"    # I
    .param p2, "displayHeight"    # I
    .param p3, "displayId"    # I
    .param p4, "isBuiltInDisplay"    # Z

    .prologue
    const/4 v1, 0x1

    const/4 v3, 0x0

    const/4 v2, 0x0

    .line 7536
    iput-object v3, p0, mTopFullscreenOpaqueWindowState:Landroid/view/WindowManagerPolicy$WindowState;

    .line 7537
    iput-object v3, p0, mTopFullscreenOpaqueOrDimmingWindowState:Landroid/view/WindowManagerPolicy$WindowState;

    .line 7538
    iput-object v3, p0, mWinShowWhenLocked:Landroid/view/WindowManagerPolicy$WindowState;

    .line 7540
    iget-object v0, p0, mAppsToBeHidden:Ljava/util/HashSet;

    invoke-virtual {v0}, Ljava/util/HashSet;->clear()V

    .line 7541
    iget-object v0, p0, mAppsThatDismissKeyguard:Ljava/util/HashSet;

    invoke-virtual {v0}, Ljava/util/HashSet;->clear()V

    .line 7542
    iput-boolean v2, p0, mForceStatusBar:Z

    .line 7543
    iput-boolean v2, p0, mForceStatusBarFromKeyguard:Z

    .line 7544
    iput-boolean v2, p0, mForceStatusBarTransparent:Z

    .line 7545
    iput-boolean v2, p0, mForcingShowNavBar:Z

    .line 7546
    const/4 v0, -0x1

    iput v0, p0, mForcingShowNavBarLayer:I

    .line 7548
    iput-boolean v2, p0, mHideSDKeyguard:Z

    .line 7549
    iput-boolean v2, p0, mHideLockScreen:Z

    .line 7550
    iput-boolean v2, p0, mAllowLockscreenWhenOn:Z

    .line 7551
    iput v2, p0, mDismissKeyguard:I

    .line 7552
    iput-boolean v2, p0, mShowingLockscreen:Z

    .line 7553
    iput-boolean v2, p0, mShowingDream:Z

    .line 7554
    iput-object v3, p0, mWinShowWhenLocked:Landroid/view/WindowManagerPolicy$WindowState;

    .line 7555
    invoke-virtual {p0}, isKeyguardSecure()Z

    move-result v0

    iput-boolean v0, p0, mKeyguardSecure:Z

    .line 7556
    iget-boolean v0, p0, mKeyguardSecure:Z

    if-eqz v0, :cond_80

    iget-object v0, p0, mKeyguardDelegate:Lcom/android/server/policy/keyguard/KeyguardServiceDelegate;

    if-eqz v0, :cond_80

    iget-object v0, p0, mKeyguardDelegate:Lcom/android/server/policy/keyguard/KeyguardServiceDelegate;

    invoke-virtual {v0}, Lcom/android/server/policy/keyguard/KeyguardServiceDelegate;->isShowing()Z

    move-result v0

    if-eqz v0, :cond_80

    move v0, v1

    :goto_43
    iput-boolean v0, p0, mKeyguardSecureIncludingHidden:Z

    .line 7561
    iget-object v0, p0, mAppsShowWhenLocked:Ljava/util/ArrayList;

    invoke-virtual {v0}, Ljava/util/ArrayList;->clear()V

    .line 7566
    iget-object v0, p0, mAppsToBeHiddenBySViewCover:Ljava/util/HashSet;

    invoke-virtual {v0}, Ljava/util/HashSet;->clear()V

    .line 7567
    iput-boolean v2, p0, mForceStatusBarFromSViewCover:Z

    .line 7568
    iput-boolean v2, p0, mShowingSViewCover:Z

    .line 7569
    iput-object v3, p0, mHideSViewCoverWindowState:Landroid/view/WindowManagerPolicy$WindowState;

    .line 7570
    iput v2, p0, mHideSViewCover:I

    .line 7571
    iput-boolean v2, p0, mHideLockScreenByCover:Z

    .line 7572
    iget-object v0, p0, mCoverState:Lcom/samsung/android/cover/CoverState;

    if-eqz v0, :cond_65

    iget-object v0, p0, mCoverState:Lcom/samsung/android/cover/CoverState;

    iget-boolean v0, v0, Lcom/samsung/android/cover/CoverState;->attached:Z

    if-nez v0, :cond_65

    .line 7573
    iput-boolean v2, p0, mLastCoverAppCovered:Z

    .line 7580
    :cond_65
    iget-object v0, p0, mMultiPhoneWindowManager:Lcom/android/server/policy/multiwindow/MultiPhoneWindowManager;

    invoke-virtual {v0}, Lcom/android/server/policy/multiwindow/MultiPhoneWindowManager;->beginPostLayoutPolicyLw()V

    .line 7586
    iget-object v0, p0, mContext:Landroid/content/Context;

    invoke-static {v0}, Lcom/samsung/android/cocktailbar/CocktailBarFeatures;->isSystemBarType(Landroid/content/Context;)Z

    move-result v0

    if-eqz v0, :cond_77

    .line 7587
    iget-object v0, p0, mCocktailPhoneWindowManager:Lcom/android/server/policy/cocktail/CocktailPhoneWindowManager;

    invoke-virtual {v0}, Lcom/android/server/policy/cocktail/CocktailPhoneWindowManager;->beginPostLayoutPolicyLw()V

    .line 7601
    :cond_77
    iget-boolean v0, p0, mWatchLaunching:Z

    if-eqz v0, :cond_7d

    .line 7602
    iput-boolean v1, p0, mHideLockScreen:Z

    .line 7605
    :cond_7d
    iput-object v3, p0, mFakeFocusedWindow:Landroid/view/WindowManagerPolicy$WindowState;

    .line 7606
    return-void

    :cond_80
    move v0, v2

    .line 7556
    goto :goto_43
.end method

.method public canBeForceHidden(Landroid/view/WindowManagerPolicy$WindowState;Landroid/view/WindowManager$LayoutParams;)Z
    .registers 7
    .param p1, "win"    # Landroid/view/WindowManagerPolicy$WindowState;
    .param p2, "attrs"    # Landroid/view/WindowManager$LayoutParams;

    .prologue
    const/4 v0, 0x1

    const/4 v1, 0x0

    .line 4142
    iget v2, p2, Landroid/view/WindowManager$LayoutParams;->type:I

    sparse-switch v2, :sswitch_data_1c

    .line 4174
    invoke-interface {p1}, Landroid/view/WindowManagerPolicy$WindowState;->getBaseType()I

    move-result v2

    invoke-virtual {p0, v2}, windowTypeToLayerLw(I)I

    move-result v2

    const/16 v3, 0x7d0

    invoke-virtual {p0, v3}, windowTypeToLayerLw(I)I

    move-result v3

    if-ge v2, v3, :cond_1a

    :goto_17
    :sswitch_17
    return v0

    :sswitch_18
    move v0, v1

    .line 4160
    goto :goto_17

    :cond_1a
    move v0, v1

    .line 4174
    goto :goto_17

    .line 4142
    :sswitch_data_1c
    .sparse-switch
        0x7d0 -> :sswitch_18
        0x7d9 -> :sswitch_17
        0x7dd -> :sswitch_18
        0x7e3 -> :sswitch_18
        0x7e7 -> :sswitch_18
        0x7ed -> :sswitch_18
        0x832 -> :sswitch_18
        0x833 -> :sswitch_18
        0x898 -> :sswitch_18
        0x899 -> :sswitch_18
        0x8ac -> :sswitch_18
        0x8ad -> :sswitch_18
        0x8b2 -> :sswitch_17
        0x8de -> :sswitch_17
        0x8df -> :sswitch_17
    .end sparse-switch
.end method

.method public canBeForceHiddenByNightClock(Landroid/view/WindowManagerPolicy$WindowState;Landroid/view/WindowManager$LayoutParams;)Z
    .registers 7
    .param p1, "win"    # Landroid/view/WindowManagerPolicy$WindowState;
    .param p2, "attrs"    # Landroid/view/WindowManager$LayoutParams;

    .prologue
    const/4 v0, 0x1

    const/4 v1, 0x0

    .line 13206
    iget v2, p2, Landroid/view/WindowManager$LayoutParams;->type:I

    sparse-switch v2, :sswitch_data_30

    .line 13219
    invoke-interface {p1}, Landroid/view/WindowManagerPolicy$WindowState;->getAppToken()Landroid/view/IApplicationToken;

    move-result-object v2

    if-eqz v2, :cond_16

    iget v2, p2, Landroid/view/WindowManager$LayoutParams;->flags:I

    const/high16 v3, 0x100000

    and-int/2addr v2, v3

    if-eqz v2, :cond_16

    move v1, v0

    .line 13228
    :cond_15
    :goto_15
    :sswitch_15
    return v1

    .line 13221
    :cond_16
    invoke-interface {p1}, Landroid/view/WindowManagerPolicy$WindowState;->getAppToken()Landroid/view/IApplicationToken;

    move-result-object v2

    if-nez v2, :cond_15

    .line 13228
    invoke-interface {p1}, Landroid/view/WindowManagerPolicy$WindowState;->getBaseType()I

    move-result v2

    invoke-virtual {p0, v2}, windowTypeToLayerLw(I)I

    move-result v2

    const/16 v3, 0x7d0

    invoke-virtual {p0, v3}, windowTypeToLayerLw(I)I

    move-result v3

    if-gt v2, v3, :cond_2e

    :goto_2c
    move v1, v0

    goto :goto_15

    :cond_2e
    move v0, v1

    goto :goto_2c

    .line 13206
    :sswitch_data_30
    .sparse-switch
        0x7dd -> :sswitch_15
        0x7e7 -> :sswitch_15
        0x7ed -> :sswitch_15
        0x833 -> :sswitch_15
        0x8ac -> :sswitch_15
        0x8ad -> :sswitch_15
        0x8b1 -> :sswitch_15
        0x8de -> :sswitch_15
        0x8df -> :sswitch_15
    .end sparse-switch
.end method

.method public canBeForceHiddenBySViewCover(Landroid/view/WindowManagerPolicy$WindowState;Landroid/view/WindowManager$LayoutParams;)Z
    .registers 8
    .param p1, "win"    # Landroid/view/WindowManagerPolicy$WindowState;
    .param p2, "attrs"    # Landroid/view/WindowManager$LayoutParams;

    .prologue
    const/4 v1, 0x1

    const/4 v2, 0x0

    .line 12916
    invoke-interface {p1}, Landroid/view/WindowManagerPolicy$WindowState;->getCoverMode()I

    move-result v0

    .line 12917
    .local v0, "coverMode":I
    if-nez v0, :cond_21

    .line 12918
    iget v3, p2, Landroid/view/WindowManager$LayoutParams;->type:I

    sparse-switch v3, :sswitch_data_38

    .line 12947
    :cond_d
    invoke-interface {p1}, Landroid/view/WindowManagerPolicy$WindowState;->getBaseType()I

    move-result v3

    invoke-virtual {p0, v3}, windowTypeToLayerLw(I)I

    move-result v3

    const/16 v4, 0x7d0

    invoke-virtual {p0, v4}, windowTypeToLayerLw(I)I

    move-result v4

    if-ge v3, v4, :cond_36

    :goto_1d
    move v2, v1

    :cond_1e
    :goto_1e
    :sswitch_1e
    return v2

    :sswitch_1f
    move v2, v1

    .line 12934
    goto :goto_1e

    .line 12936
    :cond_21
    const/16 v3, 0x10

    if-eq v0, v3, :cond_1e

    .line 12938
    iget v3, p0, mHideSViewCover:I

    if-eqz v3, :cond_d

    .line 12939
    const/4 v3, 0x2

    if-ne v0, v3, :cond_33

    .line 12940
    invoke-interface {p1}, Landroid/view/WindowManagerPolicy$WindowState;->willBeHideSViewCoverOnce()Z

    move-result v3

    if-eqz v3, :cond_d

    goto :goto_1e

    .line 12943
    :cond_33
    if-ne v0, v1, :cond_d

    goto :goto_1e

    :cond_36
    move v1, v2

    .line 12947
    goto :goto_1d

    .line 12918
    :sswitch_data_38
    .sparse-switch
        0x7d0 -> :sswitch_1e
        0x7d4 -> :sswitch_1e
        0x7d5 -> :sswitch_1e
        0x7d9 -> :sswitch_1f
        0x7dd -> :sswitch_1e
        0x7e3 -> :sswitch_1e
        0x7e4 -> :sswitch_1e
        0x833 -> :sswitch_1e
        0x8ac -> :sswitch_1e
        0x8ad -> :sswitch_1e
        0x8b2 -> :sswitch_1f
    .end sparse-switch
.end method

.method public canBeForceHiddenByVR(Landroid/view/WindowManagerPolicy$WindowState;Landroid/view/WindowManager$LayoutParams;)Z
    .registers 4
    .param p1, "win"    # Landroid/view/WindowManagerPolicy$WindowState;
    .param p2, "attrs"    # Landroid/view/WindowManager$LayoutParams;

    .prologue
    .line 12714
    iget v0, p2, Landroid/view/WindowManager$LayoutParams;->type:I

    sparse-switch v0, :sswitch_data_a

    .line 12738
    const/4 v0, 0x0

    :goto_6
    return v0

    .line 12735
    :sswitch_7
    const/4 v0, 0x1

    goto :goto_6

    .line 12714
    nop

    :sswitch_data_a
    .sparse-switch
        0x7d0 -> :sswitch_7
        0x7d2 -> :sswitch_7
        0x7d3 -> :sswitch_7
        0x7d4 -> :sswitch_7
        0x7d6 -> :sswitch_7
        0x7d7 -> :sswitch_7
        0x7d8 -> :sswitch_7
        0x7d9 -> :sswitch_7
        0x7da -> :sswitch_7
        0x7db -> :sswitch_7
        0x7dc -> :sswitch_7
        0x7de -> :sswitch_7
        0x7e3 -> :sswitch_7
        0x7e4 -> :sswitch_7
        0x7ed -> :sswitch_7
        0x834 -> :sswitch_7
        0x835 -> :sswitch_7
        0x836 -> :sswitch_7
        0x837 -> :sswitch_7
        0x8e8 -> :sswitch_7
    .end sparse-switch
.end method

.method public canMagnifyWindow(I)Z
    .registers 5
    .param p1, "windowType"    # I

    .prologue
    const/4 v1, 0x1

    const/4 v0, 0x0

    .line 12291
    iget v2, p0, mEasyOneHandEnabled:I

    if-lez v2, :cond_b

    .line 12292
    sparse-switch p1, :sswitch_data_10

    move v0, v1

    .line 12319
    :goto_a
    :sswitch_a
    return v0

    .line 12305
    :cond_b
    sparse-switch p1, :sswitch_data_1e

    move v0, v1

    .line 12319
    goto :goto_a

    .line 12292
    :sswitch_data_10
    .sparse-switch
        0x7eb -> :sswitch_a
        0x8ca -> :sswitch_a
        0x8cf -> :sswitch_a
    .end sparse-switch

    .line 12305
    :sswitch_data_1e
    .sparse-switch
        0x7db -> :sswitch_a
        0x7dc -> :sswitch_a
        0x7e3 -> :sswitch_a
        0x7eb -> :sswitch_a
        0x8ca -> :sswitch_a
        0x8cf -> :sswitch_a
        0x8e8 -> :sswitch_a
    .end sparse-switch
.end method

.method public cancelPendingPowerKey()V
    .registers 1

    .prologue
    .line 12776
    invoke-direct {p0}, cancelPendingPowerKeyAction()V

    .line 12777
    return-void
.end method

.method public checkAddPermission(Landroid/view/WindowManager$LayoutParams;[I)I
    .registers 13
    .param p1, "attrs"    # Landroid/view/WindowManager$LayoutParams;
    .param p2, "outAppOp"    # [I

    .prologue
    const/16 v9, 0xbb7

    const/16 v8, 0x7d0

    const/16 v7, 0x3e8

    const/4 v5, -0x8

    const/4 v4, 0x0

    .line 3545
    iget v3, p1, Landroid/view/WindowManager$LayoutParams;->type:I

    .line 3547
    .local v3, "type":I
    const/4 v6, -0x1

    aput v6, p2, v4

    .line 3549
    const/4 v6, 0x1

    if-lt v3, v6, :cond_14

    const/16 v6, 0x63

    if-le v3, v6, :cond_21

    :cond_14
    if-lt v3, v7, :cond_1a

    const/16 v6, 0x7cf

    if-le v3, v6, :cond_21

    :cond_1a
    if-lt v3, v8, :cond_1e

    if-le v3, v9, :cond_21

    .line 3552
    :cond_1e
    const/16 v4, -0xa

    .line 3647
    :cond_20
    :goto_20
    :pswitch_20
    return v4

    .line 3555
    :cond_21
    if-lt v3, v8, :cond_20

    if-gt v3, v9, :cond_20

    .line 3560
    iget-object v6, p0, mMultiPhoneWindowManager:Lcom/android/server/policy/multiwindow/MultiPhoneWindowManager;

    invoke-virtual {v6, v3}, Lcom/android/server/policy/multiwindow/MultiPhoneWindowManager;->checkAddPermission(I)I

    move-result v6

    if-eqz v6, :cond_20

    .line 3565
    const/4 v2, 0x0

    .line 3566
    .local v2, "permission":Ljava/lang/String;
    sparse-switch v3, :sswitch_data_94

    .line 3599
    const-string v2, "android.permission.INTERNAL_SYSTEM_WINDOW"

    .line 3601
    :goto_33
    :sswitch_33
    if-eqz v2, :cond_20

    .line 3602
    const-string v6, "android.permission.SYSTEM_ALERT_WINDOW"

    if-ne v2, v6, :cond_8a

    .line 3603
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v0

    .line 3605
    .local v0, "callingUid":I
    if-eq v0, v7, :cond_20

    .line 3609
    iget-object v6, p0, mSPWM:Lcom/android/server/policy/sec/SamsungPhoneWindowManager;

    invoke-virtual {v6}, Lcom/android/server/policy/sec/SamsungPhoneWindowManager;->isMirrorLinkEnabled()Z

    move-result v6

    if-eqz v6, :cond_4a

    .line 3610
    sparse-switch v3, :sswitch_data_e2

    .line 3620
    :cond_4a
    iget-object v6, p0, mAppOpsManager:Landroid/app/AppOpsManager;

    aget v7, p2, v4

    iget-object v8, p1, Landroid/view/WindowManager$LayoutParams;->packageName:Ljava/lang/String;

    invoke-virtual {v6, v7, v0, v8}, Landroid/app/AppOpsManager;->checkOp(IILjava/lang/String;)I

    move-result v1

    .line 3622
    .local v1, "mode":I
    packed-switch v1, :pswitch_data_ec

    .line 3633
    iget-object v6, p0, mContext:Landroid/content/Context;

    invoke-virtual {v6, v2}, Landroid/content/Context;->checkCallingPermission(Ljava/lang/String;)I

    move-result v6

    if-eqz v6, :cond_20

    move v4, v5

    .line 3635
    goto :goto_20

    .line 3571
    .end local v0    # "callingUid":I
    .end local v1    # "mode":I
    :sswitch_61
    const/16 v6, 0x2d

    aput v6, p2, v4

    goto :goto_33

    .line 3595
    :sswitch_66
    const-string v2, "android.permission.SYSTEM_ALERT_WINDOW"

    .line 3596
    const/16 v6, 0x18

    aput v6, p2, v4

    goto :goto_33

    .line 3613
    .restart local v0    # "callingUid":I
    :sswitch_6d
    const-string v4, "WindowManager"

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string v6, "checkAddPermission : Blocked by MirrorLink - Window Type : "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v4, v5}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 3614
    const/16 v4, -0x64

    goto :goto_20

    .restart local v1    # "mode":I
    :pswitch_88
    move v4, v5

    .line 3629
    goto :goto_20

    .line 3642
    .end local v0    # "callingUid":I
    .end local v1    # "mode":I
    :cond_8a
    iget-object v6, p0, mContext:Landroid/content/Context;

    invoke-virtual {v6, v2}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    move-result v6

    if-eqz v6, :cond_20

    move v4, v5

    .line 3644
    goto :goto_20

    .line 3566
    :sswitch_data_94
    .sparse-switch
        0x7d2 -> :sswitch_66
        0x7d3 -> :sswitch_66
        0x7d5 -> :sswitch_61
        0x7d6 -> :sswitch_66
        0x7d7 -> :sswitch_66
        0x7da -> :sswitch_66
        0x7db -> :sswitch_33
        0x7dd -> :sswitch_33
        0x7e7 -> :sswitch_33
        0x7ee -> :sswitch_33
        0x7ef -> :sswitch_33
        0x7f0 -> :sswitch_33
        0x830 -> :sswitch_33
        0x831 -> :sswitch_33
        0x832 -> :sswitch_33
        0x833 -> :sswitch_66
        0x834 -> :sswitch_33
        0x835 -> :sswitch_33
        0x8d6 -> :sswitch_33
    .end sparse-switch

    .line 3610
    :sswitch_data_e2
    .sparse-switch
        0x7d2 -> :sswitch_6d
        0x7d6 -> :sswitch_6d
    .end sparse-switch

    .line 3622
    :pswitch_data_ec
    .packed-switch 0x0
        :pswitch_20
        :pswitch_20
        :pswitch_88
    .end packed-switch
.end method

.method public checkShowToOwnerOnly(Landroid/view/WindowManager$LayoutParams;)Z
    .registers 5
    .param p1, "attrs"    # Landroid/view/WindowManager$LayoutParams;

    .prologue
    const/4 v0, 0x1

    .line 3655
    iget v1, p1, Landroid/view/WindowManager$LayoutParams;->type:I

    sparse-switch v1, :sswitch_data_1a

    .line 3662
    iget v1, p1, Landroid/view/WindowManager$LayoutParams;->privateFlags:I

    and-int/lit8 v1, v1, 0x10

    if-nez v1, :cond_d

    .line 3695
    :cond_c
    :goto_c
    return v0

    :cond_d
    :sswitch_d
    iget-object v1, p0, mContext:Landroid/content/Context;

    const-string v2, "android.permission.INTERNAL_SYSTEM_WINDOW"

    invoke-virtual {v1, v2}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    move-result v1

    if-nez v1, :cond_c

    const/4 v0, 0x0

    goto :goto_c

    .line 3655
    nop

    :sswitch_data_1a
    .sparse-switch
        0x3 -> :sswitch_d
        0x7d0 -> :sswitch_d
        0x7d1 -> :sswitch_d
        0x7d2 -> :sswitch_d
        0x7d7 -> :sswitch_d
        0x7d8 -> :sswitch_d
        0x7d9 -> :sswitch_d
        0x7de -> :sswitch_d
        0x7e1 -> :sswitch_d
        0x7e2 -> :sswitch_d
        0x7e3 -> :sswitch_d
        0x7e4 -> :sswitch_d
        0x7e5 -> :sswitch_d
        0x7e6 -> :sswitch_d
        0x7e8 -> :sswitch_d
        0x7ea -> :sswitch_d
        0x7eb -> :sswitch_d
        0x7ed -> :sswitch_d
        0x7ee -> :sswitch_d
        0x833 -> :sswitch_d
    .end sparse-switch
.end method

.method public checkTopFullscreenOpaqueWindowState(Landroid/view/WindowManagerPolicy$WindowState;Landroid/view/WindowManager$LayoutParams;)Z
    .registers 8
    .param p1, "win"    # Landroid/view/WindowManagerPolicy$WindowState;
    .param p2, "attrs"    # Landroid/view/WindowManager$LayoutParams;

    .prologue
    const/4 v1, 0x1

    const/4 v4, -0x1

    const/4 v0, 0x0

    .line 12410
    iget v2, p2, Landroid/view/WindowManager$LayoutParams;->type:I

    const/16 v3, 0x62

    if-ne v2, v3, :cond_a

    .line 12432
    :cond_9
    :goto_9
    return v0

    .line 12416
    :cond_a
    invoke-interface {p1}, Landroid/view/WindowManagerPolicy$WindowState;->getMultiWindowStyleLw()Lcom/samsung/android/multiwindow/MultiWindowStyle;

    move-result-object v2

    invoke-virtual {v2}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->isCascade()Z

    move-result v2

    if-nez v2, :cond_9

    .line 12421
    iget-boolean v2, p0, mNavigationBarCanMove:Z

    if-nez v2, :cond_20

    .line 12422
    iget v2, p2, Landroid/view/WindowManager$LayoutParams;->samsungFlags:I

    and-int/lit8 v2, v2, 0x20

    if-eqz v2, :cond_20

    move v0, v1

    .line 12423
    goto :goto_9

    .line 12427
    :cond_20
    iget v2, p2, Landroid/view/WindowManager$LayoutParams;->x:I

    if-nez v2, :cond_9

    iget v2, p2, Landroid/view/WindowManager$LayoutParams;->y:I

    if-nez v2, :cond_9

    iget v2, p2, Landroid/view/WindowManager$LayoutParams;->width:I

    if-ne v2, v4, :cond_9

    iget v2, p2, Landroid/view/WindowManager$LayoutParams;->height:I

    if-ne v2, v4, :cond_9

    move v0, v1

    .line 12430
    goto :goto_9
.end method

.method public closeMultiWindowTrayBar(Z)Z
    .registers 3
    .param p1, "forceClose"    # Z

    .prologue
    .line 12369
    iget-object v0, p0, mMultiPhoneWindowManager:Lcom/android/server/policy/multiwindow/MultiPhoneWindowManager;

    invoke-virtual {v0, p1}, Lcom/android/server/policy/multiwindow/MultiPhoneWindowManager;->closeMultiWindowTrayBar(Z)Z

    move-result v0

    return v0
.end method

.method public closeSystemWindows(Ljava/lang/String;)V
    .registers 3
    .param p1, "reason"    # Ljava/lang/String;

    .prologue
    .line 12786
    iget-object v0, p0, mContext:Landroid/content/Context;

    invoke-static {v0, p1}, sendCloseSystemWindows(Landroid/content/Context;Ljava/lang/String;)V

    .line 12787
    return-void
.end method

.method public createForceHideEnterAnimation(ZZ)Landroid/view/animation/Animation;
    .registers 8
    .param p1, "onWallpaper"    # Z
    .param p2, "goingToNotificationShade"    # Z

    .prologue
    .line 4905
    if-eqz p2, :cond_c

    .line 4906
    iget-object v3, p0, mContext:Landroid/content/Context;

    const v4, 0x10a0042

    invoke-static {v3, v4}, Landroid/view/animation/AnimationUtils;->loadAnimation(Landroid/content/Context;I)Landroid/view/animation/Animation;

    move-result-object v2

    .line 4919
    :cond_b
    return-object v2

    .line 4909
    :cond_c
    iget-object v4, p0, mContext:Landroid/content/Context;

    if-eqz p1, :cond_33

    const v3, 0x10a0043

    :goto_13
    invoke-static {v4, v3}, Landroid/view/animation/AnimationUtils;->loadAnimation(Landroid/content/Context;I)Landroid/view/animation/Animation;

    move-result-object v2

    check-cast v2, Landroid/view/animation/AnimationSet;

    .line 4914
    .local v2, "set":Landroid/view/animation/AnimationSet;
    invoke-virtual {v2}, Landroid/view/animation/AnimationSet;->getAnimations()Ljava/util/List;

    move-result-object v0

    .line 4915
    .local v0, "animations":Ljava/util/List;, "Ljava/util/List<Landroid/view/animation/Animation;>;"
    invoke-interface {v0}, Ljava/util/List;->size()I

    move-result v3

    add-int/lit8 v1, v3, -0x1

    .local v1, "i":I
    :goto_23
    if-ltz v1, :cond_b

    .line 4916
    invoke-interface {v0, v1}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Landroid/view/animation/Animation;

    iget-object v4, p0, mLogDecelerateInterpolator:Lcom/android/server/policy/LogDecelerateInterpolator;

    invoke-virtual {v3, v4}, Landroid/view/animation/Animation;->setInterpolator(Landroid/view/animation/Interpolator;)V

    .line 4915
    add-int/lit8 v1, v1, -0x1

    goto :goto_23

    .line 4909
    .end local v0    # "animations":Ljava/util/List;, "Ljava/util/List<Landroid/view/animation/Animation;>;"
    .end local v1    # "i":I
    .end local v2    # "set":Landroid/view/animation/AnimationSet;
    :cond_33
    const v3, 0x10a0041

    goto :goto_13
.end method

.method public createForceHideWallpaperExitAnimation(Z)Landroid/view/animation/Animation;
    .registers 4
    .param p1, "goingToNotificationShade"    # Z

    .prologue
    .line 4925
    if-eqz p1, :cond_4

    .line 4926
    const/4 v0, 0x0

    .line 4928
    :goto_3
    return-object v0

    :cond_4
    iget-object v0, p0, mContext:Landroid/content/Context;

    const v1, 0x10a0046

    invoke-static {v0, v1}, Landroid/view/animation/AnimationUtils;->loadAnimation(Landroid/content/Context;I)Landroid/view/animation/Animation;

    move-result-object v0

    goto :goto_3
.end method

.method createHomeDockIntent()Landroid/content/Intent;
    .registers 9

    .prologue
    const/4 v4, 0x0

    const/4 v7, 0x3

    .line 11534
    const/4 v2, 0x0

    .line 11539
    .local v2, "intent":Landroid/content/Intent;
    iget v5, p0, mUiMode:I

    if-ne v5, v7, :cond_16

    .line 11541
    iget-object v2, p0, mCarDockIntent:Landroid/content/Intent;

    .line 11555
    :cond_9
    :goto_9
    iget v5, p0, mDockMode:I

    const/16 v6, 0x68

    if-ne v5, v6, :cond_68

    .line 11557
    iget-object v2, p0, mMirrorLinkDockIntent:Landroid/content/Intent;

    move-object v3, v2

    .line 11561
    .end local v2    # "intent":Landroid/content/Intent;
    .local v3, "intent":Landroid/content/Intent;
    :goto_12
    if-nez v3, :cond_34

    move-object v2, v3

    .line 11581
    .end local v3    # "intent":Landroid/content/Intent;
    .restart local v2    # "intent":Landroid/content/Intent;
    :goto_15
    return-object v4

    .line 11543
    :cond_16
    iget v5, p0, mUiMode:I

    const/4 v6, 0x2

    if-ne v5, v6, :cond_1e

    .line 11545
    iget-object v2, p0, mDeskDockIntent:Landroid/content/Intent;

    goto :goto_9

    .line 11547
    :cond_1e
    iget v5, p0, mUiMode:I

    const/4 v6, 0x6

    if-ne v5, v6, :cond_9

    iget v5, p0, mDockMode:I

    const/4 v6, 0x1

    if-eq v5, v6, :cond_31

    iget v5, p0, mDockMode:I

    const/4 v6, 0x4

    if-eq v5, v6, :cond_31

    iget v5, p0, mDockMode:I

    if-ne v5, v7, :cond_9

    .line 11552
    :cond_31
    iget-object v2, p0, mDeskDockIntent:Landroid/content/Intent;

    goto :goto_9

    .line 11565
    .end local v2    # "intent":Landroid/content/Intent;
    .restart local v3    # "intent":Landroid/content/Intent;
    :cond_34
    const/4 v0, 0x0

    .line 11566
    .local v0, "ai":Landroid/content/pm/ActivityInfo;
    iget-object v5, p0, mContext:Landroid/content/Context;

    invoke-virtual {v5}, Landroid/content/Context;->getPackageManager()Landroid/content/pm/PackageManager;

    move-result-object v5

    const v6, 0x10080

    iget v7, p0, mCurrentUserId:I

    invoke-virtual {v5, v3, v6, v7}, Landroid/content/pm/PackageManager;->resolveActivityAsUser(Landroid/content/Intent;II)Landroid/content/pm/ResolveInfo;

    move-result-object v1

    .line 11570
    .local v1, "info":Landroid/content/pm/ResolveInfo;
    if-eqz v1, :cond_48

    .line 11571
    iget-object v0, v1, Landroid/content/pm/ResolveInfo;->activityInfo:Landroid/content/pm/ActivityInfo;

    .line 11573
    :cond_48
    if-eqz v0, :cond_66

    iget-object v5, v0, Landroid/content/pm/ActivityInfo;->metaData:Landroid/os/Bundle;

    if-eqz v5, :cond_66

    iget-object v5, v0, Landroid/content/pm/ActivityInfo;->metaData:Landroid/os/Bundle;

    const-string v6, "android.dock_home"

    invoke-virtual {v5, v6}, Landroid/os/Bundle;->getBoolean(Ljava/lang/String;)Z

    move-result v5

    if-eqz v5, :cond_66

    .line 11576
    new-instance v2, Landroid/content/Intent;

    invoke-direct {v2, v3}, Landroid/content/Intent;-><init>(Landroid/content/Intent;)V

    .line 11577
    .end local v3    # "intent":Landroid/content/Intent;
    .restart local v2    # "intent":Landroid/content/Intent;
    iget-object v4, v0, Landroid/content/pm/ActivityInfo;->packageName:Ljava/lang/String;

    iget-object v5, v0, Landroid/content/pm/ActivityInfo;->name:Ljava/lang/String;

    invoke-virtual {v2, v4, v5}, Landroid/content/Intent;->setClassName(Ljava/lang/String;Ljava/lang/String;)Landroid/content/Intent;

    move-object v4, v2

    .line 11578
    goto :goto_15

    .end local v2    # "intent":Landroid/content/Intent;
    .restart local v3    # "intent":Landroid/content/Intent;
    :cond_66
    move-object v2, v3

    .line 11581
    .end local v3    # "intent":Landroid/content/Intent;
    .restart local v2    # "intent":Landroid/content/Intent;
    goto :goto_15

    .end local v0    # "ai":Landroid/content/pm/ActivityInfo;
    .end local v1    # "info":Landroid/content/pm/ResolveInfo;
    :cond_68
    move-object v3, v2

    .end local v2    # "intent":Landroid/content/Intent;
    .restart local v3    # "intent":Landroid/content/Intent;
    goto :goto_12
.end method

.method public dismissKeyguardLw()V
    .registers 3

    .prologue
    .line 10603
    iget-object v0, p0, mKeyguardDelegate:Lcom/android/server/policy/keyguard/KeyguardServiceDelegate;

    if-eqz v0, :cond_21

    iget-object v0, p0, mKeyguardDelegate:Lcom/android/server/policy/keyguard/KeyguardServiceDelegate;

    invoke-virtual {v0}, Lcom/android/server/policy/keyguard/KeyguardServiceDelegate;->isShowing()Z

    move-result v0

    if-eqz v0, :cond_21

    .line 10604
    sget-boolean v0, DEBUG_KEYGUARD:Z

    if-eqz v0, :cond_17

    const-string v0, "WindowManager"

    const-string v1, "PWM.dismissKeyguardLw"

    invoke-static {v0, v1}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 10605
    :cond_17
    iget-object v0, p0, mHandler:Landroid/os/Handler;

    new-instance v1, Lcom/android/server/policy/PhoneWindowManager$37;

    invoke-direct {v1, p0}, Lcom/android/server/policy/PhoneWindowManager$37;-><init>(Lcom/android/server/policy/PhoneWindowManager;)V

    invoke-virtual {v0, v1}, Landroid/os/Handler;->post(Ljava/lang/Runnable;)Z

    .line 10613
    :cond_21
    return-void
.end method

.method dispatchMediaKeyRepeatWithWakeLock(Landroid/view/KeyEvent;)V
    .registers 7
    .param p1, "event"    # Landroid/view/KeyEvent;

    .prologue
    .line 9587
    const/4 v1, 0x0

    iput-boolean v1, p0, mHavePendingMediaKeyRepeatWithWakeLock:Z

    .line 9589
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v2

    const/4 v1, 0x1

    invoke-virtual {p1}, Landroid/view/KeyEvent;->getFlags()I

    move-result v4

    or-int/lit16 v4, v4, 0x80

    invoke-static {p1, v2, v3, v1, v4}, Landroid/view/KeyEvent;->changeTimeRepeat(Landroid/view/KeyEvent;JII)Landroid/view/KeyEvent;

    move-result-object v0

    .line 9591
    .local v0, "repeatEvent":Landroid/view/KeyEvent;
    sget-boolean v1, DEBUG_INPUT:Z

    if-eqz v1, :cond_2f

    .line 9592
    const-string v1, "WindowManager"

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v3, "dispatchMediaKeyRepeatWithWakeLock: "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v1, v2}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 9595
    :cond_2f
    invoke-virtual {p0, v0}, dispatchMediaKeyWithWakeLockToAudioService(Landroid/view/KeyEvent;)V

    .line 9596
    iget-object v1, p0, mBroadcastWakeLock:Landroid/os/PowerManager$WakeLock;

    invoke-virtual {v1}, Landroid/os/PowerManager$WakeLock;->release()V

    .line 9597
    return-void
.end method

.method dispatchMediaKeyWithWakeLock(Landroid/view/KeyEvent;)V
    .registers 8
    .param p1, "event"    # Landroid/view/KeyEvent;

    .prologue
    const/4 v5, 0x4

    const/4 v4, 0x1

    .line 9557
    sget-boolean v1, DEBUG_INPUT:Z

    if-eqz v1, :cond_1f

    .line 9558
    const-string v1, "WindowManager"

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v3, "dispatchMediaKeyWithWakeLock: "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v1, v2}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 9561
    :cond_1f
    iget-boolean v1, p0, mHavePendingMediaKeyRepeatWithWakeLock:Z

    if-eqz v1, :cond_3c

    .line 9562
    sget-boolean v1, DEBUG_INPUT:Z

    if-eqz v1, :cond_2f

    .line 9563
    const-string v1, "WindowManager"

    const-string/jumbo v2, "dispatchMediaKeyWithWakeLock: canceled repeat"

    invoke-static {v1, v2}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 9566
    :cond_2f
    iget-object v1, p0, mHandler:Landroid/os/Handler;

    invoke-virtual {v1, v5}, Landroid/os/Handler;->removeMessages(I)V

    .line 9567
    const/4 v1, 0x0

    iput-boolean v1, p0, mHavePendingMediaKeyRepeatWithWakeLock:Z

    .line 9568
    iget-object v1, p0, mBroadcastWakeLock:Landroid/os/PowerManager$WakeLock;

    invoke-virtual {v1}, Landroid/os/PowerManager$WakeLock;->release()V

    .line 9571
    :cond_3c
    invoke-virtual {p0, p1}, dispatchMediaKeyWithWakeLockToAudioService(Landroid/view/KeyEvent;)V

    .line 9573
    invoke-virtual {p1}, Landroid/view/KeyEvent;->getAction()I

    move-result v1

    if-nez v1, :cond_61

    invoke-virtual {p1}, Landroid/view/KeyEvent;->getRepeatCount()I

    move-result v1

    if-nez v1, :cond_61

    .line 9575
    iput-boolean v4, p0, mHavePendingMediaKeyRepeatWithWakeLock:Z

    .line 9577
    iget-object v1, p0, mHandler:Landroid/os/Handler;

    invoke-virtual {v1, v5, p1}, Landroid/os/Handler;->obtainMessage(ILjava/lang/Object;)Landroid/os/Message;

    move-result-object v0

    .line 9579
    .local v0, "msg":Landroid/os/Message;
    invoke-virtual {v0, v4}, Landroid/os/Message;->setAsynchronous(Z)V

    .line 9580
    iget-object v1, p0, mHandler:Landroid/os/Handler;

    invoke-static {}, Landroid/view/ViewConfiguration;->getKeyRepeatTimeout()I

    move-result v2

    int-to-long v2, v2

    invoke-virtual {v1, v0, v2, v3}, Landroid/os/Handler;->sendMessageDelayed(Landroid/os/Message;J)Z

    .line 9584
    .end local v0    # "msg":Landroid/os/Message;
    :goto_60
    return-void

    .line 9582
    :cond_61
    iget-object v1, p0, mBroadcastWakeLock:Landroid/os/PowerManager$WakeLock;

    invoke-virtual {v1}, Landroid/os/PowerManager$WakeLock;->release()V

    goto :goto_60
.end method

.method dispatchMediaKeyWithWakeLockToAudioService(Landroid/view/KeyEvent;)V
    .registers 4
    .param p1, "event"    # Landroid/view/KeyEvent;

    .prologue
    .line 9600
    invoke-static {}, Landroid/app/ActivityManagerNative;->isSystemReady()Z

    move-result v0

    if-eqz v0, :cond_10

    .line 9601
    iget-object v0, p0, mContext:Landroid/content/Context;

    invoke-static {v0}, Landroid/media/session/MediaSessionLegacyHelper;->getHelper(Landroid/content/Context;)Landroid/media/session/MediaSessionLegacyHelper;

    move-result-object v0

    const/4 v1, 0x1

    invoke-virtual {v0, p1, v1}, Landroid/media/session/MediaSessionLegacyHelper;->sendMediaButtonEvent(Landroid/view/KeyEvent;Z)V

    .line 9603
    :cond_10
    return-void
.end method

.method public dispatchUnhandledKey(Landroid/view/WindowManagerPolicy$WindowState;Landroid/view/KeyEvent;I)Landroid/view/KeyEvent;
    .registers 28
    .param p1, "win"    # Landroid/view/WindowManagerPolicy$WindowState;
    .param p2, "event"    # Landroid/view/KeyEvent;
    .param p3, "policyFlags"    # I

    .prologue
    .line 5699
    sget-boolean v4, DEBUG_INPUT:Z

    if-eqz v4, :cond_7e

    .line 5700
    const-string v4, "WindowManager"

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string v6, "Unhandled key: win="

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    move-object/from16 v0, p1

    invoke-virtual {v5, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v5

    const-string v6, ", action="

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual/range {p2 .. p2}, Landroid/view/KeyEvent;->getAction()I

    move-result v6

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v5

    const-string v6, ", flags="

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual/range {p2 .. p2}, Landroid/view/KeyEvent;->getFlags()I

    move-result v6

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v5

    const-string v6, ", keyCode="

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual/range {p2 .. p2}, Landroid/view/KeyEvent;->getKeyCode()I

    move-result v6

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v5

    const-string v6, ", scanCode="

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual/range {p2 .. p2}, Landroid/view/KeyEvent;->getScanCode()I

    move-result v6

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v5

    const-string v6, ", metaState="

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual/range {p2 .. p2}, Landroid/view/KeyEvent;->getMetaState()I

    move-result v6

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v5

    const-string v6, ", repeatCount="

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual/range {p2 .. p2}, Landroid/view/KeyEvent;->getRepeatCount()I

    move-result v6

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v5

    const-string v6, ", policyFlags="

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    move/from16 v0, p3

    invoke-virtual {v5, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v4, v5}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 5709
    :cond_7e
    const/16 v19, 0x0

    .line 5710
    .local v19, "fallbackEvent":Landroid/view/KeyEvent;
    invoke-virtual/range {p2 .. p2}, Landroid/view/KeyEvent;->getFlags()I

    move-result v4

    and-int/lit16 v4, v4, 0x400

    if-nez v4, :cond_130

    .line 5711
    invoke-virtual/range {p2 .. p2}, Landroid/view/KeyEvent;->getKeyCharacterMap()Landroid/view/KeyCharacterMap;

    move-result-object v21

    .line 5712
    .local v21, "kcm":Landroid/view/KeyCharacterMap;
    invoke-virtual/range {p2 .. p2}, Landroid/view/KeyEvent;->getKeyCode()I

    move-result v22

    .line 5713
    .local v22, "keyCode":I
    invoke-virtual/range {p2 .. p2}, Landroid/view/KeyEvent;->getMetaState()I

    move-result v23

    .line 5714
    .local v23, "metaState":I
    invoke-virtual/range {p2 .. p2}, Landroid/view/KeyEvent;->getAction()I

    move-result v4

    if-nez v4, :cond_13e

    invoke-virtual/range {p2 .. p2}, Landroid/view/KeyEvent;->getRepeatCount()I

    move-result v4

    if-nez v4, :cond_13e

    const/16 v20, 0x1

    .line 5719
    .local v20, "initialDown":Z
    :goto_a2
    if-eqz v20, :cond_142

    .line 5720
    invoke-virtual/range {v21 .. v23}, Landroid/view/KeyCharacterMap;->getFallbackAction(II)Landroid/view/KeyCharacterMap$FallbackAction;

    move-result-object v18

    .line 5725
    .local v18, "fallbackAction":Landroid/view/KeyCharacterMap$FallbackAction;
    :goto_a8
    if-eqz v18, :cond_130

    .line 5726
    sget-boolean v4, DEBUG_INPUT:Z

    if-eqz v4, :cond_dc

    .line 5727
    const-string v4, "WindowManager"

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string v6, "Fallback: keyCode="

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    move-object/from16 v0, v18

    iget v6, v0, Landroid/view/KeyCharacterMap$FallbackAction;->keyCode:I

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v5

    const-string v6, " metaState="

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    move-object/from16 v0, v18

    iget v6, v0, Landroid/view/KeyCharacterMap$FallbackAction;->metaState:I

    invoke-static {v6}, Ljava/lang/Integer;->toHexString(I)Ljava/lang/String;

    move-result-object v6

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v4, v5}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 5731
    :cond_dc
    invoke-virtual/range {p2 .. p2}, Landroid/view/KeyEvent;->getFlags()I

    move-result v4

    or-int/lit16 v14, v4, 0x400

    .line 5732
    .local v14, "flags":I
    invoke-virtual/range {p2 .. p2}, Landroid/view/KeyEvent;->getDownTime()J

    move-result-wide v4

    invoke-virtual/range {p2 .. p2}, Landroid/view/KeyEvent;->getEventTime()J

    move-result-wide v6

    invoke-virtual/range {p2 .. p2}, Landroid/view/KeyEvent;->getAction()I

    move-result v8

    move-object/from16 v0, v18

    iget v9, v0, Landroid/view/KeyCharacterMap$FallbackAction;->keyCode:I

    invoke-virtual/range {p2 .. p2}, Landroid/view/KeyEvent;->getRepeatCount()I

    move-result v10

    move-object/from16 v0, v18

    iget v11, v0, Landroid/view/KeyCharacterMap$FallbackAction;->metaState:I

    invoke-virtual/range {p2 .. p2}, Landroid/view/KeyEvent;->getDeviceId()I

    move-result v12

    invoke-virtual/range {p2 .. p2}, Landroid/view/KeyEvent;->getScanCode()I

    move-result v13

    invoke-virtual/range {p2 .. p2}, Landroid/view/KeyEvent;->getDisplayId()I

    move-result v15

    invoke-virtual/range {p2 .. p2}, Landroid/view/KeyEvent;->getSource()I

    move-result v16

    const/16 v17, 0x0

    invoke-static/range {v4 .. v17}, Landroid/view/KeyEvent;->obtain(JJIIIIIIIIILjava/lang/String;)Landroid/view/KeyEvent;

    move-result-object v19

    .line 5739
    move-object/from16 v0, p0

    move-object/from16 v1, p1

    move-object/from16 v2, v19

    move/from16 v3, p3

    invoke-direct {v0, v1, v2, v3}, interceptFallback(Landroid/view/WindowManagerPolicy$WindowState;Landroid/view/KeyEvent;I)Z

    move-result v4

    if-nez v4, :cond_123

    .line 5740
    invoke-virtual/range {v19 .. v19}, Landroid/view/KeyEvent;->recycle()V

    .line 5741
    const/16 v19, 0x0

    .line 5744
    :cond_123
    if-eqz v20, :cond_150

    .line 5745
    move-object/from16 v0, p0

    iget-object v4, v0, mFallbackActions:Landroid/util/SparseArray;

    move/from16 v0, v22

    move-object/from16 v1, v18

    invoke-virtual {v4, v0, v1}, Landroid/util/SparseArray;->put(ILjava/lang/Object;)V

    .line 5753
    .end local v14    # "flags":I
    .end local v18    # "fallbackAction":Landroid/view/KeyCharacterMap$FallbackAction;
    .end local v20    # "initialDown":Z
    .end local v21    # "kcm":Landroid/view/KeyCharacterMap;
    .end local v22    # "keyCode":I
    .end local v23    # "metaState":I
    :cond_130
    :goto_130
    sget-boolean v4, DEBUG_INPUT:Z

    if-eqz v4, :cond_13d

    .line 5754
    if-nez v19, :cond_164

    .line 5755
    const-string v4, "WindowManager"

    const-string v5, "No fallback."

    invoke-static {v4, v5}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 5760
    :cond_13d
    :goto_13d
    return-object v19

    .line 5714
    .restart local v21    # "kcm":Landroid/view/KeyCharacterMap;
    .restart local v22    # "keyCode":I
    .restart local v23    # "metaState":I
    :cond_13e
    const/16 v20, 0x0

    goto/16 :goto_a2

    .line 5722
    .restart local v20    # "initialDown":Z
    :cond_142
    move-object/from16 v0, p0

    iget-object v4, v0, mFallbackActions:Landroid/util/SparseArray;

    move/from16 v0, v22

    invoke-virtual {v4, v0}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v18

    check-cast v18, Landroid/view/KeyCharacterMap$FallbackAction;

    .restart local v18    # "fallbackAction":Landroid/view/KeyCharacterMap$FallbackAction;
    goto/16 :goto_a8

    .line 5746
    .restart local v14    # "flags":I
    :cond_150
    invoke-virtual/range {p2 .. p2}, Landroid/view/KeyEvent;->getAction()I

    move-result v4

    const/4 v5, 0x1

    if-ne v4, v5, :cond_130

    .line 5747
    move-object/from16 v0, p0

    iget-object v4, v0, mFallbackActions:Landroid/util/SparseArray;

    move/from16 v0, v22

    invoke-virtual {v4, v0}, Landroid/util/SparseArray;->remove(I)V

    .line 5748
    invoke-virtual/range {v18 .. v18}, Landroid/view/KeyCharacterMap$FallbackAction;->recycle()V

    goto :goto_130

    .line 5757
    .end local v14    # "flags":I
    .end local v18    # "fallbackAction":Landroid/view/KeyCharacterMap$FallbackAction;
    .end local v20    # "initialDown":Z
    .end local v21    # "kcm":Landroid/view/KeyCharacterMap;
    .end local v22    # "keyCode":I
    .end local v23    # "metaState":I
    :cond_164
    const-string v4, "WindowManager"

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string v6, "Performing fallback: "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    move-object/from16 v0, v19

    invoke-virtual {v5, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v4, v5}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_13d
.end method

.method public dump(Ljava/lang/String;Ljava/io/PrintWriter;[Ljava/lang/String;)V
    .registers 5
    .param p1, "prefix"    # Ljava/lang/String;
    .param p2, "pw"    # Ljava/io/PrintWriter;
    .param p3, "args"    # [Ljava/lang/String;

    .prologue
    .line 13293
    invoke-virtual {p2, p1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    const-string/jumbo v0, "mSafeMode="

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-boolean v0, p0, mSafeMode:Z

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Z)V

    .line 13294
    const-string v0, " mSystemReady="

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-boolean v0, p0, mSystemReady:Z

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Z)V

    .line 13295
    const-string v0, " mSystemBooted="

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-boolean v0, p0, mSystemBooted:Z

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Z)V

    .line 13296
    invoke-virtual {p2, p1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    const-string/jumbo v0, "mLidState="

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v0, p0, mLidState:I

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(I)V

    .line 13297
    const-string v0, " mLidOpenRotation="

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v0, p0, mLidOpenRotation:I

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(I)V

    .line 13298
    const-string v0, " mCameraLensCoverState="

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v0, p0, mCameraLensCoverState:I

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(I)V

    .line 13299
    const-string v0, " mHdmiPlugged="

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-boolean v0, p0, mHdmiPlugged:Z

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Z)V

    .line 13300
    iget v0, p0, mLastSystemUiFlags:I

    if-nez v0, :cond_5a

    iget v0, p0, mResettingSystemUiFlags:I

    if-nez v0, :cond_5a

    iget v0, p0, mForceClearedSystemUiFlags:I

    if-eqz v0, :cond_88

    .line 13302
    :cond_5a
    invoke-virtual {p2, p1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    const-string/jumbo v0, "mLastSystemUiFlags=0x"

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 13303
    iget v0, p0, mLastSystemUiFlags:I

    invoke-static {v0}, Ljava/lang/Integer;->toHexString(I)Ljava/lang/String;

    move-result-object v0

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 13304
    const-string v0, " mResettingSystemUiFlags=0x"

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 13305
    iget v0, p0, mResettingSystemUiFlags:I

    invoke-static {v0}, Ljava/lang/Integer;->toHexString(I)Ljava/lang/String;

    move-result-object v0

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 13306
    const-string v0, " mForceClearedSystemUiFlags=0x"

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 13307
    iget v0, p0, mForceClearedSystemUiFlags:I

    invoke-static {v0}, Ljava/lang/Integer;->toHexString(I)Ljava/lang/String;

    move-result-object v0

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13309
    :cond_88
    iget-boolean v0, p0, mLastFocusNeedsMenu:Z

    if-eqz v0, :cond_9a

    .line 13310
    invoke-virtual {p2, p1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    const-string/jumbo v0, "mLastFocusNeedsMenu="

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 13311
    iget-boolean v0, p0, mLastFocusNeedsMenu:Z

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Z)V

    .line 13313
    :cond_9a
    invoke-virtual {p2, p1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    const-string/jumbo v0, "mWakeGestureEnabledSetting="

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 13314
    iget-boolean v0, p0, mWakeGestureEnabledSetting:Z

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Z)V

    .line 13316
    invoke-virtual {p2, p1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    const-string/jumbo v0, "mSupportAutoRotation="

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-boolean v0, p0, mSupportAutoRotation:Z

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Z)V

    .line 13317
    invoke-virtual {p2, p1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    const-string/jumbo v0, "mUiMode="

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v0, p0, mUiMode:I

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(I)V

    .line 13318
    const-string v0, " mDockMode="

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v0, p0, mDockMode:I

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(I)V

    .line 13319
    const-string v0, " mCarDockRotation="

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v0, p0, mCarDockRotation:I

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(I)V

    .line 13320
    const-string v0, " mDeskDockRotation="

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v0, p0, mDeskDockRotation:I

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(I)V

    .line 13321
    invoke-virtual {p2, p1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    const-string/jumbo v0, "mUserRotationMode="

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v0, p0, mUserRotationMode:I

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(I)V

    .line 13322
    const-string v0, " mUserRotation="

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v0, p0, mUserRotation:I

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(I)V

    .line 13323
    const-string v0, " mAllowAllRotations="

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v0, p0, mAllowAllRotations:I

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(I)V

    .line 13324
    invoke-virtual {p2, p1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    const-string/jumbo v0, "mCurrentAppOrientation="

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v0, p0, mCurrentAppOrientation:I

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(I)V

    .line 13325
    invoke-virtual {p2, p1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    const-string/jumbo v0, "mCarDockEnablesAccelerometer="

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 13326
    iget-boolean v0, p0, mCarDockEnablesAccelerometer:Z

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Z)V

    .line 13327
    const-string v0, " mDeskDockEnablesAccelerometer="

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 13328
    iget-boolean v0, p0, mDeskDockEnablesAccelerometer:Z

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Z)V

    .line 13329
    invoke-virtual {p2, p1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    const-string/jumbo v0, "mLidKeyboardAccessibility="

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 13330
    iget v0, p0, mLidKeyboardAccessibility:I

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(I)V

    .line 13331
    const-string v0, " mLidNavigationAccessibility="

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v0, p0, mLidNavigationAccessibility:I

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(I)V

    .line 13332
    const-string v0, " mLidControlsSleep="

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-boolean v0, p0, mLidControlsSleep:Z

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Z)V

    .line 13333
    invoke-virtual {p2, p1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 13334
    const-string/jumbo v0, "mShortPressOnPowerBehavior="

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v0, p0, mShortPressOnPowerBehavior:I

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(I)V

    .line 13335
    const-string v0, " mLongPressOnPowerBehavior="

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v0, p0, mLongPressOnPowerBehavior:I

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(I)V

    .line 13336
    invoke-virtual {p2, p1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 13337
    const-string/jumbo v0, "mDoublePressOnPowerBehavior="

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v0, p0, mDoublePressOnPowerBehavior:I

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(I)V

    .line 13338
    const-string v0, " mTriplePressOnPowerBehavior="

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v0, p0, mTriplePressOnPowerBehavior:I

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(I)V

    .line 13339
    invoke-virtual {p2, p1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    const-string/jumbo v0, "mHasSoftInput="

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-boolean v0, p0, mHasSoftInput:Z

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Z)V

    .line 13340
    invoke-virtual {p2, p1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    const-string/jumbo v0, "mAwake="

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-boolean v0, p0, mAwake:Z

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Z)V

    .line 13341
    invoke-virtual {p2, p1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    const-string/jumbo v0, "mScreenOnEarly="

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-boolean v0, p0, mScreenOnEarly:Z

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Z)V

    .line 13342
    const-string v0, " mScreenOnFully="

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-boolean v0, p0, mScreenOnFully:Z

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Z)V

    .line 13349
    invoke-virtual {p2, p1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    const-string/jumbo v0, "mKeyguardDrawComplete="

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-boolean v0, p0, mKeyguardDrawComplete:Z

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Z)V

    .line 13350
    const-string v0, " mWindowManagerDrawComplete="

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-boolean v0, p0, mWindowManagerDrawComplete:Z

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Z)V

    .line 13351
    invoke-virtual {p2, p1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    const-string/jumbo v0, "mOrientationSensorEnabled="

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 13352
    iget-boolean v0, p0, mOrientationSensorEnabled:Z

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Z)V

    .line 13353
    invoke-virtual {p2, p1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    const-string/jumbo v0, "mOverscanScreen=("

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v0, p0, mOverscanScreenLeft:I

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(I)V

    .line 13354
    const-string v0, ","

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v0, p0, mOverscanScreenTop:I

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(I)V

    .line 13355
    const-string v0, ") "

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v0, p0, mOverscanScreenWidth:I

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(I)V

    .line 13356
    const-string/jumbo v0, "x"

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v0, p0, mOverscanScreenHeight:I

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(I)V

    .line 13357
    iget v0, p0, mOverscanLeft:I

    if-nez v0, :cond_213

    iget v0, p0, mOverscanTop:I

    if-nez v0, :cond_213

    iget v0, p0, mOverscanRight:I

    if-nez v0, :cond_213

    iget v0, p0, mOverscanBottom:I

    if-eqz v0, :cond_23f

    .line 13359
    :cond_213
    invoke-virtual {p2, p1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    const-string/jumbo v0, "mOverscan left="

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v0, p0, mOverscanLeft:I

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(I)V

    .line 13360
    const-string v0, " top="

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v0, p0, mOverscanTop:I

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(I)V

    .line 13361
    const-string v0, " right="

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v0, p0, mOverscanRight:I

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(I)V

    .line 13362
    const-string v0, " bottom="

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v0, p0, mOverscanBottom:I

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(I)V

    .line 13364
    :cond_23f
    invoke-virtual {p2, p1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    const-string/jumbo v0, "mRestrictedOverscanScreen=("

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 13365
    iget v0, p0, mRestrictedOverscanScreenLeft:I

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(I)V

    .line 13366
    const-string v0, ","

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v0, p0, mRestrictedOverscanScreenTop:I

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(I)V

    .line 13367
    const-string v0, ") "

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v0, p0, mRestrictedOverscanScreenWidth:I

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(I)V

    .line 13368
    const-string/jumbo v0, "x"

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v0, p0, mRestrictedOverscanScreenHeight:I

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(I)V

    .line 13369
    invoke-virtual {p2, p1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    const-string/jumbo v0, "mUnrestrictedScreen=("

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v0, p0, mUnrestrictedScreenLeft:I

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(I)V

    .line 13370
    const-string v0, ","

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v0, p0, mUnrestrictedScreenTop:I

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(I)V

    .line 13371
    const-string v0, ") "

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v0, p0, mUnrestrictedScreenWidth:I

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(I)V

    .line 13372
    const-string/jumbo v0, "x"

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v0, p0, mUnrestrictedScreenHeight:I

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(I)V

    .line 13373
    invoke-virtual {p2, p1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    const-string/jumbo v0, "mRestrictedScreen=("

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v0, p0, mRestrictedScreenLeft:I

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(I)V

    .line 13374
    const-string v0, ","

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v0, p0, mRestrictedScreenTop:I

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(I)V

    .line 13375
    const-string v0, ") "

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v0, p0, mRestrictedScreenWidth:I

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(I)V

    .line 13376
    const-string/jumbo v0, "x"

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v0, p0, mRestrictedScreenHeight:I

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(I)V

    .line 13377
    invoke-virtual {p2, p1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    const-string/jumbo v0, "mStableFullscreen=("

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v0, p0, mStableFullscreenLeft:I

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(I)V

    .line 13378
    const-string v0, ","

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v0, p0, mStableFullscreenTop:I

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(I)V

    .line 13379
    const-string v0, ")-("

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v0, p0, mStableFullscreenRight:I

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(I)V

    .line 13380
    const-string v0, ","

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v0, p0, mStableFullscreenBottom:I

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(I)V

    const-string v0, ")"

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13381
    invoke-virtual {p2, p1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    const-string/jumbo v0, "mStable=("

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v0, p0, mStableLeft:I

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(I)V

    .line 13382
    const-string v0, ","

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v0, p0, mStableTop:I

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(I)V

    .line 13383
    const-string v0, ")-("

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v0, p0, mStableRight:I

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(I)V

    .line 13384
    const-string v0, ","

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v0, p0, mStableBottom:I

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(I)V

    const-string v0, ")"

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13385
    invoke-virtual {p2, p1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    const-string/jumbo v0, "mSystem=("

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v0, p0, mSystemLeft:I

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(I)V

    .line 13386
    const-string v0, ","

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v0, p0, mSystemTop:I

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(I)V

    .line 13387
    const-string v0, ")-("

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v0, p0, mSystemRight:I

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(I)V

    .line 13388
    const-string v0, ","

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v0, p0, mSystemBottom:I

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(I)V

    const-string v0, ")"

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13389
    invoke-virtual {p2, p1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    const-string/jumbo v0, "mCur=("

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v0, p0, mCurLeft:I

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(I)V

    .line 13390
    const-string v0, ","

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v0, p0, mCurTop:I

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(I)V

    .line 13391
    const-string v0, ")-("

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v0, p0, mCurRight:I

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(I)V

    .line 13392
    const-string v0, ","

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v0, p0, mCurBottom:I

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(I)V

    const-string v0, ")"

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13393
    invoke-virtual {p2, p1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    const-string/jumbo v0, "mContent=("

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v0, p0, mContentLeft:I

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(I)V

    .line 13394
    const-string v0, ","

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v0, p0, mContentTop:I

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(I)V

    .line 13395
    const-string v0, ")-("

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v0, p0, mContentRight:I

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(I)V

    .line 13396
    const-string v0, ","

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v0, p0, mContentBottom:I

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(I)V

    const-string v0, ")"

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13397
    invoke-virtual {p2, p1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    const-string/jumbo v0, "mVoiceContent=("

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v0, p0, mVoiceContentLeft:I

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(I)V

    .line 13398
    const-string v0, ","

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v0, p0, mVoiceContentTop:I

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(I)V

    .line 13399
    const-string v0, ")-("

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v0, p0, mVoiceContentRight:I

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(I)V

    .line 13400
    const-string v0, ","

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v0, p0, mVoiceContentBottom:I

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(I)V

    const-string v0, ")"

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13401
    invoke-virtual {p2, p1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    const-string/jumbo v0, "mDock=("

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v0, p0, mDockLeft:I

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(I)V

    .line 13402
    const-string v0, ","

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v0, p0, mDockTop:I

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(I)V

    .line 13403
    const-string v0, ")-("

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v0, p0, mDockRight:I

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(I)V

    .line 13404
    const-string v0, ","

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v0, p0, mDockBottom:I

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(I)V

    const-string v0, ")"

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13405
    invoke-virtual {p2, p1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    const-string/jumbo v0, "mDockLayer="

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v0, p0, mDockLayer:I

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(I)V

    .line 13406
    const-string v0, " mStatusBarLayer="

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v0, p0, mStatusBarLayer:I

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(I)V

    .line 13407
    invoke-virtual {p2, p1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    const-string/jumbo v0, "mShowingLockscreen="

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-boolean v0, p0, mShowingLockscreen:Z

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Z)V

    .line 13408
    const-string v0, " mShowingDream="

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-boolean v0, p0, mShowingDream:Z

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Z)V

    .line 13409
    const-string v0, " mDreamingLockscreen="

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-boolean v0, p0, mDreamingLockscreen:Z

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Z)V

    .line 13410
    const-string v0, " mDreamingSleepToken="

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-object v0, p0, mDreamingSleepToken:Landroid/app/ActivityManagerInternal$SleepToken;

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    .line 13411
    iget-object v0, p0, mLastInputMethodWindow:Landroid/view/WindowManagerPolicy$WindowState;

    if-eqz v0, :cond_473

    .line 13412
    invoke-virtual {p2, p1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    const-string/jumbo v0, "mLastInputMethodWindow="

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 13413
    iget-object v0, p0, mLastInputMethodWindow:Landroid/view/WindowManagerPolicy$WindowState;

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    .line 13415
    :cond_473
    iget-object v0, p0, mLastInputMethodTargetWindow:Landroid/view/WindowManagerPolicy$WindowState;

    if-eqz v0, :cond_485

    .line 13416
    invoke-virtual {p2, p1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    const-string/jumbo v0, "mLastInputMethodTargetWindow="

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 13417
    iget-object v0, p0, mLastInputMethodTargetWindow:Landroid/view/WindowManagerPolicy$WindowState;

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    .line 13419
    :cond_485
    iget-object v0, p0, mStatusBar:Landroid/view/WindowManagerPolicy$WindowState;

    if-eqz v0, :cond_4a3

    .line 13420
    invoke-virtual {p2, p1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    const-string/jumbo v0, "mStatusBar="

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 13421
    iget-object v0, p0, mStatusBar:Landroid/view/WindowManagerPolicy$WindowState;

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/Object;)V

    const-string v0, " isStatusBarKeyguard="

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 13422
    invoke-virtual {p0}, isStatusBarKeyguard()Z

    move-result v0

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Z)V

    .line 13424
    :cond_4a3
    iget-object v0, p0, mNavigationBar:Landroid/view/WindowManagerPolicy$WindowState;

    if-eqz v0, :cond_4b5

    .line 13425
    invoke-virtual {p2, p1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    const-string/jumbo v0, "mNavigationBar="

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 13426
    iget-object v0, p0, mNavigationBar:Landroid/view/WindowManagerPolicy$WindowState;

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    .line 13429
    :cond_4b5
    iget-object v0, p0, mCarModeBar:Landroid/view/WindowManagerPolicy$WindowState;

    if-eqz v0, :cond_4c7

    .line 13430
    invoke-virtual {p2, p1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    const-string/jumbo v0, "mCarModeBar="

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 13431
    iget-object v0, p0, mCarModeBar:Landroid/view/WindowManagerPolicy$WindowState;

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    .line 13435
    :cond_4c7
    iget-object v0, p0, mNightClock:Landroid/view/WindowManagerPolicy$WindowState;

    if-eqz v0, :cond_4d9

    .line 13436
    invoke-virtual {p2, p1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    const-string/jumbo v0, "mNightClock="

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 13437
    iget-object v0, p0, mNightClock:Landroid/view/WindowManagerPolicy$WindowState;

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    .line 13440
    :cond_4d9
    iget-object v0, p0, mFocusedWindow:Landroid/view/WindowManagerPolicy$WindowState;

    if-eqz v0, :cond_4eb

    .line 13441
    invoke-virtual {p2, p1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    const-string/jumbo v0, "mFocusedWindow="

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 13442
    iget-object v0, p0, mFocusedWindow:Landroid/view/WindowManagerPolicy$WindowState;

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    .line 13445
    :cond_4eb
    iget-object v0, p0, mFakeFocusedWindow:Landroid/view/WindowManagerPolicy$WindowState;

    if-eqz v0, :cond_4fd

    .line 13446
    invoke-virtual {p2, p1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    const-string/jumbo v0, "mFakeFocusedWindow="

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 13447
    iget-object v0, p0, mFakeFocusedWindow:Landroid/view/WindowManagerPolicy$WindowState;

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    .line 13450
    :cond_4fd
    iget-object v0, p0, mFocusedApp:Landroid/view/IApplicationToken;

    if-eqz v0, :cond_50f

    .line 13451
    invoke-virtual {p2, p1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    const-string/jumbo v0, "mFocusedApp="

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 13452
    iget-object v0, p0, mFocusedApp:Landroid/view/IApplicationToken;

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    .line 13454
    :cond_50f
    iget-object v0, p0, mWinDismissingKeyguard:Landroid/view/WindowManagerPolicy$WindowState;

    if-eqz v0, :cond_521

    .line 13455
    invoke-virtual {p2, p1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    const-string/jumbo v0, "mWinDismissingKeyguard="

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 13456
    iget-object v0, p0, mWinDismissingKeyguard:Landroid/view/WindowManagerPolicy$WindowState;

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    .line 13458
    :cond_521
    iget-object v0, p0, mTopFullscreenOpaqueWindowState:Landroid/view/WindowManagerPolicy$WindowState;

    if-eqz v0, :cond_533

    .line 13459
    invoke-virtual {p2, p1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    const-string/jumbo v0, "mTopFullscreenOpaqueWindowState="

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 13460
    iget-object v0, p0, mTopFullscreenOpaqueWindowState:Landroid/view/WindowManagerPolicy$WindowState;

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    .line 13462
    :cond_533
    iget-object v0, p0, mTopFullscreenOpaqueOrDimmingWindowState:Landroid/view/WindowManagerPolicy$WindowState;

    if-eqz v0, :cond_545

    .line 13463
    invoke-virtual {p2, p1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    const-string/jumbo v0, "mTopFullscreenOpaqueOrDimmingWindowState="

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 13464
    iget-object v0, p0, mTopFullscreenOpaqueOrDimmingWindowState:Landroid/view/WindowManagerPolicy$WindowState;

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    .line 13466
    :cond_545
    iget-boolean v0, p0, mForcingShowNavBar:Z

    if-eqz v0, :cond_562

    .line 13467
    invoke-virtual {p2, p1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    const-string/jumbo v0, "mForcingShowNavBar="

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 13468
    iget-boolean v0, p0, mForcingShowNavBar:Z

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Z)V

    const-string/jumbo v0, "mForcingShowNavBarLayer="

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 13469
    iget v0, p0, mForcingShowNavBarLayer:I

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(I)V

    .line 13471
    :cond_562
    invoke-virtual {p2, p1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    const-string/jumbo v0, "mTopIsFullscreen="

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-boolean v0, p0, mTopIsFullscreen:Z

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Z)V

    .line 13472
    const-string v0, " mHideLockScreen="

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-boolean v0, p0, mHideLockScreen:Z

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Z)V

    .line 13473
    invoke-virtual {p2, p1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    const-string/jumbo v0, "mForceStatusBar="

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-boolean v0, p0, mForceStatusBar:Z

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Z)V

    .line 13474
    const-string v0, " mForceStatusBarFromKeyguard="

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 13475
    iget-boolean v0, p0, mForceStatusBarFromKeyguard:Z

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Z)V

    .line 13476
    invoke-virtual {p2, p1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    const-string/jumbo v0, "mDismissKeyguard="

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v0, p0, mDismissKeyguard:I

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(I)V

    .line 13477
    const-string v0, " mWinDismissingKeyguard="

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-object v0, p0, mWinDismissingKeyguard:Landroid/view/WindowManagerPolicy$WindowState;

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/Object;)V

    .line 13478
    const-string v0, " mHomePressed="

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-boolean v0, p0, mHomePressed:Z

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Z)V

    .line 13479
    invoke-virtual {p2, p1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    const-string/jumbo v0, "mAllowLockscreenWhenOn="

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-boolean v0, p0, mAllowLockscreenWhenOn:Z

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Z)V

    .line 13480
    const-string v0, " mLockScreenTimeout="

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v0, p0, mLockScreenTimeout:I

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(I)V

    .line 13481
    const-string v0, " mLockScreenTimerActive="

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-boolean v0, p0, mLockScreenTimerActive:Z

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Z)V

    .line 13482
    invoke-virtual {p2, p1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    const-string/jumbo v0, "mEndcallBehavior="

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v0, p0, mEndcallBehavior:I

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(I)V

    .line 13483
    const-string v0, " mIncallPowerBehavior="

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v0, p0, mIncallPowerBehavior:I

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(I)V

    .line 13484
    const-string v0, " mLongPressOnHomeBehavior="

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v0, p0, mLongPressOnHomeBehavior:I

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(I)V

    .line 13485
    invoke-virtual {p2, p1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    const-string/jumbo v0, "mLandscapeRotation="

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v0, p0, mLandscapeRotation:I

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(I)V

    .line 13486
    const-string v0, " mSeascapeRotation="

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v0, p0, mSeascapeRotation:I

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(I)V

    .line 13487
    invoke-virtual {p2, p1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    const-string/jumbo v0, "mPortraitRotation="

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v0, p0, mPortraitRotation:I

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(I)V

    .line 13488
    const-string v0, " mUpsideDownRotation="

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v0, p0, mUpsideDownRotation:I

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(I)V

    .line 13489
    invoke-virtual {p2, p1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    const-string/jumbo v0, "mDemoHdmiRotation="

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v0, p0, mDemoHdmiRotation:I

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(I)V

    .line 13490
    const-string v0, " mDemoHdmiRotationLock="

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-boolean v0, p0, mDemoHdmiRotationLock:Z

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Z)V

    .line 13491
    invoke-virtual {p2, p1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    const-string/jumbo v0, "mUndockedHdmiRotation="

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v0, p0, mUndockedHdmiRotation:I

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(I)V

    .line 13493
    invoke-virtual {p2, p1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    const-string/jumbo v0, "mIsDefaultKeyguardRotationAnmationAlwaysUsed="

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-boolean v0, p0, mIsDefaultKeyguardRotationAnmationAlwaysUsed:Z

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Z)V

    .line 13496
    iget-object v0, p0, mGlobalKeyManager:Lcom/android/server/policy/GlobalKeyManager;

    invoke-virtual {v0, p1, p2}, Lcom/android/server/policy/GlobalKeyManager;->dump(Ljava/lang/String;Ljava/io/PrintWriter;)V

    .line 13497
    iget-object v0, p0, mStatusBarController:Lcom/android/server/policy/StatusBarController;

    invoke-virtual {v0, p2, p1}, Lcom/android/server/policy/StatusBarController;->dump(Ljava/io/PrintWriter;Ljava/lang/String;)V

    .line 13498
    iget-object v0, p0, mNavigationBarController:Lcom/android/server/policy/BarController;

    invoke-virtual {v0, p2, p1}, Lcom/android/server/policy/BarController;->dump(Ljava/io/PrintWriter;Ljava/lang/String;)V

    .line 13499
    invoke-static {p1, p2}, Lcom/android/server/policy/PolicyControl;->dump(Ljava/lang/String;Ljava/io/PrintWriter;)V

    .line 13501
    iget-object v0, p0, mWakeGestureListener:Lcom/android/server/policy/PhoneWindowManager$MyWakeGestureListener;

    if-eqz v0, :cond_677

    .line 13502
    iget-object v0, p0, mWakeGestureListener:Lcom/android/server/policy/PhoneWindowManager$MyWakeGestureListener;

    invoke-virtual {v0, p2, p1}, Lcom/android/server/policy/PhoneWindowManager$MyWakeGestureListener;->dump(Ljava/io/PrintWriter;Ljava/lang/String;)V

    .line 13504
    :cond_677
    iget-object v0, p0, mOrientationListener:Lcom/android/server/policy/PhoneWindowManager$MyOrientationListener;

    if-eqz v0, :cond_680

    .line 13505
    iget-object v0, p0, mOrientationListener:Lcom/android/server/policy/PhoneWindowManager$MyOrientationListener;

    invoke-virtual {v0, p2, p1}, Lcom/android/server/policy/PhoneWindowManager$MyOrientationListener;->dump(Ljava/io/PrintWriter;Ljava/lang/String;)V

    .line 13507
    :cond_680
    iget-object v0, p0, mBurnInProtectionHelper:Lcom/android/server/policy/BurnInProtectionHelper;

    if-eqz v0, :cond_689

    .line 13508
    iget-object v0, p0, mBurnInProtectionHelper:Lcom/android/server/policy/BurnInProtectionHelper;

    invoke-virtual {v0, p1, p2}, Lcom/android/server/policy/BurnInProtectionHelper;->dump(Ljava/lang/String;Ljava/io/PrintWriter;)V

    .line 13510
    :cond_689
    iget-object v0, p0, mKeyguardDelegate:Lcom/android/server/policy/keyguard/KeyguardServiceDelegate;

    if-eqz v0, :cond_692

    .line 13511
    iget-object v0, p0, mKeyguardDelegate:Lcom/android/server/policy/keyguard/KeyguardServiceDelegate;

    invoke-virtual {v0, p1, p2}, Lcom/android/server/policy/keyguard/KeyguardServiceDelegate;->dump(Ljava/lang/String;Ljava/io/PrintWriter;)V

    .line 13516
    :cond_692
    const-string v0, ""

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13517
    invoke-virtual {p2, p1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    const-string/jumbo v0, "mMobileKeyboardEnabled="

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-boolean v0, p0, mMobileKeyboardEnabled:Z

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Z)V

    .line 13522
    iget-object v0, p0, mSPWM:Lcom/android/server/policy/sec/SamsungPhoneWindowManager;

    invoke-virtual {v0, p1, p2, p3}, Lcom/android/server/policy/sec/SamsungPhoneWindowManager;->dump(Ljava/lang/String;Ljava/io/PrintWriter;[Ljava/lang/String;)V

    .line 13523
    iget-object v0, p0, mSystemKeyManager:Lcom/android/server/policy/sec/SystemKeyManager;

    invoke-virtual {v0, p1, p2}, Lcom/android/server/policy/sec/SystemKeyManager;->dump(Ljava/lang/String;Ljava/io/PrintWriter;)V

    .line 13527
    invoke-virtual {p2, p1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    const-string/jumbo v0, "mCoverCloseRotation="

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v0, p0, mCoverCloseRotation:I

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(I)V

    .line 13528
    invoke-virtual {p2, p1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    const-string/jumbo v0, "mIsSupportFlipCover="

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-boolean v0, p0, mIsSupportFlipCover:Z

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Z)V

    .line 13529
    invoke-virtual {p2, p1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    const-string/jumbo v0, "mIsSupportSViewCover="

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-boolean v0, p0, mIsSupportSViewCover:Z

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Z)V

    .line 13530
    invoke-virtual {p2, p1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    const-string/jumbo v0, "mHideSViewCoverWindowState="

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-object v0, p0, mHideSViewCoverWindowState:Landroid/view/WindowManagerPolicy$WindowState;

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    .line 13531
    invoke-virtual {p2, p1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    const-string v0, "OriginalmUnrestrictedScreen=("

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v0, p0, mOriginalUnrestrictedScreenLeft:I

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(I)V

    .line 13532
    const-string v0, ","

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v0, p0, mOriginalUnrestrictedScreenTop:I

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(I)V

    .line 13533
    const-string v0, ") "

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v0, p0, mOriginalUnrestrictedScreenWidth:I

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(I)V

    .line 13534
    const-string/jumbo v0, "x"

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v0, p0, mOriginalUnrestrictedScreenHeight:I

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(I)V

    .line 13535
    invoke-virtual {p2, p1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    const-string/jumbo v0, "mOriginalStableFullscreen=("

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v0, p0, mOriginalStableFullscreenLeft:I

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(I)V

    .line 13536
    const-string v0, ","

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v0, p0, mOriginalStableFullscreenTop:I

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(I)V

    .line 13537
    const-string v0, ")-("

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v0, p0, mOriginalStableFullscreenRight:I

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(I)V

    .line 13538
    const-string v0, ","

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v0, p0, mOriginalStableFullscreenBottom:I

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(I)V

    const-string v0, ")"

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13539
    invoke-virtual {p2, p1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    const-string/jumbo v0, "mOriginalStable=("

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v0, p0, mOriginalStableLeft:I

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(I)V

    .line 13540
    const-string v0, ","

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v0, p0, mOriginalStableTop:I

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(I)V

    .line 13541
    const-string v0, ")-("

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v0, p0, mOriginalStableRight:I

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(I)V

    .line 13542
    const-string v0, ","

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v0, p0, mOriginalStableBottom:I

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(I)V

    const-string v0, ")"

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13543
    invoke-virtual {p2, p1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    const-string/jumbo v0, "mOriginalSystem=("

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v0, p0, mOriginalSystemLeft:I

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(I)V

    .line 13544
    const-string v0, ","

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v0, p0, mOriginalSystemTop:I

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(I)V

    .line 13545
    const-string v0, ")-("

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v0, p0, mOriginalSystemRight:I

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(I)V

    .line 13546
    const-string v0, ","

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v0, p0, mOriginalSystemBottom:I

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(I)V

    const-string v0, ")"

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13547
    invoke-virtual {p2, p1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    const-string/jumbo v0, "mOriginalDock=("

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v0, p0, mOriginalDockLeft:I

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(I)V

    .line 13548
    const-string v0, ","

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v0, p0, mOriginalDockTop:I

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(I)V

    .line 13549
    const-string v0, ")-("

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v0, p0, mOriginalDockRight:I

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(I)V

    .line 13550
    const-string v0, ","

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v0, p0, mOriginalDockBottom:I

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(I)V

    const-string v0, ")"

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13551
    invoke-virtual {p2, p1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    const-string/jumbo v0, "mSViewCoverUnrestrictedScreen=("

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v0, p0, mSViewCoverUnrestrictedScreenLeft:I

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(I)V

    .line 13552
    const-string v0, ","

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v0, p0, mSViewCoverUnrestrictedScreenTop:I

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(I)V

    .line 13553
    const-string v0, ") "

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v0, p0, mSViewCoverUnrestrictedScreenWidth:I

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(I)V

    .line 13554
    const-string/jumbo v0, "x"

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v0, p0, mSViewCoverUnrestrictedScreenHeight:I

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(I)V

    .line 13555
    invoke-virtual {p2, p1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    const-string/jumbo v0, "mSViewCoverStableFullscreen=("

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v0, p0, mSViewCoverStableFullscreenLeft:I

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(I)V

    .line 13556
    const-string v0, ","

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v0, p0, mSViewCoverStableFullscreenTop:I

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(I)V

    .line 13557
    const-string v0, ")-("

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v0, p0, mSViewCoverStableFullscreenRight:I

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(I)V

    .line 13558
    const-string v0, ","

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v0, p0, mSViewCoverStableFullscreenBottom:I

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(I)V

    const-string v0, ")"

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13559
    invoke-virtual {p2, p1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    const-string/jumbo v0, "mSViewCoverStable=("

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v0, p0, mSViewCoverStableLeft:I

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(I)V

    .line 13560
    const-string v0, ","

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v0, p0, mSViewCoverStableTop:I

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(I)V

    .line 13561
    const-string v0, ")-("

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v0, p0, mSViewCoverStableRight:I

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(I)V

    .line 13562
    const-string v0, ","

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v0, p0, mSViewCoverStableBottom:I

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(I)V

    const-string v0, ")"

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13563
    invoke-virtual {p2, p1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    const-string/jumbo v0, "mSViewCoverSystem=("

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v0, p0, mSViewCoverSystemLeft:I

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(I)V

    .line 13564
    const-string v0, ","

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v0, p0, mSViewCoverSystemTop:I

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(I)V

    .line 13565
    const-string v0, ")-("

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v0, p0, mSViewCoverSystemRight:I

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(I)V

    .line 13566
    const-string v0, ","

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v0, p0, mSViewCoverSystemBottom:I

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(I)V

    const-string v0, ")"

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13567
    invoke-virtual {p2, p1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    const-string/jumbo v0, "mSViewCoverDock=("

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v0, p0, mSViewCoverDockLeft:I

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(I)V

    .line 13568
    const-string v0, ","

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v0, p0, mSViewCoverDockTop:I

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(I)V

    .line 13569
    const-string v0, ")-("

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v0, p0, mSViewCoverDockRight:I

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(I)V

    .line 13570
    const-string v0, ","

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v0, p0, mSViewCoverDockBottom:I

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(I)V

    const-string v0, ")"

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13576
    iget-object v0, p0, mMultiPhoneWindowManager:Lcom/android/server/policy/multiwindow/MultiPhoneWindowManager;

    invoke-virtual {v0, p1, p2}, Lcom/android/server/policy/multiwindow/MultiPhoneWindowManager;->dump(Ljava/lang/String;Ljava/io/PrintWriter;)V

    .line 13582
    iget-object v0, p0, mCocktailPhoneWindowManager:Lcom/android/server/policy/cocktail/CocktailPhoneWindowManager;

    invoke-virtual {v0, p1, p2}, Lcom/android/server/policy/cocktail/CocktailPhoneWindowManager;->dump(Ljava/lang/String;Ljava/io/PrintWriter;)V

    .line 13595
    return-void
.end method

.method public enableKeyguard(Z)V
    .registers 3
    .param p1, "enabled"    # Z

    .prologue
    .line 10535
    iget-object v0, p0, mKeyguardDelegate:Lcom/android/server/policy/keyguard/KeyguardServiceDelegate;

    if-eqz v0, :cond_9

    .line 10536
    iget-object v0, p0, mKeyguardDelegate:Lcom/android/server/policy/keyguard/KeyguardServiceDelegate;

    invoke-virtual {v0, p1}, Lcom/android/server/policy/keyguard/KeyguardServiceDelegate;->setKeyguardEnabled(Z)V

    .line 10538
    :cond_9
    return-void
.end method

.method public enableScreenAfterBoot()V
    .registers 4

    .prologue
    const/4 v0, 0x1

    .line 11453
    invoke-virtual {p0}, readLidState()V

    .line 11454
    invoke-direct {p0}, applyLidSwitchState()V

    .line 11455
    invoke-virtual {p0, v0}, updateRotation(Z)V

    .line 11456
    iget-object v1, p0, mContext:Landroid/content/Context;

    invoke-static {v1}, Lcom/android/server/policy/sec/SamsungPolicyProperties;->FolderTypeFeature(Landroid/content/Context;)I

    move-result v1

    const/4 v2, 0x2

    if-ne v1, v2, :cond_20

    iget-object v1, p0, mKeyguardDelegate:Lcom/android/server/policy/keyguard/KeyguardServiceDelegate;

    if-eqz v1, :cond_20

    .line 11458
    iget-object v1, p0, mKeyguardDelegate:Lcom/android/server/policy/keyguard/KeyguardServiceDelegate;

    iget v2, p0, mLidState:I

    if-ne v2, v0, :cond_21

    :goto_1d
    invoke-virtual {v1, v0}, Lcom/android/server/policy/keyguard/KeyguardServiceDelegate;->changeLidState(Z)V

    .line 11460
    :cond_20
    return-void

    .line 11458
    :cond_21
    const/4 v0, 0x0

    goto :goto_1d
.end method

.method public exitKeyguardSecurely(Landroid/view/WindowManagerPolicy$OnKeyguardExitResult;)V
    .registers 3
    .param p1, "callback"    # Landroid/view/WindowManagerPolicy$OnKeyguardExitResult;

    .prologue
    .line 10543
    iget-object v0, p0, mKeyguardDelegate:Lcom/android/server/policy/keyguard/KeyguardServiceDelegate;

    if-eqz v0, :cond_9

    .line 10544
    iget-object v0, p0, mKeyguardDelegate:Lcom/android/server/policy/keyguard/KeyguardServiceDelegate;

    invoke-virtual {v0, p1}, Lcom/android/server/policy/keyguard/KeyguardServiceDelegate;->verifyUnlock(Landroid/view/WindowManagerPolicy$OnKeyguardExitResult;)V

    .line 10546
    :cond_9
    return-void
.end method

.method public finishLayoutLw()V
    .registers 1

    .prologue
    .line 7515
    return-void
.end method

.method public finishPostLayoutPolicyLw()I
    .registers 3

    .prologue
    .line 7969
    const/4 v0, 0x0

    const/4 v1, 0x1

    invoke-virtual {p0, v0, v1}, finishPostLayoutPolicyLw(IZ)I

    move-result v0

    return v0
.end method

.method public finishPostLayoutPolicyLw(IZ)I
    .registers 34
    .param p1, "displayId"    # I
    .param p2, "isBuiltInDisplay"    # Z

    .prologue
    .line 7973
    const/16 v17, 0x0

    .line 7974
    .local v17, "mStatusBar":Landroid/view/WindowManagerPolicy$WindowState;
    const/16 v16, 0x0

    .line 7981
    .local v16, "mNavigationBar":Landroid/view/WindowManagerPolicy$WindowState;
    const/4 v10, 0x0

    .line 7982
    .local v10, "isForceHideStatusBarWithFullDisplay":Z
    const/4 v11, 0x0

    .line 7983
    .local v11, "longPressedMinimizeIcon":Landroid/view/WindowManagerPolicy$WindowState;
    const/16 v21, 0x0

    .line 7998
    .local v21, "minimizeIconLongPressed":Z
    move-object/from16 v0, p0

    iget-object v0, v0, mStatusBar:Landroid/view/WindowManagerPolicy$WindowState;

    move-object/from16 v17, v0

    .line 7999
    move-object/from16 v0, p0

    iget-object v0, v0, mNavigationBar:Landroid/view/WindowManagerPolicy$WindowState;

    move-object/from16 v16, v0

    .line 8000
    move-object/from16 v0, p0

    iget-boolean v0, v0, mTopIsFullscreen:Z

    move/from16 v19, v0

    .line 8001
    .local v19, "mTopIsFullscreen":Z
    move-object/from16 v0, p0

    iget v15, v0, mLastSystemUiFlags:I

    .line 8002
    .local v15, "mLastSystemUiFlags":I
    move-object/from16 v0, p0

    iget-object v0, v0, mTopFullscreenOpaqueWindowState:Landroid/view/WindowManagerPolicy$WindowState;

    move-object/from16 v18, v0

    .line 8003
    .local v18, "mTopFullscreenOpaqueWindowState":Landroid/view/WindowManagerPolicy$WindowState;
    move-object/from16 v0, p0

    iget-object v0, v0, mWinShowWhenLocked:Landroid/view/WindowManagerPolicy$WindowState;

    move-object/from16 v20, v0

    .line 8004
    .local v20, "mWinShowWhenLocked":Landroid/view/WindowManagerPolicy$WindowState;
    move-object/from16 v0, p0

    iget-boolean v13, v0, mForceStatusBar:Z

    .line 8007
    .local v13, "mForceStatusBar":Z
    const/4 v5, 0x0

    .line 8008
    .local v5, "changes":I
    const/16 v25, 0x0

    .line 8009
    .local v25, "topIsFullscreen":Z
    if-eqz v20, :cond_88

    if-eqz v18, :cond_88

    invoke-interface/range {v20 .. v20}, Landroid/view/WindowManagerPolicy$WindowState;->getAppToken()Landroid/view/IApplicationToken;

    move-result-object v27

    invoke-interface/range {v18 .. v18}, Landroid/view/WindowManagerPolicy$WindowState;->getAppToken()Landroid/view/IApplicationToken;

    move-result-object v28

    move-object/from16 v0, v27

    move-object/from16 v1, v28

    if-eq v0, v1, :cond_88

    invoke-virtual/range {p0 .. p0}, isKeyguardLocked()Z

    move-result v27

    if-eqz v27, :cond_88

    invoke-interface/range {v20 .. v20}, Landroid/view/WindowManagerPolicy$WindowState;->getAttrs()Landroid/view/WindowManager$LayoutParams;

    move-result-object v27

    move-object/from16 v0, v27

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->coverMode:I

    move/from16 v27, v0

    if-nez v27, :cond_88

    .line 8016
    invoke-interface/range {v20 .. v20}, Landroid/view/WindowManagerPolicy$WindowState;->getAttrs()Landroid/view/WindowManager$LayoutParams;

    move-result-object v27

    move-object/from16 v0, v27

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->flags:I

    move/from16 v27, v0

    const/high16 v28, 0x100000

    and-int v27, v27, v28

    if-nez v27, :cond_7b

    .line 8017
    invoke-interface/range {v20 .. v20}, Landroid/view/WindowManagerPolicy$WindowState;->getAttrs()Landroid/view/WindowManager$LayoutParams;

    move-result-object v27

    move-object/from16 v0, v27

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->flags:I

    move/from16 v28, v0

    const/high16 v29, 0x100000

    or-int v28, v28, v29

    move/from16 v0, v28

    move-object/from16 v1, v27

    iput v0, v1, Landroid/view/WindowManager$LayoutParams;->flags:I

    .line 8018
    or-int/lit8 v5, v5, 0x4

    .line 8021
    :cond_7b
    if-eqz v18, :cond_86

    .line 8023
    const/16 v27, 0x0

    move-object/from16 v0, v18

    move/from16 v1, v27

    invoke-interface {v0, v1}, Landroid/view/WindowManagerPolicy$WindowState;->hideLw(Z)Z

    .line 8025
    :cond_86
    move-object/from16 v18, v20

    .line 8028
    :cond_88
    const/16 v24, 0x0

    .line 8032
    .local v24, "topFullOpaqueWindowState":Landroid/view/WindowManagerPolicy$WindowState;
    move-object/from16 v0, p0

    iget-object v0, v0, mMultiPhoneWindowManager:Lcom/android/server/policy/multiwindow/MultiPhoneWindowManager;

    move-object/from16 v27, v0

    invoke-virtual/range {v27 .. v27}, Lcom/android/server/policy/multiwindow/MultiPhoneWindowManager;->getLongPressedMinimizeIcon()Landroid/view/WindowManagerPolicy$WindowState;

    move-result-object v11

    .line 8033
    if-eqz v11, :cond_3b8

    .line 8034
    move-object/from16 v24, v11

    .line 8035
    const/16 v21, 0x1

    .line 8044
    :goto_9a
    if-eqz v24, :cond_3bc

    invoke-interface/range {v24 .. v24}, Landroid/view/WindowManagerPolicy$WindowState;->getAttrs()Landroid/view/WindowManager$LayoutParams;

    move-result-object v12

    .line 8052
    .local v12, "lp":Landroid/view/WindowManager$LayoutParams;
    :goto_a0
    move-object/from16 v0, p0

    iget-boolean v0, v0, mShowingDream:Z

    move/from16 v27, v0

    if-nez v27, :cond_3bf

    .line 8053
    move-object/from16 v0, p0

    iget-boolean v0, v0, mShowingLockscreen:Z

    move/from16 v27, v0

    move/from16 v0, v27

    move-object/from16 v1, p0

    iput-boolean v0, v1, mDreamingLockscreen:Z

    .line 8054
    move-object/from16 v0, p0

    iget-boolean v0, v0, mDreamingSleepTokenNeeded:Z

    move/from16 v27, v0

    if-eqz v27, :cond_d7

    .line 8055
    const/16 v27, 0x0

    move/from16 v0, v27

    move-object/from16 v1, p0

    iput-boolean v0, v1, mDreamingSleepTokenNeeded:Z

    .line 8056
    move-object/from16 v0, p0

    iget-object v0, v0, mHandler:Landroid/os/Handler;

    move-object/from16 v27, v0

    const/16 v28, 0xf

    const/16 v29, 0x0

    const/16 v30, 0x1

    invoke-virtual/range {v27 .. v30}, Landroid/os/Handler;->obtainMessage(III)Landroid/os/Message;

    move-result-object v27

    invoke-virtual/range {v27 .. v27}, Landroid/os/Message;->sendToTarget()V

    .line 8066
    :cond_d7
    :goto_d7
    invoke-virtual/range {p0 .. p0}, isForceHideByNightClock()Z

    move-result v27

    if-eqz v27, :cond_128

    .line 8067
    move-object/from16 v0, p0

    iget-object v0, v0, mPowerManager:Landroid/os/PowerManager;

    move-object/from16 v27, v0

    invoke-virtual/range {v27 .. v27}, Landroid/os/PowerManager;->isScreenOn()Z

    move-result v27

    if-eqz v27, :cond_3e4

    move-object/from16 v0, p0

    iget-object v0, v0, mSPWM:Lcom/android/server/policy/sec/SamsungPhoneWindowManager;

    move-object/from16 v27, v0

    invoke-virtual/range {v27 .. v27}, Lcom/android/server/policy/sec/SamsungPhoneWindowManager;->getAodStartState()I

    move-result v27

    const/16 v28, 0x2

    move/from16 v0, v27

    move/from16 v1, v28

    if-ne v0, v1, :cond_3e4

    .line 8069
    move-object/from16 v0, p0

    iget-object v0, v0, mNightClock:Landroid/view/WindowManagerPolicy$WindowState;

    move-object/from16 v27, v0

    const/16 v28, 0x0

    invoke-interface/range {v27 .. v28}, Landroid/view/WindowManagerPolicy$WindowState;->hideLw(Z)Z

    move-result v27

    if-eqz v27, :cond_128

    .line 8070
    move-object/from16 v0, p0

    iget-object v0, v0, mStatusBarController:Lcom/android/server/policy/StatusBarController;

    move-object/from16 v27, v0

    const/16 v28, 0x1

    const/16 v29, 0x0

    invoke-virtual/range {v27 .. v29}, Lcom/android/server/policy/StatusBarController;->setBarShowingLw(ZZ)Z

    .line 8071
    const-string v27, "WindowManager"

    const-string/jumbo v28, "finishPostLayoutPolicyLw : mNightClock.hideLw by screenTurnedOn"

    invoke-static/range {v27 .. v28}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 8072
    or-int/lit8 v5, v5, 0x16

    .line 8074
    const/16 v27, 0x0

    move/from16 v0, v27

    move-object/from16 v1, p0

    iput-boolean v0, v1, mIsNightClockShow:Z

    .line 8088
    :cond_128
    :goto_128
    if-eqz v17, :cond_227

    invoke-virtual/range {p0 .. p0}, isForceHideByNightClock()Z

    move-result v27

    if-nez v27, :cond_227

    .line 8089
    sget-boolean v27, DEBUG_LAYOUT:Z

    if-eqz v27, :cond_16d

    const-string v27, "WindowManager"

    new-instance v28, Ljava/lang/StringBuilder;

    invoke-direct/range {v28 .. v28}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v29, "force="

    invoke-virtual/range {v28 .. v29}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v28

    move-object/from16 v0, v28

    invoke-virtual {v0, v13}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v28

    const-string v29, " forcefkg="

    invoke-virtual/range {v28 .. v29}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v28

    move-object/from16 v0, p0

    iget-boolean v0, v0, mForceStatusBarFromKeyguard:Z

    move/from16 v29, v0

    invoke-virtual/range {v28 .. v29}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v28

    const-string v29, " top="

    invoke-virtual/range {v28 .. v29}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v28

    move-object/from16 v0, v28

    move-object/from16 v1, v18

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v28

    invoke-virtual/range {v28 .. v28}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v28

    invoke-static/range {v27 .. v28}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 8092
    :cond_16d
    move-object/from16 v0, p0

    iget-boolean v0, v0, mForceStatusBarTransparent:Z

    move/from16 v27, v0

    if-eqz v27, :cond_41f

    if-nez v13, :cond_41f

    move-object/from16 v0, p0

    iget-boolean v0, v0, mForceStatusBarFromKeyguard:Z

    move/from16 v27, v0

    if-nez v27, :cond_41f

    const/16 v23, 0x1

    .line 8095
    .local v23, "shouldBeTransparent":Z
    :goto_181
    if-nez v23, :cond_423

    .line 8096
    move-object/from16 v0, p0

    iget-object v0, v0, mStatusBarController:Lcom/android/server/policy/StatusBarController;

    move-object/from16 v27, v0

    const/16 v28, 0x0

    invoke-virtual/range {v27 .. v28}, Lcom/android/server/policy/StatusBarController;->setShowTransparent(Z)V

    .line 8100
    :cond_18e
    :goto_18e
    if-eqz v13, :cond_194

    if-nez v21, :cond_194

    if-eqz v10, :cond_1a4

    :cond_194
    move-object/from16 v0, p0

    iget-boolean v0, v0, mForceStatusBarFromKeyguard:Z

    move/from16 v27, v0

    if-nez v27, :cond_1a4

    move-object/from16 v0, p0

    iget-boolean v0, v0, mForceStatusBarTransparent:Z

    move/from16 v27, v0

    if-eqz v27, :cond_44a

    .line 8104
    :cond_1a4
    sget-boolean v27, DEBUG_LAYOUT:Z

    if-eqz v27, :cond_1af

    const-string v27, "WindowManager"

    const-string v28, "Showing status bar: forced"

    invoke-static/range {v27 .. v28}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 8106
    :cond_1af
    invoke-interface/range {v17 .. v17}, Landroid/view/WindowManagerPolicy$WindowState;->isVisibleLw()Z

    move-result v26

    .line 8107
    .local v26, "wasStatusBarShowing":Z
    move-object/from16 v0, p0

    iget-object v0, v0, mStatusBarController:Lcom/android/server/policy/StatusBarController;

    move-object/from16 v27, v0

    const/16 v28, 0x1

    const/16 v29, 0x1

    move-object/from16 v0, v27

    move/from16 v1, v28

    move/from16 v2, v29

    move/from16 v3, p1

    invoke-virtual {v0, v1, v2, v3}, Lcom/android/server/policy/StatusBarController;->setBarShowingLw(ZZI)Z

    move-result v27

    if-eqz v27, :cond_1e4

    .line 8108
    or-int/lit8 v5, v5, 0x1

    .line 8109
    move-object/from16 v0, p0

    iget-boolean v0, v0, mForceStatusBarFromKeyguard:Z

    move/from16 v27, v0

    if-eqz v27, :cond_1d9

    if-nez v26, :cond_1d9

    .line 8110
    or-int/lit8 v5, v5, 0x10

    .line 8115
    :cond_1d9
    move-object/from16 v0, p0

    iget-object v0, v0, mMultiPhoneWindowManager:Lcom/android/server/policy/multiwindow/MultiPhoneWindowManager;

    move-object/from16 v27, v0

    const/16 v28, 0x0

    invoke-virtual/range {v27 .. v28}, Lcom/android/server/policy/multiwindow/MultiPhoneWindowManager;->notifySystemUiVisibility(I)V

    .line 8120
    :cond_1e4
    if-eqz v19, :cond_436

    invoke-interface/range {v17 .. v17}, Landroid/view/WindowManagerPolicy$WindowState;->isAnimatingLw()Z

    move-result v27

    if-eqz v27, :cond_436

    const/16 v25, 0x1

    .line 8123
    :goto_1ee
    if-eqz v18, :cond_43a

    invoke-interface/range {v18 .. v18}, Landroid/view/WindowManagerPolicy$WindowState;->getMultiWindowStyleLw()Lcom/samsung/android/multiwindow/MultiWindowStyle;

    move-result-object v27

    invoke-virtual/range {v27 .. v27}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->isSplit()Z

    move-result v27

    if-eqz v27, :cond_43a

    :cond_1fa
    const/16 v27, 0x1

    :goto_1fc
    or-int v25, v25, v27

    .line 8129
    move-object/from16 v0, p0

    iget-boolean v0, v0, mForceStatusBarFromKeyguard:Z

    move/from16 v27, v0

    if-eqz v27, :cond_227

    move-object/from16 v0, p0

    iget-object v0, v0, mStatusBarController:Lcom/android/server/policy/StatusBarController;

    move-object/from16 v27, v0

    move-object/from16 v0, v27

    move/from16 v1, p1

    invoke-virtual {v0, v1}, Lcom/android/server/policy/StatusBarController;->isTransientShowing(I)Z

    move-result v27

    if-eqz v27, :cond_227

    .line 8130
    move-object/from16 v0, p0

    iget-object v0, v0, mStatusBarController:Lcom/android/server/policy/StatusBarController;

    move-object/from16 v27, v0

    const/16 v28, 0x0

    move-object/from16 v0, v27

    move/from16 v1, v28

    move/from16 v2, p1

    invoke-virtual {v0, v1, v15, v15, v2}, Lcom/android/server/policy/StatusBarController;->updateVisibilityLw(ZIII)I

    .line 8291
    .end local v23    # "shouldBeTransparent":Z
    .end local v26    # "wasStatusBarShowing":Z
    :cond_227
    :goto_227
    move/from16 v0, v19

    move/from16 v1, v25

    if-eq v0, v1, :cond_239

    .line 8292
    if-nez v25, :cond_231

    .line 8294
    or-int/lit8 v5, v5, 0x1

    .line 8296
    :cond_231
    move/from16 v19, v25

    .line 8302
    move/from16 v0, v19

    move-object/from16 v1, p0

    iput-boolean v0, v1, mTopIsFullscreen:Z

    .line 8309
    :cond_239
    move-object/from16 v0, p0

    iget-object v0, v0, mKeyguardDelegate:Lcom/android/server/policy/keyguard/KeyguardServiceDelegate;

    move-object/from16 v27, v0

    if-eqz v27, :cond_2e6

    if-eqz v17, :cond_2e6

    .line 8313
    move-object/from16 v0, p0

    iget-boolean v0, v0, mHideSDKeyguard:Z

    move/from16 v27, v0

    if-eqz v27, :cond_26a

    invoke-virtual/range {p0 .. p0}, getPersonaManagerServiceLocked()Lcom/android/server/pm/PersonaManagerService;

    move-result-object v27

    if-eqz v27, :cond_26a

    .line 8314
    move-object/from16 v0, p0

    iget-object v0, v0, mPersonaManagerService:Lcom/android/server/pm/PersonaManagerService;

    move-object/from16 v27, v0

    const/16 v28, 0x0

    move-object/from16 v0, p0

    iget-boolean v0, v0, mHideSDKeyguard:Z

    move/from16 v29, v0

    move-object/from16 v0, v27

    move/from16 v1, v28

    move/from16 v2, v19

    move/from16 v3, v29

    invoke-virtual {v0, v1, v2, v3}, Lcom/android/server/pm/PersonaManagerService;->notifyActivityDrawn(IZZ)V

    .line 8317
    :cond_26a
    move-object/from16 v0, p0

    iget v0, v0, mDismissKeyguard:I

    move/from16 v27, v0

    if-eqz v27, :cond_648

    move-object/from16 v0, p0

    iget-boolean v0, v0, mKeyguardSecure:Z

    move/from16 v27, v0

    if-nez v27, :cond_648

    .line 8318
    const/4 v14, 0x1

    .line 8322
    .local v14, "mKeyguardHidden":Z
    move-object/from16 v0, p0

    iput-boolean v14, v0, mKeyguardHidden:Z

    .line 8326
    move-object/from16 v0, p0

    iget-object v0, v0, mCocktailPhoneWindowManager:Lcom/android/server/policy/cocktail/CocktailPhoneWindowManager;

    move-object/from16 v27, v0

    invoke-virtual/range {v27 .. v27}, Lcom/android/server/policy/cocktail/CocktailPhoneWindowManager;->isEdgeScreenWaked()Z

    move-result v27

    if-eqz v27, :cond_2b8

    .line 8327
    move-object/from16 v0, p0

    iget-object v0, v0, mWinDismissingKeyguard:Landroid/view/WindowManagerPolicy$WindowState;

    move-object/from16 v27, v0

    if-eqz v27, :cond_637

    move-object/from16 v0, p0

    iget-object v0, v0, mWinDismissingKeyguard:Landroid/view/WindowManagerPolicy$WindowState;

    move-object/from16 v27, v0

    invoke-interface/range {v27 .. v27}, Landroid/view/WindowManagerPolicy$WindowState;->getAttrs()Landroid/view/WindowManager$LayoutParams;

    move-result-object v27

    move-object/from16 v0, v27

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->flags:I

    move/from16 v27, v0

    const/high16 v28, 0x200000

    and-int v27, v27, v28

    if-eqz v27, :cond_637

    .line 8328
    move-object/from16 v0, p0

    iget-object v0, v0, mCocktailPhoneWindowManager:Lcom/android/server/policy/cocktail/CocktailPhoneWindowManager;

    move-object/from16 v27, v0

    const/16 v28, 0x0

    const/16 v29, -0x1

    const/16 v30, 0x2

    invoke-virtual/range {v27 .. v30}, Lcom/android/server/policy/cocktail/CocktailPhoneWindowManager;->requestEdgeScreenWakeup(ZII)V

    .line 8335
    :cond_2b8
    :goto_2b8
    const/16 v27, 0x1

    move-object/from16 v0, p0

    move/from16 v1, v27

    move/from16 v2, p1

    invoke-direct {v0, v1, v2}, setKeyguardOccludedLw(ZI)Z

    move-result v27

    if-eqz v27, :cond_2c8

    .line 8336
    or-int/lit8 v5, v5, 0x17

    .line 8341
    :cond_2c8
    move-object/from16 v0, p0

    iget-object v0, v0, mKeyguardDelegate:Lcom/android/server/policy/keyguard/KeyguardServiceDelegate;

    move-object/from16 v27, v0

    invoke-virtual/range {v27 .. v27}, Lcom/android/server/policy/keyguard/KeyguardServiceDelegate;->isShowing()Z

    move-result v27

    if-eqz v27, :cond_2e6

    .line 8342
    move-object/from16 v0, p0

    iget-object v0, v0, mHandler:Landroid/os/Handler;

    move-object/from16 v27, v0

    new-instance v28, Lcom/android/server/policy/PhoneWindowManager$17;

    move-object/from16 v0, v28

    move-object/from16 v1, p0

    invoke-direct {v0, v1}, Lcom/android/server/policy/PhoneWindowManager$17;-><init>(Lcom/android/server/policy/PhoneWindowManager;)V

    invoke-virtual/range {v27 .. v28}, Landroid/os/Handler;->post(Ljava/lang/Runnable;)Z

    .line 8417
    .end local v14    # "mKeyguardHidden":Z
    :cond_2e6
    :goto_2e6
    invoke-direct/range {p0 .. p0}, isSupportAndAttachedSViewCover()Z

    move-result v27

    if-eqz v27, :cond_383

    .line 8418
    sget-boolean v27, DEBUG_LAYOUT:Z

    if-eqz v27, :cond_30f

    .line 8419
    const-string v27, "WindowManager"

    new-instance v28, Ljava/lang/StringBuilder;

    invoke-direct/range {v28 .. v28}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v29, "finishPostLayoutPolicyLw: mHideSViewCover="

    invoke-virtual/range {v28 .. v29}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v28

    move-object/from16 v0, p0

    iget v0, v0, mHideSViewCover:I

    move/from16 v29, v0

    invoke-virtual/range {v28 .. v29}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v28

    invoke-virtual/range {v28 .. v28}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v28

    invoke-static/range {v27 .. v28}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 8422
    :cond_30f
    const/16 v22, 0x0

    .line 8423
    .local v22, "result":I
    invoke-direct/range {p0 .. p0}, getCoverManager()Lcom/samsung/android/cover/ICoverManager;

    move-result-object v6

    .line 8424
    .local v6, "coverManager":Lcom/samsung/android/cover/ICoverManager;
    if-eqz v6, :cond_383

    if-eqz v17, :cond_383

    .line 8425
    move-object/from16 v0, p0

    iget v0, v0, mHideSViewCover:I

    move/from16 v27, v0

    if-nez v27, :cond_35b

    move-object/from16 v0, p0

    iget-object v0, v0, mCoverState:Lcom/samsung/android/cover/CoverState;

    move-object/from16 v27, v0

    move-object/from16 v0, v27

    iget-boolean v0, v0, Lcom/samsung/android/cover/CoverState;->switchState:Z

    move/from16 v27, v0

    if-nez v27, :cond_724

    move-object/from16 v0, p0

    iget-object v0, v0, mCoverState:Lcom/samsung/android/cover/CoverState;

    move-object/from16 v27, v0

    move-object/from16 v0, v27

    iget v0, v0, Lcom/samsung/android/cover/CoverState;->type:I

    move/from16 v27, v0

    const/16 v28, 0xff

    move/from16 v0, v27

    move/from16 v1, v28

    if-eq v0, v1, :cond_724

    move-object/from16 v0, p0

    iget-object v0, v0, mSPWM:Lcom/android/server/policy/sec/SamsungPhoneWindowManager;

    move-object/from16 v27, v0

    invoke-virtual/range {v27 .. v27}, Lcom/android/server/policy/sec/SamsungPhoneWindowManager;->isRingingOrOffhook()Z

    move-result v27

    if-eqz v27, :cond_724

    move-object/from16 v0, p0

    iget-object v0, v0, mSPWM:Lcom/android/server/policy/sec/SamsungPhoneWindowManager;

    move-object/from16 v27, v0

    invoke-virtual/range {v27 .. v27}, Lcom/android/server/policy/sec/SamsungPhoneWindowManager;->isTphoneRelaxMode()Z

    move-result v27

    if-nez v27, :cond_724

    .line 8429
    :cond_35b
    :try_start_35b
    move-object/from16 v0, p0

    iget-boolean v0, v0, mLastCoverAppCovered:Z

    move/from16 v27, v0

    if-nez v27, :cond_377

    .line 8430
    const/16 v27, 0x1

    move/from16 v0, v27

    invoke-interface {v6, v0}, Lcom/samsung/android/cover/ICoverManager;->onCoverAppCovered(Z)I

    move-result v22

    .line 8431
    and-int/lit8 v27, v22, 0x10

    if-eqz v27, :cond_377

    .line 8432
    const/16 v27, 0x1

    move/from16 v0, v27

    move-object/from16 v1, p0

    iput-boolean v0, v1, mLastCoverAppCovered:Z
    :try_end_377
    .catch Landroid/os/RemoteException; {:try_start_35b .. :try_end_377} :catch_71e

    .line 8438
    :cond_377
    :goto_377
    move-object/from16 v0, p0

    move/from16 v1, v22

    invoke-direct {v0, v1}, processSViewCoverSetHiddenResultLw(I)Z

    move-result v27

    if-eqz v27, :cond_383

    .line 8439
    or-int/lit8 v5, v5, 0x1

    .line 8470
    .end local v6    # "coverManager":Lcom/samsung/android/cover/ICoverManager;
    .end local v22    # "result":I
    :cond_383
    :goto_383
    invoke-direct/range {p0 .. p0}, updateSystemUiVisibilityLw()I

    move-result v27

    const v28, -0x3fff7ffa

    and-int v27, v27, v28

    if-eqz v27, :cond_390

    .line 8473
    or-int/lit8 v5, v5, 0x1

    .line 8482
    :cond_390
    move-object/from16 v0, p0

    iget-object v0, v0, mMultiPhoneWindowManager:Lcom/android/server/policy/multiwindow/MultiPhoneWindowManager;

    move-object/from16 v27, v0

    move-object/from16 v0, v27

    move-object/from16 v1, v18

    invoke-virtual {v0, v1}, Lcom/android/server/policy/multiwindow/MultiPhoneWindowManager;->finishPostLayoutPolicyLw(Landroid/view/WindowManagerPolicy$WindowState;)V

    .line 8488
    move-object/from16 v0, p0

    iget-object v0, v0, mCocktailPhoneWindowManager:Lcom/android/server/policy/cocktail/CocktailPhoneWindowManager;

    move-object/from16 v27, v0

    invoke-virtual/range {v27 .. v27}, Lcom/android/server/policy/cocktail/CocktailPhoneWindowManager;->finishPostLayoutPolicyLw()I

    move-result v27

    or-int v5, v5, v27

    .line 8493
    move-object/from16 v0, p0

    iget-object v0, v0, mHandler:Landroid/os/Handler;

    move-object/from16 v27, v0

    const/16 v28, 0x11

    invoke-virtual/range {v27 .. v28}, Landroid/os/Handler;->sendEmptyMessage(I)Z

    .line 8497
    invoke-direct/range {p0 .. p0}, updateLockScreenTimeout()V

    .line 8498
    return v5

    .line 8037
    .end local v12    # "lp":Landroid/view/WindowManager$LayoutParams;
    :cond_3b8
    move-object/from16 v24, v18

    goto/16 :goto_9a

    .line 8044
    :cond_3bc
    const/4 v12, 0x0

    goto/16 :goto_a0

    .line 8059
    .restart local v12    # "lp":Landroid/view/WindowManager$LayoutParams;
    :cond_3bf
    move-object/from16 v0, p0

    iget-boolean v0, v0, mDreamingSleepTokenNeeded:Z

    move/from16 v27, v0

    if-nez v27, :cond_d7

    .line 8060
    const/16 v27, 0x1

    move/from16 v0, v27

    move-object/from16 v1, p0

    iput-boolean v0, v1, mDreamingSleepTokenNeeded:Z

    .line 8061
    move-object/from16 v0, p0

    iget-object v0, v0, mHandler:Landroid/os/Handler;

    move-object/from16 v27, v0

    const/16 v28, 0xf

    const/16 v29, 0x1

    const/16 v30, 0x1

    invoke-virtual/range {v27 .. v30}, Landroid/os/Handler;->obtainMessage(III)Landroid/os/Message;

    move-result-object v27

    invoke-virtual/range {v27 .. v27}, Landroid/os/Message;->sendToTarget()V

    goto/16 :goto_d7

    .line 8076
    :cond_3e4
    move-object/from16 v0, p0

    iget-boolean v0, v0, mIsNightClockShow:Z

    move/from16 v27, v0

    if-nez v27, :cond_128

    if-eqz v17, :cond_128

    invoke-interface/range {v17 .. v17}, Landroid/view/WindowManagerPolicy$WindowState;->getAttrs()Landroid/view/WindowManager$LayoutParams;

    move-result-object v27

    move-object/from16 v0, v27

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->flags:I

    move/from16 v27, v0

    const/high16 v28, 0x100000

    and-int v27, v27, v28

    if-eqz v27, :cond_128

    .line 8078
    const/16 v27, 0x1

    move/from16 v0, v27

    move-object/from16 v1, p0

    iput-boolean v0, v1, mIsNightClockShow:Z

    .line 8080
    move-object/from16 v0, p0

    iget-object v0, v0, mStatusBarController:Lcom/android/server/policy/StatusBarController;

    move-object/from16 v27, v0

    const/16 v28, 0x1

    const/16 v29, 0x0

    invoke-virtual/range {v27 .. v29}, Lcom/android/server/policy/StatusBarController;->setBarShowingLw(ZZ)Z

    .line 8081
    const-string v27, "WindowManager"

    const-string/jumbo v28, "finishPostLayoutPolicyLw : mNightClock.show"

    invoke-static/range {v27 .. v28}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 8082
    or-int/lit8 v5, v5, 0x16

    goto/16 :goto_128

    .line 8092
    :cond_41f
    const/16 v23, 0x0

    goto/16 :goto_181

    .line 8097
    .restart local v23    # "shouldBeTransparent":Z
    :cond_423
    invoke-interface/range {v17 .. v17}, Landroid/view/WindowManagerPolicy$WindowState;->isVisibleLw()Z

    move-result v27

    if-nez v27, :cond_18e

    .line 8098
    move-object/from16 v0, p0

    iget-object v0, v0, mStatusBarController:Lcom/android/server/policy/StatusBarController;

    move-object/from16 v27, v0

    const/16 v28, 0x1

    invoke-virtual/range {v27 .. v28}, Lcom/android/server/policy/StatusBarController;->setShowTransparent(Z)V

    goto/16 :goto_18e

    .line 8120
    .restart local v26    # "wasStatusBarShowing":Z
    :cond_436
    const/16 v25, 0x0

    goto/16 :goto_1ee

    .line 8123
    :cond_43a
    move-object/from16 v0, p0

    iget-object v0, v0, mMultiPhoneWindowManager:Lcom/android/server/policy/multiwindow/MultiPhoneWindowManager;

    move-object/from16 v27, v0

    invoke-virtual/range {v27 .. v27}, Lcom/android/server/policy/multiwindow/MultiPhoneWindowManager;->isForceHideStatusBar()Z

    move-result v27

    if-nez v27, :cond_1fa

    const/16 v27, 0x0

    goto/16 :goto_1fc

    .line 8134
    .end local v26    # "wasStatusBarShowing":Z
    :cond_44a
    move-object/from16 v0, p0

    iget-boolean v0, v0, mForceStatusBarFromSViewCover:Z

    move/from16 v27, v0

    if-eqz v27, :cond_4b3

    move-object/from16 v0, p0

    iget-boolean v0, v0, mForceHideStatusBarForCocktail:Z

    move/from16 v27, v0

    if-nez v27, :cond_4b3

    if-nez v10, :cond_4b3

    .line 8137
    sget-boolean v27, DEBUG_LAYOUT:Z

    if-eqz v27, :cond_467

    const-string v27, "WindowManager"

    const-string v28, "Showing status bar: forcefsvc"

    invoke-static/range {v27 .. v28}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 8138
    :cond_467
    move-object/from16 v0, p0

    iget-object v0, v0, mStatusBarController:Lcom/android/server/policy/StatusBarController;

    move-object/from16 v27, v0

    const/16 v28, 0x1

    const/16 v29, 0x1

    move-object/from16 v0, v27

    move/from16 v1, v28

    move/from16 v2, v29

    move/from16 v3, p1

    invoke-virtual {v0, v1, v2, v3}, Lcom/android/server/policy/StatusBarController;->setBarShowingLw(ZZI)Z

    move-result v27

    if-eqz v27, :cond_483

    .line 8139
    or-int/lit8 v5, v5, 0x1

    .line 8140
    or-int/lit8 v5, v5, 0x10

    .line 8143
    :cond_483
    if-eqz v19, :cond_4b0

    invoke-interface/range {v17 .. v17}, Landroid/view/WindowManagerPolicy$WindowState;->isAnimatingLw()Z

    move-result v27

    if-eqz v27, :cond_4b0

    const/16 v25, 0x1

    .line 8145
    :goto_48d
    move-object/from16 v0, p0

    iget-object v0, v0, mStatusBarController:Lcom/android/server/policy/StatusBarController;

    move-object/from16 v27, v0

    move-object/from16 v0, v27

    move/from16 v1, p1

    invoke-virtual {v0, v1}, Lcom/android/server/policy/StatusBarController;->isTransientShowing(I)Z

    move-result v27

    if-eqz v27, :cond_227

    .line 8146
    move-object/from16 v0, p0

    iget-object v0, v0, mStatusBarController:Lcom/android/server/policy/StatusBarController;

    move-object/from16 v27, v0

    const/16 v28, 0x0

    move-object/from16 v0, v27

    move/from16 v1, v28

    move/from16 v2, p1

    invoke-virtual {v0, v1, v15, v15, v2}, Lcom/android/server/policy/StatusBarController;->updateVisibilityLw(ZIII)I

    goto/16 :goto_227

    .line 8143
    :cond_4b0
    const/16 v25, 0x0

    goto :goto_48d

    .line 8150
    :cond_4b3
    if-nez v18, :cond_4b7

    if-eqz v21, :cond_227

    .line 8152
    :cond_4b7
    const/16 v27, 0x0

    move-object/from16 v0, v27

    invoke-static {v0, v12}, Lcom/android/server/policy/PolicyControl;->getWindowFlags(Landroid/view/WindowManagerPolicy$WindowState;Landroid/view/WindowManager$LayoutParams;)I

    move-result v9

    .line 8159
    .local v9, "fl":I
    and-int/lit16 v0, v9, 0x400

    move/from16 v27, v0

    if-nez v27, :cond_4d1

    and-int/lit8 v27, v15, 0x4

    if-nez v27, :cond_4d1

    move-object/from16 v0, p0

    iget-boolean v0, v0, mForceHideStatusBarForCocktail:Z

    move/from16 v27, v0

    if-eqz v27, :cond_592

    :cond_4d1
    const/16 v25, 0x1

    .line 8175
    :goto_4d3
    move-object/from16 v0, p0

    iget v0, v0, mHideSViewCover:I

    move/from16 v27, v0

    if-eqz v27, :cond_511

    move-object/from16 v0, p0

    iget-object v0, v0, mHideSViewCoverWindowState:Landroid/view/WindowManagerPolicy$WindowState;

    move-object/from16 v27, v0

    if-eqz v27, :cond_511

    move-object/from16 v0, p0

    iget-object v0, v0, mHideSViewCoverWindowState:Landroid/view/WindowManagerPolicy$WindowState;

    move-object/from16 v27, v0

    move-object/from16 v0, v18

    move-object/from16 v1, v27

    if-eq v0, v1, :cond_511

    .line 8178
    const/16 v27, 0x0

    move-object/from16 v0, p0

    iget-object v0, v0, mHideSViewCoverWindowState:Landroid/view/WindowManagerPolicy$WindowState;

    move-object/from16 v28, v0

    invoke-interface/range {v28 .. v28}, Landroid/view/WindowManagerPolicy$WindowState;->getAttrs()Landroid/view/WindowManager$LayoutParams;

    move-result-object v28

    invoke-static/range {v27 .. v28}, Lcom/android/server/policy/PolicyControl;->getWindowFlags(Landroid/view/WindowManagerPolicy$WindowState;Landroid/view/WindowManager$LayoutParams;)I

    move-result v7

    .line 8180
    .local v7, "coverWindowFlags":I
    and-int/lit16 v0, v7, 0x400

    move/from16 v27, v0

    if-eqz v27, :cond_50b

    and-int/lit16 v0, v7, 0x800

    move/from16 v27, v0

    if-eqz v27, :cond_50f

    :cond_50b
    and-int/lit8 v27, v15, 0x4

    if-eqz v27, :cond_596

    :cond_50f
    const/16 v25, 0x1

    .line 8187
    .end local v7    # "coverWindowFlags":I
    :cond_511
    :goto_511
    if-eqz v25, :cond_59a

    iget v0, v12, Landroid/view/WindowManager$LayoutParams;->samsungFlags:I

    move/from16 v27, v0

    and-int/lit8 v27, v27, 0x2

    if-eqz v27, :cond_59a

    move-object/from16 v0, p0

    iget-boolean v0, v0, mForceHideStatusBarForCocktail:Z

    move/from16 v27, v0

    if-nez v27, :cond_59a

    const/16 v27, 0x1

    :goto_525
    move/from16 v0, v27

    move-object/from16 v1, p0

    iput-boolean v0, v1, mOpenByNotification:Z

    .line 8191
    move-object/from16 v0, p0

    iget-boolean v0, v0, mOpenByNotification:Z

    move/from16 v28, v0

    invoke-interface/range {v18 .. v18}, Landroid/view/WindowManagerPolicy$WindowState;->getMultiWindowStyleLw()Lcom/samsung/android/multiwindow/MultiWindowStyle;

    move-result-object v27

    invoke-virtual/range {v27 .. v27}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->isSplit()Z

    move-result v27

    if-nez v27, :cond_547

    move-object/from16 v0, p0

    iget-object v0, v0, mMultiPhoneWindowManager:Lcom/android/server/policy/multiwindow/MultiPhoneWindowManager;

    move-object/from16 v27, v0

    invoke-virtual/range {v27 .. v27}, Lcom/android/server/policy/multiwindow/MultiPhoneWindowManager;->isForceHideStatusBar()Z

    move-result v27

    if-eqz v27, :cond_59d

    :cond_547
    const/16 v27, 0x1

    :goto_549
    or-int v27, v27, v28

    move/from16 v0, v27

    move-object/from16 v1, p0

    iput-boolean v0, v1, mOpenByNotification:Z

    .line 8199
    move-object/from16 v0, p0

    iget-object v0, v0, mStatusBarController:Lcom/android/server/policy/StatusBarController;

    move-object/from16 v27, v0

    move-object/from16 v0, v27

    move/from16 v1, p1

    invoke-virtual {v0, v1}, Lcom/android/server/policy/StatusBarController;->isTransientShowing(I)Z

    move-result v27

    if-eqz v27, :cond_5bc

    .line 8202
    move-object/from16 v0, p0

    iget-boolean v0, v0, mForceHideStatusBarForCocktail:Z

    move/from16 v27, v0

    if-eqz v27, :cond_5a0

    .line 8203
    move-object/from16 v0, p0

    iget-object v0, v0, mStatusBarController:Lcom/android/server/policy/StatusBarController;

    move-object/from16 v27, v0

    invoke-virtual/range {v27 .. v27}, Lcom/android/server/policy/StatusBarController;->hideTransient()V

    .line 8204
    move-object/from16 v0, p0

    iget-object v0, v0, mStatusBarController:Lcom/android/server/policy/StatusBarController;

    move-object/from16 v27, v0

    const/16 v28, 0x0

    const/16 v29, 0x0

    const/16 v30, 0x1

    move-object/from16 v0, v27

    move/from16 v1, v28

    move/from16 v2, v29

    move/from16 v3, p1

    move/from16 v4, v30

    invoke-virtual {v0, v1, v2, v3, v4}, Lcom/android/server/policy/StatusBarController;->setBarShowingLw(ZZIZ)Z

    move-result v27

    if-eqz v27, :cond_227

    .line 8205
    or-int/lit8 v5, v5, 0x1

    goto/16 :goto_227

    .line 8159
    :cond_592
    const/16 v25, 0x0

    goto/16 :goto_4d3

    .line 8180
    .restart local v7    # "coverWindowFlags":I
    :cond_596
    const/16 v25, 0x0

    goto/16 :goto_511

    .line 8187
    .end local v7    # "coverWindowFlags":I
    :cond_59a
    const/16 v27, 0x0

    goto :goto_525

    .line 8191
    :cond_59d
    const/16 v27, 0x0

    goto :goto_549

    .line 8216
    :cond_5a0
    move-object/from16 v0, p0

    iget-object v0, v0, mStatusBarController:Lcom/android/server/policy/StatusBarController;

    move-object/from16 v27, v0

    const/16 v28, 0x1

    const/16 v29, 0x1

    move-object/from16 v0, v27

    move/from16 v1, v28

    move/from16 v2, v29

    move/from16 v3, p1

    invoke-virtual {v0, v1, v2, v3}, Lcom/android/server/policy/StatusBarController;->setBarShowingLw(ZZI)Z

    move-result v27

    if-eqz v27, :cond_227

    .line 8217
    or-int/lit8 v5, v5, 0x1

    goto/16 :goto_227

    .line 8219
    :cond_5bc
    if-eqz v25, :cond_605

    .line 8220
    sget-boolean v27, DEBUG_LAYOUT:Z

    if-eqz v27, :cond_5c9

    const-string v27, "WindowManager"

    const-string v28, "** HIDING status bar"

    invoke-static/range {v27 .. v28}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 8221
    :cond_5c9
    move-object/from16 v0, p0

    iget-object v0, v0, mStatusBarController:Lcom/android/server/policy/StatusBarController;

    move-object/from16 v27, v0

    const/16 v28, 0x0

    const/16 v29, 0x0

    move-object/from16 v0, p0

    iget-boolean v0, v0, mForceHideStatusBarForCocktail:Z

    move/from16 v30, v0

    move-object/from16 v0, v27

    move/from16 v1, v28

    move/from16 v2, v29

    move/from16 v3, p1

    move/from16 v4, v30

    invoke-virtual {v0, v1, v2, v3, v4}, Lcom/android/server/policy/StatusBarController;->setBarShowingLw(ZZIZ)Z

    move-result v27

    if-eqz v27, :cond_5f8

    .line 8223
    or-int/lit8 v5, v5, 0x1

    .line 8226
    move-object/from16 v0, p0

    iget-object v0, v0, mMultiPhoneWindowManager:Lcom/android/server/policy/multiwindow/MultiPhoneWindowManager;

    move-object/from16 v27, v0

    const/16 v28, 0x4

    invoke-virtual/range {v27 .. v28}, Lcom/android/server/policy/multiwindow/MultiPhoneWindowManager;->notifySystemUiVisibility(I)V

    goto/16 :goto_227

    .line 8230
    :cond_5f8
    sget-boolean v27, DEBUG_LAYOUT:Z

    if-eqz v27, :cond_227

    const-string v27, "WindowManager"

    const-string v28, "Status bar already hiding"

    invoke-static/range {v27 .. v28}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    goto/16 :goto_227

    .line 8245
    :cond_605
    sget-boolean v27, DEBUG_LAYOUT:Z

    if-eqz v27, :cond_610

    const-string v27, "WindowManager"

    const-string v28, "** SHOWING status bar: top is not fullscreen"

    invoke-static/range {v27 .. v28}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 8246
    :cond_610
    move-object/from16 v0, p0

    iget-object v0, v0, mStatusBarController:Lcom/android/server/policy/StatusBarController;

    move-object/from16 v27, v0

    const/16 v28, 0x1

    const/16 v29, 0x1

    move-object/from16 v0, v27

    move/from16 v1, v28

    move/from16 v2, v29

    move/from16 v3, p1

    invoke-virtual {v0, v1, v2, v3}, Lcom/android/server/policy/StatusBarController;->setBarShowingLw(ZZI)Z

    move-result v27

    if-eqz v27, :cond_227

    .line 8247
    or-int/lit8 v5, v5, 0x1

    .line 8250
    move-object/from16 v0, p0

    iget-object v0, v0, mMultiPhoneWindowManager:Lcom/android/server/policy/multiwindow/MultiPhoneWindowManager;

    move-object/from16 v27, v0

    const/16 v28, 0x0

    invoke-virtual/range {v27 .. v28}, Lcom/android/server/policy/multiwindow/MultiPhoneWindowManager;->notifySystemUiVisibility(I)V

    goto/16 :goto_227

    .line 8330
    .end local v9    # "fl":I
    .end local v23    # "shouldBeTransparent":Z
    .restart local v14    # "mKeyguardHidden":Z
    :cond_637
    move-object/from16 v0, p0

    iget-object v0, v0, mCocktailPhoneWindowManager:Lcom/android/server/policy/cocktail/CocktailPhoneWindowManager;

    move-object/from16 v27, v0

    const/16 v28, 0x1

    const/16 v29, -0x1

    const/16 v30, 0x3

    invoke-virtual/range {v27 .. v30}, Lcom/android/server/policy/cocktail/CocktailPhoneWindowManager;->requestEdgeScreenWakeup(ZII)V

    goto/16 :goto_2b8

    .line 8349
    .end local v14    # "mKeyguardHidden":Z
    :cond_648
    move-object/from16 v0, p0

    iget-boolean v0, v0, mHideLockScreen:Z

    move/from16 v27, v0

    if-eqz v27, :cond_6b8

    .line 8350
    const/4 v14, 0x1

    .line 8351
    .restart local v14    # "mKeyguardHidden":Z
    const/16 v27, 0x0

    move-object/from16 v0, v27

    move-object/from16 v1, p0

    iput-object v0, v1, mWinDismissingKeyguard:Landroid/view/WindowManagerPolicy$WindowState;

    .line 8355
    move-object/from16 v0, p0

    iput-boolean v14, v0, mKeyguardHidden:Z

    .line 8359
    move-object/from16 v0, p0

    iget-object v0, v0, mCocktailPhoneWindowManager:Lcom/android/server/policy/cocktail/CocktailPhoneWindowManager;

    move-object/from16 v27, v0

    invoke-virtual/range {v27 .. v27}, Lcom/android/server/policy/cocktail/CocktailPhoneWindowManager;->isEdgeScreenWaked()Z

    move-result v27

    if-eqz v27, :cond_692

    move-object/from16 v0, p0

    iget-boolean v0, v0, mHideLockScreenByCover:Z

    move/from16 v27, v0

    if-nez v27, :cond_692

    if-eqz v20, :cond_692

    invoke-interface/range {v20 .. v20}, Landroid/view/WindowManagerPolicy$WindowState;->getAttrs()Landroid/view/WindowManager$LayoutParams;

    move-result-object v27

    move-object/from16 v0, v27

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->flags:I

    move/from16 v27, v0

    const/high16 v28, 0x200000

    and-int v27, v27, v28

    if-eqz v27, :cond_692

    .line 8361
    move-object/from16 v0, p0

    iget-object v0, v0, mCocktailPhoneWindowManager:Lcom/android/server/policy/cocktail/CocktailPhoneWindowManager;

    move-object/from16 v27, v0

    const/16 v28, 0x0

    const/16 v29, -0x1

    const/16 v30, 0x2

    invoke-virtual/range {v27 .. v30}, Lcom/android/server/policy/cocktail/CocktailPhoneWindowManager;->requestEdgeScreenWakeup(ZII)V

    .line 8365
    :cond_692
    const/16 v27, 0x1

    move-object/from16 v0, p0

    move/from16 v1, v27

    move/from16 v2, p1

    invoke-direct {v0, v1, v2}, setKeyguardOccludedLw(ZI)Z

    move-result v27

    if-eqz v27, :cond_6a2

    .line 8366
    or-int/lit8 v5, v5, 0x17

    .line 8371
    :cond_6a2
    move-object/from16 v0, p0

    iget-object v0, v0, mLastWinShowWhenLocked:Landroid/view/WindowManagerPolicy$WindowState;

    move-object/from16 v27, v0

    move-object/from16 v0, v27

    move-object/from16 v1, v20

    if-eq v0, v1, :cond_2e6

    .line 8372
    move-object/from16 v0, v20

    move-object/from16 v1, p0

    iput-object v0, v1, mLastWinShowWhenLocked:Landroid/view/WindowManagerPolicy$WindowState;

    .line 8373
    or-int/lit8 v5, v5, 0x2

    goto/16 :goto_2e6

    .line 8375
    .end local v14    # "mKeyguardHidden":Z
    :cond_6b8
    move-object/from16 v0, p0

    iget v0, v0, mDismissKeyguard:I

    move/from16 v27, v0

    if-eqz v27, :cond_6f7

    .line 8376
    const/4 v14, 0x0

    .line 8380
    .restart local v14    # "mKeyguardHidden":Z
    move-object/from16 v0, p0

    iput-boolean v14, v0, mKeyguardHidden:Z

    .line 8382
    const/16 v27, 0x0

    move-object/from16 v0, p0

    move/from16 v1, v27

    move/from16 v2, p1

    invoke-direct {v0, v1, v2}, setKeyguardOccludedLw(ZI)Z

    move-result v27

    if-eqz v27, :cond_6d5

    .line 8383
    or-int/lit8 v5, v5, 0x17

    .line 8388
    :cond_6d5
    move-object/from16 v0, p0

    iget v0, v0, mDismissKeyguard:I

    move/from16 v27, v0

    const/16 v28, 0x1

    move/from16 v0, v27

    move/from16 v1, v28

    if-ne v0, v1, :cond_2e6

    .line 8390
    move-object/from16 v0, p0

    iget-object v0, v0, mHandler:Landroid/os/Handler;

    move-object/from16 v27, v0

    new-instance v28, Lcom/android/server/policy/PhoneWindowManager$18;

    move-object/from16 v0, v28

    move-object/from16 v1, p0

    invoke-direct {v0, v1}, Lcom/android/server/policy/PhoneWindowManager$18;-><init>(Lcom/android/server/policy/PhoneWindowManager;)V

    invoke-virtual/range {v27 .. v28}, Landroid/os/Handler;->post(Ljava/lang/Runnable;)Z

    goto/16 :goto_2e6

    .line 8398
    .end local v14    # "mKeyguardHidden":Z
    :cond_6f7
    const/16 v27, 0x0

    move-object/from16 v0, v27

    move-object/from16 v1, p0

    iput-object v0, v1, mWinDismissingKeyguard:Landroid/view/WindowManagerPolicy$WindowState;

    .line 8399
    const/16 v27, 0x0

    move/from16 v0, v27

    move-object/from16 v1, p0

    iput-boolean v0, v1, mSecureDismissingKeyguard:Z

    .line 8400
    const/4 v14, 0x0

    .line 8404
    .restart local v14    # "mKeyguardHidden":Z
    move-object/from16 v0, p0

    iput-boolean v14, v0, mKeyguardHidden:Z

    .line 8406
    const/16 v27, 0x0

    move-object/from16 v0, p0

    move/from16 v1, v27

    move/from16 v2, p1

    invoke-direct {v0, v1, v2}, setKeyguardOccludedLw(ZI)Z

    move-result v27

    if-eqz v27, :cond_2e6

    .line 8407
    or-int/lit8 v5, v5, 0x17

    goto/16 :goto_2e6

    .line 8435
    .end local v14    # "mKeyguardHidden":Z
    .restart local v6    # "coverManager":Lcom/samsung/android/cover/ICoverManager;
    .restart local v22    # "result":I
    :catch_71e
    move-exception v8

    .line 8436
    .local v8, "e":Landroid/os/RemoteException;
    invoke-virtual {v8}, Landroid/os/RemoteException;->printStackTrace()V

    goto/16 :goto_377

    .line 8443
    .end local v8    # "e":Landroid/os/RemoteException;
    :cond_724
    :try_start_724
    move-object/from16 v0, p0

    iget-boolean v0, v0, mLastCoverAppCovered:Z

    move/from16 v27, v0

    if-eqz v27, :cond_740

    .line 8444
    const/16 v27, 0x0

    move/from16 v0, v27

    invoke-interface {v6, v0}, Lcom/samsung/android/cover/ICoverManager;->onCoverAppCovered(Z)I

    move-result v22

    .line 8445
    and-int/lit8 v27, v22, 0x20

    if-eqz v27, :cond_740

    .line 8446
    const/16 v27, 0x0

    move/from16 v0, v27

    move-object/from16 v1, p0

    iput-boolean v0, v1, mLastCoverAppCovered:Z
    :try_end_740
    .catch Landroid/os/RemoteException; {:try_start_724 .. :try_end_740} :catch_74e

    .line 8452
    :cond_740
    :goto_740
    move-object/from16 v0, p0

    move/from16 v1, v22

    invoke-direct {v0, v1}, processSViewCoverSetHiddenResultLw(I)Z

    move-result v27

    if-eqz v27, :cond_383

    .line 8453
    or-int/lit8 v5, v5, 0x1

    goto/16 :goto_383

    .line 8449
    :catch_74e
    move-exception v8

    .line 8450
    .restart local v8    # "e":Landroid/os/RemoteException;
    invoke-virtual {v8}, Landroid/os/RemoteException;->printStackTrace()V

    goto :goto_740
.end method

.method public finishedGoingToSleep(I)V
    .registers 3
    .param p1, "why"    # I

    .prologue
    .line 9997
    const/4 v0, 0x0

    invoke-virtual {p0, p1, v0}, finishedGoingToSleep(II)V

    .line 9998
    return-void
.end method

.method public finishedGoingToSleep(II)V
    .registers 10
    .param p1, "why"    # I
    .param p2, "displayId"    # I

    .prologue
    const/4 v6, 0x0

    const/4 v5, 0x1

    .line 10003
    const v2, 0x11170

    invoke-static {v2, v6}, Landroid/util/EventLog;->writeEvent(II)I

    .line 10004
    sget-boolean v2, DEBUG_WAKEUP:Z

    if-eqz v2, :cond_2a

    const-string v2, "WindowManager"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "Finished going to sleep... (why="

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v3

    const-string v4, ")"

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 10005
    :cond_2a
    iget-object v2, p0, mContext:Landroid/content/Context;

    const-string/jumbo v3, "screen_timeout"

    iget v4, p0, mLockScreenTimeout:I

    div-int/lit16 v4, v4, 0x3e8

    invoke-static {v2, v3, v4}, Lcom/android/internal/logging/MetricsLogger;->histogram(Landroid/content/Context;Ljava/lang/String;I)V

    .line 10009
    iget-object v3, p0, mLock:Ljava/lang/Object;

    monitor-enter v3

    .line 10010
    const/4 v2, 0x0

    :try_start_3a
    iput-boolean v2, p0, mAwake:Z

    .line 10011
    invoke-direct {p0}, updateWakeGestureListenerLp()V

    .line 10012
    invoke-virtual {p0}, updateOrientationListenerLp()V

    .line 10013
    invoke-direct {p0}, updateLockScreenTimeout()V

    .line 10014
    monitor-exit v3
    :try_end_46
    .catchall {:try_start_3a .. :try_end_46} :catchall_d4

    .line 10017
    invoke-static {}, Lcom/android/internal/app/AppLockPolicy;->isSupportAppLock()Z

    move-result v2

    if-eqz v2, :cond_54

    .line 10019
    const/4 v2, 0x4

    if-eq p1, v2, :cond_54

    .line 10020
    iget-object v2, p0, mSPWM:Lcom/android/server/policy/sec/SamsungPhoneWindowManager;

    invoke-virtual {v2}, Lcom/android/server/policy/sec/SamsungPhoneWindowManager;->setAppLockedStatus()V

    .line 10025
    :cond_54
    iget-object v2, p0, mSPWM:Lcom/android/server/policy/sec/SamsungPhoneWindowManager;

    invoke-virtual {v2, p1}, Lcom/android/server/policy/sec/SamsungPhoneWindowManager;->goingToSleep(I)V

    .line 10027
    iget-object v2, p0, mKeyguardDelegate:Lcom/android/server/policy/keyguard/KeyguardServiceDelegate;

    if-eqz v2, :cond_62

    .line 10028
    iget-object v2, p0, mKeyguardDelegate:Lcom/android/server/policy/keyguard/KeyguardServiceDelegate;

    invoke-virtual {v2, p1}, Lcom/android/server/policy/keyguard/KeyguardServiceDelegate;->onFinishedGoingToSleep(I)V

    .line 10031
    :cond_62
    invoke-virtual {p0}, getPersonaManagerServiceLocked()Lcom/android/server/pm/PersonaManagerService;

    move-result-object v2

    if-eqz v2, :cond_6f

    .line 10032
    invoke-virtual {p0}, getPersonaManagerServiceLocked()Lcom/android/server/pm/PersonaManagerService;

    move-result-object v2

    invoke-virtual {v2, p1}, Lcom/android/server/pm/PersonaManagerService;->onFinishedGoingToSleep(I)V

    .line 10036
    :cond_6f
    invoke-direct {p0}, getEDM()Landroid/app/enterprise/EnterpriseDeviceManager;

    move-result-object v2

    if-eqz v2, :cond_b7

    invoke-direct {p0}, getEDM()Landroid/app/enterprise/EnterpriseDeviceManager;

    move-result-object v2

    invoke-virtual {v2}, Landroid/app/enterprise/EnterpriseDeviceManager;->getEnterpriseSharedDevicePolicy()Lcom/sec/enterprise/knox/shareddevice/EnterpriseSharedDevicePolicy;

    move-result-object v2

    if-eqz v2, :cond_b7

    .line 10037
    invoke-direct {p0}, getEDM()Landroid/app/enterprise/EnterpriseDeviceManager;

    move-result-object v2

    invoke-virtual {v2}, Landroid/app/enterprise/EnterpriseDeviceManager;->getEnterpriseSharedDevicePolicy()Lcom/sec/enterprise/knox/shareddevice/EnterpriseSharedDevicePolicy;

    move-result-object v2

    invoke-virtual {v2}, Lcom/sec/enterprise/knox/shareddevice/EnterpriseSharedDevicePolicy;->isSharedDeviceEnabled()Z

    move-result v1

    .line 10039
    .local v1, "isSharedDevice":Z
    new-instance v0, Landroid/content/Intent;

    invoke-direct {v0}, Landroid/content/Intent;-><init>()V

    .line 10040
    .local v0, "intentknox":Landroid/content/Intent;
    new-instance v2, Landroid/content/ComponentName;

    const-string v3, "com.sec.enterprise.knox.shareddevice.keyguard"

    const-string v4, "com.sec.enterprise.knox.shareddevice.keyguard.SharedDeviceKeyguardService"

    invoke-direct {v2, v3, v4}, Landroid/content/ComponentName;-><init>(Ljava/lang/String;Ljava/lang/String;)V

    invoke-virtual {v0, v2}, Landroid/content/Intent;->setComponent(Landroid/content/ComponentName;)Landroid/content/Intent;

    .line 10042
    const-string v2, "SharedDeviceKeyguardEventFlag"

    const/16 v3, 0x10

    invoke-virtual {v0, v2, v3}, Landroid/content/Intent;->putExtra(Ljava/lang/String;I)Landroid/content/Intent;

    .line 10045
    if-eqz v1, :cond_b7

    .line 10046
    const-string v2, "WindowManager"

    const-string v3, "Shared devices screen OFF completed"

    invoke-static {v2, v3}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 10047
    const-string/jumbo v2, "isScreenOff"

    invoke-virtual {v0, v2, v5}, Landroid/content/Intent;->putExtra(Ljava/lang/String;I)Landroid/content/Intent;

    .line 10048
    iget-object v2, p0, mContext:Landroid/content/Context;

    invoke-virtual {v2, v0}, Landroid/content/Context;->startService(Landroid/content/Intent;)Landroid/content/ComponentName;

    .line 10054
    .end local v0    # "intentknox":Landroid/content/Intent;
    .end local v1    # "isSharedDevice":Z
    :cond_b7
    iget-object v2, p0, mHideSViewCoverWindowState:Landroid/view/WindowManagerPolicy$WindowState;

    if-eqz v2, :cond_c0

    .line 10055
    iget-object v2, p0, mHideSViewCoverWindowState:Landroid/view/WindowManagerPolicy$WindowState;

    invoke-interface {v2, v5}, Landroid/view/WindowManagerPolicy$WindowState;->disableHideSViewCoverOnce(Z)V

    .line 10062
    :cond_c0
    iget-object v2, p0, mCocktailPhoneWindowManager:Lcom/android/server/policy/cocktail/CocktailPhoneWindowManager;

    invoke-virtual {v2}, Lcom/android/server/policy/cocktail/CocktailPhoneWindowManager;->isEdgeScreenWaked()Z

    move-result v2

    if-eqz v2, :cond_ce

    .line 10063
    iget-object v2, p0, mCocktailPhoneWindowManager:Lcom/android/server/policy/cocktail/CocktailPhoneWindowManager;

    const/4 v3, -0x1

    invoke-virtual {v2, v6, v3, v5}, Lcom/android/server/policy/cocktail/CocktailPhoneWindowManager;->requestEdgeScreenWakeup(ZII)V

    .line 10068
    :cond_ce
    iget-object v2, p0, mWindowManagerFuncs:Landroid/view/WindowManagerPolicy$WindowManagerFuncs;

    invoke-interface {v2, v5}, Landroid/view/WindowManagerPolicy$WindowManagerFuncs;->cancelDragForcelyWhenScreenTurnOff(Z)V

    .line 10070
    return-void

    .line 10014
    :catchall_d4
    move-exception v2

    :try_start_d5
    monitor-exit v3
    :try_end_d6
    .catchall {:try_start_d5 .. :try_end_d6} :catchall_d4

    throw v2
.end method

.method public finishedWakingUp()V
    .registers 3

    .prologue
    .line 10140
    sget-boolean v0, DEBUG_WAKEUP:Z

    if-eqz v0, :cond_b

    const-string v0, "WindowManager"

    const-string v1, "Finished waking up..."

    invoke-static {v0, v1}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 10141
    :cond_b
    return-void
.end method

.method public focusChangedLw(Landroid/view/WindowManagerPolicy$WindowState;Landroid/view/WindowManagerPolicy$WindowState;)I
    .registers 10
    .param p1, "lastFocus"    # Landroid/view/WindowManagerPolicy$WindowState;
    .param p2, "newFocus"    # Landroid/view/WindowManagerPolicy$WindowState;

    .prologue
    const/4 v1, 0x1

    const/4 v2, 0x0

    .line 8630
    iput-object p2, p0, mFocusedWindow:Landroid/view/WindowManagerPolicy$WindowState;

    .line 8632
    iget-object v3, p0, mFocusedWindow:Landroid/view/WindowManagerPolicy$WindowState;

    if-eqz v3, :cond_3d

    .line 8633
    iget-object v3, p0, mFocusedWindow:Landroid/view/WindowManagerPolicy$WindowState;

    invoke-interface {v3}, Landroid/view/WindowManagerPolicy$WindowState;->getAttrs()Landroid/view/WindowManager$LayoutParams;

    move-result-object v3

    invoke-virtual {v3}, Landroid/view/WindowManager$LayoutParams;->getTitle()Ljava/lang/CharSequence;

    move-result-object v3

    invoke-interface {v3}, Ljava/lang/CharSequence;->toString()Ljava/lang/String;

    move-result-object v3

    const-string v4, "/"

    invoke-virtual {v3, v4}, Ljava/lang/String;->split(Ljava/lang/String;)[Ljava/lang/String;

    move-result-object v0

    .line 8634
    .local v0, "titles":[Ljava/lang/String;
    if-eqz v0, :cond_30

    array-length v3, v0

    const/4 v4, 0x2

    if-lt v3, v4, :cond_30

    .line 8635
    iget-object v3, p0, mSystemKeyManager:Lcom/android/server/policy/sec/SystemKeyManager;

    new-instance v4, Landroid/content/ComponentName;

    aget-object v5, v0, v2

    aget-object v6, v0, v1

    invoke-direct {v4, v5, v6}, Landroid/content/ComponentName;-><init>(Ljava/lang/String;Ljava/lang/String;)V

    invoke-virtual {v3, v4}, Lcom/android/server/policy/sec/SystemKeyManager;->updateFocusedWindow(Landroid/content/ComponentName;)V

    .line 8639
    :cond_30
    invoke-virtual {p0}, isScreenOn()Z

    move-result v3

    if-eqz v3, :cond_3d

    .line 8640
    iget-object v3, p0, mTspStateManager:Lcom/android/server/policy/sec/TspStateManager;

    iget-object v4, p0, mFocusedWindow:Landroid/view/WindowManagerPolicy$WindowState;

    invoke-virtual {v3, v4}, Lcom/android/server/policy/sec/TspStateManager;->updateWindowPolicy(Landroid/view/WindowManagerPolicy$WindowState;)V

    .line 8646
    .end local v0    # "titles":[Ljava/lang/String;
    :cond_3d
    invoke-direct {p0}, updateSystemUiVisibilityLw()I

    move-result v3

    const v4, -0x3fff7ffa

    and-int/2addr v3, v4

    if-eqz v3, :cond_48

    .line 8651
    :goto_47
    return v1

    :cond_48
    move v1, v2

    goto :goto_47
.end method

.method public focusChangedLw(Landroid/view/WindowManagerPolicy$WindowState;Landroid/view/WindowManagerPolicy$WindowState;I)I
    .registers 11
    .param p1, "lastFocus"    # Landroid/view/WindowManagerPolicy$WindowState;
    .param p2, "newFocus"    # Landroid/view/WindowManagerPolicy$WindowState;
    .param p3, "displayId"    # I

    .prologue
    const/4 v1, 0x1

    const/4 v2, 0x0

    .line 8656
    iput-object p2, p0, mFocusedWindow:Landroid/view/WindowManagerPolicy$WindowState;

    .line 8658
    iget-object v3, p0, mFocusedWindow:Landroid/view/WindowManagerPolicy$WindowState;

    if-eqz v3, :cond_30

    .line 8659
    iget-object v3, p0, mFocusedWindow:Landroid/view/WindowManagerPolicy$WindowState;

    invoke-interface {v3}, Landroid/view/WindowManagerPolicy$WindowState;->getAttrs()Landroid/view/WindowManager$LayoutParams;

    move-result-object v3

    invoke-virtual {v3}, Landroid/view/WindowManager$LayoutParams;->getTitle()Ljava/lang/CharSequence;

    move-result-object v3

    invoke-interface {v3}, Ljava/lang/CharSequence;->toString()Ljava/lang/String;

    move-result-object v3

    const-string v4, "/"

    invoke-virtual {v3, v4}, Ljava/lang/String;->split(Ljava/lang/String;)[Ljava/lang/String;

    move-result-object v0

    .line 8660
    .local v0, "titles":[Ljava/lang/String;
    if-eqz v0, :cond_30

    array-length v3, v0

    const/4 v4, 0x2

    if-lt v3, v4, :cond_30

    .line 8661
    iget-object v3, p0, mSystemKeyManager:Lcom/android/server/policy/sec/SystemKeyManager;

    new-instance v4, Landroid/content/ComponentName;

    aget-object v5, v0, v2

    aget-object v6, v0, v1

    invoke-direct {v4, v5, v6}, Landroid/content/ComponentName;-><init>(Ljava/lang/String;Ljava/lang/String;)V

    invoke-virtual {v3, v4}, Lcom/android/server/policy/sec/SystemKeyManager;->updateFocusedWindow(Landroid/content/ComponentName;)V

    .line 8666
    .end local v0    # "titles":[Ljava/lang/String;
    :cond_30
    invoke-direct {p0}, updateSystemUiVisibilityLw()I

    move-result v3

    const v4, -0x3fff7ffa

    and-int/2addr v3, v4

    if-eqz v3, :cond_3b

    .line 8671
    :goto_3a
    return v1

    :cond_3b
    move v1, v2

    goto :goto_3a
.end method

.method public forceHideCenterBar(Z)V
    .registers 3
    .param p1, "forceHide"    # Z

    .prologue
    .line 12437
    iget-object v0, p0, mMultiPhoneWindowManager:Lcom/android/server/policy/multiwindow/MultiPhoneWindowManager;

    invoke-virtual {v0, p1}, Lcom/android/server/policy/multiwindow/MultiPhoneWindowManager;->forceHideCenterBar(Z)V

    .line 12438
    return-void
.end method

.method public getAppsShowWhenLockedLw()Ljava/util/ArrayList;
    .registers 2
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "()",
            "Ljava/util/ArrayList",
            "<",
            "Landroid/view/IApplicationToken;",
            ">;"
        }
    .end annotation

    .prologue
    .line 4196
    iget-object v0, p0, mAppsShowWhenLocked:Ljava/util/ArrayList;

    return-object v0
.end method

.method public getCocktailBarFrame(Landroid/view/WindowManagerPolicy$WindowState;Z)Landroid/graphics/Rect;
    .registers 4
    .param p1, "win"    # Landroid/view/WindowManagerPolicy$WindowState;
    .param p2, "policy"    # Z

    .prologue
    .line 13279
    iget-object v0, p0, mContext:Landroid/content/Context;

    invoke-static {v0}, Lcom/samsung/android/cocktailbar/CocktailBarFeatures;->isSystemBarType(Landroid/content/Context;)Z

    move-result v0

    if-eqz v0, :cond_f

    .line 13280
    iget-object v0, p0, mCocktailPhoneWindowManager:Lcom/android/server/policy/cocktail/CocktailPhoneWindowManager;

    invoke-virtual {v0, p1, p2}, Lcom/android/server/policy/cocktail/CocktailPhoneWindowManager;->getCocktailBarFrame(Landroid/view/WindowManagerPolicy$WindowState;Z)Landroid/graphics/Rect;

    move-result-object v0

    .line 13283
    :goto_e
    return-object v0

    :cond_f
    new-instance v0, Landroid/graphics/Rect;

    invoke-direct {v0}, Landroid/graphics/Rect;-><init>()V

    goto :goto_e
.end method

.method public getConfigDisplayHeight(III)I
    .registers 6
    .param p1, "fullWidth"    # I
    .param p2, "fullHeight"    # I
    .param p3, "rotation"    # I

    .prologue
    .line 4123
    invoke-virtual {p0, p1, p2, p3}, getNonDecorDisplayHeight(III)I

    move-result v0

    iget v1, p0, mStatusBarHeight:I

    sub-int/2addr v0, v1

    return v0
.end method

.method public getConfigDisplayWidth(III)I
    .registers 5
    .param p1, "fullWidth"    # I
    .param p2, "fullHeight"    # I
    .param p3, "rotation"    # I

    .prologue
    .line 4114
    invoke-virtual {p0, p1, p2, p3}, getNonDecorDisplayWidth(III)I

    move-result v0

    return v0
.end method

.method public getContentRectLw(Landroid/graphics/Rect;)V
    .registers 6
    .param p1, "r"    # Landroid/graphics/Rect;

    .prologue
    .line 6704
    iget v0, p0, mContentLeft:I

    iget v1, p0, mContentTop:I

    iget v2, p0, mContentRight:I

    iget v3, p0, mContentBottom:I

    invoke-virtual {p1, v0, v1, v2, v3}, Landroid/graphics/Rect;->set(IIII)V

    .line 6705
    return-void
.end method

.method public getCoverStateSwitch()Z
    .registers 2

    .prologue
    .line 13029
    iget-object v0, p0, mCoverState:Lcom/samsung/android/cover/CoverState;

    if-eqz v0, :cond_b

    .line 13030
    iget-object v0, p0, mCoverState:Lcom/samsung/android/cover/CoverState;

    invoke-virtual {v0}, Lcom/samsung/android/cover/CoverState;->getSwitchState()Z

    move-result v0

    .line 13032
    :goto_a
    return v0

    :cond_b
    const/4 v0, 0x1

    goto :goto_a
.end method

.method public getCurrentTopActivity()Landroid/content/ComponentName;
    .registers 2

    .prologue
    .line 12771
    iget-object v0, p0, mSystemKeyManager:Lcom/android/server/policy/sec/SystemKeyManager;

    invoke-virtual {v0}, Lcom/android/server/policy/sec/SystemKeyManager;->getCurrentTopActivity()Landroid/content/ComponentName;

    move-result-object v0

    return-object v0
.end method

.method public getFixedTaskId()I
    .registers 2

    .prologue
    .line 12464
    iget v0, p0, mFixedTaskId:I

    return v0
.end method

.method public getFloatingStatusBarHeight(Landroid/view/WindowManagerPolicy$WindowState;)I
    .registers 3
    .param p1, "win"    # Landroid/view/WindowManagerPolicy$WindowState;

    .prologue
    .line 12341
    iget-object v0, p0, mMultiPhoneWindowManager:Lcom/android/server/policy/multiwindow/MultiPhoneWindowManager;

    invoke-virtual {v0, p1}, Lcom/android/server/policy/multiwindow/MultiPhoneWindowManager;->getFloatingStatusBarHeight(Landroid/view/WindowManagerPolicy$WindowState;)I

    move-result v0

    return v0
.end method

.method public getFloatingWindowPadding(Landroid/view/WindowManagerPolicy$WindowState;)Landroid/graphics/Rect;
    .registers 3
    .param p1, "win"    # Landroid/view/WindowManagerPolicy$WindowState;

    .prologue
    .line 12334
    iget-object v0, p0, mMultiPhoneWindowManager:Lcom/android/server/policy/multiwindow/MultiPhoneWindowManager;

    invoke-virtual {v0, p1}, Lcom/android/server/policy/multiwindow/MultiPhoneWindowManager;->getFloatingWindowPadding(Landroid/view/WindowManagerPolicy$WindowState;)Landroid/graphics/Rect;

    move-result-object v0

    return-object v0
.end method

.method public getGlobalSystemUiVisibility()I
    .registers 5

    .prologue
    .line 12399
    iget-object v0, p0, mMultiPhoneWindowManager:Lcom/android/server/policy/multiwindow/MultiPhoneWindowManager;

    iget-object v1, p0, mStatusBar:Landroid/view/WindowManagerPolicy$WindowState;

    iget v2, p0, mLastSystemUiFlags:I

    iget-object v3, p0, mTopFullscreenOpaqueWindowState:Landroid/view/WindowManagerPolicy$WindowState;

    invoke-virtual {v0, v1, v2, v3}, Lcom/android/server/policy/multiwindow/MultiPhoneWindowManager;->getGlobalSystemUiVisibility(Landroid/view/WindowManagerPolicy$WindowState;ILandroid/view/WindowManagerPolicy$WindowState;)I

    move-result v0

    return v0
.end method

.method public getInputMethodWindowVisibleHeightLw()I
    .registers 3

    .prologue
    .line 12268
    iget v0, p0, mDockBottom:I

    iget v1, p0, mCurBottom:I

    sub-int/2addr v0, v1

    return v0
.end method

.method public getInsetHintLw(Landroid/view/WindowManager$LayoutParams;ILandroid/graphics/Rect;Landroid/graphics/Rect;Landroid/graphics/Rect;)V
    .registers 18
    .param p1, "attrs"    # Landroid/view/WindowManager$LayoutParams;
    .param p2, "displayRotation"    # I
    .param p3, "outContentInsets"    # Landroid/graphics/Rect;
    .param p4, "outStableInsets"    # Landroid/graphics/Rect;
    .param p5, "outOutsets"    # Landroid/graphics/Rect;

    .prologue
    .line 6184
    const/4 v8, 0x0

    invoke-static {v8, p1}, Lcom/android/server/policy/PolicyControl;->getWindowFlags(Landroid/view/WindowManagerPolicy$WindowState;Landroid/view/WindowManager$LayoutParams;)I

    move-result v3

    .line 6185
    .local v3, "fl":I
    const/4 v8, 0x0

    invoke-static {v8, p1}, Lcom/android/server/policy/PolicyControl;->getSystemUiVisibility(Landroid/view/WindowManagerPolicy$WindowState;Landroid/view/WindowManager$LayoutParams;)I

    move-result v6

    .line 6186
    .local v6, "sysuiVis":I
    iget v8, p1, Landroid/view/WindowManager$LayoutParams;->subtreeSystemUiVisibility:I

    or-int v5, v6, v8

    .line 6188
    .local v5, "systemUiVisibility":I
    if-eqz p5, :cond_78

    invoke-direct {p0, p1, v3}, shouldUseOutsets(Landroid/view/WindowManager$LayoutParams;I)Z

    move-result v8

    if-eqz v8, :cond_78

    const/4 v7, 0x1

    .line 6189
    .local v7, "useOutsets":Z
    :goto_17
    if-eqz v7, :cond_30

    .line 6190
    iget-object v8, p0, mContext:Landroid/content/Context;

    invoke-virtual {v8}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    move-result-object v8

    invoke-static {v8}, Lcom/android/internal/util/ScreenShapeHelper;->getWindowOutsetBottomPx(Landroid/content/res/Resources;)I

    move-result v4

    .line 6191
    .local v4, "outset":I
    if-lez v4, :cond_30

    .line 6192
    if-nez p2, :cond_7a

    .line 6193
    move-object/from16 v0, p5

    iget v8, v0, Landroid/graphics/Rect;->bottom:I

    add-int/2addr v8, v4

    move-object/from16 v0, p5

    iput v8, v0, Landroid/graphics/Rect;->bottom:I

    .line 6204
    .end local v4    # "outset":I
    :cond_30
    :goto_30
    const v8, 0x10100

    and-int/2addr v8, v3

    const v9, 0x10100

    if-ne v8, v9, :cond_f0

    .line 6207
    invoke-direct {p0}, canHideNavigationBar()Z

    move-result v8

    if-eqz v8, :cond_a1

    and-int/lit16 v8, v5, 0x200

    if-eqz v8, :cond_a1

    .line 6209
    iget v8, p0, mUnrestrictedScreenLeft:I

    iget v9, p0, mUnrestrictedScreenWidth:I

    add-int v2, v8, v9

    .line 6210
    .local v2, "availRight":I
    iget v8, p0, mUnrestrictedScreenTop:I

    iget v9, p0, mUnrestrictedScreenHeight:I

    add-int v1, v8, v9

    .line 6215
    .local v1, "availBottom":I
    :goto_4f
    and-int/lit16 v8, v5, 0x100

    if-eqz v8, :cond_be

    .line 6216
    and-int/lit16 v8, v3, 0x400

    if-eqz v8, :cond_ae

    .line 6217
    iget v8, p0, mStableFullscreenLeft:I

    iget v9, p0, mStableFullscreenTop:I

    iget v10, p0, mStableFullscreenRight:I

    sub-int v10, v2, v10

    iget v11, p0, mStableFullscreenBottom:I

    sub-int v11, v1, v11

    invoke-virtual {p3, v8, v9, v10, v11}, Landroid/graphics/Rect;->set(IIII)V

    .line 6235
    :goto_66
    iget v8, p0, mStableLeft:I

    iget v9, p0, mStableTop:I

    iget v10, p0, mStableRight:I

    sub-int v10, v2, v10

    iget v11, p0, mStableBottom:I

    sub-int v11, v1, v11

    move-object/from16 v0, p4

    invoke-virtual {v0, v8, v9, v10, v11}, Landroid/graphics/Rect;->set(IIII)V

    .line 6241
    .end local v1    # "availBottom":I
    .end local v2    # "availRight":I
    :goto_77
    return-void

    .line 6188
    .end local v7    # "useOutsets":Z
    :cond_78
    const/4 v7, 0x0

    goto :goto_17

    .line 6194
    .restart local v4    # "outset":I
    .restart local v7    # "useOutsets":Z
    :cond_7a
    const/4 v8, 0x1

    if-ne p2, v8, :cond_87

    .line 6195
    move-object/from16 v0, p5

    iget v8, v0, Landroid/graphics/Rect;->right:I

    add-int/2addr v8, v4

    move-object/from16 v0, p5

    iput v8, v0, Landroid/graphics/Rect;->right:I

    goto :goto_30

    .line 6196
    :cond_87
    const/4 v8, 0x2

    if-ne p2, v8, :cond_94

    .line 6197
    move-object/from16 v0, p5

    iget v8, v0, Landroid/graphics/Rect;->top:I

    add-int/2addr v8, v4

    move-object/from16 v0, p5

    iput v8, v0, Landroid/graphics/Rect;->top:I

    goto :goto_30

    .line 6198
    :cond_94
    const/4 v8, 0x3

    if-ne p2, v8, :cond_30

    .line 6199
    move-object/from16 v0, p5

    iget v8, v0, Landroid/graphics/Rect;->left:I

    add-int/2addr v8, v4

    move-object/from16 v0, p5

    iput v8, v0, Landroid/graphics/Rect;->left:I

    goto :goto_30

    .line 6212
    .end local v4    # "outset":I
    :cond_a1
    iget v8, p0, mRestrictedScreenLeft:I

    iget v9, p0, mRestrictedScreenWidth:I

    add-int v2, v8, v9

    .line 6213
    .restart local v2    # "availRight":I
    iget v8, p0, mRestrictedScreenTop:I

    iget v9, p0, mRestrictedScreenHeight:I

    add-int v1, v8, v9

    .restart local v1    # "availBottom":I
    goto :goto_4f

    .line 6221
    :cond_ae
    iget v8, p0, mStableLeft:I

    iget v9, p0, mStableTop:I

    iget v10, p0, mStableRight:I

    sub-int v10, v2, v10

    iget v11, p0, mStableBottom:I

    sub-int v11, v1, v11

    invoke-virtual {p3, v8, v9, v10, v11}, Landroid/graphics/Rect;->set(IIII)V

    goto :goto_66

    .line 6224
    :cond_be
    and-int/lit16 v8, v3, 0x400

    if-nez v8, :cond_c7

    const/high16 v8, 0x2000000

    and-int/2addr v8, v3

    if-eqz v8, :cond_cb

    .line 6225
    :cond_c7
    invoke-virtual {p3}, Landroid/graphics/Rect;->setEmpty()V

    goto :goto_66

    .line 6226
    :cond_cb
    and-int/lit16 v8, v5, 0x404

    if-nez v8, :cond_df

    .line 6228
    iget v8, p0, mCurLeft:I

    iget v9, p0, mCurTop:I

    iget v10, p0, mCurRight:I

    sub-int v10, v2, v10

    iget v11, p0, mCurBottom:I

    sub-int v11, v1, v11

    invoke-virtual {p3, v8, v9, v10, v11}, Landroid/graphics/Rect;->set(IIII)V

    goto :goto_66

    .line 6231
    :cond_df
    iget v8, p0, mCurLeft:I

    iget v9, p0, mCurTop:I

    iget v10, p0, mCurRight:I

    sub-int v10, v2, v10

    iget v11, p0, mCurBottom:I

    sub-int v11, v1, v11

    invoke-virtual {p3, v8, v9, v10, v11}, Landroid/graphics/Rect;->set(IIII)V

    goto/16 :goto_66

    .line 6239
    .end local v1    # "availBottom":I
    .end local v2    # "availRight":I
    :cond_f0
    invoke-virtual {p3}, Landroid/graphics/Rect;->setEmpty()V

    .line 6240
    invoke-virtual/range {p4 .. p4}, Landroid/graphics/Rect;->setEmpty()V

    goto :goto_77
.end method

.method public getLockTaskMode()I
    .registers 2

    .prologue
    .line 12854
    iget v0, p0, mLockTaskModeState:I

    return v0
.end method

.method public getMaxWallpaperLayer()I
    .registers 2

    .prologue
    .line 4017
    const/16 v0, 0x7d0

    invoke-virtual {p0, v0}, windowTypeToLayerLw(I)I

    move-result v0

    return v0
.end method

.method public getMinimizeSize()I
    .registers 2

    .prologue
    .line 12348
    iget-object v0, p0, mMultiPhoneWindowManager:Lcom/android/server/policy/multiwindow/MultiPhoneWindowManager;

    invoke-virtual {v0}, Lcom/android/server/policy/multiwindow/MultiPhoneWindowManager;->getMinimizeSize()I

    move-result v0

    return v0
.end method

.method public getNonDecorAlphaScreenDisplayHeight(II)I
    .registers 4
    .param p1, "fullWidth"    # I
    .param p2, "fullHeight"    # I

    .prologue
    .line 4106
    iget-object v0, p0, mCocktailPhoneWindowManager:Lcom/android/server/policy/cocktail/CocktailPhoneWindowManager;

    invoke-virtual {v0, p1, p2}, Lcom/android/server/policy/cocktail/CocktailPhoneWindowManager;->getNonDecorAlphaScreenDisplayHeight(II)I

    move-result v0

    return v0
.end method

.method public getNonDecorAlphaScreenDisplayWidth(II)I
    .registers 4
    .param p1, "fullWidth"    # I
    .param p2, "fullHeight"    # I

    .prologue
    .line 4099
    iget-object v0, p0, mCocktailPhoneWindowManager:Lcom/android/server/policy/cocktail/CocktailPhoneWindowManager;

    invoke-virtual {v0, p1, p2}, Lcom/android/server/policy/cocktail/CocktailPhoneWindowManager;->getNonDecorAlphaScreenDisplayWidth(II)I

    move-result v0

    return v0
.end method

.method public getNonDecorDisplayHeight(III)I
    .registers 5
    .param p1, "fullWidth"    # I
    .param p2, "fullHeight"    # I
    .param p3, "rotation"    # I

    .prologue
    .line 4060
    iget-boolean v0, p0, mHasNavigationBar:Z

    if-eqz v0, :cond_11

    .line 4063
    iget-boolean v0, p0, mNavigationBarCanMove:Z

    if-eqz v0, :cond_a

    if-ge p1, p2, :cond_11

    .line 4064
    :cond_a
    iget-object v0, p0, mNavigationBarHeightForRotation:[I

    aget v0, v0, p3

    sub-int v0, p2, v0

    .line 4093
    :goto_10
    return v0

    .line 4070
    :cond_11
    iget-boolean v0, p0, mMobileKeyboardEnabled:Z

    if-eqz v0, :cond_1a

    .line 4071
    if-ge p1, p2, :cond_1a

    .line 4072
    iget v0, p0, mMobileKeyboardHeight:I

    sub-int/2addr p2, v0

    .line 4079
    :cond_1a
    invoke-virtual {p0}, isCarModeBarVisible()Z

    move-result v0

    if-eqz v0, :cond_25

    .line 4080
    if-ge p1, p2, :cond_25

    .line 4081
    iget v0, p0, mCarModeSize:I

    sub-int/2addr p2, v0

    .line 4088
    :cond_25
    iget-object v0, p0, mContext:Landroid/content/Context;

    invoke-static {v0}, Lcom/samsung/android/cocktailbar/CocktailBarFeatures;->isSystemBarType(Landroid/content/Context;)Z

    move-result v0

    if-eqz v0, :cond_34

    .line 4089
    iget-object v0, p0, mCocktailPhoneWindowManager:Lcom/android/server/policy/cocktail/CocktailPhoneWindowManager;

    invoke-virtual {v0, p1, p2}, Lcom/android/server/policy/cocktail/CocktailPhoneWindowManager;->getNonDecorDisplayHeight(II)I

    move-result v0

    goto :goto_10

    :cond_34
    move v0, p2

    .line 4093
    goto :goto_10
.end method

.method public getNonDecorDisplayWidth(III)I
    .registers 5
    .param p1, "fullWidth"    # I
    .param p2, "fullHeight"    # I
    .param p3, "rotation"    # I

    .prologue
    .line 4022
    iget-boolean v0, p0, mHasNavigationBar:Z

    if-eqz v0, :cond_11

    .line 4025
    iget-boolean v0, p0, mNavigationBarCanMove:Z

    if-eqz v0, :cond_11

    if-le p1, p2, :cond_11

    .line 4026
    iget-object v0, p0, mNavigationBarWidthForRotation:[I

    aget v0, v0, p3

    sub-int v0, p1, v0

    .line 4055
    :goto_10
    return v0

    .line 4032
    :cond_11
    iget-boolean v0, p0, mMobileKeyboardEnabled:Z

    if-eqz v0, :cond_1a

    .line 4033
    if-le p1, p2, :cond_1a

    .line 4034
    iget v0, p0, mMobileKeyboardHeight:I

    sub-int/2addr p1, v0

    .line 4041
    :cond_1a
    invoke-virtual {p0}, isCarModeBarVisible()Z

    move-result v0

    if-eqz v0, :cond_25

    .line 4042
    if-le p1, p2, :cond_25

    .line 4043
    iget v0, p0, mCarModeSize:I

    sub-int/2addr p1, v0

    .line 4050
    :cond_25
    iget-object v0, p0, mContext:Landroid/content/Context;

    invoke-static {v0}, Lcom/samsung/android/cocktailbar/CocktailBarFeatures;->isSystemBarType(Landroid/content/Context;)Z

    move-result v0

    if-eqz v0, :cond_34

    .line 4051
    iget-object v0, p0, mCocktailPhoneWindowManager:Lcom/android/server/policy/cocktail/CocktailPhoneWindowManager;

    invoke-virtual {v0, p1, p2}, Lcom/android/server/policy/cocktail/CocktailPhoneWindowManager;->getNonDecorDisplayWidth(II)I

    move-result v0

    goto :goto_10

    :cond_34
    move v0, p1

    .line 4055
    goto :goto_10
.end method

.method getPersonaManagerServiceLocked()Lcom/android/server/pm/PersonaManagerService;
    .registers 3

    .prologue
    .line 9984
    iget-object v1, p0, mPersonaManagerService:Lcom/android/server/pm/PersonaManagerService;

    if-nez v1, :cond_13

    .line 9985
    const-string/jumbo v1, "persona"

    invoke-static {v1}, Landroid/os/ServiceManager;->getService(Ljava/lang/String;)Landroid/os/IBinder;

    move-result-object v0

    .line 9986
    .local v0, "b":Landroid/os/IBinder;
    invoke-static {v0}, Landroid/os/IPersonaManager$Stub;->asInterface(Landroid/os/IBinder;)Landroid/os/IPersonaManager;

    move-result-object v1

    check-cast v1, Lcom/android/server/pm/PersonaManagerService;

    iput-object v1, p0, mPersonaManagerService:Lcom/android/server/pm/PersonaManagerService;

    .line 9989
    .end local v0    # "b":Landroid/os/IBinder;
    :cond_13
    iget-object v1, p0, mPersonaManagerService:Lcom/android/server/pm/PersonaManagerService;

    return-object v1
.end method

.method public getSViewCoverHeight(Landroid/view/DisplayInfo;)I
    .registers 3
    .param p1, "info"    # Landroid/view/DisplayInfo;

    .prologue
    .line 13021
    iget-object v0, p0, mCoverState:Lcom/samsung/android/cover/CoverState;

    if-eqz v0, :cond_9

    .line 13022
    iget-object v0, p0, mCoverState:Lcom/samsung/android/cover/CoverState;

    iget v0, v0, Lcom/samsung/android/cover/CoverState;->heightPixel:I

    .line 13024
    :goto_8
    return v0

    :cond_9
    iget v0, p1, Landroid/view/DisplayInfo;->appHeight:I

    goto :goto_8
.end method

.method public getSViewCoverWidth(Landroid/view/DisplayInfo;)I
    .registers 3
    .param p1, "info"    # Landroid/view/DisplayInfo;

    .prologue
    .line 13013
    iget-object v0, p0, mCoverState:Lcom/samsung/android/cover/CoverState;

    if-eqz v0, :cond_9

    .line 13014
    iget-object v0, p0, mCoverState:Lcom/samsung/android/cover/CoverState;

    iget v0, v0, Lcom/samsung/android/cover/CoverState;->widthPixel:I

    .line 13016
    :goto_8
    return v0

    :cond_9
    iget v0, p1, Landroid/view/DisplayInfo;->appWidth:I

    goto :goto_8
.end method

.method public getScaleWindowResizableSize()I
    .registers 2

    .prologue
    .line 12355
    iget-object v0, p0, mMultiPhoneWindowManager:Lcom/android/server/policy/multiwindow/MultiPhoneWindowManager;

    invoke-virtual {v0}, Lcom/android/server/policy/multiwindow/MultiPhoneWindowManager;->getScaleWindowResizableSize()I

    move-result v0

    return v0
.end method

.method getStatusBarService()Lcom/android/internal/statusbar/IStatusBarService;
    .registers 3

    .prologue
    .line 1462
    iget-object v1, p0, mServiceAquireLock:Ljava/lang/Object;

    monitor-enter v1

    .line 1463
    :try_start_3
    iget-object v0, p0, mStatusBarService:Lcom/android/internal/statusbar/IStatusBarService;

    if-nez v0, :cond_14

    .line 1464
    const-string/jumbo v0, "statusbar"

    invoke-static {v0}, Landroid/os/ServiceManager;->getService(Ljava/lang/String;)Landroid/os/IBinder;

    move-result-object v0

    invoke-static {v0}, Lcom/android/internal/statusbar/IStatusBarService$Stub;->asInterface(Landroid/os/IBinder;)Lcom/android/internal/statusbar/IStatusBarService;

    move-result-object v0

    iput-object v0, p0, mStatusBarService:Lcom/android/internal/statusbar/IStatusBarService;

    .line 1467
    :cond_14
    iget-object v0, p0, mStatusBarService:Lcom/android/internal/statusbar/IStatusBarService;

    monitor-exit v1

    return-object v0

    .line 1468
    :catchall_18
    move-exception v0

    monitor-exit v1
    :try_end_1a
    .catchall {:try_start_3 .. :try_end_1a} :catchall_18

    throw v0
.end method

.method public getSystemDecorLayerLw()I
    .registers 2

    .prologue
    .line 6691
    iget-object v0, p0, mStatusBar:Landroid/view/WindowManagerPolicy$WindowState;

    if-eqz v0, :cond_13

    iget-object v0, p0, mStatusBar:Landroid/view/WindowManagerPolicy$WindowState;

    invoke-interface {v0}, Landroid/view/WindowManagerPolicy$WindowState;->isVisibleLw()Z

    move-result v0

    if-eqz v0, :cond_13

    .line 6692
    iget-object v0, p0, mStatusBar:Landroid/view/WindowManagerPolicy$WindowState;

    invoke-interface {v0}, Landroid/view/WindowManagerPolicy$WindowState;->getSurfaceLayer()I

    move-result v0

    .line 6699
    :goto_12
    return v0

    .line 6695
    :cond_13
    iget-object v0, p0, mNavigationBar:Landroid/view/WindowManagerPolicy$WindowState;

    if-eqz v0, :cond_26

    iget-object v0, p0, mNavigationBar:Landroid/view/WindowManagerPolicy$WindowState;

    invoke-interface {v0}, Landroid/view/WindowManagerPolicy$WindowState;->isVisibleLw()Z

    move-result v0

    if-eqz v0, :cond_26

    .line 6696
    iget-object v0, p0, mNavigationBar:Landroid/view/WindowManagerPolicy$WindowState;

    invoke-interface {v0}, Landroid/view/WindowManagerPolicy$WindowState;->getSurfaceLayer()I

    move-result v0

    goto :goto_12

    .line 6699
    :cond_26
    const/4 v0, 0x0

    goto :goto_12
.end method

.method getTelecommService()Landroid/telecom/TelecomManager;
    .registers 3

    .prologue
    .line 4949
    iget-object v0, p0, mContext:Landroid/content/Context;

    const-string/jumbo v1, "telecom"

    invoke-virtual {v0, v1}, Landroid/content/Context;->getSystemService(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Landroid/telecom/TelecomManager;

    return-object v0
.end method

.method public getTopFullscreenOpaqueWindowState()Landroid/view/WindowManagerPolicy$WindowState;
    .registers 2

    .prologue
    .line 5042
    iget-object v0, p0, mTopFullscreenOpaqueWindowState:Landroid/view/WindowManagerPolicy$WindowState;

    return-object v0
.end method

.method public getUserRotationMode()I
    .registers 5

    .prologue
    const/4 v0, 0x0

    .line 11049
    iget-object v1, p0, mContext:Landroid/content/Context;

    invoke-virtual {v1}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v1

    const-string v2, "accelerometer_rotation"

    const/4 v3, -0x2

    invoke-static {v1, v2, v0, v3}, Landroid/provider/Settings$System;->getIntForUser(Landroid/content/ContentResolver;Ljava/lang/String;II)I

    move-result v1

    if-eqz v1, :cond_11

    :goto_10
    return v0

    :cond_11
    const/4 v0, 0x1

    goto :goto_10
.end method

.method public getWinShowWhenLockedLw()Landroid/view/WindowManagerPolicy$WindowState;
    .registers 2

    .prologue
    .line 4181
    const/4 v0, 0x0

    invoke-virtual {p0, v0}, getWinShowWhenLockedLw(I)Landroid/view/WindowManagerPolicy$WindowState;

    move-result-object v0

    return-object v0
.end method

.method public getWinShowWhenLockedLw(I)Landroid/view/WindowManagerPolicy$WindowState;
    .registers 3
    .param p1, "displayId"    # I

    .prologue
    .line 4189
    iget-object v0, p0, mWinShowWhenLocked:Landroid/view/WindowManagerPolicy$WindowState;

    return-object v0
.end method

.method goHome()Z
    .registers 21

    .prologue
    .line 11682
    const/16 v18, 0x0

    .line 11683
    .local v18, "personaId":I
    invoke-direct/range {p0 .. p0}, getPersonaManagerLocked()Landroid/os/PersonaManager;

    move-result-object v2

    if-eqz v2, :cond_28

    move-object/from16 v0, p0

    iget-object v2, v0, mPersonaManager:Landroid/os/PersonaManager;

    invoke-virtual {v2}, Landroid/os/PersonaManager;->getPersonaIds()[I

    move-result-object v2

    if-eqz v2, :cond_28

    move-object/from16 v0, p0

    iget-object v2, v0, mPersonaManager:Landroid/os/PersonaManager;

    invoke-virtual {v2}, Landroid/os/PersonaManager;->getPersonaIds()[I

    move-result-object v2

    array-length v2, v2

    if-lez v2, :cond_28

    .line 11684
    move-object/from16 v0, p0

    iget-object v2, v0, mPersonaManager:Landroid/os/PersonaManager;

    invoke-virtual {v2}, Landroid/os/PersonaManager;->getPersonaIds()[I

    move-result-object v2

    const/4 v3, 0x0

    aget v18, v2, v3

    .line 11686
    :cond_28
    move-object/from16 v0, p0

    move/from16 v1, v18

    invoke-direct {v0, v1}, isKnoxKeyguardShownForKioskMode(I)Z

    move-result v2

    if-eqz v2, :cond_3c

    .line 11687
    const-string v2, "WindowManager"

    const-string/jumbo v3, "goHome() > isKnoxKeyguardShownForKioskMode() : true"

    invoke-static {v2, v3}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 11688
    const/4 v2, 0x0

    .line 11740
    :goto_3b
    return v2

    .line 11692
    :cond_3c
    invoke-virtual/range {p0 .. p0}, isUserSetupComplete()Z

    move-result v2

    if-nez v2, :cond_4b

    .line 11693
    const-string v2, "WindowManager"

    const-string v3, "Not going home because user setup is in progress."

    invoke-static {v2, v3}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 11694
    const/4 v2, 0x0

    goto :goto_3b

    .line 11708
    :cond_4b
    :try_start_4b
    const-string/jumbo v2, "persist.sys.uts-test-mode"

    const/4 v3, 0x0

    invoke-static {v2, v3}, Landroid/os/SystemProperties;->getInt(Ljava/lang/String;I)I

    move-result v2

    const/4 v3, 0x1

    if-ne v2, v3, :cond_8b

    .line 11710
    const-string v2, "WindowManager"

    const-string v3, "UTS-TEST-MODE"

    invoke-static {v2, v3}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 11727
    :cond_5d
    invoke-static {}, Landroid/app/ActivityManagerNative;->getDefault()Landroid/app/IActivityManager;

    move-result-object v6

    const/4 v7, 0x0

    const/4 v8, 0x0

    move-object/from16 v0, p0

    iget-object v9, v0, mHomeIntent:Landroid/content/Intent;

    move-object/from16 v0, p0

    iget-object v2, v0, mHomeIntent:Landroid/content/Intent;

    move-object/from16 v0, p0

    iget-object v3, v0, mContext:Landroid/content/Context;

    invoke-virtual {v3}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v3

    invoke-virtual {v2, v3}, Landroid/content/Intent;->resolveTypeIfNeeded(Landroid/content/ContentResolver;)Ljava/lang/String;

    move-result-object v10

    const/4 v11, 0x0

    const/4 v12, 0x0

    const/4 v13, 0x0

    const/4 v14, 0x1

    const/4 v15, 0x0

    const/16 v16, 0x0

    const/16 v17, -0x2

    invoke-interface/range {v6 .. v17}, Landroid/app/IActivityManager;->startActivityAsUser(Landroid/app/IApplicationThread;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/os/IBinder;Ljava/lang/String;IILandroid/app/ProfilerInfo;Landroid/os/Bundle;I)I

    move-result v19

    .line 11733
    .local v19, "result":I
    const/4 v2, 0x1

    move/from16 v0, v19

    if-ne v0, v2, :cond_c1

    .line 11734
    const/4 v2, 0x0

    goto :goto_3b

    .line 11712
    .end local v19    # "result":I
    :cond_8b
    invoke-static {}, Landroid/app/ActivityManagerNative;->getDefault()Landroid/app/IActivityManager;

    move-result-object v2

    invoke-interface {v2}, Landroid/app/IActivityManager;->stopAppSwitches()V

    .line 11713
    invoke-virtual/range {p0 .. p0}, sendCloseSystemWindows()V

    .line 11714
    invoke-virtual/range {p0 .. p0}, createHomeDockIntent()Landroid/content/Intent;

    move-result-object v5

    .line 11715
    .local v5, "dock":Landroid/content/Intent;
    if-eqz v5, :cond_5d

    .line 11716
    invoke-static {}, Landroid/app/ActivityManagerNative;->getDefault()Landroid/app/IActivityManager;

    move-result-object v2

    const/4 v3, 0x0

    const/4 v4, 0x0

    move-object/from16 v0, p0

    iget-object v6, v0, mContext:Landroid/content/Context;

    invoke-virtual {v6}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v6

    invoke-virtual {v5, v6}, Landroid/content/Intent;->resolveTypeIfNeeded(Landroid/content/ContentResolver;)Ljava/lang/String;

    move-result-object v6

    const/4 v7, 0x0

    const/4 v8, 0x0

    const/4 v9, 0x0

    const/4 v10, 0x1

    const/4 v11, 0x0

    const/4 v12, 0x0

    const/4 v13, -0x2

    invoke-interface/range {v2 .. v13}, Landroid/app/IActivityManager;->startActivityAsUser(Landroid/app/IApplicationThread;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/os/IBinder;Ljava/lang/String;IILandroid/app/ProfilerInfo;Landroid/os/Bundle;I)I
    :try_end_b7
    .catch Landroid/os/RemoteException; {:try_start_4b .. :try_end_b7} :catch_c0

    move-result v19

    .line 11722
    .restart local v19    # "result":I
    const/4 v2, 0x1

    move/from16 v0, v19

    if-ne v0, v2, :cond_5d

    .line 11723
    const/4 v2, 0x0

    goto/16 :goto_3b

    .line 11736
    .end local v5    # "dock":Landroid/content/Intent;
    .end local v19    # "result":I
    :catch_c0
    move-exception v2

    .line 11740
    :cond_c1
    const/4 v2, 0x1

    goto/16 :goto_3b
.end method

.method public hasNavigationBar()Z
    .registers 2

    .prologue
    .line 12247
    iget-boolean v0, p0, mHasNavigationBar:Z

    return v0
.end method

.method public hideBootMessages()V
    .registers 3

    .prologue
    .line 11327
    iget-object v0, p0, mHandler:Landroid/os/Handler;

    const/16 v1, 0xb

    invoke-virtual {v0, v1}, Landroid/os/Handler;->sendEmptyMessage(I)Z

    .line 11328
    return-void
.end method

.method public inKeyguardRestrictedKeyInputMode()Z
    .registers 2

    .prologue
    .line 10597
    iget-object v0, p0, mKeyguardDelegate:Lcom/android/server/policy/keyguard/KeyguardServiceDelegate;

    if-nez v0, :cond_6

    const/4 v0, 0x0

    .line 10598
    :goto_5
    return v0

    :cond_6
    iget-object v0, p0, mKeyguardDelegate:Lcom/android/server/policy/keyguard/KeyguardServiceDelegate;

    invoke-virtual {v0}, Lcom/android/server/policy/keyguard/KeyguardServiceDelegate;->isInputRestricted()Z

    move-result v0

    goto :goto_5
.end method

.method public init(Landroid/content/Context;Landroid/view/IWindowManager;Landroid/view/WindowManagerPolicy$WindowManagerFuncs;)V
    .registers 28
    .param p1, "context"    # Landroid/content/Context;
    .param p2, "windowManager"    # Landroid/view/IWindowManager;
    .param p3, "windowManagerFuncs"    # Landroid/view/WindowManagerPolicy$WindowManagerFuncs;

    .prologue
    .line 2378
    move-object/from16 v0, p1

    move-object/from16 v1, p0

    iput-object v0, v1, mContext:Landroid/content/Context;

    .line 2379
    move-object/from16 v0, p2

    move-object/from16 v1, p0

    iput-object v0, v1, mWindowManager:Landroid/view/IWindowManager;

    .line 2380
    move-object/from16 v0, p3

    move-object/from16 v1, p0

    iput-object v0, v1, mWindowManagerFuncs:Landroid/view/WindowManagerPolicy$WindowManagerFuncs;

    .line 2381
    const-class v2, Landroid/view/WindowManagerInternal;

    invoke-static {v2}, Lcom/android/server/LocalServices;->getService(Ljava/lang/Class;)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Landroid/view/WindowManagerInternal;

    move-object/from16 v0, p0

    iput-object v2, v0, mWindowManagerInternal:Landroid/view/WindowManagerInternal;

    .line 2382
    const-class v2, Landroid/app/ActivityManagerInternal;

    invoke-static {v2}, Lcom/android/server/LocalServices;->getService(Ljava/lang/Class;)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Landroid/app/ActivityManagerInternal;

    move-object/from16 v0, p0

    iput-object v2, v0, mActivityManagerInternal:Landroid/app/ActivityManagerInternal;

    .line 2383
    const-class v2, Landroid/service/dreams/DreamManagerInternal;

    invoke-static {v2}, Lcom/android/server/LocalServices;->getService(Ljava/lang/Class;)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Landroid/service/dreams/DreamManagerInternal;

    move-object/from16 v0, p0

    iput-object v2, v0, mDreamManagerInternal:Landroid/service/dreams/DreamManagerInternal;

    .line 2384
    const-class v2, Landroid/os/PowerManagerInternal;

    invoke-static {v2}, Lcom/android/server/LocalServices;->getService(Ljava/lang/Class;)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Landroid/os/PowerManagerInternal;

    move-object/from16 v0, p0

    iput-object v2, v0, mPowerManagerInternal:Landroid/os/PowerManagerInternal;

    .line 2385
    move-object/from16 v0, p0

    iget-object v2, v0, mContext:Landroid/content/Context;

    const-string v3, "appops"

    invoke-virtual {v2, v3}, Landroid/content/Context;->getSystemService(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Landroid/app/AppOpsManager;

    move-object/from16 v0, p0

    iput-object v2, v0, mAppOpsManager:Landroid/app/AppOpsManager;

    .line 2388
    invoke-virtual/range {p1 .. p1}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    move-result-object v2

    const v3, 0x11200b9

    invoke-virtual {v2, v3}, Landroid/content/res/Resources;->getBoolean(I)Z

    move-result v16

    .line 2391
    .local v16, "burnInProtectionEnabled":Z
    const-string/jumbo v2, "persist.debug.force_burn_in"

    const/4 v3, 0x0

    invoke-static {v2, v3}, Landroid/os/SystemProperties;->getBoolean(Ljava/lang/String;Z)Z

    move-result v15

    .line 2393
    .local v15, "burnInProtectionDevMode":Z
    if-nez v16, :cond_69

    if-eqz v15, :cond_82

    .line 2399
    :cond_69
    if-eqz v15, :cond_488

    .line 2400
    const/4 v4, -0x8

    .line 2401
    .local v4, "minHorizontal":I
    const/16 v5, 0x8

    .line 2402
    .local v5, "maxHorizontal":I
    const/4 v6, -0x8

    .line 2403
    .local v6, "minVertical":I
    const/4 v7, -0x4

    .line 2404
    .local v7, "maxVertical":I
    invoke-direct/range {p0 .. p0}, isRoundWindow()Z

    move-result v2

    if-eqz v2, :cond_485

    const/4 v8, 0x6

    .line 2418
    .local v8, "maxRadius":I
    :goto_77
    new-instance v2, Lcom/android/server/policy/BurnInProtectionHelper;

    move-object/from16 v3, p1

    invoke-direct/range {v2 .. v8}, Lcom/android/server/policy/BurnInProtectionHelper;-><init>(Landroid/content/Context;IIIII)V

    move-object/from16 v0, p0

    iput-object v2, v0, mBurnInProtectionHelper:Lcom/android/server/policy/BurnInProtectionHelper;

    .line 2422
    .end local v4    # "minHorizontal":I
    .end local v5    # "maxHorizontal":I
    .end local v6    # "minVertical":I
    .end local v7    # "maxVertical":I
    .end local v8    # "maxRadius":I
    :cond_82
    new-instance v2, Lcom/android/server/policy/PhoneWindowManager$PolicyHandler;

    const/4 v3, 0x0

    move-object/from16 v0, p0

    invoke-direct {v2, v0, v3}, Lcom/android/server/policy/PhoneWindowManager$PolicyHandler;-><init>(Lcom/android/server/policy/PhoneWindowManager;Lcom/android/server/policy/PhoneWindowManager$1;)V

    move-object/from16 v0, p0

    iput-object v2, v0, mHandler:Landroid/os/Handler;

    .line 2423
    new-instance v2, Lcom/android/server/policy/PhoneWindowManager$MyWakeGestureListener;

    move-object/from16 v0, p0

    iget-object v3, v0, mContext:Landroid/content/Context;

    move-object/from16 v0, p0

    iget-object v9, v0, mHandler:Landroid/os/Handler;

    move-object/from16 v0, p0

    invoke-direct {v2, v0, v3, v9}, Lcom/android/server/policy/PhoneWindowManager$MyWakeGestureListener;-><init>(Lcom/android/server/policy/PhoneWindowManager;Landroid/content/Context;Landroid/os/Handler;)V

    move-object/from16 v0, p0

    iput-object v2, v0, mWakeGestureListener:Lcom/android/server/policy/PhoneWindowManager$MyWakeGestureListener;

    .line 2424
    new-instance v2, Lcom/android/server/policy/PhoneWindowManager$MyOrientationListener;

    move-object/from16 v0, p0

    iget-object v3, v0, mContext:Landroid/content/Context;

    move-object/from16 v0, p0

    iget-object v9, v0, mHandler:Landroid/os/Handler;

    move-object/from16 v0, p0

    invoke-direct {v2, v0, v3, v9}, Lcom/android/server/policy/PhoneWindowManager$MyOrientationListener;-><init>(Lcom/android/server/policy/PhoneWindowManager;Landroid/content/Context;Landroid/os/Handler;)V

    move-object/from16 v0, p0

    iput-object v2, v0, mOrientationListener:Lcom/android/server/policy/PhoneWindowManager$MyOrientationListener;

    .line 2426
    :try_start_b4
    move-object/from16 v0, p0

    iget-object v2, v0, mOrientationListener:Lcom/android/server/policy/PhoneWindowManager$MyOrientationListener;

    invoke-interface/range {p2 .. p2}, Landroid/view/IWindowManager;->getRotation()I

    move-result v3

    invoke-virtual {v2, v3}, Lcom/android/server/policy/PhoneWindowManager$MyOrientationListener;->setCurrentRotation(I)V
    :try_end_bf
    .catch Landroid/os/RemoteException; {:try_start_b4 .. :try_end_bf} :catch_7d5

    .line 2431
    :goto_bf
    move-object/from16 v0, p0

    iget-object v2, v0, mContext:Landroid/content/Context;

    invoke-virtual {v2}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v2

    const-string/jumbo v3, "mobile_keyboard"

    const/4 v9, 0x0

    const/4 v10, 0x0

    invoke-static {v2, v3, v9, v10}, Landroid/provider/Settings$System;->putIntForUser(Landroid/content/ContentResolver;Ljava/lang/String;II)Z

    .line 2435
    new-instance v2, Lcom/android/server/policy/PhoneWindowManager$SettingsObserver;

    move-object/from16 v0, p0

    iget-object v3, v0, mHandler:Landroid/os/Handler;

    move-object/from16 v0, p0

    invoke-direct {v2, v0, v3}, Lcom/android/server/policy/PhoneWindowManager$SettingsObserver;-><init>(Lcom/android/server/policy/PhoneWindowManager;Landroid/os/Handler;)V

    move-object/from16 v0, p0

    iput-object v2, v0, mSettingsObserver:Lcom/android/server/policy/PhoneWindowManager$SettingsObserver;

    .line 2436
    move-object/from16 v0, p0

    iget-object v2, v0, mSettingsObserver:Lcom/android/server/policy/PhoneWindowManager$SettingsObserver;

    invoke-virtual {v2}, Lcom/android/server/policy/PhoneWindowManager$SettingsObserver;->observe()V

    .line 2437
    new-instance v2, Lcom/android/server/policy/ShortcutManager;

    move-object/from16 v0, p1

    invoke-direct {v2, v0}, Lcom/android/server/policy/ShortcutManager;-><init>(Landroid/content/Context;)V

    move-object/from16 v0, p0

    iput-object v2, v0, mShortcutManager:Lcom/android/server/policy/ShortcutManager;

    .line 2438
    invoke-virtual/range {p1 .. p1}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    move-result-object v2

    const v3, 0x10e0046

    invoke-virtual {v2, v3}, Landroid/content/res/Resources;->getInteger(I)I

    move-result v2

    move-object/from16 v0, p0

    iput v2, v0, mUiMode:I

    .line 2440
    new-instance v2, Landroid/content/Intent;

    const-string v3, "android.intent.action.MAIN"

    const/4 v9, 0x0

    invoke-direct {v2, v3, v9}, Landroid/content/Intent;-><init>(Ljava/lang/String;Landroid/net/Uri;)V

    move-object/from16 v0, p0

    iput-object v2, v0, mHomeIntent:Landroid/content/Intent;

    .line 2441
    move-object/from16 v0, p0

    iget-object v2, v0, mHomeIntent:Landroid/content/Intent;

    const-string v3, "android.intent.category.HOME"

    invoke-virtual {v2, v3}, Landroid/content/Intent;->addCategory(Ljava/lang/String;)Landroid/content/Intent;

    .line 2442
    move-object/from16 v0, p0

    iget-object v2, v0, mHomeIntent:Landroid/content/Intent;

    const/high16 v3, 0x10200000

    invoke-virtual {v2, v3}, Landroid/content/Intent;->addFlags(I)Landroid/content/Intent;

    .line 2444
    new-instance v2, Landroid/content/Intent;

    const-string v3, "android.intent.action.MAIN"

    const/4 v9, 0x0

    invoke-direct {v2, v3, v9}, Landroid/content/Intent;-><init>(Ljava/lang/String;Landroid/net/Uri;)V

    move-object/from16 v0, p0

    iput-object v2, v0, mCarDockIntent:Landroid/content/Intent;

    .line 2445
    move-object/from16 v0, p0

    iget-object v2, v0, mCarDockIntent:Landroid/content/Intent;

    const-string v3, "android.intent.category.CAR_DOCK"

    invoke-virtual {v2, v3}, Landroid/content/Intent;->addCategory(Ljava/lang/String;)Landroid/content/Intent;

    .line 2446
    move-object/from16 v0, p0

    iget-object v2, v0, mCarDockIntent:Landroid/content/Intent;

    const/high16 v3, 0x10200000

    invoke-virtual {v2, v3}, Landroid/content/Intent;->addFlags(I)Landroid/content/Intent;

    .line 2448
    new-instance v2, Landroid/content/Intent;

    const-string v3, "android.intent.action.MAIN"

    const/4 v9, 0x0

    invoke-direct {v2, v3, v9}, Landroid/content/Intent;-><init>(Ljava/lang/String;Landroid/net/Uri;)V

    move-object/from16 v0, p0

    iput-object v2, v0, mDeskDockIntent:Landroid/content/Intent;

    .line 2449
    move-object/from16 v0, p0

    iget-object v2, v0, mDeskDockIntent:Landroid/content/Intent;

    const-string v3, "android.intent.category.DESK_DOCK"

    invoke-virtual {v2, v3}, Landroid/content/Intent;->addCategory(Ljava/lang/String;)Landroid/content/Intent;

    .line 2450
    move-object/from16 v0, p0

    iget-object v2, v0, mDeskDockIntent:Landroid/content/Intent;

    const/high16 v3, 0x10200000

    invoke-virtual {v2, v3}, Landroid/content/Intent;->addFlags(I)Landroid/content/Intent;

    .line 2453
    const-string/jumbo v2, "power"

    move-object/from16 v0, p1

    invoke-virtual {v0, v2}, Landroid/content/Context;->getSystemService(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Landroid/os/PowerManager;

    move-object/from16 v0, p0

    iput-object v2, v0, mPowerManager:Landroid/os/PowerManager;

    .line 2454
    move-object/from16 v0, p0

    iget-object v2, v0, mPowerManager:Landroid/os/PowerManager;

    const/4 v3, 0x1

    const-string v9, "PhoneWindowManager.mBroadcastWakeLock"

    invoke-virtual {v2, v3, v9}, Landroid/os/PowerManager;->newWakeLock(ILjava/lang/String;)Landroid/os/PowerManager$WakeLock;

    move-result-object v2

    move-object/from16 v0, p0

    iput-object v2, v0, mBroadcastWakeLock:Landroid/os/PowerManager$WakeLock;

    .line 2456
    move-object/from16 v0, p0

    iget-object v2, v0, mPowerManager:Landroid/os/PowerManager;

    const/4 v3, 0x1

    const-string v9, "PhoneWindowManager.mPowerKeyWakeLock"

    invoke-virtual {v2, v3, v9}, Landroid/os/PowerManager;->newWakeLock(ILjava/lang/String;)Landroid/os/PowerManager$WakeLock;

    move-result-object v2

    move-object/from16 v0, p0

    iput-object v2, v0, mPowerKeyWakeLock:Landroid/os/PowerManager$WakeLock;

    .line 2458
    const-string v2, "1"

    const-string/jumbo v3, "ro.debuggable"

    invoke-static {v3}, Landroid/os/SystemProperties;->get(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v2, v3}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    move-object/from16 v0, p0

    iput-boolean v2, v0, mEnableShiftMenuBugReports:Z

    .line 2459
    move-object/from16 v0, p0

    iget-object v2, v0, mContext:Landroid/content/Context;

    invoke-virtual {v2}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    move-result-object v2

    const v3, 0x112003b

    invoke-virtual {v2, v3}, Landroid/content/res/Resources;->getBoolean(I)Z

    move-result v2

    move-object/from16 v0, p0

    iput-boolean v2, v0, mSupportAutoRotation:Z

    .line 2461
    const v2, 0x10e003e

    move-object/from16 v0, p0

    invoke-direct {v0, v2}, readRotation(I)I

    move-result v2

    move-object/from16 v0, p0

    iput v2, v0, mLidOpenRotation:I

    .line 2463
    const v2, 0x10e0043

    move-object/from16 v0, p0

    invoke-direct {v0, v2}, readRotation(I)I

    move-result v2

    move-object/from16 v0, p0

    iput v2, v0, mCarDockRotation:I

    .line 2465
    const v2, 0x10e0041

    move-object/from16 v0, p0

    invoke-direct {v0, v2}, readRotation(I)I

    move-result v2

    move-object/from16 v0, p0

    iput v2, v0, mDeskDockRotation:I

    .line 2467
    const v2, 0x10e0045

    move-object/from16 v0, p0

    invoke-direct {v0, v2}, readRotation(I)I

    move-result v2

    move-object/from16 v0, p0

    iput v2, v0, mUndockedHdmiRotation:I

    .line 2470
    const v2, 0x10e0101

    move-object/from16 v0, p0

    invoke-direct {v0, v2}, readRotation(I)I

    move-result v2

    move-object/from16 v0, p0

    iput v2, v0, mMirrorlinkDockRotation:I

    .line 2473
    move-object/from16 v0, p0

    iget-object v2, v0, mContext:Landroid/content/Context;

    invoke-virtual {v2}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    move-result-object v2

    const v3, 0x1120041

    invoke-virtual {v2, v3}, Landroid/content/res/Resources;->getBoolean(I)Z

    move-result v2

    move-object/from16 v0, p0

    iput-boolean v2, v0, mCarDockEnablesAccelerometer:Z

    .line 2475
    move-object/from16 v0, p0

    iget-object v2, v0, mContext:Landroid/content/Context;

    invoke-virtual {v2}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    move-result-object v2

    const v3, 0x1120040

    invoke-virtual {v2, v3}, Landroid/content/res/Resources;->getBoolean(I)Z

    move-result v2

    move-object/from16 v0, p0

    iput-boolean v2, v0, mDeskDockEnablesAccelerometer:Z

    .line 2478
    move-object/from16 v0, p0

    iget-object v2, v0, mContext:Landroid/content/Context;

    invoke-virtual {v2}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    move-result-object v2

    const v3, 0x11200cd

    invoke-virtual {v2, v3}, Landroid/content/res/Resources;->getBoolean(I)Z

    move-result v2

    move-object/from16 v0, p0

    iput-boolean v2, v0, mMirrorLinkDockEnablesAccelerometer:Z

    .line 2481
    move-object/from16 v0, p0

    iget-object v2, v0, mContext:Landroid/content/Context;

    invoke-virtual {v2}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    move-result-object v2

    const v3, 0x10e003f

    invoke-virtual {v2, v3}, Landroid/content/res/Resources;->getInteger(I)I

    move-result v2

    move-object/from16 v0, p0

    iput v2, v0, mLidKeyboardAccessibility:I

    .line 2483
    move-object/from16 v0, p0

    iget-object v2, v0, mContext:Landroid/content/Context;

    invoke-virtual {v2}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    move-result-object v2

    const v3, 0x10e0040

    invoke-virtual {v2, v3}, Landroid/content/res/Resources;->getInteger(I)I

    move-result v2

    move-object/from16 v0, p0

    iput v2, v0, mLidNavigationAccessibility:I

    .line 2485
    move-object/from16 v0, p0

    iget-object v2, v0, mContext:Landroid/content/Context;

    invoke-virtual {v2}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    move-result-object v2

    const v3, 0x112003f

    invoke-virtual {v2, v3}, Landroid/content/res/Resources;->getBoolean(I)Z

    move-result v2

    move-object/from16 v0, p0

    iput-boolean v2, v0, mLidControlsSleep:Z

    .line 2487
    move-object/from16 v0, p0

    iget-object v2, v0, mContext:Landroid/content/Context;

    invoke-virtual {v2}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    move-result-object v2

    const v3, 0x112004a

    invoke-virtual {v2, v3}, Landroid/content/res/Resources;->getBoolean(I)Z

    move-result v2

    move-object/from16 v0, p0

    iput-boolean v2, v0, mTranslucentDecorEnabled:Z

    .line 2490
    move-object/from16 v0, p0

    iget-object v2, v0, mContext:Landroid/content/Context;

    invoke-virtual {v2}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    move-result-object v2

    const v3, 0x1120033

    invoke-virtual {v2, v3}, Landroid/content/res/Resources;->getBoolean(I)Z

    move-result v2

    move-object/from16 v0, p0

    iput-boolean v2, v0, mAllowTheaterModeWakeFromKey:Z

    .line 2492
    move-object/from16 v0, p0

    iget-boolean v2, v0, mAllowTheaterModeWakeFromKey:Z

    if-nez v2, :cond_29a

    move-object/from16 v0, p0

    iget-object v2, v0, mContext:Landroid/content/Context;

    invoke-virtual {v2}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    move-result-object v2

    const v3, 0x1120032

    invoke-virtual {v2, v3}, Landroid/content/res/Resources;->getBoolean(I)Z

    move-result v2

    if-eqz v2, :cond_4bb

    :cond_29a
    const/4 v2, 0x1

    :goto_29b
    move-object/from16 v0, p0

    iput-boolean v2, v0, mAllowTheaterModeWakeFromPowerKey:Z

    .line 2495
    move-object/from16 v0, p0

    iget-object v2, v0, mContext:Landroid/content/Context;

    invoke-virtual {v2}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    move-result-object v2

    const v3, 0x1120034

    invoke-virtual {v2, v3}, Landroid/content/res/Resources;->getBoolean(I)Z

    move-result v2

    move-object/from16 v0, p0

    iput-boolean v2, v0, mAllowTheaterModeWakeFromMotion:Z

    .line 2497
    move-object/from16 v0, p0

    iget-object v2, v0, mContext:Landroid/content/Context;

    invoke-virtual {v2}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    move-result-object v2

    const v3, 0x1120035

    invoke-virtual {v2, v3}, Landroid/content/res/Resources;->getBoolean(I)Z

    move-result v2

    move-object/from16 v0, p0

    iput-boolean v2, v0, mAllowTheaterModeWakeFromMotionWhenNotDreaming:Z

    .line 2499
    move-object/from16 v0, p0

    iget-object v2, v0, mContext:Landroid/content/Context;

    invoke-virtual {v2}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    move-result-object v2

    const v3, 0x1120031

    invoke-virtual {v2, v3}, Landroid/content/res/Resources;->getBoolean(I)Z

    move-result v2

    move-object/from16 v0, p0

    iput-boolean v2, v0, mAllowTheaterModeWakeFromCameraLens:Z

    .line 2501
    move-object/from16 v0, p0

    iget-object v2, v0, mContext:Landroid/content/Context;

    invoke-virtual {v2}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    move-result-object v2

    const v3, 0x1120036

    invoke-virtual {v2, v3}, Landroid/content/res/Resources;->getBoolean(I)Z

    move-result v2

    move-object/from16 v0, p0

    iput-boolean v2, v0, mAllowTheaterModeWakeFromLidSwitch:Z

    .line 2503
    move-object/from16 v0, p0

    iget-object v2, v0, mContext:Landroid/content/Context;

    invoke-virtual {v2}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    move-result-object v2

    const v3, 0x1120030

    invoke-virtual {v2, v3}, Landroid/content/res/Resources;->getBoolean(I)Z

    move-result v2

    move-object/from16 v0, p0

    iput-boolean v2, v0, mAllowTheaterModeWakeFromWakeGesture:Z

    .line 2506
    move-object/from16 v0, p0

    iget-object v2, v0, mContext:Landroid/content/Context;

    invoke-virtual {v2}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    move-result-object v2

    const v3, 0x1120039

    invoke-virtual {v2, v3}, Landroid/content/res/Resources;->getBoolean(I)Z

    move-result v2

    move-object/from16 v0, p0

    iput-boolean v2, v0, mGoToSleepOnButtonPressTheaterMode:Z

    .line 2509
    move-object/from16 v0, p0

    iget-object v2, v0, mContext:Landroid/content/Context;

    invoke-virtual {v2}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    move-result-object v2

    const v3, 0x112003a

    invoke-virtual {v2, v3}, Landroid/content/res/Resources;->getBoolean(I)Z

    move-result v2

    move-object/from16 v0, p0

    iput-boolean v2, v0, mSupportLongPressPowerWhenNonInteractive:Z

    .line 2512
    move-object/from16 v0, p0

    iget-object v2, v0, mContext:Landroid/content/Context;

    invoke-virtual {v2}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    move-result-object v2

    const v3, 0x10e0049

    invoke-virtual {v2, v3}, Landroid/content/res/Resources;->getInteger(I)I

    move-result v2

    move-object/from16 v0, p0

    iput v2, v0, mShortPressOnPowerBehavior:I

    .line 2514
    move-object/from16 v0, p0

    iget-object v2, v0, mContext:Landroid/content/Context;

    invoke-virtual {v2}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    move-result-object v2

    const v3, 0x10e0048

    invoke-virtual {v2, v3}, Landroid/content/res/Resources;->getInteger(I)I

    move-result v2

    move-object/from16 v0, p0

    iput v2, v0, mLongPressOnPowerBehavior:I

    .line 2516
    move-object/from16 v0, p0

    iget-object v2, v0, mContext:Landroid/content/Context;

    invoke-virtual {v2}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    move-result-object v2

    const v3, 0x10e004a

    invoke-virtual {v2, v3}, Landroid/content/res/Resources;->getInteger(I)I

    move-result v2

    move-object/from16 v0, p0

    iput v2, v0, mDoublePressOnPowerBehavior:I

    .line 2518
    move-object/from16 v0, p0

    iget-object v2, v0, mContext:Landroid/content/Context;

    invoke-virtual {v2}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    move-result-object v2

    const v3, 0x10e004b

    invoke-virtual {v2, v3}, Landroid/content/res/Resources;->getInteger(I)I

    move-result v2

    move-object/from16 v0, p0

    iput v2, v0, mTriplePressOnPowerBehavior:I

    .line 2520
    move-object/from16 v0, p0

    iget-object v2, v0, mContext:Landroid/content/Context;

    invoke-virtual {v2}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    move-result-object v2

    const v3, 0x10e004c

    invoke-virtual {v2, v3}, Landroid/content/res/Resources;->getInteger(I)I

    move-result v2

    move-object/from16 v0, p0

    iput v2, v0, mShortPressOnSleepBehavior:I

    .line 2523
    move-object/from16 v0, p0

    iget-object v2, v0, mContext:Landroid/content/Context;

    invoke-static {v2}, Landroid/media/AudioSystem;->getPlatformType(Landroid/content/Context;)I

    move-result v2

    const/4 v3, 0x2

    if-ne v2, v3, :cond_4be

    const/4 v2, 0x1

    :goto_38f
    move-object/from16 v0, p0

    iput-boolean v2, v0, mUseTvRouting:Z

    .line 2525
    invoke-direct/range {p0 .. p0}, readConfigurationDependentBehaviors()V

    .line 2527
    const-string v2, "accessibility"

    move-object/from16 v0, p1

    invoke-virtual {v0, v2}, Landroid/content/Context;->getSystemService(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Landroid/view/accessibility/AccessibilityManager;

    move-object/from16 v0, p0

    iput-object v2, v0, mAccessibilityManager:Landroid/view/accessibility/AccessibilityManager;

    .line 2531
    new-instance v17, Landroid/content/IntentFilter;

    invoke-direct/range {v17 .. v17}, Landroid/content/IntentFilter;-><init>()V

    .line 2532
    .local v17, "filter":Landroid/content/IntentFilter;
    sget-object v2, Landroid/app/UiModeManager;->ACTION_ENTER_CAR_MODE:Ljava/lang/String;

    move-object/from16 v0, v17

    invoke-virtual {v0, v2}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    .line 2533
    sget-object v2, Landroid/app/UiModeManager;->ACTION_EXIT_CAR_MODE:Ljava/lang/String;

    move-object/from16 v0, v17

    invoke-virtual {v0, v2}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    .line 2534
    sget-object v2, Landroid/app/UiModeManager;->ACTION_ENTER_DESK_MODE:Ljava/lang/String;

    move-object/from16 v0, v17

    invoke-virtual {v0, v2}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    .line 2535
    sget-object v2, Landroid/app/UiModeManager;->ACTION_EXIT_DESK_MODE:Ljava/lang/String;

    move-object/from16 v0, v17

    invoke-virtual {v0, v2}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    .line 2536
    const-string v2, "android.intent.action.DOCK_EVENT"

    move-object/from16 v0, v17

    invoke-virtual {v0, v2}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    .line 2537
    move-object/from16 v0, p0

    iget-object v2, v0, mDockReceiver:Landroid/content/BroadcastReceiver;

    move-object/from16 v0, p1

    move-object/from16 v1, v17

    invoke-virtual {v0, v2, v1}, Landroid/content/Context;->registerReceiver(Landroid/content/BroadcastReceiver;Landroid/content/IntentFilter;)Landroid/content/Intent;

    move-result-object v19

    .line 2538
    .local v19, "intent":Landroid/content/Intent;
    if-eqz v19, :cond_3e7

    .line 2540
    const-string v2, "android.intent.extra.DOCK_STATE"

    const/4 v3, 0x0

    move-object/from16 v0, v19

    invoke-virtual {v0, v2, v3}, Landroid/content/Intent;->getIntExtra(Ljava/lang/String;I)I

    move-result v2

    move-object/from16 v0, p0

    iput v2, v0, mDockMode:I

    .line 2544
    :cond_3e7
    invoke-static {}, Landroid/os/Debug;->isProductShip()I

    move-result v2

    const/4 v3, 0x1

    if-eq v2, v3, :cond_405

    .line 2545
    new-instance v17, Landroid/content/IntentFilter;

    .end local v17    # "filter":Landroid/content/IntentFilter;
    invoke-direct/range {v17 .. v17}, Landroid/content/IntentFilter;-><init>()V

    .line 2546
    .restart local v17    # "filter":Landroid/content/IntentFilter;
    const-string v2, "android.app.action.DEBUG_RECONFIGURE"

    move-object/from16 v0, v17

    invoke-virtual {v0, v2}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    .line 2547
    move-object/from16 v0, p0

    iget-object v2, v0, mReconfigureDebugReceiver:Landroid/content/BroadcastReceiver;

    move-object/from16 v0, p1

    move-object/from16 v1, v17

    invoke-virtual {v0, v2, v1}, Landroid/content/Context;->registerReceiver(Landroid/content/BroadcastReceiver;Landroid/content/IntentFilter;)Landroid/content/Intent;

    .line 2551
    :cond_405
    new-instance v17, Landroid/content/IntentFilter;

    .end local v17    # "filter":Landroid/content/IntentFilter;
    invoke-direct/range {v17 .. v17}, Landroid/content/IntentFilter;-><init>()V

    .line 2552
    .restart local v17    # "filter":Landroid/content/IntentFilter;
    const-string v2, "android.intent.action.PACKAGE_REPLACED"

    move-object/from16 v0, v17

    invoke-virtual {v0, v2}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    .line 2553
    const-string/jumbo v2, "package"

    move-object/from16 v0, v17

    invoke-virtual {v0, v2}, Landroid/content/IntentFilter;->addDataScheme(Ljava/lang/String;)V

    .line 2554
    move-object/from16 v0, p0

    iget-object v2, v0, mSystemUIReplacedReceiver:Landroid/content/BroadcastReceiver;

    move-object/from16 v0, p1

    move-object/from16 v1, v17

    invoke-virtual {v0, v2, v1}, Landroid/content/Context;->registerReceiver(Landroid/content/BroadcastReceiver;Landroid/content/IntentFilter;)Landroid/content/Intent;

    .line 2557
    new-instance v17, Landroid/content/IntentFilter;

    .end local v17    # "filter":Landroid/content/IntentFilter;
    invoke-direct/range {v17 .. v17}, Landroid/content/IntentFilter;-><init>()V

    .line 2558
    .restart local v17    # "filter":Landroid/content/IntentFilter;
    const-string v2, "android.intent.action.DREAMING_STARTED"

    move-object/from16 v0, v17

    invoke-virtual {v0, v2}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    .line 2559
    const-string v2, "android.intent.action.DREAMING_STOPPED"

    move-object/from16 v0, v17

    invoke-virtual {v0, v2}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    .line 2560
    move-object/from16 v0, p0

    iget-object v2, v0, mDreamReceiver:Landroid/content/BroadcastReceiver;

    move-object/from16 v0, p1

    move-object/from16 v1, v17

    invoke-virtual {v0, v2, v1}, Landroid/content/Context;->registerReceiver(Landroid/content/BroadcastReceiver;Landroid/content/IntentFilter;)Landroid/content/Intent;

    .line 2563
    new-instance v17, Landroid/content/IntentFilter;

    .end local v17    # "filter":Landroid/content/IntentFilter;
    invoke-direct/range {v17 .. v17}, Landroid/content/IntentFilter;-><init>()V

    .line 2564
    .restart local v17    # "filter":Landroid/content/IntentFilter;
    const-string v2, "com.samsung.intent.action.SEC_PRESENTATION_START"

    move-object/from16 v0, v17

    invoke-virtual {v0, v2}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    .line 2565
    move-object/from16 v0, p0

    iget-object v2, v0, mPresentationStartReceiver:Landroid/content/BroadcastReceiver;

    move-object/from16 v0, p1

    move-object/from16 v1, v17

    invoke-virtual {v0, v2, v1}, Landroid/content/Context;->registerReceiver(Landroid/content/BroadcastReceiver;Landroid/content/IntentFilter;)Landroid/content/Intent;

    .line 2566
    new-instance v17, Landroid/content/IntentFilter;

    .end local v17    # "filter":Landroid/content/IntentFilter;
    invoke-direct/range {v17 .. v17}, Landroid/content/IntentFilter;-><init>()V

    .line 2567
    .restart local v17    # "filter":Landroid/content/IntentFilter;
    const-string v2, "com.samsung.intent.action.SEC_PRESENTATION_STOP"

    move-object/from16 v0, v17

    invoke-virtual {v0, v2}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    .line 2568
    move-object/from16 v0, p0

    iget-object v2, v0, mPresentationStopReceiver:Landroid/content/BroadcastReceiver;

    move-object/from16 v0, p1

    move-object/from16 v1, v17

    invoke-virtual {v0, v2, v1}, Landroid/content/Context;->registerReceiver(Landroid/content/BroadcastReceiver;Landroid/content/IntentFilter;)Landroid/content/Intent;

    .line 2571
    const/16 v18, 0x0

    .local v18, "i":I
    :goto_472
    const/4 v2, 0x3

    move/from16 v0, v18

    if-ge v0, v2, :cond_4c1

    .line 2572
    move-object/from16 v0, p0

    iget-object v2, v0, ALARM_STARTED:[Ljava/lang/String;

    aget-object v2, v2, v18

    move-object/from16 v0, v17

    invoke-virtual {v0, v2}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    .line 2571
    add-int/lit8 v18, v18, 0x1

    goto :goto_472

    .line 2404
    .end local v17    # "filter":Landroid/content/IntentFilter;
    .end local v18    # "i":I
    .end local v19    # "intent":Landroid/content/Intent;
    .restart local v4    # "minHorizontal":I
    .restart local v5    # "maxHorizontal":I
    .restart local v6    # "minVertical":I
    .restart local v7    # "maxVertical":I
    :cond_485
    const/4 v8, -0x1

    goto/16 :goto_77

    .line 2406
    .end local v4    # "minHorizontal":I
    .end local v5    # "maxHorizontal":I
    .end local v6    # "minVertical":I
    .end local v7    # "maxVertical":I
    :cond_488
    invoke-virtual/range {p1 .. p1}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    move-result-object v20

    .line 2407
    .local v20, "resources":Landroid/content/res/Resources;
    const v2, 0x10e00ab

    move-object/from16 v0, v20

    invoke-virtual {v0, v2}, Landroid/content/res/Resources;->getInteger(I)I

    move-result v4

    .line 2409
    .restart local v4    # "minHorizontal":I
    const v2, 0x10e00ac

    move-object/from16 v0, v20

    invoke-virtual {v0, v2}, Landroid/content/res/Resources;->getInteger(I)I

    move-result v5

    .line 2411
    .restart local v5    # "maxHorizontal":I
    const v2, 0x10e00ad

    move-object/from16 v0, v20

    invoke-virtual {v0, v2}, Landroid/content/res/Resources;->getInteger(I)I

    move-result v6

    .line 2413
    .restart local v6    # "minVertical":I
    const v2, 0x10e00ae

    move-object/from16 v0, v20

    invoke-virtual {v0, v2}, Landroid/content/res/Resources;->getInteger(I)I

    move-result v7

    .line 2415
    .restart local v7    # "maxVertical":I
    const v2, 0x10e00aa

    move-object/from16 v0, v20

    invoke-virtual {v0, v2}, Landroid/content/res/Resources;->getInteger(I)I

    move-result v8

    .restart local v8    # "maxRadius":I
    goto/16 :goto_77

    .line 2492
    .end local v4    # "minHorizontal":I
    .end local v5    # "maxHorizontal":I
    .end local v6    # "minVertical":I
    .end local v7    # "maxVertical":I
    .end local v8    # "maxRadius":I
    .end local v20    # "resources":Landroid/content/res/Resources;
    :cond_4bb
    const/4 v2, 0x0

    goto/16 :goto_29b

    .line 2523
    :cond_4be
    const/4 v2, 0x0

    goto/16 :goto_38f

    .line 2574
    .restart local v17    # "filter":Landroid/content/IntentFilter;
    .restart local v18    # "i":I
    .restart local v19    # "intent":Landroid/content/Intent;
    :cond_4c1
    const/16 v18, 0x0

    :goto_4c3
    const/4 v2, 0x3

    move/from16 v0, v18

    if-ge v0, v2, :cond_4d6

    .line 2575
    move-object/from16 v0, p0

    iget-object v2, v0, ALARM_STOPPED:[Ljava/lang/String;

    aget-object v2, v2, v18

    move-object/from16 v0, v17

    invoke-virtual {v0, v2}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    .line 2574
    add-int/lit8 v18, v18, 0x1

    goto :goto_4c3

    .line 2577
    :cond_4d6
    move-object/from16 v0, p0

    iget-object v2, v0, mAlarmReceiver:Landroid/content/BroadcastReceiver;

    move-object/from16 v0, p1

    move-object/from16 v1, v17

    invoke-virtual {v0, v2, v1}, Landroid/content/Context;->registerReceiver(Landroid/content/BroadcastReceiver;Landroid/content/IntentFilter;)Landroid/content/Intent;

    .line 2580
    new-instance v17, Landroid/content/IntentFilter;

    .end local v17    # "filter":Landroid/content/IntentFilter;
    const-string v2, "android.intent.action.USER_SWITCHED"

    move-object/from16 v0, v17

    invoke-direct {v0, v2}, Landroid/content/IntentFilter;-><init>(Ljava/lang/String;)V

    .line 2581
    .restart local v17    # "filter":Landroid/content/IntentFilter;
    move-object/from16 v0, p0

    iget-object v2, v0, mMultiuserReceiver:Landroid/content/BroadcastReceiver;

    move-object/from16 v0, p1

    move-object/from16 v1, v17

    invoke-virtual {v0, v2, v1}, Landroid/content/Context;->registerReceiver(Landroid/content/BroadcastReceiver;Landroid/content/IntentFilter;)Landroid/content/Intent;

    .line 2584
    new-instance v17, Landroid/content/IntentFilter;

    .end local v17    # "filter":Landroid/content/IntentFilter;
    const-string v2, "com.samsung.intent.action.AUTOROTATION"

    move-object/from16 v0, v17

    invoke-direct {v0, v2}, Landroid/content/IntentFilter;-><init>(Ljava/lang/String;)V

    .line 2585
    .restart local v17    # "filter":Landroid/content/IntentFilter;
    move-object/from16 v0, p0

    iget-object v2, v0, mAutoRotation:Landroid/content/BroadcastReceiver;

    move-object/from16 v0, p1

    move-object/from16 v1, v17

    invoke-virtual {v0, v2, v1}, Landroid/content/Context;->registerReceiver(Landroid/content/BroadcastReceiver;Landroid/content/IntentFilter;)Landroid/content/Intent;

    .line 2759
    new-instance v2, Lcom/android/server/policy/SystemGesturesPointerEventListener;

    new-instance v3, Lcom/android/server/policy/PhoneWindowManager$11;

    move-object/from16 v0, p0

    invoke-direct {v3, v0}, Lcom/android/server/policy/PhoneWindowManager$11;-><init>(Lcom/android/server/policy/PhoneWindowManager;)V

    move-object/from16 v0, p1

    invoke-direct {v2, v0, v3}, Lcom/android/server/policy/SystemGesturesPointerEventListener;-><init>(Landroid/content/Context;Lcom/android/server/policy/SystemGesturesPointerEventListener$Callbacks;)V

    move-object/from16 v0, p0

    iput-object v2, v0, mSystemGestures:Lcom/android/server/policy/SystemGesturesPointerEventListener;

    .line 2856
    new-instance v2, Lcom/android/server/policy/ImmersiveModeConfirmation;

    move-object/from16 v0, p0

    iget-object v3, v0, mContext:Landroid/content/Context;

    invoke-direct {v2, v3}, Lcom/android/server/policy/ImmersiveModeConfirmation;-><init>(Landroid/content/Context;)V

    move-object/from16 v0, p0

    iput-object v2, v0, mImmersiveModeConfirmation:Lcom/android/server/policy/ImmersiveModeConfirmation;

    .line 2864
    move-object/from16 v0, p0

    iget-object v2, v0, mWindowManagerFuncs:Landroid/view/WindowManagerPolicy$WindowManagerFuncs;

    move-object/from16 v0, p0

    iget-object v3, v0, mSystemGestures:Lcom/android/server/policy/SystemGesturesPointerEventListener;

    invoke-interface {v2, v3}, Landroid/view/WindowManagerPolicy$WindowManagerFuncs;->registerPointerEventListener(Landroid/view/WindowManagerPolicy$PointerEventListener;)V

    .line 2869
    const-string/jumbo v2, "vibrator"

    move-object/from16 v0, p1

    invoke-virtual {v0, v2}, Landroid/content/Context;->getSystemService(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Landroid/os/Vibrator;

    move-object/from16 v0, p0

    iput-object v2, v0, mVibrator:Landroid/os/Vibrator;

    .line 2872
    new-instance v22, Landroid/content/IntentFilter;

    const-string/jumbo v2, "org.codeaurora.intent.action.WIFI_DISPLAY_VIDEO"

    move-object/from16 v0, v22

    invoke-direct {v0, v2}, Landroid/content/IntentFilter;-><init>(Ljava/lang/String;)V

    .line 2873
    .local v22, "wifiDisplayFilter":Landroid/content/IntentFilter;
    move-object/from16 v0, p0

    iget-object v2, v0, mWifiDisplayReceiver:Landroid/content/BroadcastReceiver;

    move-object/from16 v0, p1

    move-object/from16 v1, v22

    invoke-virtual {v0, v2, v1}, Landroid/content/Context;->registerReceiver(Landroid/content/BroadcastReceiver;Landroid/content/IntentFilter;)Landroid/content/Intent;

    move-result-object v23

    .line 2875
    .local v23, "wifidisplayIntent":Landroid/content/Intent;
    move-object/from16 v0, p0

    iget-object v2, v0, mContext:Landroid/content/Context;

    invoke-virtual {v2}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    move-result-object v2

    const v3, 0x107001c

    invoke-static {v2, v3}, getLongIntArray(Landroid/content/res/Resources;I)[J

    move-result-object v2

    move-object/from16 v0, p0

    iput-object v2, v0, mLongPressVibePattern:[J

    .line 2877
    move-object/from16 v0, p0

    iget-object v2, v0, mContext:Landroid/content/Context;

    invoke-virtual {v2}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    move-result-object v2

    const v3, 0x107001d

    invoke-static {v2, v3}, getLongIntArray(Landroid/content/res/Resources;I)[J

    move-result-object v2

    move-object/from16 v0, p0

    iput-object v2, v0, mVirtualKeyVibePattern:[J

    .line 2879
    move-object/from16 v0, p0

    iget-object v2, v0, mContext:Landroid/content/Context;

    invoke-virtual {v2}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    move-result-object v2

    const v3, 0x107001e

    invoke-static {v2, v3}, getLongIntArray(Landroid/content/res/Resources;I)[J

    move-result-object v2

    move-object/from16 v0, p0

    iput-object v2, v0, mKeyboardTapVibePattern:[J

    .line 2881
    move-object/from16 v0, p0

    iget-object v2, v0, mContext:Landroid/content/Context;

    invoke-virtual {v2}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    move-result-object v2

    const v3, 0x107001f

    invoke-static {v2, v3}, getLongIntArray(Landroid/content/res/Resources;I)[J

    move-result-object v2

    move-object/from16 v0, p0

    iput-object v2, v0, mClockTickVibePattern:[J

    .line 2883
    move-object/from16 v0, p0

    iget-object v2, v0, mContext:Landroid/content/Context;

    invoke-virtual {v2}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    move-result-object v2

    const v3, 0x1070020

    invoke-static {v2, v3}, getLongIntArray(Landroid/content/res/Resources;I)[J

    move-result-object v2

    move-object/from16 v0, p0

    iput-object v2, v0, mCalendarDateVibePattern:[J

    .line 2885
    move-object/from16 v0, p0

    iget-object v2, v0, mContext:Landroid/content/Context;

    invoke-virtual {v2}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    move-result-object v2

    const v3, 0x1070021

    invoke-static {v2, v3}, getLongIntArray(Landroid/content/res/Resources;I)[J

    move-result-object v2

    move-object/from16 v0, p0

    iput-object v2, v0, mSafeModeDisabledVibePattern:[J

    .line 2887
    move-object/from16 v0, p0

    iget-object v2, v0, mContext:Landroid/content/Context;

    invoke-virtual {v2}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    move-result-object v2

    const v3, 0x1070022

    invoke-static {v2, v3}, getLongIntArray(Landroid/content/res/Resources;I)[J

    move-result-object v2

    move-object/from16 v0, p0

    iput-object v2, v0, mSafeModeEnabledVibePattern:[J

    .line 2889
    move-object/from16 v0, p0

    iget-object v2, v0, mContext:Landroid/content/Context;

    invoke-virtual {v2}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    move-result-object v2

    const v3, 0x1070024

    invoke-static {v2, v3}, getLongIntArray(Landroid/content/res/Resources;I)[J

    move-result-object v2

    move-object/from16 v0, p0

    iput-object v2, v0, mContextClickVibePattern:[J

    .line 2892
    move-object/from16 v0, p0

    iget-object v2, v0, mContext:Landroid/content/Context;

    invoke-virtual {v2}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    move-result-object v2

    const v3, 0x112002e

    invoke-virtual {v2, v3}, Landroid/content/res/Resources;->getBoolean(I)Z

    move-result v2

    move-object/from16 v0, p0

    iput-boolean v2, v0, mScreenshotChordEnabled:Z

    .line 2895
    new-instance v2, Lcom/android/server/policy/GlobalKeyManager;

    move-object/from16 v0, p0

    iget-object v3, v0, mContext:Landroid/content/Context;

    invoke-direct {v2, v3}, Lcom/android/server/policy/GlobalKeyManager;-><init>(Landroid/content/Context;)V

    move-object/from16 v0, p0

    iput-object v2, v0, mGlobalKeyManager:Lcom/android/server/policy/GlobalKeyManager;

    .line 2898
    new-instance v2, Lcom/android/server/policy/sec/SamsungPhoneWindowManager;

    invoke-direct {v2}, Lcom/android/server/policy/sec/SamsungPhoneWindowManager;-><init>()V

    move-object/from16 v0, p0

    iput-object v2, v0, mSPWM:Lcom/android/server/policy/sec/SamsungPhoneWindowManager;

    .line 2899
    move-object/from16 v0, p0

    iget-object v2, v0, mSPWM:Lcom/android/server/policy/sec/SamsungPhoneWindowManager;

    move-object/from16 v0, p0

    iget-object v3, v0, mContext:Landroid/content/Context;

    move-object/from16 v0, p0

    iget-object v9, v0, mWindowManager:Landroid/view/IWindowManager;

    move-object/from16 v0, p0

    iget-object v10, v0, mWindowManagerFuncs:Landroid/view/WindowManagerPolicy$WindowManagerFuncs;

    move-object/from16 v0, p0

    invoke-virtual {v2, v3, v0, v9, v10}, Lcom/android/server/policy/sec/SamsungPhoneWindowManager;->init(Landroid/content/Context;Lcom/android/server/policy/PhoneWindowManager;Landroid/view/IWindowManager;Landroid/view/WindowManagerPolicy$WindowManagerFuncs;)V

    .line 2900
    new-instance v2, Lcom/android/server/policy/sec/SystemKeyManager;

    invoke-direct {v2}, Lcom/android/server/policy/sec/SystemKeyManager;-><init>()V

    move-object/from16 v0, p0

    iput-object v2, v0, mSystemKeyManager:Lcom/android/server/policy/sec/SystemKeyManager;

    .line 2901
    new-instance v2, Lcom/android/server/policy/sec/MultitapKeyManager;

    move-object/from16 v0, p0

    iget-object v3, v0, mSPWM:Lcom/android/server/policy/sec/SamsungPhoneWindowManager;

    move-object/from16 v0, p0

    invoke-direct {v2, v0, v3}, Lcom/android/server/policy/sec/MultitapKeyManager;-><init>(Lcom/android/server/policy/PhoneWindowManager;Lcom/android/server/policy/sec/SamsungPhoneWindowManager;)V

    move-object/from16 v0, p0

    iput-object v2, v0, mMultitapKeyManager:Lcom/android/server/policy/sec/MultitapKeyManager;

    .line 2902
    new-instance v2, Lcom/android/internal/widget/LockPatternUtils;

    move-object/from16 v0, p0

    iget-object v3, v0, mContext:Landroid/content/Context;

    invoke-direct {v2, v3}, Lcom/android/internal/widget/LockPatternUtils;-><init>(Landroid/content/Context;)V

    move-object/from16 v0, p0

    iput-object v2, v0, mLockPatternUtils:Lcom/android/internal/widget/LockPatternUtils;

    .line 2907
    new-instance v2, Lcom/android/server/policy/multiwindow/MultiPhoneWindowManager;

    invoke-direct {v2}, Lcom/android/server/policy/multiwindow/MultiPhoneWindowManager;-><init>()V

    move-object/from16 v0, p0

    iput-object v2, v0, mMultiPhoneWindowManager:Lcom/android/server/policy/multiwindow/MultiPhoneWindowManager;

    .line 2908
    move-object/from16 v0, p0

    iget-object v9, v0, mMultiPhoneWindowManager:Lcom/android/server/policy/multiwindow/MultiPhoneWindowManager;

    move-object/from16 v0, p0

    iget-object v10, v0, mContext:Landroid/content/Context;

    move-object/from16 v0, p0

    iget-object v11, v0, mWindowManager:Landroid/view/IWindowManager;

    move-object/from16 v0, p0

    iget-object v12, v0, mWindowManagerFuncs:Landroid/view/WindowManagerPolicy$WindowManagerFuncs;

    move-object/from16 v0, p0

    iget-object v13, v0, mSPWM:Lcom/android/server/policy/sec/SamsungPhoneWindowManager;

    move-object/from16 v14, p0

    invoke-virtual/range {v9 .. v14}, Lcom/android/server/policy/multiwindow/MultiPhoneWindowManager;->init(Landroid/content/Context;Landroid/view/IWindowManager;Landroid/view/WindowManagerPolicy$WindowManagerFuncs;Lcom/android/server/policy/sec/SamsungPhoneWindowManager;Lcom/android/server/policy/PhoneWindowManager;)V

    .line 2909
    move-object/from16 v0, p0

    iget-object v2, v0, mSPWM:Lcom/android/server/policy/sec/SamsungPhoneWindowManager;

    move-object/from16 v0, p0

    iget-object v3, v0, mMultiPhoneWindowManager:Lcom/android/server/policy/multiwindow/MultiPhoneWindowManager;

    invoke-virtual {v2, v3}, Lcom/android/server/policy/sec/SamsungPhoneWindowManager;->setMultiPhoneWindowManager(Lcom/android/server/policy/multiwindow/MultiPhoneWindowManager;)V

    .line 2915
    new-instance v2, Lcom/android/server/policy/cocktail/CocktailPhoneWindowManager;

    invoke-direct {v2}, Lcom/android/server/policy/cocktail/CocktailPhoneWindowManager;-><init>()V

    move-object/from16 v0, p0

    iput-object v2, v0, mCocktailPhoneWindowManager:Lcom/android/server/policy/cocktail/CocktailPhoneWindowManager;

    .line 2916
    move-object/from16 v0, p0

    iget-object v9, v0, mCocktailPhoneWindowManager:Lcom/android/server/policy/cocktail/CocktailPhoneWindowManager;

    move-object/from16 v0, p0

    iget-object v10, v0, mContext:Landroid/content/Context;

    move-object/from16 v0, p0

    iget-object v11, v0, mWindowManager:Landroid/view/IWindowManager;

    move-object/from16 v0, p0

    iget-object v12, v0, mWindowManagerFuncs:Landroid/view/WindowManagerPolicy$WindowManagerFuncs;

    move-object/from16 v0, p0

    iget-object v13, v0, mSPWM:Lcom/android/server/policy/sec/SamsungPhoneWindowManager;

    move-object/from16 v14, p0

    invoke-virtual/range {v9 .. v14}, Lcom/android/server/policy/cocktail/CocktailPhoneWindowManager;->init(Landroid/content/Context;Landroid/view/IWindowManager;Landroid/view/WindowManagerPolicy$WindowManagerFuncs;Lcom/android/server/policy/sec/SamsungPhoneWindowManager;Lcom/android/server/policy/PhoneWindowManager;)V

    .line 2922
    const v2, 0x10e00de

    move-object/from16 v0, p0

    invoke-direct {v0, v2}, readRotation(I)I

    move-result v2

    move-object/from16 v0, p0

    iput v2, v0, mCoverCloseRotation:I

    .line 2924
    move-object/from16 v0, p0

    iget-object v2, v0, mContext:Landroid/content/Context;

    invoke-virtual {v2}, Landroid/content/Context;->getPackageManager()Landroid/content/pm/PackageManager;

    move-result-object v2

    const-string v3, "com.sec.feature.cover.flip"

    invoke-virtual {v2, v3}, Landroid/content/pm/PackageManager;->hasSystemFeature(Ljava/lang/String;)Z

    move-result v2

    move-object/from16 v0, p0

    iput-boolean v2, v0, mIsSupportFlipCover:Z

    .line 2926
    move-object/from16 v0, p0

    iget-object v2, v0, mContext:Landroid/content/Context;

    invoke-virtual {v2}, Landroid/content/Context;->getPackageManager()Landroid/content/pm/PackageManager;

    move-result-object v2

    const-string v3, "com.sec.feature.cover.sview"

    invoke-virtual {v2, v3}, Landroid/content/pm/PackageManager;->hasSystemFeature(Ljava/lang/String;)Z

    move-result v2

    move-object/from16 v0, p0

    iput-boolean v2, v0, mIsSupportSViewCover:Z

    .line 2928
    move-object/from16 v0, p0

    iget-boolean v2, v0, mIsSupportFlipCover:Z

    if-nez v2, :cond_6df

    move-object/from16 v0, p0

    iget-boolean v2, v0, mIsSupportSViewCover:Z

    if-eqz v2, :cond_6f0

    .line 2929
    :cond_6df
    invoke-direct/range {p0 .. p0}, getCoverManager()Lcom/samsung/android/cover/ICoverManager;

    move-result-object v2

    move-object/from16 v0, p0

    iput-object v2, v0, mCoverManager:Lcom/samsung/android/cover/ICoverManager;

    .line 2930
    new-instance v2, Lcom/samsung/android/cover/CoverState;

    invoke-direct {v2}, Lcom/samsung/android/cover/CoverState;-><init>()V

    move-object/from16 v0, p0

    iput-object v2, v0, mCoverState:Lcom/samsung/android/cover/CoverState;

    .line 2936
    :cond_6f0
    invoke-virtual/range {p0 .. p0}, initializeHdmiState()V

    .line 2938
    new-instance v17, Landroid/content/IntentFilter;

    .end local v17    # "filter":Landroid/content/IntentFilter;
    invoke-direct/range {v17 .. v17}, Landroid/content/IntentFilter;-><init>()V

    .line 2939
    .restart local v17    # "filter":Landroid/content/IntentFilter;
    const-string v2, "android.intent.action.USBHID_MOUSE_EVENT"

    move-object/from16 v0, v17

    invoke-virtual {v0, v2}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    .line 2940
    move-object/from16 v0, p0

    iget-object v2, v0, mMouseConnectReceiver:Landroid/content/BroadcastReceiver;

    move-object/from16 v0, p1

    move-object/from16 v1, v17

    invoke-virtual {v0, v2, v1}, Landroid/content/Context;->registerReceiver(Landroid/content/BroadcastReceiver;Landroid/content/IntentFilter;)Landroid/content/Intent;

    move-result-object v19

    .line 2941
    if-eqz v19, :cond_74a

    .line 2942
    const-string v2, "android.intent.extra.device_state"

    const/4 v3, 0x0

    move-object/from16 v0, v19

    invoke-virtual {v0, v2, v3}, Landroid/content/Intent;->getIntExtra(Ljava/lang/String;I)I

    move-result v2

    move-object/from16 v0, p0

    iput v2, v0, mMouseConnectedDock:I

    .line 2944
    const/4 v2, 0x1

    move-object/from16 v0, p0

    iget v3, v0, mMouseConnectedDock:I

    if-ne v2, v3, :cond_7ce

    .line 2945
    const/4 v2, 0x1

    move-object/from16 v0, p0

    iput-boolean v2, v0, mMouseDockedFlag:Z

    .line 2949
    :goto_726
    move-object/from16 v0, p0

    iget-boolean v2, v0, mMouseDockedFlag:Z

    move-object/from16 v0, p0

    iput-boolean v2, v0, mOldMouseDockedValue:Z

    .line 2950
    const-string v2, "WindowManager"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v9, "SmartDock Connected  :  "

    invoke-virtual {v3, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    move-object/from16 v0, p0

    iget-boolean v9, v0, mMouseDockedFlag:Z

    invoke-virtual {v3, v9}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 2954
    :cond_74a
    move-object/from16 v0, p0

    iget-object v2, v0, mPowerManager:Landroid/os/PowerManager;

    invoke-virtual {v2}, Landroid/os/PowerManager;->isInteractive()Z

    move-result v2

    if-nez v2, :cond_760

    .line 2955
    const/4 v2, 0x2

    move-object/from16 v0, p0

    invoke-virtual {v0, v2}, startedGoingToSleep(I)V

    .line 2956
    const/4 v2, 0x2

    move-object/from16 v0, p0

    invoke-virtual {v0, v2}, finishedGoingToSleep(I)V

    .line 2959
    :cond_760
    move-object/from16 v0, p0

    iget-object v2, v0, mWindowManagerInternal:Landroid/view/WindowManagerInternal;

    move-object/from16 v0, p0

    iget-object v3, v0, mStatusBarController:Lcom/android/server/policy/StatusBarController;

    invoke-virtual {v3}, Lcom/android/server/policy/StatusBarController;->getAppTransitionListener()Landroid/view/WindowManagerInternal$AppTransitionListener;

    move-result-object v3

    invoke-virtual {v2, v3}, Landroid/view/WindowManagerInternal;->registerAppTransitionListener(Landroid/view/WindowManagerInternal$AppTransitionListener;)V

    .line 2963
    invoke-static {}, Landroid/os/PersonaManager;->getKnoxInfo()Landroid/os/Bundle;

    move-result-object v21

    .line 2964
    .local v21, "versionInfo":Landroid/os/Bundle;
    const-string v2, "2.0"

    const-string/jumbo v3, "version"

    move-object/from16 v0, v21

    invoke-virtual {v0, v3}, Landroid/os/Bundle;->getString(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v2, v3}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_789

    .line 2965
    const/4 v2, 0x1

    move-object/from16 v0, p0

    iput-boolean v2, v0, mIsKNOX2Supported:Z

    .line 2970
    :cond_789
    new-instance v17, Landroid/content/IntentFilter;

    .end local v17    # "filter":Landroid/content/IntentFilter;
    invoke-direct/range {v17 .. v17}, Landroid/content/IntentFilter;-><init>()V

    .line 2971
    .restart local v17    # "filter":Landroid/content/IntentFilter;
    const-string v2, "android.intent.action.BATTERY_CHANGED"

    move-object/from16 v0, v17

    invoke-virtual {v0, v2}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    .line 2972
    move-object/from16 v0, p0

    iget-object v2, v0, mBatteryReceiver:Landroid/content/BroadcastReceiver;

    move-object/from16 v0, p1

    move-object/from16 v1, v17

    invoke-virtual {v0, v2, v1}, Landroid/content/Context;->registerReceiver(Landroid/content/BroadcastReceiver;Landroid/content/IntentFilter;)Landroid/content/Intent;

    move-result-object v19

    .line 2975
    new-instance v17, Landroid/content/IntentFilter;

    .end local v17    # "filter":Landroid/content/IntentFilter;
    invoke-direct/range {v17 .. v17}, Landroid/content/IntentFilter;-><init>()V

    .line 2976
    .restart local v17    # "filter":Landroid/content/IntentFilter;
    const-string v2, "android.intent.action.ACTION_POWER_CONNECTED"

    move-object/from16 v0, v17

    invoke-virtual {v0, v2}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    .line 2977
    const-string v2, "android.intent.action.ACTION_POWER_DISCONNECTED"

    move-object/from16 v0, v17

    invoke-virtual {v0, v2}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    .line 2978
    move-object/from16 v0, p0

    iget-object v2, v0, mChargingReceiver:Landroid/content/BroadcastReceiver;

    move-object/from16 v0, p1

    move-object/from16 v1, v17

    invoke-virtual {v0, v2, v1}, Landroid/content/Context;->registerReceiver(Landroid/content/BroadcastReceiver;Landroid/content/IntentFilter;)Landroid/content/Intent;

    move-result-object v19

    .line 2981
    new-instance v2, Lcom/android/server/policy/sec/TspStateManager;

    move-object/from16 v0, p0

    iget-object v3, v0, mContext:Landroid/content/Context;

    invoke-direct {v2, v3}, Lcom/android/server/policy/sec/TspStateManager;-><init>(Landroid/content/Context;)V

    move-object/from16 v0, p0

    iput-object v2, v0, mTspStateManager:Lcom/android/server/policy/sec/TspStateManager;

    .line 2983
    return-void

    .line 2947
    .end local v21    # "versionInfo":Landroid/os/Bundle;
    :cond_7ce
    const/4 v2, 0x0

    move-object/from16 v0, p0

    iput-boolean v2, v0, mMouseDockedFlag:Z

    goto/16 :goto_726

    .line 2427
    .end local v17    # "filter":Landroid/content/IntentFilter;
    .end local v18    # "i":I
    .end local v19    # "intent":Landroid/content/Intent;
    .end local v22    # "wifiDisplayFilter":Landroid/content/IntentFilter;
    .end local v23    # "wifidisplayIntent":Landroid/content/Intent;
    :catch_7d5
    move-exception v2

    goto/16 :goto_bf
.end method

.method initializeHdmiState()V
    .registers 13

    .prologue
    const/4 v7, 0x1

    const/4 v8, 0x0

    .line 8866
    const/4 v4, 0x0

    .line 8868
    .local v4, "plugged":Z
    new-instance v9, Ljava/io/File;

    const-string v10, "/sys/devices/virtual/switch/hdmi/state"

    invoke-direct {v9, v10}, Ljava/io/File;-><init>(Ljava/lang/String;)V

    invoke-virtual {v9}, Ljava/io/File;->exists()Z

    move-result v9

    if-eqz v9, :cond_3f

    .line 8869
    iget-object v9, p0, mHDMIObserver:Landroid/os/UEventObserver;

    const-string v10, "DEVPATH=/devices/virtual/switch/hdmi"

    invoke-virtual {v9, v10}, Landroid/os/UEventObserver;->startObserving(Ljava/lang/String;)V

    .line 8871
    const-string v2, "/sys/class/switch/hdmi/state"

    .line 8872
    .local v2, "filename":Ljava/lang/String;
    const/4 v5, 0x0

    .line 8874
    .local v5, "reader":Ljava/io/FileReader;
    :try_start_1a
    new-instance v6, Ljava/io/FileReader;

    const-string v9, "/sys/class/switch/hdmi/state"

    invoke-direct {v6, v9}, Ljava/io/FileReader;-><init>(Ljava/lang/String;)V
    :try_end_21
    .catch Ljava/io/IOException; {:try_start_1a .. :try_end_21} :catch_4e
    .catch Ljava/lang/NumberFormatException; {:try_start_1a .. :try_end_21} :catch_6f
    .catchall {:try_start_1a .. :try_end_21} :catchall_90

    .line 8875
    .end local v5    # "reader":Ljava/io/FileReader;
    .local v6, "reader":Ljava/io/FileReader;
    const/16 v9, 0xf

    :try_start_23
    new-array v0, v9, [C

    .line 8876
    .local v0, "buf":[C
    invoke-virtual {v6, v0}, Ljava/io/FileReader;->read([C)I

    move-result v3

    .line 8877
    .local v3, "n":I
    if-le v3, v7, :cond_3a

    .line 8878
    new-instance v9, Ljava/lang/String;

    const/4 v10, 0x0

    add-int/lit8 v11, v3, -0x1

    invoke-direct {v9, v0, v10, v11}, Ljava/lang/String;-><init>([CII)V

    invoke-static {v9}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;)I
    :try_end_36
    .catch Ljava/io/IOException; {:try_start_23 .. :try_end_36} :catch_a5
    .catch Ljava/lang/NumberFormatException; {:try_start_23 .. :try_end_36} :catch_a2
    .catchall {:try_start_23 .. :try_end_36} :catchall_9f

    move-result v9

    if-eqz v9, :cond_4c

    move v4, v7

    .line 8885
    :cond_3a
    :goto_3a
    if-eqz v6, :cond_3f

    .line 8887
    :try_start_3c
    invoke-virtual {v6}, Ljava/io/FileReader;->close()V
    :try_end_3f
    .catch Ljava/io/IOException; {:try_start_3c .. :try_end_3f} :catch_9b

    .line 8895
    .end local v0    # "buf":[C
    .end local v2    # "filename":Ljava/lang/String;
    .end local v3    # "n":I
    .end local v6    # "reader":Ljava/io/FileReader;
    :cond_3f
    :goto_3f
    if-nez v4, :cond_97

    move v9, v7

    :goto_42
    iput-boolean v9, p0, mHdmiPlugged:Z

    .line 8896
    iget-boolean v9, p0, mHdmiPlugged:Z

    if-nez v9, :cond_99

    :goto_48
    invoke-virtual {p0, v7}, setHdmiPlugged(Z)V

    .line 8897
    return-void

    .restart local v0    # "buf":[C
    .restart local v2    # "filename":Ljava/lang/String;
    .restart local v3    # "n":I
    .restart local v6    # "reader":Ljava/io/FileReader;
    :cond_4c
    move v4, v8

    .line 8878
    goto :goto_3a

    .line 8880
    .end local v0    # "buf":[C
    .end local v3    # "n":I
    .end local v6    # "reader":Ljava/io/FileReader;
    .restart local v5    # "reader":Ljava/io/FileReader;
    :catch_4e
    move-exception v1

    .line 8881
    .local v1, "ex":Ljava/io/IOException;
    :goto_4f
    :try_start_4f
    const-string v9, "WindowManager"

    new-instance v10, Ljava/lang/StringBuilder;

    invoke-direct {v10}, Ljava/lang/StringBuilder;-><init>()V

    const-string v11, "Couldn\'t read hdmi state from /sys/class/switch/hdmi/state: "

    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    invoke-virtual {v10, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v10

    invoke-virtual {v10}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v10

    invoke-static {v9, v10}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_67
    .catchall {:try_start_4f .. :try_end_67} :catchall_90

    .line 8885
    if-eqz v5, :cond_3f

    .line 8887
    :try_start_69
    invoke-virtual {v5}, Ljava/io/FileReader;->close()V
    :try_end_6c
    .catch Ljava/io/IOException; {:try_start_69 .. :try_end_6c} :catch_6d

    goto :goto_3f

    .line 8888
    :catch_6d
    move-exception v9

    goto :goto_3f

    .line 8882
    .end local v1    # "ex":Ljava/io/IOException;
    :catch_6f
    move-exception v1

    .line 8883
    .local v1, "ex":Ljava/lang/NumberFormatException;
    :goto_70
    :try_start_70
    const-string v9, "WindowManager"

    new-instance v10, Ljava/lang/StringBuilder;

    invoke-direct {v10}, Ljava/lang/StringBuilder;-><init>()V

    const-string v11, "Couldn\'t read hdmi state from /sys/class/switch/hdmi/state: "

    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    invoke-virtual {v10, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v10

    invoke-virtual {v10}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v10

    invoke-static {v9, v10}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_88
    .catchall {:try_start_70 .. :try_end_88} :catchall_90

    .line 8885
    if-eqz v5, :cond_3f

    .line 8887
    :try_start_8a
    invoke-virtual {v5}, Ljava/io/FileReader;->close()V
    :try_end_8d
    .catch Ljava/io/IOException; {:try_start_8a .. :try_end_8d} :catch_8e

    goto :goto_3f

    .line 8888
    :catch_8e
    move-exception v9

    goto :goto_3f

    .line 8885
    .end local v1    # "ex":Ljava/lang/NumberFormatException;
    :catchall_90
    move-exception v7

    :goto_91
    if-eqz v5, :cond_96

    .line 8887
    :try_start_93
    invoke-virtual {v5}, Ljava/io/FileReader;->close()V
    :try_end_96
    .catch Ljava/io/IOException; {:try_start_93 .. :try_end_96} :catch_9d

    .line 8889
    :cond_96
    :goto_96
    throw v7

    .end local v2    # "filename":Ljava/lang/String;
    .end local v5    # "reader":Ljava/io/FileReader;
    :cond_97
    move v9, v8

    .line 8895
    goto :goto_42

    :cond_99
    move v7, v8

    .line 8896
    goto :goto_48

    .line 8888
    .restart local v0    # "buf":[C
    .restart local v2    # "filename":Ljava/lang/String;
    .restart local v3    # "n":I
    .restart local v6    # "reader":Ljava/io/FileReader;
    :catch_9b
    move-exception v9

    goto :goto_3f

    .end local v0    # "buf":[C
    .end local v3    # "n":I
    .end local v6    # "reader":Ljava/io/FileReader;
    .restart local v5    # "reader":Ljava/io/FileReader;
    :catch_9d
    move-exception v8

    goto :goto_96

    .line 8885
    .end local v5    # "reader":Ljava/io/FileReader;
    .restart local v6    # "reader":Ljava/io/FileReader;
    :catchall_9f
    move-exception v7

    move-object v5, v6

    .end local v6    # "reader":Ljava/io/FileReader;
    .restart local v5    # "reader":Ljava/io/FileReader;
    goto :goto_91

    .line 8882
    .end local v5    # "reader":Ljava/io/FileReader;
    .restart local v6    # "reader":Ljava/io/FileReader;
    :catch_a2
    move-exception v1

    move-object v5, v6

    .end local v6    # "reader":Ljava/io/FileReader;
    .restart local v5    # "reader":Ljava/io/FileReader;
    goto :goto_70

    .line 8880
    .end local v5    # "reader":Ljava/io/FileReader;
    .restart local v6    # "reader":Ljava/io/FileReader;
    :catch_a5
    move-exception v1

    move-object v5, v6

    .end local v6    # "reader":Ljava/io/FileReader;
    .restart local v5    # "reader":Ljava/io/FileReader;
    goto :goto_4f
.end method

.method public interceptKeyBeforeDispatching(Landroid/view/WindowManagerPolicy$WindowState;Landroid/view/KeyEvent;I)J
    .registers 55
    .param p1, "win"    # Landroid/view/WindowManagerPolicy$WindowState;
    .param p2, "event"    # Landroid/view/KeyEvent;
    .param p3, "policyFlags"    # I

    .prologue
    .line 5049
    invoke-virtual/range {p0 .. p0}, keyguardOn()Z

    move-result v28

    .line 5050
    .local v28, "keyguardOn":Z
    invoke-virtual/range {p2 .. p2}, Landroid/view/KeyEvent;->getKeyCode()I

    move-result v27

    .line 5051
    .local v27, "keyCode":I
    invoke-virtual/range {p2 .. p2}, Landroid/view/KeyEvent;->getRepeatCount()I

    move-result v36

    .line 5052
    .local v36, "repeatCount":I
    invoke-virtual/range {p2 .. p2}, Landroid/view/KeyEvent;->getMetaState()I

    move-result v32

    .line 5053
    .local v32, "metaState":I
    invoke-virtual/range {p2 .. p2}, Landroid/view/KeyEvent;->getFlags()I

    move-result v24

    .line 5054
    .local v24, "flags":I
    invoke-virtual/range {p2 .. p2}, Landroid/view/KeyEvent;->getAction()I

    move-result v4

    if-nez v4, :cond_92

    const/16 v22, 0x1

    .line 5055
    .local v22, "down":Z
    :goto_1c
    invoke-virtual/range {p2 .. p2}, Landroid/view/KeyEvent;->isCanceled()Z

    move-result v16

    .line 5057
    .local v16, "canceled":Z
    sget-boolean v4, DEBUG_INPUT:Z

    if-eqz v4, :cond_7d

    .line 5058
    const-string v4, "WindowManager"

    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v7, "interceptKeyTi keyCode="

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    move/from16 v0, v27

    invoke-virtual {v6, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v6

    const-string v7, " down="

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    move/from16 v0, v22

    invoke-virtual {v6, v0}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v6

    const-string v7, " repeatCount="

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    move/from16 v0, v36

    invoke-virtual {v6, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v6

    const-string v7, " keyguardOn="

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    move/from16 v0, v28

    invoke-virtual {v6, v0}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v6

    const-string v7, " mHomePressed="

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    move-object/from16 v0, p0

    iget-boolean v7, v0, mHomePressed:Z

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v6

    const-string v7, " canceled="

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    move/from16 v0, v16

    invoke-virtual {v6, v0}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-static {v4, v6}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 5099
    :cond_7d
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v34

    .line 5100
    .local v34, "now":J
    move-object/from16 v0, p0

    iget-object v4, v0, mSPWM:Lcom/android/server/policy/sec/SamsungPhoneWindowManager;

    move/from16 v0, v24

    invoke-virtual {v4, v0}, Lcom/android/server/policy/sec/SamsungPhoneWindowManager;->getTimeoutTimeOfKeyCombination(I)J

    move-result-wide v46

    .line 5101
    .local v46, "timeoutTime":J
    cmp-long v4, v34, v46

    if-gez v4, :cond_95

    .line 5102
    sub-long v6, v46, v34

    .line 5692
    :goto_91
    return-wide v6

    .line 5054
    .end local v16    # "canceled":Z
    .end local v22    # "down":Z
    .end local v34    # "now":J
    .end local v46    # "timeoutTime":J
    :cond_92
    const/16 v22, 0x0

    goto :goto_1c

    .line 5106
    .restart local v16    # "canceled":Z
    .restart local v22    # "down":Z
    .restart local v34    # "now":J
    .restart local v46    # "timeoutTime":J
    :cond_95
    move-object/from16 v0, p0

    iget-object v4, v0, mSPWM:Lcom/android/server/policy/sec/SamsungPhoneWindowManager;

    move-object/from16 v0, p2

    invoke-virtual {v4, v0}, Lcom/android/server/policy/sec/SamsungPhoneWindowManager;->interceptKeyBeforeDispatching(Landroid/view/KeyEvent;)Z

    move-result v4

    if-eqz v4, :cond_a4

    .line 5108
    const-wide/16 v6, -0x1

    goto :goto_91

    .line 5112
    :cond_a4
    move-object/from16 v0, p0

    iget-object v4, v0, mSystemKeyManager:Lcom/android/server/policy/sec/SystemKeyManager;

    move/from16 v0, v27

    invoke-virtual {v4, v0}, Lcom/android/server/policy/sec/SystemKeyManager;->isSystemKeyEventRequested(I)Z

    move-result v4

    if-eqz v4, :cond_d4

    .line 5113
    if-eqz p1, :cond_cf

    invoke-interface/range {p1 .. p1}, Landroid/view/WindowManagerPolicy$WindowState;->getAttrs()Landroid/view/WindowManager$LayoutParams;

    move-result-object v13

    .line 5114
    .local v13, "attrs":Landroid/view/WindowManager$LayoutParams;
    :goto_b6
    if-eqz v13, :cond_d1

    iget v4, v13, Landroid/view/WindowManager$LayoutParams;->type:I

    const/16 v6, 0x7d0

    if-ne v4, v6, :cond_d1

    iget v4, v13, Landroid/view/WindowManager$LayoutParams;->privateFlags:I

    and-int/lit16 v4, v4, 0x400

    if-nez v4, :cond_d1

    .line 5116
    const-string/jumbo v4, "reason"

    move-object/from16 v0, p0

    invoke-virtual {v0, v4}, sendCloseSystemWindows(Ljava/lang/String;)V

    .line 5117
    const-wide/16 v6, 0x64

    goto :goto_91

    .line 5113
    .end local v13    # "attrs":Landroid/view/WindowManager$LayoutParams;
    :cond_cf
    const/4 v13, 0x0

    goto :goto_b6

    .line 5119
    .restart local v13    # "attrs":Landroid/view/WindowManager$LayoutParams;
    :cond_d1
    const-wide/16 v6, 0x0

    goto :goto_91

    .line 5126
    .end local v13    # "attrs":Landroid/view/WindowManager$LayoutParams;
    :cond_d4
    move-object/from16 v0, p0

    iget-boolean v4, v0, mPendingMetaAction:Z

    if-eqz v4, :cond_e5

    invoke-static/range {v27 .. v27}, Landroid/view/KeyEvent;->isMetaKey(I)Z

    move-result v4

    if-nez v4, :cond_e5

    .line 5127
    const/4 v4, 0x0

    move-object/from16 v0, p0

    iput-boolean v4, v0, mPendingMetaAction:Z

    .line 5130
    :cond_e5
    move-object/from16 v0, p0

    iget-boolean v4, v0, mWatchLaunching:Z

    if-eqz v4, :cond_f5

    .line 5131
    const-string v4, "WindowManager"

    const-string v6, "Home key is blocked during watch is displayed"

    invoke-static {v4, v6}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 5132
    const-wide/16 v6, -0x1

    goto :goto_91

    .line 5139
    :cond_f5
    const/4 v4, 0x3

    move/from16 v0, v27

    if-ne v0, v4, :cond_2cc

    .line 5141
    invoke-virtual/range {p0 .. p0}, isSharedDeviceUnlockScreens()Z

    move-result v4

    if-eqz v4, :cond_103

    .line 5142
    const-wide/16 v6, -0x1

    goto :goto_91

    .line 5147
    :cond_103
    if-nez v22, :cond_1f2

    .line 5148
    invoke-direct/range {p0 .. p0}, cancelPreloadRecentApps()V

    .line 5151
    move-object/from16 v0, p0

    iget-boolean v4, v0, mHomePressed:Z

    if-nez v4, :cond_119

    .line 5152
    const-string v4, "WindowManager"

    const-string v6, "Ignoring HOME; down is not pressed."

    invoke-static {v4, v6}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 5153
    const-wide/16 v6, -0x1

    goto/16 :goto_91

    .line 5156
    :cond_119
    const/4 v4, 0x0

    move-object/from16 v0, p0

    iput-boolean v4, v0, mHomePressed:Z

    .line 5157
    move-object/from16 v0, p0

    iget-boolean v4, v0, mHomeConsumed:Z

    if-eqz v4, :cond_12d

    .line 5158
    const/4 v4, 0x0

    move-object/from16 v0, p0

    iput-boolean v4, v0, mHomeConsumed:Z

    .line 5159
    const-wide/16 v6, -0x1

    goto/16 :goto_91

    .line 5162
    :cond_12d
    if-eqz v16, :cond_13a

    .line 5163
    const-string v4, "WindowManager"

    const-string v6, "Ignoring HOME; event canceled."

    invoke-static {v4, v6}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 5164
    const-wide/16 v6, -0x1

    goto/16 :goto_91

    .line 5170
    :cond_13a
    invoke-virtual/range {p0 .. p0}, getTelecommService()Landroid/telecom/TelecomManager;

    move-result-object v44

    .line 5171
    .local v44, "telecomManager":Landroid/telecom/TelecomManager;
    if-eqz v44, :cond_17a

    invoke-virtual/range {v44 .. v44}, Landroid/telecom/TelecomManager;->isRinging()Z

    move-result v4

    if-eqz v4, :cond_17a

    move-object/from16 v0, p0

    iget-object v4, v0, mSPWM:Lcom/android/server/policy/sec/SamsungPhoneWindowManager;

    invoke-virtual {v4}, Lcom/android/server/policy/sec/SamsungPhoneWindowManager;->isTphoneRelaxMode()Z

    move-result v4

    if-nez v4, :cond_17a

    .line 5173
    move-object/from16 v0, p0

    iget-object v4, v0, mSPWM:Lcom/android/server/policy/sec/SamsungPhoneWindowManager;

    invoke-virtual {v4}, Lcom/android/server/policy/sec/SamsungPhoneWindowManager;->isAnyKeyMode()Z

    move-result v4

    if-eqz v4, :cond_16f

    .line 5174
    const-string v4, "WindowManager"

    const-string/jumbo v6, "ringing: Accept the call!"

    invoke-static {v4, v6}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 5175
    invoke-virtual/range {v44 .. v44}, Landroid/telecom/TelecomManager;->acceptRingingCall()V

    .line 5177
    move-object/from16 v0, p0

    iget-object v4, v0, mSPWM:Lcom/android/server/policy/sec/SamsungPhoneWindowManager;

    const-string v6, "VCHA"

    const/4 v7, 0x0

    invoke-virtual {v4, v6, v7}, Lcom/android/server/policy/sec/SamsungPhoneWindowManager;->insertLog(Ljava/lang/String;Ljava/lang/String;)V

    .line 5181
    :cond_16f
    const-string v4, "WindowManager"

    const-string v6, "Ignoring HOME; there\'s a ringing incoming call."

    invoke-static {v4, v6}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 5182
    const-wide/16 v6, -0x1

    goto/16 :goto_91

    .line 5196
    :cond_17a
    move-object/from16 v0, p0

    iget-object v4, v0, mMultitapKeyManager:Lcom/android/server/policy/sec/MultitapKeyManager;

    move-object/from16 v0, p2

    invoke-virtual {v4, v0}, Lcom/android/server/policy/sec/MultitapKeyManager;->dispatchMultitapKeyEvent(Landroid/view/KeyEvent;)Z

    move-result v4

    if-eqz v4, :cond_18a

    .line 5197
    const-wide/16 v6, -0x1

    goto/16 :goto_91

    .line 5202
    :cond_18a
    move-object/from16 v0, p0

    iget v4, v0, mDoubleTapOnHomeBehavior:I

    if-eqz v4, :cond_1b4

    .line 5203
    move-object/from16 v0, p0

    iget-object v4, v0, mHandler:Landroid/os/Handler;

    move-object/from16 v0, p0

    iget-object v6, v0, mHomeDoubleTapTimeoutRunnable:Ljava/lang/Runnable;

    invoke-virtual {v4, v6}, Landroid/os/Handler;->removeCallbacks(Ljava/lang/Runnable;)V

    .line 5204
    const/4 v4, 0x1

    move-object/from16 v0, p0

    iput-boolean v4, v0, mHomeDoubleTapPending:Z

    .line 5205
    move-object/from16 v0, p0

    iget-object v4, v0, mHandler:Landroid/os/Handler;

    move-object/from16 v0, p0

    iget-object v6, v0, mHomeDoubleTapTimeoutRunnable:Ljava/lang/Runnable;

    invoke-static {}, Landroid/view/ViewConfiguration;->getDoubleTapTimeout()I

    move-result v7

    int-to-long v8, v7

    invoke-virtual {v4, v6, v8, v9}, Landroid/os/Handler;->postDelayed(Ljava/lang/Runnable;J)Z

    .line 5207
    const-wide/16 v6, -0x1

    goto/16 :goto_91

    .line 5211
    :cond_1b4
    move-object/from16 v0, p0

    iget-object v4, v0, mTelephonyManager:Landroid/telephony/TelephonyManager;

    if-nez v4, :cond_1cb

    .line 5212
    move-object/from16 v0, p0

    iget-object v4, v0, mContext:Landroid/content/Context;

    const-string/jumbo v6, "phone"

    invoke-virtual {v4, v6}, Landroid/content/Context;->getSystemService(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Landroid/telephony/TelephonyManager;

    move-object/from16 v0, p0

    iput-object v4, v0, mTelephonyManager:Landroid/telephony/TelephonyManager;

    .line 5215
    :cond_1cb
    move-object/from16 v0, p0

    iget-object v4, v0, mTelephonyManager:Landroid/telephony/TelephonyManager;

    invoke-virtual {v4}, Landroid/telephony/TelephonyManager;->getCallState()I

    move-result v4

    const/4 v6, 0x2

    if-ne v4, v6, :cond_1eb

    move-object/from16 v0, p0

    iget-object v4, v0, mTelephonyManager:Landroid/telephony/TelephonyManager;

    invoke-virtual {v4}, Landroid/telephony/TelephonyManager;->isVideoCall()Z

    move-result v4

    if-nez v4, :cond_1eb

    .line 5216
    move-object/from16 v0, p0

    iget-object v4, v0, mSPWM:Lcom/android/server/policy/sec/SamsungPhoneWindowManager;

    const-string v6, "VCHK"

    const-string v7, "HomeKey Click"

    invoke-virtual {v4, v6, v7}, Lcom/android/server/policy/sec/SamsungPhoneWindowManager;->insertLog(Ljava/lang/String;Ljava/lang/String;)V

    .line 5220
    :cond_1eb
    invoke-direct/range {p0 .. p0}, handleShortPressOnHome()V

    .line 5221
    const-wide/16 v6, -0x1

    goto/16 :goto_91

    .line 5225
    .end local v44    # "telecomManager":Landroid/telecom/TelecomManager;
    :cond_1f2
    const/16 v37, 0x0

    .line 5229
    .local v37, "sendToKeyguard":Z
    if-eqz p1, :cond_246

    invoke-interface/range {p1 .. p1}, Landroid/view/WindowManagerPolicy$WindowState;->getAttrs()Landroid/view/WindowManager$LayoutParams;

    move-result-object v13

    .line 5230
    .restart local v13    # "attrs":Landroid/view/WindowManager$LayoutParams;
    :goto_1fa
    move-object/from16 v0, p0

    iget-boolean v4, v0, mNeedTriggerOWC:Z

    if-nez v4, :cond_24f

    if-eqz v13, :cond_24f

    .line 5231
    iget v0, v13, Landroid/view/WindowManager$LayoutParams;->type:I

    move/from16 v48, v0

    .line 5232
    .local v48, "type":I
    const/16 v4, 0x7ed

    move/from16 v0, v48

    if-eq v0, v4, :cond_225

    const/16 v4, 0x7d9

    move/from16 v0, v48

    if-eq v0, v4, :cond_225

    const/16 v4, 0x7e7

    move/from16 v0, v48

    if-eq v0, v4, :cond_225

    iget v4, v13, Landroid/view/WindowManager$LayoutParams;->samsungFlags:I

    const/high16 v6, 0x10000000

    and-int/2addr v4, v6

    if-nez v4, :cond_225

    iget v4, v13, Landroid/view/WindowManager$LayoutParams;->privateFlags:I

    and-int/lit16 v4, v4, 0x400

    if-eqz v4, :cond_22d

    .line 5241
    :cond_225
    iget v4, v13, Landroid/view/WindowManager$LayoutParams;->privateFlags:I

    and-int/lit16 v4, v4, 0x400

    if-eqz v4, :cond_248

    .line 5242
    const/16 v37, 0x1

    .line 5248
    :cond_22d
    sget-object v4, WINDOW_TYPES_WHERE_HOME_DOESNT_WORK:[I

    array-length v0, v4

    move/from16 v49, v0

    .line 5249
    .local v49, "typeCount":I
    const/16 v25, 0x0

    .local v25, "i":I
    :goto_234
    move/from16 v0, v25

    move/from16 v1, v49

    if-ge v0, v1, :cond_24f

    .line 5250
    sget-object v4, WINDOW_TYPES_WHERE_HOME_DOESNT_WORK:[I

    aget v4, v4, v25

    move/from16 v0, v48

    if-ne v0, v4, :cond_24c

    .line 5252
    const-wide/16 v6, -0x1

    goto/16 :goto_91

    .line 5229
    .end local v13    # "attrs":Landroid/view/WindowManager$LayoutParams;
    .end local v25    # "i":I
    .end local v48    # "type":I
    .end local v49    # "typeCount":I
    :cond_246
    const/4 v13, 0x0

    goto :goto_1fa

    .line 5244
    .restart local v13    # "attrs":Landroid/view/WindowManager$LayoutParams;
    .restart local v48    # "type":I
    :cond_248
    const-wide/16 v6, 0x0

    goto/16 :goto_91

    .line 5249
    .restart local v25    # "i":I
    .restart local v49    # "typeCount":I
    :cond_24c
    add-int/lit8 v25, v25, 0x1

    goto :goto_234

    .line 5258
    .end local v25    # "i":I
    .end local v48    # "type":I
    .end local v49    # "typeCount":I
    :cond_24f
    if-nez v36, :cond_2a6

    .line 5259
    const/4 v4, 0x1

    move-object/from16 v0, p0

    iput-boolean v4, v0, mHomePressed:Z

    .line 5260
    const/4 v4, 0x0

    move-object/from16 v0, p0

    iput-boolean v4, v0, mHomeLongPressCanceled:Z

    .line 5261
    move-object/from16 v0, p0

    iget-boolean v4, v0, mHomeDoubleTapPending:Z

    if-eqz v4, :cond_294

    .line 5262
    const/4 v4, 0x0

    move-object/from16 v0, p0

    iput-boolean v4, v0, mHomeDoubleTapPending:Z

    .line 5263
    move-object/from16 v0, p0

    iget-object v4, v0, mHandler:Landroid/os/Handler;

    move-object/from16 v0, p0

    iget-object v6, v0, mHomeDoubleTapTimeoutRunnable:Ljava/lang/Runnable;

    invoke-virtual {v4, v6}, Landroid/os/Handler;->removeCallbacks(Ljava/lang/Runnable;)V

    .line 5264
    invoke-direct/range {p0 .. p0}, handleDoubleTapOnHome()V

    .line 5270
    :cond_274
    :goto_274
    move-object/from16 v0, p0

    iget-object v4, v0, mMultitapKeyManager:Lcom/android/server/policy/sec/MultitapKeyManager;

    move-object/from16 v0, p2

    invoke-virtual {v4, v0}, Lcom/android/server/policy/sec/MultitapKeyManager;->dispatchMultitapKeyEvent(Landroid/view/KeyEvent;)Z

    .line 5272
    move-object/from16 v0, p0

    iget-boolean v4, v0, mNeedTriggerOWC:Z

    if-nez v4, :cond_28e

    invoke-virtual/range {p0 .. p0}, isStatusBarKeyguard()Z

    move-result v4

    if-eqz v4, :cond_28e

    .line 5273
    const/4 v4, 0x1

    move-object/from16 v0, p0

    iput-boolean v4, v0, mHomeLongPressCanceled:Z

    .line 5281
    :cond_28e
    :goto_28e
    if-eqz v37, :cond_2c8

    const-wide/16 v6, 0x0

    goto/16 :goto_91

    .line 5265
    :cond_294
    move-object/from16 v0, p0

    iget v4, v0, mLongPressOnHomeBehavior:I

    const/4 v6, 0x1

    if-eq v4, v6, :cond_2a2

    move-object/from16 v0, p0

    iget v4, v0, mDoubleTapOnHomeBehavior:I

    const/4 v6, 0x1

    if-ne v4, v6, :cond_274

    .line 5267
    :cond_2a2
    invoke-direct/range {p0 .. p0}, preloadRecentApps()V

    goto :goto_274

    .line 5275
    :cond_2a6
    invoke-virtual/range {p2 .. p2}, Landroid/view/KeyEvent;->getFlags()I

    move-result v4

    and-int/lit16 v4, v4, 0x80

    if-eqz v4, :cond_28e

    .line 5276
    move-object/from16 v0, p0

    iget-boolean v4, v0, mHomeLongPressCanceled:Z

    if-nez v4, :cond_28e

    move-object/from16 v0, p0

    iget-object v4, v0, mMultitapKeyManager:Lcom/android/server/policy/sec/MultitapKeyManager;

    invoke-virtual {v4}, Lcom/android/server/policy/sec/MultitapKeyManager;->isHomeConsumed()Z

    move-result v4

    if-nez v4, :cond_28e

    .line 5277
    invoke-virtual/range {p2 .. p2}, Landroid/view/KeyEvent;->getDeviceId()I

    move-result v4

    move-object/from16 v0, p0

    invoke-direct {v0, v4}, handleLongPressOnHome(I)V

    goto :goto_28e

    .line 5283
    :cond_2c8
    const-wide/16 v6, -0x1

    goto/16 :goto_91

    .line 5284
    .end local v13    # "attrs":Landroid/view/WindowManager$LayoutParams;
    .end local v37    # "sendToKeyguard":Z
    :cond_2cc
    const/16 v4, 0x52

    move/from16 v0, v27

    if-ne v0, v4, :cond_384

    .line 5287
    if-eqz p1, :cond_2f4

    invoke-interface/range {p1 .. p1}, Landroid/view/WindowManagerPolicy$WindowState;->getMultiWindowStyleLw()Lcom/samsung/android/multiwindow/MultiWindowStyle;

    move-result-object v4

    invoke-virtual {v4}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->getType()I

    move-result v4

    const/4 v6, 0x1

    if-ne v4, v6, :cond_2f4

    invoke-interface/range {p1 .. p1}, Landroid/view/WindowManagerPolicy$WindowState;->isFixedBounds()Z

    move-result v4

    if-eqz v4, :cond_2f4

    .line 5290
    sget-boolean v4, DEBUG_INPUT:Z

    if-eqz v4, :cond_2f0

    const-string v4, "WindowManager"

    const-string v6, "consume menu key when window dim behind in split state"

    invoke-static {v4, v6}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 5291
    :cond_2f0
    const-wide/16 v6, -0x1

    goto/16 :goto_91

    .line 5296
    :cond_2f4
    const/16 v18, 0x1

    .line 5298
    .local v18, "chordBug":I
    if-eqz v22, :cond_31f

    if-nez v36, :cond_31f

    .line 5299
    move-object/from16 v0, p0

    iget-boolean v4, v0, mEnableShiftMenuBugReports:Z

    if-eqz v4, :cond_340

    and-int/lit8 v4, v32, 0x1

    const/4 v6, 0x1

    if-ne v4, v6, :cond_340

    .line 5300
    new-instance v5, Landroid/content/Intent;

    const-string v4, "android.intent.action.BUG_REPORT"

    invoke-direct {v5, v4}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 5301
    .local v5, "intent":Landroid/content/Intent;
    move-object/from16 v0, p0

    iget-object v4, v0, mContext:Landroid/content/Context;

    sget-object v6, Landroid/os/UserHandle;->CURRENT:Landroid/os/UserHandle;

    const/4 v7, 0x0

    const/4 v8, 0x0

    const/4 v9, 0x0

    const/4 v10, 0x0

    const/4 v11, 0x0

    const/4 v12, 0x0

    invoke-virtual/range {v4 .. v12}, Landroid/content/Context;->sendOrderedBroadcastAsUser(Landroid/content/Intent;Landroid/os/UserHandle;Ljava/lang/String;Landroid/content/BroadcastReceiver;Landroid/os/Handler;ILjava/lang/String;Landroid/os/Bundle;)V

    .line 5303
    const-wide/16 v6, -0x1

    goto/16 :goto_91

    .line 5322
    .end local v5    # "intent":Landroid/content/Intent;
    :cond_31f
    if-nez v22, :cond_32f

    .line 5323
    move-object/from16 v0, p0

    iget-object v4, v0, mSPWM:Lcom/android/server/policy/sec/SamsungPhoneWindowManager;

    invoke-virtual {v4}, Lcom/android/server/policy/sec/SamsungPhoneWindowManager;->isMenuConsumed()Z

    move-result v4

    if-eqz v4, :cond_340

    .line 5324
    const-wide/16 v6, -0x1

    goto/16 :goto_91

    .line 5327
    :cond_32f
    invoke-virtual/range {p2 .. p2}, Landroid/view/KeyEvent;->getFlags()I

    move-result v4

    and-int/lit16 v4, v4, 0x80

    if-eqz v4, :cond_340

    .line 5328
    if-nez v28, :cond_340

    .line 5329
    move-object/from16 v0, p0

    iget-object v4, v0, mSPWM:Lcom/android/server/policy/sec/SamsungPhoneWindowManager;

    invoke-virtual {v4}, Lcom/android/server/policy/sec/SamsungPhoneWindowManager;->handleLongPressOnMenu()V

    .line 5580
    .end local v18    # "chordBug":I
    :cond_340
    :goto_340
    move-object/from16 v0, p0

    iget-boolean v4, v0, mSearchKeyShortcutPending:Z

    if-eqz v4, :cond_7ad

    .line 5581
    invoke-virtual/range {p2 .. p2}, Landroid/view/KeyEvent;->getKeyCharacterMap()Landroid/view/KeyCharacterMap;

    move-result-object v26

    .line 5582
    .local v26, "kcm":Landroid/view/KeyCharacterMap;
    invoke-virtual/range {v26 .. v27}, Landroid/view/KeyCharacterMap;->isPrintingKey(I)Z

    move-result v4

    if-eqz v4, :cond_7ad

    .line 5583
    const/4 v4, 0x1

    move-object/from16 v0, p0

    iput-boolean v4, v0, mConsumeSearchKeyUp:Z

    .line 5584
    const/4 v4, 0x0

    move-object/from16 v0, p0

    iput-boolean v4, v0, mSearchKeyShortcutPending:Z

    .line 5585
    if-eqz v22, :cond_380

    if-nez v36, :cond_380

    if-nez v28, :cond_380

    .line 5586
    move-object/from16 v0, p0

    iget-object v4, v0, mShortcutManager:Lcom/android/server/policy/ShortcutManager;

    move-object/from16 v0, v26

    move/from16 v1, v27

    move/from16 v2, v32

    invoke-virtual {v4, v0, v1, v2}, Lcom/android/server/policy/ShortcutManager;->getIntent(Landroid/view/KeyCharacterMap;II)Landroid/content/Intent;

    move-result-object v40

    .line 5587
    .local v40, "shortcutIntent":Landroid/content/Intent;
    if-eqz v40, :cond_78f

    .line 5588
    const/high16 v4, 0x10000000

    move-object/from16 v0, v40

    invoke-virtual {v0, v4}, Landroid/content/Intent;->addFlags(I)Landroid/content/Intent;

    .line 5590
    :try_start_377
    sget-object v4, Landroid/os/UserHandle;->CURRENT:Landroid/os/UserHandle;

    move-object/from16 v0, p0

    move-object/from16 v1, v40

    invoke-direct {v0, v1, v4}, startActivityAsUser(Landroid/content/Intent;Landroid/os/UserHandle;)V
    :try_end_380
    .catch Landroid/content/ActivityNotFoundException; {:try_start_377 .. :try_end_380} :catch_76e

    .line 5601
    .end local v40    # "shortcutIntent":Landroid/content/Intent;
    :cond_380
    :goto_380
    const-wide/16 v6, -0x1

    goto/16 :goto_91

    .line 5334
    .end local v26    # "kcm":Landroid/view/KeyCharacterMap;
    :cond_384
    const/16 v4, 0x54

    move/from16 v0, v27

    if-ne v0, v4, :cond_3b0

    .line 5335
    if-eqz v22, :cond_39c

    .line 5336
    if-nez v36, :cond_398

    .line 5337
    const/4 v4, 0x1

    move-object/from16 v0, p0

    iput-boolean v4, v0, mSearchKeyShortcutPending:Z

    .line 5338
    const/4 v4, 0x0

    move-object/from16 v0, p0

    iput-boolean v4, v0, mConsumeSearchKeyUp:Z

    .line 5347
    :cond_398
    const-wide/16 v6, 0x0

    goto/16 :goto_91

    .line 5341
    :cond_39c
    const/4 v4, 0x0

    move-object/from16 v0, p0

    iput-boolean v4, v0, mSearchKeyShortcutPending:Z

    .line 5342
    move-object/from16 v0, p0

    iget-boolean v4, v0, mConsumeSearchKeyUp:Z

    if-eqz v4, :cond_398

    .line 5343
    const/4 v4, 0x0

    move-object/from16 v0, p0

    iput-boolean v4, v0, mConsumeSearchKeyUp:Z

    .line 5344
    const-wide/16 v6, -0x1

    goto/16 :goto_91

    .line 5348
    :cond_3b0
    const/16 v4, 0x418

    move/from16 v0, v27

    if-ne v0, v4, :cond_43f

    .line 5349
    if-eqz v22, :cond_43b

    .line 5350
    const-string v4, "WindowManager"

    const-string v6, "KEYCODE_SIM keycode"

    invoke-static {v4, v6}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 5352
    const-string/jumbo v4, "ril.ICC_TYPE"

    const/4 v6, 0x0

    const-string v7, "0"

    invoke-static {v4, v6, v7}, Lcom/samsung/android/telephony/MultiSimManager;->getTelephonyProperty(Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;

    move-result-object v29

    .line 5353
    .local v29, "mSimState_1":Ljava/lang/String;
    const-string/jumbo v4, "ril.ICC_TYPE"

    const/4 v6, 0x1

    const-string v7, "0"

    invoke-static {v4, v6, v7}, Lcom/samsung/android/telephony/MultiSimManager;->getTelephonyProperty(Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;

    move-result-object v30

    .line 5355
    .local v30, "mSimState_2":Ljava/lang/String;
    const-string v4, "0"

    move-object/from16 v0, v29

    invoke-virtual {v0, v4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-nez v4, :cond_3e7

    const-string v4, "0"

    move-object/from16 v0, v30

    invoke-virtual {v0, v4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_3eb

    .line 5356
    :cond_3e7
    const-wide/16 v6, 0x0

    goto/16 :goto_91

    .line 5359
    :cond_3eb
    move-object/from16 v0, p0

    iget-object v4, v0, mContext:Landroid/content/Context;

    invoke-virtual {v4}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v4

    const-string/jumbo v6, "phone1_on"

    const/4 v7, 0x1

    invoke-static {v4, v6, v7}, Landroid/provider/Settings$System;->getInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I

    move-result v4

    if-nez v4, :cond_41b

    const/16 v41, 0x1

    .line 5360
    .local v41, "sim1Off":Z
    :goto_3ff
    move-object/from16 v0, p0

    iget-object v4, v0, mContext:Landroid/content/Context;

    invoke-virtual {v4}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v4

    const-string/jumbo v6, "phone2_on"

    const/4 v7, 0x1

    invoke-static {v4, v6, v7}, Landroid/provider/Settings$System;->getInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I

    move-result v4

    if-nez v4, :cond_41e

    const/16 v42, 0x1

    .line 5362
    .local v42, "sim2Off":Z
    :goto_413
    or-int v4, v41, v42

    if-eqz v4, :cond_421

    .line 5363
    const-wide/16 v6, 0x0

    goto/16 :goto_91

    .line 5359
    .end local v41    # "sim1Off":Z
    .end local v42    # "sim2Off":Z
    :cond_41b
    const/16 v41, 0x0

    goto :goto_3ff

    .line 5360
    .restart local v41    # "sim1Off":Z
    :cond_41e
    const/16 v42, 0x0

    goto :goto_413

    .line 5364
    .restart local v42    # "sim2Off":Z
    :cond_421
    invoke-static {}, Landroid/telephony/SubscriptionManager;->getDefaultVoicePhoneId()I

    move-result v19

    .line 5365
    .local v19, "currSimId":I
    move-object/from16 v0, p0

    iget-object v4, v0, mContext:Landroid/content/Context;

    invoke-static {v4}, Landroid/telephony/SubscriptionManager;->from(Landroid/content/Context;)Landroid/telephony/SubscriptionManager;

    move-result-object v4

    add-int/lit8 v6, v19, 0x1

    rem-int/lit8 v6, v6, 0x2

    invoke-static {v6}, Landroid/telephony/SubscriptionManager;->getSubId(I)[I

    move-result-object v6

    const/4 v7, 0x0

    aget v6, v6, v7

    invoke-virtual {v4, v6}, Landroid/telephony/SubscriptionManager;->setDefaultVoiceSubId(I)V

    .line 5367
    .end local v19    # "currSimId":I
    .end local v29    # "mSimState_1":Ljava/lang/String;
    .end local v30    # "mSimState_2":Ljava/lang/String;
    .end local v41    # "sim1Off":Z
    .end local v42    # "sim2Off":Z
    :cond_43b
    const-wide/16 v6, 0x0

    goto/16 :goto_91

    .line 5368
    :cond_43f
    const/16 v4, 0xbb

    move/from16 v0, v27

    if-eq v0, v4, :cond_44b

    const/16 v4, 0x3e9

    move/from16 v0, v27

    if-ne v0, v4, :cond_565

    .line 5369
    :cond_44b
    if-eqz v16, :cond_454

    .line 5370
    invoke-direct/range {p0 .. p0}, cancelPreloadRecentApps()V

    .line 5371
    const-wide/16 v6, -0x1

    goto/16 :goto_91

    .line 5374
    :cond_454
    invoke-virtual/range {p0 .. p0}, isSharedDeviceKeyguardOn()Z

    move-result v4

    if-eqz v4, :cond_461

    .line 5375
    invoke-direct/range {p0 .. p0}, cancelPreloadRecentApps()V

    .line 5376
    const-wide/16 v6, -0x1

    goto/16 :goto_91

    .line 5378
    :cond_461
    invoke-virtual/range {p0 .. p0}, isSharedDeviceUnlockScreens()Z

    move-result v4

    if-eqz v4, :cond_46e

    .line 5379
    invoke-direct/range {p0 .. p0}, cancelPreloadRecentApps()V

    .line 5380
    const-wide/16 v6, -0x1

    goto/16 :goto_91

    .line 5383
    :cond_46e
    move-object/from16 v0, p0

    iget-object v4, v0, mFakeFocusedWindow:Landroid/view/WindowManagerPolicy$WindowState;

    if-eqz v4, :cond_4ed

    move-object/from16 v0, p0

    iget-object v4, v0, mFocusedWindow:Landroid/view/WindowManagerPolicy$WindowState;

    if-eqz v4, :cond_4ed

    .line 5384
    move-object/from16 v0, p0

    iget-object v4, v0, mFakeFocusedWindow:Landroid/view/WindowManagerPolicy$WindowState;

    invoke-interface {v4}, Landroid/view/WindowManagerPolicy$WindowState;->getSurfaceLayer()I

    move-result v4

    move-object/from16 v0, p0

    iget-object v6, v0, mFocusedWindow:Landroid/view/WindowManagerPolicy$WindowState;

    invoke-interface {v6}, Landroid/view/WindowManagerPolicy$WindowState;->getSurfaceLayer()I

    move-result v6

    if-le v4, v6, :cond_4ed

    .line 5385
    move-object/from16 v0, p0

    iget-object v4, v0, mFakeFocusedWindow:Landroid/view/WindowManagerPolicy$WindowState;

    invoke-interface {v4}, Landroid/view/WindowManagerPolicy$WindowState;->getAttrs()Landroid/view/WindowManager$LayoutParams;

    move-result-object v4

    invoke-virtual {v4}, Landroid/view/WindowManager$LayoutParams;->getTitle()Ljava/lang/CharSequence;

    move-result-object v4

    invoke-interface {v4}, Ljava/lang/CharSequence;->toString()Ljava/lang/String;

    move-result-object v4

    const-string v6, "/"

    invoke-virtual {v4, v6}, Ljava/lang/String;->split(Ljava/lang/String;)[Ljava/lang/String;

    move-result-object v45

    .line 5386
    .local v45, "titles":[Ljava/lang/String;
    if-eqz v45, :cond_4ed

    move-object/from16 v0, v45

    array-length v4, v0

    const/4 v6, 0x2

    if-lt v4, v6, :cond_4ed

    .line 5387
    move-object/from16 v0, p0

    iget-object v4, v0, mSystemKeyManager:Lcom/android/server/policy/sec/SystemKeyManager;

    new-instance v6, Landroid/content/ComponentName;

    const/4 v7, 0x0

    aget-object v7, v45, v7

    const/4 v8, 0x1

    aget-object v8, v45, v8

    invoke-direct {v6, v7, v8}, Landroid/content/ComponentName;-><init>(Ljava/lang/String;Ljava/lang/String;)V

    move/from16 v0, v27

    invoke-virtual {v4, v0, v6}, Lcom/android/server/policy/sec/SystemKeyManager;->isSystemKeyEventRequested(ILandroid/content/ComponentName;)Z

    move-result v4

    if-eqz v4, :cond_4ed

    .line 5388
    const-string v4, "WindowManager"

    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "PASS_TO_USER KeyCode:"

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    move/from16 v0, v27

    invoke-virtual {v6, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v6

    const-string v7, " by "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    move-object/from16 v0, p0

    iget-object v7, v0, mFakeFocusedWindow:Landroid/view/WindowManagerPolicy$WindowState;

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-static {v4, v6}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 5389
    const-wide/16 v6, 0x0

    goto/16 :goto_91

    .line 5396
    .end local v45    # "titles":[Ljava/lang/String;
    :cond_4ed
    if-nez v28, :cond_4fd

    .line 5397
    if-eqz v22, :cond_501

    if-nez v36, :cond_501

    .line 5398
    invoke-direct/range {p0 .. p0}, preloadRecentApps()V

    .line 5400
    move-object/from16 v0, p0

    iget-object v4, v0, mMultiPhoneWindowManager:Lcom/android/server/policy/multiwindow/MultiPhoneWindowManager;

    invoke-virtual {v4}, Lcom/android/server/policy/multiwindow/MultiPhoneWindowManager;->stopDragDropService()V

    .line 5429
    :cond_4fd
    :goto_4fd
    const-wide/16 v6, -0x1

    goto/16 :goto_91

    .line 5402
    :cond_501
    if-nez v22, :cond_552

    .line 5404
    move-object/from16 v0, p0

    iget-object v4, v0, mSPWM:Lcom/android/server/policy/sec/SamsungPhoneWindowManager;

    invoke-virtual {v4}, Lcom/android/server/policy/sec/SamsungPhoneWindowManager;->isRecentConsumed()Z

    move-result v4

    if-eqz v4, :cond_514

    .line 5405
    invoke-direct/range {p0 .. p0}, cancelPreloadRecentApps()V

    .line 5406
    const-wide/16 v6, -0x1

    goto/16 :goto_91

    .line 5409
    :cond_514
    invoke-static {}, awakenDreams()V

    .line 5410
    invoke-direct/range {p0 .. p0}, toggleRecentApps()V

    .line 5413
    move-object/from16 v0, p0

    iget-object v4, v0, mTelephonyManager:Landroid/telephony/TelephonyManager;

    if-nez v4, :cond_531

    .line 5414
    move-object/from16 v0, p0

    iget-object v4, v0, mContext:Landroid/content/Context;

    const-string/jumbo v6, "phone"

    invoke-virtual {v4, v6}, Landroid/content/Context;->getSystemService(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Landroid/telephony/TelephonyManager;

    move-object/from16 v0, p0

    iput-object v4, v0, mTelephonyManager:Landroid/telephony/TelephonyManager;

    .line 5417
    :cond_531
    move-object/from16 v0, p0

    iget-object v4, v0, mTelephonyManager:Landroid/telephony/TelephonyManager;

    invoke-virtual {v4}, Landroid/telephony/TelephonyManager;->getCallState()I

    move-result v4

    const/4 v6, 0x2

    if-ne v4, v6, :cond_4fd

    move-object/from16 v0, p0

    iget-object v4, v0, mTelephonyManager:Landroid/telephony/TelephonyManager;

    invoke-virtual {v4}, Landroid/telephony/TelephonyManager;->isVideoCall()Z

    move-result v4

    if-nez v4, :cond_4fd

    .line 5418
    move-object/from16 v0, p0

    iget-object v4, v0, mSPWM:Lcom/android/server/policy/sec/SamsungPhoneWindowManager;

    const-string v6, "VCRK"

    const-string v7, "RecentKey Click"

    invoke-virtual {v4, v6, v7}, Lcom/android/server/policy/sec/SamsungPhoneWindowManager;->insertLog(Ljava/lang/String;Ljava/lang/String;)V

    goto :goto_4fd

    .line 5423
    :cond_552
    invoke-virtual/range {p2 .. p2}, Landroid/view/KeyEvent;->getFlags()I

    move-result v4

    and-int/lit16 v4, v4, 0x80

    if-eqz v4, :cond_4fd

    .line 5424
    invoke-direct/range {p0 .. p0}, cancelPreloadRecentApps()V

    .line 5425
    move-object/from16 v0, p0

    iget-object v4, v0, mSPWM:Lcom/android/server/policy/sec/SamsungPhoneWindowManager;

    invoke-virtual {v4}, Lcom/android/server/policy/sec/SamsungPhoneWindowManager;->handleLongPressOnRecent()V

    goto :goto_4fd

    .line 5430
    :cond_565
    const/16 v4, 0x2a

    move/from16 v0, v27

    if-ne v0, v4, :cond_581

    invoke-virtual/range {p2 .. p2}, Landroid/view/KeyEvent;->isMetaPressed()Z

    move-result v4

    if-eqz v4, :cond_581

    .line 5431
    if-eqz v22, :cond_340

    .line 5432
    invoke-virtual/range {p0 .. p0}, getStatusBarService()Lcom/android/internal/statusbar/IStatusBarService;

    move-result-object v38

    .line 5433
    .local v38, "service":Lcom/android/internal/statusbar/IStatusBarService;
    if-eqz v38, :cond_340

    .line 5435
    :try_start_579
    invoke-interface/range {v38 .. v38}, Lcom/android/internal/statusbar/IStatusBarService;->expandNotificationsPanel()V
    :try_end_57c
    .catch Landroid/os/RemoteException; {:try_start_579 .. :try_end_57c} :catch_57e

    goto/16 :goto_340

    .line 5436
    :catch_57e
    move-exception v4

    goto/16 :goto_340

    .line 5441
    .end local v38    # "service":Lcom/android/internal/statusbar/IStatusBarService;
    :cond_581
    const/16 v4, 0xdb

    move/from16 v0, v27

    if-ne v0, v4, :cond_5db

    .line 5442
    if-eqz v22, :cond_5b3

    .line 5443
    if-nez v36, :cond_594

    .line 5444
    const/4 v4, 0x0

    move-object/from16 v0, p0

    iput-boolean v4, v0, mAssistKeyLongPressed:Z

    .line 5472
    :cond_590
    :goto_590
    const-wide/16 v6, -0x1

    goto/16 :goto_91

    .line 5445
    :cond_594
    const/4 v4, 0x1

    move/from16 v0, v36

    if-ne v0, v4, :cond_590

    .line 5446
    const/4 v4, 0x1

    move-object/from16 v0, p0

    iput-boolean v4, v0, mAssistKeyLongPressed:Z

    .line 5447
    if-nez v28, :cond_590

    .line 5449
    move-object/from16 v0, p0

    iget v4, v0, mLongPressOnHomeBehavior:I

    const/4 v6, 0x3

    if-ne v4, v6, :cond_5af

    .line 5450
    move-object/from16 v0, p0

    iget-object v4, v0, mSPWM:Lcom/android/server/policy/sec/SamsungPhoneWindowManager;

    invoke-virtual {v4}, Lcom/android/server/policy/sec/SamsungPhoneWindowManager;->launchSReminder()V

    goto :goto_590

    .line 5453
    :cond_5af
    invoke-direct/range {p0 .. p0}, launchAssistLongPressAction()V

    goto :goto_590

    .line 5458
    :cond_5b3
    move-object/from16 v0, p0

    iget-boolean v4, v0, mAssistKeyLongPressed:Z

    if-eqz v4, :cond_5bf

    .line 5459
    const/4 v4, 0x0

    move-object/from16 v0, p0

    iput-boolean v4, v0, mAssistKeyLongPressed:Z

    goto :goto_590

    .line 5461
    :cond_5bf
    if-nez v28, :cond_590

    .line 5463
    move-object/from16 v0, p0

    iget v4, v0, mLongPressOnHomeBehavior:I

    const/4 v6, 0x3

    if-ne v4, v6, :cond_5d0

    .line 5464
    move-object/from16 v0, p0

    iget-object v4, v0, mSPWM:Lcom/android/server/policy/sec/SamsungPhoneWindowManager;

    invoke-virtual {v4}, Lcom/android/server/policy/sec/SamsungPhoneWindowManager;->launchSReminder()V

    goto :goto_590

    .line 5467
    :cond_5d0
    const/4 v4, 0x0

    invoke-virtual/range {p2 .. p2}, Landroid/view/KeyEvent;->getDeviceId()I

    move-result v6

    move-object/from16 v0, p0

    invoke-direct {v0, v4, v6}, launchAssistAction(Ljava/lang/String;I)V

    goto :goto_590

    .line 5473
    :cond_5db
    const/16 v4, 0xe7

    move/from16 v0, v27

    if-ne v0, v4, :cond_623

    .line 5474
    if-nez v22, :cond_340

    .line 5476
    if-nez v28, :cond_5fc

    .line 5477
    new-instance v50, Landroid/content/Intent;

    const-string v4, "android.speech.action.WEB_SEARCH"

    move-object/from16 v0, v50

    invoke-direct {v0, v4}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 5491
    .local v50, "voiceIntent":Landroid/content/Intent;
    :goto_5ee
    :try_start_5ee
    sget-object v4, Landroid/os/UserHandle;->CURRENT_OR_SELF:Landroid/os/UserHandle;

    move-object/from16 v0, p0

    move-object/from16 v1, v50

    invoke-direct {v0, v1, v4}, startActivityAsUser(Landroid/content/Intent;Landroid/os/UserHandle;)V
    :try_end_5f7
    .catch Landroid/content/ActivityNotFoundException; {:try_start_5ee .. :try_end_5f7} :catch_5f9

    goto/16 :goto_340

    .line 5492
    :catch_5f9
    move-exception v4

    goto/16 :goto_340

    .line 5479
    .end local v50    # "voiceIntent":Landroid/content/Intent;
    :cond_5fc
    const-string/jumbo v4, "deviceidle"

    invoke-static {v4}, Landroid/os/ServiceManager;->getService(Ljava/lang/String;)Landroid/os/IBinder;

    move-result-object v4

    invoke-static {v4}, Landroid/os/IDeviceIdleController$Stub;->asInterface(Landroid/os/IBinder;)Landroid/os/IDeviceIdleController;

    move-result-object v20

    .line 5481
    .local v20, "dic":Landroid/os/IDeviceIdleController;
    if-eqz v20, :cond_611

    .line 5483
    :try_start_609
    const-string/jumbo v4, "voice-search"

    move-object/from16 v0, v20

    invoke-interface {v0, v4}, Landroid/os/IDeviceIdleController;->exitIdle(Ljava/lang/String;)V
    :try_end_611
    .catch Landroid/os/RemoteException; {:try_start_609 .. :try_end_611} :catch_96c

    .line 5487
    :cond_611
    :goto_611
    new-instance v50, Landroid/content/Intent;

    const-string v4, "android.speech.action.VOICE_SEARCH_HANDS_FREE"

    move-object/from16 v0, v50

    invoke-direct {v0, v4}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 5488
    .restart local v50    # "voiceIntent":Landroid/content/Intent;
    const-string v4, "android.speech.extras.EXTRA_SECURE"

    const/4 v6, 0x1

    move-object/from16 v0, v50

    invoke-virtual {v0, v4, v6}, Landroid/content/Intent;->putExtra(Ljava/lang/String;Z)Landroid/content/Intent;

    goto :goto_5ee

    .line 5495
    .end local v20    # "dic":Landroid/os/IDeviceIdleController;
    .end local v50    # "voiceIntent":Landroid/content/Intent;
    :cond_623
    const/16 v4, 0x78

    move/from16 v0, v27

    if-ne v0, v4, :cond_63c

    .line 5496
    if-eqz v22, :cond_638

    if-nez v36, :cond_638

    .line 5497
    move-object/from16 v0, p0

    iget-object v4, v0, mHandler:Landroid/os/Handler;

    move-object/from16 v0, p0

    iget-object v6, v0, mScreenshotRunnable:Ljava/lang/Runnable;

    invoke-virtual {v4, v6}, Landroid/os/Handler;->post(Ljava/lang/Runnable;)Z

    .line 5499
    :cond_638
    const-wide/16 v6, -0x1

    goto/16 :goto_91

    .line 5500
    :cond_63c
    const/16 v4, 0xdd

    move/from16 v0, v27

    if-eq v0, v4, :cond_648

    const/16 v4, 0xdc

    move/from16 v0, v27

    if-ne v0, v4, :cond_6f2

    .line 5503
    :cond_648
    move-object/from16 v0, p0

    iget-boolean v4, v0, bIsCharging:Z

    if-nez v4, :cond_660

    move-object/from16 v0, p0

    iget v4, v0, mBatteryLevel:I

    const/4 v6, 0x5

    if-gt v4, v6, :cond_660

    .line 5504
    const-string v4, "WindowManager"

    const-string v6, "cannot adjust brightness under bettery 5 level and no charging"

    invoke-static {v4, v6}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 5505
    const-wide/16 v6, -0x1

    goto/16 :goto_91

    .line 5508
    :cond_660
    if-eqz v22, :cond_6ea

    .line 5509
    const/16 v4, 0xdd

    move/from16 v0, v27

    if-ne v0, v4, :cond_6ee

    const/16 v21, 0x1

    .line 5512
    .local v21, "direction":I
    :goto_66a
    move-object/from16 v0, p0

    iget-object v4, v0, mContext:Landroid/content/Context;

    invoke-virtual {v4}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v4

    const-string/jumbo v6, "screen_brightness_mode"

    const/4 v7, 0x0

    const/4 v8, -0x3

    invoke-static {v4, v6, v7, v8}, Landroid/provider/Settings$System;->getIntForUser(Landroid/content/ContentResolver;Ljava/lang/String;II)I

    move-result v14

    .line 5517
    .local v14, "auto":I
    if-eqz v14, :cond_68d

    .line 5518
    move-object/from16 v0, p0

    iget-object v4, v0, mContext:Landroid/content/Context;

    invoke-virtual {v4}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v4

    const-string/jumbo v6, "screen_brightness_mode"

    const/4 v7, 0x0

    const/4 v8, -0x3

    invoke-static {v4, v6, v7, v8}, Landroid/provider/Settings$System;->putIntForUser(Landroid/content/ContentResolver;Ljava/lang/String;II)Z

    .line 5524
    :cond_68d
    move-object/from16 v0, p0

    iget-object v4, v0, mPowerManager:Landroid/os/PowerManager;

    invoke-virtual {v4}, Landroid/os/PowerManager;->getMinimumScreenBrightnessSetting()I

    move-result v33

    .line 5525
    .local v33, "min":I
    move-object/from16 v0, p0

    iget-object v4, v0, mPowerManager:Landroid/os/PowerManager;

    invoke-virtual {v4}, Landroid/os/PowerManager;->getMaximumScreenBrightnessSetting()I

    move-result v31

    .line 5526
    .local v31, "max":I
    sub-int v4, v31, v33

    add-int/lit8 v4, v4, 0xa

    add-int/lit8 v4, v4, -0x1

    div-int/lit8 v4, v4, 0xa

    mul-int v43, v4, v21

    .line 5527
    .local v43, "step":I
    move-object/from16 v0, p0

    iget-object v4, v0, mContext:Landroid/content/Context;

    invoke-virtual {v4}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v4

    const-string/jumbo v6, "screen_brightness"

    move-object/from16 v0, p0

    iget-object v7, v0, mPowerManager:Landroid/os/PowerManager;

    invoke-virtual {v7}, Landroid/os/PowerManager;->getDefaultScreenBrightnessSetting()I

    move-result v7

    const/4 v8, -0x3

    invoke-static {v4, v6, v7, v8}, Landroid/provider/Settings$System;->getIntForUser(Landroid/content/ContentResolver;Ljava/lang/String;II)I

    move-result v15

    .line 5531
    .local v15, "brightness":I
    add-int v15, v15, v43

    .line 5533
    move/from16 v0, v31

    invoke-static {v0, v15}, Ljava/lang/Math;->min(II)I

    move-result v15

    .line 5534
    move/from16 v0, v33

    invoke-static {v0, v15}, Ljava/lang/Math;->max(II)I

    move-result v15

    .line 5536
    move-object/from16 v0, p0

    iget-object v4, v0, mContext:Landroid/content/Context;

    invoke-virtual {v4}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v4

    const-string/jumbo v6, "screen_brightness"

    const/4 v7, -0x3

    invoke-static {v4, v6, v15, v7}, Landroid/provider/Settings$System;->putIntForUser(Landroid/content/ContentResolver;Ljava/lang/String;II)Z

    .line 5540
    :try_start_6dc
    new-instance v4, Landroid/content/Intent;

    const-string v6, "android.intent.action.SHOW_BRIGHTNESS_DIALOG"

    invoke-direct {v4, v6}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    sget-object v6, Landroid/os/UserHandle;->CURRENT_OR_SELF:Landroid/os/UserHandle;

    move-object/from16 v0, p0

    invoke-direct {v0, v4, v6}, startActivityAsUser(Landroid/content/Intent;Landroid/os/UserHandle;)V
    :try_end_6ea
    .catch Landroid/content/ActivityNotFoundException; {:try_start_6dc .. :try_end_6ea} :catch_969

    .line 5545
    .end local v14    # "auto":I
    .end local v15    # "brightness":I
    .end local v21    # "direction":I
    .end local v31    # "max":I
    .end local v33    # "min":I
    .end local v43    # "step":I
    :cond_6ea
    :goto_6ea
    const-wide/16 v6, -0x1

    goto/16 :goto_91

    .line 5509
    :cond_6ee
    const/16 v21, -0x1

    goto/16 :goto_66a

    .line 5546
    :cond_6f2
    invoke-static/range {v27 .. v27}, Landroid/view/KeyEvent;->isMetaKey(I)Z

    move-result v4

    if-eqz v4, :cond_71f

    move-object/from16 v0, p0

    iget-object v4, v0, mSystemKeyManager:Lcom/android/server/policy/sec/SystemKeyManager;

    invoke-virtual {v4}, Lcom/android/server/policy/sec/SystemKeyManager;->isMetaKeyEventRequested()Z

    move-result v4

    if-nez v4, :cond_71f

    .line 5547
    if-eqz v22, :cond_70d

    .line 5548
    const/4 v4, 0x1

    move-object/from16 v0, p0

    iput-boolean v4, v0, mPendingMetaAction:Z

    .line 5552
    :cond_709
    :goto_709
    const-wide/16 v6, -0x1

    goto/16 :goto_91

    .line 5549
    :cond_70d
    move-object/from16 v0, p0

    iget-boolean v4, v0, mPendingMetaAction:Z

    if-eqz v4, :cond_709

    .line 5550
    const-string v4, "android.intent.extra.ASSIST_INPUT_HINT_KEYBOARD"

    invoke-virtual/range {p2 .. p2}, Landroid/view/KeyEvent;->getDeviceId()I

    move-result v6

    move-object/from16 v0, p0

    invoke-direct {v0, v4, v6}, launchAssistAction(Ljava/lang/String;I)V

    goto :goto_709

    .line 5553
    :cond_71f
    const/4 v4, 0x6

    move/from16 v0, v27

    if-ne v0, v4, :cond_728

    .line 5554
    const-wide/16 v6, -0x1

    goto/16 :goto_91

    .line 5555
    :cond_728
    const/16 v4, 0x11

    move/from16 v0, v27

    if-ne v0, v4, :cond_340

    const-string v4, "ApplicationShortcut"

    const-string v6, ""

    invoke-virtual {v4, v6}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_340

    .line 5556
    if-eqz v22, :cond_75f

    .line 5557
    const/4 v4, 0x3

    move/from16 v0, v36

    if-ne v0, v4, :cond_753

    if-nez v16, :cond_753

    .line 5558
    if-nez v28, :cond_340

    .line 5559
    const/4 v4, 0x1

    move-object/from16 v0, p0

    iput-boolean v4, v0, mStarKeyLongPressConsumed:Z

    .line 5560
    move-object/from16 v0, p0

    iget-object v4, v0, mSPWM:Lcom/android/server/policy/sec/SamsungPhoneWindowManager;

    invoke-virtual {v4}, Lcom/android/server/policy/sec/SamsungPhoneWindowManager;->handleLongPressOnStar()V

    .line 5561
    const-wide/16 v6, -0x1

    goto/16 :goto_91

    .line 5563
    :cond_753
    move-object/from16 v0, p0

    iget-boolean v4, v0, mStarKeyLongPressConsumed:Z

    if-eqz v4, :cond_340

    if-lez v36, :cond_340

    .line 5564
    const-wide/16 v6, -0x1

    goto/16 :goto_91

    .line 5567
    :cond_75f
    move-object/from16 v0, p0

    iget-boolean v4, v0, mStarKeyLongPressConsumed:Z

    if-eqz v4, :cond_340

    .line 5568
    const/4 v4, 0x0

    move-object/from16 v0, p0

    iput-boolean v4, v0, mStarKeyLongPressConsumed:Z

    .line 5569
    const-wide/16 v6, -0x1

    goto/16 :goto_91

    .line 5591
    .restart local v26    # "kcm":Landroid/view/KeyCharacterMap;
    .restart local v40    # "shortcutIntent":Landroid/content/Intent;
    :catch_76e
    move-exception v23

    .line 5592
    .local v23, "ex":Landroid/content/ActivityNotFoundException;
    const-string v4, "WindowManager"

    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "Dropping shortcut key combination because the activity to which it is registered was not found: SEARCH+"

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-static/range {v27 .. v27}, Landroid/view/KeyEvent;->keyCodeToString(I)Ljava/lang/String;

    move-result-object v7

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    move-object/from16 v0, v23

    invoke-static {v4, v6, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    goto/16 :goto_380

    .line 5597
    .end local v23    # "ex":Landroid/content/ActivityNotFoundException;
    :cond_78f
    const-string v4, "WindowManager"

    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "Dropping unregistered shortcut key combination: SEARCH+"

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-static/range {v27 .. v27}, Landroid/view/KeyEvent;->keyCodeToString(I)Ljava/lang/String;

    move-result-object v7

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-static {v4, v6}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    goto/16 :goto_380

    .line 5606
    .end local v26    # "kcm":Landroid/view/KeyCharacterMap;
    .end local v40    # "shortcutIntent":Landroid/content/Intent;
    :cond_7ad
    if-eqz v22, :cond_814

    if-nez v36, :cond_814

    if-nez v28, :cond_814

    const/high16 v4, 0x10000

    and-int v4, v4, v32

    if-eqz v4, :cond_814

    move-object/from16 v0, p0

    iget-object v4, v0, mSystemKeyManager:Lcom/android/server/policy/sec/SystemKeyManager;

    invoke-virtual {v4}, Lcom/android/server/policy/sec/SystemKeyManager;->isMetaKeyEventRequested()Z

    move-result v4

    if-nez v4, :cond_814

    .line 5608
    invoke-virtual/range {p2 .. p2}, Landroid/view/KeyEvent;->getKeyCharacterMap()Landroid/view/KeyCharacterMap;

    move-result-object v26

    .line 5609
    .restart local v26    # "kcm":Landroid/view/KeyCharacterMap;
    invoke-virtual/range {v26 .. v27}, Landroid/view/KeyCharacterMap;->isPrintingKey(I)Z

    move-result v4

    if-eqz v4, :cond_814

    .line 5610
    move-object/from16 v0, p0

    iget-object v4, v0, mShortcutManager:Lcom/android/server/policy/ShortcutManager;

    const v6, -0x70001

    and-int v6, v6, v32

    move-object/from16 v0, v26

    move/from16 v1, v27

    invoke-virtual {v4, v0, v1, v6}, Lcom/android/server/policy/ShortcutManager;->getIntent(Landroid/view/KeyCharacterMap;II)Landroid/content/Intent;

    move-result-object v40

    .line 5613
    .restart local v40    # "shortcutIntent":Landroid/content/Intent;
    if-eqz v40, :cond_814

    .line 5614
    const/high16 v4, 0x10000000

    move-object/from16 v0, v40

    invoke-virtual {v0, v4}, Landroid/content/Intent;->addFlags(I)Landroid/content/Intent;

    .line 5616
    :try_start_7e7
    sget-object v4, Landroid/os/UserHandle;->CURRENT:Landroid/os/UserHandle;

    move-object/from16 v0, p0

    move-object/from16 v1, v40

    invoke-direct {v0, v1, v4}, startActivityAsUser(Landroid/content/Intent;Landroid/os/UserHandle;)V
    :try_end_7f0
    .catch Landroid/content/ActivityNotFoundException; {:try_start_7e7 .. :try_end_7f0} :catch_7f4

    .line 5622
    :goto_7f0
    const-wide/16 v6, -0x1

    goto/16 :goto_91

    .line 5617
    :catch_7f4
    move-exception v23

    .line 5618
    .restart local v23    # "ex":Landroid/content/ActivityNotFoundException;
    const-string v4, "WindowManager"

    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "Dropping shortcut key combination because the activity to which it is registered was not found: META+"

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-static/range {v27 .. v27}, Landroid/view/KeyEvent;->keyCodeToString(I)Ljava/lang/String;

    move-result-object v7

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    move-object/from16 v0, v23

    invoke-static {v4, v6, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    goto :goto_7f0

    .line 5628
    .end local v23    # "ex":Landroid/content/ActivityNotFoundException;
    .end local v26    # "kcm":Landroid/view/KeyCharacterMap;
    .end local v40    # "shortcutIntent":Landroid/content/Intent;
    :cond_814
    if-eqz v22, :cond_887

    if-nez v36, :cond_887

    if-nez v28, :cond_887

    invoke-static {}, Landroid/os/FactoryTest;->isFactoryBinary()Z

    move-result v4

    if-nez v4, :cond_887

    invoke-static {}, Landroid/os/FactoryTest;->isRunningFactoryApp()Z

    move-result v4

    if-nez v4, :cond_887

    invoke-static {}, Lcom/android/server/policy/sec/SamsungPolicyProperties;->isDomesticOtaStart()Z

    move-result v4

    if-nez v4, :cond_887

    move-object/from16 v0, p0

    iget-object v4, v0, mContext:Landroid/content/Context;

    invoke-static {v4}, Lcom/android/server/policy/sec/SamsungPolicyProperties;->isBlockKey(Landroid/content/Context;)Z

    move-result v4

    if-nez v4, :cond_887

    .line 5633
    sget-object v4, sApplicationLaunchKeyCategories:Landroid/util/SparseArray;

    move/from16 v0, v27

    invoke-virtual {v4, v0}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v17

    check-cast v17, Ljava/lang/String;

    .line 5634
    .local v17, "category":Ljava/lang/String;
    if-eqz v17, :cond_887

    .line 5635
    invoke-virtual/range {p0 .. p0}, sendCloseSystemWindows()V

    .line 5636
    const-string v4, "android.intent.action.MAIN"

    move-object/from16 v0, v17

    invoke-static {v4, v0}, Landroid/content/Intent;->makeMainSelectorActivity(Ljava/lang/String;Ljava/lang/String;)Landroid/content/Intent;

    move-result-object v5

    .line 5637
    .restart local v5    # "intent":Landroid/content/Intent;
    const/high16 v4, 0x10000000

    invoke-virtual {v5, v4}, Landroid/content/Intent;->setFlags(I)Landroid/content/Intent;

    .line 5639
    :try_start_852
    sget-object v4, Landroid/os/UserHandle;->CURRENT:Landroid/os/UserHandle;

    move-object/from16 v0, p0

    invoke-direct {v0, v5, v4}, startActivityAsUser(Landroid/content/Intent;Landroid/os/UserHandle;)V
    :try_end_859
    .catch Landroid/content/ActivityNotFoundException; {:try_start_852 .. :try_end_859} :catch_85d

    .line 5645
    :goto_859
    const-wide/16 v6, -0x1

    goto/16 :goto_91

    .line 5640
    :catch_85d
    move-exception v23

    .line 5641
    .restart local v23    # "ex":Landroid/content/ActivityNotFoundException;
    const-string v4, "WindowManager"

    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "Dropping application launch key because the activity to which it is registered was not found: keyCode="

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    move/from16 v0, v27

    invoke-virtual {v6, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v6

    const-string v7, ", category="

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    move-object/from16 v0, v17

    invoke-virtual {v6, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    move-object/from16 v0, v23

    invoke-static {v4, v6, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    goto :goto_859

    .line 5650
    .end local v5    # "intent":Landroid/content/Intent;
    .end local v17    # "category":Ljava/lang/String;
    .end local v23    # "ex":Landroid/content/ActivityNotFoundException;
    :cond_887
    if-eqz v22, :cond_8ca

    if-nez v36, :cond_8ca

    const/16 v4, 0x3d

    move/from16 v0, v27

    if-ne v0, v4, :cond_8ca

    .line 5651
    move-object/from16 v0, p0

    iget v4, v0, mRecentAppsHeldModifiers:I

    if-nez v4, :cond_8e6

    if-nez v28, :cond_8e6

    invoke-virtual/range {p0 .. p0}, isUserSetupComplete()Z

    move-result v4

    if-eqz v4, :cond_8e6

    move-object/from16 v0, p0

    iget-object v4, v0, mSystemKeyManager:Lcom/android/server/policy/sec/SystemKeyManager;

    invoke-virtual {v4}, Lcom/android/server/policy/sec/SystemKeyManager;->isMetaKeyEventRequested()Z

    move-result v4

    if-nez v4, :cond_8e6

    .line 5652
    invoke-virtual/range {p2 .. p2}, Landroid/view/KeyEvent;->getModifiers()I

    move-result v4

    and-int/lit16 v0, v4, -0xc2

    move/from16 v39, v0

    .line 5653
    .local v39, "shiftlessModifiers":I
    const/4 v4, 0x2

    move/from16 v0, v39

    invoke-static {v0, v4}, Landroid/view/KeyEvent;->metaStateHasModifiers(II)Z

    move-result v4

    if-eqz v4, :cond_8e6

    .line 5654
    move/from16 v0, v39

    move-object/from16 v1, p0

    iput v0, v1, mRecentAppsHeldModifiers:I

    .line 5655
    const/4 v4, 0x1

    move-object/from16 v0, p0

    invoke-direct {v0, v4}, showRecentApps(Z)V

    .line 5656
    const-wide/16 v6, -0x1

    goto/16 :goto_91

    .line 5659
    .end local v39    # "shiftlessModifiers":I
    :cond_8ca
    if-nez v22, :cond_8e6

    move-object/from16 v0, p0

    iget v4, v0, mRecentAppsHeldModifiers:I

    if-eqz v4, :cond_8e6

    move-object/from16 v0, p0

    iget v4, v0, mRecentAppsHeldModifiers:I

    and-int v4, v4, v32

    if-nez v4, :cond_8e6

    .line 5661
    const/4 v4, 0x0

    move-object/from16 v0, p0

    iput v4, v0, mRecentAppsHeldModifiers:I

    .line 5662
    const/4 v4, 0x1

    const/4 v6, 0x0

    move-object/from16 v0, p0

    invoke-direct {v0, v4, v6}, hideRecentApps(ZZ)V

    .line 5666
    :cond_8e6
    if-eqz v22, :cond_918

    if-nez v36, :cond_918

    const/16 v4, 0xcc

    move/from16 v0, v27

    if-eq v0, v4, :cond_8fc

    const/16 v4, 0x3e

    move/from16 v0, v27

    if-ne v0, v4, :cond_918

    move/from16 v0, v32

    and-int/lit16 v4, v0, 0x7000

    if-eqz v4, :cond_918

    .line 5670
    :cond_8fc
    move/from16 v0, v32

    and-int/lit16 v4, v0, 0xc1

    if-eqz v4, :cond_915

    const/16 v21, -0x1

    .line 5671
    .restart local v21    # "direction":I
    :goto_904
    move-object/from16 v0, p0

    iget-object v4, v0, mWindowManagerFuncs:Landroid/view/WindowManagerPolicy$WindowManagerFuncs;

    invoke-virtual/range {p2 .. p2}, Landroid/view/KeyEvent;->getDeviceId()I

    move-result v6

    move/from16 v0, v21

    invoke-interface {v4, v6, v0}, Landroid/view/WindowManagerPolicy$WindowManagerFuncs;->switchKeyboardLayout(II)V

    .line 5672
    const-wide/16 v6, -0x1

    goto/16 :goto_91

    .line 5670
    .end local v21    # "direction":I
    :cond_915
    const/16 v21, 0x1

    goto :goto_904

    .line 5674
    :cond_918
    move-object/from16 v0, p0

    iget-boolean v4, v0, mLanguageSwitchKeyPressed:Z

    if-eqz v4, :cond_935

    if-nez v22, :cond_935

    const/16 v4, 0xcc

    move/from16 v0, v27

    if-eq v0, v4, :cond_92c

    const/16 v4, 0x3e

    move/from16 v0, v27

    if-ne v0, v4, :cond_935

    .line 5677
    :cond_92c
    const/4 v4, 0x0

    move-object/from16 v0, p0

    iput-boolean v4, v0, mLanguageSwitchKeyPressed:Z

    .line 5678
    const-wide/16 v6, -0x1

    goto/16 :goto_91

    .line 5681
    :cond_935
    invoke-static/range {v27 .. v27}, isValidGlobalKey(I)Z

    move-result v4

    if-eqz v4, :cond_951

    move-object/from16 v0, p0

    iget-object v4, v0, mGlobalKeyManager:Lcom/android/server/policy/GlobalKeyManager;

    move-object/from16 v0, p0

    iget-object v6, v0, mContext:Landroid/content/Context;

    move/from16 v0, v27

    move-object/from16 v1, p2

    invoke-virtual {v4, v6, v0, v1}, Lcom/android/server/policy/GlobalKeyManager;->handleGlobalKey(Landroid/content/Context;ILandroid/view/KeyEvent;)Z

    move-result v4

    if-eqz v4, :cond_951

    .line 5683
    const-wide/16 v6, -0x1

    goto/16 :goto_91

    .line 5687
    :cond_951
    const/high16 v4, 0x10000

    and-int v4, v4, v32

    if-eqz v4, :cond_965

    move-object/from16 v0, p0

    iget-object v4, v0, mSystemKeyManager:Lcom/android/server/policy/sec/SystemKeyManager;

    invoke-virtual {v4}, Lcom/android/server/policy/sec/SystemKeyManager;->isMetaKeyEventRequested()Z

    move-result v4

    if-nez v4, :cond_965

    .line 5688
    const-wide/16 v6, -0x1

    goto/16 :goto_91

    .line 5692
    :cond_965
    const-wide/16 v6, 0x0

    goto/16 :goto_91

    .line 5542
    .restart local v14    # "auto":I
    .restart local v15    # "brightness":I
    .restart local v21    # "direction":I
    .restart local v31    # "max":I
    .restart local v33    # "min":I
    .restart local v43    # "step":I
    :catch_969
    move-exception v4

    goto/16 :goto_6ea

    .line 5484
    .end local v14    # "auto":I
    .end local v15    # "brightness":I
    .end local v21    # "direction":I
    .end local v31    # "max":I
    .end local v33    # "min":I
    .end local v43    # "step":I
    .restart local v20    # "dic":Landroid/os/IDeviceIdleController;
    :catch_96c
    move-exception v4

    goto/16 :goto_611
.end method

.method public interceptKeyBeforeQueueing(Landroid/view/KeyEvent;I)I
    .registers 27
    .param p1, "event"    # Landroid/view/KeyEvent;
    .param p2, "policyFlags"    # I

    .prologue
    .line 8983
    move-object/from16 v0, p0

    iget-boolean v0, v0, mSystemBooted:Z

    move/from16 v19, v0

    if-nez v19, :cond_b

    .line 8985
    const/16 v16, 0x0

    .line 9389
    :cond_a
    :goto_a
    return v16

    .line 8988
    :cond_b
    const/high16 v19, 0x20000000

    and-int v19, v19, p2

    if-eqz v19, :cond_d2

    const/4 v9, 0x1

    .line 8989
    .local v9, "interactive":Z
    :goto_12
    invoke-virtual/range {p1 .. p1}, Landroid/view/KeyEvent;->getAction()I

    move-result v19

    if-nez v19, :cond_d5

    const/4 v8, 0x1

    .line 8990
    .local v8, "down":Z
    :goto_19
    invoke-virtual/range {p1 .. p1}, Landroid/view/KeyEvent;->isCanceled()Z

    move-result v6

    .line 8991
    .local v6, "canceled":Z
    invoke-virtual/range {p1 .. p1}, Landroid/view/KeyEvent;->getKeyCode()I

    move-result v12

    .line 8993
    .local v12, "keyCode":I
    const/high16 v19, 0x1000000

    and-int v19, v19, p2

    if-eqz v19, :cond_d8

    const/4 v10, 0x1

    .line 8999
    .local v10, "isInjected":Z
    :goto_28
    move-object/from16 v0, p0

    iget-object v0, v0, mKeyguardDelegate:Lcom/android/server/policy/keyguard/KeyguardServiceDelegate;

    move-object/from16 v19, v0

    if-nez v19, :cond_db

    const/4 v14, 0x0

    .line 9004
    .local v14, "keyguardActive":Z
    :goto_31
    sget-boolean v19, DEBUG_INPUT:Z

    if-eqz v19, :cond_76

    .line 9005
    const-string v19, "WindowManager"

    new-instance v20, Ljava/lang/StringBuilder;

    invoke-direct/range {v20 .. v20}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v21, "interceptKeyTq keycode="

    invoke-virtual/range {v20 .. v21}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v20

    move-object/from16 v0, v20

    invoke-virtual {v0, v12}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v20

    const-string v21, " interactive="

    invoke-virtual/range {v20 .. v21}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v20

    move-object/from16 v0, v20

    invoke-virtual {v0, v9}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v20

    const-string v21, " keyguardActive="

    invoke-virtual/range {v20 .. v21}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v20

    move-object/from16 v0, v20

    invoke-virtual {v0, v14}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v20

    const-string v21, " policyFlags="

    invoke-virtual/range {v20 .. v21}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v20

    invoke-static/range {p2 .. p2}, Ljava/lang/Integer;->toHexString(I)Ljava/lang/String;

    move-result-object v21

    invoke-virtual/range {v20 .. v21}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v20

    invoke-virtual/range {v20 .. v20}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v20

    invoke-static/range {v19 .. v20}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 9012
    :cond_76
    and-int/lit8 v19, p2, 0x1

    if-nez v19, :cond_80

    invoke-virtual/range {p1 .. p1}, Landroid/view/KeyEvent;->isWakeKey()Z

    move-result v19

    if-eqz v19, :cond_ef

    :cond_80
    const/4 v11, 0x1

    .line 9014
    .local v11, "isWakeKey":Z
    :goto_81
    if-nez v9, :cond_87

    if-eqz v10, :cond_f1

    if-nez v11, :cond_f1

    .line 9017
    :cond_87
    const/16 v16, 0x1

    .line 9018
    .local v16, "result":I
    const/4 v11, 0x0

    .line 9037
    :cond_8a
    :goto_8a
    const/16 v19, 0x3

    move/from16 v0, v19

    if-ne v12, v0, :cond_9a

    move-object/from16 v0, p0

    invoke-direct {v0, v8}, checkTriggerOWC(Z)Z

    move-result v19

    if-eqz v19, :cond_9a

    .line 9038
    const/16 v16, 0x1

    .line 9042
    :cond_9a
    move-object/from16 v0, p0

    iget-object v0, v0, mSPWM:Lcom/android/server/policy/sec/SamsungPhoneWindowManager;

    move-object/from16 v19, v0

    move-object/from16 v0, v19

    move-object/from16 v1, p1

    move/from16 v2, p2

    invoke-virtual {v0, v1, v2}, Lcom/android/server/policy/sec/SamsungPhoneWindowManager;->interceptKeyBeforeQueueing(Landroid/view/KeyEvent;I)Z

    move-result v19

    if-eqz v19, :cond_10d

    .line 9043
    if-eqz v11, :cond_c6

    .line 9044
    move-object/from16 v0, p0

    iget-object v0, v0, mSPWM:Lcom/android/server/policy/sec/SamsungPhoneWindowManager;

    move-object/from16 v19, v0

    invoke-virtual/range {v19 .. v19}, Lcom/android/server/policy/sec/SamsungPhoneWindowManager;->performCPUBoost()V

    .line 9045
    move-object/from16 v0, p0

    iget-object v0, v0, mPowerManager:Landroid/os/PowerManager;

    move-object/from16 v19, v0

    invoke-virtual/range {p1 .. p1}, Landroid/view/KeyEvent;->getEventTime()J

    move-result-wide v20

    const/16 v22, 0x1

    invoke-virtual/range {v19 .. v22}, Landroid/os/PowerManager;->wakeUp(JI)V

    .line 9047
    :cond_c6
    const-string v19, "WindowManager"

    const-string/jumbo v20, "interceptKeyTq : return condition of SPWM"

    invoke-static/range {v19 .. v20}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 9048
    const/16 v16, 0x0

    goto/16 :goto_a

    .line 8988
    .end local v6    # "canceled":Z
    .end local v8    # "down":Z
    .end local v9    # "interactive":Z
    .end local v10    # "isInjected":Z
    .end local v11    # "isWakeKey":Z
    .end local v12    # "keyCode":I
    .end local v14    # "keyguardActive":Z
    .end local v16    # "result":I
    :cond_d2
    const/4 v9, 0x0

    goto/16 :goto_12

    .line 8989
    .restart local v9    # "interactive":Z
    :cond_d5
    const/4 v8, 0x0

    goto/16 :goto_19

    .line 8993
    .restart local v6    # "canceled":Z
    .restart local v8    # "down":Z
    .restart local v12    # "keyCode":I
    :cond_d8
    const/4 v10, 0x0

    goto/16 :goto_28

    .line 8999
    .restart local v10    # "isInjected":Z
    :cond_db
    if-eqz v9, :cond_e3

    invoke-virtual/range {p0 .. p0}, isKeyguardShowingAndNotOccluded()Z

    move-result v14

    goto/16 :goto_31

    :cond_e3
    move-object/from16 v0, p0

    iget-object v0, v0, mKeyguardDelegate:Lcom/android/server/policy/keyguard/KeyguardServiceDelegate;

    move-object/from16 v19, v0

    invoke-virtual/range {v19 .. v19}, Lcom/android/server/policy/keyguard/KeyguardServiceDelegate;->isShowing()Z

    move-result v14

    goto/16 :goto_31

    .line 9012
    .restart local v14    # "keyguardActive":Z
    :cond_ef
    const/4 v11, 0x0

    goto :goto_81

    .line 9019
    .restart local v11    # "isWakeKey":Z
    :cond_f1
    if-nez v9, :cond_fc

    invoke-direct/range {p0 .. p0}, shouldDispatchInputWhenNonInteractive()Z

    move-result v19

    if-eqz v19, :cond_fc

    .line 9024
    const/16 v16, 0x1

    .restart local v16    # "result":I
    goto :goto_8a

    .line 9028
    .end local v16    # "result":I
    :cond_fc
    const/16 v16, 0x0

    .line 9029
    .restart local v16    # "result":I
    if-eqz v11, :cond_8a

    if-eqz v8, :cond_10a

    move-object/from16 v0, p0

    invoke-direct {v0, v12}, isWakeKeyWhenScreenOff(I)Z

    move-result v19

    if-nez v19, :cond_8a

    .line 9030
    :cond_10a
    const/4 v11, 0x0

    goto/16 :goto_8a

    .line 9054
    :cond_10d
    invoke-static {v12}, isValidGlobalKey(I)Z

    move-result v19

    if-eqz v19, :cond_13e

    move-object/from16 v0, p0

    iget-object v0, v0, mGlobalKeyManager:Lcom/android/server/policy/GlobalKeyManager;

    move-object/from16 v19, v0

    move-object/from16 v0, v19

    move-object/from16 v1, p1

    invoke-virtual {v0, v12, v1}, Lcom/android/server/policy/GlobalKeyManager;->shouldHandleGlobalKey(ILandroid/view/KeyEvent;)Z

    move-result v19

    if-eqz v19, :cond_13e

    .line 9056
    if-eqz v11, :cond_a

    .line 9057
    invoke-virtual/range {p1 .. p1}, Landroid/view/KeyEvent;->getEventTime()J

    move-result-wide v20

    move-object/from16 v0, p0

    iget-boolean v0, v0, mAllowTheaterModeWakeFromKey:Z

    move/from16 v19, v0

    const/16 v22, 0x1

    move-object/from16 v0, p0

    move-wide/from16 v1, v20

    move/from16 v3, v19

    move/from16 v4, v22

    invoke-direct {v0, v1, v2, v3, v4}, wakeUp(JZI)Z

    goto/16 :goto_a

    .line 9062
    :cond_13e
    if-eqz v8, :cond_193

    move-object/from16 v0, p0

    iget-boolean v0, v0, mHasNavigationBar:Z

    move/from16 v19, v0

    if-nez v19, :cond_193

    move/from16 v18, v9

    .line 9070
    .local v18, "useHapticFeedback":Z
    :goto_14a
    sparse-switch v12, :sswitch_data_478

    .line 9371
    :cond_14d
    :goto_14d
    move-object/from16 v0, p0

    iget-object v0, v0, mCocktailPhoneWindowManager:Lcom/android/server/policy/cocktail/CocktailPhoneWindowManager;

    move-object/from16 v19, v0

    move-object/from16 v0, v19

    move-object/from16 v1, p1

    move/from16 v2, v16

    move/from16 v3, p2

    invoke-virtual {v0, v1, v2, v3}, Lcom/android/server/policy/cocktail/CocktailPhoneWindowManager;->interceptKeyBeforeQueueing(Landroid/view/KeyEvent;II)I

    move-result v19

    and-int v16, v16, v19

    .line 9375
    if-eqz v18, :cond_178

    .line 9377
    move-object/from16 v0, p0

    iget-boolean v0, v0, mHasNavigationBar:Z

    move/from16 v19, v0

    if-nez v19, :cond_464

    .line 9378
    move-object/from16 v0, p0

    iget-object v0, v0, mSPWM:Lcom/android/server/policy/sec/SamsungPhoneWindowManager;

    move-object/from16 v19, v0

    move-object/from16 v0, v19

    move-object/from16 v1, p1

    invoke-virtual {v0, v1}, Lcom/android/server/policy/sec/SamsungPhoneWindowManager;->performSystemKeyFeedback(Landroid/view/KeyEvent;)V

    .line 9385
    :cond_178
    :goto_178
    if-eqz v11, :cond_a

    .line 9386
    invoke-virtual/range {p1 .. p1}, Landroid/view/KeyEvent;->getEventTime()J

    move-result-wide v20

    move-object/from16 v0, p0

    iget-boolean v0, v0, mAllowTheaterModeWakeFromKey:Z

    move/from16 v19, v0

    const/16 v22, 0x1

    move-object/from16 v0, p0

    move-wide/from16 v1, v20

    move/from16 v3, v19

    move/from16 v4, v22

    invoke-direct {v0, v1, v2, v3, v4}, wakeUp(JZI)Z

    goto/16 :goto_a

    .line 9062
    .end local v18    # "useHapticFeedback":Z
    :cond_193
    move-object/from16 v0, p0

    iget-object v0, v0, mVibrator:Landroid/os/Vibrator;

    move-object/from16 v19, v0

    invoke-virtual/range {v19 .. v19}, Landroid/os/Vibrator;->isEnableIntensity()Z

    move-result v19

    if-eqz v19, :cond_1ac

    and-int/lit8 v19, p2, 0x2

    if-eqz v19, :cond_1ac

    invoke-virtual/range {p1 .. p1}, Landroid/view/KeyEvent;->getRepeatCount()I

    move-result v19

    if-nez v19, :cond_1ac

    const/16 v18, 0x1

    goto :goto_14a

    :cond_1ac
    const/16 v18, 0x0

    goto :goto_14a

    .line 9074
    .restart local v18    # "useHapticFeedback":Z
    :sswitch_1af
    move-object/from16 v0, p0

    iget-boolean v0, v0, mUseTvRouting:Z

    move/from16 v19, v0

    if-eqz v19, :cond_1b9

    .line 9076
    and-int/lit8 v16, v16, -0x2

    .line 9112
    :cond_1b9
    move-object/from16 v0, p0

    iget-object v0, v0, mSPWM:Lcom/android/server/policy/sec/SamsungPhoneWindowManager;

    move-object/from16 v19, v0

    invoke-virtual/range {v19 .. v19}, Lcom/android/server/policy/sec/SamsungPhoneWindowManager;->isVolumeKeyAppsEnabled()Z

    move-result v19

    if-eqz v19, :cond_1c7

    .line 9114
    and-int/lit8 v16, v16, -0x2

    .line 9119
    :cond_1c7
    move-object/from16 v0, p0

    iget-object v0, v0, mContext:Landroid/content/Context;

    move-object/from16 v19, v0

    invoke-static/range {v19 .. v19}, Lcom/samsung/android/cocktailbar/CocktailBarManager;->getInstance(Landroid/content/Context;)Lcom/samsung/android/cocktailbar/CocktailBarManager;

    move-result-object v7

    .line 9120
    .local v7, "cocktailBarManager":Lcom/samsung/android/cocktailbar/CocktailBarManager;
    if-eqz v7, :cond_1db

    invoke-virtual {v7}, Lcom/samsung/android/cocktailbar/CocktailBarManager;->getCocktaiBarWakeUpState()Z

    move-result v19

    if-eqz v19, :cond_1db

    .line 9121
    and-int/lit8 v16, v16, -0x2

    .line 9125
    :cond_1db
    invoke-virtual/range {p0 .. p0}, getTelecommService()Landroid/telecom/TelecomManager;

    move-result-object v17

    .line 9126
    .local v17, "telecomManager":Landroid/telecom/TelecomManager;
    if-eqz v17, :cond_242

    .line 9127
    if-eqz v8, :cond_209

    invoke-virtual/range {v17 .. v17}, Landroid/telecom/TelecomManager;->isRinging()Z

    move-result v19

    if-eqz v19, :cond_209

    .line 9134
    const-string v19, "WindowManager"

    const-string/jumbo v20, "interceptKeyBeforeQueueing: VOLUME key-down while ringing: Silence ringer!"

    invoke-static/range {v19 .. v20}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 9139
    invoke-virtual/range {v17 .. v17}, Landroid/telecom/TelecomManager;->silenceRinger()V

    .line 9143
    and-int/lit8 v16, v16, -0x2

    .line 9146
    move-object/from16 v0, p0

    iput v12, v0, mBeforeKeyDown:I

    .line 9148
    move-object/from16 v0, p0

    iget-object v0, v0, mSPWM:Lcom/android/server/policy/sec/SamsungPhoneWindowManager;

    move-object/from16 v19, v0

    const-string v20, "VCVS"

    const/16 v21, 0x0

    invoke-virtual/range {v19 .. v21}, Lcom/android/server/policy/sec/SamsungPhoneWindowManager;->insertLog(Ljava/lang/String;Ljava/lang/String;)V

    goto/16 :goto_14d

    .line 9153
    :cond_209
    if-nez v8, :cond_221

    move-object/from16 v0, p0

    iget v0, v0, mBeforeKeyDown:I

    move/from16 v19, v0

    move/from16 v0, v19

    if-ne v12, v0, :cond_221

    .line 9156
    and-int/lit8 v16, v16, -0x2

    .line 9157
    const/16 v19, 0x0

    move/from16 v0, v19

    move-object/from16 v1, p0

    iput v0, v1, mBeforeKeyDown:I

    goto/16 :goto_14d

    .line 9160
    :cond_221
    invoke-virtual/range {v17 .. v17}, Landroid/telecom/TelecomManager;->isInCall()Z

    move-result v19

    if-eqz v19, :cond_242

    and-int/lit8 v19, v16, 0x1

    if-nez v19, :cond_242

    .line 9165
    move-object/from16 v0, p0

    iget-object v0, v0, mContext:Landroid/content/Context;

    move-object/from16 v19, v0

    invoke-static/range {v19 .. v19}, Landroid/media/session/MediaSessionLegacyHelper;->getHelper(Landroid/content/Context;)Landroid/media/session/MediaSessionLegacyHelper;

    move-result-object v19

    const/16 v20, 0x0

    move-object/from16 v0, v19

    move-object/from16 v1, p1

    move/from16 v2, v20

    invoke-virtual {v0, v1, v2}, Landroid/media/session/MediaSessionLegacyHelper;->sendVolumeKeyEvent(Landroid/view/KeyEvent;Z)V

    goto/16 :goto_14d

    .line 9171
    :cond_242
    and-int/lit8 v19, v16, 0x1

    if-nez v19, :cond_14d

    .line 9172
    move-object/from16 v0, p0

    iget-boolean v0, v0, mUseTvRouting:Z

    move/from16 v19, v0

    if-eqz v19, :cond_253

    .line 9173
    invoke-direct/range {p0 .. p1}, dispatchDirectAudioEvent(Landroid/view/KeyEvent;)V

    goto/16 :goto_14d

    .line 9178
    :cond_253
    move-object/from16 v0, p0

    iget-object v0, v0, mContext:Landroid/content/Context;

    move-object/from16 v19, v0

    invoke-static/range {v19 .. v19}, Landroid/media/session/MediaSessionLegacyHelper;->getHelper(Landroid/content/Context;)Landroid/media/session/MediaSessionLegacyHelper;

    move-result-object v19

    const/16 v20, 0x1

    move-object/from16 v0, v19

    move-object/from16 v1, p1

    move/from16 v2, v20

    invoke-virtual {v0, v1, v2}, Landroid/media/session/MediaSessionLegacyHelper;->sendVolumeKeyEvent(Landroid/view/KeyEvent;Z)V

    goto/16 :goto_14d

    .line 9189
    .end local v7    # "cocktailBarManager":Lcom/samsung/android/cocktailbar/CocktailBarManager;
    .end local v17    # "telecomManager":Landroid/telecom/TelecomManager;
    :sswitch_26a
    const/4 v13, 0x0

    .line 9190
    .local v13, "keyUpCanceled":Z
    move-object/from16 v0, p0

    iget-object v0, v0, mSPWM:Lcom/android/server/policy/sec/SamsungPhoneWindowManager;

    move-object/from16 v19, v0

    invoke-virtual/range {v19 .. v19}, Lcom/android/server/policy/sec/SamsungPhoneWindowManager;->isCombinationKeyTriggered()Z

    move-result v19

    if-eqz v19, :cond_278

    .line 9191
    const/4 v13, 0x1

    .line 9195
    :cond_278
    if-nez v13, :cond_14d

    .line 9200
    move-object/from16 v0, p0

    iget v0, v0, mEndCallKeyPressCounter:I

    move/from16 v19, v0

    if-eqz v19, :cond_28d

    .line 9201
    move-object/from16 v0, p0

    iget-object v0, v0, mHandler:Landroid/os/Handler;

    move-object/from16 v19, v0

    const/16 v20, 0x3e

    invoke-virtual/range {v19 .. v20}, Landroid/os/Handler;->removeMessages(I)V

    .line 9204
    :cond_28d
    if-eqz v8, :cond_298

    .line 9205
    move-object/from16 v0, p0

    move-object/from16 v1, p1

    invoke-direct {v0, v1, v9}, interceptEndCallKeyDown(Landroid/view/KeyEvent;Z)V

    goto/16 :goto_14d

    .line 9207
    :cond_298
    move-object/from16 v0, p0

    move-object/from16 v1, p1

    invoke-direct {v0, v1, v9, v6}, interceptEndCallKeyUp(Landroid/view/KeyEvent;ZZ)V

    .line 9208
    move-object/from16 v0, p0

    iget-boolean v0, v0, mEndCallKeyHandled:Z

    move/from16 v19, v0

    if-nez v19, :cond_14d

    if-nez v6, :cond_14d

    move-object/from16 v0, p0

    iget v0, v0, mEndcallBehavior:I

    move/from16 v19, v0

    and-int/lit8 v19, v19, 0x2

    if-eqz v19, :cond_14d

    .line 9211
    move-object/from16 v0, p0

    iget-object v0, v0, mPowerManager:Landroid/os/PowerManager;

    move-object/from16 v19, v0

    invoke-virtual/range {p1 .. p1}, Landroid/view/KeyEvent;->getEventTime()J

    move-result-wide v20

    const/16 v22, 0x4

    const/16 v23, 0x0

    invoke-virtual/range {v19 .. v23}, Landroid/os/PowerManager;->goToSleep(JII)V

    .line 9213
    const/4 v11, 0x0

    goto/16 :goto_14d

    .line 9221
    .end local v13    # "keyUpCanceled":Z
    :sswitch_2c7
    move-object/from16 v0, p0

    iget-object v0, v0, mSystemKeyManager:Lcom/android/server/policy/sec/SystemKeyManager;

    move-object/from16 v19, v0

    move-object/from16 v0, v19

    invoke-virtual {v0, v12}, Lcom/android/server/policy/sec/SystemKeyManager;->isSystemKeyEventRequested(I)Z

    move-result v19

    if-eqz v19, :cond_31b

    .line 9222
    move-object/from16 v0, p0

    iget-object v0, v0, mSPWM:Lcom/android/server/policy/sec/SamsungPhoneWindowManager;

    move-object/from16 v19, v0

    move-object/from16 v0, p0

    iget-object v0, v0, mSystemKeyManager:Lcom/android/server/policy/sec/SystemKeyManager;

    move-object/from16 v20, v0

    invoke-virtual/range {v20 .. v20}, Lcom/android/server/policy/sec/SystemKeyManager;->getCurrentTopActivity()Landroid/content/ComponentName;

    move-result-object v20

    invoke-virtual/range {v19 .. v20}, Lcom/android/server/policy/sec/SamsungPhoneWindowManager;->isBlockedPowerKeyByKeyTest(Landroid/content/ComponentName;)Z

    move-result v19

    if-nez v19, :cond_14d

    .line 9226
    const/16 v19, 0x1

    move/from16 v0, v19

    move-object/from16 v1, p0

    iput-boolean v0, v1, mPendingPowerKeyUpCanceled:Z

    .line 9232
    :goto_2f3
    move-object/from16 v0, p0

    iget-object v0, v0, mSPWM:Lcom/android/server/policy/sec/SamsungPhoneWindowManager;

    move-object/from16 v19, v0

    invoke-virtual/range {v19 .. v19}, Lcom/android/server/policy/sec/SamsungPhoneWindowManager;->isSideSyncPresentationRunning()Z

    move-result v19

    if-eqz v19, :cond_307

    .line 9233
    invoke-virtual/range {p1 .. p1}, Landroid/view/KeyEvent;->getDisplayId()I

    move-result v19

    if-nez v19, :cond_307

    .line 9235
    or-int/lit8 v16, v16, 0x1

    .line 9239
    :cond_307
    const/4 v11, 0x0

    .line 9240
    if-eqz v8, :cond_31e

    .line 9241
    move-object/from16 v0, p0

    move-object/from16 v1, p1

    invoke-direct {v0, v1, v9}, interceptPowerKeyDown(Landroid/view/KeyEvent;Z)V

    .line 9245
    :goto_311
    const/16 v19, 0x0

    move/from16 v0, v19

    move-object/from16 v1, p0

    iput-boolean v0, v1, mPendingPowerKeyUpCanceled:Z

    goto/16 :goto_14d

    .line 9228
    :cond_31b
    and-int/lit8 v16, v16, -0x2

    goto :goto_2f3

    .line 9243
    :cond_31e
    if-nez v6, :cond_328

    move-object/from16 v0, p0

    iget-boolean v0, v0, mPendingPowerKeyUpCanceled:Z

    move/from16 v19, v0

    if-eqz v19, :cond_334

    :cond_328
    const/16 v19, 0x1

    :goto_32a
    move-object/from16 v0, p0

    move-object/from16 v1, p1

    move/from16 v2, v19

    invoke-direct {v0, v1, v9, v2}, interceptPowerKeyUp(Landroid/view/KeyEvent;ZZ)V

    goto :goto_311

    :cond_334
    const/16 v19, 0x0

    goto :goto_32a

    .line 9250
    :sswitch_337
    and-int/lit8 v16, v16, -0x2

    .line 9251
    const/4 v11, 0x0

    .line 9252
    move-object/from16 v0, p0

    iget-object v0, v0, mPowerManager:Landroid/os/PowerManager;

    move-object/from16 v19, v0

    invoke-virtual/range {v19 .. v19}, Landroid/os/PowerManager;->isInteractive()Z

    move-result v19

    if-nez v19, :cond_348

    .line 9253
    const/16 v18, 0x0

    .line 9255
    :cond_348
    if-eqz v8, :cond_357

    .line 9256
    invoke-virtual/range {p1 .. p1}, Landroid/view/KeyEvent;->getEventTime()J

    move-result-wide v20

    move-object/from16 v0, p0

    move-wide/from16 v1, v20

    invoke-direct {v0, v1, v2}, sleepPress(J)V

    goto/16 :goto_14d

    .line 9258
    :cond_357
    invoke-virtual/range {p1 .. p1}, Landroid/view/KeyEvent;->getEventTime()J

    move-result-wide v20

    move-object/from16 v0, p0

    move-wide/from16 v1, v20

    invoke-direct {v0, v1, v2}, sleepRelease(J)V

    goto/16 :goto_14d

    .line 9264
    :sswitch_364
    and-int/lit8 v16, v16, -0x2

    .line 9265
    const/4 v11, 0x1

    .line 9266
    goto/16 :goto_14d

    .line 9274
    :sswitch_369
    const/16 v19, 0x4f

    move/from16 v0, v19

    if-ne v12, v0, :cond_37e

    invoke-static {}, Landroid/os/FactoryTest;->isFactoryPBAPhase()Z

    move-result v19

    if-eqz v19, :cond_37e

    .line 9276
    const-string v19, "WindowManager"

    const-string v20, " KeyEvent.KEYCODE_HEADSETHOOK blocked..."

    invoke-static/range {v19 .. v20}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I

    goto/16 :goto_14d

    .line 9288
    :cond_37e
    :sswitch_37e
    move-object/from16 v0, p0

    iget-object v0, v0, mContext:Landroid/content/Context;

    move-object/from16 v19, v0

    invoke-static/range {v19 .. v19}, Landroid/media/session/MediaSessionLegacyHelper;->getHelper(Landroid/content/Context;)Landroid/media/session/MediaSessionLegacyHelper;

    move-result-object v19

    invoke-virtual/range {v19 .. v19}, Landroid/media/session/MediaSessionLegacyHelper;->isGlobalPriorityActive()Z

    move-result v19

    if-eqz v19, :cond_390

    .line 9291
    and-int/lit8 v16, v16, -0x2

    .line 9293
    :cond_390
    and-int/lit8 v19, v16, 0x1

    if-nez v19, :cond_14d

    .line 9299
    move-object/from16 v0, p0

    iget-object v0, v0, mBroadcastWakeLock:Landroid/os/PowerManager$WakeLock;

    move-object/from16 v19, v0

    invoke-virtual/range {v19 .. v19}, Landroid/os/PowerManager$WakeLock;->acquire()V

    .line 9300
    move-object/from16 v0, p0

    iget-object v0, v0, mHandler:Landroid/os/Handler;

    move-object/from16 v19, v0

    const/16 v20, 0x3

    new-instance v21, Landroid/view/KeyEvent;

    move-object/from16 v0, v21

    move-object/from16 v1, p1

    invoke-direct {v0, v1}, Landroid/view/KeyEvent;-><init>(Landroid/view/KeyEvent;)V

    invoke-virtual/range {v19 .. v21}, Landroid/os/Handler;->obtainMessage(ILjava/lang/Object;)Landroid/os/Message;

    move-result-object v15

    .line 9302
    .local v15, "msg":Landroid/os/Message;
    const/16 v19, 0x1

    move/from16 v0, v19

    invoke-virtual {v15, v0}, Landroid/os/Message;->setAsynchronous(Z)V

    .line 9303
    invoke-virtual {v15}, Landroid/os/Message;->sendToTarget()V

    goto/16 :goto_14d

    .line 9309
    .end local v15    # "msg":Landroid/os/Message;
    :sswitch_3be
    if-eqz v8, :cond_14d

    .line 9310
    invoke-virtual/range {p0 .. p0}, getTelecommService()Landroid/telecom/TelecomManager;

    move-result-object v17

    .line 9311
    .restart local v17    # "telecomManager":Landroid/telecom/TelecomManager;
    if-eqz v17, :cond_14d

    .line 9312
    invoke-virtual/range {v17 .. v17}, Landroid/telecom/TelecomManager;->isRinging()Z

    move-result v19

    if-eqz v19, :cond_14d

    .line 9313
    const-string v19, "WindowManager"

    const-string/jumbo v20, "interceptKeyBeforeQueueing: CALL key-down while ringing: Answer the call!"

    invoke-static/range {v19 .. v20}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 9315
    invoke-virtual/range {v17 .. v17}, Landroid/telecom/TelecomManager;->acceptRingingCall()V

    .line 9319
    and-int/lit8 v16, v16, -0x2

    goto/16 :goto_14d

    .line 9330
    .end local v17    # "telecomManager":Landroid/telecom/TelecomManager;
    :sswitch_3db
    and-int/lit8 v19, v16, 0x1

    if-nez v19, :cond_14d

    if-nez v8, :cond_14d

    .line 9331
    move-object/from16 v0, p0

    iget-object v0, v0, mBroadcastWakeLock:Landroid/os/PowerManager$WakeLock;

    move-object/from16 v19, v0

    invoke-virtual/range {v19 .. v19}, Landroid/os/PowerManager$WakeLock;->acquire()V

    .line 9332
    move-object/from16 v0, p0

    iget-object v0, v0, mHandler:Landroid/os/Handler;

    move-object/from16 v20, v0

    const/16 v21, 0xc

    if-eqz v14, :cond_410

    const/16 v19, 0x1

    :goto_3f6
    const/16 v22, 0x0

    move-object/from16 v0, v20

    move/from16 v1, v21

    move/from16 v2, v19

    move/from16 v3, v22

    invoke-virtual {v0, v1, v2, v3}, Landroid/os/Handler;->obtainMessage(III)Landroid/os/Message;

    move-result-object v15

    .line 9334
    .restart local v15    # "msg":Landroid/os/Message;
    const/16 v19, 0x1

    move/from16 v0, v19

    invoke-virtual {v15, v0}, Landroid/os/Message;->setAsynchronous(Z)V

    .line 9335
    invoke-virtual {v15}, Landroid/os/Message;->sendToTarget()V

    goto/16 :goto_14d

    .line 9332
    .end local v15    # "msg":Landroid/os/Message;
    :cond_410
    const/16 v19, 0x0

    goto :goto_3f6

    .line 9342
    :sswitch_413
    if-nez v9, :cond_14d

    if-eqz v8, :cond_14d

    move-object/from16 v0, p0

    iget-object v0, v0, mSPWM:Lcom/android/server/policy/sec/SamsungPhoneWindowManager;

    move-object/from16 v19, v0

    invoke-virtual/range {v19 .. v19}, Lcom/android/server/policy/sec/SamsungPhoneWindowManager;->hasCustomDoubleTapHomeCommand()Z

    move-result v19

    if-eqz v19, :cond_14d

    move-object/from16 v0, p0

    iget-boolean v0, v0, mNeedTriggerOWC:Z

    move/from16 v19, v0

    if-nez v19, :cond_14d

    .line 9343
    move-object/from16 v0, p0

    iget-object v0, v0, mMultitapKeyManager:Lcom/android/server/policy/sec/MultitapKeyManager;

    move-object/from16 v19, v0

    const/16 v20, 0x1

    move-object/from16 v0, v19

    move-object/from16 v1, p1

    move/from16 v2, v20

    invoke-virtual {v0, v1, v2}, Lcom/android/server/policy/sec/MultitapKeyManager;->dispatchMultitapKeyEvent(Landroid/view/KeyEvent;Z)Z

    move-result v19

    if-eqz v19, :cond_14d

    .line 9344
    and-int/lit8 v16, v16, -0x2

    goto/16 :goto_14d

    .line 9351
    :sswitch_443
    or-int/lit8 v16, v16, 0x1

    .line 9352
    goto/16 :goto_14d

    .line 9359
    :sswitch_447
    if-eqz v8, :cond_14d

    invoke-virtual/range {p1 .. p1}, Landroid/view/KeyEvent;->getRepeatCount()I

    move-result v19

    if-nez v19, :cond_14d

    .line 9360
    const/16 v19, 0x1

    move/from16 v0, v19

    move-object/from16 v1, p0

    iput-boolean v0, v1, mWatchLaunching:Z

    .line 9361
    move-object/from16 v0, p0

    iget-object v0, v0, mSPWM:Lcom/android/server/policy/sec/SamsungPhoneWindowManager;

    move-object/from16 v19, v0

    const/16 v20, 0x1

    invoke-virtual/range {v19 .. v20}, Lcom/android/server/policy/sec/SamsungPhoneWindowManager;->launchPremiumWatch(Z)V

    goto/16 :goto_14d

    .line 9380
    :cond_464
    const/16 v19, 0x0

    const/16 v20, 0x1

    const/16 v21, 0x0

    move-object/from16 v0, p0

    move-object/from16 v1, v19

    move/from16 v2, v20

    move/from16 v3, v21

    invoke-virtual {v0, v1, v2, v3}, performHapticFeedbackLw(Landroid/view/WindowManagerPolicy$WindowState;IZ)Z

    goto/16 :goto_178

    .line 9070
    nop

    :sswitch_data_478
    .sparse-switch
        0x3 -> :sswitch_413
        0x5 -> :sswitch_3be
        0x6 -> :sswitch_26a
        0x18 -> :sswitch_1af
        0x19 -> :sswitch_1af
        0x1a -> :sswitch_2c7
        0x4f -> :sswitch_369
        0x55 -> :sswitch_369
        0x56 -> :sswitch_37e
        0x57 -> :sswitch_37e
        0x58 -> :sswitch_37e
        0x59 -> :sswitch_37e
        0x5a -> :sswitch_37e
        0x5b -> :sswitch_37e
        0x7e -> :sswitch_369
        0x7f -> :sswitch_369
        0x82 -> :sswitch_37e
        0xa4 -> :sswitch_1af
        0xde -> :sswitch_37e
        0xdf -> :sswitch_337
        0xe0 -> :sswitch_364
        0xe7 -> :sswitch_3db
        0x3f7 -> :sswitch_443
        0x419 -> :sswitch_447
    .end sparse-switch
.end method

.method public interceptKeyBeforeQuickAccess(IFF)V
    .registers 5
    .param p1, "info"    # I
    .param p2, "x"    # F
    .param p3, "y"    # F

    .prologue
    .line 9394
    iget-object v0, p0, mSPWM:Lcom/android/server/policy/sec/SamsungPhoneWindowManager;

    invoke-virtual {v0, p1, p2, p3}, Lcom/android/server/policy/sec/SamsungPhoneWindowManager;->handleQuickAccess(IFF)V

    .line 9395
    return-void
.end method

.method public interceptMotionBeforeQueueingNonInteractive(JI)I
    .registers 13
    .param p1, "whenNanos"    # J
    .param p3, "policyFlags"    # I

    .prologue
    const-wide/32 v6, 0xf4240

    const/4 v4, 0x2

    const/4 v0, 0x0

    .line 9471
    and-int/lit8 v1, p3, 0x1

    if-eqz v1, :cond_14

    .line 9472
    div-long v2, p1, v6

    iget-boolean v1, p0, mAllowTheaterModeWakeFromMotion:Z

    invoke-direct {p0, v2, v3, v1, v4}, wakeUp(JZI)Z

    move-result v1

    if-eqz v1, :cond_14

    .line 9488
    :cond_13
    :goto_13
    return v0

    .line 9477
    :cond_14
    invoke-direct {p0}, shouldDispatchInputWhenNonInteractive()Z

    move-result v1

    if-eqz v1, :cond_1c

    .line 9478
    const/4 v0, 0x1

    goto :goto_13

    .line 9484
    :cond_1c
    invoke-direct {p0}, isTheaterModeEnabled()Z

    move-result v1

    if-eqz v1, :cond_13

    and-int/lit8 v1, p3, 0x1

    if-eqz v1, :cond_13

    .line 9485
    div-long v2, p1, v6

    iget-boolean v1, p0, mAllowTheaterModeWakeFromMotionWhenNotDreaming:Z

    invoke-direct {p0, v2, v3, v1, v4}, wakeUp(JZI)Z

    goto :goto_13
.end method

.method public isAccessiblityEnabled()Z
    .registers 2

    .prologue
    .line 12842
    iget-object v0, p0, mAccessibilityManager:Landroid/view/accessibility/AccessibilityManager;

    invoke-virtual {v0}, Landroid/view/accessibility/AccessibilityManager;->isEnabled()Z

    move-result v0

    return v0
.end method

.method public isAllScreenOnFully()Z
    .registers 2

    .prologue
    .line 12469
    iget-boolean v0, p0, mScreenOnFully:Z

    if-eqz v0, :cond_a

    iget-boolean v0, p0, mSubScreenOnFully:Z

    if-eqz v0, :cond_a

    const/4 v0, 0x1

    :goto_9
    return v0

    :cond_a
    const/4 v0, 0x0

    goto :goto_9
.end method

.method public isAwake()Z
    .registers 2

    .prologue
    .line 12474
    iget-boolean v0, p0, mAwake:Z

    return v0
.end method

.method public isCarModeBarVisible()Z
    .registers 2

    .prologue
    .line 12683
    iget-object v0, p0, mCarModeBar:Landroid/view/WindowManagerPolicy$WindowState;

    if-eqz v0, :cond_e

    iget-object v0, p0, mCarModeBar:Landroid/view/WindowManagerPolicy$WindowState;

    invoke-interface {v0}, Landroid/view/WindowManagerPolicy$WindowState;->isVisibleLw()Z

    move-result v0

    if-eqz v0, :cond_e

    .line 12684
    const/4 v0, 0x1

    .line 12686
    :goto_d
    return v0

    :cond_e
    const/4 v0, 0x0

    goto :goto_d
.end method

.method public isCocktailRotationAnimationNeeded()Z
    .registers 2

    .prologue
    .line 12254
    iget-object v0, p0, mCocktailPhoneWindowManager:Lcom/android/server/policy/cocktail/CocktailPhoneWindowManager;

    invoke-virtual {v0}, Lcom/android/server/policy/cocktail/CocktailPhoneWindowManager;->isCocktailRotationAnimationNeeded()Z

    move-result v0

    return v0
.end method

.method public isDefaultKeyguardRotationAnimationAlwaysUsed()Z
    .registers 2

    .prologue
    .line 12861
    iget-boolean v0, p0, mIsDefaultKeyguardRotationAnmationAlwaysUsed:Z

    return v0
.end method

.method public isDefaultOrientationForced()Z
    .registers 2

    .prologue
    .line 3229
    iget-boolean v0, p0, mForceDefaultOrientation:Z

    return v0
.end method

.method isDeviceProvisioned()Z
    .registers 4

    .prologue
    const/4 v0, 0x0

    .line 2228
    iget-object v1, p0, mContext:Landroid/content/Context;

    invoke-virtual {v1}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v1

    const-string/jumbo v2, "device_provisioned"

    invoke-static {v1, v2, v0}, Landroid/provider/Settings$Global;->getInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I

    move-result v1

    if-eqz v1, :cond_11

    const/4 v0, 0x1

    :cond_11
    return v0
.end method

.method public isForceHideByNightClock()Z
    .registers 2

    .prologue
    .line 13197
    iget-object v0, p0, mNightClock:Landroid/view/WindowManagerPolicy$WindowState;

    if-eqz v0, :cond_e

    iget-object v0, p0, mNightClock:Landroid/view/WindowManagerPolicy$WindowState;

    invoke-interface {v0}, Landroid/view/WindowManagerPolicy$WindowState;->isVisibleLw()Z

    move-result v0

    if-eqz v0, :cond_e

    .line 13198
    const/4 v0, 0x1

    .line 13201
    :goto_d
    return v0

    :cond_e
    const/4 v0, 0x0

    goto :goto_d
.end method

.method public isForceHideBySViewCover()Z
    .registers 3

    .prologue
    const/4 v0, 0x0

    .line 12908
    invoke-direct {p0}, isSupportAndAttachedSViewCover()Z

    move-result v1

    if-eqz v1, :cond_16

    iget-object v1, p0, mWindowManagerFuncs:Landroid/view/WindowManagerPolicy$WindowManagerFuncs;

    invoke-interface {v1}, Landroid/view/WindowManagerPolicy$WindowManagerFuncs;->canGlobalActionsShow()Z

    move-result v1

    if-eqz v1, :cond_16

    .line 12909
    iget-object v1, p0, mCoverState:Lcom/samsung/android/cover/CoverState;

    iget-boolean v1, v1, Lcom/samsung/android/cover/CoverState;->switchState:Z

    if-nez v1, :cond_16

    const/4 v0, 0x1

    .line 12911
    :cond_16
    return v0
.end method

.method public isForceHideCascade()Z
    .registers 3

    .prologue
    .line 13658
    const/4 v0, 0x0

    .line 13660
    .local v0, "mReturn":Z
    iget-object v1, p0, mMultiPhoneWindowManager:Lcom/android/server/policy/multiwindow/MultiPhoneWindowManager;

    invoke-virtual {v1}, Lcom/android/server/policy/multiwindow/MultiPhoneWindowManager;->isForceHideCascade()Z

    move-result v0

    .line 13662
    return v0
.end method

.method public isForceHiding(Landroid/view/WindowManager$LayoutParams;)Z
    .registers 4
    .param p1, "attrs"    # Landroid/view/WindowManager$LayoutParams;

    .prologue
    .line 4128
    iget v0, p1, Landroid/view/WindowManager$LayoutParams;->privateFlags:I

    and-int/lit16 v0, v0, 0x400

    if-nez v0, :cond_25

    iget v0, p1, Landroid/view/WindowManager$LayoutParams;->samsungFlags:I

    const/high16 v1, 0x10000000

    and-int/2addr v0, v1

    if-nez v0, :cond_25

    invoke-virtual {p0, p1}, isKeyguardHostWindow(Landroid/view/WindowManager$LayoutParams;)Z

    move-result v0

    if-eqz v0, :cond_1f

    iget-object v0, p0, mKeyguardDelegate:Lcom/android/server/policy/keyguard/KeyguardServiceDelegate;

    if-eqz v0, :cond_1f

    iget-object v0, p0, mKeyguardDelegate:Lcom/android/server/policy/keyguard/KeyguardServiceDelegate;

    invoke-virtual {v0}, Lcom/android/server/policy/keyguard/KeyguardServiceDelegate;->isShowing()Z

    move-result v0

    if-nez v0, :cond_25

    :cond_1f
    iget v0, p1, Landroid/view/WindowManager$LayoutParams;->type:I

    const/16 v1, 0x7ed

    if-ne v0, v1, :cond_27

    :cond_25
    const/4 v0, 0x1

    :goto_26
    return v0

    :cond_27
    const/4 v0, 0x0

    goto :goto_26
.end method

.method public isKeyguardDrawnLw()Z
    .registers 3

    .prologue
    .line 10628
    iget-object v1, p0, mLock:Ljava/lang/Object;

    monitor-enter v1

    .line 10629
    :try_start_3
    iget-boolean v0, p0, mKeyguardDrawnOnce:Z

    monitor-exit v1

    return v0

    .line 10630
    :catchall_7
    move-exception v0

    monitor-exit v1
    :try_end_9
    .catchall {:try_start_3 .. :try_end_9} :catchall_7

    throw v0
.end method

.method public isKeyguardHostWindow(Landroid/view/WindowManager$LayoutParams;)Z
    .registers 4
    .param p1, "attrs"    # Landroid/view/WindowManager$LayoutParams;

    .prologue
    .line 4137
    iget v0, p1, Landroid/view/WindowManager$LayoutParams;->type:I

    const/16 v1, 0x7d0

    if-ne v0, v1, :cond_8

    const/4 v0, 0x1

    :goto_7
    return v0

    :cond_8
    const/4 v0, 0x0

    goto :goto_7
.end method

.method public isKeyguardLocked()Z
    .registers 2

    .prologue
    .line 10578
    invoke-virtual {p0}, keyguardOn()Z

    move-result v0

    return v0
.end method

.method public isKeyguardSecure()Z
    .registers 2

    .prologue
    .line 10584
    iget-object v0, p0, mKeyguardDelegate:Lcom/android/server/policy/keyguard/KeyguardServiceDelegate;

    if-nez v0, :cond_6

    const/4 v0, 0x0

    .line 10585
    :goto_5
    return v0

    :cond_6
    iget-object v0, p0, mKeyguardDelegate:Lcom/android/server/policy/keyguard/KeyguardServiceDelegate;

    invoke-virtual {v0}, Lcom/android/server/policy/keyguard/KeyguardServiceDelegate;->isSecure()Z

    move-result v0

    goto :goto_5
.end method

.method public isKeyguardShowingAndNotOccluded()Z
    .registers 3

    .prologue
    const/4 v0, 0x0

    .line 10549
    iget-object v1, p0, mKeyguardDelegate:Lcom/android/server/policy/keyguard/KeyguardServiceDelegate;

    if-nez v1, :cond_6

    .line 10559
    :cond_5
    :goto_5
    return v0

    :cond_6
    iget-object v1, p0, mKeyguardDelegate:Lcom/android/server/policy/keyguard/KeyguardServiceDelegate;

    invoke-virtual {v1}, Lcom/android/server/policy/keyguard/KeyguardServiceDelegate;->isShowing()Z

    move-result v1

    if-eqz v1, :cond_5

    iget-boolean v1, p0, mKeyguardOccluded:Z

    if-nez v1, :cond_5

    const/4 v0, 0x1

    goto :goto_5
.end method

.method public isKeyguardShowingAndNotOccluded(I)Z
    .registers 4
    .param p1, "displayId"    # I

    .prologue
    const/4 v1, 0x0

    .line 10565
    iget-object v0, p0, mKeyguardDelegate:Lcom/android/server/policy/keyguard/KeyguardServiceDelegate;

    if-nez v0, :cond_6

    .line 10566
    :goto_5
    return v1

    :cond_6
    iget-object v0, p0, mKeyguardDelegate:Lcom/android/server/policy/keyguard/KeyguardServiceDelegate;

    invoke-virtual {v0}, Lcom/android/server/policy/keyguard/KeyguardServiceDelegate;->isShowing()Z

    move-result v0

    if-eqz v0, :cond_1d

    iget-object v0, p0, mDisplayWindowPolicy:Lcom/samsung/android/multidisplay/common/FallbackArrayList;

    invoke-virtual {v0, p1}, Lcom/samsung/android/multidisplay/common/FallbackArrayList;->get(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/policy/DisplayWindowPolicy;

    iget-boolean v0, v0, Lcom/android/server/policy/DisplayWindowPolicy;->mKeyguardOccluded:Z

    if-nez v0, :cond_1d

    const/4 v0, 0x1

    :goto_1b
    move v1, v0

    goto :goto_5

    :cond_1d
    move v0, v1

    goto :goto_1b
.end method

.method public isKeyguardShowingAndOccluded()Z
    .registers 3

    .prologue
    const/4 v0, 0x0

    .line 10571
    iget-object v1, p0, mKeyguardDelegate:Lcom/android/server/policy/keyguard/KeyguardServiceDelegate;

    if-nez v1, :cond_6

    .line 10572
    :cond_5
    :goto_5
    return v0

    :cond_6
    iget-object v1, p0, mKeyguardDelegate:Lcom/android/server/policy/keyguard/KeyguardServiceDelegate;

    invoke-virtual {v1}, Lcom/android/server/policy/keyguard/KeyguardServiceDelegate;->isShowing()Z

    move-result v1

    if-eqz v1, :cond_5

    iget-boolean v1, p0, mKeyguardOccluded:Z

    if-eqz v1, :cond_5

    const/4 v0, 0x1

    goto :goto_5
.end method

.method public isKeyguardShowingOrOccluded()Z
    .registers 2

    .prologue
    .line 10591
    iget-object v0, p0, mKeyguardDelegate:Lcom/android/server/policy/keyguard/KeyguardServiceDelegate;

    if-nez v0, :cond_6

    const/4 v0, 0x0

    :goto_5
    return v0

    :cond_6
    iget-object v0, p0, mKeyguardDelegate:Lcom/android/server/policy/keyguard/KeyguardServiceDelegate;

    invoke-virtual {v0}, Lcom/android/server/policy/keyguard/KeyguardServiceDelegate;->isShowing()Z

    move-result v0

    goto :goto_5
.end method

.method public isLockTaskModeEnabled()Z
    .registers 2

    .prologue
    .line 12838
    iget v0, p0, mLockTaskModeState:I

    if-eqz v0, :cond_6

    const/4 v0, 0x1

    :goto_5
    return v0

    :cond_6
    const/4 v0, 0x0

    goto :goto_5
.end method

.method public isMetaKeyEventRequested(Landroid/content/ComponentName;)Z
    .registers 3
    .param p1, "componentName"    # Landroid/content/ComponentName;

    .prologue
    .line 12761
    iget-object v0, p0, mSystemKeyManager:Lcom/android/server/policy/sec/SystemKeyManager;

    invoke-virtual {v0, p1}, Lcom/android/server/policy/sec/SystemKeyManager;->isMetaKeyEventRequested(Landroid/content/ComponentName;)Z

    move-result v0

    return v0
.end method

.method public isNavigationBarVisible()Z
    .registers 2

    .prologue
    .line 12673
    iget-object v0, p0, mNavigationBar:Landroid/view/WindowManagerPolicy$WindowState;

    if-eqz v0, :cond_e

    iget-object v0, p0, mNavigationBar:Landroid/view/WindowManagerPolicy$WindowState;

    invoke-interface {v0}, Landroid/view/WindowManagerPolicy$WindowState;->isVisibleLw()Z

    move-result v0

    if-eqz v0, :cond_e

    .line 12674
    const/4 v0, 0x1

    .line 12677
    :goto_d
    return v0

    :cond_e
    const/4 v0, 0x0

    goto :goto_d
.end method

.method public isNeedLayoutCoverApplication(Landroid/view/WindowManagerPolicy$WindowState;)Z
    .registers 5
    .param p1, "win"    # Landroid/view/WindowManagerPolicy$WindowState;

    .prologue
    const/4 v1, 0x1

    .line 12953
    invoke-direct {p0}, isSupportAndAttachedSViewCover()Z

    move-result v2

    if-eqz v2, :cond_26

    .line 12954
    invoke-interface {p1}, Landroid/view/WindowManagerPolicy$WindowState;->getCoverMode()I

    move-result v0

    .line 12955
    .local v0, "coverMode":I
    const/4 v2, 0x2

    if-ne v0, v2, :cond_15

    .line 12956
    invoke-interface {p1}, Landroid/view/WindowManagerPolicy$WindowState;->willBeHideSViewCoverOnce()Z

    move-result v2

    if-eqz v2, :cond_26

    .line 12970
    .end local v0    # "coverMode":I
    :cond_14
    :goto_14
    :sswitch_14
    return v1

    .line 12959
    .restart local v0    # "coverMode":I
    :cond_15
    if-eq v0, v1, :cond_14

    const/16 v2, 0x10

    if-eq v0, v2, :cond_14

    .line 12961
    if-nez v0, :cond_26

    .line 12962
    invoke-interface {p1}, Landroid/view/WindowManagerPolicy$WindowState;->getAttrs()Landroid/view/WindowManager$LayoutParams;

    move-result-object v2

    iget v2, v2, Landroid/view/WindowManager$LayoutParams;->type:I

    sparse-switch v2, :sswitch_data_28

    .line 12970
    .end local v0    # "coverMode":I
    :cond_26
    const/4 v1, 0x0

    goto :goto_14

    .line 12962
    :sswitch_data_28
    .sparse-switch
        0x7d5 -> :sswitch_14
        0x7e4 -> :sswitch_14
        0x833 -> :sswitch_14
    .end sparse-switch
.end method

.method public isScreenOn()Z
    .registers 2

    .prologue
    .line 10514
    const/4 v0, 0x0

    invoke-virtual {p0, v0}, isScreenOn(I)Z

    move-result v0

    return v0
.end method

.method public isScreenOn(I)Z
    .registers 3
    .param p1, "displayId"    # I

    .prologue
    .line 10528
    iget-boolean v0, p0, mScreenOnFully:Z

    return v0
.end method

.method isSharedDeviceKeyguardOn()Z
    .registers 4

    .prologue
    const/4 v1, 0x0

    .line 5005
    invoke-direct {p0}, getEDM()Landroid/app/enterprise/EnterpriseDeviceManager;

    move-result-object v2

    if-eqz v2, :cond_2e

    invoke-direct {p0}, getEDM()Landroid/app/enterprise/EnterpriseDeviceManager;

    move-result-object v2

    invoke-virtual {v2}, Landroid/app/enterprise/EnterpriseDeviceManager;->getEnterpriseSharedDevicePolicy()Lcom/sec/enterprise/knox/shareddevice/EnterpriseSharedDevicePolicy;

    move-result-object v2

    if-eqz v2, :cond_2e

    .line 5006
    invoke-direct {p0}, getEDM()Landroid/app/enterprise/EnterpriseDeviceManager;

    move-result-object v2

    invoke-virtual {v2}, Landroid/app/enterprise/EnterpriseDeviceManager;->getEnterpriseSharedDevicePolicy()Lcom/sec/enterprise/knox/shareddevice/EnterpriseSharedDevicePolicy;

    move-result-object v2

    invoke-virtual {v2}, Lcom/sec/enterprise/knox/shareddevice/EnterpriseSharedDevicePolicy;->isSharedDeviceEnabled()Z

    move-result v0

    .line 5008
    .local v0, "isSharedDevice":Z
    invoke-direct {p0}, getPersonaManagerLocked()Landroid/os/PersonaManager;

    move-result-object v2

    if-eqz v2, :cond_2e

    .line 5009
    if-eqz v0, :cond_2e

    iget-object v2, p0, mPersonaManager:Landroid/os/PersonaManager;

    invoke-virtual {v2, v1}, Landroid/os/PersonaManager;->getKeyguardShowState(I)Z

    move-result v2

    if-eqz v2, :cond_2e

    .line 5010
    const/4 v1, 0x1

    .line 5014
    .end local v0    # "isSharedDevice":Z
    :cond_2e
    return v1
.end method

.method isSharedDeviceUnlockScreens()Z
    .registers 8

    .prologue
    const/4 v5, 0x1

    const/4 v4, 0x0

    .line 4971
    invoke-direct {p0}, getEDM()Landroid/app/enterprise/EnterpriseDeviceManager;

    move-result-object v3

    if-eqz v3, :cond_22

    invoke-direct {p0}, getEDM()Landroid/app/enterprise/EnterpriseDeviceManager;

    move-result-object v3

    invoke-virtual {v3}, Landroid/app/enterprise/EnterpriseDeviceManager;->getEnterpriseSharedDevicePolicy()Lcom/sec/enterprise/knox/shareddevice/EnterpriseSharedDevicePolicy;

    move-result-object v3

    if-eqz v3, :cond_22

    .line 4972
    invoke-direct {p0}, getEDM()Landroid/app/enterprise/EnterpriseDeviceManager;

    move-result-object v3

    invoke-virtual {v3}, Landroid/app/enterprise/EnterpriseDeviceManager;->getEnterpriseSharedDevicePolicy()Lcom/sec/enterprise/knox/shareddevice/EnterpriseSharedDevicePolicy;

    move-result-object v3

    invoke-virtual {v3}, Lcom/sec/enterprise/knox/shareddevice/EnterpriseSharedDevicePolicy;->isSharedDeviceEnabled()Z

    move-result v1

    .line 4973
    .local v1, "isSharedDevice":Z
    if-nez v1, :cond_24

    move v3, v4

    .line 4995
    .end local v1    # "isSharedDevice":Z
    :goto_21
    return v3

    :cond_22
    move v3, v4

    .line 4976
    goto :goto_21

    .line 4978
    .restart local v1    # "isSharedDevice":Z
    :cond_24
    invoke-virtual {p0}, isSharedDeviceKeyguardOn()Z

    move-result v3

    if-eqz v3, :cond_2c

    move v3, v5

    .line 4979
    goto :goto_21

    .line 4981
    :cond_2c
    const/4 v2, 0x0

    .line 4982
    .local v2, "str":Ljava/lang/String;
    iget-object v3, p0, mContext:Landroid/content/Context;

    const-string v6, "activity"

    invoke-virtual {v3, v6}, Landroid/content/Context;->getSystemService(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Landroid/app/ActivityManager;

    .line 4983
    .local v0, "am":Landroid/app/ActivityManager;
    if-eqz v0, :cond_53

    invoke-virtual {v0, v5}, Landroid/app/ActivityManager;->getRunningTasks(I)Ljava/util/List;

    move-result-object v3

    if-eqz v3, :cond_53

    .line 4984
    invoke-virtual {v0, v5}, Landroid/app/ActivityManager;->getRunningTasks(I)Ljava/util/List;

    move-result-object v3

    invoke-interface {v3, v4}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Landroid/app/ActivityManager$RunningTaskInfo;

    iget-object v3, v3, Landroid/app/ActivityManager$RunningTaskInfo;->topActivity:Landroid/content/ComponentName;

    invoke-virtual {v3}, Landroid/content/ComponentName;->getClassName()Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/String;->toString()Ljava/lang/String;

    move-result-object v2

    .line 4987
    :cond_53
    if-eqz v2, :cond_77

    const-string v3, "com.sec.enterprise.knox.shareddevice.SetupWizardSecuritySettingActivity"

    invoke-virtual {v2, v3}, Ljava/lang/String;->equalsIgnoreCase(Ljava/lang/String;)Z

    move-result v3

    if-nez v3, :cond_75

    const-string v3, "com.sec.enterprise.knox.shareddevice.SetupWizardChooseLockPassword"

    invoke-virtual {v2, v3}, Ljava/lang/String;->equalsIgnoreCase(Ljava/lang/String;)Z

    move-result v3

    if-nez v3, :cond_75

    const-string v3, "com.sec.enterprise.knox.shareddevice.SetupWizardSetPatternActivity"

    invoke-virtual {v2, v3}, Ljava/lang/String;->equalsIgnoreCase(Ljava/lang/String;)Z

    move-result v3

    if-nez v3, :cond_75

    const-string v3, "com.sec.enterprise.knox.shareddevice.SetupWizardSetFingerPrintActivity"

    invoke-virtual {v2, v3}, Ljava/lang/String;->equalsIgnoreCase(Ljava/lang/String;)Z

    move-result v3

    if-eqz v3, :cond_77

    :cond_75
    move v3, v5

    .line 4992
    goto :goto_21

    :cond_77
    move v3, v4

    .line 4995
    goto :goto_21
.end method

.method public isSmartHallFlipStateUnfold()Z
    .registers 4

    .prologue
    const/4 v0, 0x1

    .line 12563
    iget-object v1, p0, mFoldingAndWrapAroundLock:Ljava/lang/Object;

    monitor-enter v1

    .line 12564
    :try_start_4
    iget v2, p0, mFoldingState:I

    if-ne v2, v0, :cond_a

    :goto_8
    monitor-exit v1

    return v0

    :cond_a
    const/4 v0, 0x0

    goto :goto_8

    .line 12565
    :catchall_c
    move-exception v0

    monitor-exit v1
    :try_end_e
    .catchall {:try_start_4 .. :try_end_e} :catchall_c

    throw v0
.end method

.method public isStatusBarKeyguard()Z
    .registers 2

    .prologue
    .line 12693
    const/4 v0, 0x0

    invoke-virtual {p0, v0}, isStatusBarKeyguard(I)Z

    move-result v0

    return v0
.end method

.method isStatusBarKeyguard(I)Z
    .registers 3
    .param p1, "displayId"    # I

    .prologue
    .line 12703
    iget-object v0, p0, mStatusBar:Landroid/view/WindowManagerPolicy$WindowState;

    if-eqz v0, :cond_12

    iget-object v0, p0, mStatusBar:Landroid/view/WindowManagerPolicy$WindowState;

    invoke-interface {v0}, Landroid/view/WindowManagerPolicy$WindowState;->getAttrs()Landroid/view/WindowManager$LayoutParams;

    move-result-object v0

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->privateFlags:I

    and-int/lit16 v0, v0, 0x400

    if-eqz v0, :cond_12

    const/4 v0, 0x1

    :goto_11
    return v0

    :cond_12
    const/4 v0, 0x0

    goto :goto_11
.end method

.method public isStatusBarSViewCover()Z
    .registers 3

    .prologue
    .line 13052
    iget-object v0, p0, mStatusBar:Landroid/view/WindowManagerPolicy$WindowState;

    if-eqz v0, :cond_13

    iget-object v0, p0, mStatusBar:Landroid/view/WindowManagerPolicy$WindowState;

    invoke-interface {v0}, Landroid/view/WindowManagerPolicy$WindowState;->getAttrs()Landroid/view/WindowManager$LayoutParams;

    move-result-object v0

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->samsungFlags:I

    const/high16 v1, 0x10000000

    and-int/2addr v0, v1

    if-eqz v0, :cond_13

    const/4 v0, 0x1

    :goto_12
    return v0

    :cond_13
    const/4 v0, 0x0

    goto :goto_12
.end method

.method public isStatusBarVisible()Z
    .registers 2

    .prologue
    .line 12665
    iget-object v0, p0, mStatusBar:Landroid/view/WindowManagerPolicy$WindowState;

    if-eqz v0, :cond_16

    iget-object v0, p0, mStatusBar:Landroid/view/WindowManagerPolicy$WindowState;

    invoke-interface {v0}, Landroid/view/WindowManagerPolicy$WindowState;->isVisibleLw()Z

    move-result v0

    if-eqz v0, :cond_16

    iget-object v0, p0, mStatusBar:Landroid/view/WindowManagerPolicy$WindowState;

    invoke-interface {v0}, Landroid/view/WindowManagerPolicy$WindowState;->isAnimatingLw()Z

    move-result v0

    if-nez v0, :cond_16

    .line 12666
    const/4 v0, 0x1

    .line 12668
    :goto_15
    return v0

    :cond_16
    const/4 v0, 0x0

    goto :goto_15
.end method

.method public isSupportPowerTriplePress()Z
    .registers 2

    .prologue
    .line 1979
    iget v0, p0, mTriplePressOnPowerBehavior:I

    if-eqz v0, :cond_6

    const/4 v0, 0x1

    :goto_5
    return v0

    :cond_6
    const/4 v0, 0x0

    goto :goto_5
.end method

.method public isSystemKeyEventRequested(ILandroid/content/ComponentName;)Z
    .registers 4
    .param p1, "keyCode"    # I
    .param p2, "componentName"    # Landroid/content/ComponentName;

    .prologue
    .line 12751
    iget-object v0, p0, mSystemKeyManager:Lcom/android/server/policy/sec/SystemKeyManager;

    invoke-virtual {v0, p1, p2}, Lcom/android/server/policy/sec/SystemKeyManager;->isSystemKeyEventRequested(ILandroid/content/ComponentName;)Z

    move-result v0

    return v0
.end method

.method public isTopLevelWindow(I)Z
    .registers 4
    .param p1, "windowType"    # I

    .prologue
    const/4 v0, 0x1

    .line 12324
    const/16 v1, 0x3e8

    if-lt p1, v1, :cond_d

    const/16 v1, 0x7cf

    if-gt p1, v1, :cond_d

    .line 12326
    const/16 v1, 0x3eb

    if-ne p1, v1, :cond_e

    .line 12328
    :cond_d
    :goto_d
    return v0

    .line 12326
    :cond_e
    const/4 v0, 0x0

    goto :goto_d
.end method

.method public isUserSetupComplete()Z
    .registers 5

    .prologue
    const/4 v0, 0x0

    .line 2236
    iget-object v1, p0, mContext:Landroid/content/Context;

    invoke-virtual {v1}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v1

    const-string/jumbo v2, "user_setup_complete"

    const/4 v3, -0x2

    invoke-static {v1, v2, v0, v3}, Landroid/provider/Settings$Secure;->getIntForUser(Landroid/content/ContentResolver;Ljava/lang/String;II)I

    move-result v1

    if-nez v1, :cond_17

    invoke-static {}, Landroid/os/FactoryTest;->isFactoryBinary()Z

    move-result v1

    if-eqz v1, :cond_18

    :cond_17
    const/4 v0, 0x1

    :cond_18
    return v0
.end method

.method public isWakeupPreventionPackage(Ljava/lang/String;)Z
    .registers 3
    .param p1, "packageName"    # Ljava/lang/String;

    .prologue
    .line 13694
    iget-object v0, p0, mSPWM:Lcom/android/server/policy/sec/SamsungPhoneWindowManager;

    invoke-virtual {v0, p1}, Lcom/android/server/policy/sec/SamsungPhoneWindowManager;->isWakeupPreventionPackage(Ljava/lang/String;)Z

    move-result v0

    return v0
.end method

.method public isWrapAroundMainDown()Z
    .registers 4

    .prologue
    const/4 v2, 0x2

    .line 12569
    iget-object v1, p0, mFoldingAndWrapAroundLock:Ljava/lang/Object;

    monitor-enter v1

    .line 12570
    :try_start_4
    iget v0, p0, mFoldingState:I

    if-ne v0, v2, :cond_f

    iget v0, p0, mLastWrapAroundMode:I

    if-ne v0, v2, :cond_f

    const/4 v0, 0x1

    :goto_d
    monitor-exit v1

    return v0

    :cond_f
    const/4 v0, 0x0

    goto :goto_d

    .line 12572
    :catchall_11
    move-exception v0

    monitor-exit v1
    :try_end_13
    .catchall {:try_start_4 .. :try_end_13} :catchall_11

    throw v0
.end method

.method public isWrapAroundMainUpWithQuickAccess()Z
    .registers 5

    .prologue
    const/4 v0, 0x1

    .line 12576
    iget-object v1, p0, mFoldingAndWrapAroundLock:Ljava/lang/Object;

    monitor-enter v1

    .line 12577
    :try_start_4
    iget v2, p0, mFoldingState:I

    const/4 v3, 0x2

    if-ne v2, v3, :cond_17

    iget v2, p0, mLastWrapAroundMode:I

    if-ne v2, v0, :cond_17

    iget-boolean v2, p0, mSubScreenOnFully:Z

    if-eqz v2, :cond_17

    iget-boolean v2, p0, mScreenOnFully:Z

    if-nez v2, :cond_17

    :goto_15
    monitor-exit v1

    return v0

    :cond_17
    const/4 v0, 0x0

    goto :goto_15

    .line 12580
    :catchall_19
    move-exception v0

    monitor-exit v1
    :try_end_1b
    .catchall {:try_start_4 .. :try_end_1b} :catchall_19

    throw v0
.end method

.method public keepScreenOnStartedLw()V
    .registers 1

    .prologue
    .line 11844
    return-void
.end method

.method public keepScreenOnStoppedLw()V
    .registers 5

    .prologue
    .line 11848
    invoke-virtual {p0}, isKeyguardShowingAndNotOccluded()Z

    move-result v0

    if-nez v0, :cond_10

    .line 11849
    iget-object v0, p0, mPowerManager:Landroid/os/PowerManager;

    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v2

    const/4 v1, 0x0

    invoke-virtual {v0, v2, v3, v1}, Landroid/os/PowerManager;->userActivity(JZ)V

    .line 11851
    :cond_10
    return-void
.end method

.method keyguardOn()Z
    .registers 5

    .prologue
    const/4 v2, 0x1

    const/4 v1, 0x0

    .line 5020
    invoke-direct {p0}, getEDM()Landroid/app/enterprise/EnterpriseDeviceManager;

    move-result-object v3

    if-eqz v3, :cond_30

    invoke-direct {p0}, getEDM()Landroid/app/enterprise/EnterpriseDeviceManager;

    move-result-object v3

    invoke-virtual {v3}, Landroid/app/enterprise/EnterpriseDeviceManager;->getEnterpriseSharedDevicePolicy()Lcom/sec/enterprise/knox/shareddevice/EnterpriseSharedDevicePolicy;

    move-result-object v3

    if-eqz v3, :cond_30

    .line 5021
    invoke-direct {p0}, getEDM()Landroid/app/enterprise/EnterpriseDeviceManager;

    move-result-object v3

    invoke-virtual {v3}, Landroid/app/enterprise/EnterpriseDeviceManager;->getEnterpriseSharedDevicePolicy()Lcom/sec/enterprise/knox/shareddevice/EnterpriseSharedDevicePolicy;

    move-result-object v3

    invoke-virtual {v3}, Lcom/sec/enterprise/knox/shareddevice/EnterpriseSharedDevicePolicy;->isSharedDeviceEnabled()Z

    move-result v0

    .line 5023
    .local v0, "isSharedDevice":Z
    if-eqz v0, :cond_30

    invoke-direct {p0}, getPersonaManagerLocked()Landroid/os/PersonaManager;

    move-result-object v3

    if-eqz v3, :cond_30

    .line 5024
    iget-object v3, p0, mPersonaManager:Landroid/os/PersonaManager;

    invoke-virtual {v3, v1}, Landroid/os/PersonaManager;->getKeyguardShowState(I)Z

    move-result v3

    if-eqz v3, :cond_2f

    move v1, v2

    .line 5032
    .end local v0    # "isSharedDevice":Z
    :cond_2f
    :goto_2f
    return v1

    :cond_30
    invoke-virtual {p0}, isKeyguardShowingAndNotOccluded()Z

    move-result v3

    if-nez v3, :cond_3c

    invoke-virtual {p0}, inKeyguardRestrictedKeyInputMode()Z

    move-result v3

    if-eqz v3, :cond_2f

    :cond_3c
    move v1, v2

    goto :goto_2f
.end method

.method public launchHome()V
    .registers 1

    .prologue
    .line 12781
    invoke-virtual {p0}, launchHomeFromHotKey()V

    .line 12782
    return-void
.end method

.method launchHomeFromHotKey()V
    .registers 2

    .prologue
    const/4 v0, 0x1

    .line 5938
    invoke-virtual {p0, v0, v0}, launchHomeFromHotKey(ZZ)V

    .line 5939
    return-void
.end method

.method launchHomeFromHotKey(ZZ)V
    .registers 10
    .param p1, "awakenFromDreams"    # Z
    .param p2, "respectKeyguard"    # Z

    .prologue
    const/4 v6, 0x0

    const/4 v5, 0x1

    .line 5947
    const/4 v2, 0x0

    .line 5948
    .local v2, "personaId":I
    invoke-direct {p0}, getPersonaManagerLocked()Landroid/os/PersonaManager;

    move-result-object v3

    if-eqz v3, :cond_22

    iget-object v3, p0, mPersonaManager:Landroid/os/PersonaManager;

    invoke-virtual {v3}, Landroid/os/PersonaManager;->getPersonaIds()[I

    move-result-object v3

    if-eqz v3, :cond_22

    iget-object v3, p0, mPersonaManager:Landroid/os/PersonaManager;

    invoke-virtual {v3}, Landroid/os/PersonaManager;->getPersonaIds()[I

    move-result-object v3

    array-length v3, v3

    if-lez v3, :cond_22

    .line 5949
    iget-object v3, p0, mPersonaManager:Landroid/os/PersonaManager;

    invoke-virtual {v3}, Landroid/os/PersonaManager;->getPersonaIds()[I

    move-result-object v3

    aget v2, v3, v6

    .line 5951
    :cond_22
    invoke-direct {p0, v2}, isKnoxKeyguardShownForKioskMode(I)Z

    move-result v3

    if-eqz v3, :cond_31

    .line 5952
    const-string v3, "WindowManager"

    const-string/jumbo v4, "launchHomeFromHotKey() > isKnoxKeyguardShownForKioskMode() : true"

    invoke-static {v3, v4}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 6040
    :cond_30
    :goto_30
    return-void

    .line 5957
    :cond_31
    if-eqz p2, :cond_95

    .line 5958
    invoke-virtual {p0}, isKeyguardShowingAndNotOccluded()Z

    move-result v3

    if-nez v3, :cond_42

    iget-object v3, p0, mSPWM:Lcom/android/server/policy/sec/SamsungPhoneWindowManager;

    const/4 v4, 0x3

    invoke-virtual {v3, v4}, Lcom/android/server/policy/sec/SamsungPhoneWindowManager;->isEnableAccessControl(I)Z

    move-result v3

    if-eqz v3, :cond_56

    .line 5961
    :cond_42
    iget-object v3, p0, mContext:Landroid/content/Context;

    invoke-static {v3}, Lcom/samsung/android/cocktailbar/CocktailBarFeatures;->isSystemBarType(Landroid/content/Context;)Z

    move-result v3

    if-eqz v3, :cond_30

    .line 5962
    iget-object v3, p0, mContext:Landroid/content/Context;

    invoke-static {v3}, Lcom/samsung/android/cocktailbar/CocktailBarManager;->getInstance(Landroid/content/Context;)Lcom/samsung/android/cocktailbar/CocktailBarManager;

    move-result-object v0

    .line 5963
    .local v0, "cocktailBarManager":Lcom/samsung/android/cocktailbar/CocktailBarManager;
    if-eqz v0, :cond_30

    .line 5964
    invoke-virtual {v0}, Lcom/samsung/android/cocktailbar/CocktailBarManager;->switchDefaultCocktail()V

    goto :goto_30

    .line 5971
    .end local v0    # "cocktailBarManager":Lcom/samsung/android/cocktailbar/CocktailBarManager;
    :cond_56
    iget-boolean v3, p0, mWatchLaunching:Z

    if-eqz v3, :cond_5a

    .line 5976
    :cond_5a
    iget-boolean v3, p0, mHideLockScreen:Z

    if-nez v3, :cond_95

    iget-object v3, p0, mKeyguardDelegate:Lcom/android/server/policy/keyguard/KeyguardServiceDelegate;

    if-eqz v3, :cond_95

    iget-object v3, p0, mKeyguardDelegate:Lcom/android/server/policy/keyguard/KeyguardServiceDelegate;

    invoke-virtual {v3}, Lcom/android/server/policy/keyguard/KeyguardServiceDelegate;->isInputRestricted()Z

    move-result v3

    if-eqz v3, :cond_95

    .line 5981
    iget-object v3, p0, mSPWM:Lcom/android/server/policy/sec/SamsungPhoneWindowManager;

    invoke-virtual {v3}, Lcom/android/server/policy/sec/SamsungPhoneWindowManager;->launchHomeDuringVzwSetup()Z

    move-result v3

    if-eqz v3, :cond_8a

    .line 5982
    const-string v3, "WindowManager"

    const-string v4, " VerizonSetupWizard is running, launching home ignore keyguard ..."

    invoke-static {v3, v4}, Landroid/util/Log;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 5984
    :try_start_79
    invoke-static {}, Landroid/app/ActivityManagerNative;->getDefault()Landroid/app/IActivityManager;

    move-result-object v3

    invoke-interface {v3}, Landroid/app/IActivityManager;->stopAppSwitches()V
    :try_end_80
    .catch Landroid/os/RemoteException; {:try_start_79 .. :try_end_80} :catch_f3

    .line 5987
    :goto_80
    const-string/jumbo v3, "homekey"

    invoke-virtual {p0, v3}, sendCloseSystemWindows(Ljava/lang/String;)V

    .line 5988
    invoke-virtual {p0, v5, p1}, startDockOrHome(ZZ)V

    goto :goto_30

    .line 5991
    :cond_8a
    iget-object v3, p0, mKeyguardDelegate:Lcom/android/server/policy/keyguard/KeyguardServiceDelegate;

    new-instance v4, Lcom/android/server/policy/PhoneWindowManager$14;

    invoke-direct {v4, p0, p1}, Lcom/android/server/policy/PhoneWindowManager$14;-><init>(Lcom/android/server/policy/PhoneWindowManager;Z)V

    invoke-virtual {v3, v4}, Lcom/android/server/policy/keyguard/KeyguardServiceDelegate;->verifyUnlock(Landroid/view/WindowManagerPolicy$OnKeyguardExitResult;)V

    goto :goto_30

    .line 6009
    :cond_95
    iget-object v3, p0, mSPWM:Lcom/android/server/policy/sec/SamsungPhoneWindowManager;

    invoke-virtual {v3}, Lcom/android/server/policy/sec/SamsungPhoneWindowManager;->launchHomeDuringVzwSetup()Z

    move-result v3

    if-eqz v3, :cond_ba

    .line 6010
    const-string v3, "WindowManager"

    const-string v4, "HOME key pressed. Start Vzw setup wizard service."

    invoke-static {v3, v4}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 6011
    new-instance v1, Landroid/content/Intent;

    const-string/jumbo v3, "samsung.vzw.setupwizard.intent.action.SHOW_POPUP"

    invoke-direct {v1, v3}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 6012
    .local v1, "intent":Landroid/content/Intent;
    const-string v3, "com.sec.android.app.setupwizard"

    invoke-virtual {v1, v3}, Landroid/content/Intent;->setPackage(Ljava/lang/String;)Landroid/content/Intent;

    .line 6013
    iget-object v3, p0, mContext:Landroid/content/Context;

    sget-object v4, Landroid/os/UserHandle;->CURRENT:Landroid/os/UserHandle;

    invoke-virtual {v3, v1, v4}, Landroid/content/Context;->startServiceAsUser(Landroid/content/Intent;Landroid/os/UserHandle;)Landroid/content/ComponentName;

    goto/16 :goto_30

    .line 6017
    .end local v1    # "intent":Landroid/content/Intent;
    :cond_ba
    iget-object v3, p0, mSPWM:Lcom/android/server/policy/sec/SamsungPhoneWindowManager;

    invoke-virtual {v3}, Lcom/android/server/policy/sec/SamsungPhoneWindowManager;->isCurrentUserSetupComplete()Z

    move-result v3

    if-nez v3, :cond_cb

    .line 6019
    const-string v3, "WindowManager"

    const-string v4, "Key was blocked by user setup is not completed"

    invoke-static {v3, v4}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto/16 :goto_30

    .line 6025
    :cond_cb
    :try_start_cb
    invoke-static {}, Landroid/app/ActivityManagerNative;->getDefault()Landroid/app/IActivityManager;

    move-result-object v3

    invoke-interface {v3}, Landroid/app/IActivityManager;->stopAppSwitches()V
    :try_end_d2
    .catch Landroid/os/RemoteException; {:try_start_cb .. :try_end_d2} :catch_f1

    .line 6028
    :goto_d2
    iget-boolean v3, p0, mRecentsVisible:Z

    if-eqz v3, :cond_e6

    .line 6030
    if-eqz p1, :cond_db

    .line 6031
    invoke-static {}, awakenDreams()V

    .line 6033
    :cond_db
    const-string/jumbo v3, "homekey"

    invoke-virtual {p0, v3}, sendCloseSystemWindows(Ljava/lang/String;)V

    .line 6034
    invoke-direct {p0, v6, v5}, hideRecentApps(ZZ)V

    goto/16 :goto_30

    .line 6037
    :cond_e6
    const-string/jumbo v3, "homekey"

    invoke-virtual {p0, v3}, sendCloseSystemWindows(Ljava/lang/String;)V

    .line 6038
    invoke-virtual {p0, v5, p1}, startDockOrHome(ZZ)V

    goto/16 :goto_30

    .line 6026
    :catch_f1
    move-exception v3

    goto :goto_d2

    .line 5985
    :catch_f3
    move-exception v3

    goto :goto_80
.end method

.method launchVoiceAssistWithWakeLock(Z)V
    .registers 5
    .param p1, "keyguardActive"    # Z

    .prologue
    .line 9606
    const-string/jumbo v2, "deviceidle"

    invoke-static {v2}, Landroid/os/ServiceManager;->getService(Ljava/lang/String;)Landroid/os/IBinder;

    move-result-object v2

    invoke-static {v2}, Landroid/os/IDeviceIdleController$Stub;->asInterface(Landroid/os/IBinder;)Landroid/os/IDeviceIdleController;

    move-result-object v0

    .line 9608
    .local v0, "dic":Landroid/os/IDeviceIdleController;
    if-eqz v0, :cond_13

    .line 9610
    :try_start_d
    const-string/jumbo v2, "voice-search"

    invoke-interface {v0, v2}, Landroid/os/IDeviceIdleController;->exitIdle(Ljava/lang/String;)V
    :try_end_13
    .catch Landroid/os/RemoteException; {:try_start_d .. :try_end_13} :catch_2c

    .line 9614
    :cond_13
    :goto_13
    new-instance v1, Landroid/content/Intent;

    const-string v2, "android.speech.action.VOICE_SEARCH_HANDS_FREE"

    invoke-direct {v1, v2}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 9616
    .local v1, "voiceIntent":Landroid/content/Intent;
    const-string v2, "android.speech.extras.EXTRA_SECURE"

    invoke-virtual {v1, v2, p1}, Landroid/content/Intent;->putExtra(Ljava/lang/String;Z)Landroid/content/Intent;

    .line 9618
    :try_start_1f
    sget-object v2, Landroid/os/UserHandle;->CURRENT_OR_SELF:Landroid/os/UserHandle;

    invoke-direct {p0, v1, v2}, startActivityAsUser(Landroid/content/Intent;Landroid/os/UserHandle;)V
    :try_end_24
    .catch Landroid/content/ActivityNotFoundException; {:try_start_1f .. :try_end_24} :catch_2a

    .line 9622
    :goto_24
    iget-object v2, p0, mBroadcastWakeLock:Landroid/os/PowerManager$WakeLock;

    invoke-virtual {v2}, Landroid/os/PowerManager$WakeLock;->release()V

    .line 9623
    return-void

    .line 9619
    :catch_2a
    move-exception v2

    goto :goto_24

    .line 9611
    .end local v1    # "voiceIntent":Landroid/content/Intent;
    :catch_2c
    move-exception v2

    goto :goto_13
.end method

.method public layoutWindowLw(Landroid/view/WindowManagerPolicy$WindowState;Landroid/view/WindowManagerPolicy$WindowState;)V
    .registers 50
    .param p1, "win"    # Landroid/view/WindowManagerPolicy$WindowState;
    .param p2, "attached"    # Landroid/view/WindowManagerPolicy$WindowState;

    .prologue
    .line 6807
    const/16 v34, 0x0

    .line 6808
    .local v34, "mStatusBar":Landroid/view/WindowManagerPolicy$WindowState;
    const/16 v33, 0x0

    .line 6819
    .local v33, "mNavigationBar":Landroid/view/WindowManagerPolicy$WindowState;
    move-object/from16 v0, p0

    iget-object v0, v0, mStatusBar:Landroid/view/WindowManagerPolicy$WindowState;

    move-object/from16 v34, v0

    .line 6820
    move-object/from16 v0, p0

    iget-object v0, v0, mNavigationBar:Landroid/view/WindowManagerPolicy$WindowState;

    move-object/from16 v33, v0

    .line 6821
    move-object/from16 v0, p0

    iget v0, v0, mLastSystemUiFlags:I

    move/from16 v32, v0

    .line 6822
    .local v32, "mLastSystemUiFlags":I
    move-object/from16 v0, p0

    iget-object v0, v0, mTopFullscreenOpaqueWindowState:Landroid/view/WindowManagerPolicy$WindowState;

    move-object/from16 v35, v0

    .line 6828
    .local v35, "mTopFullscreenOpaqueWindowState":Landroid/view/WindowManagerPolicy$WindowState;
    invoke-interface/range {p1 .. p1}, Landroid/view/WindowManagerPolicy$WindowState;->getAttrs()Landroid/view/WindowManager$LayoutParams;

    move-result-object v16

    .line 6829
    .local v16, "attrs":Landroid/view/WindowManager$LayoutParams;
    move-object/from16 v0, p1

    move-object/from16 v1, v34

    if-ne v0, v1, :cond_35

    invoke-direct/range {p0 .. p1}, canReceiveInput(Landroid/view/WindowManagerPolicy$WindowState;)Z

    move-result v2

    if-nez v2, :cond_35

    move-object/from16 v0, v16

    iget v2, v0, Landroid/view/WindowManager$LayoutParams;->samsungFlags:I

    const/high16 v3, 0x10000000

    and-int/2addr v2, v3

    if-eqz v2, :cond_43

    :cond_35
    move-object/from16 v0, p1

    move-object/from16 v1, v33

    if-eq v0, v1, :cond_43

    move-object/from16 v0, p0

    iget-object v2, v0, mCarModeBar:Landroid/view/WindowManagerPolicy$WindowState;

    move-object/from16 v0, p1

    if-ne v0, v2, :cond_44

    .line 7483
    :cond_43
    :goto_43
    return-void

    .line 6838
    :cond_44
    const/16 v36, 0x0

    .line 6840
    .local v36, "needRestoreLayoutValues":Z
    invoke-virtual/range {p0 .. p0}, isForceHideBySViewCover()Z

    move-result v2

    if-eqz v2, :cond_5a

    invoke-virtual/range {p0 .. p1}, isNeedLayoutCoverApplication(Landroid/view/WindowManagerPolicy$WindowState;)Z

    move-result v2

    if-eqz v2, :cond_5a

    .line 6841
    const/4 v2, 0x1

    move-object/from16 v0, p0

    invoke-virtual {v0, v2}, updateSViewCoverLayout(Z)V

    .line 6842
    const/16 v36, 0x1

    .line 6846
    :cond_5a
    invoke-interface/range {p1 .. p1}, Landroid/view/WindowManagerPolicy$WindowState;->isDefaultDisplay()Z

    move-result v28

    .line 6847
    .local v28, "isDefaultDisplay":Z
    const/high16 v2, 0x4000000

    and-int v2, v2, v32

    if-eqz v2, :cond_31a

    const/16 v30, 0x1

    .line 6848
    .local v30, "isStatusBarTransient":Z
    :goto_66
    if-eqz v28, :cond_31e

    move-object/from16 v0, p0

    iget-object v2, v0, mLastInputMethodTargetWindow:Landroid/view/WindowManagerPolicy$WindowState;

    move-object/from16 v0, p1

    if-ne v0, v2, :cond_31e

    move-object/from16 v0, p0

    iget-object v2, v0, mLastInputMethodWindow:Landroid/view/WindowManagerPolicy$WindowState;

    if-eqz v2, :cond_31e

    const/16 v37, 0x1

    .line 6850
    .local v37, "needsToOffsetInputMethodTarget":Z
    :goto_78
    if-eqz v37, :cond_8e

    .line 6851
    sget-boolean v2, DEBUG_LAYOUT:Z

    if-eqz v2, :cond_85

    const-string v2, "WindowManager"

    const-string v3, "Offset ime target window by the last ime window state"

    invoke-static {v2, v3}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 6852
    :cond_85
    move-object/from16 v0, p0

    iget-object v2, v0, mLastInputMethodWindow:Landroid/view/WindowManagerPolicy$WindowState;

    move-object/from16 v0, p0

    invoke-direct {v0, v2}, offsetInputMethodWindowLw(Landroid/view/WindowManagerPolicy$WindowState;)V

    .line 6855
    :cond_8e
    move-object/from16 v0, p1

    move-object/from16 v1, v16

    invoke-static {v0, v1}, Lcom/android/server/policy/PolicyControl;->getWindowFlags(Landroid/view/WindowManagerPolicy$WindowState;Landroid/view/WindowManager$LayoutParams;)I

    move-result v4

    .line 6856
    .local v4, "fl":I
    move-object/from16 v0, v16

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->softInputMode:I

    move/from16 v42, v0

    .line 6857
    .local v42, "sim":I
    const/4 v2, 0x0

    move-object/from16 v0, p1

    invoke-static {v0, v2}, Lcom/android/server/policy/PolicyControl;->getSystemUiVisibility(Landroid/view/WindowManagerPolicy$WindowState;Landroid/view/WindowManager$LayoutParams;)I

    move-result v44

    .line 6860
    .local v44, "sysUiFl":I
    const/16 v17, 0x0

    .line 6861
    .local v17, "multiWindowStyle":Lcom/samsung/android/multiwindow/MultiWindowStyle;
    const/16 v24, 0x1

    .line 6863
    .local v24, "applySoftInputLayoutInsets":Z
    invoke-interface/range {p1 .. p1}, Landroid/view/WindowManagerPolicy$WindowState;->getMultiWindowStyleLw()Lcom/samsung/android/multiwindow/MultiWindowStyle;

    move-result-object v17

    .line 6864
    move-object/from16 v0, p0

    iget-object v2, v0, mMultiPhoneWindowManager:Lcom/android/server/policy/multiwindow/MultiPhoneWindowManager;

    move-object/from16 v0, p0

    iget-object v3, v0, mFocusedWindow:Landroid/view/WindowManagerPolicy$WindowState;

    move-object/from16 v0, p1

    invoke-virtual {v2, v3, v0}, Lcom/android/server/policy/multiwindow/MultiPhoneWindowManager;->shouldEnableLayoutInsetsBySoftInput(Landroid/view/WindowManagerPolicy$WindowState;Landroid/view/WindowManagerPolicy$WindowState;)Z

    move-result v24

    .line 6870
    if-eqz v24, :cond_bf

    .line 6871
    invoke-interface/range {p1 .. p1}, Landroid/view/WindowManagerPolicy$WindowState;->isInputMethodTargetLw()Z

    move-result v24

    .line 6876
    :cond_bf
    sget-object v8, mTmpParentFrame:Landroid/graphics/Rect;

    .line 6877
    .local v8, "pf":Landroid/graphics/Rect;
    sget-object v9, mTmpDisplayFrame:Landroid/graphics/Rect;

    .line 6878
    .local v9, "df":Landroid/graphics/Rect;
    sget-object v10, mTmpOverscanFrame:Landroid/graphics/Rect;

    .line 6879
    .local v10, "of":Landroid/graphics/Rect;
    sget-object v11, mTmpContentFrame:Landroid/graphics/Rect;

    .line 6880
    .local v11, "cf":Landroid/graphics/Rect;
    sget-object v12, mTmpVisibleFrame:Landroid/graphics/Rect;

    .line 6881
    .local v12, "vf":Landroid/graphics/Rect;
    sget-object v23, mTmpDecorFrame:Landroid/graphics/Rect;

    .line 6882
    .local v23, "dcf":Landroid/graphics/Rect;
    sget-object v41, mTmpStableFrame:Landroid/graphics/Rect;

    .line 6883
    .local v41, "sf":Landroid/graphics/Rect;
    const/16 v38, 0x0

    .line 6884
    .local v38, "osf":Landroid/graphics/Rect;
    invoke-virtual/range {v23 .. v23}, Landroid/graphics/Rect;->setEmpty()V

    .line 6886
    if-eqz v28, :cond_322

    move-object/from16 v0, p0

    iget-boolean v2, v0, mHasNavigationBar:Z

    if-eqz v2, :cond_322

    if-eqz v33, :cond_322

    invoke-interface/range {v33 .. v33}, Landroid/view/WindowManagerPolicy$WindowState;->isVisibleLw()Z

    move-result v2

    if-eqz v2, :cond_322

    const/16 v25, 0x1

    .line 6889
    .local v25, "hasNavBar":Z
    :goto_e4
    move/from16 v0, v42

    and-int/lit16 v5, v0, 0xf0

    .line 6891
    .local v5, "adjust":I
    if-eqz v28, :cond_326

    .line 6892
    move-object/from16 v0, p0

    iget v2, v0, mStableLeft:I

    move-object/from16 v0, p0

    iget v3, v0, mStableTop:I

    move-object/from16 v0, p0

    iget v6, v0, mStableRight:I

    move-object/from16 v0, p0

    iget v7, v0, mStableBottom:I

    move-object/from16 v0, v41

    invoke-virtual {v0, v2, v3, v6, v7}, Landroid/graphics/Rect;->set(IIII)V

    .line 6897
    :goto_ff
    if-nez v28, :cond_379

    .line 6898
    if-eqz p2, :cond_33d

    .line 6901
    const/4 v7, 0x1

    move-object/from16 v2, p0

    move-object/from16 v3, p1

    move-object/from16 v6, p2

    invoke-virtual/range {v2 .. v12}, setAttachedWindowFrames(Landroid/view/WindowManagerPolicy$WindowState;IILandroid/view/WindowManagerPolicy$WindowState;ZLandroid/graphics/Rect;Landroid/graphics/Rect;Landroid/graphics/Rect;Landroid/graphics/Rect;Landroid/graphics/Rect;)V

    .line 7400
    :cond_10d
    :goto_10d
    move-object/from16 v0, p0

    iget-object v13, v0, mCocktailPhoneWindowManager:Lcom/android/server/policy/cocktail/CocktailPhoneWindowManager;

    move-object/from16 v14, p1

    move-object/from16 v15, p2

    move-object/from16 v18, v8

    move-object/from16 v19, v9

    move-object/from16 v20, v10

    move-object/from16 v21, v11

    move-object/from16 v22, v12

    invoke-virtual/range {v13 .. v23}, Lcom/android/server/policy/cocktail/CocktailPhoneWindowManager;->layoutWindowLw(Landroid/view/WindowManagerPolicy$WindowState;Landroid/view/WindowManagerPolicy$WindowState;Landroid/view/WindowManager$LayoutParams;Lcom/samsung/android/multiwindow/MultiWindowStyle;Landroid/graphics/Rect;Landroid/graphics/Rect;Landroid/graphics/Rect;Landroid/graphics/Rect;Landroid/graphics/Rect;Landroid/graphics/Rect;)Z

    move-result v31

    .line 7402
    .local v31, "layoutDone":Z
    if-nez v31, :cond_43

    .line 7409
    and-int/lit16 v2, v4, 0x200

    if-eqz v2, :cond_169

    move-object/from16 v0, v16

    iget v2, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    const/16 v3, 0x7da

    if-eq v2, v3, :cond_169

    .line 7410
    const/16 v2, -0x2710

    iput v2, v9, Landroid/graphics/Rect;->top:I

    iput v2, v9, Landroid/graphics/Rect;->left:I

    .line 7411
    const/16 v2, 0x2710

    iput v2, v9, Landroid/graphics/Rect;->bottom:I

    iput v2, v9, Landroid/graphics/Rect;->right:I

    .line 7412
    move-object/from16 v0, v16

    iget v2, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    const/16 v3, 0x7dd

    if-eq v2, v3, :cond_169

    move-object/from16 v0, v16

    iget v2, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    const/16 v3, 0x832

    if-eq v2, v3, :cond_169

    .line 7413
    const/16 v2, -0x2710

    iput v2, v12, Landroid/graphics/Rect;->top:I

    iput v2, v12, Landroid/graphics/Rect;->left:I

    iput v2, v11, Landroid/graphics/Rect;->top:I

    iput v2, v11, Landroid/graphics/Rect;->left:I

    iput v2, v10, Landroid/graphics/Rect;->top:I

    iput v2, v10, Landroid/graphics/Rect;->left:I

    .line 7414
    const/16 v2, 0x2710

    iput v2, v12, Landroid/graphics/Rect;->bottom:I

    iput v2, v12, Landroid/graphics/Rect;->right:I

    iput v2, v11, Landroid/graphics/Rect;->bottom:I

    iput v2, v11, Landroid/graphics/Rect;->right:I

    iput v2, v10, Landroid/graphics/Rect;->bottom:I

    iput v2, v10, Landroid/graphics/Rect;->right:I

    .line 7422
    :cond_169
    move-object/from16 v0, p0

    move-object/from16 v1, v16

    invoke-direct {v0, v1, v4}, shouldUseOutsets(Landroid/view/WindowManager$LayoutParams;I)Z

    move-result v2

    if-eqz v2, :cond_eaa

    invoke-virtual/range {v17 .. v17}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->isNormal()Z

    move-result v2

    if-eqz v2, :cond_eaa

    const/16 v46, 0x1

    .line 7426
    .local v46, "useOutsets":Z
    :goto_17b
    if-eqz v28, :cond_edb

    if-eqz v46, :cond_edb

    .line 7427
    sget-object v15, mTmpOutsetFrame:Landroid/graphics/Rect;

    .line 7428
    .end local v38    # "osf":Landroid/graphics/Rect;
    .local v15, "osf":Landroid/graphics/Rect;
    iget v2, v11, Landroid/graphics/Rect;->left:I

    iget v3, v11, Landroid/graphics/Rect;->top:I

    iget v6, v11, Landroid/graphics/Rect;->right:I

    iget v7, v11, Landroid/graphics/Rect;->bottom:I

    invoke-virtual {v15, v2, v3, v6, v7}, Landroid/graphics/Rect;->set(IIII)V

    .line 7429
    move-object/from16 v0, p0

    iget-object v2, v0, mContext:Landroid/content/Context;

    invoke-virtual {v2}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    move-result-object v2

    invoke-static {v2}, Lcom/android/internal/util/ScreenShapeHelper;->getWindowOutsetBottomPx(Landroid/content/res/Resources;)I

    move-result v39

    .line 7430
    .local v39, "outset":I
    if-lez v39, :cond_1dc

    .line 7431
    move-object/from16 v0, p0

    iget v0, v0, mDisplayRotation:I

    move/from16 v40, v0

    .line 7432
    .local v40, "rotation":I
    if-nez v40, :cond_eae

    .line 7433
    iget v2, v15, Landroid/graphics/Rect;->bottom:I

    add-int v2, v2, v39

    iput v2, v15, Landroid/graphics/Rect;->bottom:I

    .line 7441
    :cond_1a8
    :goto_1a8
    sget-boolean v2, DEBUG_LAYOUT:Z

    if-eqz v2, :cond_1dc

    const-string v2, "WindowManager"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v6, "applying bottom outset of "

    invoke-virtual {v3, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    move/from16 v0, v39

    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v3

    const-string v6, " with rotation "

    invoke-virtual {v3, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    move/from16 v0, v40

    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v3

    const-string v6, ", result: "

    invoke-virtual {v3, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3, v15}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 7446
    .end local v39    # "outset":I
    .end local v40    # "rotation":I
    :cond_1dc
    :goto_1dc
    sget-boolean v2, DEBUG_LAYOUT:Z

    if-eqz v2, :cond_2a9

    const-string v3, "WindowManager"

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v6, "Compute frame "

    invoke-virtual {v2, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual/range {v16 .. v16}, Landroid/view/WindowManager$LayoutParams;->getTitle()Ljava/lang/CharSequence;

    move-result-object v6

    invoke-virtual {v2, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string v6, ": sim=#"

    invoke-virtual {v2, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-static/range {v42 .. v42}, Ljava/lang/Integer;->toHexString(I)Ljava/lang/String;

    move-result-object v6

    invoke-virtual {v2, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string v6, " attach="

    invoke-virtual {v2, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    move-object/from16 v0, p2

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string v6, " type="

    invoke-virtual {v2, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    move-object/from16 v0, v16

    iget v6, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    invoke-virtual {v2, v6}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string v6, " flags=0x%08x"

    const/4 v7, 0x1

    new-array v7, v7, [Ljava/lang/Object;

    const/4 v13, 0x0

    invoke-static {v4}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v14

    aput-object v14, v7, v13

    invoke-static {v6, v7}, Ljava/lang/String;->format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v6

    invoke-virtual {v2, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string v6, " pf="

    invoke-virtual {v2, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v8}, Landroid/graphics/Rect;->toShortString()Ljava/lang/String;

    move-result-object v6

    invoke-virtual {v2, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string v6, " df="

    invoke-virtual {v2, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v9}, Landroid/graphics/Rect;->toShortString()Ljava/lang/String;

    move-result-object v6

    invoke-virtual {v2, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string v6, " of="

    invoke-virtual {v2, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v10}, Landroid/graphics/Rect;->toShortString()Ljava/lang/String;

    move-result-object v6

    invoke-virtual {v2, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string v6, " cf="

    invoke-virtual {v2, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v11}, Landroid/graphics/Rect;->toShortString()Ljava/lang/String;

    move-result-object v6

    invoke-virtual {v2, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string v6, " vf="

    invoke-virtual {v2, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v12}, Landroid/graphics/Rect;->toShortString()Ljava/lang/String;

    move-result-object v6

    invoke-virtual {v2, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string v6, " dcf="

    invoke-virtual {v2, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual/range {v23 .. v23}, Landroid/graphics/Rect;->toShortString()Ljava/lang/String;

    move-result-object v6

    invoke-virtual {v2, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string v6, " sf="

    invoke-virtual {v2, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual/range {v41 .. v41}, Landroid/graphics/Rect;->toShortString()Ljava/lang/String;

    move-result-object v6

    invoke-virtual {v2, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string v6, " osf="

    invoke-virtual {v2, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    if-nez v15, :cond_ed5

    const-string/jumbo v2, "null"

    :goto_29e
    invoke-virtual {v6, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v3, v2}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    :cond_2a9
    move-object/from16 v7, p1

    move-object/from16 v13, v23

    move-object/from16 v14, v41

    .line 7457
    invoke-interface/range {v7 .. v15}, Landroid/view/WindowManagerPolicy$WindowState;->computeFrameLw(Landroid/graphics/Rect;Landroid/graphics/Rect;Landroid/graphics/Rect;Landroid/graphics/Rect;Landroid/graphics/Rect;Landroid/graphics/Rect;Landroid/graphics/Rect;Landroid/graphics/Rect;)V

    .line 7461
    move-object/from16 v0, v16

    iget v2, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    const/16 v3, 0x7db

    if-eq v2, v3, :cond_2c2

    move-object/from16 v0, v16

    iget v2, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    const/16 v3, 0x8e8

    if-ne v2, v3, :cond_2f9

    :cond_2c2
    invoke-interface/range {p1 .. p1}, Landroid/view/WindowManagerPolicy$WindowState;->isVisibleOrBehindKeyguardLw()Z

    move-result v2

    if-eqz v2, :cond_2f9

    invoke-interface/range {p1 .. p1}, Landroid/view/WindowManagerPolicy$WindowState;->getGivenInsetsPendingLw()Z

    move-result v2

    if-nez v2, :cond_2f9

    invoke-interface/range {p1 .. p1}, Landroid/view/WindowManagerPolicy$WindowState;->isDrawFinishedLw()Z

    move-result v2

    if-eqz v2, :cond_2f9

    .line 7463
    const/4 v2, 0x0

    const/4 v3, 0x0

    move-object/from16 v0, p0

    invoke-virtual {v0, v2, v3}, setLastInputMethodWindowLw(Landroid/view/WindowManagerPolicy$WindowState;Landroid/view/WindowManagerPolicy$WindowState;)V

    .line 7465
    move-object/from16 v0, v16

    iget v2, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    const/16 v3, 0x7db

    if-eq v2, v3, :cond_2f6

    move-object/from16 v0, p0

    iget-object v2, v0, mInputMethod:Landroid/view/WindowManagerPolicy$WindowState;

    if-eqz v2, :cond_2f9

    move-object/from16 v0, p0

    iget-object v2, v0, mInputMethod:Landroid/view/WindowManagerPolicy$WindowState;

    invoke-interface {v2}, Landroid/view/WindowManagerPolicy$WindowState;->getAttrs()Landroid/view/WindowManager$LayoutParams;

    move-result-object v2

    iget v2, v2, Landroid/view/WindowManager$LayoutParams;->height:I

    const/4 v3, -0x1

    if-eq v2, v3, :cond_2f9

    .line 7468
    :cond_2f6
    invoke-direct/range {p0 .. p1}, offsetInputMethodWindowLw(Landroid/view/WindowManagerPolicy$WindowState;)V

    .line 7471
    :cond_2f9
    move-object/from16 v0, v16

    iget v2, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    const/16 v3, 0x7ef

    if-ne v2, v3, :cond_310

    invoke-interface/range {p1 .. p1}, Landroid/view/WindowManagerPolicy$WindowState;->isVisibleOrBehindKeyguardLw()Z

    move-result v2

    if-eqz v2, :cond_310

    invoke-interface/range {p1 .. p1}, Landroid/view/WindowManagerPolicy$WindowState;->getGivenInsetsPendingLw()Z

    move-result v2

    if-nez v2, :cond_310

    .line 7473
    invoke-direct/range {p0 .. p1}, offsetVoiceInputWindowLw(Landroid/view/WindowManagerPolicy$WindowState;)V

    .line 7478
    :cond_310
    if-eqz v36, :cond_43

    .line 7479
    const/4 v2, 0x0

    move-object/from16 v0, p0

    invoke-virtual {v0, v2}, updateSViewCoverLayout(Z)V

    goto/16 :goto_43

    .line 6847
    .end local v4    # "fl":I
    .end local v5    # "adjust":I
    .end local v8    # "pf":Landroid/graphics/Rect;
    .end local v9    # "df":Landroid/graphics/Rect;
    .end local v10    # "of":Landroid/graphics/Rect;
    .end local v11    # "cf":Landroid/graphics/Rect;
    .end local v12    # "vf":Landroid/graphics/Rect;
    .end local v15    # "osf":Landroid/graphics/Rect;
    .end local v17    # "multiWindowStyle":Lcom/samsung/android/multiwindow/MultiWindowStyle;
    .end local v23    # "dcf":Landroid/graphics/Rect;
    .end local v24    # "applySoftInputLayoutInsets":Z
    .end local v25    # "hasNavBar":Z
    .end local v30    # "isStatusBarTransient":Z
    .end local v31    # "layoutDone":Z
    .end local v37    # "needsToOffsetInputMethodTarget":Z
    .end local v41    # "sf":Landroid/graphics/Rect;
    .end local v42    # "sim":I
    .end local v44    # "sysUiFl":I
    .end local v46    # "useOutsets":Z
    :cond_31a
    const/16 v30, 0x0

    goto/16 :goto_66

    .line 6848
    .restart local v30    # "isStatusBarTransient":Z
    :cond_31e
    const/16 v37, 0x0

    goto/16 :goto_78

    .line 6886
    .restart local v4    # "fl":I
    .restart local v8    # "pf":Landroid/graphics/Rect;
    .restart local v9    # "df":Landroid/graphics/Rect;
    .restart local v10    # "of":Landroid/graphics/Rect;
    .restart local v11    # "cf":Landroid/graphics/Rect;
    .restart local v12    # "vf":Landroid/graphics/Rect;
    .restart local v17    # "multiWindowStyle":Lcom/samsung/android/multiwindow/MultiWindowStyle;
    .restart local v23    # "dcf":Landroid/graphics/Rect;
    .restart local v24    # "applySoftInputLayoutInsets":Z
    .restart local v37    # "needsToOffsetInputMethodTarget":Z
    .restart local v38    # "osf":Landroid/graphics/Rect;
    .restart local v41    # "sf":Landroid/graphics/Rect;
    .restart local v42    # "sim":I
    .restart local v44    # "sysUiFl":I
    :cond_322
    const/16 v25, 0x0

    goto/16 :goto_e4

    .line 6894
    .restart local v5    # "adjust":I
    .restart local v25    # "hasNavBar":Z
    :cond_326
    move-object/from16 v0, p0

    iget v2, v0, mOverscanLeft:I

    move-object/from16 v0, p0

    iget v3, v0, mOverscanTop:I

    move-object/from16 v0, p0

    iget v6, v0, mOverscanRight:I

    move-object/from16 v0, p0

    iget v7, v0, mOverscanBottom:I

    move-object/from16 v0, v41

    invoke-virtual {v0, v2, v3, v6, v7}, Landroid/graphics/Rect;->set(IIII)V

    goto/16 :goto_ff

    .line 6904
    :cond_33d
    move-object/from16 v0, p0

    iget v2, v0, mOverscanScreenLeft:I

    iput v2, v11, Landroid/graphics/Rect;->left:I

    iput v2, v10, Landroid/graphics/Rect;->left:I

    iput v2, v9, Landroid/graphics/Rect;->left:I

    iput v2, v8, Landroid/graphics/Rect;->left:I

    .line 6905
    move-object/from16 v0, p0

    iget v2, v0, mOverscanScreenTop:I

    iput v2, v11, Landroid/graphics/Rect;->top:I

    iput v2, v10, Landroid/graphics/Rect;->top:I

    iput v2, v9, Landroid/graphics/Rect;->top:I

    iput v2, v8, Landroid/graphics/Rect;->top:I

    .line 6906
    move-object/from16 v0, p0

    iget v2, v0, mOverscanScreenLeft:I

    move-object/from16 v0, p0

    iget v3, v0, mOverscanScreenWidth:I

    add-int/2addr v2, v3

    iput v2, v11, Landroid/graphics/Rect;->right:I

    iput v2, v10, Landroid/graphics/Rect;->right:I

    iput v2, v9, Landroid/graphics/Rect;->right:I

    iput v2, v8, Landroid/graphics/Rect;->right:I

    .line 6908
    move-object/from16 v0, p0

    iget v2, v0, mOverscanScreenTop:I

    move-object/from16 v0, p0

    iget v3, v0, mOverscanScreenHeight:I

    add-int/2addr v2, v3

    iput v2, v11, Landroid/graphics/Rect;->bottom:I

    iput v2, v10, Landroid/graphics/Rect;->bottom:I

    iput v2, v9, Landroid/graphics/Rect;->bottom:I

    iput v2, v8, Landroid/graphics/Rect;->bottom:I

    goto/16 :goto_10d

    .line 6911
    :cond_379
    move-object/from16 v0, v16

    iget v2, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    const/16 v3, 0x7db

    if-eq v2, v3, :cond_389

    move-object/from16 v0, v16

    iget v2, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    const/16 v3, 0x8e8

    if-ne v2, v3, :cond_415

    .line 6912
    :cond_389
    move-object/from16 v0, p0

    iget v2, v0, mDockLeft:I

    iput v2, v12, Landroid/graphics/Rect;->left:I

    iput v2, v11, Landroid/graphics/Rect;->left:I

    iput v2, v10, Landroid/graphics/Rect;->left:I

    iput v2, v9, Landroid/graphics/Rect;->left:I

    iput v2, v8, Landroid/graphics/Rect;->left:I

    .line 6913
    move-object/from16 v0, p0

    iget v2, v0, mDockTop:I

    iput v2, v12, Landroid/graphics/Rect;->top:I

    iput v2, v11, Landroid/graphics/Rect;->top:I

    iput v2, v10, Landroid/graphics/Rect;->top:I

    iput v2, v9, Landroid/graphics/Rect;->top:I

    iput v2, v8, Landroid/graphics/Rect;->top:I

    .line 6914
    move-object/from16 v0, p0

    iget v2, v0, mDockRight:I

    iput v2, v12, Landroid/graphics/Rect;->right:I

    iput v2, v11, Landroid/graphics/Rect;->right:I

    iput v2, v10, Landroid/graphics/Rect;->right:I

    iput v2, v9, Landroid/graphics/Rect;->right:I

    iput v2, v8, Landroid/graphics/Rect;->right:I

    .line 6916
    move-object/from16 v0, p0

    iget v2, v0, mUnrestrictedScreenTop:I

    move-object/from16 v0, p0

    iget v3, v0, mUnrestrictedScreenHeight:I

    add-int/2addr v2, v3

    iput v2, v10, Landroid/graphics/Rect;->bottom:I

    iput v2, v9, Landroid/graphics/Rect;->bottom:I

    iput v2, v8, Landroid/graphics/Rect;->bottom:I

    .line 6918
    move-object/from16 v0, p0

    iget v2, v0, mStableBottom:I

    iput v2, v12, Landroid/graphics/Rect;->bottom:I

    iput v2, v11, Landroid/graphics/Rect;->bottom:I

    .line 6921
    move-object/from16 v0, p0

    iget-boolean v2, v0, mMobileKeyboardEnabled:Z

    if-eqz v2, :cond_405

    .line 6922
    move-object/from16 v0, v16

    iget v2, v0, Landroid/view/WindowManager$LayoutParams;->samsungFlags:I

    and-int/lit16 v2, v2, 0x800

    if-eqz v2, :cond_405

    .line 6923
    iget v2, v8, Landroid/graphics/Rect;->bottom:I

    move-object/from16 v0, p0

    iget v3, v0, mMobileKeyboardHeight:I

    add-int/2addr v2, v3

    iput v2, v8, Landroid/graphics/Rect;->bottom:I

    .line 6924
    iget v2, v9, Landroid/graphics/Rect;->bottom:I

    move-object/from16 v0, p0

    iget v3, v0, mMobileKeyboardHeight:I

    add-int/2addr v2, v3

    iput v2, v9, Landroid/graphics/Rect;->bottom:I

    .line 6925
    iget v2, v10, Landroid/graphics/Rect;->bottom:I

    move-object/from16 v0, p0

    iget v3, v0, mMobileKeyboardHeight:I

    add-int/2addr v2, v3

    iput v2, v10, Landroid/graphics/Rect;->bottom:I

    .line 6926
    iget v2, v11, Landroid/graphics/Rect;->bottom:I

    move-object/from16 v0, p0

    iget v3, v0, mMobileKeyboardHeight:I

    add-int/2addr v2, v3

    iput v2, v11, Landroid/graphics/Rect;->bottom:I

    .line 6927
    iget v2, v12, Landroid/graphics/Rect;->bottom:I

    move-object/from16 v0, p0

    iget v3, v0, mMobileKeyboardHeight:I

    add-int/2addr v2, v3

    iput v2, v12, Landroid/graphics/Rect;->bottom:I

    .line 6933
    :cond_405
    const/16 v2, 0x50

    move-object/from16 v0, v16

    iput v2, v0, Landroid/view/WindowManager$LayoutParams;->gravity:I

    .line 6934
    invoke-interface/range {p1 .. p1}, Landroid/view/WindowManagerPolicy$WindowState;->getSurfaceLayer()I

    move-result v2

    move-object/from16 v0, p0

    iput v2, v0, mDockLayer:I

    goto/16 :goto_10d

    .line 6935
    :cond_415
    move-object/from16 v0, v16

    iget v2, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    const/16 v3, 0x7ef

    if-ne v2, v3, :cond_471

    .line 6936
    move-object/from16 v0, p0

    iget v2, v0, mUnrestrictedScreenLeft:I

    iput v2, v10, Landroid/graphics/Rect;->left:I

    iput v2, v9, Landroid/graphics/Rect;->left:I

    iput v2, v8, Landroid/graphics/Rect;->left:I

    .line 6937
    move-object/from16 v0, p0

    iget v2, v0, mUnrestrictedScreenTop:I

    iput v2, v10, Landroid/graphics/Rect;->top:I

    iput v2, v9, Landroid/graphics/Rect;->top:I

    iput v2, v8, Landroid/graphics/Rect;->top:I

    .line 6938
    move-object/from16 v0, p0

    iget v2, v0, mUnrestrictedScreenLeft:I

    move-object/from16 v0, p0

    iget v3, v0, mUnrestrictedScreenWidth:I

    add-int/2addr v2, v3

    iput v2, v10, Landroid/graphics/Rect;->right:I

    iput v2, v9, Landroid/graphics/Rect;->right:I

    iput v2, v8, Landroid/graphics/Rect;->right:I

    .line 6939
    move-object/from16 v0, p0

    iget v2, v0, mUnrestrictedScreenTop:I

    move-object/from16 v0, p0

    iget v3, v0, mUnrestrictedScreenHeight:I

    add-int/2addr v2, v3

    iput v2, v10, Landroid/graphics/Rect;->bottom:I

    iput v2, v9, Landroid/graphics/Rect;->bottom:I

    iput v2, v8, Landroid/graphics/Rect;->bottom:I

    .line 6940
    move-object/from16 v0, p0

    iget v2, v0, mStableBottom:I

    iput v2, v12, Landroid/graphics/Rect;->bottom:I

    iput v2, v11, Landroid/graphics/Rect;->bottom:I

    .line 6942
    move-object/from16 v0, p0

    iget v2, v0, mStableRight:I

    iput v2, v12, Landroid/graphics/Rect;->right:I

    iput v2, v11, Landroid/graphics/Rect;->right:I

    .line 6943
    move-object/from16 v0, p0

    iget v2, v0, mStableLeft:I

    iput v2, v12, Landroid/graphics/Rect;->left:I

    iput v2, v11, Landroid/graphics/Rect;->left:I

    .line 6944
    move-object/from16 v0, p0

    iget v2, v0, mStableTop:I

    iput v2, v12, Landroid/graphics/Rect;->top:I

    iput v2, v11, Landroid/graphics/Rect;->top:I

    goto/16 :goto_10d

    .line 6945
    :cond_471
    move-object/from16 v0, p1

    move-object/from16 v1, v34

    if-ne v0, v1, :cond_4cf

    .line 6946
    move-object/from16 v0, p0

    iget v2, v0, mUnrestrictedScreenLeft:I

    iput v2, v10, Landroid/graphics/Rect;->left:I

    iput v2, v9, Landroid/graphics/Rect;->left:I

    iput v2, v8, Landroid/graphics/Rect;->left:I

    .line 6947
    move-object/from16 v0, p0

    iget v2, v0, mUnrestrictedScreenTop:I

    iput v2, v10, Landroid/graphics/Rect;->top:I

    iput v2, v9, Landroid/graphics/Rect;->top:I

    iput v2, v8, Landroid/graphics/Rect;->top:I

    .line 6948
    move-object/from16 v0, p0

    iget v2, v0, mUnrestrictedScreenWidth:I

    move-object/from16 v0, p0

    iget v3, v0, mUnrestrictedScreenLeft:I

    add-int/2addr v2, v3

    iput v2, v10, Landroid/graphics/Rect;->right:I

    iput v2, v9, Landroid/graphics/Rect;->right:I

    iput v2, v8, Landroid/graphics/Rect;->right:I

    .line 6949
    move-object/from16 v0, p0

    iget v2, v0, mUnrestrictedScreenHeight:I

    move-object/from16 v0, p0

    iget v3, v0, mUnrestrictedScreenTop:I

    add-int/2addr v2, v3

    iput v2, v10, Landroid/graphics/Rect;->bottom:I

    iput v2, v9, Landroid/graphics/Rect;->bottom:I

    iput v2, v8, Landroid/graphics/Rect;->bottom:I

    .line 6950
    move-object/from16 v0, p0

    iget v2, v0, mStableLeft:I

    iput v2, v12, Landroid/graphics/Rect;->left:I

    iput v2, v11, Landroid/graphics/Rect;->left:I

    .line 6951
    move-object/from16 v0, p0

    iget v2, v0, mStableTop:I

    iput v2, v12, Landroid/graphics/Rect;->top:I

    iput v2, v11, Landroid/graphics/Rect;->top:I

    .line 6952
    move-object/from16 v0, p0

    iget v2, v0, mStableRight:I

    iput v2, v12, Landroid/graphics/Rect;->right:I

    iput v2, v11, Landroid/graphics/Rect;->right:I

    .line 6953
    move-object/from16 v0, p0

    iget v2, v0, mStableBottom:I

    iput v2, v12, Landroid/graphics/Rect;->bottom:I

    .line 6954
    move-object/from16 v0, p0

    iget v2, v0, mContentBottom:I

    iput v2, v11, Landroid/graphics/Rect;->bottom:I

    goto/16 :goto_10d

    .line 6958
    :cond_4cf
    move-object/from16 v0, p0

    iget v2, v0, mSystemLeft:I

    move-object/from16 v0, v23

    iput v2, v0, Landroid/graphics/Rect;->left:I

    .line 6959
    move-object/from16 v0, p0

    iget v2, v0, mSystemTop:I

    move-object/from16 v0, v23

    iput v2, v0, Landroid/graphics/Rect;->top:I

    .line 6960
    move-object/from16 v0, p0

    iget v2, v0, mSystemRight:I

    move-object/from16 v0, v23

    iput v2, v0, Landroid/graphics/Rect;->right:I

    .line 6961
    move-object/from16 v0, p0

    iget v2, v0, mSystemBottom:I

    move-object/from16 v0, v23

    iput v2, v0, Landroid/graphics/Rect;->bottom:I

    .line 6962
    move-object/from16 v0, v16

    iget v2, v0, Landroid/view/WindowManager$LayoutParams;->privateFlags:I

    and-int/lit16 v2, v2, 0x200

    if-eqz v2, :cond_637

    const/16 v26, 0x1

    .line 6964
    .local v26, "inheritTranslucentDecor":Z
    :goto_4f9
    move-object/from16 v0, v16

    iget v2, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    const/4 v3, 0x1

    if-lt v2, v3, :cond_63b

    move-object/from16 v0, v16

    iget v2, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    const/16 v3, 0x63

    if-gt v2, v3, :cond_63b

    const/16 v27, 0x1

    .line 6967
    .local v27, "isAppWindow":Z
    :goto_50a
    move-object/from16 v0, p1

    move-object/from16 v1, v35

    if-ne v0, v1, :cond_63f

    invoke-interface/range {p1 .. p1}, Landroid/view/WindowManagerPolicy$WindowState;->isAnimatingLw()Z

    move-result v2

    if-nez v2, :cond_63f

    const/16 v45, 0x1

    .line 6970
    .local v45, "topAtRest":Z
    :goto_518
    move-object/from16 v0, v16

    iget v2, v0, Landroid/view/WindowManager$LayoutParams;->x:I

    if-nez v2, :cond_643

    move-object/from16 v0, v16

    iget v2, v0, Landroid/view/WindowManager$LayoutParams;->y:I

    if-nez v2, :cond_643

    move-object/from16 v0, v16

    iget v2, v0, Landroid/view/WindowManager$LayoutParams;->width:I

    const/4 v3, -0x1

    if-ne v2, v3, :cond_643

    move-object/from16 v0, v16

    iget v2, v0, Landroid/view/WindowManager$LayoutParams;->height:I

    const/4 v3, -0x1

    if-ne v2, v3, :cond_643

    const/16 v29, 0x1

    .line 6974
    .local v29, "isFullOpaqueWindow":Z
    :goto_534
    if-eqz v27, :cond_58c

    if-nez v26, :cond_58c

    if-eqz v29, :cond_58c

    invoke-virtual/range {v17 .. v17}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->isNormal()Z

    move-result v2

    if-eqz v2, :cond_58c

    .line 6977
    and-int/lit8 v2, v44, 0x4

    if-nez v2, :cond_647

    and-int/lit16 v2, v4, 0x400

    if-nez v2, :cond_647

    const/high16 v2, 0x4000000

    and-int/2addr v2, v4

    if-nez v2, :cond_647

    .line 6981
    const/high16 v2, -0x80000000

    and-int/2addr v2, v4

    if-nez v2, :cond_55a

    .line 6983
    move-object/from16 v0, p0

    iget v2, v0, mStableTop:I

    move-object/from16 v0, v23

    iput v2, v0, Landroid/graphics/Rect;->top:I

    .line 6985
    :cond_55a
    move-object/from16 v0, p0

    iget v2, v0, mStableTop:I

    move-object/from16 v0, p0

    iput v2, v0, mDockTop:I

    move-object/from16 v0, p0

    iput v2, v0, mCurTop:I

    move-object/from16 v0, p0

    iput v2, v0, mVoiceContentTop:I

    move-object/from16 v0, p0

    iput v2, v0, mContentTop:I

    .line 6994
    :goto_56e
    const/high16 v2, 0x8000000

    and-int/2addr v2, v4

    if-nez v2, :cond_58c

    and-int/lit8 v2, v44, 0x2

    if-nez v2, :cond_58c

    const/high16 v2, -0x80000000

    and-int/2addr v2, v4

    if-nez v2, :cond_58c

    .line 6999
    move-object/from16 v0, p0

    iget v2, v0, mStableBottom:I

    move-object/from16 v0, v23

    iput v2, v0, Landroid/graphics/Rect;->bottom:I

    .line 7000
    move-object/from16 v0, p0

    iget v2, v0, mStableRight:I

    move-object/from16 v0, v23

    iput v2, v0, Landroid/graphics/Rect;->right:I

    .line 7007
    :cond_58c
    invoke-virtual/range {v17 .. v17}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->isSplit()Z

    move-result v2

    if-eqz v2, :cond_5a2

    .line 7008
    move-object/from16 v0, p0

    iget v2, v0, mUnrestrictedScreenTop:I

    move-object/from16 v0, p0

    iput v2, v0, mDockTop:I

    move-object/from16 v0, p0

    iput v2, v0, mCurTop:I

    move-object/from16 v0, p0

    iput v2, v0, mContentTop:I

    .line 7015
    :cond_5a2
    move-object/from16 v0, v16

    iget v2, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    const/16 v3, 0x8cf

    if-ne v2, v3, :cond_5af

    .line 7016
    const/4 v2, 0x0

    move-object/from16 v0, v23

    iput v2, v0, Landroid/graphics/Rect;->top:I

    .line 7021
    :cond_5af
    const v2, 0x10100

    and-int/2addr v2, v4

    const v3, 0x10100

    if-ne v2, v3, :cond_8f9

    .line 7023
    sget-boolean v2, DEBUG_LAYOUT:Z

    if-eqz v2, :cond_5df

    const-string v2, "WindowManager"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v6, "layoutWindowLw("

    invoke-virtual {v3, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual/range {v16 .. v16}, Landroid/view/WindowManager$LayoutParams;->getTitle()Ljava/lang/CharSequence;

    move-result-object v6

    invoke-virtual {v3, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v3

    const-string v6, "): IN_SCREEN, INSET_DECOR"

    invoke-virtual {v3, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 7029
    :cond_5df
    if-eqz p2, :cond_677

    .line 7032
    const/4 v7, 0x1

    move-object/from16 v2, p0

    move-object/from16 v3, p1

    move-object/from16 v6, p2

    invoke-virtual/range {v2 .. v12}, setAttachedWindowFrames(Landroid/view/WindowManagerPolicy$WindowState;IILandroid/view/WindowManagerPolicy$WindowState;ZLandroid/graphics/Rect;Landroid/graphics/Rect;Landroid/graphics/Rect;Landroid/graphics/Rect;Landroid/graphics/Rect;)V

    .line 7387
    :goto_5eb
    if-eqz v29, :cond_10d

    move-object/from16 v0, v16

    iget v2, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    const/16 v3, 0x7ea

    if-ne v2, v3, :cond_10d

    move-object/from16 v0, v16

    iget v2, v0, Landroid/view/WindowManager$LayoutParams;->samsungFlags:I

    const/high16 v3, -0x80000000

    and-int/2addr v2, v3

    if-eqz v2, :cond_10d

    .line 7389
    move-object/from16 v0, p0

    iget v2, v0, mOverscanScreenLeft:I

    iput v2, v10, Landroid/graphics/Rect;->left:I

    iput v2, v9, Landroid/graphics/Rect;->left:I

    iput v2, v8, Landroid/graphics/Rect;->left:I

    .line 7390
    move-object/from16 v0, p0

    iget v2, v0, mOverscanScreenTop:I

    iput v2, v10, Landroid/graphics/Rect;->top:I

    iput v2, v9, Landroid/graphics/Rect;->top:I

    iput v2, v8, Landroid/graphics/Rect;->top:I

    .line 7391
    move-object/from16 v0, p0

    iget v2, v0, mOverscanScreenLeft:I

    move-object/from16 v0, p0

    iget v3, v0, mOverscanScreenWidth:I

    add-int/2addr v2, v3

    iput v2, v10, Landroid/graphics/Rect;->right:I

    iput v2, v9, Landroid/graphics/Rect;->right:I

    iput v2, v8, Landroid/graphics/Rect;->right:I

    .line 7392
    move-object/from16 v0, p0

    iget v2, v0, mOverscanScreenTop:I

    move-object/from16 v0, p0

    iget v3, v0, mOverscanScreenHeight:I

    add-int/2addr v2, v3

    iput v2, v10, Landroid/graphics/Rect;->bottom:I

    iput v2, v9, Landroid/graphics/Rect;->bottom:I

    iput v2, v8, Landroid/graphics/Rect;->bottom:I

    .line 7393
    move-object/from16 v0, v23

    invoke-virtual {v0, v8}, Landroid/graphics/Rect;->set(Landroid/graphics/Rect;)V

    goto/16 :goto_10d

    .line 6962
    .end local v26    # "inheritTranslucentDecor":Z
    .end local v27    # "isAppWindow":Z
    .end local v29    # "isFullOpaqueWindow":Z
    .end local v45    # "topAtRest":Z
    :cond_637
    const/16 v26, 0x0

    goto/16 :goto_4f9

    .line 6964
    .restart local v26    # "inheritTranslucentDecor":Z
    :cond_63b
    const/16 v27, 0x0

    goto/16 :goto_50a

    .line 6967
    .restart local v27    # "isAppWindow":Z
    :cond_63f
    const/16 v45, 0x0

    goto/16 :goto_518

    .line 6970
    .restart local v45    # "topAtRest":Z
    :cond_643
    const/16 v29, 0x0

    goto/16 :goto_534

    .line 6987
    .restart local v29    # "isFullOpaqueWindow":Z
    :cond_647
    and-int/lit16 v2, v4, 0x800

    if-eqz v2, :cond_661

    .line 6988
    move-object/from16 v0, p0

    iget v2, v0, mStableTop:I

    move-object/from16 v0, p0

    iput v2, v0, mDockTop:I

    move-object/from16 v0, p0

    iput v2, v0, mCurTop:I

    move-object/from16 v0, p0

    iput v2, v0, mVoiceContentTop:I

    move-object/from16 v0, p0

    iput v2, v0, mContentTop:I

    goto/16 :goto_56e

    .line 6990
    :cond_661
    move-object/from16 v0, p0

    iget v2, v0, mUnrestrictedScreenTop:I

    move-object/from16 v0, p0

    iput v2, v0, mDockTop:I

    move-object/from16 v0, p0

    iput v2, v0, mCurTop:I

    move-object/from16 v0, p0

    iput v2, v0, mVoiceContentTop:I

    move-object/from16 v0, p0

    iput v2, v0, mContentTop:I

    goto/16 :goto_56e

    .line 7034
    :cond_677
    move-object/from16 v0, v16

    iget v2, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    const/16 v3, 0x7de

    if-eq v2, v3, :cond_68f

    move-object/from16 v0, v16

    iget v2, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    const/16 v3, 0x830

    if-eq v2, v3, :cond_68f

    move-object/from16 v0, v16

    iget v2, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    const/16 v3, 0x7e1

    if-ne v2, v3, :cond_768

    .line 7044
    :cond_68f
    if-eqz v25, :cond_74c

    move-object/from16 v0, p0

    iget v2, v0, mDockLeft:I

    :goto_695
    iput v2, v10, Landroid/graphics/Rect;->left:I

    iput v2, v9, Landroid/graphics/Rect;->left:I

    iput v2, v8, Landroid/graphics/Rect;->left:I

    .line 7046
    move-object/from16 v0, p0

    iget v2, v0, mUnrestrictedScreenTop:I

    iput v2, v10, Landroid/graphics/Rect;->top:I

    iput v2, v9, Landroid/graphics/Rect;->top:I

    iput v2, v8, Landroid/graphics/Rect;->top:I

    .line 7047
    if-eqz v25, :cond_752

    move-object/from16 v0, p0

    iget v2, v0, mRestrictedScreenLeft:I

    move-object/from16 v0, p0

    iget v3, v0, mRestrictedScreenWidth:I

    add-int/2addr v2, v3

    :goto_6b0
    iput v2, v10, Landroid/graphics/Rect;->right:I

    iput v2, v9, Landroid/graphics/Rect;->right:I

    iput v2, v8, Landroid/graphics/Rect;->right:I

    .line 7050
    if-eqz v25, :cond_75d

    move-object/from16 v0, p0

    iget v2, v0, mRestrictedScreenTop:I

    move-object/from16 v0, p0

    iget v3, v0, mRestrictedScreenHeight:I

    add-int/2addr v2, v3

    :goto_6c1
    iput v2, v10, Landroid/graphics/Rect;->bottom:I

    iput v2, v9, Landroid/graphics/Rect;->bottom:I

    iput v2, v8, Landroid/graphics/Rect;->bottom:I

    .line 7054
    sget-boolean v2, DEBUG_LAYOUT:Z

    if-eqz v2, :cond_6fd

    const-string v2, "WindowManager"

    const-string v3, "Laying out status bar window: (%d,%d - %d,%d)"

    const/4 v6, 0x4

    new-array v6, v6, [Ljava/lang/Object;

    const/4 v7, 0x0

    iget v13, v8, Landroid/graphics/Rect;->left:I

    invoke-static {v13}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v13

    aput-object v13, v6, v7

    const/4 v7, 0x1

    iget v13, v8, Landroid/graphics/Rect;->top:I

    invoke-static {v13}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v13

    aput-object v13, v6, v7

    const/4 v7, 0x2

    iget v13, v8, Landroid/graphics/Rect;->right:I

    invoke-static {v13}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v13

    aput-object v13, v6, v7

    const/4 v7, 0x3

    iget v13, v8, Landroid/graphics/Rect;->bottom:I

    invoke-static {v13}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v13

    aput-object v13, v6, v7

    invoke-static {v3, v6}, Ljava/lang/String;->format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 7102
    :cond_6fd
    :goto_6fd
    and-int/lit16 v2, v4, 0x400

    if-nez v2, :cond_8b6

    .line 7103
    invoke-interface/range {p1 .. p1}, Landroid/view/WindowManagerPolicy$WindowState;->isVoiceInteraction()Z

    move-result v2

    if-eqz v2, :cond_867

    .line 7104
    move-object/from16 v0, p0

    iget v2, v0, mVoiceContentLeft:I

    iput v2, v11, Landroid/graphics/Rect;->left:I

    .line 7105
    move-object/from16 v0, p0

    iget v2, v0, mVoiceContentTop:I

    iput v2, v11, Landroid/graphics/Rect;->top:I

    .line 7106
    move-object/from16 v0, p0

    iget v2, v0, mVoiceContentRight:I

    iput v2, v11, Landroid/graphics/Rect;->right:I

    .line 7107
    move-object/from16 v0, p0

    iget v2, v0, mVoiceContentBottom:I

    iput v2, v11, Landroid/graphics/Rect;->bottom:I

    .line 7149
    :cond_71f
    :goto_71f
    invoke-virtual/range {v17 .. v17}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->isSplit()Z

    move-result v2

    if-nez v2, :cond_72c

    .line 7151
    move-object/from16 v0, p0

    move/from16 v1, v44

    invoke-direct {v0, v1, v4, v11}, applyStableConstraints(IILandroid/graphics/Rect;)V

    .line 7154
    :cond_72c
    const/16 v2, 0x30

    if-eq v5, v2, :cond_8f4

    if-eqz v24, :cond_8f4

    .line 7155
    move-object/from16 v0, p0

    iget v2, v0, mCurLeft:I

    iput v2, v12, Landroid/graphics/Rect;->left:I

    .line 7156
    move-object/from16 v0, p0

    iget v2, v0, mCurTop:I

    iput v2, v12, Landroid/graphics/Rect;->top:I

    .line 7157
    move-object/from16 v0, p0

    iget v2, v0, mCurRight:I

    iput v2, v12, Landroid/graphics/Rect;->right:I

    .line 7158
    move-object/from16 v0, p0

    iget v2, v0, mCurBottom:I

    iput v2, v12, Landroid/graphics/Rect;->bottom:I

    goto/16 :goto_5eb

    .line 7044
    :cond_74c
    move-object/from16 v0, p0

    iget v2, v0, mUnrestrictedScreenLeft:I

    goto/16 :goto_695

    .line 7047
    :cond_752
    move-object/from16 v0, p0

    iget v2, v0, mUnrestrictedScreenLeft:I

    move-object/from16 v0, p0

    iget v3, v0, mUnrestrictedScreenWidth:I

    add-int/2addr v2, v3

    goto/16 :goto_6b0

    .line 7050
    :cond_75d
    move-object/from16 v0, p0

    iget v2, v0, mUnrestrictedScreenTop:I

    move-object/from16 v0, p0

    iget v3, v0, mUnrestrictedScreenHeight:I

    add-int/2addr v2, v3

    goto/16 :goto_6c1

    .line 7057
    :cond_768
    const/high16 v2, 0x2000000

    and-int/2addr v2, v4

    if-eqz v2, :cond_7b0

    move-object/from16 v0, v16

    iget v2, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    const/4 v3, 0x1

    if-lt v2, v3, :cond_7b0

    move-object/from16 v0, v16

    iget v2, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    const/16 v3, 0x7cf

    if-gt v2, v3, :cond_7b0

    .line 7062
    move-object/from16 v0, p0

    iget v2, v0, mOverscanScreenLeft:I

    iput v2, v10, Landroid/graphics/Rect;->left:I

    iput v2, v9, Landroid/graphics/Rect;->left:I

    iput v2, v8, Landroid/graphics/Rect;->left:I

    .line 7063
    move-object/from16 v0, p0

    iget v2, v0, mOverscanScreenTop:I

    iput v2, v10, Landroid/graphics/Rect;->top:I

    iput v2, v9, Landroid/graphics/Rect;->top:I

    iput v2, v8, Landroid/graphics/Rect;->top:I

    .line 7064
    move-object/from16 v0, p0

    iget v2, v0, mOverscanScreenLeft:I

    move-object/from16 v0, p0

    iget v3, v0, mOverscanScreenWidth:I

    add-int/2addr v2, v3

    iput v2, v10, Landroid/graphics/Rect;->right:I

    iput v2, v9, Landroid/graphics/Rect;->right:I

    iput v2, v8, Landroid/graphics/Rect;->right:I

    .line 7065
    move-object/from16 v0, p0

    iget v2, v0, mOverscanScreenTop:I

    move-object/from16 v0, p0

    iget v3, v0, mOverscanScreenHeight:I

    add-int/2addr v2, v3

    iput v2, v10, Landroid/graphics/Rect;->bottom:I

    iput v2, v9, Landroid/graphics/Rect;->bottom:I

    iput v2, v8, Landroid/graphics/Rect;->bottom:I

    goto/16 :goto_6fd

    .line 7067
    :cond_7b0
    invoke-direct/range {p0 .. p0}, canHideNavigationBar()Z

    move-result v2

    if-eqz v2, :cond_819

    move/from16 v0, v44

    and-int/lit16 v2, v0, 0x200

    if-eqz v2, :cond_819

    move-object/from16 v0, v16

    iget v2, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    const/4 v3, 0x1

    if-lt v2, v3, :cond_819

    move-object/from16 v0, v16

    iget v2, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    const/16 v3, 0x7cf

    if-gt v2, v3, :cond_819

    .line 7075
    move-object/from16 v0, p0

    iget v2, v0, mOverscanScreenLeft:I

    iput v2, v9, Landroid/graphics/Rect;->left:I

    iput v2, v8, Landroid/graphics/Rect;->left:I

    .line 7076
    move-object/from16 v0, p0

    iget v2, v0, mOverscanScreenTop:I

    iput v2, v9, Landroid/graphics/Rect;->top:I

    iput v2, v8, Landroid/graphics/Rect;->top:I

    .line 7077
    move-object/from16 v0, p0

    iget v2, v0, mOverscanScreenLeft:I

    move-object/from16 v0, p0

    iget v3, v0, mOverscanScreenWidth:I

    add-int/2addr v2, v3

    iput v2, v9, Landroid/graphics/Rect;->right:I

    iput v2, v8, Landroid/graphics/Rect;->right:I

    .line 7078
    move-object/from16 v0, p0

    iget v2, v0, mOverscanScreenTop:I

    move-object/from16 v0, p0

    iget v3, v0, mOverscanScreenHeight:I

    add-int/2addr v2, v3

    iput v2, v9, Landroid/graphics/Rect;->bottom:I

    iput v2, v8, Landroid/graphics/Rect;->bottom:I

    .line 7082
    move-object/from16 v0, p0

    iget v2, v0, mUnrestrictedScreenLeft:I

    iput v2, v10, Landroid/graphics/Rect;->left:I

    .line 7083
    move-object/from16 v0, p0

    iget v2, v0, mUnrestrictedScreenTop:I

    iput v2, v10, Landroid/graphics/Rect;->top:I

    .line 7084
    move-object/from16 v0, p0

    iget v2, v0, mUnrestrictedScreenLeft:I

    move-object/from16 v0, p0

    iget v3, v0, mUnrestrictedScreenWidth:I

    add-int/2addr v2, v3

    iput v2, v10, Landroid/graphics/Rect;->right:I

    .line 7085
    move-object/from16 v0, p0

    iget v2, v0, mUnrestrictedScreenTop:I

    move-object/from16 v0, p0

    iget v3, v0, mUnrestrictedScreenHeight:I

    add-int/2addr v2, v3

    iput v2, v10, Landroid/graphics/Rect;->bottom:I

    goto/16 :goto_6fd

    .line 7087
    :cond_819
    move-object/from16 v0, p0

    iget v2, v0, mRestrictedOverscanScreenLeft:I

    iput v2, v9, Landroid/graphics/Rect;->left:I

    iput v2, v8, Landroid/graphics/Rect;->left:I

    .line 7088
    move-object/from16 v0, p0

    iget v2, v0, mRestrictedOverscanScreenTop:I

    iput v2, v9, Landroid/graphics/Rect;->top:I

    iput v2, v8, Landroid/graphics/Rect;->top:I

    .line 7089
    move-object/from16 v0, p0

    iget v2, v0, mRestrictedOverscanScreenLeft:I

    move-object/from16 v0, p0

    iget v3, v0, mRestrictedOverscanScreenWidth:I

    add-int/2addr v2, v3

    iput v2, v9, Landroid/graphics/Rect;->right:I

    iput v2, v8, Landroid/graphics/Rect;->right:I

    .line 7091
    move-object/from16 v0, p0

    iget v2, v0, mRestrictedOverscanScreenTop:I

    move-object/from16 v0, p0

    iget v3, v0, mRestrictedOverscanScreenHeight:I

    add-int/2addr v2, v3

    iput v2, v9, Landroid/graphics/Rect;->bottom:I

    iput v2, v8, Landroid/graphics/Rect;->bottom:I

    .line 7096
    move-object/from16 v0, p0

    iget v2, v0, mUnrestrictedScreenLeft:I

    iput v2, v10, Landroid/graphics/Rect;->left:I

    .line 7097
    move-object/from16 v0, p0

    iget v2, v0, mUnrestrictedScreenTop:I

    iput v2, v10, Landroid/graphics/Rect;->top:I

    .line 7098
    move-object/from16 v0, p0

    iget v2, v0, mUnrestrictedScreenLeft:I

    move-object/from16 v0, p0

    iget v3, v0, mUnrestrictedScreenWidth:I

    add-int/2addr v2, v3

    iput v2, v10, Landroid/graphics/Rect;->right:I

    .line 7099
    move-object/from16 v0, p0

    iget v2, v0, mUnrestrictedScreenTop:I

    move-object/from16 v0, p0

    iget v3, v0, mUnrestrictedScreenHeight:I

    add-int/2addr v2, v3

    iput v2, v10, Landroid/graphics/Rect;->bottom:I

    goto/16 :goto_6fd

    .line 7109
    :cond_867
    const/16 v2, 0x10

    if-eq v5, v2, :cond_89c

    .line 7110
    invoke-virtual/range {v17 .. v17}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->isSplit()Z

    move-result v2

    if-nez v2, :cond_895

    if-eqz v34, :cond_895

    invoke-interface/range {v34 .. v34}, Landroid/view/WindowManagerPolicy$WindowState;->isVisibleLw()Z

    move-result v2

    if-eqz v2, :cond_895

    if-nez v30, :cond_895

    .line 7113
    move-object/from16 v0, p0

    iget v2, v0, mStableTop:I

    iput v2, v11, Landroid/graphics/Rect;->top:I

    .line 7117
    :goto_881
    move-object/from16 v0, p0

    iget v2, v0, mDockLeft:I

    iput v2, v11, Landroid/graphics/Rect;->left:I

    .line 7118
    move-object/from16 v0, p0

    iget v2, v0, mDockRight:I

    iput v2, v11, Landroid/graphics/Rect;->right:I

    .line 7119
    move-object/from16 v0, p0

    iget v2, v0, mDockBottom:I

    iput v2, v11, Landroid/graphics/Rect;->bottom:I

    goto/16 :goto_71f

    .line 7115
    :cond_895
    move-object/from16 v0, p0

    iget v2, v0, mDockTop:I

    iput v2, v11, Landroid/graphics/Rect;->top:I

    goto :goto_881

    .line 7121
    :cond_89c
    move-object/from16 v0, p0

    iget v2, v0, mContentLeft:I

    iput v2, v11, Landroid/graphics/Rect;->left:I

    .line 7122
    move-object/from16 v0, p0

    iget v2, v0, mContentTop:I

    iput v2, v11, Landroid/graphics/Rect;->top:I

    .line 7123
    move-object/from16 v0, p0

    iget v2, v0, mContentRight:I

    iput v2, v11, Landroid/graphics/Rect;->right:I

    .line 7124
    move-object/from16 v0, p0

    iget v2, v0, mContentBottom:I

    iput v2, v11, Landroid/graphics/Rect;->bottom:I

    goto/16 :goto_71f

    .line 7132
    :cond_8b6
    move-object/from16 v0, p0

    iget v2, v0, mRestrictedScreenLeft:I

    iput v2, v11, Landroid/graphics/Rect;->left:I

    .line 7133
    move-object/from16 v0, p0

    iget v2, v0, mRestrictedScreenTop:I

    iput v2, v11, Landroid/graphics/Rect;->top:I

    .line 7134
    move-object/from16 v0, p0

    iget v2, v0, mRestrictedScreenLeft:I

    move-object/from16 v0, p0

    iget v3, v0, mRestrictedScreenWidth:I

    add-int/2addr v2, v3

    iput v2, v11, Landroid/graphics/Rect;->right:I

    .line 7135
    move-object/from16 v0, p0

    iget v2, v0, mRestrictedScreenTop:I

    move-object/from16 v0, p0

    iget v3, v0, mRestrictedScreenHeight:I

    add-int/2addr v2, v3

    iput v2, v11, Landroid/graphics/Rect;->bottom:I

    .line 7138
    move-object/from16 v0, v16

    iget v2, v0, Landroid/view/WindowManager$LayoutParams;->samsungFlags:I

    and-int/lit8 v2, v2, 0x1

    if-eqz v2, :cond_71f

    .line 7139
    const/16 v2, 0x10

    if-eq v5, v2, :cond_8ec

    .line 7140
    move-object/from16 v0, p0

    iget v2, v0, mDockBottom:I

    iput v2, v11, Landroid/graphics/Rect;->bottom:I

    goto/16 :goto_71f

    .line 7142
    :cond_8ec
    move-object/from16 v0, p0

    iget v2, v0, mContentBottom:I

    iput v2, v11, Landroid/graphics/Rect;->bottom:I

    goto/16 :goto_71f

    .line 7160
    :cond_8f4
    invoke-virtual {v12, v11}, Landroid/graphics/Rect;->set(Landroid/graphics/Rect;)V

    goto/16 :goto_5eb

    .line 7163
    :cond_8f9
    and-int/lit16 v2, v4, 0x100

    if-nez v2, :cond_903

    move/from16 v0, v44

    and-int/lit16 v2, v0, 0x600

    if-eqz v2, :cond_c65

    .line 7166
    :cond_903
    sget-boolean v2, DEBUG_LAYOUT:Z

    if-eqz v2, :cond_92a

    const-string v2, "WindowManager"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v6, "layoutWindowLw("

    invoke-virtual {v3, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual/range {v16 .. v16}, Landroid/view/WindowManager$LayoutParams;->getTitle()Ljava/lang/CharSequence;

    move-result-object v6

    invoke-virtual {v3, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v3

    const-string v6, "): IN_SCREEN"

    invoke-virtual {v3, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 7172
    :cond_92a
    invoke-virtual/range {v17 .. v17}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->isNormal()Z

    move-result v2

    if-nez v2, :cond_93e

    if-eqz p2, :cond_93e

    .line 7176
    const/4 v7, 0x1

    move-object/from16 v2, p0

    move-object/from16 v3, p1

    move-object/from16 v6, p2

    invoke-virtual/range {v2 .. v12}, setAttachedWindowFrames(Landroid/view/WindowManagerPolicy$WindowState;IILandroid/view/WindowManagerPolicy$WindowState;ZLandroid/graphics/Rect;Landroid/graphics/Rect;Landroid/graphics/Rect;Landroid/graphics/Rect;Landroid/graphics/Rect;)V

    goto/16 :goto_5eb

    .line 7180
    :cond_93e
    move-object/from16 v0, v16

    iget v2, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    const/16 v3, 0x7de

    if-eq v2, v3, :cond_95e

    move-object/from16 v0, v16

    iget v2, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    const/16 v3, 0x830

    if-eq v2, v3, :cond_95e

    move-object/from16 v0, v16

    iget v2, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    const/16 v3, 0x7e1

    if-eq v2, v3, :cond_95e

    move-object/from16 v0, v16

    iget v2, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    const/16 v3, 0x7e4

    if-ne v2, v3, :cond_a1d

    .line 7184
    :cond_95e
    if-eqz v25, :cond_a01

    move-object/from16 v0, p0

    iget v2, v0, mDockLeft:I

    :goto_964
    iput v2, v11, Landroid/graphics/Rect;->left:I

    iput v2, v10, Landroid/graphics/Rect;->left:I

    iput v2, v9, Landroid/graphics/Rect;->left:I

    iput v2, v8, Landroid/graphics/Rect;->left:I

    .line 7186
    move-object/from16 v0, p0

    iget v2, v0, mUnrestrictedScreenTop:I

    iput v2, v11, Landroid/graphics/Rect;->top:I

    iput v2, v10, Landroid/graphics/Rect;->top:I

    iput v2, v9, Landroid/graphics/Rect;->top:I

    iput v2, v8, Landroid/graphics/Rect;->top:I

    .line 7187
    if-eqz v25, :cond_a07

    move-object/from16 v0, p0

    iget v2, v0, mRestrictedScreenLeft:I

    move-object/from16 v0, p0

    iget v3, v0, mRestrictedScreenWidth:I

    add-int/2addr v2, v3

    :goto_983
    iput v2, v11, Landroid/graphics/Rect;->right:I

    iput v2, v10, Landroid/graphics/Rect;->right:I

    iput v2, v9, Landroid/graphics/Rect;->right:I

    iput v2, v8, Landroid/graphics/Rect;->right:I

    .line 7190
    if-eqz v25, :cond_a12

    move-object/from16 v0, p0

    iget v2, v0, mRestrictedScreenTop:I

    move-object/from16 v0, p0

    iget v3, v0, mRestrictedScreenHeight:I

    add-int/2addr v2, v3

    :goto_996
    iput v2, v11, Landroid/graphics/Rect;->bottom:I

    iput v2, v10, Landroid/graphics/Rect;->bottom:I

    iput v2, v9, Landroid/graphics/Rect;->bottom:I

    iput v2, v8, Landroid/graphics/Rect;->bottom:I

    .line 7193
    sget-boolean v2, DEBUG_LAYOUT:Z

    if-eqz v2, :cond_9d4

    const-string v2, "WindowManager"

    const-string v3, "Laying out IN_SCREEN status bar window: (%d,%d - %d,%d)"

    const/4 v6, 0x4

    new-array v6, v6, [Ljava/lang/Object;

    const/4 v7, 0x0

    iget v13, v8, Landroid/graphics/Rect;->left:I

    invoke-static {v13}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v13

    aput-object v13, v6, v7

    const/4 v7, 0x1

    iget v13, v8, Landroid/graphics/Rect;->top:I

    invoke-static {v13}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v13

    aput-object v13, v6, v7

    const/4 v7, 0x2

    iget v13, v8, Landroid/graphics/Rect;->right:I

    invoke-static {v13}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v13

    aput-object v13, v6, v7

    const/4 v7, 0x3

    iget v13, v8, Landroid/graphics/Rect;->bottom:I

    invoke-static {v13}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v13

    aput-object v13, v6, v7

    invoke-static {v3, v6}, Ljava/lang/String;->format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 7280
    :cond_9d4
    :goto_9d4
    invoke-virtual/range {v17 .. v17}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->isSplit()Z

    move-result v2

    if-nez v2, :cond_9e1

    .line 7282
    move-object/from16 v0, p0

    move/from16 v1, v44

    invoke-direct {v0, v1, v4, v11}, applyStableConstraints(IILandroid/graphics/Rect;)V

    .line 7285
    :cond_9e1
    const/16 v2, 0x30

    if-eq v5, v2, :cond_c60

    if-eqz v24, :cond_c60

    .line 7286
    move-object/from16 v0, p0

    iget v2, v0, mCurLeft:I

    iput v2, v12, Landroid/graphics/Rect;->left:I

    .line 7287
    move-object/from16 v0, p0

    iget v2, v0, mCurTop:I

    iput v2, v12, Landroid/graphics/Rect;->top:I

    .line 7288
    move-object/from16 v0, p0

    iget v2, v0, mCurRight:I

    iput v2, v12, Landroid/graphics/Rect;->right:I

    .line 7289
    move-object/from16 v0, p0

    iget v2, v0, mCurBottom:I

    iput v2, v12, Landroid/graphics/Rect;->bottom:I

    goto/16 :goto_5eb

    .line 7184
    :cond_a01
    move-object/from16 v0, p0

    iget v2, v0, mUnrestrictedScreenLeft:I

    goto/16 :goto_964

    .line 7187
    :cond_a07
    move-object/from16 v0, p0

    iget v2, v0, mUnrestrictedScreenLeft:I

    move-object/from16 v0, p0

    iget v3, v0, mUnrestrictedScreenWidth:I

    add-int/2addr v2, v3

    goto/16 :goto_983

    .line 7190
    :cond_a12
    move-object/from16 v0, p0

    iget v2, v0, mUnrestrictedScreenTop:I

    move-object/from16 v0, p0

    iget v3, v0, mUnrestrictedScreenHeight:I

    add-int/2addr v2, v3

    goto/16 :goto_996

    .line 7196
    :cond_a1d
    move-object/from16 v0, v16

    iget v2, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    const/16 v3, 0x7e3

    if-eq v2, v3, :cond_a2d

    move-object/from16 v0, v16

    iget v2, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    const/16 v3, 0x7e8

    if-ne v2, v3, :cond_a97

    .line 7199
    :cond_a2d
    move-object/from16 v0, p0

    iget v2, v0, mUnrestrictedScreenLeft:I

    iput v2, v10, Landroid/graphics/Rect;->left:I

    iput v2, v9, Landroid/graphics/Rect;->left:I

    iput v2, v8, Landroid/graphics/Rect;->left:I

    .line 7200
    move-object/from16 v0, p0

    iget v2, v0, mUnrestrictedScreenTop:I

    iput v2, v10, Landroid/graphics/Rect;->top:I

    iput v2, v9, Landroid/graphics/Rect;->top:I

    iput v2, v8, Landroid/graphics/Rect;->top:I

    .line 7201
    move-object/from16 v0, p0

    iget v2, v0, mUnrestrictedScreenLeft:I

    move-object/from16 v0, p0

    iget v3, v0, mUnrestrictedScreenWidth:I

    add-int/2addr v2, v3

    iput v2, v10, Landroid/graphics/Rect;->right:I

    iput v2, v9, Landroid/graphics/Rect;->right:I

    iput v2, v8, Landroid/graphics/Rect;->right:I

    .line 7203
    move-object/from16 v0, p0

    iget v2, v0, mUnrestrictedScreenTop:I

    move-object/from16 v0, p0

    iget v3, v0, mUnrestrictedScreenHeight:I

    add-int/2addr v2, v3

    iput v2, v10, Landroid/graphics/Rect;->bottom:I

    iput v2, v9, Landroid/graphics/Rect;->bottom:I

    iput v2, v8, Landroid/graphics/Rect;->bottom:I

    .line 7205
    sget-boolean v2, DEBUG_LAYOUT:Z

    if-eqz v2, :cond_9d4

    const-string v2, "WindowManager"

    const-string v3, "Laying out navigation bar window: (%d,%d - %d,%d)"

    const/4 v6, 0x4

    new-array v6, v6, [Ljava/lang/Object;

    const/4 v7, 0x0

    iget v13, v8, Landroid/graphics/Rect;->left:I

    invoke-static {v13}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v13

    aput-object v13, v6, v7

    const/4 v7, 0x1

    iget v13, v8, Landroid/graphics/Rect;->top:I

    invoke-static {v13}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v13

    aput-object v13, v6, v7

    const/4 v7, 0x2

    iget v13, v8, Landroid/graphics/Rect;->right:I

    invoke-static {v13}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v13

    aput-object v13, v6, v7

    const/4 v7, 0x3

    iget v13, v8, Landroid/graphics/Rect;->bottom:I

    invoke-static {v13}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v13

    aput-object v13, v6, v7

    invoke-static {v3, v6}, Ljava/lang/String;->format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    goto/16 :goto_9d4

    .line 7208
    :cond_a97
    move-object/from16 v0, v16

    iget v2, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    const/16 v3, 0x7df

    if-eq v2, v3, :cond_ab7

    move-object/from16 v0, v16

    iget v2, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    const/16 v3, 0x7e5

    if-eq v2, v3, :cond_ab7

    move-object/from16 v0, v16

    iget v2, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    const/16 v3, 0x8b6

    if-eq v2, v3, :cond_ab7

    move-object/from16 v0, v16

    iget v2, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    const/16 v3, 0x8b1

    if-ne v2, v3, :cond_af7

    :cond_ab7
    and-int/lit16 v2, v4, 0x400

    if-eqz v2, :cond_af7

    .line 7214
    move-object/from16 v0, p0

    iget v2, v0, mOverscanScreenLeft:I

    iput v2, v11, Landroid/graphics/Rect;->left:I

    iput v2, v10, Landroid/graphics/Rect;->left:I

    iput v2, v9, Landroid/graphics/Rect;->left:I

    iput v2, v8, Landroid/graphics/Rect;->left:I

    .line 7215
    move-object/from16 v0, p0

    iget v2, v0, mOverscanScreenTop:I

    iput v2, v11, Landroid/graphics/Rect;->top:I

    iput v2, v10, Landroid/graphics/Rect;->top:I

    iput v2, v9, Landroid/graphics/Rect;->top:I

    iput v2, v8, Landroid/graphics/Rect;->top:I

    .line 7216
    move-object/from16 v0, p0

    iget v2, v0, mOverscanScreenLeft:I

    move-object/from16 v0, p0

    iget v3, v0, mOverscanScreenWidth:I

    add-int/2addr v2, v3

    iput v2, v11, Landroid/graphics/Rect;->right:I

    iput v2, v10, Landroid/graphics/Rect;->right:I

    iput v2, v9, Landroid/graphics/Rect;->right:I

    iput v2, v8, Landroid/graphics/Rect;->right:I

    .line 7218
    move-object/from16 v0, p0

    iget v2, v0, mOverscanScreenTop:I

    move-object/from16 v0, p0

    iget v3, v0, mOverscanScreenHeight:I

    add-int/2addr v2, v3

    iput v2, v11, Landroid/graphics/Rect;->bottom:I

    iput v2, v10, Landroid/graphics/Rect;->bottom:I

    iput v2, v9, Landroid/graphics/Rect;->bottom:I

    iput v2, v8, Landroid/graphics/Rect;->bottom:I

    goto/16 :goto_9d4

    .line 7220
    :cond_af7
    move-object/from16 v0, v16

    iget v2, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    const/16 v3, 0x7e5

    if-ne v2, v3, :cond_aff

    .line 7228
    :cond_aff
    move-object/from16 v0, v16

    iget v2, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    const/16 v3, 0x7dd

    if-eq v2, v3, :cond_b0f

    move-object/from16 v0, v16

    iget v2, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    const/16 v3, 0x832

    if-ne v2, v3, :cond_b65

    .line 7231
    :cond_b0f
    move-object/from16 v0, p0

    iget v2, v0, mOverscanScreenLeft:I

    iput v2, v9, Landroid/graphics/Rect;->left:I

    iput v2, v8, Landroid/graphics/Rect;->left:I

    .line 7232
    move-object/from16 v0, p0

    iget v2, v0, mOverscanScreenTop:I

    iput v2, v9, Landroid/graphics/Rect;->top:I

    iput v2, v8, Landroid/graphics/Rect;->top:I

    .line 7233
    move-object/from16 v0, p0

    iget v2, v0, mOverscanScreenLeft:I

    move-object/from16 v0, p0

    iget v3, v0, mOverscanScreenWidth:I

    add-int/2addr v2, v3

    iput v2, v9, Landroid/graphics/Rect;->right:I

    iput v2, v8, Landroid/graphics/Rect;->right:I

    .line 7234
    move-object/from16 v0, p0

    iget v2, v0, mOverscanScreenTop:I

    move-object/from16 v0, p0

    iget v3, v0, mOverscanScreenHeight:I

    add-int/2addr v2, v3

    iput v2, v9, Landroid/graphics/Rect;->bottom:I

    iput v2, v8, Landroid/graphics/Rect;->bottom:I

    .line 7235
    move-object/from16 v0, p0

    iget v2, v0, mUnrestrictedScreenLeft:I

    iput v2, v11, Landroid/graphics/Rect;->left:I

    iput v2, v10, Landroid/graphics/Rect;->left:I

    .line 7236
    move-object/from16 v0, p0

    iget v2, v0, mUnrestrictedScreenTop:I

    iput v2, v11, Landroid/graphics/Rect;->top:I

    iput v2, v10, Landroid/graphics/Rect;->top:I

    .line 7237
    move-object/from16 v0, p0

    iget v2, v0, mUnrestrictedScreenLeft:I

    move-object/from16 v0, p0

    iget v3, v0, mUnrestrictedScreenWidth:I

    add-int/2addr v2, v3

    iput v2, v11, Landroid/graphics/Rect;->right:I

    iput v2, v10, Landroid/graphics/Rect;->right:I

    .line 7238
    move-object/from16 v0, p0

    iget v2, v0, mUnrestrictedScreenTop:I

    move-object/from16 v0, p0

    iget v3, v0, mUnrestrictedScreenHeight:I

    add-int/2addr v2, v3

    iput v2, v11, Landroid/graphics/Rect;->bottom:I

    iput v2, v10, Landroid/graphics/Rect;->bottom:I

    goto/16 :goto_9d4

    .line 7239
    :cond_b65
    const/high16 v2, 0x2000000

    and-int/2addr v2, v4

    if-eqz v2, :cond_bb5

    move-object/from16 v0, v16

    iget v2, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    const/4 v3, 0x1

    if-lt v2, v3, :cond_bb5

    move-object/from16 v0, v16

    iget v2, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    const/16 v3, 0x7cf

    if-gt v2, v3, :cond_bb5

    .line 7244
    move-object/from16 v0, p0

    iget v2, v0, mOverscanScreenLeft:I

    iput v2, v11, Landroid/graphics/Rect;->left:I

    iput v2, v10, Landroid/graphics/Rect;->left:I

    iput v2, v9, Landroid/graphics/Rect;->left:I

    iput v2, v8, Landroid/graphics/Rect;->left:I

    .line 7245
    move-object/from16 v0, p0

    iget v2, v0, mOverscanScreenTop:I

    iput v2, v11, Landroid/graphics/Rect;->top:I

    iput v2, v10, Landroid/graphics/Rect;->top:I

    iput v2, v9, Landroid/graphics/Rect;->top:I

    iput v2, v8, Landroid/graphics/Rect;->top:I

    .line 7246
    move-object/from16 v0, p0

    iget v2, v0, mOverscanScreenLeft:I

    move-object/from16 v0, p0

    iget v3, v0, mOverscanScreenWidth:I

    add-int/2addr v2, v3

    iput v2, v11, Landroid/graphics/Rect;->right:I

    iput v2, v10, Landroid/graphics/Rect;->right:I

    iput v2, v9, Landroid/graphics/Rect;->right:I

    iput v2, v8, Landroid/graphics/Rect;->right:I

    .line 7248
    move-object/from16 v0, p0

    iget v2, v0, mOverscanScreenTop:I

    move-object/from16 v0, p0

    iget v3, v0, mOverscanScreenHeight:I

    add-int/2addr v2, v3

    iput v2, v11, Landroid/graphics/Rect;->bottom:I

    iput v2, v10, Landroid/graphics/Rect;->bottom:I

    iput v2, v9, Landroid/graphics/Rect;->bottom:I

    iput v2, v8, Landroid/graphics/Rect;->bottom:I

    goto/16 :goto_9d4

    .line 7250
    :cond_bb5
    invoke-direct/range {p0 .. p0}, canHideNavigationBar()Z

    move-result v2

    if-eqz v2, :cond_c24

    move/from16 v0, v44

    and-int/lit16 v2, v0, 0x200

    if-eqz v2, :cond_c24

    move-object/from16 v0, v16

    iget v2, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    const/16 v3, 0x7d0

    if-eq v2, v3, :cond_be8

    move-object/from16 v0, v16

    iget v2, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    const/16 v3, 0x7d5

    if-eq v2, v3, :cond_be8

    move-object/from16 v0, v16

    iget v2, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    const/16 v3, 0x7f1

    if-eq v2, v3, :cond_be8

    move-object/from16 v0, v16

    iget v2, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    const/4 v3, 0x1

    if-lt v2, v3, :cond_c24

    move-object/from16 v0, v16

    iget v2, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    const/16 v3, 0x7cf

    if-gt v2, v3, :cond_c24

    .line 7264
    :cond_be8
    move-object/from16 v0, p0

    iget v2, v0, mUnrestrictedScreenLeft:I

    iput v2, v11, Landroid/graphics/Rect;->left:I

    iput v2, v10, Landroid/graphics/Rect;->left:I

    iput v2, v9, Landroid/graphics/Rect;->left:I

    iput v2, v8, Landroid/graphics/Rect;->left:I

    .line 7265
    move-object/from16 v0, p0

    iget v2, v0, mUnrestrictedScreenTop:I

    iput v2, v11, Landroid/graphics/Rect;->top:I

    iput v2, v10, Landroid/graphics/Rect;->top:I

    iput v2, v9, Landroid/graphics/Rect;->top:I

    iput v2, v8, Landroid/graphics/Rect;->top:I

    .line 7266
    move-object/from16 v0, p0

    iget v2, v0, mUnrestrictedScreenLeft:I

    move-object/from16 v0, p0

    iget v3, v0, mUnrestrictedScreenWidth:I

    add-int/2addr v2, v3

    iput v2, v11, Landroid/graphics/Rect;->right:I

    iput v2, v10, Landroid/graphics/Rect;->right:I

    iput v2, v9, Landroid/graphics/Rect;->right:I

    iput v2, v8, Landroid/graphics/Rect;->right:I

    .line 7268
    move-object/from16 v0, p0

    iget v2, v0, mUnrestrictedScreenTop:I

    move-object/from16 v0, p0

    iget v3, v0, mUnrestrictedScreenHeight:I

    add-int/2addr v2, v3

    iput v2, v11, Landroid/graphics/Rect;->bottom:I

    iput v2, v10, Landroid/graphics/Rect;->bottom:I

    iput v2, v9, Landroid/graphics/Rect;->bottom:I

    iput v2, v8, Landroid/graphics/Rect;->bottom:I

    goto/16 :goto_9d4

    .line 7271
    :cond_c24
    move-object/from16 v0, p0

    iget v2, v0, mRestrictedScreenLeft:I

    iput v2, v11, Landroid/graphics/Rect;->left:I

    iput v2, v10, Landroid/graphics/Rect;->left:I

    iput v2, v9, Landroid/graphics/Rect;->left:I

    iput v2, v8, Landroid/graphics/Rect;->left:I

    .line 7272
    move-object/from16 v0, p0

    iget v2, v0, mRestrictedScreenTop:I

    iput v2, v11, Landroid/graphics/Rect;->top:I

    iput v2, v10, Landroid/graphics/Rect;->top:I

    iput v2, v9, Landroid/graphics/Rect;->top:I

    iput v2, v8, Landroid/graphics/Rect;->top:I

    .line 7273
    move-object/from16 v0, p0

    iget v2, v0, mRestrictedScreenLeft:I

    move-object/from16 v0, p0

    iget v3, v0, mRestrictedScreenWidth:I

    add-int/2addr v2, v3

    iput v2, v11, Landroid/graphics/Rect;->right:I

    iput v2, v10, Landroid/graphics/Rect;->right:I

    iput v2, v9, Landroid/graphics/Rect;->right:I

    iput v2, v8, Landroid/graphics/Rect;->right:I

    .line 7275
    move-object/from16 v0, p0

    iget v2, v0, mRestrictedScreenTop:I

    move-object/from16 v0, p0

    iget v3, v0, mRestrictedScreenHeight:I

    add-int/2addr v2, v3

    iput v2, v11, Landroid/graphics/Rect;->bottom:I

    iput v2, v10, Landroid/graphics/Rect;->bottom:I

    iput v2, v9, Landroid/graphics/Rect;->bottom:I

    iput v2, v8, Landroid/graphics/Rect;->bottom:I

    goto/16 :goto_9d4

    .line 7291
    :cond_c60
    invoke-virtual {v12, v11}, Landroid/graphics/Rect;->set(Landroid/graphics/Rect;)V

    goto/16 :goto_5eb

    .line 7296
    :cond_c65
    if-eqz p2, :cond_ca0

    .line 7297
    sget-boolean v2, DEBUG_LAYOUT:Z

    if-eqz v2, :cond_c94

    const-string v2, "WindowManager"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v6, "layoutWindowLw("

    invoke-virtual {v3, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual/range {v16 .. v16}, Landroid/view/WindowManager$LayoutParams;->getTitle()Ljava/lang/CharSequence;

    move-result-object v6

    invoke-virtual {v3, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v3

    const-string v6, "): attached to "

    invoke-virtual {v3, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    move-object/from16 v0, p2

    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 7301
    :cond_c94
    const/4 v7, 0x0

    move-object/from16 v2, p0

    move-object/from16 v3, p1

    move-object/from16 v6, p2

    invoke-virtual/range {v2 .. v12}, setAttachedWindowFrames(Landroid/view/WindowManagerPolicy$WindowState;IILandroid/view/WindowManagerPolicy$WindowState;ZLandroid/graphics/Rect;Landroid/graphics/Rect;Landroid/graphics/Rect;Landroid/graphics/Rect;Landroid/graphics/Rect;)V

    goto/16 :goto_5eb

    .line 7303
    :cond_ca0
    sget-boolean v2, DEBUG_LAYOUT:Z

    if-eqz v2, :cond_cc7

    const-string v2, "WindowManager"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v6, "layoutWindowLw("

    invoke-virtual {v3, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual/range {v16 .. v16}, Landroid/view/WindowManager$LayoutParams;->getTitle()Ljava/lang/CharSequence;

    move-result-object v6

    invoke-virtual {v3, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v3

    const-string v6, "): normal window"

    invoke-virtual {v3, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 7307
    :cond_cc7
    move-object/from16 v0, v16

    iget v2, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    const/16 v3, 0x7de

    if-eq v2, v3, :cond_cdf

    move-object/from16 v0, v16

    iget v2, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    const/16 v3, 0x7e4

    if-eq v2, v3, :cond_cdf

    move-object/from16 v0, v16

    iget v2, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    const/16 v3, 0x830

    if-ne v2, v3, :cond_d1b

    .line 7313
    :cond_cdf
    move-object/from16 v0, p0

    iget v2, v0, mRestrictedScreenLeft:I

    iput v2, v11, Landroid/graphics/Rect;->left:I

    iput v2, v10, Landroid/graphics/Rect;->left:I

    iput v2, v9, Landroid/graphics/Rect;->left:I

    iput v2, v8, Landroid/graphics/Rect;->left:I

    .line 7314
    move-object/from16 v0, p0

    iget v2, v0, mRestrictedScreenTop:I

    iput v2, v11, Landroid/graphics/Rect;->top:I

    iput v2, v10, Landroid/graphics/Rect;->top:I

    iput v2, v9, Landroid/graphics/Rect;->top:I

    iput v2, v8, Landroid/graphics/Rect;->top:I

    .line 7315
    move-object/from16 v0, p0

    iget v2, v0, mRestrictedScreenLeft:I

    move-object/from16 v0, p0

    iget v3, v0, mRestrictedScreenWidth:I

    add-int/2addr v2, v3

    iput v2, v11, Landroid/graphics/Rect;->right:I

    iput v2, v10, Landroid/graphics/Rect;->right:I

    iput v2, v9, Landroid/graphics/Rect;->right:I

    iput v2, v8, Landroid/graphics/Rect;->right:I

    .line 7317
    move-object/from16 v0, p0

    iget v2, v0, mRestrictedScreenTop:I

    move-object/from16 v0, p0

    iget v3, v0, mRestrictedScreenHeight:I

    add-int/2addr v2, v3

    iput v2, v11, Landroid/graphics/Rect;->bottom:I

    iput v2, v10, Landroid/graphics/Rect;->bottom:I

    iput v2, v9, Landroid/graphics/Rect;->bottom:I

    iput v2, v8, Landroid/graphics/Rect;->bottom:I

    goto/16 :goto_5eb

    .line 7319
    :cond_d1b
    move-object/from16 v0, v16

    iget v2, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    const/16 v3, 0x7d5

    if-eq v2, v3, :cond_d2b

    move-object/from16 v0, v16

    iget v2, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    const/16 v3, 0x7d3

    if-ne v2, v3, :cond_d5d

    .line 7321
    :cond_d2b
    move-object/from16 v0, p0

    iget v2, v0, mStableLeft:I

    iput v2, v11, Landroid/graphics/Rect;->left:I

    iput v2, v10, Landroid/graphics/Rect;->left:I

    iput v2, v9, Landroid/graphics/Rect;->left:I

    iput v2, v8, Landroid/graphics/Rect;->left:I

    .line 7322
    move-object/from16 v0, p0

    iget v2, v0, mStableTop:I

    iput v2, v11, Landroid/graphics/Rect;->top:I

    iput v2, v10, Landroid/graphics/Rect;->top:I

    iput v2, v9, Landroid/graphics/Rect;->top:I

    iput v2, v8, Landroid/graphics/Rect;->top:I

    .line 7323
    move-object/from16 v0, p0

    iget v2, v0, mStableRight:I

    iput v2, v11, Landroid/graphics/Rect;->right:I

    iput v2, v10, Landroid/graphics/Rect;->right:I

    iput v2, v9, Landroid/graphics/Rect;->right:I

    iput v2, v8, Landroid/graphics/Rect;->right:I

    .line 7324
    move-object/from16 v0, p0

    iget v2, v0, mStableBottom:I

    iput v2, v11, Landroid/graphics/Rect;->bottom:I

    iput v2, v10, Landroid/graphics/Rect;->bottom:I

    iput v2, v9, Landroid/graphics/Rect;->bottom:I

    iput v2, v8, Landroid/graphics/Rect;->bottom:I

    goto/16 :goto_5eb

    .line 7325
    :cond_d5d
    move-object/from16 v0, v16

    iget v2, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    const/16 v3, 0x8df

    if-ne v2, v3, :cond_da6

    .line 7326
    move-object/from16 v0, p0

    iget v2, v0, mOverscanScreenLeft:I

    iput v2, v11, Landroid/graphics/Rect;->left:I

    iput v2, v10, Landroid/graphics/Rect;->left:I

    iput v2, v9, Landroid/graphics/Rect;->left:I

    iput v2, v8, Landroid/graphics/Rect;->left:I

    .line 7327
    move-object/from16 v0, p0

    iget v2, v0, mOverscanScreenTop:I

    iput v2, v11, Landroid/graphics/Rect;->top:I

    iput v2, v10, Landroid/graphics/Rect;->top:I

    iput v2, v9, Landroid/graphics/Rect;->top:I

    iput v2, v8, Landroid/graphics/Rect;->top:I

    .line 7328
    move-object/from16 v0, p0

    iget v2, v0, mOverscanScreenLeft:I

    move-object/from16 v0, p0

    iget v3, v0, mOverscanScreenWidth:I

    add-int/2addr v2, v3

    iput v2, v11, Landroid/graphics/Rect;->right:I

    iput v2, v10, Landroid/graphics/Rect;->right:I

    iput v2, v9, Landroid/graphics/Rect;->right:I

    iput v2, v8, Landroid/graphics/Rect;->right:I

    .line 7330
    move-object/from16 v0, p0

    iget v2, v0, mOverscanScreenTop:I

    move-object/from16 v0, p0

    iget v3, v0, mOverscanScreenHeight:I

    add-int/2addr v2, v3

    iput v2, v11, Landroid/graphics/Rect;->bottom:I

    iput v2, v10, Landroid/graphics/Rect;->bottom:I

    iput v2, v9, Landroid/graphics/Rect;->bottom:I

    iput v2, v8, Landroid/graphics/Rect;->bottom:I

    .line 7332
    move-object/from16 v0, v23

    invoke-virtual {v0, v8}, Landroid/graphics/Rect;->set(Landroid/graphics/Rect;)V

    goto/16 :goto_5eb

    .line 7334
    :cond_da6
    move-object/from16 v0, p0

    iget v2, v0, mContentLeft:I

    iput v2, v8, Landroid/graphics/Rect;->left:I

    .line 7337
    invoke-virtual/range {v17 .. v17}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->isCascade()Z

    move-result v2

    if-eqz v2, :cond_e15

    .line 7338
    const/4 v2, 0x0

    iput v2, v8, Landroid/graphics/Rect;->top:I

    .line 7339
    move-object/from16 v0, p0

    iget v2, v0, mDockBottom:I

    iput v2, v8, Landroid/graphics/Rect;->bottom:I

    .line 7358
    :goto_dbb
    move-object/from16 v0, p0

    iget v2, v0, mContentRight:I

    iput v2, v8, Landroid/graphics/Rect;->right:I

    .line 7359
    move-object/from16 v0, p0

    iget v2, v0, mContentBottom:I

    iput v2, v8, Landroid/graphics/Rect;->bottom:I

    .line 7360
    invoke-interface/range {p1 .. p1}, Landroid/view/WindowManagerPolicy$WindowState;->isVoiceInteraction()Z

    move-result v2

    if-eqz v2, :cond_e4d

    .line 7361
    move-object/from16 v0, p0

    iget v2, v0, mVoiceContentLeft:I

    iput v2, v11, Landroid/graphics/Rect;->left:I

    iput v2, v10, Landroid/graphics/Rect;->left:I

    iput v2, v9, Landroid/graphics/Rect;->left:I

    .line 7362
    move-object/from16 v0, p0

    iget v2, v0, mVoiceContentTop:I

    iput v2, v11, Landroid/graphics/Rect;->top:I

    iput v2, v10, Landroid/graphics/Rect;->top:I

    iput v2, v9, Landroid/graphics/Rect;->top:I

    .line 7363
    move-object/from16 v0, p0

    iget v2, v0, mVoiceContentRight:I

    iput v2, v11, Landroid/graphics/Rect;->right:I

    iput v2, v10, Landroid/graphics/Rect;->right:I

    iput v2, v9, Landroid/graphics/Rect;->right:I

    .line 7364
    move-object/from16 v0, p0

    iget v2, v0, mVoiceContentBottom:I

    iput v2, v11, Landroid/graphics/Rect;->bottom:I

    iput v2, v10, Landroid/graphics/Rect;->bottom:I

    iput v2, v9, Landroid/graphics/Rect;->bottom:I

    .line 7376
    :goto_df5
    const/16 v2, 0x30

    if-eq v5, v2, :cond_ea5

    if-eqz v24, :cond_ea5

    .line 7377
    move-object/from16 v0, p0

    iget v2, v0, mCurLeft:I

    iput v2, v12, Landroid/graphics/Rect;->left:I

    .line 7378
    move-object/from16 v0, p0

    iget v2, v0, mCurTop:I

    iput v2, v12, Landroid/graphics/Rect;->top:I

    .line 7379
    move-object/from16 v0, p0

    iget v2, v0, mCurRight:I

    iput v2, v12, Landroid/graphics/Rect;->right:I

    .line 7380
    move-object/from16 v0, p0

    iget v2, v0, mCurBottom:I

    iput v2, v12, Landroid/graphics/Rect;->bottom:I

    goto/16 :goto_5eb

    .line 7341
    :cond_e15
    const/16 v43, 0x0

    .line 7343
    .local v43, "skipForFloatingWin":Z
    move-object/from16 v0, p0

    iget-object v2, v0, mMultiPhoneWindowManager:Lcom/android/server/policy/multiwindow/MultiPhoneWindowManager;

    invoke-virtual {v2}, Lcom/android/server/policy/multiwindow/MultiPhoneWindowManager;->getLongPressedMinimizeIcon()Landroid/view/WindowManagerPolicy$WindowState;

    move-result-object v2

    if-eqz v2, :cond_e33

    invoke-interface/range {p1 .. p1}, Landroid/view/WindowManagerPolicy$WindowState;->getMultiWindowStyleLw()Lcom/samsung/android/multiwindow/MultiWindowStyle;

    move-result-object v2

    invoke-virtual {v2}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->isNormal()Z

    move-result v2

    if-eqz v2, :cond_e33

    invoke-interface/range {p1 .. p1}, Landroid/view/WindowManagerPolicy$WindowState;->isFloating()Z

    move-result v2

    if-eqz v2, :cond_e33

    .line 7346
    const/16 v43, 0x1

    .line 7350
    :cond_e33
    if-eqz v43, :cond_e46

    .line 7351
    iget v2, v8, Landroid/graphics/Rect;->top:I

    move-object/from16 v0, p0

    iget v3, v0, mStatusBarHeight:I

    add-int/2addr v2, v3

    iput v2, v8, Landroid/graphics/Rect;->top:I

    .line 7356
    :goto_e3e
    move-object/from16 v0, p0

    iget v2, v0, mContentBottom:I

    iput v2, v8, Landroid/graphics/Rect;->bottom:I

    goto/16 :goto_dbb

    .line 7354
    :cond_e46
    move-object/from16 v0, p0

    iget v2, v0, mContentTop:I

    iput v2, v8, Landroid/graphics/Rect;->top:I

    goto :goto_e3e

    .line 7365
    .end local v43    # "skipForFloatingWin":Z
    :cond_e4d
    const/16 v2, 0x10

    if-eq v5, v2, :cond_e7b

    .line 7366
    move-object/from16 v0, p0

    iget v2, v0, mDockLeft:I

    iput v2, v11, Landroid/graphics/Rect;->left:I

    iput v2, v10, Landroid/graphics/Rect;->left:I

    iput v2, v9, Landroid/graphics/Rect;->left:I

    .line 7367
    move-object/from16 v0, p0

    iget v2, v0, mDockTop:I

    iput v2, v11, Landroid/graphics/Rect;->top:I

    iput v2, v10, Landroid/graphics/Rect;->top:I

    iput v2, v9, Landroid/graphics/Rect;->top:I

    .line 7368
    move-object/from16 v0, p0

    iget v2, v0, mDockRight:I

    iput v2, v11, Landroid/graphics/Rect;->right:I

    iput v2, v10, Landroid/graphics/Rect;->right:I

    iput v2, v9, Landroid/graphics/Rect;->right:I

    .line 7369
    move-object/from16 v0, p0

    iget v2, v0, mDockBottom:I

    iput v2, v11, Landroid/graphics/Rect;->bottom:I

    iput v2, v10, Landroid/graphics/Rect;->bottom:I

    iput v2, v9, Landroid/graphics/Rect;->bottom:I

    goto/16 :goto_df5

    .line 7371
    :cond_e7b
    move-object/from16 v0, p0

    iget v2, v0, mContentLeft:I

    iput v2, v11, Landroid/graphics/Rect;->left:I

    iput v2, v10, Landroid/graphics/Rect;->left:I

    iput v2, v9, Landroid/graphics/Rect;->left:I

    .line 7372
    move-object/from16 v0, p0

    iget v2, v0, mContentTop:I

    iput v2, v11, Landroid/graphics/Rect;->top:I

    iput v2, v10, Landroid/graphics/Rect;->top:I

    iput v2, v9, Landroid/graphics/Rect;->top:I

    .line 7373
    move-object/from16 v0, p0

    iget v2, v0, mContentRight:I

    iput v2, v11, Landroid/graphics/Rect;->right:I

    iput v2, v10, Landroid/graphics/Rect;->right:I

    iput v2, v9, Landroid/graphics/Rect;->right:I

    .line 7374
    move-object/from16 v0, p0

    iget v2, v0, mContentBottom:I

    iput v2, v11, Landroid/graphics/Rect;->bottom:I

    iput v2, v10, Landroid/graphics/Rect;->bottom:I

    iput v2, v9, Landroid/graphics/Rect;->bottom:I

    goto/16 :goto_df5

    .line 7382
    :cond_ea5
    invoke-virtual {v12, v11}, Landroid/graphics/Rect;->set(Landroid/graphics/Rect;)V

    goto/16 :goto_5eb

    .line 7422
    .end local v26    # "inheritTranslucentDecor":Z
    .end local v27    # "isAppWindow":Z
    .end local v29    # "isFullOpaqueWindow":Z
    .end local v45    # "topAtRest":Z
    .restart local v31    # "layoutDone":Z
    :cond_eaa
    const/16 v46, 0x0

    goto/16 :goto_17b

    .line 7434
    .end local v38    # "osf":Landroid/graphics/Rect;
    .restart local v15    # "osf":Landroid/graphics/Rect;
    .restart local v39    # "outset":I
    .restart local v40    # "rotation":I
    .restart local v46    # "useOutsets":Z
    :cond_eae
    const/4 v2, 0x1

    move/from16 v0, v40

    if-ne v0, v2, :cond_ebb

    .line 7435
    iget v2, v15, Landroid/graphics/Rect;->right:I

    add-int v2, v2, v39

    iput v2, v15, Landroid/graphics/Rect;->right:I

    goto/16 :goto_1a8

    .line 7436
    :cond_ebb
    const/4 v2, 0x2

    move/from16 v0, v40

    if-ne v0, v2, :cond_ec8

    .line 7437
    iget v2, v15, Landroid/graphics/Rect;->top:I

    sub-int v2, v2, v39

    iput v2, v15, Landroid/graphics/Rect;->top:I

    goto/16 :goto_1a8

    .line 7438
    :cond_ec8
    const/4 v2, 0x3

    move/from16 v0, v40

    if-ne v0, v2, :cond_1a8

    .line 7439
    iget v2, v15, Landroid/graphics/Rect;->left:I

    sub-int v2, v2, v39

    iput v2, v15, Landroid/graphics/Rect;->left:I

    goto/16 :goto_1a8

    .line 7446
    .end local v39    # "outset":I
    .end local v40    # "rotation":I
    :cond_ed5
    invoke-virtual {v15}, Landroid/graphics/Rect;->toShortString()Ljava/lang/String;

    move-result-object v2

    goto/16 :goto_29e

    .end local v15    # "osf":Landroid/graphics/Rect;
    .restart local v38    # "osf":Landroid/graphics/Rect;
    :cond_edb
    move-object/from16 v15, v38

    .end local v38    # "osf":Landroid/graphics/Rect;
    .restart local v15    # "osf":Landroid/graphics/Rect;
    goto/16 :goto_1dc
.end method

.method public lockNow(Landroid/os/Bundle;)V
    .registers 5
    .param p1, "options"    # Landroid/os/Bundle;

    .prologue
    .line 11377
    iget-object v0, p0, mContext:Landroid/content/Context;

    const-string v1, "android.permission.DEVICE_POWER"

    const/4 v2, 0x0

    invoke-virtual {v0, v1, v2}, Landroid/content/Context;->enforceCallingOrSelfPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 11378
    iget-object v0, p0, mHandler:Landroid/os/Handler;

    iget-object v1, p0, mScreenLockTimeout:Lcom/android/server/policy/PhoneWindowManager$ScreenLockTimeout;

    invoke-virtual {v0, v1}, Landroid/os/Handler;->removeCallbacks(Ljava/lang/Runnable;)V

    .line 11379
    if-eqz p1, :cond_16

    .line 11382
    iget-object v0, p0, mScreenLockTimeout:Lcom/android/server/policy/PhoneWindowManager$ScreenLockTimeout;

    invoke-virtual {v0, p1}, Lcom/android/server/policy/PhoneWindowManager$ScreenLockTimeout;->setLockOptions(Landroid/os/Bundle;)V

    .line 11384
    :cond_16
    iget-object v0, p0, mHandler:Landroid/os/Handler;

    iget-object v1, p0, mScreenLockTimeout:Lcom/android/server/policy/PhoneWindowManager$ScreenLockTimeout;

    invoke-virtual {v0, v1}, Landroid/os/Handler;->post(Ljava/lang/Runnable;)Z

    .line 11385
    return-void
.end method

.method public needForceHide(Landroid/view/WindowManagerPolicy$WindowState;Landroid/view/WindowManager$LayoutParams;Lcom/samsung/android/multiwindow/MultiWindowStyle;Landroid/view/WindowManagerPolicy$WindowState;Landroid/view/WindowManager$LayoutParams;Lcom/samsung/android/multiwindow/MultiWindowStyle;)Z
    .registers 14
    .param p1, "win"    # Landroid/view/WindowManagerPolicy$WindowState;
    .param p2, "attrs"    # Landroid/view/WindowManager$LayoutParams;
    .param p3, "windowStyle"    # Lcom/samsung/android/multiwindow/MultiWindowStyle;
    .param p4, "attachedWin"    # Landroid/view/WindowManagerPolicy$WindowState;
    .param p5, "attachAttrs"    # Landroid/view/WindowManager$LayoutParams;
    .param p6, "attachedWindowStyle"    # Lcom/samsung/android/multiwindow/MultiWindowStyle;

    .prologue
    .line 12378
    iget-object v0, p0, mCocktailPhoneWindowManager:Lcom/android/server/policy/cocktail/CocktailPhoneWindowManager;

    invoke-virtual {v0, p1}, Lcom/android/server/policy/cocktail/CocktailPhoneWindowManager;->needForceHide(Landroid/view/WindowManagerPolicy$WindowState;)Z

    move-result v0

    if-eqz v0, :cond_a

    .line 12379
    const/4 v0, 0x1

    .line 12385
    :goto_9
    return v0

    :cond_a
    iget-object v0, p0, mMultiPhoneWindowManager:Lcom/android/server/policy/multiwindow/MultiPhoneWindowManager;

    move-object v1, p1

    move-object v2, p2

    move-object v3, p3

    move-object v4, p4

    move-object v5, p5

    move-object v6, p6

    invoke-virtual/range {v0 .. v6}, Lcom/android/server/policy/multiwindow/MultiPhoneWindowManager;->needForceHide(Landroid/view/WindowManagerPolicy$WindowState;Landroid/view/WindowManager$LayoutParams;Lcom/samsung/android/multiwindow/MultiWindowStyle;Landroid/view/WindowManagerPolicy$WindowState;Landroid/view/WindowManager$LayoutParams;Lcom/samsung/android/multiwindow/MultiWindowStyle;)Z

    move-result v0

    goto :goto_9
.end method

.method public needHideTrayBar()Z
    .registers 4

    .prologue
    .line 12183
    iget-object v0, p0, mMultiPhoneWindowManager:Lcom/android/server/policy/multiwindow/MultiPhoneWindowManager;

    invoke-virtual {p0}, getTopFullscreenOpaqueWindowState()Landroid/view/WindowManagerPolicy$WindowState;

    move-result-object v1

    const/4 v2, 0x0

    invoke-virtual {v0, v1, v2}, Lcom/android/server/policy/multiwindow/MultiPhoneWindowManager;->needHideTrayBar(Landroid/view/WindowManagerPolicy$WindowState;Landroid/util/MutableBoolean;)Z

    move-result v0

    return v0
.end method

.method needSensorRunningLp()Z
    .registers 7

    .prologue
    const/4 v5, 0x4

    const/4 v4, 0x2

    const/4 v1, 0x0

    const/4 v0, 0x1

    .line 1477
    iget-boolean v2, p0, mSupportAutoRotation:Z

    if-eqz v2, :cond_1d

    .line 1478
    iget v2, p0, mCurrentAppOrientation:I

    if-eq v2, v5, :cond_1c

    iget v2, p0, mCurrentAppOrientation:I

    const/16 v3, 0xa

    if-eq v2, v3, :cond_1c

    iget v2, p0, mCurrentAppOrientation:I

    const/4 v3, 0x7

    if-eq v2, v3, :cond_1c

    iget v2, p0, mCurrentAppOrientation:I

    const/4 v3, 0x6

    if-ne v2, v3, :cond_1d

    .line 1513
    :cond_1c
    :goto_1c
    return v0

    .line 1487
    :cond_1d
    iget-boolean v2, p0, mCarDockEnablesAccelerometer:Z

    if-eqz v2, :cond_25

    iget v2, p0, mDockMode:I

    if-eq v2, v4, :cond_1c

    :cond_25
    iget-boolean v2, p0, mDeskDockEnablesAccelerometer:Z

    if-eqz v2, :cond_36

    iget v2, p0, mDockMode:I

    if-eq v2, v0, :cond_1c

    iget v2, p0, mDockMode:I

    const/4 v3, 0x3

    if-eq v2, v3, :cond_1c

    iget v2, p0, mDockMode:I

    if-eq v2, v5, :cond_1c

    :cond_36
    iget-boolean v2, p0, mMirrorLinkDockEnablesAccelerometer:Z

    if-eqz v2, :cond_40

    iget v2, p0, mDockMode:I

    const/16 v3, 0x68

    if-eq v2, v3, :cond_1c

    .line 1497
    :cond_40
    iget-object v2, p0, mContext:Landroid/content/Context;

    invoke-static {v2}, Lcom/android/server/policy/sec/SamsungPolicyProperties;->FolderTypeFeature(Landroid/content/Context;)I

    move-result v2

    if-ne v2, v4, :cond_5a

    .line 1498
    iget v2, p0, mUserRotationMode:I

    if-ne v2, v0, :cond_50

    iget v2, p0, mLidState:I

    if-eqz v2, :cond_58

    :cond_50
    iget v2, p0, mSecondLcdUserRotationMode:I

    if-ne v2, v0, :cond_64

    iget v2, p0, mLidState:I

    if-ne v2, v0, :cond_64

    :cond_58
    move v0, v1

    .line 1500
    goto :goto_1c

    .line 1502
    :cond_5a
    iget v2, p0, mUserRotationMode:I

    if-eq v2, v0, :cond_62

    iget-boolean v0, p0, mMobileKeyboardEnabled:Z

    if-eqz v0, :cond_64

    :cond_62
    move v0, v1

    .line 1511
    goto :goto_1c

    .line 1513
    :cond_64
    iget-boolean v0, p0, mSupportAutoRotation:Z

    goto :goto_1c
.end method

.method public notifyActivityDrawnForKeyguardLw()V
    .registers 3

    .prologue
    .line 10616
    iget-object v0, p0, mKeyguardDelegate:Lcom/android/server/policy/keyguard/KeyguardServiceDelegate;

    if-eqz v0, :cond_e

    .line 10617
    iget-object v0, p0, mHandler:Landroid/os/Handler;

    new-instance v1, Lcom/android/server/policy/PhoneWindowManager$38;

    invoke-direct {v1, p0}, Lcom/android/server/policy/PhoneWindowManager$38;-><init>(Lcom/android/server/policy/PhoneWindowManager;)V

    invoke-virtual {v0, v1}, Landroid/os/Handler;->post(Ljava/lang/Runnable;)Z

    .line 10624
    :cond_e
    return-void
.end method

.method public notifyCameraLensCoverSwitchChanged(JZ)V
    .registers 11
    .param p1, "whenNanos"    # J
    .param p3, "lensCovered"    # Z

    .prologue
    const/4 v3, 0x1

    const/4 v4, 0x0

    .line 8769
    if-eqz p3, :cond_a

    move v2, v3

    .line 8770
    .local v2, "lensCoverState":I
    :goto_5
    iget v5, p0, mCameraLensCoverState:I

    if-ne v5, v2, :cond_c

    .line 8787
    :goto_9
    return-void

    .end local v2    # "lensCoverState":I
    :cond_a
    move v2, v4

    .line 8769
    goto :goto_5

    .line 8773
    .restart local v2    # "lensCoverState":I
    :cond_c
    iget v5, p0, mCameraLensCoverState:I

    if-ne v5, v3, :cond_30

    if-nez v2, :cond_30

    .line 8776
    iget-object v3, p0, mKeyguardDelegate:Lcom/android/server/policy/keyguard/KeyguardServiceDelegate;

    if-nez v3, :cond_33

    move v1, v4

    .line 8778
    .local v1, "keyguardActive":Z
    :goto_17
    if-eqz v1, :cond_3a

    .line 8779
    new-instance v0, Landroid/content/Intent;

    const-string v3, "android.media.action.STILL_IMAGE_CAMERA_SECURE"

    invoke-direct {v0, v3}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 8783
    .local v0, "intent":Landroid/content/Intent;
    :goto_20
    const-wide/32 v4, 0xf4240

    div-long v4, p1, v4

    iget-boolean v3, p0, mAllowTheaterModeWakeFromCameraLens:Z

    const/4 v6, 0x3

    invoke-direct {p0, v4, v5, v3, v6}, wakeUp(JZI)Z

    .line 8784
    sget-object v3, Landroid/os/UserHandle;->CURRENT_OR_SELF:Landroid/os/UserHandle;

    invoke-direct {p0, v0, v3}, startActivityAsUser(Landroid/content/Intent;Landroid/os/UserHandle;)V

    .line 8786
    .end local v0    # "intent":Landroid/content/Intent;
    .end local v1    # "keyguardActive":Z
    :cond_30
    iput v2, p0, mCameraLensCoverState:I

    goto :goto_9

    .line 8776
    :cond_33
    iget-object v3, p0, mKeyguardDelegate:Lcom/android/server/policy/keyguard/KeyguardServiceDelegate;

    invoke-virtual {v3}, Lcom/android/server/policy/keyguard/KeyguardServiceDelegate;->isShowing()Z

    move-result v1

    goto :goto_17

    .line 8781
    .restart local v1    # "keyguardActive":Z
    :cond_3a
    new-instance v0, Landroid/content/Intent;

    const-string v3, "android.media.action.STILL_IMAGE_CAMERA"

    invoke-direct {v0, v3}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .restart local v0    # "intent":Landroid/content/Intent;
    goto :goto_20
.end method

.method public notifyCoverSwitchStateChanged(JZ)V
    .registers 13
    .param p1, "whenNanos"    # J
    .param p3, "coverOpen"    # Z

    .prologue
    const/4 v2, 0x1

    const-wide/16 v6, 0x0

    const/4 v3, 0x0

    .line 8800
    invoke-static {}, Lcom/sec/android/app/CscFeature;->getInstance()Lcom/sec/android/app/CscFeature;

    move-result-object v4

    const-string v5, "CscFeature_Common_DisableNfcHwKeypad"

    invoke-virtual {v4, v5}, Lcom/sec/android/app/CscFeature;->getEnableStatus(Ljava/lang/String;)Z

    move-result v4

    if-eqz v4, :cond_18

    .line 8801
    const-string v2, "WindowManager"

    const-string v3, "Mobile Keyboard is disabled by CscFeature."

    invoke-static {v2, v3}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 8851
    :cond_17
    :goto_17
    return-void

    .line 8804
    :cond_18
    if-nez p3, :cond_6a

    move v1, v2

    .line 8806
    .local v1, "mobileKeyboardEnabled":Z
    :goto_1b
    iget-object v4, p0, mSPWM:Lcom/android/server/policy/sec/SamsungPhoneWindowManager;

    invoke-virtual {v4}, Lcom/android/server/policy/sec/SamsungPhoneWindowManager;->isEasyModeEnabled()Z

    move-result v4

    if-eqz v4, :cond_6c

    .line 8807
    cmp-long v4, p1, v6

    if-eqz v4, :cond_3a

    if-eqz v1, :cond_3a

    .line 8808
    new-instance v0, Landroid/os/Handler;

    invoke-static {}, Landroid/os/Looper;->getMainLooper()Landroid/os/Looper;

    move-result-object v4

    invoke-direct {v0, v4}, Landroid/os/Handler;-><init>(Landroid/os/Looper;)V

    .line 8809
    .local v0, "handler":Landroid/os/Handler;
    new-instance v4, Lcom/android/server/policy/PhoneWindowManager$20;

    invoke-direct {v4, p0}, Lcom/android/server/policy/PhoneWindowManager$20;-><init>(Lcom/android/server/policy/PhoneWindowManager;)V

    invoke-virtual {v0, v4, v6, v7}, Landroid/os/Handler;->postDelayed(Ljava/lang/Runnable;J)Z

    .line 8825
    .end local v0    # "handler":Landroid/os/Handler;
    :cond_3a
    const/4 v1, 0x0

    .line 8832
    :cond_3b
    :goto_3b
    iget-boolean v4, p0, mMobileKeyboardEnabled:Z

    if-eq v4, v1, :cond_4b

    .line 8833
    iput-boolean v1, p0, mMobileKeyboardEnabled:Z

    .line 8834
    invoke-virtual {p0}, updateOrientationListenerLp()V

    .line 8835
    iget-object v4, p0, mHandler:Landroid/os/Handler;

    const/16 v5, 0x3d

    invoke-virtual {v4, v5}, Landroid/os/Handler;->sendEmptyMessage(I)Z

    .line 8838
    :cond_4b
    cmp-long v4, p1, v6

    if-eqz v4, :cond_17

    .line 8839
    iget-object v4, p0, mContext:Landroid/content/Context;

    invoke-virtual {v4}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v4

    const-string/jumbo v5, "mobile_keyboard"

    if-eqz v1, :cond_7e

    :goto_5a
    invoke-static {v4, v5, v2, v3}, Landroid/provider/Settings$System;->putIntForUser(Landroid/content/ContentResolver;Ljava/lang/String;II)Z

    .line 8840
    iget-object v2, p0, mHandler:Landroid/os/Handler;

    new-instance v3, Lcom/android/server/policy/PhoneWindowManager$21;

    invoke-direct {v3, p0}, Lcom/android/server/policy/PhoneWindowManager$21;-><init>(Lcom/android/server/policy/PhoneWindowManager;)V

    const-wide/16 v4, 0x64

    invoke-virtual {v2, v3, v4, v5}, Landroid/os/Handler;->postDelayed(Ljava/lang/Runnable;J)Z

    goto :goto_17

    .end local v1    # "mobileKeyboardEnabled":Z
    :cond_6a
    move v1, v3

    .line 8804
    goto :goto_1b

    .line 8826
    .restart local v1    # "mobileKeyboardEnabled":Z
    :cond_6c
    iget-object v4, p0, mSPWM:Lcom/android/server/policy/sec/SamsungPhoneWindowManager;

    invoke-virtual {v4}, Lcom/android/server/policy/sec/SamsungPhoneWindowManager;->isSideSyncPresentationRunning()Z

    move-result v4

    if-eqz v4, :cond_76

    .line 8827
    const/4 v1, 0x0

    goto :goto_3b

    .line 8828
    :cond_76
    invoke-virtual {p0}, isUserSetupComplete()Z

    move-result v4

    if-nez v4, :cond_3b

    .line 8829
    const/4 v1, 0x0

    goto :goto_3b

    :cond_7e
    move v2, v3

    .line 8839
    goto :goto_5a
.end method

.method public notifyDisplayAdded(I)V
    .registers 6
    .param p1, "displayId"    # I

    .prologue
    .line 12444
    iget-object v1, p0, mHandler:Landroid/os/Handler;

    if-eqz v1, :cond_12

    .line 12445
    iget-object v1, p0, mHandler:Landroid/os/Handler;

    const/16 v2, 0x64

    const/4 v3, 0x0

    invoke-virtual {v1, v2, p1, v3}, Landroid/os/Handler;->obtainMessage(III)Landroid/os/Message;

    move-result-object v0

    .line 12446
    .local v0, "msg":Landroid/os/Message;
    iget-object v1, p0, mHandler:Landroid/os/Handler;

    invoke-virtual {v1, v0}, Landroid/os/Handler;->sendMessage(Landroid/os/Message;)Z

    .line 12448
    .end local v0    # "msg":Landroid/os/Message;
    :cond_12
    return-void
.end method

.method public notifyFoldingSwitchStateChanged(JI)V
    .registers 12
    .param p1, "whenNanos"    # J
    .param p3, "foldingState"    # I

    .prologue
    const/4 v7, 0x1

    const/4 v6, 0x3

    const/4 v5, 0x2

    .line 12592
    const-string v2, "WindowManager"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v4, "notifyFoldingSwitchStateChanged foldingState="

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3, p3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 12595
    iget-object v3, p0, mFoldingAndWrapAroundLock:Ljava/lang/Object;

    monitor-enter v3

    .line 12596
    :try_start_1f
    iget v2, p0, mFoldingState:I

    if-ne v2, p3, :cond_25

    .line 12597
    monitor-exit v3

    .line 12624
    :goto_24
    return-void

    .line 12599
    :cond_25
    iput p3, p0, mFoldingState:I

    .line 12600
    iget v1, p0, mLastWrapAroundMode:I

    .line 12601
    .local v1, "lastWrapAroundMode":I
    monitor-exit v3
    :try_end_2a
    .catchall {:try_start_1f .. :try_end_2a} :catchall_5d

    .line 12603
    iget-object v2, p0, mActivityManagerInternal:Landroid/app/ActivityManagerInternal;

    const/16 v3, 0x2b

    invoke-virtual {v2, v3, p3}, Landroid/app/ActivityManagerInternal;->handleSContextChanged(II)V

    .line 12604
    if-ne p3, v5, :cond_68

    .line 12605
    if-ne v1, v7, :cond_60

    .line 12606
    iget-object v2, p0, mPowerManager:Landroid/os/PowerManager;

    invoke-virtual {v2, v7, v6}, Landroid/os/PowerManager;->setMultipleScreenStateOverride(II)V

    .line 12618
    :cond_3a
    :goto_3a
    const-string/jumbo v2, "sys.dualscreen.folding_state"

    invoke-static {p3}, Ljava/lang/Integer;->toString(I)Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3}, Landroid/os/SystemProperties;->set(Ljava/lang/String;Ljava/lang/String;)V

    .line 12620
    new-instance v0, Landroid/content/Intent;

    const-string v2, "com.samsung.android.dualscreen.action.FOLDING_STATE_CHANGED"

    invoke-direct {v0, v2}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 12621
    .local v0, "foldingStateIntent":Landroid/content/Intent;
    const-string v2, "com.samsung.android.dualscreen.extra.FOLDING_STATE"

    invoke-virtual {v0, v2, p3}, Landroid/content/Intent;->putExtra(Ljava/lang/String;I)Landroid/content/Intent;

    .line 12622
    const/high16 v2, 0x40000000    # 2.0f

    invoke-virtual {v0, v2}, Landroid/content/Intent;->addFlags(I)Landroid/content/Intent;

    .line 12623
    iget-object v2, p0, mContext:Landroid/content/Context;

    sget-object v3, Landroid/os/UserHandle;->ALL:Landroid/os/UserHandle;

    invoke-virtual {v2, v0, v3}, Landroid/content/Context;->sendStickyBroadcastAsUser(Landroid/content/Intent;Landroid/os/UserHandle;)V

    goto :goto_24

    .line 12601
    .end local v0    # "foldingStateIntent":Landroid/content/Intent;
    .end local v1    # "lastWrapAroundMode":I
    :catchall_5d
    move-exception v2

    :try_start_5e
    monitor-exit v3
    :try_end_5f
    .catchall {:try_start_5e .. :try_end_5f} :catchall_5d

    throw v2

    .line 12607
    .restart local v1    # "lastWrapAroundMode":I
    :cond_60
    if-ne v1, v5, :cond_3a

    .line 12608
    iget-object v2, p0, mPowerManager:Landroid/os/PowerManager;

    invoke-virtual {v2, v5, v6}, Landroid/os/PowerManager;->setMultipleScreenStateOverride(II)V

    goto :goto_3a

    .line 12611
    :cond_68
    iget-object v2, p0, mWindowManagerFuncs:Landroid/view/WindowManagerPolicy$WindowManagerFuncs;

    invoke-interface {v2}, Landroid/view/WindowManagerPolicy$WindowManagerFuncs;->removeAppBackWindow()Z

    .line 12612
    iget-object v2, p0, mPowerManager:Landroid/os/PowerManager;

    invoke-virtual {v2, v6, v5}, Landroid/os/PowerManager;->setMultipleScreenStateOverride(II)V

    .line 12616
    iget-object v2, p0, mActivityManagerInternal:Landroid/app/ActivityManagerInternal;

    invoke-virtual {v2, v6, v5}, Landroid/app/ActivityManagerInternal;->onMultipleScreenStateChanged(II)V

    goto :goto_3a
.end method

.method public notifyLidSwitchChanged(JZ)V
    .registers 21
    .param p1, "whenNanos"    # J
    .param p3, "lidOpen"    # Z

    .prologue
    .line 8679
    if-eqz p3, :cond_a

    const/4 v8, 0x1

    .line 8680
    .local v8, "newLidState":I
    :goto_3
    move-object/from16 v0, p0

    iget v12, v0, mLidState:I

    if-ne v8, v12, :cond_c

    .line 8765
    :cond_9
    :goto_9
    return-void

    .line 8679
    .end local v8    # "newLidState":I
    :cond_a
    const/4 v8, 0x0

    goto :goto_3

    .line 8684
    .restart local v8    # "newLidState":I
    :cond_c
    move-object/from16 v0, p0

    iput v8, v0, mLidState:I

    .line 8685
    invoke-direct/range {p0 .. p0}, applyLidSwitchState()V

    .line 8687
    move-object/from16 v0, p0

    iget-object v12, v0, mContext:Landroid/content/Context;

    invoke-static {v12}, Lcom/android/server/policy/sec/SamsungPolicyProperties;->FolderTypeFeature(Landroid/content/Context;)I

    move-result v12

    if-eqz v12, :cond_136

    .line 8688
    move-object/from16 v0, p0

    iget-object v12, v0, mSPWM:Lcom/android/server/policy/sec/SamsungPhoneWindowManager;

    move-wide/from16 v0, p1

    move/from16 v2, p3

    invoke-virtual {v12, v0, v1, v2}, Lcom/android/server/policy/sec/SamsungPhoneWindowManager;->notifyLidSwitchChangedForFolder(JZ)V

    .line 8691
    move-object/from16 v0, p0

    iget-boolean v12, v0, mLidControlsSleep:Z

    if-nez v12, :cond_ec

    if-nez p3, :cond_ec

    .line 8692
    move-object/from16 v0, p0

    iget-object v12, v0, mContext:Landroid/content/Context;

    invoke-virtual {v12}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v12

    const-string/jumbo v13, "premium_watch_switch_onoff"

    const/4 v14, 0x0

    invoke-static {v12, v13, v14}, Landroid/provider/Settings$System;->getInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I

    move-result v11

    .line 8694
    .local v11, "watchOn":I
    move-object/from16 v0, p0

    iget-object v12, v0, mContext:Landroid/content/Context;

    invoke-virtual {v12}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v12

    const-string/jumbo v13, "sub_lcd_auto_lock"

    const/4 v14, 0x0

    invoke-static {v12, v13, v14}, Landroid/provider/Settings$System;->getInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I

    move-result v12

    const/4 v13, 0x1

    if-ne v12, v13, :cond_15a

    const/4 v9, 0x1

    .line 8696
    .local v9, "subLCDAutoLock":Z
    :goto_54
    const/4 v6, 0x0

    .line 8697
    .local v6, "launchWatch":Z
    const-string/jumbo v12, "service.camera.running"

    const-string v13, "0"

    invoke-static {v12, v13}, Landroid/os/SystemProperties;->get(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v12

    const-string v13, "1"

    invoke-virtual {v12, v13}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    .line 8699
    .local v4, "isCameraRunning":Z
    const/4 v5, 0x0

    .line 8702
    .local v5, "isOffhook":Z
    move-object/from16 v0, p0

    iget-object v12, v0, mTelephonyManager:Landroid/telephony/TelephonyManager;

    if-nez v12, :cond_7c

    .line 8703
    move-object/from16 v0, p0

    iget-object v12, v0, mContext:Landroid/content/Context;

    const-string/jumbo v13, "phone"

    invoke-virtual {v12, v13}, Landroid/content/Context;->getSystemService(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v12

    check-cast v12, Landroid/telephony/TelephonyManager;

    move-object/from16 v0, p0

    iput-object v12, v0, mTelephonyManager:Landroid/telephony/TelephonyManager;

    .line 8705
    :cond_7c
    move-object/from16 v0, p0

    iget-object v12, v0, mTelephonyManager:Landroid/telephony/TelephonyManager;

    if-eqz v12, :cond_8a

    .line 8706
    move-object/from16 v0, p0

    iget-object v12, v0, mTelephonyManager:Landroid/telephony/TelephonyManager;

    invoke-virtual {v12}, Landroid/telephony/TelephonyManager;->isOffhook()Z

    move-result v5

    .line 8709
    :cond_8a
    if-eqz v9, :cond_15d

    .line 8715
    const/4 v12, 0x1

    if-ne v11, v12, :cond_ad

    .line 8717
    move-object/from16 v0, p0

    iget-object v12, v0, mLockPatternUtils:Lcom/android/internal/widget/LockPatternUtils;

    const/4 v13, 0x0

    invoke-virtual {v12, v13}, Lcom/android/internal/widget/LockPatternUtils;->isLockScreenDisabled(I)Z

    move-result v7

    .line 8718
    .local v7, "lockTypeNone":Z
    if-nez v4, :cond_ad

    if-nez v5, :cond_ad

    invoke-virtual/range {p0 .. p0}, isUserSetupComplete()Z

    move-result v12

    if-eqz v12, :cond_ad

    if-nez v7, :cond_ad

    .line 8720
    move-object/from16 v0, p0

    iget-object v12, v0, mSPWM:Lcom/android/server/policy/sec/SamsungPhoneWindowManager;

    const/4 v13, 0x0

    invoke-virtual {v12, v13}, Lcom/android/server/policy/sec/SamsungPhoneWindowManager;->launchPremiumWatch(Z)V

    .line 8721
    const/4 v6, 0x1

    .line 8725
    .end local v7    # "lockTypeNone":Z
    :cond_ad
    const-string v12, "WindowManager"

    new-instance v13, Ljava/lang/StringBuilder;

    invoke-direct {v13}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v14, "isCameraRunning: "

    invoke-virtual {v13, v14}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v13

    invoke-virtual {v13, v4}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v13

    const-string v14, ", isOffhook: "

    invoke-virtual {v13, v14}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v13

    invoke-virtual {v13, v5}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v13

    invoke-virtual {v13}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v13

    invoke-static {v12, v13}, Landroid/util/Log;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 8726
    move-object/from16 v0, p0

    iget-object v12, v0, mKeyguardDelegate:Lcom/android/server/policy/keyguard/KeyguardServiceDelegate;

    invoke-virtual {v12}, Lcom/android/server/policy/keyguard/KeyguardServiceDelegate;->isShowing()Z

    move-result v12

    if-nez v12, :cond_ec

    .line 8727
    invoke-virtual/range {p0 .. p0}, isKeyguardSecure()Z

    move-result v12

    if-nez v12, :cond_e6

    if-nez v6, :cond_ec

    if-nez v5, :cond_ec

    if-nez v4, :cond_ec

    .line 8728
    :cond_e6
    const/4 v12, 0x0

    move-object/from16 v0, p0

    invoke-virtual {v0, v12}, lockNow(Landroid/os/Bundle;)V

    .line 8737
    .end local v4    # "isCameraRunning":Z
    .end local v5    # "isOffhook":Z
    .end local v6    # "launchWatch":Z
    .end local v9    # "subLCDAutoLock":Z
    .end local v11    # "watchOn":I
    :cond_ec
    :goto_ec
    const/4 v10, 0x0

    .line 8738
    .local v10, "updateDelaytime":I
    move-object/from16 v0, p0

    iget-object v12, v0, mContext:Landroid/content/Context;

    invoke-static {v12}, Lcom/android/server/policy/sec/SamsungPolicyProperties;->FolderTypeFeature(Landroid/content/Context;)I

    move-result v12

    const/4 v13, 0x2

    if-ne v12, v13, :cond_fb

    .line 8739
    if-eqz p3, :cond_165

    const/4 v10, 0x0

    .line 8742
    :cond_fb
    :goto_fb
    move-object/from16 v0, p0

    iget-object v12, v0, mHandler:Landroid/os/Handler;

    new-instance v13, Lcom/android/server/policy/PhoneWindowManager$19;

    move-object/from16 v0, p0

    invoke-direct {v13, v0}, Lcom/android/server/policy/PhoneWindowManager$19;-><init>(Lcom/android/server/policy/PhoneWindowManager;)V

    int-to-long v14, v10

    invoke-virtual {v12, v13, v14, v15}, Landroid/os/Handler;->postDelayed(Ljava/lang/Runnable;J)Z

    .line 8751
    move-object/from16 v0, p0

    iget-object v12, v0, mContext:Landroid/content/Context;

    invoke-static {v12}, Lcom/android/server/policy/sec/SamsungPolicyProperties;->FolderTypeFeature(Landroid/content/Context;)I

    move-result v12

    const/4 v13, 0x1

    if-ne v12, v13, :cond_136

    if-nez p3, :cond_136

    invoke-static {}, Landroid/os/FactoryTest;->isRunningFactoryApp()Z

    move-result v12

    if-nez v12, :cond_136

    invoke-static {}, Landroid/os/FactoryTest;->isFactoryBinary()Z

    move-result v12

    if-nez v12, :cond_136

    invoke-static {}, Lcom/android/server/policy/sec/SamsungPolicyProperties;->isDomesticOtaStart()Z

    move-result v12

    if-nez v12, :cond_136

    move-object/from16 v0, p0

    iget-object v12, v0, mContext:Landroid/content/Context;

    invoke-static {v12}, Lcom/android/server/policy/sec/SamsungPolicyProperties;->isBlockKey(Landroid/content/Context;)Z

    move-result v12

    if-nez v12, :cond_136

    .line 8757
    invoke-virtual/range {p0 .. p0}, launchHomeFromHotKey()V

    .line 8761
    .end local v10    # "updateDelaytime":I
    :cond_136
    if-nez p3, :cond_13e

    move-object/from16 v0, p0

    iget-boolean v12, v0, mLidControlsSleep:Z

    if-nez v12, :cond_9

    .line 8762
    :cond_13e
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v12

    move-object/from16 v0, p0

    iget-boolean v14, v0, mAllowTheaterModeWakeFromLidSwitch:Z

    const/4 v15, 0x5

    move-object/from16 v0, p0

    invoke-direct {v0, v12, v13, v14, v15}, wakeUp(JZI)Z

    .line 8763
    move-object/from16 v0, p0

    iget-object v12, v0, mPowerManager:Landroid/os/PowerManager;

    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v14

    const/4 v13, 0x0

    invoke-virtual {v12, v14, v15, v13}, Landroid/os/PowerManager;->userActivity(JZ)V

    goto/16 :goto_9

    .line 8694
    .restart local v11    # "watchOn":I
    :cond_15a
    const/4 v9, 0x0

    goto/16 :goto_54

    .line 8732
    .restart local v4    # "isCameraRunning":Z
    .restart local v5    # "isOffhook":Z
    .restart local v6    # "launchWatch":Z
    .restart local v9    # "subLCDAutoLock":Z
    :cond_15d
    const-string v12, "WindowManager"

    const-string v13, "Auto lock is not enabled."

    invoke-static {v12, v13}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_ec

    .line 8739
    .end local v4    # "isCameraRunning":Z
    .end local v5    # "isOffhook":Z
    .end local v6    # "launchWatch":Z
    .end local v9    # "subLCDAutoLock":Z
    .end local v11    # "watchOn":I
    .restart local v10    # "updateDelaytime":I
    :cond_165
    const/16 v10, 0x1f4

    goto :goto_fb
.end method

.method public notifyPenSwitchChanged(JZ)V
    .registers 5
    .param p1, "whenNanos"    # J
    .param p3, "penInsert"    # Z

    .prologue
    .line 8793
    iget-object v0, p0, mSPWM:Lcom/android/server/policy/sec/SamsungPhoneWindowManager;

    invoke-virtual {v0, p1, p2, p3}, Lcom/android/server/policy/sec/SamsungPhoneWindowManager;->notifyPenSwitchChanged(JZ)V

    .line 8794
    return-void
.end method

.method public notifyWrapAroundModeChanged(I)V
    .registers 7
    .param p1, "screenStatus"    # I

    .prologue
    const/4 v1, 0x2

    const/4 v2, 0x1

    .line 12629
    iget-object v3, p0, mFoldingAndWrapAroundLock:Ljava/lang/Object;

    monitor-enter v3

    .line 12630
    :try_start_5
    iget v4, p0, mLastWrapAroundMode:I

    if-ne v4, p1, :cond_b

    .line 12631
    monitor-exit v3

    .line 12651
    :cond_a
    :goto_a
    return-void

    .line 12634
    :cond_b
    if-eq p1, v2, :cond_14

    if-eq p1, v1, :cond_14

    .line 12636
    monitor-exit v3

    goto :goto_a

    .line 12640
    :catchall_11
    move-exception v2

    monitor-exit v3
    :try_end_13
    .catchall {:try_start_5 .. :try_end_13} :catchall_11

    throw v2

    .line 12638
    :cond_14
    :try_start_14
    iput p1, p0, mLastWrapAroundMode:I

    .line 12639
    iget v0, p0, mFoldingState:I

    .line 12640
    .local v0, "foldingState":I
    monitor-exit v3
    :try_end_19
    .catchall {:try_start_14 .. :try_end_19} :catchall_11

    .line 12642
    iget-object v3, p0, mActivityManagerInternal:Landroid/app/ActivityManagerInternal;

    const/16 v4, 0x31

    invoke-virtual {v3, v4, p1}, Landroid/app/ActivityManagerInternal;->handleSContextChanged(II)V

    .line 12644
    if-ne v0, v1, :cond_a

    .line 12645
    iget-object v3, p0, mWindowManagerFuncs:Landroid/view/WindowManagerPolicy$WindowManagerFuncs;

    invoke-interface {v3}, Landroid/view/WindowManagerPolicy$WindowManagerFuncs;->removeAppBackWindow()Z

    .line 12646
    if-ne p1, v2, :cond_2a

    move v1, v2

    .line 12648
    .local v1, "targetScreen":I
    :cond_2a
    iget-object v3, p0, mPowerManager:Landroid/os/PowerManager;

    const/4 v4, 0x3

    invoke-virtual {v3, v1, v4}, Landroid/os/PowerManager;->setMultipleScreenStateOverride(II)V

    .line 12649
    invoke-virtual {p0, v2}, updateRotation(Z)V

    goto :goto_a
.end method

.method public onFixedScreenModeChanged(I)V
    .registers 2
    .param p1, "fixedTaskId"    # I

    .prologue
    .line 12460
    iput p1, p0, mFixedTaskId:I

    .line 12461
    return-void
.end method

.method public onLockTaskModeChanged(I)V
    .registers 3
    .param p1, "lockTaskModeState"    # I

    .prologue
    .line 12847
    iget v0, p0, mLockTaskModeState:I

    if-eq v0, p1, :cond_6

    .line 12848
    iput p1, p0, mLockTaskModeState:I

    .line 12851
    :cond_6
    return-void
.end method

.method public onMultipleScreenStateChanged(II)V
    .registers 6
    .param p1, "state"    # I
    .param p2, "reason"    # I

    .prologue
    .line 12586
    const-string v0, "WindowManager"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v2, "onMultipleScreenStateChanged state="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, ",reason="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 12587
    iget-object v0, p0, mActivityManagerInternal:Landroid/app/ActivityManagerInternal;

    invoke-virtual {v0, p1, p2}, Landroid/app/ActivityManagerInternal;->onMultipleScreenStateChanged(II)V

    .line 12588
    return-void
.end method

.method public performHapticFeedbackLw(Landroid/view/WindowManagerPolicy$WindowState;IZ)Z
    .registers 13
    .param p1, "win"    # Landroid/view/WindowManagerPolicy$WindowState;
    .param p2, "effectId"    # I
    .param p3, "always"    # Z

    .prologue
    const/4 v7, 0x1

    const/4 v5, 0x0

    .line 11782
    iget-object v1, p0, mSPWM:Lcom/android/server/policy/sec/SamsungPhoneWindowManager;

    if-eqz v1, :cond_d

    .line 11783
    iget-object v1, p0, mSPWM:Lcom/android/server/policy/sec/SamsungPhoneWindowManager;

    invoke-virtual {v1, p1, p2, p3}, Lcom/android/server/policy/sec/SamsungPhoneWindowManager;->performHapticFeedbackLw(Landroid/view/WindowManagerPolicy$WindowState;IZ)Z

    move-result v1

    .line 11839
    :goto_c
    return v1

    .line 11786
    :cond_d
    iget-object v1, p0, mVibrator:Landroid/os/Vibrator;

    invoke-virtual {v1}, Landroid/os/Vibrator;->hasVibrator()Z

    move-result v1

    if-nez v1, :cond_17

    move v1, v5

    .line 11787
    goto :goto_c

    .line 11789
    :cond_17
    iget-object v1, p0, mContext:Landroid/content/Context;

    invoke-virtual {v1}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v1

    const-string/jumbo v6, "haptic_feedback_enabled"

    const/4 v8, -0x2

    invoke-static {v1, v6, v5, v8}, Landroid/provider/Settings$System;->getIntForUser(Landroid/content/ContentResolver;Ljava/lang/String;II)I

    move-result v1

    if-nez v1, :cond_2e

    move v0, v7

    .line 11791
    .local v0, "hapticsDisabled":Z
    :goto_28
    if-eqz v0, :cond_30

    if-nez p3, :cond_30

    move v1, v5

    .line 11792
    goto :goto_c

    .end local v0    # "hapticsDisabled":Z
    :cond_2e
    move v0, v5

    .line 11789
    goto :goto_28

    .line 11794
    .restart local v0    # "hapticsDisabled":Z
    :cond_30
    const/4 v4, 0x0

    .line 11795
    .local v4, "pattern":[J
    sparse-switch p2, :sswitch_data_7a

    move v1, v5

    .line 11821
    goto :goto_c

    .line 11797
    :sswitch_36
    iget-object v4, p0, mLongPressVibePattern:[J

    .line 11825
    :goto_38
    if-eqz p1, :cond_65

    .line 11826
    invoke-interface {p1}, Landroid/view/WindowManagerPolicy$WindowState;->getOwningUid()I

    move-result v2

    .line 11827
    .local v2, "owningUid":I
    invoke-interface {p1}, Landroid/view/WindowManagerPolicy$WindowState;->getOwningPackage()Ljava/lang/String;

    move-result-object v3

    .line 11832
    .local v3, "owningPackage":Ljava/lang/String;
    :goto_42
    array-length v1, v4

    if-ne v1, v7, :cond_70

    .line 11834
    iget-object v1, p0, mVibrator:Landroid/os/Vibrator;

    aget-wide v4, v4, v5

    .end local v4    # "pattern":[J
    sget-object v6, VIBRATION_ATTRIBUTES:Landroid/media/AudioAttributes;

    invoke-virtual/range {v1 .. v6}, Landroid/os/Vibrator;->vibrate(ILjava/lang/String;JLandroid/media/AudioAttributes;)V

    :goto_4e
    move v1, v7

    .line 11839
    goto :goto_c

    .line 11800
    .end local v2    # "owningUid":I
    .end local v3    # "owningPackage":Ljava/lang/String;
    .restart local v4    # "pattern":[J
    :sswitch_50
    iget-object v4, p0, mVirtualKeyVibePattern:[J

    .line 11801
    goto :goto_38

    .line 11803
    :sswitch_53
    iget-object v4, p0, mKeyboardTapVibePattern:[J

    .line 11804
    goto :goto_38

    .line 11806
    :sswitch_56
    iget-object v4, p0, mClockTickVibePattern:[J

    .line 11807
    goto :goto_38

    .line 11809
    :sswitch_59
    iget-object v4, p0, mCalendarDateVibePattern:[J

    .line 11810
    goto :goto_38

    .line 11812
    :sswitch_5c
    iget-object v4, p0, mSafeModeDisabledVibePattern:[J

    .line 11813
    goto :goto_38

    .line 11815
    :sswitch_5f
    iget-object v4, p0, mSafeModeEnabledVibePattern:[J

    .line 11816
    goto :goto_38

    .line 11818
    :sswitch_62
    iget-object v4, p0, mContextClickVibePattern:[J

    .line 11819
    goto :goto_38

    .line 11829
    :cond_65
    invoke-static {}, Landroid/os/Process;->myUid()I

    move-result v2

    .line 11830
    .restart local v2    # "owningUid":I
    iget-object v1, p0, mContext:Landroid/content/Context;

    invoke-virtual {v1}, Landroid/content/Context;->getOpPackageName()Ljava/lang/String;

    move-result-object v3

    .restart local v3    # "owningPackage":Ljava/lang/String;
    goto :goto_42

    .line 11837
    :cond_70
    iget-object v1, p0, mVibrator:Landroid/os/Vibrator;

    const/4 v5, -0x1

    sget-object v6, VIBRATION_ATTRIBUTES:Landroid/media/AudioAttributes;

    invoke-virtual/range {v1 .. v6}, Landroid/os/Vibrator;->vibrate(ILjava/lang/String;[JILandroid/media/AudioAttributes;)V

    goto :goto_4e

    .line 11795
    nop

    :sswitch_data_7a
    .sparse-switch
        0x0 -> :sswitch_36
        0x1 -> :sswitch_50
        0x3 -> :sswitch_53
        0x4 -> :sswitch_56
        0x5 -> :sswitch_59
        0x6 -> :sswitch_62
        0x2710 -> :sswitch_5c
        0x2711 -> :sswitch_5f
    .end sparse-switch
.end method

.method public prepareAddWindowLw(Landroid/view/WindowManagerPolicy$WindowState;Landroid/view/WindowManager$LayoutParams;)I
    .registers 7
    .param p1, "win"    # Landroid/view/WindowManagerPolicy$WindowState;
    .param p2, "attrs"    # Landroid/view/WindowManager$LayoutParams;

    .prologue
    const/4 v0, -0x7

    .line 4475
    iget v1, p2, Landroid/view/WindowManager$LayoutParams;->type:I

    sparse-switch v1, :sswitch_data_d4

    .line 4595
    :cond_6
    :goto_6
    iget-boolean v1, p0, mScreenOnFully:Z

    if-nez v1, :cond_1e

    iget-object v1, p0, mForceUserActivityTimeoutWin:Ljava/util/ArrayList;

    invoke-virtual {v1, p1}, Ljava/util/ArrayList;->contains(Ljava/lang/Object;)Z

    move-result v1

    if-nez v1, :cond_1e

    iget v1, p2, Landroid/view/WindowManager$LayoutParams;->flags:I

    const/high16 v2, 0x200000

    and-int/2addr v1, v2

    if-eqz v1, :cond_1e

    .line 4596
    iget-object v1, p0, mForceUserActivityTimeoutWin:Ljava/util/ArrayList;

    invoke-virtual {v1, p1}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 4600
    :cond_1e
    iget-object v1, p0, mMultiPhoneWindowManager:Lcom/android/server/policy/multiwindow/MultiPhoneWindowManager;

    invoke-virtual {v1, p1, p2}, Lcom/android/server/policy/multiwindow/MultiPhoneWindowManager;->prepareAddWindowLw(Landroid/view/WindowManagerPolicy$WindowState;Landroid/view/WindowManager$LayoutParams;)I

    move-result v0

    .line 4601
    .local v0, "result":I
    if-eqz v0, :cond_cc

    .line 4609
    .end local v0    # "result":I
    :cond_26
    :goto_26
    return v0

    .line 4477
    :sswitch_27
    iget-object v1, p0, mContext:Landroid/content/Context;

    const-string v2, "android.permission.STATUS_BAR_SERVICE"

    const-string v3, "PhoneWindowManager"

    invoke-virtual {v1, v2, v3}, Landroid/content/Context;->enforceCallingOrSelfPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 4496
    iget-object v1, p0, mStatusBar:Landroid/view/WindowManagerPolicy$WindowState;

    if-eqz v1, :cond_3c

    .line 4497
    iget-object v1, p0, mStatusBar:Landroid/view/WindowManagerPolicy$WindowState;

    invoke-interface {v1}, Landroid/view/WindowManagerPolicy$WindowState;->isAlive()Z

    move-result v1

    if-nez v1, :cond_26

    .line 4501
    :cond_3c
    iput-object p1, p0, mStatusBar:Landroid/view/WindowManagerPolicy$WindowState;

    .line 4502
    iget-object v1, p0, mStatusBarController:Lcom/android/server/policy/StatusBarController;

    invoke-virtual {v1, p1}, Lcom/android/server/policy/StatusBarController;->setWindow(Landroid/view/WindowManagerPolicy$WindowState;)V

    goto :goto_6

    .line 4505
    :sswitch_44
    iget-object v1, p0, mContext:Landroid/content/Context;

    const-string v2, "android.permission.STATUS_BAR_SERVICE"

    const-string v3, "PhoneWindowManager"

    invoke-virtual {v1, v2, v3}, Landroid/content/Context;->enforceCallingOrSelfPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 4523
    iget-object v1, p0, mNavigationBar:Landroid/view/WindowManagerPolicy$WindowState;

    if-eqz v1, :cond_59

    .line 4524
    iget-object v1, p0, mNavigationBar:Landroid/view/WindowManagerPolicy$WindowState;

    invoke-interface {v1}, Landroid/view/WindowManagerPolicy$WindowState;->isAlive()Z

    move-result v1

    if-nez v1, :cond_26

    .line 4528
    :cond_59
    iput-object p1, p0, mNavigationBar:Landroid/view/WindowManagerPolicy$WindowState;

    .line 4529
    iget-object v1, p0, mNavigationBarController:Lcom/android/server/policy/BarController;

    invoke-virtual {v1, p1}, Lcom/android/server/policy/BarController;->setWindow(Landroid/view/WindowManagerPolicy$WindowState;)V

    .line 4530
    sget-boolean v1, DEBUG_LAYOUT:Z

    if-eqz v1, :cond_6

    const-string v1, "WindowManager"

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "NAVIGATION BAR: "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    iget-object v3, p0, mNavigationBar:Landroid/view/WindowManagerPolicy$WindowState;

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v1, v2}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_6

    .line 4536
    :sswitch_7f
    iget-object v1, p0, mContext:Landroid/content/Context;

    const-string v2, "android.permission.STATUS_BAR_SERVICE"

    const-string v3, "PhoneWindowManager"

    invoke-virtual {v1, v2, v3}, Landroid/content/Context;->enforceCallingOrSelfPermission(Ljava/lang/String;Ljava/lang/String;)V

    goto/16 :goto_6

    .line 4552
    :sswitch_8a
    iget-object v1, p0, mKeyguardScrim:Landroid/view/WindowManagerPolicy$WindowState;

    if-nez v1, :cond_26

    .line 4555
    iput-object p1, p0, mKeyguardScrim:Landroid/view/WindowManagerPolicy$WindowState;

    goto/16 :goto_6

    .line 4559
    :sswitch_92
    iput-object p1, p0, mBottomKeyPanelWindow:Landroid/view/WindowManagerPolicy$WindowState;

    goto/16 :goto_6

    .line 4564
    :sswitch_96
    iget-object v1, p0, mContext:Landroid/content/Context;

    const-string v2, "android.permission.STATUS_BAR_SERVICE"

    const-string v3, "PhoneWindowManager"

    invoke-virtual {v1, v2, v3}, Landroid/content/Context;->enforceCallingOrSelfPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 4567
    iget-object v1, p0, mCarModeBar:Landroid/view/WindowManagerPolicy$WindowState;

    if-eqz v1, :cond_ab

    .line 4568
    iget-object v1, p0, mCarModeBar:Landroid/view/WindowManagerPolicy$WindowState;

    invoke-interface {v1}, Landroid/view/WindowManagerPolicy$WindowState;->isAlive()Z

    move-result v1

    if-nez v1, :cond_26

    .line 4572
    :cond_ab
    iput-object p1, p0, mCarModeBar:Landroid/view/WindowManagerPolicy$WindowState;

    goto/16 :goto_6

    .line 4578
    :sswitch_af
    iput-object p1, p0, mInputMethod:Landroid/view/WindowManagerPolicy$WindowState;

    goto/16 :goto_6

    .line 4582
    :sswitch_b3
    iget-object v1, p0, mContext:Landroid/content/Context;

    const-string v2, "android.permission.STATUS_BAR_SERVICE"

    const-string v3, "PhoneWindowManager"

    invoke-virtual {v1, v2, v3}, Landroid/content/Context;->enforceCallingOrSelfPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 4585
    iget-object v1, p0, mNightClock:Landroid/view/WindowManagerPolicy$WindowState;

    if-eqz v1, :cond_c8

    .line 4586
    iget-object v1, p0, mNightClock:Landroid/view/WindowManagerPolicy$WindowState;

    invoke-interface {v1}, Landroid/view/WindowManagerPolicy$WindowState;->isAlive()Z

    move-result v1

    if-nez v1, :cond_26

    .line 4590
    :cond_c8
    iput-object p1, p0, mNightClock:Landroid/view/WindowManagerPolicy$WindowState;

    goto/16 :goto_6

    .line 4609
    .restart local v0    # "result":I
    :cond_cc
    iget-object v1, p0, mCocktailPhoneWindowManager:Lcom/android/server/policy/cocktail/CocktailPhoneWindowManager;

    invoke-virtual {v1, p1, p2}, Lcom/android/server/policy/cocktail/CocktailPhoneWindowManager;->prepareAddWindowLw(Landroid/view/WindowManagerPolicy$WindowState;Landroid/view/WindowManager$LayoutParams;)I

    move-result v0

    goto/16 :goto_26

    .line 4475
    :sswitch_data_d4
    .sparse-switch
        0x7d0 -> :sswitch_27
        0x7db -> :sswitch_af
        0x7de -> :sswitch_7f
        0x7e1 -> :sswitch_7f
        0x7e3 -> :sswitch_44
        0x7e8 -> :sswitch_7f
        0x7ed -> :sswitch_8a
        0x7f1 -> :sswitch_7f
        0x8b1 -> :sswitch_b3
        0x8d0 -> :sswitch_92
        0x8de -> :sswitch_96
    .end sparse-switch
.end method

.method readLidState()V
    .registers 2

    .prologue
    .line 3758
    iget-object v0, p0, mWindowManagerFuncs:Landroid/view/WindowManagerPolicy$WindowManagerFuncs;

    invoke-interface {v0}, Landroid/view/WindowManagerPolicy$WindowManagerFuncs;->getLidState()I

    move-result v0

    iput v0, p0, mLidState:I

    .line 3759
    return-void
.end method

.method public removeAdaptiveEvent(Ljava/lang/String;)V
    .registers 3
    .param p1, "requestClass"    # Ljava/lang/String;

    .prologue
    .line 10657
    iget-object v0, p0, mKeyguardDelegate:Lcom/android/server/policy/keyguard/KeyguardServiceDelegate;

    if-eqz v0, :cond_9

    .line 10658
    iget-object v0, p0, mKeyguardDelegate:Lcom/android/server/policy/keyguard/KeyguardServiceDelegate;

    invoke-virtual {v0, p1}, Lcom/android/server/policy/keyguard/KeyguardServiceDelegate;->removeAdaptiveEvent(Ljava/lang/String;)V

    .line 10660
    :cond_9
    return-void
.end method

.method public removeBackWindow(Landroid/view/View;)V
    .registers 5
    .param p1, "window"    # Landroid/view/View;

    .prologue
    .line 4451
    if-eqz p1, :cond_10

    .line 4452
    iget-object v1, p0, mContext:Landroid/content/Context;

    const-string/jumbo v2, "window"

    invoke-virtual {v1, v2}, Landroid/content/Context;->getSystemService(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Landroid/view/WindowManager;

    .line 4453
    .local v0, "wm":Landroid/view/WindowManager;
    invoke-interface {v0, p1}, Landroid/view/WindowManager;->removeView(Landroid/view/View;)V

    .line 4455
    .end local v0    # "wm":Landroid/view/WindowManager;
    :cond_10
    return-void
.end method

.method public removeBackWindowForAppLaunching()V
    .registers 4

    .prologue
    .line 12655
    iget-object v0, p0, mWindowManagerFuncs:Landroid/view/WindowManagerPolicy$WindowManagerFuncs;

    invoke-interface {v0}, Landroid/view/WindowManagerPolicy$WindowManagerFuncs;->removeAppBackWindow()Z

    move-result v0

    if-eqz v0, :cond_f

    .line 12656
    iget-object v0, p0, mActivityManagerInternal:Landroid/app/ActivityManagerInternal;

    const/4 v1, 0x3

    const/4 v2, 0x5

    invoke-virtual {v0, v1, v2}, Landroid/app/ActivityManagerInternal;->onMultipleScreenStateChanged(II)V

    .line 12658
    :cond_f
    return-void
.end method

.method public removeStartingWindow(Landroid/os/IBinder;Landroid/view/View;)V
    .registers 6
    .param p1, "appToken"    # Landroid/os/IBinder;
    .param p2, "window"    # Landroid/view/View;

    .prologue
    .line 4398
    if-eqz p2, :cond_10

    .line 4399
    iget-object v1, p0, mContext:Landroid/content/Context;

    const-string/jumbo v2, "window"

    invoke-virtual {v1, v2}, Landroid/content/Context;->getSystemService(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Landroid/view/WindowManager;

    .line 4400
    .local v0, "wm":Landroid/view/WindowManager;
    invoke-interface {v0, p2}, Landroid/view/WindowManager;->removeView(Landroid/view/View;)V

    .line 4402
    .end local v0    # "wm":Landroid/view/WindowManager;
    :cond_10
    return-void
.end method

.method public removeWindowLw(Landroid/view/WindowManagerPolicy$WindowState;)V
    .registers 5
    .param p1, "win"    # Landroid/view/WindowManagerPolicy$WindowState;

    .prologue
    const/4 v2, 0x0

    .line 4656
    iget-object v0, p0, mStatusBar:Landroid/view/WindowManagerPolicy$WindowState;

    if-ne v0, p1, :cond_3f

    .line 4657
    iput-object v2, p0, mStatusBar:Landroid/view/WindowManagerPolicy$WindowState;

    .line 4658
    iget-object v0, p0, mStatusBarController:Lcom/android/server/policy/StatusBarController;

    invoke-virtual {v0, v2}, Lcom/android/server/policy/StatusBarController;->setWindow(Landroid/view/WindowManagerPolicy$WindowState;)V

    .line 4659
    iget-object v0, p0, mKeyguardDelegate:Lcom/android/server/policy/keyguard/KeyguardServiceDelegate;

    invoke-virtual {v0}, Lcom/android/server/policy/keyguard/KeyguardServiceDelegate;->showScrim()V

    .line 4663
    :cond_11
    :goto_11
    iget-object v0, p0, mNavigationBar:Landroid/view/WindowManagerPolicy$WindowState;

    if-ne v0, p1, :cond_1c

    .line 4664
    iput-object v2, p0, mNavigationBar:Landroid/view/WindowManagerPolicy$WindowState;

    .line 4665
    iget-object v0, p0, mNavigationBarController:Lcom/android/server/policy/BarController;

    invoke-virtual {v0, v2}, Lcom/android/server/policy/BarController;->setWindow(Landroid/view/WindowManagerPolicy$WindowState;)V

    .line 4669
    :cond_1c
    iget-object v0, p0, mMultiPhoneWindowManager:Lcom/android/server/policy/multiwindow/MultiPhoneWindowManager;

    invoke-virtual {v0, p1}, Lcom/android/server/policy/multiwindow/MultiPhoneWindowManager;->removeWindowLw(Landroid/view/WindowManagerPolicy$WindowState;)V

    .line 4675
    iget-object v0, p0, mCocktailPhoneWindowManager:Lcom/android/server/policy/cocktail/CocktailPhoneWindowManager;

    invoke-virtual {v0, p1}, Lcom/android/server/policy/cocktail/CocktailPhoneWindowManager;->removeWindowLw(Landroid/view/WindowManagerPolicy$WindowState;)V

    .line 4680
    iget-object v0, p0, mBottomKeyPanelWindow:Landroid/view/WindowManagerPolicy$WindowState;

    if-ne v0, p1, :cond_2c

    .line 4681
    iput-object v2, p0, mBottomKeyPanelWindow:Landroid/view/WindowManagerPolicy$WindowState;

    .line 4685
    :cond_2c
    iget-object v0, p0, mCarModeBar:Landroid/view/WindowManagerPolicy$WindowState;

    if-ne v0, p1, :cond_32

    .line 4686
    iput-object v2, p0, mCarModeBar:Landroid/view/WindowManagerPolicy$WindowState;

    .line 4690
    :cond_32
    iget-object v0, p0, mInputMethod:Landroid/view/WindowManagerPolicy$WindowState;

    if-ne v0, p1, :cond_38

    .line 4691
    iput-object v2, p0, mInputMethod:Landroid/view/WindowManagerPolicy$WindowState;

    .line 4694
    :cond_38
    iget-object v0, p0, mNightClock:Landroid/view/WindowManagerPolicy$WindowState;

    if-ne v0, p1, :cond_3e

    .line 4695
    iput-object v2, p0, mNightClock:Landroid/view/WindowManagerPolicy$WindowState;

    .line 4698
    :cond_3e
    return-void

    .line 4660
    :cond_3f
    iget-object v0, p0, mKeyguardScrim:Landroid/view/WindowManagerPolicy$WindowState;

    if-ne v0, p1, :cond_11

    .line 4661
    const-string v0, "WindowManager"

    const-string v1, "Removing keyguard scrim"

    invoke-static {v0, v1}, Landroid/util/Log;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 4662
    iput-object v2, p0, mKeyguardScrim:Landroid/view/WindowManagerPolicy$WindowState;

    goto :goto_11
.end method

.method public requestDefaultKeyguardRotationAnimation(Z)V
    .registers 2
    .param p1, "enable"    # Z

    .prologue
    .line 12866
    iput-boolean p1, p0, mIsDefaultKeyguardRotationAnmationAlwaysUsed:Z

    .line 12867
    return-void
.end method

.method public requestMetaKeyEvent(Landroid/content/ComponentName;Z)V
    .registers 4
    .param p1, "componentName"    # Landroid/content/ComponentName;
    .param p2, "request"    # Z

    .prologue
    .line 12756
    iget-object v0, p0, mSystemKeyManager:Lcom/android/server/policy/sec/SystemKeyManager;

    invoke-virtual {v0, p1, p2}, Lcom/android/server/policy/sec/SystemKeyManager;->requestMetaKeyEvent(Landroid/content/ComponentName;Z)V

    .line 12757
    return-void
.end method

.method public requestSystemKeyEvent(ILandroid/content/ComponentName;Z)Z
    .registers 5
    .param p1, "keyCode"    # I
    .param p2, "componentName"    # Landroid/content/ComponentName;
    .param p3, "request"    # Z

    .prologue
    .line 12746
    iget-object v0, p0, mSystemKeyManager:Lcom/android/server/policy/sec/SystemKeyManager;

    invoke-virtual {v0, p1, p2, p3}, Lcom/android/server/policy/sec/SystemKeyManager;->requestSystemKeyEvent(ILandroid/content/ComponentName;Z)Z

    move-result v0

    return v0
.end method

.method public requestTransientBars()V
    .registers 2

    .prologue
    .line 12793
    const/4 v0, 0x0

    invoke-virtual {p0, v0}, requestTransientBars(I)V

    .line 12794
    return-void
.end method

.method public requestTransientBars(I)V
    .registers 3
    .param p1, "displayId"    # I

    .prologue
    .line 12802
    iget-object v0, p0, mStatusBar:Landroid/view/WindowManagerPolicy$WindowState;

    if-eqz v0, :cond_9

    .line 12803
    iget-object v0, p0, mStatusBar:Landroid/view/WindowManagerPolicy$WindowState;

    invoke-direct {p0, v0}, requestTransientBars(Landroid/view/WindowManagerPolicy$WindowState;)V

    .line 12808
    :cond_9
    return-void
.end method

.method public requestTraversalForCoverView()V
    .registers 3

    .prologue
    .line 13187
    iget-object v0, p0, mCoverState:Lcom/samsung/android/cover/CoverState;

    if-eqz v0, :cond_15

    iget-object v0, p0, mCoverState:Lcom/samsung/android/cover/CoverState;

    iget-boolean v0, v0, Lcom/samsung/android/cover/CoverState;->switchState:Z

    if-nez v0, :cond_15

    iget-boolean v0, p0, mLastCoverAppCovered:Z

    if-eqz v0, :cond_15

    .line 13188
    iget-object v0, p0, mHandler:Landroid/os/Handler;

    const/16 v1, 0x3c

    invoke-virtual {v0, v1}, Landroid/os/Handler;->sendEmptyMessage(I)Z

    .line 13191
    :cond_15
    return-void
.end method

.method public rotationForOrientationLw(III)I
    .registers 14
    .param p1, "orientation"    # I
    .param p2, "lastRotation"    # I
    .param p3, "displayId"    # I

    .prologue
    .line 10712
    const-string v7, "WindowManager"

    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v8, "rotationForOrientationLw(orient="

    invoke-virtual {v6, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v6

    const-string v8, ", last="

    invoke-virtual {v6, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v6

    const-string v8, "); user="

    invoke-virtual {v6, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    iget v8, p0, mUserRotation:I

    invoke-virtual {v6, v8}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v6

    const-string v8, " "

    invoke-virtual {v6, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v8

    iget v6, p0, mUserRotationMode:I

    const/4 v9, 0x1

    if-ne v6, v9, :cond_91

    const-string v6, "USER_ROTATION_LOCKED"

    :goto_35
    invoke-virtual {v8, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    const-string v8, " sensorRotation="

    invoke-virtual {v6, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    iget-object v8, p0, mOrientationListener:Lcom/android/server/policy/PhoneWindowManager$MyOrientationListener;

    invoke-virtual {v8}, Lcom/android/server/policy/PhoneWindowManager$MyOrientationListener;->getProposedRotation()I

    move-result v8

    invoke-virtual {v6, v8}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v6

    const-string v8, " mLidState="

    invoke-virtual {v6, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    iget v8, p0, mLidState:I

    invoke-virtual {v6, v8}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v6

    const-string v8, " mDockMode="

    invoke-virtual {v6, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    iget v8, p0, mDockMode:I

    invoke-virtual {v6, v8}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v6

    const-string v8, " mHdmiPlugged="

    invoke-virtual {v6, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    iget-boolean v8, p0, mHdmiPlugged:Z

    invoke-virtual {v6, v8}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v6

    const-string v8, " mMobileKeyboardEnabled="

    invoke-virtual {v6, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    iget-boolean v8, p0, mMobileKeyboardEnabled:Z

    invoke-virtual {v6, v8}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v6

    const-string v8, " displayId="

    invoke-virtual {v6, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6, p3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-static {v7, v6}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 10726
    iget-boolean v6, p0, mForceDefaultOrientation:Z

    if-eqz v6, :cond_94

    .line 10727
    iget v4, p0, mPanelOrientation:I

    .line 10971
    :goto_90
    return v4

    .line 10712
    :cond_91
    const-string v6, ""

    goto :goto_35

    .line 10730
    :cond_94
    iget-object v7, p0, mLock:Ljava/lang/Object;

    monitor-enter v7

    .line 10732
    :try_start_97
    iget v0, p0, mLandscapeRotation:I

    .line 10733
    .local v0, "mLandscapeRotation":I
    iget v2, p0, mSeascapeRotation:I

    .line 10734
    .local v2, "mSeascapeRotation":I
    iget v1, p0, mPortraitRotation:I

    .line 10735
    .local v1, "mPortraitRotation":I
    iget v3, p0, mUpsideDownRotation:I

    .line 10746
    .local v3, "mUpsideDownRotation":I
    iget-object v6, p0, mOrientationListener:Lcom/android/server/policy/PhoneWindowManager$MyOrientationListener;

    invoke-virtual {v6}, Lcom/android/server/policy/PhoneWindowManager$MyOrientationListener;->getProposedRotation()I

    move-result v5

    .line 10748
    .local v5, "sensorRotation":I
    const/4 v6, -0x1

    if-lt v5, v6, :cond_ab

    const/4 v6, 0x3

    if-le v5, v6, :cond_ca

    .line 10749
    :cond_ab
    const-string v6, "WindowManager"

    new-instance v8, Ljava/lang/StringBuilder;

    invoke-direct {v8}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v9, "rotationForOrientationLw (sensorRotation= "

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v8

    invoke-virtual {v8, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v8

    const-string v9, ")"

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v8

    invoke-virtual {v8}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v8

    invoke-static {v6, v8}, Landroid/util/Slog;->wtf(Ljava/lang/String;Ljava/lang/String;)I

    .line 10761
    :cond_ca
    if-gez v5, :cond_cd

    .line 10762
    move v5, p2

    .line 10767
    :cond_cd
    invoke-direct {p0}, isSupportAndAttachedSViewCover()Z

    move-result v6

    if-eqz v6, :cond_f1

    iget-object v6, p0, mCoverState:Lcom/samsung/android/cover/CoverState;

    iget-boolean v6, v6, Lcom/samsung/android/cover/CoverState;->switchState:Z

    if-nez v6, :cond_f1

    iget v6, p0, mCoverCloseRotation:I

    if-ltz v6, :cond_f1

    .line 10770
    const-string v6, "WindowManager"

    const-string/jumbo v8, "prefer rotation is set by cover"

    invoke-static {v6, v8}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 10771
    iget v4, p0, mCoverCloseRotation:I

    .line 10914
    .local v4, "preferredRotation":I
    :goto_e7
    packed-switch p1, :pswitch_data_302

    .line 10968
    :pswitch_ea
    if-ltz v4, :cond_2fc

    .line 10969
    monitor-exit v7

    goto :goto_90

    .line 10973
    .end local v0    # "mLandscapeRotation":I
    .end local v1    # "mPortraitRotation":I
    .end local v2    # "mSeascapeRotation":I
    .end local v3    # "mUpsideDownRotation":I
    .end local v4    # "preferredRotation":I
    .end local v5    # "sensorRotation":I
    :catchall_ee
    move-exception v6

    monitor-exit v7
    :try_end_f0
    .catchall {:try_start_97 .. :try_end_f0} :catchall_ee

    throw v6

    .line 10775
    .restart local v0    # "mLandscapeRotation":I
    .restart local v1    # "mPortraitRotation":I
    .restart local v2    # "mSeascapeRotation":I
    .restart local v3    # "mUpsideDownRotation":I
    .restart local v5    # "sensorRotation":I
    :cond_f1
    :try_start_f1
    iget-object v6, p0, mContext:Landroid/content/Context;

    invoke-static {v6}, Lcom/android/server/policy/sec/SamsungPolicyProperties;->FolderTypeFeature(Landroid/content/Context;)I

    move-result v6

    const/4 v8, 0x2

    if-ne v6, v8, :cond_104

    iget v6, p0, mLidState:I

    const/4 v8, 0x1

    if-ne v6, v8, :cond_104

    .line 10777
    invoke-direct {p0, p1, p2}, rotationForSecondLcdOrientationLw(II)I

    move-result v4

    .restart local v4    # "preferredRotation":I
    goto :goto_e7

    .line 10780
    .end local v4    # "preferredRotation":I
    :cond_104
    iget v6, p0, mLidState:I

    const/4 v8, 0x1

    if-ne v6, v8, :cond_110

    iget v6, p0, mLidOpenRotation:I

    if-ltz v6, :cond_110

    .line 10782
    iget v4, p0, mLidOpenRotation:I

    .restart local v4    # "preferredRotation":I
    goto :goto_e7

    .line 10783
    .end local v4    # "preferredRotation":I
    :cond_110
    iget v6, p0, mDockMode:I

    const/4 v8, 0x2

    if-ne v6, v8, :cond_126

    iget-boolean v6, p0, mCarDockEnablesAccelerometer:Z

    if-nez v6, :cond_11d

    iget v6, p0, mCarDockRotation:I

    if-ltz v6, :cond_126

    .line 10788
    :cond_11d
    iget-boolean v6, p0, mCarDockEnablesAccelerometer:Z

    if-eqz v6, :cond_123

    move v4, v5

    .restart local v4    # "preferredRotation":I
    :goto_122
    goto :goto_e7

    .end local v4    # "preferredRotation":I
    :cond_123
    iget v4, p0, mCarDockRotation:I

    goto :goto_122

    .line 10790
    :cond_126
    iget-boolean v6, p0, mMouseDockedFlag:Z

    if-nez v6, :cond_14a

    iget v6, p0, mDockMode:I

    const/4 v8, 0x1

    if-eq v6, v8, :cond_139

    iget v6, p0, mDockMode:I

    const/4 v8, 0x3

    if-eq v6, v8, :cond_139

    iget v6, p0, mDockMode:I

    const/4 v8, 0x4

    if-ne v6, v8, :cond_14a

    :cond_139
    iget-boolean v6, p0, mDeskDockEnablesAccelerometer:Z

    if-nez v6, :cond_141

    iget v6, p0, mDeskDockRotation:I

    if-ltz v6, :cond_14a

    .line 10797
    :cond_141
    iget-boolean v6, p0, mDeskDockEnablesAccelerometer:Z

    if-eqz v6, :cond_147

    move v4, v5

    .restart local v4    # "preferredRotation":I
    :goto_146
    goto :goto_e7

    .end local v4    # "preferredRotation":I
    :cond_147
    iget v4, p0, mDeskDockRotation:I

    goto :goto_146

    .line 10799
    :cond_14a
    iget v6, p0, mDockMode:I

    const/16 v8, 0x68

    if-ne v6, v8, :cond_161

    iget-boolean v6, p0, mMirrorLinkDockEnablesAccelerometer:Z

    if-nez v6, :cond_158

    iget v6, p0, mMirrorlinkDockRotation:I

    if-ltz v6, :cond_161

    .line 10804
    :cond_158
    iget-boolean v6, p0, mMirrorLinkDockEnablesAccelerometer:Z

    if-eqz v6, :cond_15e

    move v4, v5

    .restart local v4    # "preferredRotation":I
    :goto_15d
    goto :goto_e7

    .end local v4    # "preferredRotation":I
    :cond_15e
    iget v4, p0, mMirrorlinkDockRotation:I

    goto :goto_15d

    .line 10806
    :cond_161
    iget-boolean v6, p0, mHdmiPlugged:Z

    if-nez v6, :cond_169

    iget-boolean v6, p0, mWifiDisplayConnected:Z

    if-eqz v6, :cond_1af

    :cond_169
    iget v6, p0, mUserRotationMode:I

    const/4 v8, 0x1

    if-eq v6, v8, :cond_1af

    iget-boolean v6, p0, mMouseDockedFlag:Z

    if-eqz v6, :cond_1af

    iget-boolean v6, p0, mPresentationFlag:Z

    if-nez v6, :cond_1af

    const-string/jumbo v6, "service.camera.running"

    const-string v8, "0"

    invoke-static {v6, v8}, Landroid/os/SystemProperties;->get(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v6

    const-string v8, "1"

    invoke-virtual {v6, v8}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v6

    if-nez v6, :cond_1af

    .line 10811
    move v4, v0

    .line 10812
    .restart local v4    # "preferredRotation":I
    const-string v6, "WindowManager"

    new-instance v8, Ljava/lang/StringBuilder;

    invoke-direct {v8}, Ljava/lang/StringBuilder;-><init>()V

    const-string v9, "Smart Dock Orientation Enabled :  "

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v8

    iget-boolean v9, p0, mMouseDockedFlag:Z

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v8

    const-string/jumbo v9, "preferredRotation is ::"

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v8

    invoke-virtual {v8, v4}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v8

    invoke-virtual {v8}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v8

    invoke-static {v6, v8}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    goto/16 :goto_e7

    .line 10813
    .end local v4    # "preferredRotation":I
    :cond_1af
    iget-boolean v6, p0, mWifiDisplayConnected:Z

    if-eqz v6, :cond_1bc

    iget v6, p0, mWifiDisplayCustomRotation:I

    const/4 v8, -0x1

    if-le v6, v8, :cond_1bc

    .line 10815
    iget v4, p0, mWifiDisplayCustomRotation:I

    .restart local v4    # "preferredRotation":I
    goto/16 :goto_e7

    .line 10816
    .end local v4    # "preferredRotation":I
    :cond_1bc
    iget-boolean v6, p0, mHdmiPlugged:Z

    if-eqz v6, :cond_1cc

    iget v6, p0, mDockMode:I

    if-nez v6, :cond_1cc

    iget v6, p0, mUndockedHdmiRotation:I

    if-ltz v6, :cond_1cc

    .line 10822
    iget v4, p0, mUndockedHdmiRotation:I

    .restart local v4    # "preferredRotation":I
    goto/16 :goto_e7

    .line 10823
    .end local v4    # "preferredRotation":I
    :cond_1cc
    iget-boolean v6, p0, mDemoRotationLock:Z

    if-eqz v6, :cond_1d4

    .line 10826
    iget v4, p0, mDemoRotation:I

    .restart local v4    # "preferredRotation":I
    goto/16 :goto_e7

    .line 10827
    .end local v4    # "preferredRotation":I
    :cond_1d4
    const/16 v6, 0xe

    if-ne p1, v6, :cond_1db

    .line 10829
    move v4, p2

    .restart local v4    # "preferredRotation":I
    goto/16 :goto_e7

    .line 10830
    .end local v4    # "preferredRotation":I
    :cond_1db
    iget-boolean v6, p0, mSupportAutoRotation:Z

    if-nez v6, :cond_1e2

    .line 10833
    const/4 v4, -0x1

    .restart local v4    # "preferredRotation":I
    goto/16 :goto_e7

    .line 10835
    .end local v4    # "preferredRotation":I
    :cond_1e2
    iget-object v6, p0, mSPWM:Lcom/android/server/policy/sec/SamsungPhoneWindowManager;

    invoke-virtual {v6}, Lcom/android/server/policy/sec/SamsungPhoneWindowManager;->isUvsOrientationRequested()Z

    move-result v6

    if-eqz v6, :cond_20c

    .line 10836
    if-eqz p1, :cond_1f3

    const/16 v6, 0x8

    if-eq p1, v6, :cond_1f3

    const/4 v6, 0x6

    if-ne p1, v6, :cond_1f6

    .line 10839
    :cond_1f3
    move v4, v0

    .restart local v4    # "preferredRotation":I
    goto/16 :goto_e7

    .line 10840
    .end local v4    # "preferredRotation":I
    :cond_1f6
    const/4 v6, 0x1

    if-eq p1, v6, :cond_200

    const/16 v6, 0x9

    if-eq p1, v6, :cond_200

    const/4 v6, 0x7

    if-ne p1, v6, :cond_203

    .line 10843
    :cond_200
    move v4, v1

    .restart local v4    # "preferredRotation":I
    goto/16 :goto_e7

    .line 10845
    .end local v4    # "preferredRotation":I
    :cond_203
    iget-object v6, p0, mSPWM:Lcom/android/server/policy/sec/SamsungPhoneWindowManager;

    invoke-virtual {v6}, Lcom/android/server/policy/sec/SamsungPhoneWindowManager;->getUvsOrientation()I

    move-result v4

    .line 10846
    .restart local v4    # "preferredRotation":I
    move p1, v4

    goto/16 :goto_e7

    .line 10849
    .end local v4    # "preferredRotation":I
    :cond_20c
    iget-boolean v6, p0, mMobileKeyboardEnabled:Z

    if-nez v6, :cond_261

    iget v6, p0, mUserRotationMode:I

    if-nez v6, :cond_226

    const/4 v6, 0x2

    if-eq p1, v6, :cond_233

    const/4 v6, -0x1

    if-eq p1, v6, :cond_233

    const/16 v6, 0xb

    if-eq p1, v6, :cond_233

    const/16 v6, 0xc

    if-eq p1, v6, :cond_233

    const/16 v6, 0xd

    if-eq p1, v6, :cond_233

    :cond_226
    const/4 v6, 0x4

    if-eq p1, v6, :cond_233

    const/16 v6, 0xa

    if-eq p1, v6, :cond_233

    const/4 v6, 0x6

    if-eq p1, v6, :cond_233

    const/4 v6, 0x7

    if-ne p1, v6, :cond_261

    .line 10861
    :cond_233
    iget v6, p0, mAllowAllRotations:I

    if-gez v6, :cond_249

    .line 10865
    iget-object v6, p0, mContext:Landroid/content/Context;

    invoke-virtual {v6}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    move-result-object v6

    const v8, 0x112003d

    invoke-virtual {v6, v8}, Landroid/content/res/Resources;->getBoolean(I)Z

    move-result v6

    if-eqz v6, :cond_25c

    const/4 v6, 0x1

    :goto_247
    iput v6, p0, mAllowAllRotations:I

    .line 10868
    :cond_249
    const/4 v6, 0x2

    if-ne v5, v6, :cond_259

    iget v6, p0, mAllowAllRotations:I

    const/4 v8, 0x1

    if-eq v6, v8, :cond_259

    const/16 v6, 0xa

    if-eq p1, v6, :cond_259

    const/16 v6, 0xd

    if-ne p1, v6, :cond_25e

    .line 10872
    :cond_259
    move v4, v5

    .restart local v4    # "preferredRotation":I
    goto/16 :goto_e7

    .line 10865
    .end local v4    # "preferredRotation":I
    :cond_25c
    const/4 v6, 0x0

    goto :goto_247

    .line 10874
    :cond_25e
    move v4, p2

    .restart local v4    # "preferredRotation":I
    goto/16 :goto_e7

    .line 10876
    .end local v4    # "preferredRotation":I
    :cond_261
    iget-boolean v6, p0, mMobileKeyboardEnabled:Z

    if-eqz v6, :cond_26b

    const/4 v6, 0x5

    if-eq p1, v6, :cond_26b

    .line 10881
    move v4, v1

    .restart local v4    # "preferredRotation":I
    goto/16 :goto_e7

    .line 10882
    .end local v4    # "preferredRotation":I
    :cond_26b
    iget v6, p0, mUserRotationMode:I

    const/4 v8, 0x1

    if-ne v6, v8, :cond_277

    const/4 v6, 0x5

    if-eq p1, v6, :cond_277

    .line 10888
    iget v4, p0, mUserRotation:I

    .restart local v4    # "preferredRotation":I
    goto/16 :goto_e7

    .line 10892
    .end local v4    # "preferredRotation":I
    :cond_277
    iget v6, p0, mCocktail180RotationEnabled:I

    const/4 v8, 0x1

    if-ne v6, v8, :cond_297

    .line 10893
    sparse-switch p1, :sswitch_data_320

    .line 10906
    const/4 v4, -0x1

    .line 10907
    .restart local v4    # "preferredRotation":I
    goto/16 :goto_e7

    .line 10896
    .end local v4    # "preferredRotation":I
    :sswitch_282
    invoke-direct {p0, v5, p3}, isAnyPortrait(II)Z

    move-result v6

    if-eqz v6, :cond_28b

    .line 10897
    move v4, v5

    .restart local v4    # "preferredRotation":I
    goto/16 :goto_e7

    .line 10898
    .end local v4    # "preferredRotation":I
    :cond_28b
    invoke-direct {p0, p2, p3}, isAnyPortrait(II)Z

    move-result v6

    if-eqz v6, :cond_294

    .line 10899
    move v4, p2

    .restart local v4    # "preferredRotation":I
    goto/16 :goto_e7

    .line 10901
    .end local v4    # "preferredRotation":I
    :cond_294
    const/4 v4, -0x1

    .line 10903
    .restart local v4    # "preferredRotation":I
    goto/16 :goto_e7

    .line 10910
    .end local v4    # "preferredRotation":I
    :cond_297
    const/4 v4, -0x1

    .restart local v4    # "preferredRotation":I
    goto/16 :goto_e7

    .line 10917
    :pswitch_29a
    invoke-direct {p0, v4, p3}, isAnyPortrait(II)Z

    move-result v6

    if-eqz v6, :cond_2a3

    .line 10918
    monitor-exit v7

    goto/16 :goto_90

    .line 10920
    :cond_2a3
    monitor-exit v7

    move v4, v1

    goto/16 :goto_90

    .line 10924
    :pswitch_2a7
    invoke-direct {p0, v4, p3}, isLandscapeOrSeascape(II)Z

    move-result v6

    if-eqz v6, :cond_2b0

    .line 10925
    monitor-exit v7

    goto/16 :goto_90

    .line 10927
    :cond_2b0
    monitor-exit v7

    move v4, v0

    goto/16 :goto_90

    .line 10931
    :pswitch_2b4
    invoke-direct {p0, v4, p3}, isAnyPortrait(II)Z

    move-result v6

    if-eqz v6, :cond_2bd

    .line 10932
    monitor-exit v7

    goto/16 :goto_90

    .line 10934
    :cond_2bd
    monitor-exit v7

    move v4, v3

    goto/16 :goto_90

    .line 10938
    :pswitch_2c1
    invoke-direct {p0, v4, p3}, isLandscapeOrSeascape(II)Z

    move-result v6

    if-eqz v6, :cond_2ca

    .line 10939
    monitor-exit v7

    goto/16 :goto_90

    .line 10941
    :cond_2ca
    monitor-exit v7

    move v4, v2

    goto/16 :goto_90

    .line 10946
    :pswitch_2ce
    invoke-direct {p0, v4, p3}, isLandscapeOrSeascape(II)Z

    move-result v6

    if-eqz v6, :cond_2d7

    .line 10947
    monitor-exit v7

    goto/16 :goto_90

    .line 10949
    :cond_2d7
    invoke-direct {p0, p2, p3}, isLandscapeOrSeascape(II)Z

    move-result v6

    if-eqz v6, :cond_2e1

    .line 10950
    monitor-exit v7

    move v4, p2

    goto/16 :goto_90

    .line 10952
    :cond_2e1
    monitor-exit v7

    move v4, v0

    goto/16 :goto_90

    .line 10957
    :pswitch_2e5
    invoke-direct {p0, v4, p3}, isAnyPortrait(II)Z

    move-result v6

    if-eqz v6, :cond_2ee

    .line 10958
    monitor-exit v7

    goto/16 :goto_90

    .line 10960
    :cond_2ee
    invoke-direct {p0, p2, p3}, isAnyPortrait(II)Z

    move-result v6

    if-eqz v6, :cond_2f8

    .line 10961
    monitor-exit v7

    move v4, p2

    goto/16 :goto_90

    .line 10963
    :cond_2f8
    monitor-exit v7

    move v4, v1

    goto/16 :goto_90

    .line 10971
    :cond_2fc
    iget v4, p0, mPanelOrientation:I

    .end local v4    # "preferredRotation":I
    monitor-exit v7
    :try_end_2ff
    .catchall {:try_start_f1 .. :try_end_2ff} :catchall_ee

    goto/16 :goto_90

    .line 10914
    nop

    :pswitch_data_302
    .packed-switch 0x0
        :pswitch_2a7
        :pswitch_29a
        :pswitch_ea
        :pswitch_ea
        :pswitch_ea
        :pswitch_ea
        :pswitch_2ce
        :pswitch_2e5
        :pswitch_2c1
        :pswitch_2b4
        :pswitch_ea
        :pswitch_2ce
        :pswitch_2e5
    .end packed-switch

    .line 10893
    :sswitch_data_320
    .sparse-switch
        0x1 -> :sswitch_282
        0x9 -> :sswitch_282
    .end sparse-switch
.end method

.method public rotationHasCompatibleMetricsLw(III)Z
    .registers 5
    .param p1, "orientation"    # I
    .param p2, "rotation"    # I
    .param p3, "displayId"    # I

    .prologue
    .line 10978
    packed-switch p1, :pswitch_data_10

    .line 10990
    :pswitch_3
    const/4 v0, 0x1

    :goto_4
    return v0

    .line 10982
    :pswitch_5
    invoke-direct {p0, p2, p3}, isAnyPortrait(II)Z

    move-result v0

    goto :goto_4

    .line 10987
    :pswitch_a
    invoke-direct {p0, p2, p3}, isLandscapeOrSeascape(II)Z

    move-result v0

    goto :goto_4

    .line 10978
    nop

    :pswitch_data_10
    .packed-switch 0x0
        :pswitch_a
        :pswitch_5
        :pswitch_3
        :pswitch_3
        :pswitch_3
        :pswitch_3
        :pswitch_a
        :pswitch_5
        :pswitch_a
        :pswitch_5
    .end packed-switch
.end method

.method public screenTurnedOff()V
    .registers 2

    .prologue
    .line 10198
    const/4 v0, 0x0

    invoke-virtual {p0, v0}, screenTurnedOff(I)V

    .line 10199
    return-void
.end method

.method public screenTurnedOff(I)V
    .registers 5
    .param p1, "displayId"    # I

    .prologue
    .line 10204
    sget-boolean v0, DEBUG_WAKEUP:Z

    if-eqz v0, :cond_b

    const-string v0, "WindowManager"

    const-string v1, "Screen turned off..."

    invoke-static {v0, v1}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 10211
    :cond_b
    const/4 v0, 0x1

    invoke-direct {p0, v0}, updateScreenOffSleepToken(Z)V

    .line 10215
    iget-object v1, p0, mLock:Ljava/lang/Object;

    monitor-enter v1

    .line 10236
    const/4 v0, 0x0

    :try_start_13
    iput-boolean v0, p0, mScreenOnEarly:Z

    .line 10237
    const/4 v0, 0x0

    iput-boolean v0, p0, mScreenOnFully:Z

    .line 10241
    const/4 v0, 0x0

    iput-boolean v0, p0, mKeyguardDrawComplete:Z

    .line 10242
    const/4 v0, 0x0

    iput-boolean v0, p0, mWindowManagerDrawComplete:Z

    .line 10243
    const/4 v0, 0x0

    iput-object v0, p0, mScreenOnListener:Landroid/view/WindowManagerPolicy$ScreenOnListener;

    .line 10244
    invoke-virtual {p0}, updateOrientationListenerLp()V

    .line 10246
    iget-object v0, p0, mKeyguardDelegate:Lcom/android/server/policy/keyguard/KeyguardServiceDelegate;

    if-eqz v0, :cond_2d

    .line 10247
    iget-object v0, p0, mKeyguardDelegate:Lcom/android/server/policy/keyguard/KeyguardServiceDelegate;

    invoke-virtual {v0}, Lcom/android/server/policy/keyguard/KeyguardServiceDelegate;->onScreenTurnedOff()V

    .line 10250
    :cond_2d
    iget-object v0, p0, mForceUserActivityTimeoutWin:Ljava/util/ArrayList;

    invoke-virtual {v0}, Ljava/util/ArrayList;->clear()V

    .line 10254
    invoke-static {}, Lcom/android/server/policy/sec/SamsungPolicyProperties;->isEasyOneHandRunning()Z

    move-result v0

    if-eqz v0, :cond_3e

    .line 10255
    iget-object v0, p0, mSPWM:Lcom/android/server/policy/sec/SamsungPhoneWindowManager;

    const/4 v2, 0x0

    invoke-virtual {v0, v2}, Lcom/android/server/policy/sec/SamsungPhoneWindowManager;->stopEasyOneHandervice(I)V

    .line 10259
    :cond_3e
    iget-object v0, p0, mSPWM:Lcom/android/server/policy/sec/SamsungPhoneWindowManager;

    const/4 v2, 0x3

    invoke-virtual {v0, v2}, Lcom/android/server/policy/sec/SamsungPhoneWindowManager;->startAodService(I)Z

    .line 10261
    monitor-exit v1

    .line 10262
    return-void

    .line 10261
    :catchall_46
    move-exception v0

    monitor-exit v1
    :try_end_48
    .catchall {:try_start_13 .. :try_end_48} :catchall_46

    throw v0
.end method

.method public screenTurnedOn()V
    .registers 4

    .prologue
    .line 10342
    iget-object v1, p0, mLock:Ljava/lang/Object;

    monitor-enter v1

    .line 10343
    :try_start_3
    iget-object v0, p0, mKeyguardDelegate:Lcom/android/server/policy/keyguard/KeyguardServiceDelegate;

    if-eqz v0, :cond_c

    .line 10344
    iget-object v0, p0, mKeyguardDelegate:Lcom/android/server/policy/keyguard/KeyguardServiceDelegate;

    invoke-virtual {v0}, Lcom/android/server/policy/keyguard/KeyguardServiceDelegate;->onScreenTurnedOn()V

    .line 10348
    :cond_c
    iget-object v0, p0, mSPWM:Lcom/android/server/policy/sec/SamsungPhoneWindowManager;

    const/4 v2, 0x2

    invoke-virtual {v0, v2}, Lcom/android/server/policy/sec/SamsungPhoneWindowManager;->startAodService(I)Z

    move-result v0

    if-eqz v0, :cond_1c

    .line 10349
    iget-object v0, p0, mHandler:Landroid/os/Handler;

    const/16 v2, 0x3c

    invoke-virtual {v0, v2}, Landroid/os/Handler;->sendEmptyMessage(I)Z

    .line 10352
    :cond_1c
    monitor-exit v1

    .line 10353
    return-void

    .line 10352
    :catchall_1e
    move-exception v0

    monitor-exit v1
    :try_end_20
    .catchall {:try_start_3 .. :try_end_20} :catchall_1e

    throw v0
.end method

.method public screenTurningOn(Landroid/view/WindowManagerPolicy$ScreenOnListener;)V
    .registers 3
    .param p1, "screenOnListener"    # Landroid/view/WindowManagerPolicy$ScreenOnListener;

    .prologue
    .line 10268
    const/4 v0, 0x0

    invoke-virtual {p0, p1, v0}, screenTurningOn(Landroid/view/WindowManagerPolicy$ScreenOnListener;I)V

    .line 10269
    return-void
.end method

.method public screenTurningOn(Landroid/view/WindowManagerPolicy$ScreenOnListener;I)V
    .registers 9
    .param p1, "screenOnListener"    # Landroid/view/WindowManagerPolicy$ScreenOnListener;
    .param p2, "displayId"    # I

    .prologue
    const/4 v2, 0x0

    .line 10274
    sget-boolean v0, DEBUG_WAKEUP:Z

    if-eqz v0, :cond_c

    const-string v0, "WindowManager"

    const-string v1, "Screen turning on..."

    invoke-static {v0, v1}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 10283
    :cond_c
    iget-boolean v0, p0, mScreenOnEarly:Z

    if-eqz v0, :cond_11

    .line 10337
    :goto_10
    return-void

    .line 10293
    :cond_11
    invoke-direct {p0, v2}, updateScreenOffSleepToken(Z)V

    .line 10297
    iget-object v1, p0, mLock:Ljava/lang/Object;

    monitor-enter v1

    .line 10318
    const/4 v0, 0x1

    :try_start_18
    iput-boolean v0, p0, mScreenOnEarly:Z

    .line 10319
    const/4 v0, 0x0

    iput-boolean v0, p0, mScreenOnFully:Z

    .line 10323
    const/4 v0, 0x0

    iput-boolean v0, p0, mKeyguardDrawComplete:Z

    .line 10324
    const/4 v0, 0x0

    iput-boolean v0, p0, mWindowManagerDrawComplete:Z

    .line 10325
    iput-object p1, p0, mScreenOnListener:Landroid/view/WindowManagerPolicy$ScreenOnListener;

    .line 10327
    iget-object v0, p0, mKeyguardDelegate:Lcom/android/server/policy/keyguard/KeyguardServiceDelegate;

    if-eqz v0, :cond_43

    .line 10328
    iget-object v0, p0, mHandler:Landroid/os/Handler;

    const/4 v2, 0x6

    invoke-virtual {v0, v2}, Landroid/os/Handler;->removeMessages(I)V

    .line 10329
    iget-object v0, p0, mHandler:Landroid/os/Handler;

    const/4 v2, 0x6

    const-wide/16 v4, 0xbb8

    invoke-virtual {v0, v2, v4, v5}, Landroid/os/Handler;->sendEmptyMessageDelayed(IJ)Z

    .line 10330
    iget-object v0, p0, mKeyguardDelegate:Lcom/android/server/policy/keyguard/KeyguardServiceDelegate;

    iget-object v2, p0, mKeyguardDrawnCallback:Lcom/android/server/policy/keyguard/KeyguardServiceDelegate$DrawnListener;

    invoke-virtual {v0, v2}, Lcom/android/server/policy/keyguard/KeyguardServiceDelegate;->onScreenTurningOn(Lcom/android/server/policy/keyguard/KeyguardServiceDelegate$DrawnListener;)V

    .line 10336
    :goto_3e
    monitor-exit v1

    goto :goto_10

    :catchall_40
    move-exception v0

    monitor-exit v1
    :try_end_42
    .catchall {:try_start_18 .. :try_end_42} :catchall_40

    throw v0

    .line 10332
    :cond_43
    :try_start_43
    sget-boolean v0, DEBUG_WAKEUP:Z

    if-eqz v0, :cond_4f

    const-string v0, "WindowManager"

    const-string/jumbo v2, "null mKeyguardDelegate: setting mKeyguardDrawComplete."

    invoke-static {v0, v2}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 10334
    :cond_4f
    sget v0, mScreenTurnDisplayId:I

    invoke-direct {p0, v0}, finishKeyguardDrawn(I)V
    :try_end_54
    .catchall {:try_start_43 .. :try_end_54} :catchall_40

    goto :goto_3e
.end method

.method public selectAnimationLw(Landroid/view/WindowManagerPolicy$WindowState;I)I
    .registers 12
    .param p1, "win"    # Landroid/view/WindowManagerPolicy$WindowState;
    .param p2, "transit"    # I

    .prologue
    .line 4710
    invoke-interface {p1}, Landroid/view/WindowManagerPolicy$WindowState;->getMultiWindowStyleLw()Lcom/samsung/android/multiwindow/MultiWindowStyle;

    move-result-object v6

    .line 4711
    .local v6, "style":Lcom/samsung/android/multiwindow/MultiWindowStyle;
    if-eqz v6, :cond_14

    invoke-virtual {v6}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->getType()I

    move-result v7

    if-eqz v7, :cond_14

    .line 4712
    const/4 v7, 0x1

    if-eq p2, v7, :cond_12

    const/4 v7, 0x2

    if-ne p2, v7, :cond_14

    .line 4713
    :cond_12
    const/4 v7, -0x1

    .line 4822
    :goto_13
    return v7

    .line 4718
    :cond_14
    const/4 v3, 0x0

    .line 4719
    .local v3, "mStatusBar":Landroid/view/WindowManagerPolicy$WindowState;
    const/4 v2, 0x0

    .line 4725
    .local v2, "mNavigationBar":Landroid/view/WindowManagerPolicy$WindowState;
    iget-object v3, p0, mStatusBar:Landroid/view/WindowManagerPolicy$WindowState;

    .line 4726
    iget-object v2, p0, mNavigationBar:Landroid/view/WindowManagerPolicy$WindowState;

    .line 4729
    if-ne p1, v3, :cond_66

    .line 4732
    invoke-interface {p1}, Landroid/view/WindowManagerPolicy$WindowState;->getAttrs()Landroid/view/WindowManager$LayoutParams;

    move-result-object v7

    iget v7, v7, Landroid/view/WindowManager$LayoutParams;->samsungFlags:I

    const/high16 v8, 0x10000000

    and-int/2addr v7, v8

    if-eqz v7, :cond_39

    const/4 v1, 0x1

    .line 4733
    .local v1, "isSViewCover":Z
    :goto_28
    invoke-virtual {p0}, isForceHideBySViewCover()Z

    move-result v7

    if-eqz v7, :cond_3b

    iget v7, p0, mHideSViewCover:I

    if-nez v7, :cond_3b

    const/4 v4, 0x1

    .line 4735
    .local v4, "needShowSViewCover":Z
    :goto_33
    if-nez v1, :cond_37

    if-eqz v4, :cond_3d

    .line 4736
    :cond_37
    const/4 v7, -0x1

    goto :goto_13

    .line 4732
    .end local v1    # "isSViewCover":Z
    .end local v4    # "needShowSViewCover":Z
    :cond_39
    const/4 v1, 0x0

    goto :goto_28

    .line 4733
    .restart local v1    # "isSViewCover":Z
    :cond_3b
    const/4 v4, 0x0

    goto :goto_33

    .line 4740
    .restart local v4    # "needShowSViewCover":Z
    :cond_3d
    invoke-interface {p1}, Landroid/view/WindowManagerPolicy$WindowState;->getAttrs()Landroid/view/WindowManager$LayoutParams;

    move-result-object v7

    iget v7, v7, Landroid/view/WindowManager$LayoutParams;->privateFlags:I

    and-int/lit16 v7, v7, 0x400

    if-eqz v7, :cond_52

    const/4 v0, 0x1

    .line 4741
    .local v0, "isKeyguard":Z
    :goto_48
    const/4 v7, 0x2

    if-eq p2, v7, :cond_4e

    const/4 v7, 0x4

    if-ne p2, v7, :cond_58

    .line 4743
    :cond_4e
    if-eqz v0, :cond_54

    const/4 v7, -0x1

    goto :goto_13

    .line 4740
    .end local v0    # "isKeyguard":Z
    :cond_52
    const/4 v0, 0x0

    goto :goto_48

    .line 4743
    .restart local v0    # "isKeyguard":Z
    :cond_54
    const v7, 0x10a0027

    goto :goto_13

    .line 4744
    :cond_58
    const/4 v7, 0x1

    if-eq p2, v7, :cond_5e

    const/4 v7, 0x3

    if-ne p2, v7, :cond_9f

    .line 4746
    :cond_5e
    if-eqz v0, :cond_62

    const/4 v7, -0x1

    goto :goto_13

    :cond_62
    const v7, 0x10a0026

    goto :goto_13

    .line 4748
    .end local v0    # "isKeyguard":Z
    .end local v1    # "isSViewCover":Z
    .end local v4    # "needShowSViewCover":Z
    :cond_66
    if-ne p1, v2, :cond_9f

    .line 4749
    invoke-interface {p1}, Landroid/view/WindowManagerPolicy$WindowState;->getAttrs()Landroid/view/WindowManager$LayoutParams;

    move-result-object v7

    iget v7, v7, Landroid/view/WindowManager$LayoutParams;->windowAnimations:I

    if-eqz v7, :cond_72

    .line 4750
    const/4 v7, 0x0

    goto :goto_13

    .line 4753
    :cond_72
    iget-boolean v7, p0, mNavigationBarOnBottom:Z

    if-eqz v7, :cond_8a

    .line 4754
    const/4 v7, 0x2

    if-eq p2, v7, :cond_7c

    const/4 v7, 0x4

    if-ne p2, v7, :cond_80

    .line 4756
    :cond_7c
    const v7, 0x10a0021

    goto :goto_13

    .line 4757
    :cond_80
    const/4 v7, 0x1

    if-eq p2, v7, :cond_86

    const/4 v7, 0x3

    if-ne p2, v7, :cond_9f

    .line 4759
    :cond_86
    const v7, 0x10a0020

    goto :goto_13

    .line 4762
    :cond_8a
    const/4 v7, 0x2

    if-eq p2, v7, :cond_90

    const/4 v7, 0x4

    if-ne p2, v7, :cond_94

    .line 4764
    :cond_90
    const v7, 0x10a0025

    goto :goto_13

    .line 4765
    :cond_94
    const/4 v7, 0x1

    if-eq p2, v7, :cond_9a

    const/4 v7, 0x3

    if-ne p2, v7, :cond_9f

    .line 4767
    :cond_9a
    const v7, 0x10a0024

    goto/16 :goto_13

    .line 4774
    :cond_9f
    iget-object v7, p0, mContext:Landroid/content/Context;

    invoke-static {v7}, Lcom/samsung/android/cocktailbar/CocktailBarFeatures;->isSystemBarType(Landroid/content/Context;)Z

    move-result v7

    if-eqz v7, :cond_b2

    .line 4775
    iget-object v7, p0, mCocktailPhoneWindowManager:Lcom/android/server/policy/cocktail/CocktailPhoneWindowManager;

    invoke-virtual {v7, p1, p2}, Lcom/android/server/policy/cocktail/CocktailPhoneWindowManager;->selectAnimationLw(Landroid/view/WindowManagerPolicy$WindowState;I)I

    move-result v5

    .line 4776
    .local v5, "result":I
    if-eqz v5, :cond_b2

    move v7, v5

    goto/16 :goto_13

    .line 4782
    .end local v5    # "result":I
    :cond_b2
    iget-object v7, p0, mCarModeBar:Landroid/view/WindowManagerPolicy$WindowState;

    if-ne p1, v7, :cond_e6

    .line 4783
    iget-boolean v7, p0, mCarModeBarOnBottom:Z

    if-eqz v7, :cond_d0

    .line 4784
    const/4 v7, 0x2

    if-eq p2, v7, :cond_c0

    const/4 v7, 0x4

    if-ne p2, v7, :cond_c5

    .line 4786
    :cond_c0
    const v7, 0x10a0021

    goto/16 :goto_13

    .line 4787
    :cond_c5
    const/4 v7, 0x1

    if-eq p2, v7, :cond_cb

    const/4 v7, 0x3

    if-ne p2, v7, :cond_e6

    .line 4789
    :cond_cb
    const v7, 0x10a0020

    goto/16 :goto_13

    .line 4792
    :cond_d0
    const/4 v7, 0x2

    if-eq p2, v7, :cond_d6

    const/4 v7, 0x4

    if-ne p2, v7, :cond_db

    .line 4794
    :cond_d6
    const v7, 0x10a0023

    goto/16 :goto_13

    .line 4795
    :cond_db
    const/4 v7, 0x1

    if-eq p2, v7, :cond_e1

    const/4 v7, 0x3

    if-ne p2, v7, :cond_e6

    .line 4797
    :cond_e1
    const v7, 0x10a0022

    goto/16 :goto_13

    .line 4803
    :cond_e6
    const/4 v7, 0x5

    if-ne p2, v7, :cond_ff

    .line 4804
    invoke-interface {p1}, Landroid/view/WindowManagerPolicy$WindowState;->hasAppShownWindows()Z

    move-result v7

    if-eqz v7, :cond_113

    .line 4807
    invoke-interface {p1}, Landroid/view/WindowManagerPolicy$WindowState;->isCustomStartingAnimationLw()Z

    move-result v7

    if-eqz v7, :cond_fa

    .line 4808
    const v7, 0x10a0012

    goto/16 :goto_13

    .line 4811
    :cond_fa
    const v7, 0x10a0011

    goto/16 :goto_13

    .line 4813
    :cond_ff
    invoke-interface {p1}, Landroid/view/WindowManagerPolicy$WindowState;->getAttrs()Landroid/view/WindowManager$LayoutParams;

    move-result-object v7

    iget v7, v7, Landroid/view/WindowManager$LayoutParams;->type:I

    const/16 v8, 0x7e7

    if-ne v7, v8, :cond_113

    iget-boolean v7, p0, mDreamingLockscreen:Z

    if-eqz v7, :cond_113

    const/4 v7, 0x1

    if-ne p2, v7, :cond_113

    .line 4819
    const/4 v7, -0x1

    goto/16 :goto_13

    .line 4822
    :cond_113
    const/4 v7, 0x0

    goto/16 :goto_13
.end method

.method public selectRotationAnimationLw([I)V
    .registers 9
    .param p1, "anim"    # [I

    .prologue
    const v6, 0x10a0075

    const v5, 0x10a0074

    const v4, 0x10a0073

    const/4 v1, 0x1

    const/4 v2, 0x0

    .line 4831
    iget-object v3, p0, mTopFullscreenOpaqueWindowState:Landroid/view/WindowManagerPolicy$WindowState;

    if-eqz v3, :cond_60

    iget-boolean v3, p0, mTopIsFullscreen:Z

    if-eqz v3, :cond_60

    .line 4832
    iget-object v3, p0, mTopFullscreenOpaqueWindowState:Landroid/view/WindowManagerPolicy$WindowState;

    invoke-interface {v3}, Landroid/view/WindowManagerPolicy$WindowState;->getAttrs()Landroid/view/WindowManager$LayoutParams;

    move-result-object v3

    iget v3, v3, Landroid/view/WindowManager$LayoutParams;->rotationAnimation:I

    packed-switch v3, :pswitch_data_68

    .line 4843
    aput v2, p1, v1

    aput v2, p1, v2

    .line 4851
    :goto_22
    iget v3, p0, mAllowAllRotations:I

    if-nez v3, :cond_65

    move v0, v1

    .line 4852
    .local v0, "isPhone":Z
    :goto_27
    if-eqz v0, :cond_37

    invoke-virtual {p0}, isStatusBarKeyguard()Z

    move-result v3

    if-nez v3, :cond_33

    iget-boolean v3, p0, mIsDefaultKeyguardRotationAnmationAlwaysUsed:Z

    if-eqz v3, :cond_37

    .line 4853
    :cond_33
    aput v6, p1, v2

    .line 4854
    aput v4, p1, v1

    .line 4860
    :cond_37
    invoke-virtual {p0}, isForceHideBySViewCover()Z

    move-result v3

    if-eqz v3, :cond_41

    .line 4861
    aput v5, p1, v2

    .line 4862
    aput v4, p1, v1

    .line 4868
    :cond_41
    invoke-virtual {p0}, isCocktailRotationAnimationNeeded()Z

    move-result v3

    if-eqz v3, :cond_4b

    .line 4869
    aput v5, p1, v2

    .line 4870
    aput v4, p1, v1

    .line 4876
    :cond_4b
    invoke-virtual {p0}, isForceHideByNightClock()Z

    move-result v3

    if-eqz v3, :cond_55

    .line 4877
    aput v5, p1, v2

    .line 4878
    aput v4, p1, v1

    .line 4882
    :cond_55
    return-void

    .line 4834
    .end local v0    # "isPhone":Z
    :pswitch_56
    aput v6, p1, v2

    .line 4835
    aput v4, p1, v1

    goto :goto_22

    .line 4838
    :pswitch_5b
    aput v5, p1, v2

    .line 4839
    aput v4, p1, v1

    goto :goto_22

    .line 4847
    :cond_60
    aput v2, p1, v1

    aput v2, p1, v2

    goto :goto_22

    :cond_65
    move v0, v2

    .line 4851
    goto :goto_27

    .line 4832
    nop

    :pswitch_data_68
    .packed-switch 0x1
        :pswitch_56
        :pswitch_5b
    .end packed-switch
.end method

.method sendCloseSystemWindows()V
    .registers 3

    .prologue
    .line 10694
    iget-object v0, p0, mContext:Landroid/content/Context;

    const/4 v1, 0x0

    invoke-static {v0, v1}, Lcom/android/internal/policy/PhoneWindow;->sendCloseSystemWindows(Landroid/content/Context;Ljava/lang/String;)V

    .line 10695
    return-void
.end method

.method sendCloseSystemWindows(Ljava/lang/String;)V
    .registers 3
    .param p1, "reason"    # Ljava/lang/String;

    .prologue
    .line 10698
    iget-object v0, p0, mContext:Landroid/content/Context;

    invoke-static {v0, p1}, Lcom/android/internal/policy/PhoneWindow;->sendCloseSystemWindows(Landroid/content/Context;Ljava/lang/String;)V

    .line 10699
    return-void
.end method

.method public setAdaptiveEvent(Ljava/lang/String;Landroid/widget/RemoteViews;Landroid/widget/RemoteViews;)V
    .registers 5
    .param p1, "requestClass"    # Ljava/lang/String;
    .param p2, "smallView"    # Landroid/widget/RemoteViews;
    .param p3, "bigView"    # Landroid/widget/RemoteViews;

    .prologue
    .line 10647
    iget-object v0, p0, mKeyguardDelegate:Lcom/android/server/policy/keyguard/KeyguardServiceDelegate;

    if-eqz v0, :cond_9

    .line 10648
    iget-object v0, p0, mKeyguardDelegate:Lcom/android/server/policy/keyguard/KeyguardServiceDelegate;

    invoke-virtual {v0, p1, p2, p3}, Lcom/android/server/policy/keyguard/KeyguardServiceDelegate;->setAdaptiveEvent(Ljava/lang/String;Landroid/widget/RemoteViews;Landroid/widget/RemoteViews;)V

    .line 10650
    :cond_9
    return-void
.end method

.method setAttachedWindowFrames(Landroid/view/WindowManagerPolicy$WindowState;IILandroid/view/WindowManagerPolicy$WindowState;ZLandroid/graphics/Rect;Landroid/graphics/Rect;Landroid/graphics/Rect;Landroid/graphics/Rect;Landroid/graphics/Rect;)V
    .registers 13
    .param p1, "win"    # Landroid/view/WindowManagerPolicy$WindowState;
    .param p2, "fl"    # I
    .param p3, "adjust"    # I
    .param p4, "attached"    # Landroid/view/WindowManagerPolicy$WindowState;
    .param p5, "insetDecors"    # Z
    .param p6, "pf"    # Landroid/graphics/Rect;
    .param p7, "df"    # Landroid/graphics/Rect;
    .param p8, "of"    # Landroid/graphics/Rect;
    .param p9, "cf"    # Landroid/graphics/Rect;
    .param p10, "vf"    # Landroid/graphics/Rect;

    .prologue
    .line 6709
    invoke-interface {p1}, Landroid/view/WindowManagerPolicy$WindowState;->getSurfaceLayer()I

    move-result v0

    iget v1, p0, mDockLayer:I

    if-le v0, v1, :cond_44

    invoke-interface {p4}, Landroid/view/WindowManagerPolicy$WindowState;->getSurfaceLayer()I

    move-result v0

    iget v1, p0, mDockLayer:I

    if-ge v0, v1, :cond_44

    .line 6717
    iget v0, p0, mDockLeft:I

    iput v0, p10, Landroid/graphics/Rect;->left:I

    iput v0, p9, Landroid/graphics/Rect;->left:I

    iput v0, p8, Landroid/graphics/Rect;->left:I

    iput v0, p7, Landroid/graphics/Rect;->left:I

    .line 6718
    iget v0, p0, mDockTop:I

    iput v0, p10, Landroid/graphics/Rect;->top:I

    iput v0, p9, Landroid/graphics/Rect;->top:I

    iput v0, p8, Landroid/graphics/Rect;->top:I

    iput v0, p7, Landroid/graphics/Rect;->top:I

    .line 6719
    iget v0, p0, mDockRight:I

    iput v0, p10, Landroid/graphics/Rect;->right:I

    iput v0, p9, Landroid/graphics/Rect;->right:I

    iput v0, p8, Landroid/graphics/Rect;->right:I

    iput v0, p7, Landroid/graphics/Rect;->right:I

    .line 6720
    iget v0, p0, mDockBottom:I

    iput v0, p10, Landroid/graphics/Rect;->bottom:I

    iput v0, p9, Landroid/graphics/Rect;->bottom:I

    iput v0, p8, Landroid/graphics/Rect;->bottom:I

    iput v0, p7, Landroid/graphics/Rect;->bottom:I

    .line 6768
    .end local p9    # "cf":Landroid/graphics/Rect;
    :goto_38
    and-int/lit16 v0, p2, 0x100

    if-nez v0, :cond_de

    .line 6769
    invoke-interface {p4}, Landroid/view/WindowManagerPolicy$WindowState;->getFrameLw()Landroid/graphics/Rect;

    move-result-object v0

    invoke-virtual {p6, v0}, Landroid/graphics/Rect;->set(Landroid/graphics/Rect;)V

    .line 6774
    :cond_43
    :goto_43
    return-void

    .line 6728
    .restart local p9    # "cf":Landroid/graphics/Rect;
    :cond_44
    const/16 v0, 0x10

    if-eq p3, v0, :cond_73

    .line 6733
    const/high16 v0, 0x40000000    # 2.0f

    and-int/2addr v0, p2

    if-eqz v0, :cond_6e

    invoke-interface {p4}, Landroid/view/WindowManagerPolicy$WindowState;->getContentFrameLw()Landroid/graphics/Rect;

    move-result-object v0

    :goto_51
    invoke-virtual {p9, v0}, Landroid/graphics/Rect;->set(Landroid/graphics/Rect;)V

    .line 6755
    :cond_54
    :goto_54
    if-eqz p5, :cond_db

    invoke-interface {p4}, Landroid/view/WindowManagerPolicy$WindowState;->getDisplayFrameLw()Landroid/graphics/Rect;

    move-result-object v0

    :goto_5a
    invoke-virtual {p7, v0}, Landroid/graphics/Rect;->set(Landroid/graphics/Rect;)V

    .line 6756
    if-eqz p5, :cond_63

    invoke-interface {p4}, Landroid/view/WindowManagerPolicy$WindowState;->getOverscanFrameLw()Landroid/graphics/Rect;

    move-result-object p9

    .end local p9    # "cf":Landroid/graphics/Rect;
    :cond_63
    invoke-virtual {p8, p9}, Landroid/graphics/Rect;->set(Landroid/graphics/Rect;)V

    .line 6757
    invoke-interface {p4}, Landroid/view/WindowManagerPolicy$WindowState;->getVisibleFrameLw()Landroid/graphics/Rect;

    move-result-object v0

    invoke-virtual {p10, v0}, Landroid/graphics/Rect;->set(Landroid/graphics/Rect;)V

    goto :goto_38

    .line 6733
    .restart local p9    # "cf":Landroid/graphics/Rect;
    :cond_6e
    invoke-interface {p4}, Landroid/view/WindowManagerPolicy$WindowState;->getOverscanFrameLw()Landroid/graphics/Rect;

    move-result-object v0

    goto :goto_51

    .line 6742
    :cond_73
    invoke-interface {p4}, Landroid/view/WindowManagerPolicy$WindowState;->getContentFrameLw()Landroid/graphics/Rect;

    move-result-object v0

    invoke-virtual {p9, v0}, Landroid/graphics/Rect;->set(Landroid/graphics/Rect;)V

    .line 6743
    invoke-interface {p4}, Landroid/view/WindowManagerPolicy$WindowState;->isVoiceInteraction()Z

    move-result v0

    if-eqz v0, :cond_a9

    .line 6744
    iget v0, p9, Landroid/graphics/Rect;->left:I

    iget v1, p0, mVoiceContentLeft:I

    if-ge v0, v1, :cond_8a

    iget v0, p0, mVoiceContentLeft:I

    iput v0, p9, Landroid/graphics/Rect;->left:I

    .line 6745
    :cond_8a
    iget v0, p9, Landroid/graphics/Rect;->top:I

    iget v1, p0, mVoiceContentTop:I

    if-ge v0, v1, :cond_94

    iget v0, p0, mVoiceContentTop:I

    iput v0, p9, Landroid/graphics/Rect;->top:I

    .line 6746
    :cond_94
    iget v0, p9, Landroid/graphics/Rect;->right:I

    iget v1, p0, mVoiceContentRight:I

    if-le v0, v1, :cond_9e

    iget v0, p0, mVoiceContentRight:I

    iput v0, p9, Landroid/graphics/Rect;->right:I

    .line 6747
    :cond_9e
    iget v0, p9, Landroid/graphics/Rect;->bottom:I

    iget v1, p0, mVoiceContentBottom:I

    if-le v0, v1, :cond_54

    iget v0, p0, mVoiceContentBottom:I

    iput v0, p9, Landroid/graphics/Rect;->bottom:I

    goto :goto_54

    .line 6748
    :cond_a9
    invoke-interface {p4}, Landroid/view/WindowManagerPolicy$WindowState;->getSurfaceLayer()I

    move-result v0

    iget v1, p0, mDockLayer:I

    if-ge v0, v1, :cond_54

    .line 6749
    iget v0, p9, Landroid/graphics/Rect;->left:I

    iget v1, p0, mContentLeft:I

    if-ge v0, v1, :cond_bb

    iget v0, p0, mContentLeft:I

    iput v0, p9, Landroid/graphics/Rect;->left:I

    .line 6750
    :cond_bb
    iget v0, p9, Landroid/graphics/Rect;->top:I

    iget v1, p0, mContentTop:I

    if-ge v0, v1, :cond_c5

    iget v0, p0, mContentTop:I

    iput v0, p9, Landroid/graphics/Rect;->top:I

    .line 6751
    :cond_c5
    iget v0, p9, Landroid/graphics/Rect;->right:I

    iget v1, p0, mContentRight:I

    if-le v0, v1, :cond_cf

    iget v0, p0, mContentRight:I

    iput v0, p9, Landroid/graphics/Rect;->right:I

    .line 6752
    :cond_cf
    iget v0, p9, Landroid/graphics/Rect;->bottom:I

    iget v1, p0, mContentBottom:I

    if-le v0, v1, :cond_54

    iget v0, p0, mContentBottom:I

    iput v0, p9, Landroid/graphics/Rect;->bottom:I

    goto/16 :goto_54

    :cond_db
    move-object v0, p9

    .line 6755
    goto/16 :goto_5a

    .line 6770
    .end local p9    # "cf":Landroid/graphics/Rect;
    :cond_de
    invoke-interface {p4}, Landroid/view/WindowManagerPolicy$WindowState;->getAttrs()Landroid/view/WindowManager$LayoutParams;

    move-result-object v0

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->flags:I

    and-int/lit16 v0, v0, 0x200

    if-nez v0, :cond_43

    .line 6771
    invoke-virtual {p6, p7}, Landroid/graphics/Rect;->set(Landroid/graphics/Rect;)V

    goto/16 :goto_43
.end method

.method public setBendedPendingIntent(Landroid/app/PendingIntent;Landroid/content/Intent;)V
    .registers 4
    .param p1, "p"    # Landroid/app/PendingIntent;
    .param p2, "fillInIntent"    # Landroid/content/Intent;

    .prologue
    .line 10678
    iget-object v0, p0, mKeyguardDelegate:Lcom/android/server/policy/keyguard/KeyguardServiceDelegate;

    if-eqz v0, :cond_9

    .line 10679
    iget-object v0, p0, mKeyguardDelegate:Lcom/android/server/policy/keyguard/KeyguardServiceDelegate;

    invoke-virtual {v0, p1, p2}, Lcom/android/server/policy/keyguard/KeyguardServiceDelegate;->setBendedPendingIntent(Landroid/app/PendingIntent;Landroid/content/Intent;)V

    .line 10681
    :cond_9
    return-void
.end method

.method public setBendedPendingIntentInSecure(Landroid/app/PendingIntent;Landroid/content/Intent;)V
    .registers 4
    .param p1, "p"    # Landroid/app/PendingIntent;
    .param p2, "fillInIntent"    # Landroid/content/Intent;

    .prologue
    .line 10688
    iget-object v0, p0, mKeyguardDelegate:Lcom/android/server/policy/keyguard/KeyguardServiceDelegate;

    if-eqz v0, :cond_9

    .line 10689
    iget-object v0, p0, mKeyguardDelegate:Lcom/android/server/policy/keyguard/KeyguardServiceDelegate;

    invoke-virtual {v0, p1, p2}, Lcom/android/server/policy/keyguard/KeyguardServiceDelegate;->setBendedPendingIntentInSecure(Landroid/app/PendingIntent;Landroid/content/Intent;)V

    .line 10691
    :cond_9
    return-void
.end method

.method public setCoverSwitchStateLocked(Lcom/samsung/android/cover/CoverState;)Z
    .registers 8
    .param p1, "coverState"    # Lcom/samsung/android/cover/CoverState;

    .prologue
    const/4 v0, 0x0

    const/4 v5, -0x1

    const/4 v1, 0x1

    .line 12975
    iget-boolean v2, p0, mIsSupportFlipCover:Z

    if-nez v2, :cond_c

    iget-boolean v2, p0, mIsSupportSViewCover:Z

    if-nez v2, :cond_c

    .line 13008
    :goto_b
    return v0

    .line 12979
    :cond_c
    if-eqz p1, :cond_63

    iget-boolean v2, p1, Lcom/samsung/android/cover/CoverState;->switchState:Z

    iget-object v3, p0, mCoverState:Lcom/samsung/android/cover/CoverState;

    iget-boolean v3, v3, Lcom/samsung/android/cover/CoverState;->switchState:Z

    if-eq v2, v3, :cond_63

    .line 12980
    iget-object v2, p0, mCoverState:Lcom/samsung/android/cover/CoverState;

    invoke-virtual {v2, p1}, Lcom/samsung/android/cover/CoverState;->copyFrom(Lcom/samsung/android/cover/CoverState;)V

    .line 12981
    const-string v2, "WindowManager"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v4, "setCoverSwitchState : "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    iget-object v4, p0, mCoverState:Lcom/samsung/android/cover/CoverState;

    iget-boolean v4, v4, Lcom/samsung/android/cover/CoverState;->switchState:Z

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 12983
    iget-boolean v2, p1, Lcom/samsung/android/cover/CoverState;->switchState:Z

    if-ne v2, v1, :cond_50

    invoke-virtual {p0}, isStatusBarSViewCover()Z

    move-result v2

    if-eqz v2, :cond_50

    invoke-virtual {p0}, isStatusBarKeyguard()Z

    move-result v2

    if-nez v2, :cond_50

    .line 12987
    iget-object v2, p0, mStatusBar:Landroid/view/WindowManagerPolicy$WindowState;

    invoke-interface {v2}, Landroid/view/WindowManagerPolicy$WindowState;->getAttrs()Landroid/view/WindowManager$LayoutParams;

    move-result-object v2

    iput v5, v2, Landroid/view/WindowManager$LayoutParams;->screenOrientation:I

    .line 12992
    :cond_50
    iget-object v2, p0, mCoverState:Lcom/samsung/android/cover/CoverState;

    iget-boolean v2, v2, Lcom/samsung/android/cover/CoverState;->switchState:Z

    if-nez v2, :cond_63

    .line 12993
    iget-object v2, p0, mCocktailPhoneWindowManager:Lcom/android/server/policy/cocktail/CocktailPhoneWindowManager;

    invoke-virtual {v2}, Lcom/android/server/policy/cocktail/CocktailPhoneWindowManager;->isEdgeScreenWaked()Z

    move-result v2

    if-eqz v2, :cond_63

    .line 12994
    iget-object v2, p0, mCocktailPhoneWindowManager:Lcom/android/server/policy/cocktail/CocktailPhoneWindowManager;

    invoke-virtual {v2, v0, v5, v1}, Lcom/android/server/policy/cocktail/CocktailPhoneWindowManager;->requestEdgeScreenWakeup(ZII)V

    .line 13001
    :cond_63
    invoke-direct {p0}, isSupportAndAttachedSViewCover()Z

    move-result v0

    if-eqz v0, :cond_78

    .line 13002
    iget-object v0, p0, mCoverState:Lcom/samsung/android/cover/CoverState;

    iget-boolean v0, v0, Lcom/samsung/android/cover/CoverState;->switchState:Z

    if-eqz v0, :cond_78

    .line 13003
    iget-object v0, p0, mHideSViewCoverWindowState:Landroid/view/WindowManagerPolicy$WindowState;

    if-eqz v0, :cond_78

    .line 13004
    iget-object v0, p0, mHideSViewCoverWindowState:Landroid/view/WindowManagerPolicy$WindowState;

    invoke-interface {v0, v1}, Landroid/view/WindowManagerPolicy$WindowState;->disableHideSViewCoverOnce(Z)V

    :cond_78
    move v0, v1

    .line 13008
    goto :goto_b
.end method

.method public setCurrentOrientationLw(I)V
    .registers 4
    .param p1, "newOrientation"    # I

    .prologue
    .line 11745
    iget-object v1, p0, mLock:Ljava/lang/Object;

    monitor-enter v1

    .line 11746
    :try_start_3
    iget v0, p0, mCurrentAppOrientation:I

    if-eq p1, v0, :cond_11

    .line 11747
    iput p1, p0, mCurrentAppOrientation:I

    .line 11748
    invoke-virtual {p0}, updateOrientationListenerLp()V

    .line 11749
    iget v0, p0, mCurrentAppOrientation:I

    invoke-static {v0}, Lcom/android/server/policy/WindowOrientationListener;->setCurrentAppOrientation(I)V

    .line 11751
    :cond_11
    monitor-exit v1

    .line 11752
    return-void

    .line 11751
    :catchall_13
    move-exception v0

    monitor-exit v1
    :try_end_15
    .catchall {:try_start_3 .. :try_end_15} :catchall_13

    throw v0
.end method

.method public setCurrentUserLw(I)V
    .registers 4
    .param p1, "newUserId"    # I

    .prologue
    const/4 v1, 0x0

    .line 12273
    iput p1, p0, mCurrentUserId:I

    .line 12274
    iget-object v0, p0, mKeyguardDelegate:Lcom/android/server/policy/keyguard/KeyguardServiceDelegate;

    if-eqz v0, :cond_c

    .line 12275
    iget-object v0, p0, mKeyguardDelegate:Lcom/android/server/policy/keyguard/KeyguardServiceDelegate;

    invoke-virtual {v0, p1}, Lcom/android/server/policy/keyguard/KeyguardServiceDelegate;->setCurrentUser(I)V

    .line 12277
    :cond_c
    iget-object v0, p0, mStatusBarService:Lcom/android/internal/statusbar/IStatusBarService;

    if-eqz v0, :cond_15

    .line 12279
    :try_start_10
    iget-object v0, p0, mStatusBarService:Lcom/android/internal/statusbar/IStatusBarService;

    invoke-interface {v0, p1}, Lcom/android/internal/statusbar/IStatusBarService;->setCurrentUser(I)V
    :try_end_15
    .catch Landroid/os/RemoteException; {:try_start_10 .. :try_end_15} :catch_19

    .line 12284
    :cond_15
    :goto_15
    invoke-virtual {p0, v1, v1}, setLastInputMethodWindowLw(Landroid/view/WindowManagerPolicy$WindowState;Landroid/view/WindowManagerPolicy$WindowState;)V

    .line 12285
    return-void

    .line 12280
    :catch_19
    move-exception v0

    goto :goto_15
.end method

.method public setDisplayOverscan(Landroid/view/Display;IIII)V
    .registers 7
    .param p1, "display"    # Landroid/view/Display;
    .param p2, "left"    # I
    .param p3, "top"    # I
    .param p4, "right"    # I
    .param p5, "bottom"    # I

    .prologue
    .line 3234
    invoke-virtual {p1}, Landroid/view/Display;->getDisplayId()I

    move-result v0

    if-nez v0, :cond_e

    .line 3235
    iput p2, p0, mOverscanLeft:I

    .line 3236
    iput p3, p0, mOverscanTop:I

    .line 3237
    iput p4, p0, mOverscanRight:I

    .line 3238
    iput p5, p0, mOverscanBottom:I

    .line 3240
    :cond_e
    return-void
.end method

.method public setForceHideStatusBar(Z)V
    .registers 2
    .param p1, "hide"    # Z

    .prologue
    .line 13287
    iput-boolean p1, p0, mForceHideStatusBarForCocktail:Z

    .line 13288
    return-void
.end method

.method setHdmiPlugged(Z)V
    .registers 5
    .param p1, "plugged"    # Z

    .prologue
    const/4 v2, 0x1

    .line 8855
    iget-boolean v1, p0, mHdmiPlugged:Z

    if-eq v1, p1, :cond_23

    .line 8856
    iput-boolean p1, p0, mHdmiPlugged:Z

    .line 8857
    invoke-virtual {p0, v2, v2}, updateRotation(ZZ)V

    .line 8858
    new-instance v0, Landroid/content/Intent;

    const-string v1, "android.intent.action.HDMI_PLUGGED"

    invoke-direct {v0, v1}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 8859
    .local v0, "intent":Landroid/content/Intent;
    const/high16 v1, 0x4000000

    invoke-virtual {v0, v1}, Landroid/content/Intent;->addFlags(I)Landroid/content/Intent;

    .line 8860
    const-string/jumbo v1, "state"

    invoke-virtual {v0, v1, p1}, Landroid/content/Intent;->putExtra(Ljava/lang/String;Z)Landroid/content/Intent;

    .line 8861
    iget-object v1, p0, mContext:Landroid/content/Context;

    sget-object v2, Landroid/os/UserHandle;->ALL:Landroid/os/UserHandle;

    invoke-virtual {v1, v0, v2}, Landroid/content/Context;->sendStickyBroadcastAsUser(Landroid/content/Intent;Landroid/os/UserHandle;)V

    .line 8863
    .end local v0    # "intent":Landroid/content/Intent;
    :cond_23
    return-void
.end method

.method public setInitialDisplaySize(Landroid/view/Display;III)V
    .registers 21
    .param p1, "display"    # Landroid/view/Display;
    .param p2, "width"    # I
    .param p3, "height"    # I
    .param p4, "density"    # I

    .prologue
    .line 3050
    move-object/from16 v0, p0

    iget-object v7, v0, mContext:Landroid/content/Context;

    if-eqz v7, :cond_c

    invoke-virtual/range {p1 .. p1}, Landroid/view/Display;->getDisplayId()I

    move-result v7

    if-eqz v7, :cond_d

    .line 3182
    :cond_c
    :goto_c
    return-void

    .line 3065
    :cond_d
    move-object/from16 v0, p1

    move-object/from16 v1, p0

    iput-object v0, v1, mDisplay:Landroid/view/Display;

    .line 3066
    const-string/jumbo v7, "persist.panel.orientation"

    const/4 v8, 0x0

    invoke-static {v7, v8}, Landroid/os/SystemProperties;->getInt(Ljava/lang/String;I)I

    move-result v7

    div-int/lit8 v7, v7, 0x5a

    move-object/from16 v0, p0

    iput v7, v0, mPanelOrientation:I

    .line 3068
    move-object/from16 v0, p0

    iget-object v7, v0, mContext:Landroid/content/Context;

    invoke-virtual {v7}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    move-result-object v4

    .line 3070
    .local v4, "res":Landroid/content/res/Resources;
    move/from16 v0, p2

    move/from16 v1, p3

    if-le v0, v1, :cond_181

    .line 3071
    move/from16 v5, p3

    .line 3072
    .local v5, "shortSize":I
    move/from16 v2, p2

    .line 3073
    .local v2, "longSize":I
    const/4 v7, 0x0

    move-object/from16 v0, p0

    iput v7, v0, mLandscapeRotation:I

    .line 3074
    const/4 v7, 0x2

    move-object/from16 v0, p0

    iput v7, v0, mSeascapeRotation:I

    .line 3075
    const v7, 0x112003e

    invoke-virtual {v4, v7}, Landroid/content/res/Resources;->getBoolean(I)Z

    move-result v7

    if-eqz v7, :cond_175

    .line 3076
    const/4 v7, 0x1

    move-object/from16 v0, p0

    iput v7, v0, mPortraitRotation:I

    .line 3077
    const/4 v7, 0x3

    move-object/from16 v0, p0

    iput v7, v0, mUpsideDownRotation:I

    .line 3096
    :goto_50
    const v7, 0x1050017

    invoke-virtual {v4, v7}, Landroid/content/res/Resources;->getDimensionPixelSize(I)I

    move-result v7

    move-object/from16 v0, p0

    iput v7, v0, mStatusBarHeight:I

    .line 3100
    move-object/from16 v0, p0

    iget-object v7, v0, mNavigationBarHeightForRotation:[I

    move-object/from16 v0, p0

    iget v8, v0, mPortraitRotation:I

    move-object/from16 v0, p0

    iget-object v9, v0, mNavigationBarHeightForRotation:[I

    move-object/from16 v0, p0

    iget v10, v0, mUpsideDownRotation:I

    const v11, 0x1050018

    invoke-virtual {v4, v11}, Landroid/content/res/Resources;->getDimensionPixelSize(I)I

    move-result v11

    aput v11, v9, v10

    aput v11, v7, v8

    .line 3103
    move-object/from16 v0, p0

    iget-object v7, v0, mNavigationBarHeightForRotation:[I

    move-object/from16 v0, p0

    iget v8, v0, mLandscapeRotation:I

    move-object/from16 v0, p0

    iget-object v9, v0, mNavigationBarHeightForRotation:[I

    move-object/from16 v0, p0

    iget v10, v0, mSeascapeRotation:I

    const v11, 0x1050019

    invoke-virtual {v4, v11}, Landroid/content/res/Resources;->getDimensionPixelSize(I)I

    move-result v11

    aput v11, v9, v10

    aput v11, v7, v8

    .line 3108
    move-object/from16 v0, p0

    iget-object v7, v0, mNavigationBarWidthForRotation:[I

    move-object/from16 v0, p0

    iget v8, v0, mPortraitRotation:I

    move-object/from16 v0, p0

    iget-object v9, v0, mNavigationBarWidthForRotation:[I

    move-object/from16 v0, p0

    iget v10, v0, mUpsideDownRotation:I

    move-object/from16 v0, p0

    iget-object v11, v0, mNavigationBarWidthForRotation:[I

    move-object/from16 v0, p0

    iget v12, v0, mLandscapeRotation:I

    move-object/from16 v0, p0

    iget-object v13, v0, mNavigationBarWidthForRotation:[I

    move-object/from16 v0, p0

    iget v14, v0, mSeascapeRotation:I

    const v15, 0x105001a

    invoke-virtual {v4, v15}, Landroid/content/res/Resources;->getDimensionPixelSize(I)I

    move-result v15

    aput v15, v13, v14

    aput v15, v11, v12

    aput v15, v9, v10

    aput v15, v7, v8

    .line 3115
    mul-int/lit16 v7, v5, 0xa0

    div-int v6, v7, p4

    .line 3116
    .local v6, "shortSizeDp":I
    mul-int/lit16 v7, v2, 0xa0

    div-int v3, v7, p4

    .line 3119
    .local v3, "longSizeDp":I
    move/from16 v0, p2

    move/from16 v1, p3

    if-eq v0, v1, :cond_1b0

    const/16 v7, 0x258

    if-ge v6, v7, :cond_1b0

    const/4 v7, 0x1

    :goto_d3
    move-object/from16 v0, p0

    iput-boolean v7, v0, mNavigationBarCanMove:Z

    .line 3121
    const v7, 0x1120069

    invoke-virtual {v4, v7}, Landroid/content/res/Resources;->getBoolean(I)Z

    move-result v7

    move-object/from16 v0, p0

    iput-boolean v7, v0, mHasNavigationBar:Z

    .line 3135
    const-string/jumbo v7, "portrait"

    const-string/jumbo v8, "persist.demo.hdmirotation"

    invoke-static {v8}, Landroid/os/SystemProperties;->get(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v8

    invoke-virtual {v7, v8}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v7

    if-eqz v7, :cond_1b3

    .line 3136
    move-object/from16 v0, p0

    iget v7, v0, mPortraitRotation:I

    move-object/from16 v0, p0

    iput v7, v0, mDemoHdmiRotation:I

    .line 3140
    :goto_fa
    const-string/jumbo v7, "persist.demo.hdmirotationlock"

    const/4 v8, 0x0

    invoke-static {v7, v8}, Landroid/os/SystemProperties;->getBoolean(Ljava/lang/String;Z)Z

    move-result v7

    move-object/from16 v0, p0

    iput-boolean v7, v0, mDemoHdmiRotationLock:Z

    .line 3144
    const-string/jumbo v7, "portrait"

    const-string/jumbo v8, "persist.demo.remoterotation"

    invoke-static {v8}, Landroid/os/SystemProperties;->get(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v8

    invoke-virtual {v7, v8}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v7

    if-eqz v7, :cond_1bd

    .line 3145
    move-object/from16 v0, p0

    iget v7, v0, mPortraitRotation:I

    move-object/from16 v0, p0

    iput v7, v0, mDemoRotation:I

    .line 3149
    :goto_11e
    const-string/jumbo v7, "persist.demo.rotationlock"

    const/4 v8, 0x0

    invoke-static {v7, v8}, Landroid/os/SystemProperties;->getBoolean(Ljava/lang/String;Z)Z

    move-result v7

    move-object/from16 v0, p0

    iput-boolean v7, v0, mDemoRotationLock:Z

    .line 3154
    const/16 v7, 0x3c0

    if-lt v3, v7, :cond_1c7

    const/16 v7, 0x2d0

    if-lt v6, v7, :cond_1c7

    const v7, 0x1120085

    invoke-virtual {v4, v7}, Landroid/content/res/Resources;->getBoolean(I)Z

    move-result v7

    if-eqz v7, :cond_1c7

    const-string/jumbo v7, "true"

    const-string v8, "config.override_forced_orient"

    invoke-static {v8}, Landroid/os/SystemProperties;->get(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v8

    invoke-virtual {v7, v8}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v7

    if-nez v7, :cond_1c7

    const/4 v7, 0x1

    :goto_14b
    move-object/from16 v0, p0

    iput-boolean v7, v0, mForceDefaultOrientation:Z

    .line 3163
    move-object/from16 v0, p0

    iget-object v7, v0, mMultiPhoneWindowManager:Lcom/android/server/policy/multiwindow/MultiPhoneWindowManager;

    invoke-virtual {v7}, Lcom/android/server/policy/multiwindow/MultiPhoneWindowManager;->setInitialDisplaySize()V

    .line 3168
    const v7, 0x1050290

    invoke-virtual {v4, v7}, Landroid/content/res/Resources;->getDimensionPixelSize(I)I

    move-result v7

    move-object/from16 v0, p0

    iput v7, v0, mMobileKeyboardHeight:I

    .line 3173
    const v7, 0x105028f

    invoke-virtual {v4, v7}, Landroid/content/res/Resources;->getDimensionPixelSize(I)I

    move-result v7

    move-object/from16 v0, p0

    iput v7, v0, mCarModeSize:I

    .line 3179
    move-object/from16 v0, p0

    iget-object v7, v0, mCocktailPhoneWindowManager:Lcom/android/server/policy/cocktail/CocktailPhoneWindowManager;

    invoke-virtual {v7}, Lcom/android/server/policy/cocktail/CocktailPhoneWindowManager;->initCocktailBarSize()V

    goto/16 :goto_c

    .line 3079
    .end local v3    # "longSizeDp":I
    .end local v6    # "shortSizeDp":I
    :cond_175
    const/4 v7, 0x3

    move-object/from16 v0, p0

    iput v7, v0, mPortraitRotation:I

    .line 3080
    const/4 v7, 0x1

    move-object/from16 v0, p0

    iput v7, v0, mUpsideDownRotation:I

    goto/16 :goto_50

    .line 3083
    .end local v2    # "longSize":I
    .end local v5    # "shortSize":I
    :cond_181
    move/from16 v5, p2

    .line 3084
    .restart local v5    # "shortSize":I
    move/from16 v2, p3

    .line 3085
    .restart local v2    # "longSize":I
    const/4 v7, 0x0

    move-object/from16 v0, p0

    iput v7, v0, mPortraitRotation:I

    .line 3086
    const/4 v7, 0x2

    move-object/from16 v0, p0

    iput v7, v0, mUpsideDownRotation:I

    .line 3087
    const v7, 0x112003e

    invoke-virtual {v4, v7}, Landroid/content/res/Resources;->getBoolean(I)Z

    move-result v7

    if-eqz v7, :cond_1a4

    .line 3088
    const/4 v7, 0x3

    move-object/from16 v0, p0

    iput v7, v0, mLandscapeRotation:I

    .line 3089
    const/4 v7, 0x1

    move-object/from16 v0, p0

    iput v7, v0, mSeascapeRotation:I

    goto/16 :goto_50

    .line 3091
    :cond_1a4
    const/4 v7, 0x1

    move-object/from16 v0, p0

    iput v7, v0, mLandscapeRotation:I

    .line 3092
    const/4 v7, 0x3

    move-object/from16 v0, p0

    iput v7, v0, mSeascapeRotation:I

    goto/16 :goto_50

    .line 3119
    .restart local v3    # "longSizeDp":I
    .restart local v6    # "shortSizeDp":I
    :cond_1b0
    const/4 v7, 0x0

    goto/16 :goto_d3

    .line 3138
    :cond_1b3
    move-object/from16 v0, p0

    iget v7, v0, mLandscapeRotation:I

    move-object/from16 v0, p0

    iput v7, v0, mDemoHdmiRotation:I

    goto/16 :goto_fa

    .line 3147
    :cond_1bd
    move-object/from16 v0, p0

    iget v7, v0, mLandscapeRotation:I

    move-object/from16 v0, p0

    iput v7, v0, mDemoRotation:I

    goto/16 :goto_11e

    .line 3154
    :cond_1c7
    const/4 v7, 0x0

    goto :goto_14b
.end method

.method public setLastInputMethodWindowLw(Landroid/view/WindowManagerPolicy$WindowState;Landroid/view/WindowManagerPolicy$WindowState;)V
    .registers 3
    .param p1, "ime"    # Landroid/view/WindowManagerPolicy$WindowState;
    .param p2, "target"    # Landroid/view/WindowManagerPolicy$WindowState;

    .prologue
    .line 12262
    iput-object p1, p0, mLastInputMethodWindow:Landroid/view/WindowManagerPolicy$WindowState;

    .line 12263
    iput-object p2, p0, mLastInputMethodTargetWindow:Landroid/view/WindowManagerPolicy$WindowState;

    .line 12264
    return-void
.end method

.method public setMultiWindowTrayOpenState(Z)V
    .registers 3
    .param p1, "open"    # Z

    .prologue
    .line 12393
    iget-object v0, p0, mMultiPhoneWindowManager:Lcom/android/server/policy/multiwindow/MultiPhoneWindowManager;

    invoke-virtual {v0, p1}, Lcom/android/server/policy/multiwindow/MultiPhoneWindowManager;->setMultiWindowTrayOpenState(Z)V

    .line 12395
    return-void
.end method

.method public setRotationLw(I)V
    .registers 4
    .param p1, "rotation"    # I

    .prologue
    .line 10996
    iget-object v0, p0, mOrientationListener:Lcom/android/server/policy/PhoneWindowManager$MyOrientationListener;

    invoke-virtual {v0, p1}, Lcom/android/server/policy/PhoneWindowManager$MyOrientationListener;->setCurrentRotation(I)V

    .line 10997
    iget-object v0, p0, mSPWM:Lcom/android/server/policy/sec/SamsungPhoneWindowManager;

    invoke-virtual {v0, p1}, Lcom/android/server/policy/sec/SamsungPhoneWindowManager;->setRotationLw(I)V

    .line 10999
    iget v0, p0, mCocktail180RotationEnabled:I

    const/4 v1, 0x1

    if-ne v0, v1, :cond_12

    .line 11000
    invoke-direct {p0, p1}, setBottomSoftkeyRotation(I)V

    .line 11002
    :cond_12
    return-void
.end method

.method public setSafeMode(Z)V
    .registers 8
    .param p1, "safeMode"    # Z

    .prologue
    const/4 v2, 0x1

    .line 11099
    iput-boolean p1, p0, mSafeMode:Z

    .line 11100
    const/4 v1, 0x0

    if-eqz p1, :cond_1d

    const/16 v0, 0x2711

    :goto_8
    invoke-virtual {p0, v1, v0, v2}, performHapticFeedbackLw(Landroid/view/WindowManagerPolicy$WindowState;IZ)Z

    .line 11103
    const/4 v0, 0x5

    const/4 v1, 0x2

    invoke-static {}, Landroid/os/Process;->myPid()I

    move-result v3

    const-string v4, "Boot Mode"

    iget-boolean v5, p0, mSafeMode:Z

    if-eqz v5, :cond_20

    const-string v5, "Safe Boot"

    :goto_19
    invoke-static/range {v0 .. v5}, Landroid/sec/enterprise/auditlog/AuditLog;->log(IIZILjava/lang/String;Ljava/lang/String;)V

    .line 11105
    return-void

    .line 11100
    :cond_1d
    const/16 v0, 0x2710

    goto :goto_8

    .line 11103
    :cond_20
    const-string v5, "Normal Boot"

    goto :goto_19
.end method

.method public setTouchExplorationEnabled(Z)V
    .registers 4
    .param p1, "enabled"    # Z

    .prologue
    .line 13260
    iput-boolean p1, p0, mTouchExplorationEnabled:Z

    .line 13261
    iget-object v0, p0, mContext:Landroid/content/Context;

    invoke-static {v0}, Lcom/samsung/android/cocktailbar/CocktailBarFeatures;->isSystemBarType(Landroid/content/Context;)Z

    move-result v0

    if-eqz v0, :cond_10

    .line 13262
    iget-object v0, p0, mCocktailPhoneWindowManager:Lcom/android/server/policy/cocktail/CocktailPhoneWindowManager;

    const/4 v1, 0x0

    invoke-virtual {v0, p1, v1}, Lcom/android/server/policy/cocktail/CocktailPhoneWindowManager;->updateGripState(ZI)V

    .line 13264
    :cond_10
    return-void
.end method

.method public setUserRotationMode(II)V
    .registers 9
    .param p1, "mode"    # I
    .param p2, "rot"    # I

    .prologue
    const/4 v5, 0x0

    const/4 v4, 0x1

    const/4 v3, -0x2

    .line 11058
    iget-object v1, p0, mContext:Landroid/content/Context;

    invoke-virtual {v1}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v0

    .line 11060
    .local v0, "res":Landroid/content/ContentResolver;
    iget-object v1, p0, mContext:Landroid/content/Context;

    invoke-static {v1}, Lcom/android/server/policy/sec/SamsungPolicyProperties;->FolderTypeFeature(Landroid/content/Context;)I

    move-result v1

    const/4 v2, 0x2

    if-ne v1, v2, :cond_32

    iget v1, p0, mLidState:I

    if-ne v1, v4, :cond_32

    .line 11062
    if-ne p1, v4, :cond_2c

    .line 11063
    const-string v1, "WindowManager"

    const-string/jumbo v2, "setUserRotationMode 2"

    invoke-static {v1, v2}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 11064
    const-string/jumbo v1, "user_rotation"

    invoke-static {v0, v1, p2, v3}, Landroid/provider/Settings$System;->putIntForUser(Landroid/content/ContentResolver;Ljava/lang/String;II)Z

    .line 11068
    const-string v1, "accelerometer_rotation_second"

    invoke-static {v0, v1, v5, v3}, Landroid/provider/Settings$System;->putIntForUser(Landroid/content/ContentResolver;Ljava/lang/String;II)Z

    .line 11096
    :goto_2b
    return-void

    .line 11073
    :cond_2c
    const-string v1, "accelerometer_rotation_second"

    invoke-static {v0, v1, v4, v3}, Landroid/provider/Settings$System;->putIntForUser(Landroid/content/ContentResolver;Ljava/lang/String;II)Z

    goto :goto_2b

    .line 11080
    :cond_32
    if-ne p1, v4, :cond_40

    .line 11081
    const-string/jumbo v1, "user_rotation"

    invoke-static {v0, v1, p2, v3}, Landroid/provider/Settings$System;->putIntForUser(Landroid/content/ContentResolver;Ljava/lang/String;II)Z

    .line 11085
    const-string v1, "accelerometer_rotation"

    invoke-static {v0, v1, v5, v3}, Landroid/provider/Settings$System;->putIntForUser(Landroid/content/ContentResolver;Ljava/lang/String;II)Z

    goto :goto_2b

    .line 11090
    :cond_40
    const-string v1, "accelerometer_rotation"

    invoke-static {v0, v1, v4, v3}, Landroid/provider/Settings$System;->putIntForUser(Landroid/content/ContentResolver;Ljava/lang/String;II)Z

    goto :goto_2b
.end method

.method public showBootMessage(Ljava/lang/CharSequence;Z)V
    .registers 5
    .param p1, "msg"    # Ljava/lang/CharSequence;
    .param p2, "always"    # Z

    .prologue
    .line 11248
    iget-object v0, p0, mContext:Landroid/content/Context;

    invoke-virtual {v0}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    move-result-object v0

    const v1, 0x11200d7

    invoke-virtual {v0, v1}, Landroid/content/res/Resources;->getBoolean(I)Z

    move-result v0

    if-eqz v0, :cond_1d

    const/4 v0, 0x0

    :goto_10
    iput-boolean v0, p0, mCustomDialog:Z

    .line 11250
    iget-object v0, p0, mHandler:Landroid/os/Handler;

    new-instance v1, Lcom/android/server/policy/PhoneWindowManager$41;

    invoke-direct {v1, p0, p1}, Lcom/android/server/policy/PhoneWindowManager$41;-><init>(Lcom/android/server/policy/PhoneWindowManager;Ljava/lang/CharSequence;)V

    invoke-virtual {v0, v1}, Landroid/os/Handler;->post(Ljava/lang/Runnable;)Z

    .line 11322
    return-void

    .line 11248
    :cond_1d
    const/4 v0, 0x1

    goto :goto_10
.end method

.method public showGlobalActions()V
    .registers 3

    .prologue
    const/16 v1, 0xa

    .line 2206
    iget-object v0, p0, mHandler:Landroid/os/Handler;

    invoke-virtual {v0, v1}, Landroid/os/Handler;->removeMessages(I)V

    .line 2207
    iget-object v0, p0, mHandler:Landroid/os/Handler;

    invoke-virtual {v0, v1}, Landroid/os/Handler;->sendEmptyMessage(I)Z

    .line 2208
    return-void
.end method

.method showGlobalActionsInternal()V
    .registers 6

    .prologue
    .line 2211
    const-string/jumbo v1, "globalactions"

    invoke-virtual {p0, v1}, sendCloseSystemWindows(Ljava/lang/String;)V

    .line 2212
    iget-object v1, p0, mGlobalActions:Lcom/android/server/policy/GlobalActions;

    if-nez v1, :cond_15

    .line 2213
    new-instance v1, Lcom/android/server/policy/GlobalActions;

    iget-object v2, p0, mContext:Landroid/content/Context;

    iget-object v3, p0, mWindowManagerFuncs:Landroid/view/WindowManagerPolicy$WindowManagerFuncs;

    invoke-direct {v1, v2, v3}, Lcom/android/server/policy/GlobalActions;-><init>(Landroid/content/Context;Landroid/view/WindowManagerPolicy$WindowManagerFuncs;)V

    iput-object v1, p0, mGlobalActions:Lcom/android/server/policy/GlobalActions;

    .line 2217
    :cond_15
    invoke-virtual {p0}, keyguardOn()Z

    move-result v0

    .line 2219
    .local v0, "keyguardShowing":Z
    iget-object v1, p0, mGlobalActions:Lcom/android/server/policy/GlobalActions;

    invoke-virtual {p0}, isDeviceProvisioned()Z

    move-result v2

    invoke-virtual {v1, v0, v2}, Lcom/android/server/policy/GlobalActions;->showDialog(ZZ)V

    .line 2220
    if-eqz v0, :cond_2e

    .line 2223
    iget-object v1, p0, mPowerManager:Landroid/os/PowerManager;

    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v2

    const/4 v4, 0x0

    invoke-virtual {v1, v2, v3, v4}, Landroid/os/PowerManager;->userActivity(JZ)V

    .line 2225
    :cond_2e
    return-void
.end method

.method public showRecentApps()V
    .registers 3

    .prologue
    const/16 v1, 0x9

    .line 5899
    iget-object v0, p0, mHandler:Landroid/os/Handler;

    invoke-virtual {v0, v1}, Landroid/os/Handler;->removeMessages(I)V

    .line 5900
    iget-object v0, p0, mHandler:Landroid/os/Handler;

    invoke-virtual {v0, v1}, Landroid/os/Handler;->sendEmptyMessage(I)Z

    .line 5901
    return-void
.end method

.method public showStatusBarByNotification()V
    .registers 5

    .prologue
    .line 12828
    const-string v0, "WindowManager"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v2, "showStatusBarByNotification() mOpenByNotification="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    iget-boolean v2, p0, mOpenByNotification:Z

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 12829
    iget-boolean v0, p0, mOpenByNotification:Z

    if-eqz v0, :cond_28

    .line 12830
    iget-object v0, p0, mHandler:Landroid/os/Handler;

    iget-object v1, p0, mShowStatusBarByNotification:Ljava/lang/Runnable;

    const-wide/16 v2, 0x3e8

    invoke-virtual {v0, v1, v2, v3}, Landroid/os/Handler;->postDelayed(Ljava/lang/Runnable;J)Z

    .line 12832
    :cond_28
    return-void
.end method

.method startDockOrHome(ZZ)V
    .registers 12
    .param p1, "fromHomeKey"    # Z
    .param p2, "awakenFromDreams"    # Z

    .prologue
    const/4 v8, 0x1

    .line 11586
    const/4 v4, 0x0

    .line 11587
    .local v4, "personaId":I
    invoke-direct {p0}, getPersonaManagerLocked()Landroid/os/PersonaManager;

    move-result-object v5

    if-eqz v5, :cond_22

    iget-object v5, p0, mPersonaManager:Landroid/os/PersonaManager;

    invoke-virtual {v5}, Landroid/os/PersonaManager;->getPersonaIds()[I

    move-result-object v5

    if-eqz v5, :cond_22

    iget-object v5, p0, mPersonaManager:Landroid/os/PersonaManager;

    invoke-virtual {v5}, Landroid/os/PersonaManager;->getPersonaIds()[I

    move-result-object v5

    array-length v5, v5

    if-lez v5, :cond_22

    .line 11588
    iget-object v5, p0, mPersonaManager:Landroid/os/PersonaManager;

    invoke-virtual {v5}, Landroid/os/PersonaManager;->getPersonaIds()[I

    move-result-object v5

    const/4 v6, 0x0

    aget v4, v5, v6

    .line 11590
    :cond_22
    invoke-direct {p0, v4}, isKnoxKeyguardShownForKioskMode(I)Z

    move-result v5

    if-eqz v5, :cond_31

    .line 11591
    const-string v5, "WindowManager"

    const-string/jumbo v6, "startDockOrHome() > isKnoxKeyguardShownForKioskMode() : true"

    invoke-static {v5, v6}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 11674
    :goto_30
    return-void

    .line 11595
    :cond_31
    const-string v5, "WindowManager"

    const-string/jumbo v6, "startDockOrHome"

    invoke-static {v5, v6}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 11597
    if-eqz p2, :cond_3e

    .line 11598
    invoke-static {}, awakenDreams()V

    .line 11601
    :cond_3e
    new-instance v2, Landroid/content/Intent;

    invoke-direct {v2}, Landroid/content/Intent;-><init>()V

    .line 11602
    .local v2, "i":Landroid/content/Intent;
    const-string v5, "com.samsung.android.action.START_DOCK_OR_HOME"

    invoke-virtual {v2, v5}, Landroid/content/Intent;->setAction(Ljava/lang/String;)Landroid/content/Intent;

    .line 11603
    iget-object v5, p0, mContext:Landroid/content/Context;

    sget-object v6, Landroid/os/UserHandle;->CURRENT:Landroid/os/UserHandle;

    const-string v7, "com.samsung.android.permisson.START_DOCK_OR_HOME"

    invoke-virtual {v5, v2, v6, v7}, Landroid/content/Context;->sendBroadcastAsUser(Landroid/content/Intent;Landroid/os/UserHandle;Ljava/lang/String;)V

    .line 11606
    invoke-virtual {p0}, createHomeDockIntent()Landroid/content/Intent;

    move-result-object v1

    .line 11607
    .local v1, "dock":Landroid/content/Intent;
    if-eqz v1, :cond_71

    iget-object v5, p0, mSPWM:Lcom/android/server/policy/sec/SamsungPhoneWindowManager;

    invoke-virtual {v5, v1}, Lcom/android/server/policy/sec/SamsungPhoneWindowManager;->isDockHomeEnabled(Landroid/content/Intent;)Z

    move-result v5

    if-eqz v5, :cond_71

    .line 11609
    if-eqz p1, :cond_6a

    .line 11610
    :try_start_61
    const-string v5, "android.intent.extra.FROM_HOME_KEY"

    invoke-virtual {v1, v5, p1}, Landroid/content/Intent;->putExtra(Ljava/lang/String;Z)Landroid/content/Intent;

    .line 11613
    const/4 v5, 0x1

    invoke-virtual {v1, v5}, Landroid/content/Intent;->setFromHomeKey(Z)V

    .line 11617
    :cond_6a
    sget-object v5, Landroid/os/UserHandle;->CURRENT:Landroid/os/UserHandle;

    invoke-direct {p0, v1, v5}, startActivityAsUser(Landroid/content/Intent;Landroid/os/UserHandle;)V
    :try_end_6f
    .catch Landroid/content/ActivityNotFoundException; {:try_start_61 .. :try_end_6f} :catch_70

    goto :goto_30

    .line 11619
    :catch_70
    move-exception v5

    .line 11623
    :cond_71
    iget-object v5, p0, mContext:Landroid/content/Context;

    invoke-static {v5}, Lcom/samsung/android/cocktailbar/CocktailBarFeatures;->isSystemBarType(Landroid/content/Context;)Z

    move-result v5

    if-eqz v5, :cond_84

    .line 11624
    iget-object v5, p0, mContext:Landroid/content/Context;

    invoke-static {v5}, Lcom/samsung/android/cocktailbar/CocktailBarManager;->getInstance(Landroid/content/Context;)Lcom/samsung/android/cocktailbar/CocktailBarManager;

    move-result-object v0

    .line 11625
    .local v0, "cocktailBarManager":Lcom/samsung/android/cocktailbar/CocktailBarManager;
    if-eqz v0, :cond_84

    .line 11626
    invoke-virtual {v0}, Lcom/samsung/android/cocktailbar/CocktailBarManager;->switchDefaultCocktail()V

    .line 11639
    .end local v0    # "cocktailBarManager":Lcom/samsung/android/cocktailbar/CocktailBarManager;
    :cond_84
    if-eqz p1, :cond_9d

    .line 11640
    new-instance v3, Landroid/content/Intent;

    iget-object v5, p0, mHomeIntent:Landroid/content/Intent;

    invoke-direct {v3, v5}, Landroid/content/Intent;-><init>(Landroid/content/Intent;)V

    .line 11643
    .local v3, "intent":Landroid/content/Intent;
    invoke-virtual {v3, v8}, Landroid/content/Intent;->setFromHomeKey(Z)V

    .line 11665
    const-string v5, "android.intent.extra.FROM_HOME_KEY"

    invoke-virtual {v3, v5, p1}, Landroid/content/Intent;->putExtra(Ljava/lang/String;Z)Landroid/content/Intent;

    .line 11671
    :goto_95
    :try_start_95
    sget-object v5, Landroid/os/UserHandle;->CURRENT:Landroid/os/UserHandle;

    invoke-direct {p0, v3, v5}, startActivityAsUser(Landroid/content/Intent;Landroid/os/UserHandle;)V
    :try_end_9a
    .catch Landroid/content/ActivityNotFoundException; {:try_start_95 .. :try_end_9a} :catch_9b

    goto :goto_30

    .line 11672
    :catch_9b
    move-exception v5

    goto :goto_30

    .line 11667
    .end local v3    # "intent":Landroid/content/Intent;
    :cond_9d
    iget-object v3, p0, mHomeIntent:Landroid/content/Intent;

    .restart local v3    # "intent":Landroid/content/Intent;
    goto :goto_95
.end method

.method public startKeyguardExitAnimation(JJ)V
    .registers 8
    .param p1, "startTime"    # J
    .param p3, "fadeoutDuration"    # J

    .prologue
    .line 10635
    iget-object v0, p0, mKeyguardDelegate:Lcom/android/server/policy/keyguard/KeyguardServiceDelegate;

    if-eqz v0, :cond_14

    .line 10636
    sget-boolean v0, DEBUG_KEYGUARD:Z

    if-eqz v0, :cond_f

    const-string v0, "WindowManager"

    const-string v1, "PWM.startKeyguardExitAnimation"

    invoke-static {v0, v1}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 10637
    :cond_f
    iget-object v0, p0, mKeyguardDelegate:Lcom/android/server/policy/keyguard/KeyguardServiceDelegate;

    invoke-virtual {v0, p1, p2, p3, p4}, Lcom/android/server/policy/keyguard/KeyguardServiceDelegate;->startKeyguardExitAnimation(JJ)V

    .line 10639
    :cond_14
    return-void
.end method

.method public startedGoingToSleep(I)V
    .registers 5
    .param p1, "why"    # I

    .prologue
    .line 9976
    sget-boolean v0, DEBUG_WAKEUP:Z

    if-eqz v0, :cond_22

    const-string v0, "WindowManager"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Started going to sleep... (why="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, ")"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 9977
    :cond_22
    iget-object v0, p0, mKeyguardDelegate:Lcom/android/server/policy/keyguard/KeyguardServiceDelegate;

    if-eqz v0, :cond_2b

    .line 9978
    iget-object v0, p0, mKeyguardDelegate:Lcom/android/server/policy/keyguard/KeyguardServiceDelegate;

    invoke-virtual {v0, p1}, Lcom/android/server/policy/keyguard/KeyguardServiceDelegate;->onStartedGoingToSleep(I)V

    .line 9980
    :cond_2b
    return-void
.end method

.method public startedWakingUp()V
    .registers 2

    .prologue
    .line 10076
    const/4 v0, 0x0

    invoke-virtual {p0, v0}, startedWakingUp(I)V

    .line 10077
    return-void
.end method

.method public startedWakingUp(I)V
    .registers 10
    .param p1, "displayId"    # I

    .prologue
    const/4 v5, 0x1

    .line 10082
    const v2, 0x11170

    invoke-static {v2, v5}, Landroid/util/EventLog;->writeEvent(II)I

    .line 10083
    sget-boolean v2, DEBUG_WAKEUP:Z

    if-eqz v2, :cond_12

    const-string v2, "WindowManager"

    const-string v3, "Started waking up..."

    invoke-static {v2, v3}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 10086
    :cond_12
    invoke-direct {p0}, disableQbCharger()V

    .line 10092
    iget-object v3, p0, mLock:Ljava/lang/Object;

    monitor-enter v3

    .line 10093
    const/4 v2, 0x1

    :try_start_19
    iput-boolean v2, p0, mAwake:Z

    .line 10094
    iget-object v2, p0, mKeyguardDelegate:Lcom/android/server/policy/keyguard/KeyguardServiceDelegate;

    if-eqz v2, :cond_2d

    .line 10095
    iget-object v2, p0, mHandler:Landroid/os/Handler;

    const/4 v4, 0x6

    invoke-virtual {v2, v4}, Landroid/os/Handler;->removeMessages(I)V

    .line 10096
    iget-object v2, p0, mHandler:Landroid/os/Handler;

    const/4 v4, 0x6

    const-wide/16 v6, 0xbb8

    invoke-virtual {v2, v4, v6, v7}, Landroid/os/Handler;->sendEmptyMessageDelayed(IJ)Z

    .line 10099
    :cond_2d
    invoke-direct {p0}, updateWakeGestureListenerLp()V

    .line 10100
    invoke-virtual {p0}, updateOrientationListenerLp()V

    .line 10101
    invoke-direct {p0}, updateLockScreenTimeout()V

    .line 10102
    monitor-exit v3
    :try_end_37
    .catchall {:try_start_19 .. :try_end_37} :catchall_a0

    .line 10104
    iget-object v2, p0, mSPWM:Lcom/android/server/policy/sec/SamsungPhoneWindowManager;

    invoke-virtual {v2}, Lcom/android/server/policy/sec/SamsungPhoneWindowManager;->handleWakingUp()V

    .line 10107
    invoke-direct {p0}, getEDM()Landroid/app/enterprise/EnterpriseDeviceManager;

    move-result-object v2

    if-eqz v2, :cond_90

    invoke-direct {p0}, getEDM()Landroid/app/enterprise/EnterpriseDeviceManager;

    move-result-object v2

    invoke-virtual {v2}, Landroid/app/enterprise/EnterpriseDeviceManager;->getEnterpriseSharedDevicePolicy()Lcom/sec/enterprise/knox/shareddevice/EnterpriseSharedDevicePolicy;

    move-result-object v2

    if-eqz v2, :cond_90

    .line 10108
    invoke-direct {p0}, getEDM()Landroid/app/enterprise/EnterpriseDeviceManager;

    move-result-object v2

    invoke-virtual {v2}, Landroid/app/enterprise/EnterpriseDeviceManager;->getEnterpriseSharedDevicePolicy()Lcom/sec/enterprise/knox/shareddevice/EnterpriseSharedDevicePolicy;

    move-result-object v2

    invoke-virtual {v2}, Lcom/sec/enterprise/knox/shareddevice/EnterpriseSharedDevicePolicy;->isSharedDeviceEnabled()Z

    move-result v1

    .line 10110
    .local v1, "isSharedDevice":Z
    new-instance v0, Landroid/content/Intent;

    invoke-direct {v0}, Landroid/content/Intent;-><init>()V

    .line 10111
    .local v0, "intentknox":Landroid/content/Intent;
    new-instance v2, Landroid/content/ComponentName;

    const-string v3, "com.sec.enterprise.knox.shareddevice.keyguard"

    const-string v4, "com.sec.enterprise.knox.shareddevice.keyguard.SharedDeviceKeyguardService"

    invoke-direct {v2, v3, v4}, Landroid/content/ComponentName;-><init>(Ljava/lang/String;Ljava/lang/String;)V

    invoke-virtual {v0, v2}, Landroid/content/Intent;->setComponent(Landroid/content/ComponentName;)Landroid/content/Intent;

    .line 10113
    const-string v2, "SharedDeviceKeyguardEventFlag"

    const/16 v3, 0x10

    invoke-virtual {v0, v2, v3}, Landroid/content/Intent;->putExtra(Ljava/lang/String;I)Landroid/content/Intent;

    .line 10115
    invoke-direct {p0}, getPersonaManagerLocked()Landroid/os/PersonaManager;

    move-result-object v2

    if-eqz v2, :cond_90

    .line 10116
    if-eqz v1, :cond_a3

    iget-object v2, p0, mPersonaManager:Landroid/os/PersonaManager;

    invoke-static {}, Landroid/os/UserHandle;->myUserId()I

    move-result v3

    invoke-virtual {v2, v3}, Landroid/os/PersonaManager;->getKeyguardShowState(I)Z

    move-result v2

    if-nez v2, :cond_a3

    .line 10117
    const-string v2, "WindowManager"

    const-string v3, "Shared devices screen ON completed show state false"

    invoke-static {v2, v3}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 10118
    iget-object v2, p0, mContext:Landroid/content/Context;

    invoke-virtual {v2, v0}, Landroid/content/Context;->startService(Landroid/content/Intent;)Landroid/content/ComponentName;

    .line 10128
    .end local v0    # "intentknox":Landroid/content/Intent;
    .end local v1    # "isSharedDevice":Z
    :cond_90
    :goto_90
    iget-object v2, p0, mKeyguardDelegate:Lcom/android/server/policy/keyguard/KeyguardServiceDelegate;

    if-eqz v2, :cond_99

    .line 10129
    iget-object v2, p0, mKeyguardDelegate:Lcom/android/server/policy/keyguard/KeyguardServiceDelegate;

    invoke-virtual {v2}, Lcom/android/server/policy/keyguard/KeyguardServiceDelegate;->onStartedWakingUp()V

    .line 10133
    :cond_99
    iget-object v2, p0, mWindowManagerFuncs:Landroid/view/WindowManagerPolicy$WindowManagerFuncs;

    const/4 v3, 0x0

    invoke-interface {v2, v3}, Landroid/view/WindowManagerPolicy$WindowManagerFuncs;->cancelDragForcelyWhenScreenTurnOff(Z)V

    .line 10135
    return-void

    .line 10102
    :catchall_a0
    move-exception v2

    :try_start_a1
    monitor-exit v3
    :try_end_a2
    .catchall {:try_start_a1 .. :try_end_a2} :catchall_a0

    throw v2

    .line 10119
    .restart local v0    # "intentknox":Landroid/content/Intent;
    .restart local v1    # "isSharedDevice":Z
    :cond_a3
    if-eqz v1, :cond_90

    .line 10120
    const-string v2, "WindowManager"

    const-string v3, "Shared devices screen ON completed show state true"

    invoke-static {v2, v3}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 10121
    const-string/jumbo v2, "isScreenOn"

    invoke-virtual {v0, v2, v5}, Landroid/content/Intent;->putExtra(Ljava/lang/String;I)Landroid/content/Intent;

    .line 10122
    iget-object v2, p0, mContext:Landroid/content/Context;

    invoke-virtual {v2, v0}, Landroid/content/Context;->startService(Landroid/content/Intent;)Landroid/content/ComponentName;

    goto :goto_90
.end method

.method public subWindowTypeToLayerLw(I)I
    .registers 5
    .param p1, "type"    # I

    .prologue
    .line 3990
    sparse-switch p1, :sswitch_data_28

    .line 4011
    const-string v0, "WindowManager"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Unknown sub-window type: "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 4012
    const/4 v0, 0x0

    :goto_1c
    return v0

    .line 3998
    :sswitch_1d
    const/4 v0, 0x1

    goto :goto_1c

    .line 4000
    :sswitch_1f
    const/4 v0, -0x2

    goto :goto_1c

    .line 4002
    :sswitch_21
    const/4 v0, -0x1

    goto :goto_1c

    .line 4007
    :sswitch_23
    const/4 v0, 0x2

    goto :goto_1c

    .line 4009
    :sswitch_25
    const/4 v0, 0x3

    goto :goto_1c

    .line 3990
    nop

    :sswitch_data_28
    .sparse-switch
        0x3e8 -> :sswitch_1d
        0x3e9 -> :sswitch_1f
        0x3ea -> :sswitch_23
        0x3eb -> :sswitch_1d
        0x3ec -> :sswitch_21
        0x3ed -> :sswitch_25
        0x3ee -> :sswitch_1d
        0x3ef -> :sswitch_1d
        0x44c -> :sswitch_1d
        0x8d4 -> :sswitch_23
    .end sparse-switch
.end method

.method public systemBooted()V
    .registers 9

    .prologue
    const/4 v5, 0x0

    const/4 v6, 0x1

    .line 11175
    invoke-direct {p0}, getEDM()Landroid/app/enterprise/EnterpriseDeviceManager;

    move-result-object v3

    if-eqz v3, :cond_2c

    invoke-direct {p0}, getEDM()Landroid/app/enterprise/EnterpriseDeviceManager;

    move-result-object v3

    invoke-virtual {v3}, Landroid/app/enterprise/EnterpriseDeviceManager;->getEnterpriseSharedDevicePolicy()Lcom/sec/enterprise/knox/shareddevice/EnterpriseSharedDevicePolicy;

    move-result-object v3

    if-eqz v3, :cond_2c

    .line 11176
    invoke-direct {p0}, getEDM()Landroid/app/enterprise/EnterpriseDeviceManager;

    move-result-object v3

    invoke-virtual {v3}, Landroid/app/enterprise/EnterpriseDeviceManager;->getEnterpriseSharedDevicePolicy()Lcom/sec/enterprise/knox/shareddevice/EnterpriseSharedDevicePolicy;

    move-result-object v3

    invoke-virtual {v3}, Lcom/sec/enterprise/knox/shareddevice/EnterpriseSharedDevicePolicy;->isSharedDeviceEnabled()Z

    move-result v3

    if-eqz v3, :cond_2c

    .line 11177
    iget-object v3, p0, mContext:Landroid/content/Context;

    invoke-virtual {v3}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v3

    const-string/jumbo v4, "isKeyguardLaunched"

    invoke-static {v3, v4, v5, v5}, Landroid/provider/Settings$System;->putIntForUser(Landroid/content/ContentResolver;Ljava/lang/String;II)Z

    .line 11181
    :cond_2c
    const/4 v0, 0x0

    .line 11182
    .local v0, "bindKeyguardNow":Z
    iget-object v4, p0, mLock:Ljava/lang/Object;

    monitor-enter v4

    .line 11185
    :try_start_30
    iget-object v3, p0, mKeyguardDelegate:Lcom/android/server/policy/keyguard/KeyguardServiceDelegate;

    if-eqz v3, :cond_d4

    .line 11186
    const/4 v0, 0x1

    .line 11192
    :goto_35
    monitor-exit v4
    :try_end_36
    .catchall {:try_start_30 .. :try_end_36} :catchall_d9

    .line 11193
    if-eqz v0, :cond_44

    .line 11194
    iget-object v3, p0, mKeyguardDelegate:Lcom/android/server/policy/keyguard/KeyguardServiceDelegate;

    iget-object v4, p0, mContext:Landroid/content/Context;

    invoke-virtual {v3, v4}, Lcom/android/server/policy/keyguard/KeyguardServiceDelegate;->bindService(Landroid/content/Context;)V

    .line 11195
    iget-object v3, p0, mKeyguardDelegate:Lcom/android/server/policy/keyguard/KeyguardServiceDelegate;

    invoke-virtual {v3}, Lcom/android/server/policy/keyguard/KeyguardServiceDelegate;->onBootCompleted()V

    .line 11197
    :cond_44
    iget-object v4, p0, mLock:Ljava/lang/Object;

    monitor-enter v4

    .line 11198
    const/4 v3, 0x1

    :try_start_48
    iput-boolean v3, p0, mSystemBooted:Z

    .line 11201
    iget-object v3, p0, mMultiPhoneWindowManager:Lcom/android/server/policy/multiwindow/MultiPhoneWindowManager;

    const/4 v5, 0x1

    iput-boolean v5, v3, Lcom/android/server/policy/multiwindow/MultiPhoneWindowManager;->mSystemBooted:Z

    .line 11204
    monitor-exit v4
    :try_end_50
    .catchall {:try_start_48 .. :try_end_50} :catchall_dc

    .line 11209
    invoke-virtual {p0}, startedWakingUp()V

    .line 11210
    const/4 v3, 0x0

    invoke-virtual {p0, v3}, screenTurningOn(Landroid/view/WindowManagerPolicy$ScreenOnListener;)V

    .line 11212
    invoke-virtual {p0}, screenTurnedOn()V

    .line 11213
    iget-object v3, p0, mSPWM:Lcom/android/server/policy/sec/SamsungPhoneWindowManager;

    invoke-virtual {v3}, Lcom/android/server/policy/sec/SamsungPhoneWindowManager;->systemBooted()V

    .line 11215
    invoke-direct {p0}, getEDM()Landroid/app/enterprise/EnterpriseDeviceManager;

    move-result-object v3

    if-eqz v3, :cond_d3

    invoke-direct {p0}, getEDM()Landroid/app/enterprise/EnterpriseDeviceManager;

    move-result-object v3

    invoke-virtual {v3}, Landroid/app/enterprise/EnterpriseDeviceManager;->getEnterpriseSharedDevicePolicy()Lcom/sec/enterprise/knox/shareddevice/EnterpriseSharedDevicePolicy;

    move-result-object v3

    if-eqz v3, :cond_d3

    .line 11216
    invoke-direct {p0}, getEDM()Landroid/app/enterprise/EnterpriseDeviceManager;

    move-result-object v3

    invoke-virtual {v3}, Landroid/app/enterprise/EnterpriseDeviceManager;->getEnterpriseSharedDevicePolicy()Lcom/sec/enterprise/knox/shareddevice/EnterpriseSharedDevicePolicy;

    move-result-object v3

    invoke-virtual {v3}, Lcom/sec/enterprise/knox/shareddevice/EnterpriseSharedDevicePolicy;->isSharedDeviceEnabled()Z

    move-result v2

    .line 11218
    .local v2, "isSharedDevice":Z
    const-string v3, "WindowManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Shared devices on boot completed"

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4, v2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v3, v4}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 11220
    new-instance v1, Landroid/content/Intent;

    invoke-direct {v1}, Landroid/content/Intent;-><init>()V

    .line 11221
    .local v1, "intentknox":Landroid/content/Intent;
    new-instance v3, Landroid/content/ComponentName;

    const-string v4, "com.sec.enterprise.knox.shareddevice.keyguard"

    const-string v5, "com.sec.enterprise.knox.shareddevice.keyguard.SharedDeviceKeyguardService"

    invoke-direct {v3, v4, v5}, Landroid/content/ComponentName;-><init>(Ljava/lang/String;Ljava/lang/String;)V

    invoke-virtual {v1, v3}, Landroid/content/Intent;->setComponent(Landroid/content/ComponentName;)Landroid/content/Intent;

    .line 11223
    const-string v3, "SharedDeviceKeyguardEventFlag"

    const/16 v4, 0x10

    invoke-virtual {v1, v3, v4}, Landroid/content/Intent;->putExtra(Ljava/lang/String;I)Landroid/content/Intent;

    .line 11224
    const-string/jumbo v3, "isDeviceBooted"

    invoke-virtual {v1, v3, v6}, Landroid/content/Intent;->putExtra(Ljava/lang/String;Z)Landroid/content/Intent;

    .line 11225
    if-eqz v2, :cond_d3

    .line 11226
    iget-object v3, p0, mContext:Landroid/content/Context;

    invoke-virtual {v3, v1}, Landroid/content/Context;->startService(Landroid/content/Intent;)Landroid/content/ComponentName;

    .line 11227
    iget-object v3, p0, mHandler:Landroid/os/Handler;

    const/16 v4, 0x69

    const-wide/16 v6, 0xc8

    invoke-virtual {v3, v4, v6, v7}, Landroid/os/Handler;->sendEmptyMessageDelayed(IJ)Z

    .line 11228
    iget-object v3, p0, mKeyguardDelegate:Lcom/android/server/policy/keyguard/KeyguardServiceDelegate;

    invoke-virtual {v3}, Lcom/android/server/policy/keyguard/KeyguardServiceDelegate;->isShowing()Z

    move-result v3

    if-eqz v3, :cond_d3

    .line 11229
    iget-object v3, p0, mHandler:Landroid/os/Handler;

    new-instance v4, Lcom/android/server/policy/PhoneWindowManager$40;

    invoke-direct {v4, p0}, Lcom/android/server/policy/PhoneWindowManager$40;-><init>(Lcom/android/server/policy/PhoneWindowManager;)V

    invoke-virtual {v3, v4}, Landroid/os/Handler;->post(Ljava/lang/Runnable;)Z

    .line 11240
    .end local v1    # "intentknox":Landroid/content/Intent;
    .end local v2    # "isSharedDevice":Z
    :cond_d3
    return-void

    .line 11190
    :cond_d4
    const/4 v3, 0x1

    :try_start_d5
    iput-boolean v3, p0, mDeferBindKeyguard:Z

    goto/16 :goto_35

    .line 11192
    :catchall_d9
    move-exception v3

    monitor-exit v4
    :try_end_db
    .catchall {:try_start_d5 .. :try_end_db} :catchall_d9

    throw v3

    .line 11204
    :catchall_dc
    move-exception v3

    :try_start_dd
    monitor-exit v4
    :try_end_de
    .catchall {:try_start_dd .. :try_end_de} :catchall_dc

    throw v3
.end method

.method public systemReady()V
    .registers 5

    .prologue
    .line 11122
    new-instance v1, Lcom/android/server/policy/keyguard/KeyguardServiceDelegate;

    iget-object v2, p0, mContext:Landroid/content/Context;

    invoke-direct {v1, v2}, Lcom/android/server/policy/keyguard/KeyguardServiceDelegate;-><init>(Landroid/content/Context;)V

    iput-object v1, p0, mKeyguardDelegate:Lcom/android/server/policy/keyguard/KeyguardServiceDelegate;

    .line 11123
    iget-object v1, p0, mKeyguardDelegate:Lcom/android/server/policy/keyguard/KeyguardServiceDelegate;

    invoke-virtual {v1}, Lcom/android/server/policy/keyguard/KeyguardServiceDelegate;->onSystemReady()V

    .line 11124
    iget-object v1, p0, mSPWM:Lcom/android/server/policy/sec/SamsungPhoneWindowManager;

    iget-object v2, p0, mKeyguardDelegate:Lcom/android/server/policy/keyguard/KeyguardServiceDelegate;

    invoke-virtual {v1, v2}, Lcom/android/server/policy/sec/SamsungPhoneWindowManager;->systemReady(Lcom/android/server/policy/keyguard/KeyguardServiceDelegate;)V

    .line 11126
    invoke-direct {p0}, readCameraLensCoverState()V

    .line 11129
    iget-object v1, p0, mMultiPhoneWindowManager:Lcom/android/server/policy/multiwindow/MultiPhoneWindowManager;

    iget-object v2, p0, mKeyguardDelegate:Lcom/android/server/policy/keyguard/KeyguardServiceDelegate;

    invoke-virtual {v1, v2}, Lcom/android/server/policy/multiwindow/MultiPhoneWindowManager;->onSystemReady(Lcom/android/server/policy/keyguard/KeyguardServiceDelegate;)V

    .line 11133
    invoke-virtual {p0}, updateUiMode()V

    .line 11135
    iget-object v2, p0, mLock:Ljava/lang/Object;

    monitor-enter v2

    .line 11136
    :try_start_25
    invoke-virtual {p0}, updateOrientationListenerLp()V

    .line 11137
    const/4 v1, 0x1

    iput-boolean v1, p0, mSystemReady:Z

    .line 11140
    iget-object v1, p0, mMultiPhoneWindowManager:Lcom/android/server/policy/multiwindow/MultiPhoneWindowManager;

    const/4 v3, 0x1

    iput-boolean v3, v1, Lcom/android/server/policy/multiwindow/MultiPhoneWindowManager;->mSystemReady:Z

    .line 11143
    iget-object v1, p0, mHandler:Landroid/os/Handler;

    new-instance v3, Lcom/android/server/policy/PhoneWindowManager$39;

    invoke-direct {v3, p0}, Lcom/android/server/policy/PhoneWindowManager$39;-><init>(Lcom/android/server/policy/PhoneWindowManager;)V

    invoke-virtual {v1, v3}, Landroid/os/Handler;->post(Ljava/lang/Runnable;)Z

    .line 11156
    iget-boolean v0, p0, mDeferBindKeyguard:Z

    .line 11157
    .local v0, "bindKeyguardNow":Z
    if-eqz v0, :cond_41

    .line 11159
    const/4 v1, 0x0

    iput-boolean v1, p0, mDeferBindKeyguard:Z

    .line 11161
    :cond_41
    monitor-exit v2
    :try_end_42
    .catchall {:try_start_25 .. :try_end_42} :catchall_56

    .line 11163
    if-eqz v0, :cond_50

    .line 11164
    iget-object v1, p0, mKeyguardDelegate:Lcom/android/server/policy/keyguard/KeyguardServiceDelegate;

    iget-object v2, p0, mContext:Landroid/content/Context;

    invoke-virtual {v1, v2}, Lcom/android/server/policy/keyguard/KeyguardServiceDelegate;->bindService(Landroid/content/Context;)V

    .line 11165
    iget-object v1, p0, mKeyguardDelegate:Lcom/android/server/policy/keyguard/KeyguardServiceDelegate;

    invoke-virtual {v1}, Lcom/android/server/policy/keyguard/KeyguardServiceDelegate;->onBootCompleted()V

    .line 11167
    :cond_50
    iget-object v1, p0, mSystemGestures:Lcom/android/server/policy/SystemGesturesPointerEventListener;

    invoke-virtual {v1}, Lcom/android/server/policy/SystemGesturesPointerEventListener;->systemReady()V

    .line 11168
    return-void

    .line 11161
    .end local v0    # "bindKeyguardNow":Z
    :catchall_56
    move-exception v1

    :try_start_57
    monitor-exit v2
    :try_end_58
    .catchall {:try_start_57 .. :try_end_58} :catchall_56

    throw v1
.end method

.method public toggleMultiWindowTray()Z
    .registers 3

    .prologue
    .line 12362
    iget-object v0, p0, mMultiPhoneWindowManager:Lcom/android/server/policy/multiwindow/MultiPhoneWindowManager;

    iget-object v1, p0, mTopFullscreenOpaqueWindowState:Landroid/view/WindowManagerPolicy$WindowState;

    invoke-virtual {v0, v1}, Lcom/android/server/policy/multiwindow/MultiPhoneWindowManager;->toggleMultiWindowTray(Landroid/view/WindowManagerPolicy$WindowState;)Z

    move-result v0

    return v0
.end method

.method public updateAdaptiveEvent(Ljava/lang/String;Landroid/widget/RemoteViews;Landroid/widget/RemoteViews;)V
    .registers 5
    .param p1, "requestClass"    # Ljava/lang/String;
    .param p2, "smallView"    # Landroid/widget/RemoteViews;
    .param p3, "bigView"    # Landroid/widget/RemoteViews;

    .prologue
    .line 10667
    iget-object v0, p0, mKeyguardDelegate:Lcom/android/server/policy/keyguard/KeyguardServiceDelegate;

    if-eqz v0, :cond_9

    .line 10668
    iget-object v0, p0, mKeyguardDelegate:Lcom/android/server/policy/keyguard/KeyguardServiceDelegate;

    invoke-virtual {v0, p1, p2, p3}, Lcom/android/server/policy/keyguard/KeyguardServiceDelegate;->updateAdaptiveEvent(Ljava/lang/String;Landroid/widget/RemoteViews;Landroid/widget/RemoteViews;)V

    .line 10670
    :cond_9
    return-void
.end method

.method public updateCocktailBarVisibility(Z)Z
    .registers 3
    .param p1, "visibility"    # Z

    .prologue
    .line 13269
    iget-object v0, p0, mContext:Landroid/content/Context;

    invoke-static {v0}, Lcom/samsung/android/cocktailbar/CocktailBarFeatures;->isSystemBarType(Landroid/content/Context;)Z

    move-result v0

    if-eqz v0, :cond_f

    .line 13270
    iget-object v0, p0, mCocktailPhoneWindowManager:Lcom/android/server/policy/cocktail/CocktailPhoneWindowManager;

    invoke-virtual {v0, p1}, Lcom/android/server/policy/cocktail/CocktailPhoneWindowManager;->updateCocktailBarVisibility(Z)Z

    move-result v0

    .line 13273
    :goto_e
    return v0

    :cond_f
    const/4 v0, 0x0

    goto :goto_e
.end method

.method public updateCocktailLayout(IIII)V
    .registers 6
    .param p1, "cocktailLeft"    # I
    .param p2, "cocktailRight"    # I
    .param p3, "cocktailTop"    # I
    .param p4, "cocktailBottom"    # I

    .prologue
    .line 13234
    iput p1, p0, mSystemLeft:I

    .line 13235
    iput p3, p0, mSystemTop:I

    .line 13236
    iget v0, p0, mSystemRight:I

    sub-int/2addr v0, p2

    iput v0, p0, mSystemRight:I

    .line 13237
    iget v0, p0, mSystemBottom:I

    sub-int/2addr v0, p4

    iput v0, p0, mSystemBottom:I

    .line 13239
    iget v0, p0, mUnrestrictedScreenLeft:I

    add-int/2addr v0, p1

    iput v0, p0, mUnrestrictedScreenLeft:I

    iput v0, p0, mRestrictedOverscanScreenLeft:I

    .line 13240
    iget v0, p0, mUnrestrictedScreenTop:I

    add-int/2addr v0, p3

    iput v0, p0, mUnrestrictedScreenTop:I

    iput v0, p0, mRestrictedOverscanScreenTop:I

    .line 13241
    iget v0, p0, mUnrestrictedScreenWidth:I

    sub-int/2addr v0, p1

    sub-int/2addr v0, p2

    iput v0, p0, mUnrestrictedScreenWidth:I

    iput v0, p0, mRestrictedOverscanScreenWidth:I

    .line 13242
    iget v0, p0, mUnrestrictedScreenHeight:I

    sub-int/2addr v0, p3

    sub-int/2addr v0, p4

    iput v0, p0, mUnrestrictedScreenHeight:I

    iput v0, p0, mRestrictedOverscanScreenHeight:I

    .line 13243
    iget v0, p0, mUnrestrictedScreenLeft:I

    iput v0, p0, mRestrictedScreenLeft:I

    .line 13244
    iget v0, p0, mUnrestrictedScreenTop:I

    iput v0, p0, mRestrictedScreenTop:I

    .line 13245
    iget v0, p0, mUnrestrictedScreenWidth:I

    iput v0, p0, mRestrictedScreenWidth:I

    .line 13246
    iget v0, p0, mUnrestrictedScreenHeight:I

    iput v0, p0, mRestrictedScreenHeight:I

    .line 13247
    iget v0, p0, mUnrestrictedScreenLeft:I

    iput v0, p0, mCurLeft:I

    iput v0, p0, mStableFullscreenLeft:I

    iput v0, p0, mStableLeft:I

    iput v0, p0, mContentLeft:I

    iput v0, p0, mDockLeft:I

    .line 13249
    iget v0, p0, mUnrestrictedScreenTop:I

    iput v0, p0, mCurTop:I

    iput v0, p0, mStableFullscreenTop:I

    iput v0, p0, mStableTop:I

    iput v0, p0, mContentTop:I

    iput v0, p0, mDockTop:I

    .line 13251
    iget v0, p0, mCurRight:I

    sub-int/2addr v0, p2

    iput v0, p0, mCurRight:I

    iput v0, p0, mStableFullscreenRight:I

    iput v0, p0, mStableRight:I

    iput v0, p0, mContentRight:I

    iput v0, p0, mDockRight:I

    .line 13253
    iget v0, p0, mCurBottom:I

    sub-int/2addr v0, p4

    iput v0, p0, mCurBottom:I

    iput v0, p0, mStableFullscreenBottom:I

    iput v0, p0, mStableBottom:I

    iput v0, p0, mContentBottom:I

    iput v0, p0, mDockBottom:I

    .line 13256
    return-void
.end method

.method public updateCursorWindowInputRect(Landroid/graphics/Region;)V
    .registers 3
    .param p1, "cursorRect"    # Landroid/graphics/Region;

    .prologue
    .line 732
    iget-object v0, p0, cursorWindowTouchableRegion:Landroid/graphics/Region;

    invoke-virtual {v0, p1}, Landroid/graphics/Region;->set(Landroid/graphics/Region;)Z

    .line 733
    return-void
.end method

.method updateOrientationListenerLp()V
    .registers 3

    .prologue
    .line 1527
    iget-object v1, p0, mOrientationListener:Lcom/android/server/policy/PhoneWindowManager$MyOrientationListener;

    invoke-virtual {v1}, Lcom/android/server/policy/PhoneWindowManager$MyOrientationListener;->canDetectOrientation()Z

    move-result v1

    if-nez v1, :cond_9

    .line 1587
    :cond_8
    :goto_8
    return-void

    .line 1549
    :cond_9
    const/4 v0, 0x1

    .line 1568
    .local v0, "disable":Z
    iget-boolean v1, p0, mScreenOnEarly:Z

    if-eqz v1, :cond_2d

    iget-boolean v1, p0, mAwake:Z

    if-eqz v1, :cond_2d

    iget-boolean v1, p0, mKeyguardDrawComplete:Z

    if-eqz v1, :cond_2d

    iget-boolean v1, p0, mWindowManagerDrawComplete:Z

    if-eqz v1, :cond_2d

    .line 1570
    invoke-virtual {p0}, needSensorRunningLp()Z

    move-result v1

    if-eqz v1, :cond_2d

    .line 1571
    const/4 v0, 0x0

    .line 1573
    iget-boolean v1, p0, mOrientationSensorEnabled:Z

    if-nez v1, :cond_2d

    .line 1574
    iget-object v1, p0, mOrientationListener:Lcom/android/server/policy/PhoneWindowManager$MyOrientationListener;

    invoke-virtual {v1}, Lcom/android/server/policy/PhoneWindowManager$MyOrientationListener;->enable()V

    .line 1576
    const/4 v1, 0x1

    iput-boolean v1, p0, mOrientationSensorEnabled:Z

    .line 1582
    :cond_2d
    if-eqz v0, :cond_8

    iget-boolean v1, p0, mOrientationSensorEnabled:Z

    if-eqz v1, :cond_8

    .line 1583
    iget-object v1, p0, mOrientationListener:Lcom/android/server/policy/PhoneWindowManager$MyOrientationListener;

    invoke-virtual {v1}, Lcom/android/server/policy/PhoneWindowManager$MyOrientationListener;->disable()V

    .line 1585
    const/4 v1, 0x0

    iput-boolean v1, p0, mOrientationSensorEnabled:Z

    goto :goto_8
.end method

.method public updateRotation(Z)V
    .registers 4
    .param p1, "alwaysSendConfiguration"    # Z

    .prologue
    .line 11505
    :try_start_0
    iget-object v0, p0, mWindowManager:Landroid/view/IWindowManager;

    const/4 v1, 0x0

    invoke-interface {v0, p1, v1}, Landroid/view/IWindowManager;->updateRotation(ZZ)V
    :try_end_6
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_6} :catch_7

    .line 11509
    :goto_6
    return-void

    .line 11506
    :catch_7
    move-exception v0

    goto :goto_6
.end method

.method updateRotation(ZZ)V
    .registers 4
    .param p1, "alwaysSendConfiguration"    # Z
    .param p2, "forceRelayout"    # Z

    .prologue
    .line 11514
    :try_start_0
    iget-object v0, p0, mWindowManager:Landroid/view/IWindowManager;

    invoke-interface {v0, p1, p2}, Landroid/view/IWindowManager;->updateRotation(ZZ)V
    :try_end_5
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_5} :catch_6

    .line 11518
    :goto_5
    return-void

    .line 11515
    :catch_6
    move-exception v0

    goto :goto_5
.end method

.method public updateSViewCoverLayout(Z)V
    .registers 3
    .param p1, "useSViewCover"    # Z

    .prologue
    .line 13140
    if-eqz p1, :cond_6b

    .line 13141
    iget v0, p0, mSViewCoverSystemLeft:I

    iput v0, p0, mSystemLeft:I

    .line 13142
    iget v0, p0, mSViewCoverSystemTop:I

    iput v0, p0, mSystemTop:I

    .line 13143
    iget v0, p0, mSViewCoverSystemRight:I

    iput v0, p0, mSystemRight:I

    .line 13144
    iget v0, p0, mSViewCoverSystemBottom:I

    iput v0, p0, mSystemBottom:I

    .line 13145
    iget v0, p0, mSViewCoverUnrestrictedScreenLeft:I

    iput v0, p0, mUnrestrictedScreenLeft:I

    iput v0, p0, mRestrictedScreenLeft:I

    .line 13146
    iget v0, p0, mSViewCoverUnrestrictedScreenTop:I

    iput v0, p0, mUnrestrictedScreenTop:I

    iput v0, p0, mRestrictedScreenTop:I

    .line 13147
    iget v0, p0, mSViewCoverUnrestrictedScreenWidth:I

    iput v0, p0, mUnrestrictedScreenWidth:I

    iput v0, p0, mRestrictedScreenWidth:I

    .line 13148
    iget v0, p0, mSViewCoverUnrestrictedScreenHeight:I

    iput v0, p0, mUnrestrictedScreenHeight:I

    iput v0, p0, mRestrictedScreenHeight:I

    .line 13149
    iget v0, p0, mSViewCoverStableFullscreenLeft:I

    iput v0, p0, mStableFullscreenLeft:I

    .line 13150
    iget v0, p0, mSViewCoverStableFullscreenTop:I

    iput v0, p0, mStableFullscreenTop:I

    .line 13151
    iget v0, p0, mSViewCoverStableFullscreenRight:I

    iput v0, p0, mStableFullscreenRight:I

    .line 13152
    iget v0, p0, mSViewCoverStableFullscreenBottom:I

    iput v0, p0, mStableFullscreenBottom:I

    .line 13153
    iget v0, p0, mSViewCoverStableLeft:I

    iput v0, p0, mStableLeft:I

    .line 13154
    iget v0, p0, mSViewCoverStableTop:I

    iput v0, p0, mStableTop:I

    .line 13155
    iget v0, p0, mSViewCoverStableRight:I

    iput v0, p0, mStableRight:I

    .line 13156
    iget v0, p0, mSViewCoverStableBottom:I

    iput v0, p0, mStableBottom:I

    .line 13157
    iget v0, p0, mSViewCoverDockLeft:I

    iput v0, p0, mCurLeft:I

    iput v0, p0, mContentLeft:I

    iput v0, p0, mDockLeft:I

    .line 13158
    iget v0, p0, mSViewCoverDockTop:I

    iput v0, p0, mCurTop:I

    iput v0, p0, mContentTop:I

    iput v0, p0, mDockTop:I

    .line 13159
    iget v0, p0, mSViewCoverDockRight:I

    iput v0, p0, mCurRight:I

    iput v0, p0, mContentRight:I

    iput v0, p0, mDockRight:I

    .line 13160
    iget v0, p0, mSViewCoverDockBottom:I

    iput v0, p0, mCurBottom:I

    iput v0, p0, mContentBottom:I

    iput v0, p0, mDockBottom:I

    .line 13183
    :goto_6a
    return-void

    .line 13162
    :cond_6b
    iget v0, p0, mOriginalSystemLeft:I

    iput v0, p0, mSystemLeft:I

    .line 13163
    iget v0, p0, mOriginalSystemTop:I

    iput v0, p0, mSystemTop:I

    .line 13164
    iget v0, p0, mOriginalSystemRight:I

    iput v0, p0, mSystemRight:I

    .line 13165
    iget v0, p0, mOriginalSystemBottom:I

    iput v0, p0, mSystemBottom:I

    .line 13166
    iget v0, p0, mOriginalUnrestrictedScreenLeft:I

    iput v0, p0, mUnrestrictedScreenLeft:I

    iput v0, p0, mRestrictedScreenLeft:I

    .line 13167
    iget v0, p0, mOriginalUnrestrictedScreenTop:I

    iput v0, p0, mUnrestrictedScreenTop:I

    iput v0, p0, mRestrictedScreenTop:I

    .line 13168
    iget v0, p0, mOriginalUnrestrictedScreenWidth:I

    iput v0, p0, mUnrestrictedScreenWidth:I

    iput v0, p0, mRestrictedScreenWidth:I

    .line 13169
    iget v0, p0, mOriginalUnrestrictedScreenHeight:I

    iput v0, p0, mUnrestrictedScreenHeight:I

    iput v0, p0, mRestrictedScreenHeight:I

    .line 13170
    iget v0, p0, mOriginalStableFullscreenLeft:I

    iput v0, p0, mStableFullscreenLeft:I

    .line 13171
    iget v0, p0, mOriginalStableFullscreenTop:I

    iput v0, p0, mStableFullscreenTop:I

    .line 13172
    iget v0, p0, mOriginalStableFullscreenRight:I

    iput v0, p0, mStableFullscreenRight:I

    .line 13173
    iget v0, p0, mOriginalStableFullscreenBottom:I

    iput v0, p0, mStableFullscreenBottom:I

    .line 13174
    iget v0, p0, mOriginalStableLeft:I

    iput v0, p0, mStableLeft:I

    .line 13175
    iget v0, p0, mOriginalStableTop:I

    iput v0, p0, mStableTop:I

    .line 13176
    iget v0, p0, mOriginalStableRight:I

    iput v0, p0, mStableRight:I

    .line 13177
    iget v0, p0, mOriginalStableBottom:I

    iput v0, p0, mStableBottom:I

    .line 13178
    iget v0, p0, mOriginalDockLeft:I

    iput v0, p0, mCurLeft:I

    iput v0, p0, mContentLeft:I

    iput v0, p0, mDockLeft:I

    .line 13179
    iget v0, p0, mOriginalDockTop:I

    iput v0, p0, mCurTop:I

    iput v0, p0, mContentTop:I

    iput v0, p0, mDockTop:I

    .line 13180
    iget v0, p0, mOriginalDockRight:I

    iput v0, p0, mCurRight:I

    iput v0, p0, mContentRight:I

    iput v0, p0, mDockRight:I

    .line 13181
    iget v0, p0, mOriginalDockBottom:I

    iput v0, p0, mCurBottom:I

    iput v0, p0, mContentBottom:I

    iput v0, p0, mDockBottom:I

    goto :goto_6a
.end method

.method public updateSettings()V
    .registers 27

    .prologue
    .line 3243
    move-object/from16 v0, p0

    iget-object v0, v0, mContext:Landroid/content/Context;

    move-object/from16 v21, v0

    invoke-virtual/range {v21 .. v21}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v14

    .line 3244
    .local v14, "resolver":Landroid/content/ContentResolver;
    const/16 v17, 0x0

    .line 3245
    .local v17, "updateRotation":Z
    move-object/from16 v0, p0

    iget-object v0, v0, mLock:Ljava/lang/Object;

    move-object/from16 v22, v0

    monitor-enter v22

    .line 3246
    :try_start_13
    const-string/jumbo v21, "end_button_behavior"

    const/16 v23, 0x2

    const/16 v24, -0x2

    move-object/from16 v0, v21

    move/from16 v1, v23

    move/from16 v2, v24

    invoke-static {v14, v0, v1, v2}, Landroid/provider/Settings$System;->getIntForUser(Landroid/content/ContentResolver;Ljava/lang/String;II)I

    move-result v21

    move/from16 v0, v21

    move-object/from16 v1, p0

    iput v0, v1, mEndcallBehavior:I

    .line 3250
    const-string/jumbo v21, "incall_power_button_behavior"

    const/16 v23, 0x1

    const/16 v24, 0x0

    move-object/from16 v0, v21

    move/from16 v1, v23

    move/from16 v2, v24

    invoke-static {v14, v0, v1, v2}, Landroid/provider/Settings$Secure;->getIntForUser(Landroid/content/ContentResolver;Ljava/lang/String;II)I

    move-result v21

    move/from16 v0, v21

    move-object/from16 v1, p0

    iput v0, v1, mIncallPowerBehavior:I

    .line 3256
    const-string/jumbo v21, "wake_gesture_enabled"

    const/16 v23, 0x0

    const/16 v24, -0x2

    move-object/from16 v0, v21

    move/from16 v1, v23

    move/from16 v2, v24

    invoke-static {v14, v0, v1, v2}, Landroid/provider/Settings$Secure;->getIntForUser(Landroid/content/ContentResolver;Ljava/lang/String;II)I

    move-result v21

    if-eqz v21, :cond_36e

    const/16 v20, 0x1

    .line 3259
    .local v20, "wakeGestureEnabledSetting":Z
    :goto_56
    move-object/from16 v0, p0

    iget-boolean v0, v0, mWakeGestureEnabledSetting:Z

    move/from16 v21, v0

    move/from16 v0, v21

    move/from16 v1, v20

    if-eq v0, v1, :cond_6b

    .line 3260
    move/from16 v0, v20

    move-object/from16 v1, p0

    iput-boolean v0, v1, mWakeGestureEnabledSetting:Z

    .line 3261
    invoke-direct/range {p0 .. p0}, updateWakeGestureListenerLp()V

    .line 3265
    :cond_6b
    const-string/jumbo v21, "user_rotation"

    const/16 v23, 0x0

    const/16 v24, -0x2

    move-object/from16 v0, v21

    move/from16 v1, v23

    move/from16 v2, v24

    invoke-static {v14, v0, v1, v2}, Landroid/provider/Settings$System;->getIntForUser(Landroid/content/ContentResolver;Ljava/lang/String;II)I

    move-result v18

    .line 3268
    .local v18, "userRotation":I
    move-object/from16 v0, p0

    iget v0, v0, mUserRotation:I

    move/from16 v21, v0

    move/from16 v0, v21

    move/from16 v1, v18

    if-eq v0, v1, :cond_90

    .line 3269
    move/from16 v0, v18

    move-object/from16 v1, p0

    iput v0, v1, mUserRotation:I

    .line 3270
    const/16 v17, 0x1

    .line 3272
    :cond_90
    const-string v21, "accelerometer_rotation"

    const/16 v23, 0x0

    const/16 v24, -0x2

    move-object/from16 v0, v21

    move/from16 v1, v23

    move/from16 v2, v24

    invoke-static {v14, v0, v1, v2}, Landroid/provider/Settings$System;->getIntForUser(Landroid/content/ContentResolver;Ljava/lang/String;II)I

    move-result v21

    if-eqz v21, :cond_372

    const/16 v19, 0x0

    .line 3276
    .local v19, "userRotationMode":I
    :goto_a4
    move-object/from16 v0, p0

    iget v0, v0, mUserRotationMode:I

    move/from16 v21, v0

    move/from16 v0, v21

    move/from16 v1, v19

    if-eq v0, v1, :cond_bb

    .line 3277
    move/from16 v0, v19

    move-object/from16 v1, p0

    iput v0, v1, mUserRotationMode:I

    .line 3278
    const/16 v17, 0x1

    .line 3279
    invoke-virtual/range {p0 .. p0}, updateOrientationListenerLp()V

    .line 3283
    :cond_bb
    move-object/from16 v0, p0

    iget-object v0, v0, mContext:Landroid/content/Context;

    move-object/from16 v21, v0

    invoke-static/range {v21 .. v21}, Lcom/android/server/policy/sec/SamsungPolicyProperties;->FolderTypeFeature(Landroid/content/Context;)I

    move-result v21

    const/16 v23, 0x2

    move/from16 v0, v21

    move/from16 v1, v23

    if-ne v0, v1, :cond_f3

    .line 3284
    const-string v21, "accelerometer_rotation_second"

    const/16 v23, 0x0

    const/16 v24, -0x2

    move-object/from16 v0, v21

    move/from16 v1, v23

    move/from16 v2, v24

    invoke-static {v14, v0, v1, v2}, Landroid/provider/Settings$System;->getIntForUser(Landroid/content/ContentResolver;Ljava/lang/String;II)I

    move-result v21

    if-eqz v21, :cond_376

    const/4 v15, 0x0

    .line 3287
    .local v15, "secondLcdUserRotationMode":I
    :goto_e0
    move-object/from16 v0, p0

    iget v0, v0, mSecondLcdUserRotationMode:I

    move/from16 v21, v0

    move/from16 v0, v21

    if-eq v0, v15, :cond_f3

    .line 3288
    move-object/from16 v0, p0

    iput v15, v0, mSecondLcdUserRotationMode:I

    .line 3289
    const/16 v17, 0x1

    .line 3290
    invoke-virtual/range {p0 .. p0}, updateOrientationListenerLp()V

    .line 3296
    .end local v15    # "secondLcdUserRotationMode":I
    :cond_f3
    const-string v21, "assistant"

    const/16 v23, -0x2

    move-object/from16 v0, v21

    move/from16 v1, v23

    invoke-static {v14, v0, v1}, Landroid/provider/Settings$Secure;->getStringForUser(Landroid/content/ContentResolver;Ljava/lang/String;I)Ljava/lang/String;

    move-result-object v5

    .line 3298
    .local v5, "AssistSetting":Ljava/lang/String;
    if-eqz v5, :cond_127

    .line 3299
    const-string v21, "/"

    move-object/from16 v0, v21

    invoke-virtual {v5, v0}, Ljava/lang/String;->split(Ljava/lang/String;)[Ljava/lang/String;

    move-result-object v4

    .line 3300
    .local v4, "AssistPackage":[Ljava/lang/String;
    const/16 v21, 0x0

    aget-object v21, v4, v21

    if-eqz v21, :cond_379

    const/16 v21, 0x0

    aget-object v21, v4, v21

    const-string v23, "com.samsung.voiceserviceplatform"

    move-object/from16 v0, v21

    move-object/from16 v1, v23

    invoke-virtual {v0, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v21

    if-eqz v21, :cond_379

    .line 3301
    const/16 v21, 0x1

    move/from16 v0, v21

    move-object/from16 v1, p0

    iput-boolean v0, v1, mIsOWCSetting:Z

    .line 3308
    .end local v4    # "AssistPackage":[Ljava/lang/String;
    :cond_127
    :goto_127
    move-object/from16 v0, p0

    iget-boolean v0, v0, mSystemReady:Z

    move/from16 v21, v0

    if-eqz v21, :cond_2f4

    .line 3309
    const-string/jumbo v21, "pointer_location"

    const/16 v23, 0x0

    const/16 v24, -0x2

    move-object/from16 v0, v21

    move/from16 v1, v23

    move/from16 v2, v24

    invoke-static {v14, v0, v1, v2}, Landroid/provider/Settings$System;->getIntForUser(Landroid/content/ContentResolver;Ljava/lang/String;II)I

    move-result v13

    .line 3311
    .local v13, "pointerLocation":I
    move-object/from16 v0, p0

    iget v0, v0, mPointerLocationMode:I

    move/from16 v21, v0

    move/from16 v0, v21

    if-eq v0, v13, :cond_15f

    .line 3312
    move-object/from16 v0, p0

    iput v13, v0, mPointerLocationMode:I

    .line 3313
    move-object/from16 v0, p0

    iget-object v0, v0, mHandler:Landroid/os/Handler;

    move-object/from16 v23, v0

    if-eqz v13, :cond_386

    const/16 v21, 0x1

    :goto_158
    move-object/from16 v0, v23

    move/from16 v1, v21

    invoke-virtual {v0, v1}, Landroid/os/Handler;->sendEmptyMessage(I)Z

    .line 3318
    :cond_15f
    sget-boolean v21, Lcom/samsung/android/toolbox/TwToolBoxService;->TOOLBOX_SUPPORT:Z

    if-eqz v21, :cond_1cd

    .line 3319
    const-string/jumbo v21, "toolbox_onoff"

    const/16 v23, 0x0

    const/16 v24, -0x2

    move-object/from16 v0, v21

    move/from16 v1, v23

    move/from16 v2, v24

    invoke-static {v14, v0, v1, v2}, Landroid/provider/Settings$System;->getIntForUser(Landroid/content/ContentResolver;Ljava/lang/String;II)I

    move-result v16

    .line 3320
    .local v16, "toolbox":I
    move-object/from16 v0, p0

    iget v0, v0, mToolBoxMode:I

    move/from16 v21, v0

    move/from16 v0, v21

    move/from16 v1, v16

    if-eq v0, v1, :cond_197

    .line 3321
    move/from16 v0, v16

    move-object/from16 v1, p0

    iput v0, v1, mToolBoxMode:I

    .line 3322
    move-object/from16 v0, p0

    iget-object v0, v0, mHandler:Landroid/os/Handler;

    move-object/from16 v23, v0

    if-eqz v16, :cond_38a

    const/16 v21, 0x12

    :goto_190
    move-object/from16 v0, v23

    move/from16 v1, v21

    invoke-virtual {v0, v1}, Landroid/os/Handler;->sendEmptyMessage(I)Z

    .line 3324
    :cond_197
    const-string/jumbo v21, "toolbox_apps"

    const/16 v23, -0x2

    move-object/from16 v0, v21

    move/from16 v1, v23

    invoke-static {v14, v0, v1}, Landroid/provider/Settings$System;->getStringForUser(Landroid/content/ContentResolver;Ljava/lang/String;I)Ljava/lang/String;

    move-result-object v12

    .line 3325
    .local v12, "packageList":Ljava/lang/String;
    if-nez v12, :cond_1a8

    const-string v12, ""

    .line 3326
    :cond_1a8
    move-object/from16 v0, p0

    iget-object v0, v0, mToolBoxPackageList:Ljava/lang/String;

    move-object/from16 v21, v0

    move-object/from16 v0, v21

    invoke-virtual {v0, v12}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v21

    if-nez v21, :cond_1cd

    .line 3327
    move-object/from16 v0, p0

    iput-object v12, v0, mToolBoxPackageList:Ljava/lang/String;

    .line 3328
    if-eqz v16, :cond_1cd

    .line 3329
    move-object/from16 v0, p0

    iget-object v0, v0, mTwToolBoxFloatingViewer:Lcom/samsung/android/toolbox/TwToolBoxFloatingViewer;

    move-object/from16 v21, v0

    if-eqz v21, :cond_1cd

    move-object/from16 v0, p0

    iget-object v0, v0, mTwToolBoxFloatingViewer:Lcom/samsung/android/toolbox/TwToolBoxFloatingViewer;

    move-object/from16 v21, v0

    invoke-virtual/range {v21 .. v21}, Lcom/samsung/android/toolbox/TwToolBoxFloatingViewer;->reset()V

    .line 3337
    .end local v12    # "packageList":Ljava/lang/String;
    .end local v16    # "toolbox":I
    :cond_1cd
    const-string v21, "any_screen_enabled"

    const/16 v23, 0x0

    const/16 v24, -0x2

    move-object/from16 v0, v21

    move/from16 v1, v23

    move/from16 v2, v24

    invoke-static {v14, v0, v1, v2}, Landroid/provider/Settings$System;->getIntForUser(Landroid/content/ContentResolver;Ljava/lang/String;II)I

    move-result v9

    .line 3338
    .local v9, "isEasyOneHandEnabled":I
    const/16 v21, 0x1

    move/from16 v0, v21

    if-ne v9, v0, :cond_38e

    const/16 v21, 0x1

    :goto_1e5
    invoke-static/range {v21 .. v21}, Lcom/android/server/policy/sec/SamsungPolicyProperties;->setEasyOneHandEnabled(Z)V

    .line 3340
    move-object/from16 v0, p0

    iget v0, v0, mEasyOneHandEnabled:I

    move/from16 v21, v0

    move/from16 v0, v21

    if-eq v0, v9, :cond_21d

    .line 3341
    move-object/from16 v0, p0

    iput v9, v0, mEasyOneHandEnabled:I

    .line 3342
    move-object/from16 v0, p0

    iget-boolean v0, v0, mSystemReady:Z

    move/from16 v21, v0

    if-eqz v21, :cond_21d

    move-object/from16 v0, p0

    iget-boolean v0, v0, mSystemBooted:Z

    move/from16 v21, v0

    if-eqz v21, :cond_21d

    .line 3343
    move-object/from16 v0, p0

    iget v0, v0, mEasyOneHandEnabled:I

    move/from16 v21, v0

    if-nez v21, :cond_21d

    .line 3344
    move-object/from16 v0, p0

    iget-object v0, v0, mHandler:Landroid/os/Handler;

    move-object/from16 v21, v0

    const/16 v23, 0x39

    move-object/from16 v0, v21

    move/from16 v1, v23

    invoke-virtual {v0, v1}, Landroid/os/Handler;->sendEmptyMessage(I)Z

    .line 3349
    :cond_21d
    const-string v21, "any_screen_running"

    const/16 v23, 0x0

    const/16 v24, -0x2

    move-object/from16 v0, v21

    move/from16 v1, v23

    move/from16 v2, v24

    invoke-static {v14, v0, v1, v2}, Landroid/provider/Settings$System;->getIntForUser(Landroid/content/ContentResolver;Ljava/lang/String;II)I

    move-result v10

    .line 3350
    .local v10, "isEasyOneHandRunning":I
    const/16 v21, 0x1

    move/from16 v0, v21

    if-ne v10, v0, :cond_392

    const/16 v21, 0x1

    :goto_235
    invoke-static/range {v21 .. v21}, Lcom/android/server/policy/sec/SamsungPolicyProperties;->setEasyOneHandRunning(Z)V

    .line 3355
    move-object/from16 v0, p0

    iget-object v0, v0, mContext:Landroid/content/Context;

    move-object/from16 v21, v0

    invoke-static/range {v21 .. v21}, Lcom/android/server/policy/sec/SamsungPolicyProperties;->hasSideKeyPanelFeature(Landroid/content/Context;)Z

    move-result v21

    if-eqz v21, :cond_274

    .line 3356
    const-string/jumbo v21, "sidesoftkey_switch"

    const/16 v23, 0x0

    const/16 v24, -0x2

    move-object/from16 v0, v21

    move/from16 v1, v23

    move/from16 v2, v24

    invoke-static {v14, v0, v1, v2}, Landroid/provider/Settings$System;->getIntForUser(Landroid/content/ContentResolver;Ljava/lang/String;II)I

    move-result v6

    .line 3357
    .local v6, "enabled":I
    move-object/from16 v0, p0

    iget v0, v0, mSideKeyPanelEnabled:I

    move/from16 v21, v0

    move/from16 v0, v21

    if-eq v0, v6, :cond_274

    .line 3358
    move-object/from16 v0, p0

    iput v6, v0, mSideKeyPanelEnabled:I

    .line 3359
    move-object/from16 v0, p0

    iget-object v0, v0, mHandler:Landroid/os/Handler;

    move-object/from16 v23, v0

    if-eqz v6, :cond_396

    const/16 v21, 0x32

    :goto_26d
    move-object/from16 v0, v23

    move/from16 v1, v21

    invoke-virtual {v0, v1}, Landroid/os/Handler;->sendEmptyMessage(I)Z

    .line 3364
    .end local v6    # "enabled":I
    :cond_274
    move-object/from16 v0, p0

    iget-object v0, v0, mContext:Landroid/content/Context;

    move-object/from16 v21, v0

    invoke-virtual/range {v21 .. v21}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v21

    const-string v23, "cocktail_bar_enabled_180_rotate"

    const/16 v24, 0x0

    const/16 v25, -0x2

    move-object/from16 v0, v21

    move-object/from16 v1, v23

    move/from16 v2, v24

    move/from16 v3, v25

    invoke-static {v0, v1, v2, v3}, Landroid/provider/Settings$System;->getIntForUser(Landroid/content/ContentResolver;Ljava/lang/String;II)I

    move-result v6

    .line 3365
    .restart local v6    # "enabled":I
    if-ltz v6, :cond_2d1

    .line 3366
    move-object/from16 v0, p0

    iget v0, v0, mCocktail180RotationEnabled:I

    move/from16 v21, v0

    move/from16 v0, v21

    if-eq v0, v6, :cond_2d1

    .line 3367
    move-object/from16 v0, p0

    iput v6, v0, mCocktail180RotationEnabled:I

    .line 3368
    move-object/from16 v0, p0

    iget v0, v0, mCocktail180RotationEnabled:I

    move/from16 v21, v0

    const/16 v23, 0x1

    move/from16 v0, v21

    move/from16 v1, v23

    if-ne v0, v1, :cond_2c5

    .line 3369
    move-object/from16 v0, p0

    iget-object v0, v0, mHandler:Landroid/os/Handler;

    move-object/from16 v21, v0

    const/16 v23, 0x34

    move-object/from16 v0, v21

    move/from16 v1, v23

    invoke-virtual {v0, v1}, Landroid/os/Handler;->sendEmptyMessage(I)Z

    .line 3370
    const/16 v21, -0x1

    move/from16 v0, v21

    move-object/from16 v1, p0

    iput v0, v1, mCurrentDisplayRotation:I

    .line 3372
    :cond_2c5
    move-object/from16 v0, p0

    iget v0, v0, mCocktail180RotationEnabled:I

    move/from16 v21, v0

    move/from16 v0, v21

    move-object/from16 v1, p0

    iput v0, v1, mAllowAllRotations:I

    .line 3380
    :cond_2d1
    const-string/jumbo v21, "mobile_keyboard"

    const/16 v23, 0x0

    const/16 v24, 0x0

    move-object/from16 v0, v21

    move/from16 v1, v23

    move/from16 v2, v24

    invoke-static {v14, v0, v1, v2}, Landroid/provider/Settings$System;->getIntForUser(Landroid/content/ContentResolver;Ljava/lang/String;II)I

    move-result v21

    if-eqz v21, :cond_39a

    const/4 v11, 0x1

    .line 3381
    .local v11, "mobileKeyboardEnabled":Z
    :goto_2e5
    const-wide/16 v24, 0x0

    if-nez v11, :cond_39d

    const/16 v21, 0x1

    :goto_2eb
    move-object/from16 v0, p0

    move-wide/from16 v1, v24

    move/from16 v3, v21

    invoke-virtual {v0, v1, v2, v3}, notifyCoverSwitchStateChanged(JZ)V

    .line 3386
    .end local v6    # "enabled":I
    .end local v9    # "isEasyOneHandEnabled":I
    .end local v10    # "isEasyOneHandRunning":I
    .end local v11    # "mobileKeyboardEnabled":Z
    .end local v13    # "pointerLocation":I
    :cond_2f4
    const-string/jumbo v21, "screen_off_timeout"

    const/16 v23, 0x0

    const/16 v24, -0x2

    move-object/from16 v0, v21

    move/from16 v1, v23

    move/from16 v2, v24

    invoke-static {v14, v0, v1, v2}, Landroid/provider/Settings$System;->getIntForUser(Landroid/content/ContentResolver;Ljava/lang/String;II)I

    move-result v21

    move/from16 v0, v21

    move-object/from16 v1, p0

    iput v0, v1, mLockScreenTimeout:I

    .line 3388
    const-string/jumbo v21, "default_input_method"

    const/16 v23, -0x2

    move-object/from16 v0, v21

    move/from16 v1, v23

    invoke-static {v14, v0, v1}, Landroid/provider/Settings$Secure;->getStringForUser(Landroid/content/ContentResolver;Ljava/lang/String;I)Ljava/lang/String;

    move-result-object v8

    .line 3390
    .local v8, "imId":Ljava/lang/String;
    if-eqz v8, :cond_3a1

    invoke-virtual {v8}, Ljava/lang/String;->length()I

    move-result v21

    if-lez v21, :cond_3a1

    const/4 v7, 0x1

    .line 3391
    .local v7, "hasSoftInput":Z
    :goto_321
    move-object/from16 v0, p0

    iget-boolean v0, v0, mHasSoftInput:Z

    move/from16 v21, v0

    move/from16 v0, v21

    if-eq v0, v7, :cond_331

    .line 3392
    move-object/from16 v0, p0

    iput-boolean v7, v0, mHasSoftInput:Z

    .line 3393
    const/16 v17, 0x1

    .line 3395
    :cond_331
    move-object/from16 v0, p0

    iget-object v0, v0, mImmersiveModeConfirmation:Lcom/android/server/policy/ImmersiveModeConfirmation;

    move-object/from16 v21, v0

    if-eqz v21, :cond_34c

    .line 3396
    move-object/from16 v0, p0

    iget-object v0, v0, mImmersiveModeConfirmation:Lcom/android/server/policy/ImmersiveModeConfirmation;

    move-object/from16 v21, v0

    move-object/from16 v0, p0

    iget v0, v0, mCurrentUserId:I

    move/from16 v23, v0

    move-object/from16 v0, v21

    move/from16 v1, v23

    invoke-virtual {v0, v1}, Lcom/android/server/policy/ImmersiveModeConfirmation;->loadSetting(I)V

    .line 3398
    :cond_34c
    monitor-exit v22
    :try_end_34d
    .catchall {:try_start_13 .. :try_end_34d} :catchall_383

    .line 3399
    move-object/from16 v0, p0

    iget-object v0, v0, mWindowManagerFuncs:Landroid/view/WindowManagerPolicy$WindowManagerFuncs;

    move-object/from16 v21, v0

    invoke-interface/range {v21 .. v21}, Landroid/view/WindowManagerPolicy$WindowManagerFuncs;->getWindowManagerLock()Ljava/lang/Object;

    move-result-object v22

    monitor-enter v22

    .line 3400
    :try_start_358
    move-object/from16 v0, p0

    iget-object v0, v0, mContext:Landroid/content/Context;

    move-object/from16 v21, v0

    invoke-static/range {v21 .. v21}, Lcom/android/server/policy/PolicyControl;->reloadFromSetting(Landroid/content/Context;)V

    .line 3401
    monitor-exit v22
    :try_end_362
    .catchall {:try_start_358 .. :try_end_362} :catchall_3a4

    .line 3402
    if-eqz v17, :cond_36d

    .line 3403
    const/16 v21, 0x1

    move-object/from16 v0, p0

    move/from16 v1, v21

    invoke-virtual {v0, v1}, updateRotation(Z)V

    .line 3405
    :cond_36d
    return-void

    .line 3256
    .end local v5    # "AssistSetting":Ljava/lang/String;
    .end local v7    # "hasSoftInput":Z
    .end local v8    # "imId":Ljava/lang/String;
    .end local v18    # "userRotation":I
    .end local v19    # "userRotationMode":I
    .end local v20    # "wakeGestureEnabledSetting":Z
    :cond_36e
    const/16 v20, 0x0

    goto/16 :goto_56

    .line 3272
    .restart local v18    # "userRotation":I
    .restart local v20    # "wakeGestureEnabledSetting":Z
    :cond_372
    const/16 v19, 0x1

    goto/16 :goto_a4

    .line 3284
    .restart local v19    # "userRotationMode":I
    :cond_376
    const/4 v15, 0x1

    goto/16 :goto_e0

    .line 3303
    .restart local v4    # "AssistPackage":[Ljava/lang/String;
    .restart local v5    # "AssistSetting":Ljava/lang/String;
    :cond_379
    const/16 v21, 0x0

    :try_start_37b
    move/from16 v0, v21

    move-object/from16 v1, p0

    iput-boolean v0, v1, mIsOWCSetting:Z

    goto/16 :goto_127

    .line 3398
    .end local v4    # "AssistPackage":[Ljava/lang/String;
    .end local v5    # "AssistSetting":Ljava/lang/String;
    .end local v18    # "userRotation":I
    .end local v19    # "userRotationMode":I
    .end local v20    # "wakeGestureEnabledSetting":Z
    :catchall_383
    move-exception v21

    monitor-exit v22
    :try_end_385
    .catchall {:try_start_37b .. :try_end_385} :catchall_383

    throw v21

    .line 3313
    .restart local v5    # "AssistSetting":Ljava/lang/String;
    .restart local v13    # "pointerLocation":I
    .restart local v18    # "userRotation":I
    .restart local v19    # "userRotationMode":I
    .restart local v20    # "wakeGestureEnabledSetting":Z
    :cond_386
    const/16 v21, 0x2

    goto/16 :goto_158

    .line 3322
    .restart local v16    # "toolbox":I
    :cond_38a
    const/16 v21, 0x13

    goto/16 :goto_190

    .line 3338
    .end local v16    # "toolbox":I
    .restart local v9    # "isEasyOneHandEnabled":I
    :cond_38e
    const/16 v21, 0x0

    goto/16 :goto_1e5

    .line 3350
    .restart local v10    # "isEasyOneHandRunning":I
    :cond_392
    const/16 v21, 0x0

    goto/16 :goto_235

    .line 3359
    .restart local v6    # "enabled":I
    :cond_396
    const/16 v21, 0x33

    goto/16 :goto_26d

    .line 3380
    :cond_39a
    const/4 v11, 0x0

    goto/16 :goto_2e5

    .line 3381
    .restart local v11    # "mobileKeyboardEnabled":Z
    :cond_39d
    const/16 v21, 0x0

    goto/16 :goto_2eb

    .line 3390
    .end local v6    # "enabled":I
    .end local v9    # "isEasyOneHandEnabled":I
    .end local v10    # "isEasyOneHandRunning":I
    .end local v11    # "mobileKeyboardEnabled":Z
    .end local v13    # "pointerLocation":I
    .restart local v8    # "imId":Ljava/lang/String;
    :cond_3a1
    const/4 v7, 0x0

    goto/16 :goto_321

    .line 3401
    .restart local v7    # "hasSoftInput":Z
    :catchall_3a4
    move-exception v21

    :try_start_3a5
    monitor-exit v22
    :try_end_3a6
    .catchall {:try_start_3a5 .. :try_end_3a6} :catchall_3a4

    throw v21
.end method

.method public updateTopActivity(Landroid/content/ComponentName;)V
    .registers 3
    .param p1, "componentName"    # Landroid/content/ComponentName;

    .prologue
    .line 12766
    iget-object v0, p0, mSystemKeyManager:Lcom/android/server/policy/sec/SystemKeyManager;

    invoke-virtual {v0, p1}, Lcom/android/server/policy/sec/SystemKeyManager;->updateTopActivity(Landroid/content/ComponentName;)V

    .line 12767
    return-void
.end method

.method public updateTspInputMethodPolicy(Landroid/view/WindowManagerPolicy$WindowState;)V
    .registers 4
    .param p1, "inputMethodClient"    # Landroid/view/WindowManagerPolicy$WindowState;

    .prologue
    .line 13707
    if-eqz p1, :cond_c

    iget-object v0, p0, mFocusedWindow:Landroid/view/WindowManagerPolicy$WindowState;

    if-ne p1, v0, :cond_c

    .line 13708
    iget-object v0, p0, mTspStateManager:Lcom/android/server/policy/sec/TspStateManager;

    invoke-virtual {v0}, Lcom/android/server/policy/sec/TspStateManager;->updateInputMethodPolicy()V

    .line 13713
    :cond_b
    :goto_b
    return-void

    .line 13709
    :cond_c
    iget-object v0, p0, mFocusedWindow:Landroid/view/WindowManagerPolicy$WindowState;

    if-eqz v0, :cond_b

    .line 13710
    iget-object v0, p0, mTspStateManager:Lcom/android/server/policy/sec/TspStateManager;

    iget-object v1, p0, mFocusedWindow:Landroid/view/WindowManagerPolicy$WindowState;

    invoke-virtual {v0, v1}, Lcom/android/server/policy/sec/TspStateManager;->updateWindowPolicy(Landroid/view/WindowManagerPolicy$WindowState;)V

    goto :goto_b
.end method

.method public updateTspViewPolicy(I)V
    .registers 3
    .param p1, "viewPolicy"    # I

    .prologue
    .line 13700
    iget-object v0, p0, mTspStateManager:Lcom/android/server/policy/sec/TspStateManager;

    invoke-virtual {v0, p1}, Lcom/android/server/policy/sec/TspStateManager;->updateViewPolicy(I)V

    .line 13702
    return-void
.end method

.method updateUiMode()V
    .registers 2

    .prologue
    .line 11489
    iget-object v0, p0, mUiModeManager:Landroid/app/IUiModeManager;

    if-nez v0, :cond_11

    .line 11490
    const-string/jumbo v0, "uimode"

    invoke-static {v0}, Landroid/os/ServiceManager;->getService(Ljava/lang/String;)Landroid/os/IBinder;

    move-result-object v0

    invoke-static {v0}, Landroid/app/IUiModeManager$Stub;->asInterface(Landroid/os/IBinder;)Landroid/app/IUiModeManager;

    move-result-object v0

    iput-object v0, p0, mUiModeManager:Landroid/app/IUiModeManager;

    .line 11494
    :cond_11
    :try_start_11
    iget-object v0, p0, mUiModeManager:Landroid/app/IUiModeManager;

    invoke-interface {v0}, Landroid/app/IUiModeManager;->getCurrentModeType()I

    move-result v0

    iput v0, p0, mUiMode:I
    :try_end_19
    .catch Landroid/os/RemoteException; {:try_start_11 .. :try_end_19} :catch_1a

    .line 11497
    :goto_19
    return-void

    .line 11495
    :catch_1a
    move-exception v0

    goto :goto_19
.end method

.method public userActivity()V
    .registers 7

    .prologue
    .line 11344
    iget-object v1, p0, mScreenLockTimeout:Lcom/android/server/policy/PhoneWindowManager$ScreenLockTimeout;

    monitor-enter v1

    .line 11345
    :try_start_3
    iget-boolean v0, p0, mLockScreenTimerActive:Z

    if-eqz v0, :cond_18

    .line 11347
    iget-object v0, p0, mHandler:Landroid/os/Handler;

    iget-object v2, p0, mScreenLockTimeout:Lcom/android/server/policy/PhoneWindowManager$ScreenLockTimeout;

    invoke-virtual {v0, v2}, Landroid/os/Handler;->removeCallbacks(Ljava/lang/Runnable;)V

    .line 11348
    iget-object v0, p0, mHandler:Landroid/os/Handler;

    iget-object v2, p0, mScreenLockTimeout:Lcom/android/server/policy/PhoneWindowManager$ScreenLockTimeout;

    iget v3, p0, mLockScreenTimeout:I

    int-to-long v4, v3

    invoke-virtual {v0, v2, v4, v5}, Landroid/os/Handler;->postDelayed(Ljava/lang/Runnable;J)Z

    .line 11350
    :cond_18
    monitor-exit v1

    .line 11351
    return-void

    .line 11350
    :catchall_1a
    move-exception v0

    monitor-exit v1
    :try_end_1c
    .catchall {:try_start_3 .. :try_end_1c} :catchall_1a

    throw v0
.end method

.method public validateRotationAnimationLw(IIZ)Z
    .registers 8
    .param p1, "exitAnimId"    # I
    .param p2, "enterAnimId"    # I
    .param p3, "forceDefault"    # Z

    .prologue
    const/4 v1, 0x1

    const/4 v2, 0x0

    .line 4887
    packed-switch p1, :pswitch_data_1a

    .line 4898
    :cond_5
    :goto_5
    return v1

    .line 4891
    :pswitch_6
    if-eqz p3, :cond_a

    move v1, v2

    .line 4892
    goto :goto_5

    .line 4894
    :cond_a
    const/4 v3, 0x2

    new-array v0, v3, [I

    .line 4895
    .local v0, "anim":[I
    invoke-virtual {p0, v0}, selectRotationAnimationLw([I)V

    .line 4896
    aget v3, v0, v2

    if-ne p1, v3, :cond_18

    aget v3, v0, v1

    if-eq p2, v3, :cond_5

    :cond_18
    move v1, v2

    goto :goto_5

    .line 4887
    :pswitch_data_1a
    .packed-switch 0x10a0074
        :pswitch_6
        :pswitch_6
    .end packed-switch
.end method

.method public windowTypeToLayerLw(I)I
    .registers 8
    .param p1, "type"    # I

    .prologue
    const/4 v0, 0x3

    const/16 v1, 0x1d

    const/16 v3, 0x13

    const/16 v4, 0x11

    const/4 v2, 0x2

    .line 3818
    iget-object v5, p0, mSPWM:Lcom/android/server/policy/sec/SamsungPhoneWindowManager;

    invoke-virtual {v5}, Lcom/android/server/policy/sec/SamsungPhoneWindowManager;->isHMTSupportAndConnected()Z

    move-result v5

    if-eqz v5, :cond_17

    const/16 v5, 0x61

    if-ne p1, v5, :cond_17

    .line 3819
    const/16 v1, 0x1b

    .line 3984
    :cond_16
    :goto_16
    :sswitch_16
    return v1

    .line 3823
    :cond_17
    const/4 v5, 0x1

    if-lt p1, v5, :cond_20

    const/16 v5, 0x63

    if-gt p1, v5, :cond_20

    move v1, v2

    .line 3824
    goto :goto_16

    .line 3826
    :cond_20
    sparse-switch p1, :sswitch_data_e2

    .line 3967
    iget-object v1, p0, mMultiPhoneWindowManager:Lcom/android/server/policy/multiwindow/MultiPhoneWindowManager;

    invoke-virtual {v1, p1}, Lcom/android/server/policy/multiwindow/MultiPhoneWindowManager;->windowTypeToLayerLw(I)I

    move-result v0

    .line 3968
    .local v0, "result":I
    if-lez v0, :cond_bb

    move v1, v0

    .line 3969
    goto :goto_16

    .end local v0    # "result":I
    :sswitch_2d
    move v1, v2

    .line 3828
    goto :goto_16

    :sswitch_2f
    move v1, v2

    .line 3831
    goto :goto_16

    :sswitch_31
    move v1, v0

    .line 3833
    goto :goto_16

    .line 3836
    :sswitch_33
    const/4 v1, 0x4

    goto :goto_16

    .line 3839
    :sswitch_35
    const/4 v1, 0x5

    goto :goto_16

    .line 3841
    :sswitch_37
    const/4 v1, 0x6

    goto :goto_16

    .line 3843
    :sswitch_39
    const/4 v1, 0x7

    goto :goto_16

    :sswitch_3b
    move v1, v3

    .line 3846
    goto :goto_16

    .line 3849
    :sswitch_3d
    const/16 v1, 0x9

    goto :goto_16

    .line 3852
    :sswitch_40
    const/16 v1, 0xa

    goto :goto_16

    .line 3855
    :sswitch_43
    const/16 v1, 0xb

    goto :goto_16

    .line 3858
    :sswitch_46
    const/16 v1, 0xc

    goto :goto_16

    .line 3862
    :sswitch_49
    const/16 v1, 0xd

    goto :goto_16

    .line 3866
    :sswitch_4c
    const/16 v1, 0xe

    goto :goto_16

    .line 3868
    :sswitch_4f
    const/16 v1, 0xf

    goto :goto_16

    .line 3870
    :sswitch_52
    const/16 v1, 0x10

    goto :goto_16

    :sswitch_55
    move v1, v4

    .line 3876
    goto :goto_16

    .line 3878
    :sswitch_57
    const/16 v1, 0x12

    goto :goto_16

    :sswitch_5a
    move v1, v3

    .line 3883
    goto :goto_16

    .line 3887
    :sswitch_5c
    const/16 v1, 0x14

    goto :goto_16

    .line 3891
    :sswitch_5f
    const/16 v1, 0x15

    goto :goto_16

    .line 3894
    :sswitch_62
    const/16 v1, 0x16

    goto :goto_16

    .line 3899
    :sswitch_65
    const/16 v1, 0x17

    goto :goto_16

    .line 3902
    :sswitch_68
    const/16 v1, 0x18

    goto :goto_16

    .line 3905
    :sswitch_6b
    const/16 v1, 0x19

    goto :goto_16

    .line 3912
    :sswitch_6e
    const/16 v1, 0x1a

    goto :goto_16

    .line 3915
    :sswitch_71
    const/16 v1, 0x1b

    goto :goto_16

    .line 3917
    :sswitch_74
    const/16 v1, 0x1c

    goto :goto_16

    .line 3922
    :sswitch_77
    const/16 v1, 0x1e

    goto :goto_16

    .line 3925
    :sswitch_7a
    const/16 v1, 0x23

    goto :goto_16

    :sswitch_7d
    move v1, v0

    .line 3929
    goto :goto_16

    .line 3931
    :sswitch_7f
    const/4 v1, 0x5

    goto :goto_16

    .line 3933
    :sswitch_81
    const/16 v1, 0x10

    goto :goto_16

    :sswitch_84
    move v1, v4

    .line 3935
    goto :goto_16

    .line 3939
    :sswitch_86
    const/16 v1, 0x15

    goto :goto_16

    .line 3941
    :sswitch_89
    const/16 v1, 0x14

    goto :goto_16

    :sswitch_8c
    move v1, v4

    .line 3943
    goto :goto_16

    .line 3945
    :sswitch_8e
    const/4 v1, 0x0

    invoke-static {v1}, Lcom/android/server/policy/sec/SamsungPolicyProperties;->getEasyOneHandPkgVersion(Landroid/content/Context;)I

    move-result v1

    if-gt v1, v2, :cond_99

    iget-object v1, p0, mCocktailPhoneWindowManager:Lcom/android/server/policy/cocktail/CocktailPhoneWindowManager;

    if-eqz v1, :cond_9d

    :cond_99
    const/16 v1, 0x1c

    goto/16 :goto_16

    :cond_9d
    const/16 v1, 0x17

    goto/16 :goto_16

    .line 3947
    :sswitch_a1
    const/4 v3, 0x0

    invoke-static {v3}, Lcom/android/server/policy/sec/SamsungPolicyProperties;->getEasyOneHandPkgVersion(Landroid/content/Context;)I

    move-result v3

    if-gt v3, v2, :cond_16

    iget-object v2, p0, mCocktailPhoneWindowManager:Lcom/android/server/policy/cocktail/CocktailPhoneWindowManager;

    if-nez v2, :cond_16

    const/16 v1, 0x18

    goto/16 :goto_16

    .line 3949
    :sswitch_b0
    const/16 v1, 0x19

    goto/16 :goto_16

    .line 3953
    :sswitch_b4
    const/16 v1, 0x1a

    goto/16 :goto_16

    :sswitch_b8
    move v1, v3

    .line 3961
    goto/16 :goto_16

    .line 3976
    .restart local v0    # "result":I
    :cond_bb
    iget-object v1, p0, mCocktailPhoneWindowManager:Lcom/android/server/policy/cocktail/CocktailPhoneWindowManager;

    invoke-virtual {v1, p1}, Lcom/android/server/policy/cocktail/CocktailPhoneWindowManager;->windowTypeToLayerLw(I)I

    move-result v0

    .line 3977
    if-lez v0, :cond_c6

    move v1, v0

    .line 3978
    goto/16 :goto_16

    .line 3983
    :cond_c6
    const-string v1, "WindowManager"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "Unknown window type: "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v1, v3}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    move v1, v2

    .line 3984
    goto/16 :goto_16

    .line 3826
    nop

    :sswitch_data_e2
    .sparse-switch
        0x7d0 -> :sswitch_52
        0x7d1 -> :sswitch_33
        0x7d2 -> :sswitch_31
        0x7d3 -> :sswitch_43
        0x7d5 -> :sswitch_3b
        0x7d6 -> :sswitch_5a
        0x7d7 -> :sswitch_3d
        0x7d8 -> :sswitch_39
        0x7d9 -> :sswitch_57
        0x7da -> :sswitch_65
        0x7db -> :sswitch_46
        0x7dc -> :sswitch_49
        0x7dd -> :sswitch_2f
        0x7de -> :sswitch_55
        0x7df -> :sswitch_74
        0x7e0 -> :sswitch_6e
        0x7e1 -> :sswitch_4f
        0x7e2 -> :sswitch_77
        0x7e3 -> :sswitch_5f
        0x7e4 -> :sswitch_5c
        0x7e5 -> :sswitch_16
        0x7e6 -> :sswitch_37
        0x7e7 -> :sswitch_40
        0x7e8 -> :sswitch_62
        0x7ea -> :sswitch_6b
        0x7eb -> :sswitch_68
        0x7ed -> :sswitch_4c
        0x7ee -> :sswitch_2d
        0x7ef -> :sswitch_35
        0x7f0 -> :sswitch_71
        0x7f1 -> :sswitch_33
        0x820 -> :sswitch_16
        0x821 -> :sswitch_16
        0x822 -> :sswitch_b4
        0x830 -> :sswitch_5a
        0x831 -> :sswitch_65
        0x832 -> :sswitch_4c
        0x833 -> :sswitch_55
        0x834 -> :sswitch_7d
        0x835 -> :sswitch_7f
        0x836 -> :sswitch_81
        0x837 -> :sswitch_84
        0x8b1 -> :sswitch_6e
        0x8b2 -> :sswitch_55
        0x8b6 -> :sswitch_7a
        0x8ca -> :sswitch_a1
        0x8cc -> :sswitch_8c
        0x8cd -> :sswitch_89
        0x8ce -> :sswitch_86
        0x8cf -> :sswitch_8e
        0x8d0 -> :sswitch_b0
        0x8d5 -> :sswitch_5f
        0x8d6 -> :sswitch_65
        0x8de -> :sswitch_b8
        0x8df -> :sswitch_b8
        0x8e8 -> :sswitch_49
    .end sparse-switch
.end method
