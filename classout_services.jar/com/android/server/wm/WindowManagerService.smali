.class public Lcom/android/server/wm/WindowManagerService;
.super Landroid/view/IWindowManager$Stub;
.source "WindowManagerService.java"

# interfaces
.implements Landroid/view/WindowManagerPolicy$WindowManagerFuncs;
.implements Lcom/android/server/Watchdog$Monitor;


# annotations
.annotation system Ldalvik/annotation/MemberClasses;
    value = {
        Lcom/android/server/wm/WindowManagerService$EasyOneHandDeathRecipient;,
        Lcom/android/server/wm/WindowManagerService$LEVEL;,
        Lcom/android/server/wm/WindowManagerService$LocalService;,
        Lcom/android/server/wm/WindowManagerService$OnHardKeyboardStatusChangeListener;,
        Lcom/android/server/wm/WindowManagerService$H;,
        Lcom/android/server/wm/WindowManagerService$WindowChangeListener;,
        Lcom/android/server/wm/WindowManagerService$MiniModeInputEventReceiver;,
        Lcom/android/server/wm/WindowManagerService$DragInputEventReceiver;,
        Lcom/android/server/wm/WindowManagerService$LayoutFields;,
        Lcom/android/server/wm/WindowManagerService$WallpaperInnerState;,
        Lcom/android/server/wm/WindowManagerService$SettingsObserver;,
        Lcom/android/server/wm/WindowManagerService$RotationWatcher;
    }
.end annotation


# static fields
.field private static final ADDITIONAL_DELAY_RESIZE:J = 0x64L

.field private static final BOOT_ANIMATION_POLL_INTERVAL:I = 0xc8

.field private static final BOOT_ANIMATION_SERVICE:Ljava/lang/String; = "bootanim"

.field static final CUSTOM_SCREEN_ROTATION:Z = true

.field static final DEBUG:Z = false

.field static DEBUG_ADD_REMOVE:Z = false

.field static DEBUG_ANIM:Z = false

.field static DEBUG_APP_ORIENTATION:Z = false

.field static DEBUG_APP_TRANSITIONS:Z = false

.field static final DEBUG_BOOT:Z = false

.field static DEBUG_CONFIGURATION:Z = false

.field private static final DEBUG_CUSTOM_STARTING_WINDOW:Z

.field static DEBUG_DISPLAY:Z = false

.field static final DEBUG_DRAG:Z = false

.field static final DEBUG_DUALSCREEN:Z

.field static DEBUG_FOCUS:Z = false

.field static final DEBUG_FOCUS_LIGHT:Z

.field static final DEBUG_INPUT:Z = false

.field static final DEBUG_INPUT_METHOD:Z = false

.field static DEBUG_KEYGUARD:Z = false

.field static DEBUG_LAYERS:Z = false

.field static DEBUG_LAYOUT:Z = false

.field static final DEBUG_LAYOUT_REPEATS:Z = true

.field static final DEBUG_MINI_APP:Z = false

.field static DEBUG_MULTIWINDOW:Z = false

.field static DEBUG_MULTIWINDOW_CONTROL:Z = false

.field static DEBUG_MULTIWINDOW_ORIENTATION:Z = false

.field static DEBUG_MULTIWINDOW_SCALE:Z = false

.field static DEBUG_ORIENTATION:Z = false

.field static DEBUG_POWER:Z = false

.field static final DEBUG_REORDER:Z = false

.field static DEBUG_RESIZE:Z = false

.field static final DEBUG_SCREENSHOT:Z = false

.field static final DEBUG_SCREEN_ON:Z

.field static DEBUG_STACK:Z = false

.field static DEBUG_STARTING_WINDOW:Z = false

.field static DEBUG_SURFACE_TRACE:Z = false

.field static DEBUG_TASK_MOVEMENT:Z = false

.field static DEBUG_TOKEN_MOVEMENT:Z = false

.field static DEBUG_VISIBILITY:Z = false

.field static DEBUG_WALLPAPER:Z = false

.field static final DEBUG_WALLPAPER_LIGHT:Z

.field static DEBUG_WINDOW_MOVEMENT:Z = false

.field static DEBUG_WINDOW_TRACE:Z = false

.field private static final DEFAULT_DELAY_RESIZE:J = 0x96L

.field static final DEFAULT_INPUT_DISPATCHING_TIMEOUT_NANOS:J = 0x12a05f200L

.field private static final DENSITY_OVERRIDE:Ljava/lang/String; = "ro.config.density_override"

.field public static final DUALSCREEN_DEBUG_INPUT_METHOD:Z

.field static final HIDE_STACK_CRAWLS:Z = true

.field private static final INPUT_DEVICES_READY_FOR_SAFE_MODE_DETECTION_TIMEOUT_MILLIS:I = 0x3e8

.field static final LAST_ANR_LIFETIME_DURATION_MSECS:I = 0x6ddd00

.field static final LAYER_OFFSET_DIM:I = 0x1

.field static final LAYER_OFFSET_FOCUSED_STACK:I = 0x1

.field static final LAYER_OFFSET_THUMBNAIL:I = 0x4

.field static final LAYOUT_REPEAT_THRESHOLD:I = 0x4

.field static final MAX_ANIMATION_DURATION:I = 0x2710

.field private static final MAX_SCREENSHOT_RETRIES:I = 0x3

.field static final PROFILE_ORIENTATION:Z = false

.field private static final PROPERTY_EMULATOR_CIRCULAR:Ljava/lang/String; = "ro.emulator.circular"

.field static final REDUCE_SCREEN_ENABLED:Z = true

.field static final SAFE_DEBUG:Z

.field static final SHOW_LIGHT_TRANSACTIONS:Z = false

.field static final SHOW_SURFACE_ALLOC:Z = false

.field static final SHOW_TRANSACTIONS:Z = false

.field private static final SIZE_OVERRIDE:Ljava/lang/String; = "ro.config.size_override"

.field private static final SYSTEM_DEBUGGABLE:Ljava/lang/String; = "ro.debuggable"

.field private static final SYSTEM_SECURE:Ljava/lang/String; = "ro.secure"

.field private static final SYSTEM_UI_FLAGS_LAYOUT_STABLE_FULLSCREEN:I = 0x500

.field static final TAG:Ljava/lang/String; = "WindowManager"

.field static final TYPE_LAYER_MULTIPLIER:I = 0x2710

.field static final TYPE_LAYER_OFFSET:I = 0x3e8

.field public static final UNKOWN_STACKFRAME_ID:I = 0x0

.field static final UPDATE_FOCUS_NORMAL:I = 0x0

.field static final UPDATE_FOCUS_PLACING_SURFACES:I = 0x2

.field static final UPDATE_FOCUS_WILL_ASSIGN_LAYERS:I = 0x1

.field static final UPDATE_FOCUS_WILL_PLACE_SURFACES:I = 0x3

.field static final WALLPAPER_DRAW_NORMAL:I = 0x0

.field static final WALLPAPER_DRAW_PENDING:I = 0x1

.field static final WALLPAPER_DRAW_PENDING_TIMEOUT_DURATION:J = 0x1f4L

.field static final WALLPAPER_DRAW_TIMEOUT:I = 0x2

.field static final WALLPAPER_TIMEOUT:J = 0x96L

.field static final WALLPAPER_TIMEOUT_RECOVERY:J = 0x2710L

.field static final WINDOWS_FREEZING_SCREENS_ACTIVE:I = 0x1

.field static final WINDOWS_FREEZING_SCREENS_NONE:I = 0x0

.field static final WINDOWS_FREEZING_SCREENS_TIMEOUT:I = 0x2

.field static final WINDOW_FREEZE_TIMEOUT_DURATION:I = 0x7d0

.field static final WINDOW_LAYER_MULTIPLIER:I = 0x5

.field private static final bDSSEnabled:Z = true

.field static final localLOGV:Z


# instance fields
.field private isForceCancelDragMode:Z

.field mAccessibilityController:Lcom/android/server/wm/AccessibilityController;

.field final mAccessibilityControllers:Lcom/samsung/android/multidisplay/common/FallbackArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Lcom/samsung/android/multidisplay/common/FallbackArrayList",
            "<",
            "Lcom/android/server/wm/AccessibilityController;",
            ">;"
        }
    .end annotation
.end field

.field final mActivityManager:Landroid/app/IActivityManager;

.field private final mActivityManagerAppTransitionNotifier:Landroid/view/WindowManagerInternal$AppTransitionListener;

.field final mAllowAnimationsInLowPowerMode:Z

.field final mAllowBootMessages:Z

.field mAllowTheaterModeWakeFromLayout:Z

.field mAltOrientation:Z

.field mAltOrientations:Lcom/samsung/android/multidisplay/common/FallbackArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Lcom/samsung/android/multidisplay/common/FallbackArrayList",
            "<",
            "Ljava/lang/Boolean;",
            ">;"
        }
    .end annotation
.end field

.field mAnimateWallpaperWithTarget:Z

.field mAnimationScheduled:Z

.field mAnimationsDisabled:Z

.field final mAnimator:Lcom/android/server/wm/WindowAnimator;

.field mAnimatorDurationScaleSetting:F

.field final mAppOps:Landroid/app/AppOpsManager;

.field mAppOrientionsForOppositeDisplay:Lcom/samsung/android/multidisplay/common/FallbackArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Lcom/samsung/android/multidisplay/common/FallbackArrayList",
            "<",
            "Ljava/lang/Integer;",
            ">;"
        }
    .end annotation
.end field

.field final mAppTransition:Lcom/android/server/wm/AppTransition;

.field final mAppTransitions:Lcom/samsung/android/multidisplay/common/FallbackArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Lcom/samsung/android/multidisplay/common/FallbackArrayList",
            "<",
            "Lcom/android/server/wm/AppTransition;",
            ">;"
        }
    .end annotation
.end field

.field mAppsFreezingScreen:I

.field mBackWindowView:Landroid/view/View;

.field final mBatteryStats:Lcom/android/internal/app/IBatteryStats;

.field mBootAnimationStopped:Z

.field final mBroadcastReceiver:Landroid/content/BroadcastReceiver;

.field final mCandidateOpeningApps:Landroid/util/ArraySet;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Landroid/util/ArraySet",
            "<",
            "Lcom/android/server/wm/AppWindowToken;",
            ">;"
        }
    .end annotation
.end field

.field private mChangedInputMethodDisplay:Z

.field final mChoreographer:Landroid/view/Choreographer;

.field mCircularDisplayMask:Lcom/android/server/wm/CircularDisplayMask;

.field mClientFreezingScreen:Z

.field final mClosingApps:Landroid/util/ArraySet;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Landroid/util/ArraySet",
            "<",
            "Lcom/android/server/wm/AppWindowToken;",
            ">;"
        }
    .end annotation
.end field

.field final mClosingAppsForDisplay:Lcom/samsung/android/multidisplay/common/FallbackArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Lcom/samsung/android/multidisplay/common/FallbackArrayList",
            "<",
            "Landroid/util/ArraySet",
            "<",
            "Lcom/android/server/wm/AppWindowToken;",
            ">;>;"
        }
    .end annotation
.end field

.field mCocktailBar:Lcom/android/server/wm/WindowState;

.field final mCompatDisplayMetrics:Landroid/util/DisplayMetrics;

.field mCompatibleScreenScale:F

.field final mContext:Landroid/content/Context;

.field mCurConfiguration:Landroid/content/res/Configuration;

.field final mCurConfigurations:Lcom/samsung/android/multidisplay/common/FallbackArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Lcom/samsung/android/multidisplay/common/FallbackArrayList",
            "<",
            "Landroid/content/res/Configuration;",
            ">;"
        }
    .end annotation
.end field

.field mCurrentFocus:Lcom/android/server/wm/WindowState;

.field mCurrentInputMethodClient:Lcom/android/server/wm/WindowState;

.field mCurrentProfileIds:[I

.field mCurrentUserId:I

.field private mCustomStartingWindowManager:Lcom/android/server/wm/CustomStartingWindowManager;

.field mDeferredHideWallpaper:Lcom/android/server/wm/WindowState;

.field mDeferredRotationPauseCount:I

.field final mDestroySurface:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList",
            "<",
            "Lcom/android/server/wm/WindowState;",
            ">;"
        }
    .end annotation
.end field

.field mDisableSubKey:Z

.field mDisplayContents:Landroid/util/SparseArray;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Landroid/util/SparseArray",
            "<",
            "Lcom/android/server/wm/DisplayContent;",
            ">;"
        }
    .end annotation
.end field

.field mDisplayEnabled:Z

.field mDisplayFreezeTime:J

.field mDisplayFrozen:Z

.field mDisplayFrozens:Lcom/samsung/android/multidisplay/common/FallbackArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Lcom/samsung/android/multidisplay/common/FallbackArrayList",
            "<",
            "Ljava/lang/Boolean;",
            ">;"
        }
    .end annotation
.end field

.field final mDisplayManager:Landroid/hardware/display/DisplayManager;

.field final mDisplayManagerInternal:Landroid/hardware/display/DisplayManagerInternal;

.field final mDisplayMetrics:Landroid/util/DisplayMetrics;

.field mDisplayReady:Z

.field final mDisplaySettings:Lcom/android/server/wm/DisplaySettings;

.field final mDisplays:[Landroid/view/Display;

.field mDragState:Lcom/android/server/wm/DragState;

.field final mDrawLockTimeoutMillis:J

.field private mDualScreenInputMethodManager:Lcom/android/server/wm/DualScreenInputMethodManager;

.field mEasyOneHandDR:Lcom/android/server/wm/WindowManagerService$EasyOneHandDeathRecipient;

.field mEasyOneHandWatcher:Landroid/sec/easyonehand/IEasyOneHandWatcher;

.field mEasyOneHandWindow:Lcom/android/server/wm/WindowState;

.field mEmulatorDisplayOverlay:Lcom/android/server/wm/EmulatorDisplayOverlay;

.field mEnterAnimId:I

.field private mEventDispatchingEnabled:Z

.field mExitAnimId:I

.field final mFinishedStarting:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList",
            "<",
            "Lcom/android/server/wm/AppWindowToken;",
            ">;"
        }
    .end annotation
.end field

.field mFocusMayChange:Z

.field mFocusOfDisplay:Lcom/samsung/android/multidisplay/common/FallbackArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Lcom/samsung/android/multidisplay/common/FallbackArrayList",
            "<",
            "Lcom/android/server/wm/WindowState;",
            ">;"
        }
    .end annotation
.end field

.field mFocusedApp:Lcom/android/server/wm/AppWindowToken;

.field mFocusedDevice:I

.field mFocusedStackFrame:Lcom/android/server/wm/FocusedStackFrame;

.field mFocusedStackLayer:I

.field mForceDisplayEnabled:Z

.field mForceHideCenterbar:Z

.field final mForceRemoves:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList",
            "<",
            "Lcom/android/server/wm/WindowState;",
            ">;"
        }
    .end annotation
.end field

.field mForcedAppOrientation:I

.field mForcedAppOrientations:Lcom/samsung/android/multidisplay/common/FallbackArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Lcom/samsung/android/multidisplay/common/FallbackArrayList",
            "<",
            "Ljava/lang/Integer;",
            ">;"
        }
    .end annotation
.end field

.field private mFullInputMethod:Z

.field final mFxSession:Landroid/view/SurfaceSession;

.field final mH:Lcom/android/server/wm/WindowManagerService$H;

.field mHardKeyboardAvailable:Z

.field mHardKeyboardStatusChangeListener:Lcom/android/server/wm/WindowManagerService$OnHardKeyboardStatusChangeListener;

.field mHasAppWindowForWaitingForOrientation:Z

.field final mHasPermanentDpad:Z

.field final mHaveInputMethods:Z

.field mHoldingScreenOn:Lcom/android/server/wm/Session;

.field mHoldingScreenWakeLock:Landroid/os/PowerManager$WakeLock;

.field private mInLayout:Z

.field mInTouchMode:Z

.field final mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

.field mInputConsumer:Lcom/android/server/wm/InputConsumerImpl;

.field final mInputConsumers:Lcom/samsung/android/multidisplay/common/FallbackArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Lcom/samsung/android/multidisplay/common/FallbackArrayList",
            "<",
            "Lcom/android/server/wm/InputConsumerImpl;",
            ">;"
        }
    .end annotation
.end field

.field final mInputManager:Lcom/android/server/input/InputManagerService;

.field mInputMethodAnimLayerAdjustment:I

.field final mInputMethodDialogs:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList",
            "<",
            "Lcom/android/server/wm/WindowState;",
            ">;"
        }
    .end annotation
.end field

.field mInputMethodManager:Lcom/android/internal/view/IInputMethodManager;

.field mInputMethodTarget:Lcom/android/server/wm/WindowState;

.field mInputMethodTargetWaitingAnim:Z

.field mInputMethodWindow:Lcom/android/server/wm/WindowState;

.field final mInputMonitor:Lcom/android/server/wm/InputMonitor;

.field private mInputShown:Z

.field mIsCascadeAppRunniung:Z

.field mIsForceHideCenterbarTransitionRunning:Z

.field private mIsInputMethodDisplayUsed:Z

.field mIsRecentsMultiWindowRunning:Z

.field mIsTouchDevice:Z

.field private final mKeyguardDisableHandler:Lcom/android/server/wm/KeyguardDisableHandler;

.field mKeyguardWaitingForActivityDrawn:Z

.field private mKeyguardWaitingForActivityDrawnLock:Ljava/lang/Object;

.field mLastANRState:Ljava/lang/String;

.field mLastDispatchedSystemUiVisibilities:Lcom/samsung/android/multidisplay/common/FallbackArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Lcom/samsung/android/multidisplay/common/FallbackArrayList",
            "<",
            "Ljava/lang/Integer;",
            ">;"
        }
    .end annotation
.end field

.field mLastDispatchedSystemUiVisibility:I

.field mLastDisplayFreezeDuration:I

.field private mLastDrawnFoucsedStackFrameId:I

.field mLastFinishedFreezeSource:Ljava/lang/Object;

.field mLastFocus:Lcom/android/server/wm/WindowState;

.field mLastKeyguardForcedOrientation:I

.field mLastStatusBarVisibilities:Lcom/samsung/android/multidisplay/common/FallbackArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Lcom/samsung/android/multidisplay/common/FallbackArrayList",
            "<",
            "Ljava/lang/Integer;",
            ">;"
        }
    .end annotation
.end field

.field mLastStatusBarVisibility:I

.field mLastWallpaperDisplayOffsetX:I

.field mLastWallpaperDisplayOffsetY:I

.field mLastWallpaperTimeoutTime:J

.field mLastWallpaperX:F

.field mLastWallpaperXStep:F

.field mLastWallpaperY:F

.field mLastWallpaperYStep:F

.field mLastWindowForcedOrientation:I

.field mLastWindowForcedOrientations:Lcom/samsung/android/multidisplay/common/FallbackArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Lcom/samsung/android/multidisplay/common/FallbackArrayList",
            "<",
            "Ljava/lang/Integer;",
            ">;"
        }
    .end annotation
.end field

.field private mLayoutRepeatCount:I

.field mLayoutSeq:I

.field final mLimitedAlphaCompositing:Z

.field mLosingFocus:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList",
            "<",
            "Lcom/android/server/wm/WindowState;",
            ">;"
        }
    .end annotation
.end field

.field mLowerWallpaperTarget:Lcom/android/server/wm/WindowState;

.field mMaxSelectiveStackBoundForLand:Landroid/graphics/Rect;

.field mMaxSelectiveStackBoundForPort:Landroid/graphics/Rect;

.field mMinStackBoundForLand:Landroid/graphics/Rect;

.field mMinStackBoundForPort:Landroid/graphics/Rect;

.field mMiniModeInputEventReceiver:Lcom/android/server/wm/WindowManagerService$MiniModeInputEventReceiver;

.field mMovingTask:Lcom/android/server/wm/Task;

.field mMultiWindowCenterBar:Lcom/android/server/wm/WindowState;

.field mMultiWindowSwitchWindowTarget:Lcom/android/server/wm/WindowState;

.field mMultiWindowTraybarTarget:Lcom/android/server/wm/WindowState;

.field private mNextStartingWindowAppToken:Lcom/android/server/wm/AppWindowToken;

.field private final mNoAnimationNotifyOnTransitionFinished:Ljava/util/List;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/List",
            "<",
            "Landroid/os/IBinder;",
            ">;"
        }
    .end annotation
.end field

.field mObscuredScreenZoneForAnimation:I

.field final mOnlyCore:Z

.field final mOpeningApps:Landroid/util/ArraySet;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Landroid/util/ArraySet",
            "<",
            "Lcom/android/server/wm/AppWindowToken;",
            ">;"
        }
    .end annotation
.end field

.field final mOpeningAppsForDisplay:Lcom/samsung/android/multidisplay/common/FallbackArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Lcom/samsung/android/multidisplay/common/FallbackArrayList",
            "<",
            "Landroid/util/ArraySet",
            "<",
            "Lcom/android/server/wm/AppWindowToken;",
            ">;>;"
        }
    .end annotation
.end field

.field final mPendingRemove:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList",
            "<",
            "Lcom/android/server/wm/WindowState;",
            ">;"
        }
    .end annotation
.end field

.field mPendingRemoveTmp:[Lcom/android/server/wm/WindowState;

.field mPerformEnabled:Z

.field private mPersonaManager:Lcom/android/server/pm/PersonaManagerService;

.field private final mPointerEventDispatcher:Lcom/android/server/wm/PointerEventDispatcher;

.field final mPolicy:Landroid/view/WindowManagerPolicy;

.field mPowerManager:Landroid/os/PowerManager;

.field mPowerManagerInternal:Landroid/os/PowerManagerInternal;

.field final mRealDisplayMetrics:Landroid/util/DisplayMetrics;

.field mRebuildTmp:[Ljava/lang/ref/WeakReference;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "[",
            "Ljava/lang/ref/WeakReference",
            "<",
            "Lcom/android/server/wm/WindowState;",
            ">;"
        }
    .end annotation
.end field

.field mReduceScreenRunning:Z

.field mReduceScreenScale:F

.field mReduceScreenStarted:Z

.field mRequestLayout:Z

.field private mRequestedDismissKeyguardOnNextActivity:Z

.field final mResizingWindows:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList",
            "<",
            "Lcom/android/server/wm/WindowState;",
            ">;"
        }
    .end annotation
.end field

.field mRotation:I

.field mRotationWatchers:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList",
            "<",
            "Lcom/android/server/wm/WindowManagerService$RotationWatcher;",
            ">;"
        }
    .end annotation
.end field

.field mRotations:Lcom/samsung/android/multidisplay/common/FallbackArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Lcom/samsung/android/multidisplay/common/FallbackArrayList",
            "<",
            "Ljava/lang/Integer;",
            ">;"
        }
    .end annotation
.end field

.field mSafeMode:Z

.field final mScaledPids:Ljava/util/HashMap;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/HashMap",
            "<",
            "Ljava/lang/Integer;",
            "Ljava/lang/String;",
            ">;"
        }
    .end annotation
.end field

.field mScreenCaptureDisabled:Landroid/util/SparseArray;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Landroid/util/SparseArray",
            "<",
            "Ljava/lang/Boolean;",
            ">;"
        }
    .end annotation
.end field

.field private final mScreenFrozenLock:Landroid/os/PowerManager$WakeLock;

.field final mScreenRect:Landroid/graphics/Rect;

.field final mSessions:Landroid/util/ArraySet;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Landroid/util/ArraySet",
            "<",
            "Lcom/android/server/wm/Session;",
            ">;"
        }
    .end annotation
.end field

.field mSettingsObserver:Lcom/android/server/wm/WindowManagerService$SettingsObserver;

.field private mShouldMoveInputMethodWindowsToDisplay:Z

.field mShouldSynchronizeTransition:Z

.field mShowImeWithHardKeyboard:Z

.field mShowingBootMessages:Z

.field mSkipAppTransitionAnimation:Z

.field mSkipAppTransitionAnimations:Lcom/samsung/android/multidisplay/common/FallbackArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Lcom/samsung/android/multidisplay/common/FallbackArrayList",
            "<",
            "Ljava/lang/Boolean;",
            ">;"
        }
    .end annotation
.end field

.field mSkipWidgetFocus:Z

.field mSortedWisArray:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList",
            "<",
            "Lcom/android/server/wm/WindowManagerService$WallpaperInnerState;",
            ">;"
        }
    .end annotation
.end field

.field mStackIdToStack:Landroid/util/SparseArray;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Landroid/util/SparseArray",
            "<",
            "Lcom/android/server/wm/TaskStack;",
            ">;"
        }
    .end annotation
.end field

.field mStartingIconInTransition:Z

.field mStartingIconInTransitions:Lcom/samsung/android/multidisplay/common/FallbackArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Lcom/samsung/android/multidisplay/common/FallbackArrayList",
            "<",
            "Ljava/lang/Boolean;",
            ">;"
        }
    .end annotation
.end field

.field mStrictModeFlash:Lcom/android/server/wm/StrictModeFlash;

.field mSystemBooted:Z

.field mSystemDecorLayer:I

.field mTabFrontStack:I

.field mTaskIdToTask:Landroid/util/SparseArray;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Landroid/util/SparseArray",
            "<",
            "Lcom/android/server/wm/Task;",
            ">;"
        }
    .end annotation
.end field

.field final mTempConfiguration:Landroid/content/res/Configuration;

.field final mTempConfigurations:Lcom/samsung/android/multidisplay/common/FallbackArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Lcom/samsung/android/multidisplay/common/FallbackArrayList",
            "<",
            "Landroid/content/res/Configuration;",
            ">;"
        }
    .end annotation
.end field

.field private mTempWindowRenderStats:Landroid/view/WindowContentFrameStats;

.field mThicknessBorderPaintInner:I

.field final mTmpContentRect:Landroid/graphics/Rect;

.field final mTmpDisplayMetrics:Landroid/util/DisplayMetrics;

.field final mTmpDisplayTaskHistoryList:Landroid/util/SparseArray;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Landroid/util/SparseArray",
            "<",
            "Ljava/util/ArrayList",
            "<",
            "Lcom/android/server/wm/Task;",
            ">;>;"
        }
    .end annotation
.end field

.field final mTmpFloats:[F

.field mTmpGlobalWindowList:Lcom/android/server/wm/WindowList;

.field final mTmpWindows:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList",
            "<",
            "Lcom/android/server/wm/WindowState;",
            ">;"
        }
    .end annotation
.end field

.field final mTokenMap:Ljava/util/HashMap;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/HashMap",
            "<",
            "Landroid/os/IBinder;",
            "Lcom/android/server/wm/WindowToken;",
            ">;"
        }
    .end annotation
.end field

.field mTopWidgetWindow:Lcom/android/server/wm/WindowState;

.field mTouchIntercepterInputChannel:Landroid/view/InputChannel;

.field private mTransactionSequence:I

.field mTransitionAnimationScaleSetting:F

.field mTraversalScheduled:Z

.field mTurnOnScreen:Z

.field mTurnOnScreenPackage:Ljava/lang/String;

.field mUniversalTaskHistory:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList",
            "<",
            "Lcom/android/server/wm/Task;",
            ">;"
        }
    .end annotation
.end field

.field mUpperWallpaperTarget:Lcom/android/server/wm/WindowState;

.field private mViewServer:Lcom/android/server/wm/ViewServer;

.field mWaitingForConfig:Z

.field mWaitingForDrawn:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList",
            "<",
            "Lcom/android/server/wm/WindowState;",
            ">;"
        }
    .end annotation
.end field

.field mWaitingForDrawnCallback:Ljava/lang/Runnable;

.field mWaitingOnWallpaper:Lcom/android/server/wm/WindowState;

.field mWallpaperAnimLayerAdjustment:I

.field mWallpaperDrawState:I

.field mWallpaperInnerStates:Lcom/samsung/android/multidisplay/common/FallbackArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Lcom/samsung/android/multidisplay/common/FallbackArrayList",
            "<",
            "Lcom/android/server/wm/WindowManagerService$WallpaperInnerState;",
            ">;"
        }
    .end annotation
.end field

.field mWallpaperTarget:Lcom/android/server/wm/WindowState;

.field final mWallpaperTokens:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList",
            "<",
            "Lcom/android/server/wm/WindowToken;",
            ">;"
        }
    .end annotation
.end field

.field mWatermark:Lcom/android/server/wm/Watermark;

.field mWidgetWindowCount:I

.field mWindowAnimationScaleSetting:F

.field private final mWindowChangeListeners:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList",
            "<",
            "Lcom/android/server/wm/WindowManagerService$WindowChangeListener;",
            ">;"
        }
    .end annotation
.end field

.field final mWindowMap:Ljava/util/HashMap;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/HashMap",
            "<",
            "Landroid/os/IBinder;",
            "Lcom/android/server/wm/WindowState;",
            ">;"
        }
    .end annotation
.end field

.field mWindowStateComparator:Ljava/util/Comparator;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/Comparator",
            "<",
            "Lcom/android/server/wm/WindowState;",
            ">;"
        }
    .end annotation
.end field

.field private mWindowsChanged:Z

.field private mWindowsFreezingScreen:I

.field mWisComparator:Ljava/util/Comparator;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/Comparator",
            "<",
            "Lcom/android/server/wm/WindowManagerService$WallpaperInnerState;",
            ">;"
        }
    .end annotation
.end field

.field private mbEnableHoveringUI:Z


# direct methods
.method static constructor <clinit>()V
    .registers 3

    .prologue
    const/4 v2, 0x1

    const/4 v1, 0x0

    .line 391
    invoke-static {}, Landroid/os/Debug;->isProductShip()I

    move-result v0

    if-ne v0, v2, :cond_72

    move v0, v1

    :goto_9
    sput-boolean v0, SAFE_DEBUG:Z

    .line 392
    sput-boolean v1, DEBUG_ADD_REMOVE:Z

    .line 393
    sput-boolean v1, DEBUG_FOCUS:Z

    .line 394
    sget-boolean v0, DEBUG_FOCUS:Z

    if-nez v0, :cond_74

    move v0, v1

    :goto_14
    sput-boolean v0, DEBUG_FOCUS_LIGHT:Z

    .line 395
    sput-boolean v1, DEBUG_ANIM:Z

    .line 396
    sput-boolean v1, DEBUG_KEYGUARD:Z

    .line 397
    sput-boolean v1, DEBUG_LAYOUT:Z

    .line 398
    sget-boolean v0, SAFE_DEBUG:Z

    sput-boolean v0, DEBUG_RESIZE:Z

    .line 399
    sput-boolean v1, DEBUG_LAYERS:Z

    .line 402
    sput-boolean v1, DEBUG_VISIBILITY:Z

    .line 403
    sput-boolean v1, DEBUG_WINDOW_MOVEMENT:Z

    .line 404
    sput-boolean v1, DEBUG_TOKEN_MOVEMENT:Z

    .line 405
    sput-boolean v1, DEBUG_ORIENTATION:Z

    .line 406
    sput-boolean v1, DEBUG_APP_ORIENTATION:Z

    .line 407
    sput-boolean v1, DEBUG_CONFIGURATION:Z

    .line 408
    sput-boolean v1, DEBUG_APP_TRANSITIONS:Z

    .line 409
    sput-boolean v1, DEBUG_STARTING_WINDOW:Z

    .line 410
    sput-boolean v1, DEBUG_WALLPAPER:Z

    .line 411
    sget-boolean v0, DEBUG_WALLPAPER:Z

    sput-boolean v0, DEBUG_WALLPAPER_LIGHT:Z

    .line 413
    sget-boolean v0, SAFE_DEBUG:Z

    sput-boolean v0, DEBUG_SCREEN_ON:Z

    .line 417
    sput-boolean v1, DEBUG_SURFACE_TRACE:Z

    .line 418
    sput-boolean v1, DEBUG_WINDOW_TRACE:Z

    .line 419
    sput-boolean v1, DEBUG_TASK_MOVEMENT:Z

    .line 420
    sput-boolean v1, DEBUG_STACK:Z

    .line 421
    sput-boolean v1, DEBUG_DISPLAY:Z

    .line 422
    sput-boolean v1, DEBUG_POWER:Z

    .line 424
    sget-boolean v0, Lcom/samsung/android/dualscreen/DualScreenManager;->DEBUG_WM:Z

    sput-boolean v0, DEBUG_DUALSCREEN:Z

    .line 438
    sput-boolean v1, DEBUG_MULTIWINDOW:Z

    .line 439
    sget-boolean v0, DEBUG_MULTIWINDOW:Z

    if-nez v0, :cond_76

    move v0, v1

    :goto_53
    sput-boolean v0, DEBUG_MULTIWINDOW_SCALE:Z

    .line 440
    sget-boolean v0, DEBUG_MULTIWINDOW:Z

    if-nez v0, :cond_78

    sget-boolean v0, DEBUG_APP_ORIENTATION:Z

    if-nez v0, :cond_78

    move v0, v1

    :goto_5e
    sput-boolean v0, DEBUG_MULTIWINDOW_ORIENTATION:Z

    .line 441
    sget-boolean v0, DEBUG_MULTIWINDOW:Z

    if-nez v0, :cond_65

    move v2, v1

    :cond_65
    sput-boolean v2, DEBUG_MULTIWINDOW_CONTROL:Z

    .line 746
    sget-boolean v0, DEBUG_DUALSCREEN:Z

    if-eqz v0, :cond_6b

    :cond_6b
    sput-boolean v1, DUALSCREEN_DEBUG_INPUT_METHOD:Z

    .line 1064
    sget-boolean v0, SAFE_DEBUG:Z

    sput-boolean v0, DEBUG_CUSTOM_STARTING_WINDOW:Z

    return-void

    :cond_72
    move v0, v2

    .line 391
    goto :goto_9

    :cond_74
    move v0, v2

    .line 394
    goto :goto_14

    :cond_76
    move v0, v2

    .line 439
    goto :goto_53

    :cond_78
    move v0, v2

    .line 440
    goto :goto_5e
.end method

.method private constructor <init>(Landroid/content/Context;Lcom/android/server/input/InputManagerService;ZZZ)V
    .registers 30
    .param p1, "context"    # Landroid/content/Context;
    .param p2, "inputManager"    # Lcom/android/server/input/InputManagerService;
    .param p3, "haveInputMethods"    # Z
    .param p4, "showBootMsgs"    # Z
    .param p5, "onlyCore"    # Z

    .prologue
    .line 1627
    invoke-direct/range {p0 .. p0}, Landroid/view/IWindowManager$Stub;-><init>()V

    .line 527
    const/16 v19, 0x0

    move/from16 v0, v19

    move-object/from16 v1, p0

    iput-boolean v0, v1, mReduceScreenRunning:Z

    .line 528
    const/16 v19, 0x0

    move/from16 v0, v19

    move-object/from16 v1, p0

    iput-boolean v0, v1, mReduceScreenStarted:Z

    .line 529
    const/high16 v19, 0x3f800000    # 1.0f

    move/from16 v0, v19

    move-object/from16 v1, p0

    iput v0, v1, mReduceScreenScale:F

    .line 534
    const/16 v19, 0x0

    move/from16 v0, v19

    move-object/from16 v1, p0

    iput-boolean v0, v1, mbEnableHoveringUI:Z

    .line 537
    new-instance v19, Lcom/android/server/wm/WindowManagerService$1;

    move-object/from16 v0, v19

    move-object/from16 v1, p0

    invoke-direct {v0, v1}, Lcom/android/server/wm/WindowManagerService$1;-><init>(Lcom/android/server/wm/WindowManagerService;)V

    move-object/from16 v0, v19

    move-object/from16 v1, p0

    iput-object v0, v1, mBroadcastReceiver:Landroid/content/BroadcastReceiver;

    .line 591
    const/16 v19, 0x1

    move/from16 v0, v19

    new-array v0, v0, [I

    move-object/from16 v19, v0

    const/16 v20, 0x0

    const/16 v21, 0x0

    aput v21, v19, v20

    move-object/from16 v0, v19

    move-object/from16 v1, p0

    iput-object v0, v1, mCurrentProfileIds:[I

    .line 605
    new-instance v19, Lcom/android/server/policy/PhoneWindowManager;

    invoke-direct/range {v19 .. v19}, Lcom/android/server/policy/PhoneWindowManager;-><init>()V

    move-object/from16 v0, v19

    move-object/from16 v1, p0

    iput-object v0, v1, mPolicy:Landroid/view/WindowManagerPolicy;

    .line 618
    new-instance v19, Landroid/util/ArraySet;

    invoke-direct/range {v19 .. v19}, Landroid/util/ArraySet;-><init>()V

    move-object/from16 v0, v19

    move-object/from16 v1, p0

    iput-object v0, v1, mSessions:Landroid/util/ArraySet;

    .line 625
    new-instance v19, Ljava/util/HashMap;

    invoke-direct/range {v19 .. v19}, Ljava/util/HashMap;-><init>()V

    move-object/from16 v0, v19

    move-object/from16 v1, p0

    iput-object v0, v1, mWindowMap:Ljava/util/HashMap;

    .line 630
    new-instance v19, Ljava/util/HashMap;

    invoke-direct/range {v19 .. v19}, Ljava/util/HashMap;-><init>()V

    move-object/from16 v0, v19

    move-object/from16 v1, p0

    iput-object v0, v1, mTokenMap:Ljava/util/HashMap;

    .line 636
    new-instance v19, Ljava/util/ArrayList;

    invoke-direct/range {v19 .. v19}, Ljava/util/ArrayList;-><init>()V

    move-object/from16 v0, v19

    move-object/from16 v1, p0

    iput-object v0, v1, mFinishedStarting:Ljava/util/ArrayList;

    .line 645
    new-instance v19, Lcom/samsung/android/multidisplay/common/FallbackArrayList;

    invoke-direct/range {v19 .. v19}, Lcom/samsung/android/multidisplay/common/FallbackArrayList;-><init>()V

    move-object/from16 v0, v19

    move-object/from16 v1, p0

    iput-object v0, v1, mInputConsumers:Lcom/samsung/android/multidisplay/common/FallbackArrayList;

    .line 653
    new-instance v19, Ljava/util/ArrayList;

    invoke-direct/range {v19 .. v19}, Ljava/util/ArrayList;-><init>()V

    move-object/from16 v0, v19

    move-object/from16 v1, p0

    iput-object v0, v1, mResizingWindows:Ljava/util/ArrayList;

    .line 658
    new-instance v19, Ljava/util/ArrayList;

    invoke-direct/range {v19 .. v19}, Ljava/util/ArrayList;-><init>()V

    move-object/from16 v0, v19

    move-object/from16 v1, p0

    iput-object v0, v1, mPendingRemove:Ljava/util/ArrayList;

    .line 663
    const/16 v19, 0x14

    move/from16 v0, v19

    new-array v0, v0, [Lcom/android/server/wm/WindowState;

    move-object/from16 v19, v0

    move-object/from16 v0, v19

    move-object/from16 v1, p0

    iput-object v0, v1, mPendingRemoveTmp:[Lcom/android/server/wm/WindowState;

    .line 668
    new-instance v19, Ljava/util/ArrayList;

    invoke-direct/range {v19 .. v19}, Ljava/util/ArrayList;-><init>()V

    move-object/from16 v0, v19

    move-object/from16 v1, p0

    iput-object v0, v1, mDestroySurface:Ljava/util/ArrayList;

    .line 674
    new-instance v19, Ljava/util/ArrayList;

    invoke-direct/range {v19 .. v19}, Ljava/util/ArrayList;-><init>()V

    move-object/from16 v0, v19

    move-object/from16 v1, p0

    iput-object v0, v1, mLosingFocus:Ljava/util/ArrayList;

    .line 680
    new-instance v19, Ljava/util/ArrayList;

    invoke-direct/range {v19 .. v19}, Ljava/util/ArrayList;-><init>()V

    move-object/from16 v0, v19

    move-object/from16 v1, p0

    iput-object v0, v1, mForceRemoves:Ljava/util/ArrayList;

    .line 685
    new-instance v19, Ljava/util/ArrayList;

    invoke-direct/range {v19 .. v19}, Ljava/util/ArrayList;-><init>()V

    move-object/from16 v0, v19

    move-object/from16 v1, p0

    iput-object v0, v1, mWaitingForDrawn:Ljava/util/ArrayList;

    .line 695
    const/16 v19, 0x14

    move/from16 v0, v19

    new-array v0, v0, [Ljava/lang/ref/WeakReference;

    move-object/from16 v19, v0

    move-object/from16 v0, v19

    move-object/from16 v1, p0

    iput-object v0, v1, mRebuildTmp:[Ljava/lang/ref/WeakReference;

    .line 702
    new-instance v19, Landroid/util/SparseArray;

    invoke-direct/range {v19 .. v19}, Landroid/util/SparseArray;-><init>()V

    move-object/from16 v0, v19

    move-object/from16 v1, p0

    iput-object v0, v1, mScreenCaptureDisabled:Landroid/util/SparseArray;

    .line 708
    new-instance v19, Lcom/samsung/android/multidisplay/common/FallbackArrayList;

    invoke-direct/range {v19 .. v19}, Lcom/samsung/android/multidisplay/common/FallbackArrayList;-><init>()V

    move-object/from16 v0, v19

    move-object/from16 v1, p0

    iput-object v0, v1, mAccessibilityControllers:Lcom/samsung/android/multidisplay/common/FallbackArrayList;

    .line 720
    const/16 v19, 0x9

    move/from16 v0, v19

    new-array v0, v0, [F

    move-object/from16 v19, v0

    move-object/from16 v0, v19

    move-object/from16 v1, p0

    iput-object v0, v1, mTmpFloats:[F

    .line 721
    new-instance v19, Landroid/graphics/Rect;

    invoke-direct/range {v19 .. v19}, Landroid/graphics/Rect;-><init>()V

    move-object/from16 v0, v19

    move-object/from16 v1, p0

    iput-object v0, v1, mTmpContentRect:Landroid/graphics/Rect;

    .line 725
    const/16 v19, 0x0

    move/from16 v0, v19

    move-object/from16 v1, p0

    iput-boolean v0, v1, mDisplayEnabled:Z

    .line 726
    const/16 v19, 0x0

    move/from16 v0, v19

    move-object/from16 v1, p0

    iput-boolean v0, v1, mSystemBooted:Z

    .line 727
    const/16 v19, 0x0

    move/from16 v0, v19

    move-object/from16 v1, p0

    iput-boolean v0, v1, mForceDisplayEnabled:Z

    .line 728
    const/16 v19, 0x0

    move/from16 v0, v19

    move-object/from16 v1, p0

    iput-boolean v0, v1, mShowingBootMessages:Z

    .line 729
    const/16 v19, 0x0

    move/from16 v0, v19

    move-object/from16 v1, p0

    iput-boolean v0, v1, mBootAnimationStopped:Z

    .line 736
    new-instance v19, Landroid/util/SparseArray;

    const/16 v20, 0x2

    invoke-direct/range {v19 .. v20}, Landroid/util/SparseArray;-><init>(I)V

    move-object/from16 v0, v19

    move-object/from16 v1, p0

    iput-object v0, v1, mDisplayContents:Landroid/util/SparseArray;

    .line 738
    const-string/jumbo v19, "persist.panel.orientation"

    const/16 v20, 0x0

    invoke-static/range {v19 .. v20}, Landroid/os/SystemProperties;->getInt(Ljava/lang/String;I)I

    move-result v19

    div-int/lit8 v19, v19, 0x5a

    move/from16 v0, v19

    move-object/from16 v1, p0

    iput v0, v1, mRotation:I

    .line 739
    const/16 v19, -0x1

    move/from16 v0, v19

    move-object/from16 v1, p0

    iput v0, v1, mForcedAppOrientation:I

    .line 740
    const/16 v19, 0x0

    move/from16 v0, v19

    move-object/from16 v1, p0

    iput-boolean v0, v1, mAltOrientation:Z

    .line 743
    new-instance v19, Lcom/samsung/android/multidisplay/common/FallbackArrayList;

    invoke-direct/range {v19 .. v19}, Lcom/samsung/android/multidisplay/common/FallbackArrayList;-><init>()V

    move-object/from16 v0, v19

    move-object/from16 v1, p0

    iput-object v0, v1, mTempConfigurations:Lcom/samsung/android/multidisplay/common/FallbackArrayList;

    .line 744
    new-instance v19, Lcom/samsung/android/multidisplay/common/FallbackArrayList;

    invoke-direct/range {v19 .. v19}, Lcom/samsung/android/multidisplay/common/FallbackArrayList;-><init>()V

    move-object/from16 v0, v19

    move-object/from16 v1, p0

    iput-object v0, v1, mCurConfigurations:Lcom/samsung/android/multidisplay/common/FallbackArrayList;

    .line 748
    const/16 v19, 0x0

    move/from16 v0, v19

    move-object/from16 v1, p0

    iput-boolean v0, v1, mShouldMoveInputMethodWindowsToDisplay:Z

    .line 749
    const/16 v19, 0x0

    move/from16 v0, v19

    move-object/from16 v1, p0

    iput-boolean v0, v1, mChangedInputMethodDisplay:Z

    .line 750
    const/16 v19, 0x0

    move/from16 v0, v19

    move-object/from16 v1, p0

    iput-boolean v0, v1, mFullInputMethod:Z

    .line 752
    new-instance v19, Landroid/util/SparseArray;

    invoke-direct/range {v19 .. v19}, Landroid/util/SparseArray;-><init>()V

    move-object/from16 v0, v19

    move-object/from16 v1, p0

    iput-object v0, v1, mTmpDisplayTaskHistoryList:Landroid/util/SparseArray;

    .line 754
    new-instance v19, Ljava/util/ArrayList;

    invoke-direct/range {v19 .. v19}, Ljava/util/ArrayList;-><init>()V

    move-object/from16 v0, v19

    move-object/from16 v1, p0

    iput-object v0, v1, mUniversalTaskHistory:Ljava/util/ArrayList;

    .line 758
    new-instance v19, Ljava/lang/Object;

    invoke-direct/range {v19 .. v19}, Ljava/lang/Object;-><init>()V

    move-object/from16 v0, v19

    move-object/from16 v1, p0

    iput-object v0, v1, mKeyguardWaitingForActivityDrawnLock:Ljava/lang/Object;

    .line 770
    new-instance v19, Ljava/util/ArrayList;

    invoke-direct/range {v19 .. v19}, Ljava/util/ArrayList;-><init>()V

    move-object/from16 v0, v19

    move-object/from16 v1, p0

    iput-object v0, v1, mRotationWatchers:Ljava/util/ArrayList;

    .line 773
    const/16 v19, 0x0

    move/from16 v0, v19

    move-object/from16 v1, p0

    iput v0, v1, mSystemDecorLayer:I

    .line 774
    new-instance v19, Landroid/graphics/Rect;

    invoke-direct/range {v19 .. v19}, Landroid/graphics/Rect;-><init>()V

    move-object/from16 v0, v19

    move-object/from16 v1, p0

    iput-object v0, v1, mScreenRect:Landroid/graphics/Rect;

    .line 776
    const/16 v19, 0x0

    move/from16 v0, v19

    move-object/from16 v1, p0

    iput-boolean v0, v1, mTraversalScheduled:Z

    .line 777
    const/16 v19, 0x0

    move/from16 v0, v19

    move-object/from16 v1, p0

    iput-boolean v0, v1, mDisplayFrozen:Z

    .line 778
    const-wide/16 v20, 0x0

    move-wide/from16 v0, v20

    move-object/from16 v2, p0

    iput-wide v0, v2, mDisplayFreezeTime:J

    .line 779
    const/16 v19, 0x0

    move/from16 v0, v19

    move-object/from16 v1, p0

    iput v0, v1, mLastDisplayFreezeDuration:I

    .line 780
    const/16 v19, 0x0

    move-object/from16 v0, v19

    move-object/from16 v1, p0

    iput-object v0, v1, mLastFinishedFreezeSource:Ljava/lang/Object;

    .line 781
    const/16 v19, 0x0

    move/from16 v0, v19

    move-object/from16 v1, p0

    iput-boolean v0, v1, mWaitingForConfig:Z

    .line 786
    const/16 v19, 0x0

    move/from16 v0, v19

    move-object/from16 v1, p0

    iput v0, v1, mWindowsFreezingScreen:I

    .line 788
    const/16 v19, 0x0

    move/from16 v0, v19

    move-object/from16 v1, p0

    iput-boolean v0, v1, mClientFreezingScreen:Z

    .line 790
    const/16 v19, 0x0

    move/from16 v0, v19

    move-object/from16 v1, p0

    iput-boolean v0, v1, mHasAppWindowForWaitingForOrientation:Z

    .line 792
    const/16 v19, 0x0

    move/from16 v0, v19

    move-object/from16 v1, p0

    iput v0, v1, mAppsFreezingScreen:I

    .line 793
    const/16 v19, -0x1

    move/from16 v0, v19

    move-object/from16 v1, p0

    iput v0, v1, mLastWindowForcedOrientation:I

    .line 794
    const/16 v19, 0x5

    move/from16 v0, v19

    move-object/from16 v1, p0

    iput v0, v1, mLastKeyguardForcedOrientation:I

    .line 796
    new-instance v19, Lcom/samsung/android/multidisplay/common/FallbackArrayList;

    invoke-direct/range {v19 .. v19}, Lcom/samsung/android/multidisplay/common/FallbackArrayList;-><init>()V

    move-object/from16 v0, v19

    move-object/from16 v1, p0

    iput-object v0, v1, mRotations:Lcom/samsung/android/multidisplay/common/FallbackArrayList;

    .line 797
    new-instance v19, Lcom/samsung/android/multidisplay/common/FallbackArrayList;

    invoke-direct/range {v19 .. v19}, Lcom/samsung/android/multidisplay/common/FallbackArrayList;-><init>()V

    move-object/from16 v0, v19

    move-object/from16 v1, p0

    iput-object v0, v1, mForcedAppOrientations:Lcom/samsung/android/multidisplay/common/FallbackArrayList;

    .line 798
    new-instance v19, Lcom/samsung/android/multidisplay/common/FallbackArrayList;

    invoke-direct/range {v19 .. v19}, Lcom/samsung/android/multidisplay/common/FallbackArrayList;-><init>()V

    move-object/from16 v0, v19

    move-object/from16 v1, p0

    iput-object v0, v1, mAltOrientations:Lcom/samsung/android/multidisplay/common/FallbackArrayList;

    .line 799
    new-instance v19, Lcom/samsung/android/multidisplay/common/FallbackArrayList;

    invoke-direct/range {v19 .. v19}, Lcom/samsung/android/multidisplay/common/FallbackArrayList;-><init>()V

    move-object/from16 v0, v19

    move-object/from16 v1, p0

    iput-object v0, v1, mLastWindowForcedOrientations:Lcom/samsung/android/multidisplay/common/FallbackArrayList;

    .line 800
    new-instance v19, Lcom/samsung/android/multidisplay/common/FallbackArrayList;

    invoke-direct/range {v19 .. v19}, Lcom/samsung/android/multidisplay/common/FallbackArrayList;-><init>()V

    move-object/from16 v0, v19

    move-object/from16 v1, p0

    iput-object v0, v1, mLastStatusBarVisibilities:Lcom/samsung/android/multidisplay/common/FallbackArrayList;

    .line 801
    new-instance v19, Lcom/samsung/android/multidisplay/common/FallbackArrayList;

    invoke-direct/range {v19 .. v19}, Lcom/samsung/android/multidisplay/common/FallbackArrayList;-><init>()V

    move-object/from16 v0, v19

    move-object/from16 v1, p0

    iput-object v0, v1, mLastDispatchedSystemUiVisibilities:Lcom/samsung/android/multidisplay/common/FallbackArrayList;

    .line 802
    new-instance v19, Lcom/samsung/android/multidisplay/common/FallbackArrayList;

    invoke-direct/range {v19 .. v19}, Lcom/samsung/android/multidisplay/common/FallbackArrayList;-><init>()V

    move-object/from16 v0, v19

    move-object/from16 v1, p0

    iput-object v0, v1, mAppOrientionsForOppositeDisplay:Lcom/samsung/android/multidisplay/common/FallbackArrayList;

    .line 803
    new-instance v19, Lcom/samsung/android/multidisplay/common/FallbackArrayList;

    invoke-direct/range {v19 .. v19}, Lcom/samsung/android/multidisplay/common/FallbackArrayList;-><init>()V

    move-object/from16 v0, v19

    move-object/from16 v1, p0

    iput-object v0, v1, mDisplayFrozens:Lcom/samsung/android/multidisplay/common/FallbackArrayList;

    .line 806
    const/16 v19, 0x0

    move/from16 v0, v19

    move-object/from16 v1, p0

    iput v0, v1, mLayoutSeq:I

    .line 809
    const/16 v19, 0x0

    move/from16 v0, v19

    move-object/from16 v1, p0

    iput v0, v1, mLastStatusBarVisibility:I

    .line 811
    const/16 v19, 0x0

    move/from16 v0, v19

    move-object/from16 v1, p0

    iput v0, v1, mLastDispatchedSystemUiVisibility:I

    .line 816
    new-instance v19, Landroid/content/res/Configuration;

    invoke-direct/range {v19 .. v19}, Landroid/content/res/Configuration;-><init>()V

    move-object/from16 v0, v19

    move-object/from16 v1, p0

    iput-object v0, v1, mCurConfiguration:Landroid/content/res/Configuration;

    .line 825
    const/16 v19, 0x0

    move/from16 v0, v19

    move-object/from16 v1, p0

    iput-boolean v0, v1, mStartingIconInTransition:Z

    .line 826
    const/16 v19, 0x0

    move/from16 v0, v19

    move-object/from16 v1, p0

    iput-boolean v0, v1, mSkipAppTransitionAnimation:Z

    .line 828
    new-instance v19, Landroid/util/ArraySet;

    invoke-direct/range {v19 .. v19}, Landroid/util/ArraySet;-><init>()V

    move-object/from16 v0, v19

    move-object/from16 v1, p0

    iput-object v0, v1, mOpeningApps:Landroid/util/ArraySet;

    .line 829
    new-instance v19, Landroid/util/ArraySet;

    invoke-direct/range {v19 .. v19}, Landroid/util/ArraySet;-><init>()V

    move-object/from16 v0, v19

    move-object/from16 v1, p0

    iput-object v0, v1, mClosingApps:Landroid/util/ArraySet;

    .line 831
    new-instance v19, Lcom/samsung/android/multidisplay/common/FallbackArrayList;

    invoke-direct/range {v19 .. v19}, Lcom/samsung/android/multidisplay/common/FallbackArrayList;-><init>()V

    move-object/from16 v0, v19

    move-object/from16 v1, p0

    iput-object v0, v1, mAppTransitions:Lcom/samsung/android/multidisplay/common/FallbackArrayList;

    .line 832
    new-instance v19, Lcom/samsung/android/multidisplay/common/FallbackArrayList;

    invoke-direct/range {v19 .. v19}, Lcom/samsung/android/multidisplay/common/FallbackArrayList;-><init>()V

    move-object/from16 v0, v19

    move-object/from16 v1, p0

    iput-object v0, v1, mStartingIconInTransitions:Lcom/samsung/android/multidisplay/common/FallbackArrayList;

    .line 833
    new-instance v19, Lcom/samsung/android/multidisplay/common/FallbackArrayList;

    invoke-direct/range {v19 .. v19}, Lcom/samsung/android/multidisplay/common/FallbackArrayList;-><init>()V

    move-object/from16 v0, v19

    move-object/from16 v1, p0

    iput-object v0, v1, mSkipAppTransitionAnimations:Lcom/samsung/android/multidisplay/common/FallbackArrayList;

    .line 835
    new-instance v19, Lcom/samsung/android/multidisplay/common/FallbackArrayList;

    invoke-direct/range {v19 .. v19}, Lcom/samsung/android/multidisplay/common/FallbackArrayList;-><init>()V

    move-object/from16 v0, v19

    move-object/from16 v1, p0

    iput-object v0, v1, mOpeningAppsForDisplay:Lcom/samsung/android/multidisplay/common/FallbackArrayList;

    .line 836
    new-instance v19, Lcom/samsung/android/multidisplay/common/FallbackArrayList;

    invoke-direct/range {v19 .. v19}, Lcom/samsung/android/multidisplay/common/FallbackArrayList;-><init>()V

    move-object/from16 v0, v19

    move-object/from16 v1, p0

    iput-object v0, v1, mClosingAppsForDisplay:Lcom/samsung/android/multidisplay/common/FallbackArrayList;

    .line 837
    new-instance v19, Landroid/util/ArraySet;

    invoke-direct/range {v19 .. v19}, Landroid/util/ArraySet;-><init>()V

    move-object/from16 v0, v19

    move-object/from16 v1, p0

    iput-object v0, v1, mCandidateOpeningApps:Landroid/util/ArraySet;

    .line 838
    const/16 v19, 0x0

    move/from16 v0, v19

    move-object/from16 v1, p0

    iput-boolean v0, v1, mShouldSynchronizeTransition:Z

    .line 843
    new-instance v19, Landroid/util/DisplayMetrics;

    invoke-direct/range {v19 .. v19}, Landroid/util/DisplayMetrics;-><init>()V

    move-object/from16 v0, v19

    move-object/from16 v1, p0

    iput-object v0, v1, mDisplayMetrics:Landroid/util/DisplayMetrics;

    .line 844
    new-instance v19, Landroid/util/DisplayMetrics;

    invoke-direct/range {v19 .. v19}, Landroid/util/DisplayMetrics;-><init>()V

    move-object/from16 v0, v19

    move-object/from16 v1, p0

    iput-object v0, v1, mRealDisplayMetrics:Landroid/util/DisplayMetrics;

    .line 845
    new-instance v19, Landroid/util/DisplayMetrics;

    invoke-direct/range {v19 .. v19}, Landroid/util/DisplayMetrics;-><init>()V

    move-object/from16 v0, v19

    move-object/from16 v1, p0

    iput-object v0, v1, mTmpDisplayMetrics:Landroid/util/DisplayMetrics;

    .line 846
    new-instance v19, Landroid/util/DisplayMetrics;

    invoke-direct/range {v19 .. v19}, Landroid/util/DisplayMetrics;-><init>()V

    move-object/from16 v0, v19

    move-object/from16 v1, p0

    iput-object v0, v1, mCompatDisplayMetrics:Landroid/util/DisplayMetrics;

    .line 848
    new-instance v19, Lcom/android/server/wm/WindowManagerService$H;

    move-object/from16 v0, v19

    move-object/from16 v1, p0

    invoke-direct {v0, v1}, Lcom/android/server/wm/WindowManagerService$H;-><init>(Lcom/android/server/wm/WindowManagerService;)V

    move-object/from16 v0, v19

    move-object/from16 v1, p0

    iput-object v0, v1, mH:Lcom/android/server/wm/WindowManagerService$H;

    .line 850
    invoke-static {}, Landroid/view/Choreographer;->getInstance()Landroid/view/Choreographer;

    move-result-object v19

    move-object/from16 v0, v19

    move-object/from16 v1, p0

    iput-object v0, v1, mChoreographer:Landroid/view/Choreographer;

    .line 852
    const/16 v19, 0x0

    move-object/from16 v0, v19

    move-object/from16 v1, p0

    iput-object v0, v1, mCurrentFocus:Lcom/android/server/wm/WindowState;

    .line 853
    const/16 v19, 0x0

    move-object/from16 v0, v19

    move-object/from16 v1, p0

    iput-object v0, v1, mLastFocus:Lcom/android/server/wm/WindowState;

    .line 859
    new-instance v19, Lcom/samsung/android/multidisplay/common/FallbackArrayList;

    invoke-direct/range {v19 .. v19}, Lcom/samsung/android/multidisplay/common/FallbackArrayList;-><init>()V

    move-object/from16 v0, v19

    move-object/from16 v1, p0

    iput-object v0, v1, mFocusOfDisplay:Lcom/samsung/android/multidisplay/common/FallbackArrayList;

    .line 864
    const/16 v19, 0x0

    move-object/from16 v0, v19

    move-object/from16 v1, p0

    iput-object v0, v1, mInputMethodTarget:Lcom/android/server/wm/WindowState;

    .line 870
    const/16 v19, 0x0

    move-object/from16 v0, v19

    move-object/from16 v1, p0

    iput-object v0, v1, mInputMethodWindow:Lcom/android/server/wm/WindowState;

    .line 871
    new-instance v19, Ljava/util/ArrayList;

    invoke-direct/range {v19 .. v19}, Ljava/util/ArrayList;-><init>()V

    move-object/from16 v0, v19

    move-object/from16 v1, p0

    iput-object v0, v1, mInputMethodDialogs:Ljava/util/ArrayList;

    .line 875
    new-instance v19, Ljava/util/ArrayList;

    invoke-direct/range {v19 .. v19}, Ljava/util/ArrayList;-><init>()V

    move-object/from16 v0, v19

    move-object/from16 v1, p0

    iput-object v0, v1, mTmpWindows:Ljava/util/ArrayList;

    .line 878
    const/16 v19, 0x0

    move-object/from16 v0, v19

    move-object/from16 v1, p0

    iput-object v0, v1, mMultiWindowTraybarTarget:Lcom/android/server/wm/WindowState;

    .line 879
    const/16 v19, 0x0

    move-object/from16 v0, v19

    move-object/from16 v1, p0

    iput-object v0, v1, mMultiWindowCenterBar:Lcom/android/server/wm/WindowState;

    .line 880
    const/16 v19, 0x0

    move-object/from16 v0, v19

    move-object/from16 v1, p0

    iput-object v0, v1, mMultiWindowSwitchWindowTarget:Lcom/android/server/wm/WindowState;

    .line 881
    const/16 v19, 0x0

    move/from16 v0, v19

    move-object/from16 v1, p0

    iput-boolean v0, v1, mRequestLayout:Z

    .line 882
    const/16 v19, -0x1

    move/from16 v0, v19

    move-object/from16 v1, p0

    iput v0, v1, mTabFrontStack:I

    .line 885
    const/16 v19, 0x0

    move/from16 v0, v19

    move-object/from16 v1, p0

    iput v0, v1, mLastDrawnFoucsedStackFrameId:I

    .line 886
    const/16 v19, -0x1

    move/from16 v0, v19

    move-object/from16 v1, p0

    iput v0, v1, mThicknessBorderPaintInner:I

    .line 887
    const/16 v19, 0x0

    move-object/from16 v0, v19

    move-object/from16 v1, p0

    iput-object v0, v1, mMovingTask:Lcom/android/server/wm/Task;

    .line 888
    const/16 v19, 0x0

    move/from16 v0, v19

    move-object/from16 v1, p0

    iput-boolean v0, v1, mIsCascadeAppRunniung:Z

    .line 889
    const/16 v19, 0x0

    move/from16 v0, v19

    move-object/from16 v1, p0

    iput-boolean v0, v1, mForceHideCenterbar:Z

    .line 890
    const/16 v19, 0x0

    move/from16 v0, v19

    move-object/from16 v1, p0

    iput-boolean v0, v1, mIsRecentsMultiWindowRunning:Z

    .line 891
    const/16 v19, 0x0

    move/from16 v0, v19

    move-object/from16 v1, p0

    iput-boolean v0, v1, mIsForceHideCenterbarTransitionRunning:Z

    .line 893
    new-instance v19, Landroid/graphics/Rect;

    invoke-direct/range {v19 .. v19}, Landroid/graphics/Rect;-><init>()V

    move-object/from16 v0, v19

    move-object/from16 v1, p0

    iput-object v0, v1, mMinStackBoundForPort:Landroid/graphics/Rect;

    .line 894
    new-instance v19, Landroid/graphics/Rect;

    invoke-direct/range {v19 .. v19}, Landroid/graphics/Rect;-><init>()V

    move-object/from16 v0, v19

    move-object/from16 v1, p0

    iput-object v0, v1, mMinStackBoundForLand:Landroid/graphics/Rect;

    .line 895
    new-instance v19, Landroid/graphics/Rect;

    invoke-direct/range {v19 .. v19}, Landroid/graphics/Rect;-><init>()V

    move-object/from16 v0, v19

    move-object/from16 v1, p0

    iput-object v0, v1, mMaxSelectiveStackBoundForPort:Landroid/graphics/Rect;

    .line 896
    new-instance v19, Landroid/graphics/Rect;

    invoke-direct/range {v19 .. v19}, Landroid/graphics/Rect;-><init>()V

    move-object/from16 v0, v19

    move-object/from16 v1, p0

    iput-object v0, v1, mMaxSelectiveStackBoundForLand:Landroid/graphics/Rect;

    .line 900
    const/16 v19, 0x0

    move-object/from16 v0, v19

    move-object/from16 v1, p0

    iput-object v0, v1, mCocktailBar:Lcom/android/server/wm/WindowState;

    .line 904
    const/16 v19, 0x0

    move-object/from16 v0, v19

    move-object/from16 v1, p0

    iput-object v0, v1, mEasyOneHandWindow:Lcom/android/server/wm/WindowState;

    .line 912
    const/16 v19, 0x0

    move/from16 v0, v19

    move-object/from16 v1, p0

    iput-boolean v0, v1, mPerformEnabled:Z

    .line 952
    new-instance v19, Ljava/util/ArrayList;

    invoke-direct/range {v19 .. v19}, Ljava/util/ArrayList;-><init>()V

    move-object/from16 v0, v19

    move-object/from16 v1, p0

    iput-object v0, v1, mWallpaperTokens:Ljava/util/ArrayList;

    .line 956
    const/16 v19, 0x0

    move-object/from16 v0, v19

    move-object/from16 v1, p0

    iput-object v0, v1, mWallpaperTarget:Lcom/android/server/wm/WindowState;

    .line 959
    const/16 v19, 0x0

    move-object/from16 v0, v19

    move-object/from16 v1, p0

    iput-object v0, v1, mLowerWallpaperTarget:Lcom/android/server/wm/WindowState;

    .line 962
    const/16 v19, 0x0

    move-object/from16 v0, v19

    move-object/from16 v1, p0

    iput-object v0, v1, mUpperWallpaperTarget:Lcom/android/server/wm/WindowState;

    .line 964
    const/high16 v19, -0x40800000    # -1.0f

    move/from16 v0, v19

    move-object/from16 v1, p0

    iput v0, v1, mLastWallpaperX:F

    .line 965
    const/high16 v19, -0x40800000    # -1.0f

    move/from16 v0, v19

    move-object/from16 v1, p0

    iput v0, v1, mLastWallpaperY:F

    .line 966
    const/high16 v19, -0x40800000    # -1.0f

    move/from16 v0, v19

    move-object/from16 v1, p0

    iput v0, v1, mLastWallpaperXStep:F

    .line 967
    const/high16 v19, -0x40800000    # -1.0f

    move/from16 v0, v19

    move-object/from16 v1, p0

    iput v0, v1, mLastWallpaperYStep:F

    .line 968
    const/high16 v19, -0x80000000

    move/from16 v0, v19

    move-object/from16 v1, p0

    iput v0, v1, mLastWallpaperDisplayOffsetX:I

    .line 969
    const/high16 v19, -0x80000000

    move/from16 v0, v19

    move-object/from16 v1, p0

    iput v0, v1, mLastWallpaperDisplayOffsetY:I

    .line 986
    const/16 v19, 0x0

    move/from16 v0, v19

    move-object/from16 v1, p0

    iput v0, v1, mWallpaperDrawState:I

    .line 992
    const/16 v19, 0x0

    move-object/from16 v0, v19

    move-object/from16 v1, p0

    iput-object v0, v1, mDeferredHideWallpaper:Lcom/android/server/wm/WindowState;

    .line 1025
    new-instance v19, Lcom/samsung/android/multidisplay/common/FallbackArrayList;

    invoke-direct/range {v19 .. v19}, Lcom/samsung/android/multidisplay/common/FallbackArrayList;-><init>()V

    move-object/from16 v0, v19

    move-object/from16 v1, p0

    iput-object v0, v1, mWallpaperInnerStates:Lcom/samsung/android/multidisplay/common/FallbackArrayList;

    .line 1028
    const/16 v19, 0x0

    move-object/from16 v0, v19

    move-object/from16 v1, p0

    iput-object v0, v1, mFocusedApp:Lcom/android/server/wm/AppWindowToken;

    .line 1033
    const/high16 v19, 0x3f800000    # 1.0f

    move/from16 v0, v19

    move-object/from16 v1, p0

    iput v0, v1, mWindowAnimationScaleSetting:F

    .line 1034
    const/high16 v19, 0x3f800000    # 1.0f

    move/from16 v0, v19

    move-object/from16 v1, p0

    iput v0, v1, mTransitionAnimationScaleSetting:F

    .line 1035
    const/high16 v19, 0x3f800000    # 1.0f

    move/from16 v0, v19

    move-object/from16 v1, p0

    iput v0, v1, mAnimatorDurationScaleSetting:F

    .line 1036
    const/16 v19, 0x0

    move/from16 v0, v19

    move-object/from16 v1, p0

    iput-boolean v0, v1, mAnimationsDisabled:Z

    .line 1053
    const/16 v19, 0x0

    move-object/from16 v0, v19

    move-object/from16 v1, p0

    iput-object v0, v1, mDragState:Lcom/android/server/wm/DragState;

    .line 1059
    const/16 v19, 0x0

    move-object/from16 v0, v19

    move-object/from16 v1, p0

    iput-object v0, v1, mEasyOneHandDR:Lcom/android/server/wm/WindowManagerService$EasyOneHandDeathRecipient;

    .line 1060
    const/16 v19, 0x0

    move-object/from16 v0, v19

    move-object/from16 v1, p0

    iput-object v0, v1, mEasyOneHandWatcher:Landroid/sec/easyonehand/IEasyOneHandWatcher;

    .line 1065
    const/16 v19, 0x0

    move-object/from16 v0, v19

    move-object/from16 v1, p0

    iput-object v0, v1, mCustomStartingWindowManager:Lcom/android/server/wm/CustomStartingWindowManager;

    .line 1111
    new-instance v19, Lcom/android/server/wm/WindowManagerService$LayoutFields;

    move-object/from16 v0, v19

    move-object/from16 v1, p0

    invoke-direct {v0, v1}, Lcom/android/server/wm/WindowManagerService$LayoutFields;-><init>(Lcom/android/server/wm/WindowManagerService;)V

    move-object/from16 v0, v19

    move-object/from16 v1, p0

    iput-object v0, v1, mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    .line 1124
    new-instance v19, Landroid/util/SparseArray;

    invoke-direct/range {v19 .. v19}, Landroid/util/SparseArray;-><init>()V

    move-object/from16 v0, v19

    move-object/from16 v1, p0

    iput-object v0, v1, mTaskIdToTask:Landroid/util/SparseArray;

    .line 1128
    new-instance v19, Landroid/util/SparseArray;

    invoke-direct/range {v19 .. v19}, Landroid/util/SparseArray;-><init>()V

    move-object/from16 v0, v19

    move-object/from16 v1, p0

    iput-object v0, v1, mStackIdToStack:Landroid/util/SparseArray;

    .line 1138
    new-instance v19, Ljava/util/HashMap;

    invoke-direct/range {v19 .. v19}, Ljava/util/HashMap;-><init>()V

    move-object/from16 v0, v19

    move-object/from16 v1, p0

    iput-object v0, v1, mScaledPids:Ljava/util/HashMap;

    .line 1239
    const/16 v19, 0x1

    move/from16 v0, v19

    move-object/from16 v1, p0

    iput-boolean v0, v1, mSkipWidgetFocus:Z

    .line 1240
    const/16 v19, 0x0

    move-object/from16 v0, v19

    move-object/from16 v1, p0

    iput-object v0, v1, mTopWidgetWindow:Lcom/android/server/wm/WindowState;

    .line 1241
    const/16 v19, 0x0

    move/from16 v0, v19

    move-object/from16 v1, p0

    iput v0, v1, mWidgetWindowCount:I

    .line 1549
    new-instance v19, Ljava/util/ArrayList;

    invoke-direct/range {v19 .. v19}, Ljava/util/ArrayList;-><init>()V

    move-object/from16 v0, v19

    move-object/from16 v1, p0

    iput-object v0, v1, mWindowChangeListeners:Ljava/util/ArrayList;

    .line 1550
    const/16 v19, 0x0

    move/from16 v0, v19

    move-object/from16 v1, p0

    iput-boolean v0, v1, mWindowsChanged:Z

    .line 1557
    new-instance v19, Landroid/content/res/Configuration;

    invoke-direct/range {v19 .. v19}, Landroid/content/res/Configuration;-><init>()V

    move-object/from16 v0, v19

    move-object/from16 v1, p0

    iput-object v0, v1, mTempConfiguration:Landroid/content/res/Configuration;

    .line 1569
    new-instance v19, Ljava/util/ArrayList;

    invoke-direct/range {v19 .. v19}, Ljava/util/ArrayList;-><init>()V

    move-object/from16 v0, v19

    move-object/from16 v1, p0

    iput-object v0, v1, mNoAnimationNotifyOnTransitionFinished:Ljava/util/List;

    .line 1572
    new-instance v19, Lcom/android/server/wm/WindowManagerService$2;

    move-object/from16 v0, v19

    move-object/from16 v1, p0

    invoke-direct {v0, v1}, Lcom/android/server/wm/WindowManagerService$2;-><init>(Lcom/android/server/wm/WindowManagerService;)V

    move-object/from16 v0, v19

    move-object/from16 v1, p0

    iput-object v0, v1, mActivityManagerAppTransitionNotifier:Landroid/view/WindowManagerInternal$AppTransitionListener;

    .line 3041
    const/16 v19, 0x0

    move/from16 v0, v19

    move-object/from16 v1, p0

    iput-boolean v0, v1, mIsInputMethodDisplayUsed:Z

    .line 6964
    const/16 v19, 0x0

    move/from16 v0, v19

    move-object/from16 v1, p0

    iput-boolean v0, v1, mRequestedDismissKeyguardOnNextActivity:Z

    .line 12965
    new-instance v19, Lcom/android/server/wm/InputMonitor;

    move-object/from16 v0, v19

    move-object/from16 v1, p0

    invoke-direct {v0, v1}, Lcom/android/server/wm/InputMonitor;-><init>(Lcom/android/server/wm/WindowManagerService;)V

    move-object/from16 v0, v19

    move-object/from16 v1, p0

    iput-object v0, v1, mInputMonitor:Lcom/android/server/wm/InputMonitor;

    .line 14825
    new-instance v19, Lcom/android/server/wm/WindowList;

    invoke-direct/range {v19 .. v19}, Lcom/android/server/wm/WindowList;-><init>()V

    move-object/from16 v0, v19

    move-object/from16 v1, p0

    iput-object v0, v1, mTmpGlobalWindowList:Lcom/android/server/wm/WindowList;

    .line 14826
    new-instance v19, Lcom/android/server/wm/WindowManagerService$10;

    move-object/from16 v0, v19

    move-object/from16 v1, p0

    invoke-direct {v0, v1}, Lcom/android/server/wm/WindowManagerService$10;-><init>(Lcom/android/server/wm/WindowManagerService;)V

    move-object/from16 v0, v19

    move-object/from16 v1, p0

    iput-object v0, v1, mWindowStateComparator:Ljava/util/Comparator;

    .line 14833
    new-instance v19, Ljava/util/ArrayList;

    invoke-direct/range {v19 .. v19}, Ljava/util/ArrayList;-><init>()V

    move-object/from16 v0, v19

    move-object/from16 v1, p0

    iput-object v0, v1, mSortedWisArray:Ljava/util/ArrayList;

    .line 14834
    new-instance v19, Lcom/android/server/wm/WindowManagerService$11;

    move-object/from16 v0, v19

    move-object/from16 v1, p0

    invoke-direct {v0, v1}, Lcom/android/server/wm/WindowManagerService$11;-><init>(Lcom/android/server/wm/WindowManagerService;)V

    move-object/from16 v0, v19

    move-object/from16 v1, p0

    iput-object v0, v1, mWisComparator:Ljava/util/Comparator;

    .line 15428
    const/16 v19, 0x0

    move/from16 v0, v19

    move-object/from16 v1, p0

    iput-boolean v0, v1, mInLayout:Z

    .line 16534
    const/16 v19, 0x0

    move/from16 v0, v19

    move-object/from16 v1, p0

    iput v0, v1, mObscuredScreenZoneForAnimation:I

    .line 20802
    const/16 v19, 0x0

    move/from16 v0, v19

    move-object/from16 v1, p0

    iput-boolean v0, v1, isForceCancelDragMode:Z

    .line 22610
    const/16 v19, 0x0

    move/from16 v0, v19

    move-object/from16 v1, p0

    iput-boolean v0, v1, mDisableSubKey:Z

    .line 23207
    const/16 v19, 0x0

    move-object/from16 v0, v19

    move-object/from16 v1, p0

    iput-object v0, v1, mBackWindowView:Landroid/view/View;

    .line 1628
    move-object/from16 v0, p1

    move-object/from16 v1, p0

    iput-object v0, v1, mContext:Landroid/content/Context;

    .line 1629
    move/from16 v0, p3

    move-object/from16 v1, p0

    iput-boolean v0, v1, mHaveInputMethods:Z

    .line 1630
    move/from16 v0, p4

    move-object/from16 v1, p0

    iput-boolean v0, v1, mAllowBootMessages:Z

    .line 1631
    move/from16 v0, p5

    move-object/from16 v1, p0

    iput-boolean v0, v1, mOnlyCore:Z

    .line 1632
    invoke-virtual/range {p1 .. p1}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    move-result-object v19

    const v20, 0x1120012

    invoke-virtual/range {v19 .. v20}, Landroid/content/res/Resources;->getBoolean(I)Z

    move-result v19

    move/from16 v0, v19

    move-object/from16 v1, p0

    iput-boolean v0, v1, mLimitedAlphaCompositing:Z

    .line 1634
    invoke-virtual/range {p1 .. p1}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    move-result-object v19

    const v20, 0x1120087

    invoke-virtual/range {v19 .. v20}, Landroid/content/res/Resources;->getBoolean(I)Z

    move-result v19

    move/from16 v0, v19

    move-object/from16 v1, p0

    iput-boolean v0, v1, mHasPermanentDpad:Z

    .line 1636
    invoke-virtual/range {p1 .. p1}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    move-result-object v19

    const v20, 0x11200b8

    invoke-virtual/range {v19 .. v20}, Landroid/content/res/Resources;->getBoolean(I)Z

    move-result v19

    move/from16 v0, v19

    move-object/from16 v1, p0

    iput-boolean v0, v1, mInTouchMode:Z

    .line 1638
    invoke-virtual/range {p1 .. p1}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    move-result-object v19

    const v20, 0x10e008d

    invoke-virtual/range {v19 .. v20}, Landroid/content/res/Resources;->getInteger(I)I

    move-result v19

    move/from16 v0, v19

    int-to-long v0, v0

    move-wide/from16 v20, v0

    move-wide/from16 v0, v20

    move-object/from16 v2, p0

    iput-wide v0, v2, mDrawLockTimeoutMillis:J

    .line 1640
    invoke-virtual/range {p1 .. p1}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    move-result-object v19

    const v20, 0x11200ba

    invoke-virtual/range {v19 .. v20}, Landroid/content/res/Resources;->getBoolean(I)Z

    move-result v19

    move/from16 v0, v19

    move-object/from16 v1, p0

    iput-boolean v0, v1, mAllowAnimationsInLowPowerMode:Z

    .line 1642
    move-object/from16 v0, p2

    move-object/from16 v1, p0

    iput-object v0, v1, mInputManager:Lcom/android/server/input/InputManagerService;

    .line 1644
    move-object/from16 v0, p0

    iget-object v0, v0, mInputManager:Lcom/android/server/input/InputManagerService;

    move-object/from16 v19, v0

    move-object/from16 v0, v19

    move-object/from16 v1, p0

    invoke-virtual {v0, v1}, Lcom/android/server/input/InputManagerService;->setWindowManagerService(Lcom/android/server/wm/WindowManagerService;)V

    .line 1647
    const-class v19, Landroid/hardware/display/DisplayManagerInternal;

    invoke-static/range {v19 .. v19}, Lcom/android/server/LocalServices;->getService(Ljava/lang/Class;)Ljava/lang/Object;

    move-result-object v19

    check-cast v19, Landroid/hardware/display/DisplayManagerInternal;

    move-object/from16 v0, v19

    move-object/from16 v1, p0

    iput-object v0, v1, mDisplayManagerInternal:Landroid/hardware/display/DisplayManagerInternal;

    .line 1648
    new-instance v19, Lcom/android/server/wm/DisplaySettings;

    invoke-direct/range {v19 .. v19}, Lcom/android/server/wm/DisplaySettings;-><init>()V

    move-object/from16 v0, v19

    move-object/from16 v1, p0

    iput-object v0, v1, mDisplaySettings:Lcom/android/server/wm/DisplaySettings;

    .line 1649
    move-object/from16 v0, p0

    iget-object v0, v0, mDisplaySettings:Lcom/android/server/wm/DisplaySettings;

    move-object/from16 v19, v0

    invoke-virtual/range {v19 .. v19}, Lcom/android/server/wm/DisplaySettings;->readSettingsLocked()V

    .line 1651
    const-class v19, Landroid/view/WindowManagerPolicy;

    move-object/from16 v0, p0

    iget-object v0, v0, mPolicy:Landroid/view/WindowManagerPolicy;

    move-object/from16 v20, v0

    invoke-static/range {v19 .. v20}, Lcom/android/server/LocalServices;->addService(Ljava/lang/Class;Ljava/lang/Object;)V

    .line 1664
    new-instance v19, Lcom/android/server/wm/PointerEventDispatcher;

    move-object/from16 v0, p0

    iget-object v0, v0, mInputManager:Lcom/android/server/input/InputManagerService;

    move-object/from16 v20, v0

    const-string v21, "WindowManager"

    invoke-virtual/range {v20 .. v21}, Lcom/android/server/input/InputManagerService;->monitorInput(Ljava/lang/String;)Landroid/view/InputChannel;

    move-result-object v20

    invoke-direct/range {v19 .. v20}, Lcom/android/server/wm/PointerEventDispatcher;-><init>(Landroid/view/InputChannel;)V

    move-object/from16 v0, v19

    move-object/from16 v1, p0

    iput-object v0, v1, mPointerEventDispatcher:Lcom/android/server/wm/PointerEventDispatcher;

    .line 1666
    new-instance v19, Landroid/view/SurfaceSession;

    invoke-direct/range {v19 .. v19}, Landroid/view/SurfaceSession;-><init>()V

    move-object/from16 v0, v19

    move-object/from16 v1, p0

    iput-object v0, v1, mFxSession:Landroid/view/SurfaceSession;

    .line 1667
    const-string/jumbo v19, "display"

    move-object/from16 v0, p1

    move-object/from16 v1, v19

    invoke-virtual {v0, v1}, Landroid/content/Context;->getSystemService(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v19

    check-cast v19, Landroid/hardware/display/DisplayManager;

    move-object/from16 v0, v19

    move-object/from16 v1, p0

    iput-object v0, v1, mDisplayManager:Landroid/hardware/display/DisplayManager;

    .line 1668
    move-object/from16 v0, p0

    iget-object v0, v0, mDisplayManager:Landroid/hardware/display/DisplayManager;

    move-object/from16 v19, v0

    invoke-virtual/range {v19 .. v19}, Landroid/hardware/display/DisplayManager;->getDisplays()[Landroid/view/Display;

    move-result-object v19

    move-object/from16 v0, v19

    move-object/from16 v1, p0

    iput-object v0, v1, mDisplays:[Landroid/view/Display;

    .line 1669
    move-object/from16 v0, p0

    iget-object v6, v0, mDisplays:[Landroid/view/Display;

    .local v6, "arr$":[Landroid/view/Display;
    array-length v10, v6

    .local v10, "len$":I
    const/4 v9, 0x0

    .local v9, "i$":I
    :goto_6fb
    if-ge v9, v10, :cond_707

    aget-object v7, v6, v9

    .line 1670
    .local v7, "display":Landroid/view/Display;
    move-object/from16 v0, p0

    invoke-virtual {v0, v7}, createDisplayContentLocked(Landroid/view/Display;)V

    .line 1669
    add-int/lit8 v9, v9, 0x1

    goto :goto_6fb

    .line 1692
    .end local v7    # "display":Landroid/view/Display;
    :cond_707
    new-instance v19, Lcom/android/server/wm/KeyguardDisableHandler;

    move-object/from16 v0, p0

    iget-object v0, v0, mContext:Landroid/content/Context;

    move-object/from16 v20, v0

    move-object/from16 v0, p0

    iget-object v0, v0, mPolicy:Landroid/view/WindowManagerPolicy;

    move-object/from16 v21, v0

    invoke-direct/range {v19 .. v21}, Lcom/android/server/wm/KeyguardDisableHandler;-><init>(Landroid/content/Context;Landroid/view/WindowManagerPolicy;)V

    move-object/from16 v0, v19

    move-object/from16 v1, p0

    iput-object v0, v1, mKeyguardDisableHandler:Lcom/android/server/wm/KeyguardDisableHandler;

    .line 1694
    const-string/jumbo v19, "power"

    move-object/from16 v0, p1

    move-object/from16 v1, v19

    invoke-virtual {v0, v1}, Landroid/content/Context;->getSystemService(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v19

    check-cast v19, Landroid/os/PowerManager;

    move-object/from16 v0, v19

    move-object/from16 v1, p0

    iput-object v0, v1, mPowerManager:Landroid/os/PowerManager;

    .line 1695
    const-class v19, Landroid/os/PowerManagerInternal;

    invoke-static/range {v19 .. v19}, Lcom/android/server/LocalServices;->getService(Ljava/lang/Class;)Ljava/lang/Object;

    move-result-object v19

    check-cast v19, Landroid/os/PowerManagerInternal;

    move-object/from16 v0, v19

    move-object/from16 v1, p0

    iput-object v0, v1, mPowerManagerInternal:Landroid/os/PowerManagerInternal;

    .line 1696
    move-object/from16 v0, p0

    iget-object v0, v0, mPowerManagerInternal:Landroid/os/PowerManagerInternal;

    move-object/from16 v19, v0

    new-instance v20, Lcom/android/server/wm/WindowManagerService$5;

    move-object/from16 v0, v20

    move-object/from16 v1, p0

    invoke-direct {v0, v1}, Lcom/android/server/wm/WindowManagerService$5;-><init>(Lcom/android/server/wm/WindowManagerService;)V

    invoke-virtual/range {v19 .. v20}, Landroid/os/PowerManagerInternal;->registerLowPowerModeObserver(Landroid/os/PowerManagerInternal$LowPowerModeListener;)V

    .line 1708
    move-object/from16 v0, p0

    iget-object v0, v0, mPowerManagerInternal:Landroid/os/PowerManagerInternal;

    move-object/from16 v19, v0

    invoke-virtual/range {v19 .. v19}, Landroid/os/PowerManagerInternal;->getLowPowerModeEnabled()Z

    move-result v19

    move/from16 v0, v19

    move-object/from16 v1, p0

    iput-boolean v0, v1, mAnimationsDisabled:Z

    .line 1709
    move-object/from16 v0, p0

    iget-object v0, v0, mPowerManager:Landroid/os/PowerManager;

    move-object/from16 v19, v0

    const/16 v20, 0x1

    const-string v21, "SCREEN_FROZEN"

    invoke-virtual/range {v19 .. v21}, Landroid/os/PowerManager;->newWakeLock(ILjava/lang/String;)Landroid/os/PowerManager$WakeLock;

    move-result-object v19

    move-object/from16 v0, v19

    move-object/from16 v1, p0

    iput-object v0, v1, mScreenFrozenLock:Landroid/os/PowerManager$WakeLock;

    .line 1711
    move-object/from16 v0, p0

    iget-object v0, v0, mScreenFrozenLock:Landroid/os/PowerManager$WakeLock;

    move-object/from16 v19, v0

    const/16 v20, 0x0

    invoke-virtual/range {v19 .. v20}, Landroid/os/PowerManager$WakeLock;->setReferenceCounted(Z)V

    .line 1726
    new-instance v19, Lcom/android/server/wm/AppTransition;

    move-object/from16 v0, p0

    iget-object v0, v0, mH:Lcom/android/server/wm/WindowManagerService$H;

    move-object/from16 v20, v0

    move-object/from16 v0, v19

    move-object/from16 v1, p1

    move-object/from16 v2, v20

    invoke-direct {v0, v1, v2}, Lcom/android/server/wm/AppTransition;-><init>(Landroid/content/Context;Landroid/os/Handler;)V

    move-object/from16 v0, v19

    move-object/from16 v1, p0

    iput-object v0, v1, mAppTransition:Lcom/android/server/wm/AppTransition;

    .line 1728
    move-object/from16 v0, p0

    iget-object v0, v0, mAppTransition:Lcom/android/server/wm/AppTransition;

    move-object/from16 v19, v0

    const/16 v20, 0x0

    invoke-virtual/range {v19 .. v20}, Lcom/android/server/wm/AppTransition;->setDisplayId(I)V

    .line 1732
    move-object/from16 v0, p0

    iget-object v0, v0, mAppTransition:Lcom/android/server/wm/AppTransition;

    move-object/from16 v19, v0

    move-object/from16 v0, p0

    iget-object v0, v0, mActivityManagerAppTransitionNotifier:Landroid/view/WindowManagerInternal$AppTransitionListener;

    move-object/from16 v20, v0

    invoke-virtual/range {v19 .. v20}, Lcom/android/server/wm/AppTransition;->registerListenerLocked(Landroid/view/WindowManagerInternal$AppTransitionListener;)V

    .line 1734
    invoke-static {}, Landroid/app/ActivityManagerNative;->getDefault()Landroid/app/IActivityManager;

    move-result-object v19

    move-object/from16 v0, v19

    move-object/from16 v1, p0

    iput-object v0, v1, mActivityManager:Landroid/app/IActivityManager;

    .line 1735
    invoke-static {}, Lcom/android/server/am/BatteryStatsService;->getService()Lcom/android/internal/app/IBatteryStats;

    move-result-object v19

    move-object/from16 v0, v19

    move-object/from16 v1, p0

    iput-object v0, v1, mBatteryStats:Lcom/android/internal/app/IBatteryStats;

    .line 1736
    const-string v19, "appops"

    move-object/from16 v0, p1

    move-object/from16 v1, v19

    invoke-virtual {v0, v1}, Landroid/content/Context;->getSystemService(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v19

    check-cast v19, Landroid/app/AppOpsManager;

    move-object/from16 v0, v19

    move-object/from16 v1, p0

    iput-object v0, v1, mAppOps:Landroid/app/AppOpsManager;

    .line 1737
    new-instance v17, Lcom/android/server/wm/WindowManagerService$6;

    move-object/from16 v0, v17

    move-object/from16 v1, p0

    invoke-direct {v0, v1}, Lcom/android/server/wm/WindowManagerService$6;-><init>(Lcom/android/server/wm/WindowManagerService;)V

    .line 1743
    .local v17, "opListener":Landroid/app/AppOpsManager$OnOpChangedInternalListener;
    move-object/from16 v0, p0

    iget-object v0, v0, mAppOps:Landroid/app/AppOpsManager;

    move-object/from16 v19, v0

    const/16 v20, 0x18

    const/16 v21, 0x0

    move-object/from16 v0, v19

    move/from16 v1, v20

    move-object/from16 v2, v21

    move-object/from16 v3, v17

    invoke-virtual {v0, v1, v2, v3}, Landroid/app/AppOpsManager;->startWatchingMode(ILjava/lang/String;Landroid/app/AppOpsManager$OnOpChangedListener;)V

    .line 1744
    move-object/from16 v0, p0

    iget-object v0, v0, mAppOps:Landroid/app/AppOpsManager;

    move-object/from16 v19, v0

    const/16 v20, 0x2d

    const/16 v21, 0x0

    move-object/from16 v0, v19

    move/from16 v1, v20

    move-object/from16 v2, v21

    move-object/from16 v3, v17

    invoke-virtual {v0, v1, v2, v3}, Landroid/app/AppOpsManager;->startWatchingMode(ILjava/lang/String;Landroid/app/AppOpsManager$OnOpChangedListener;)V

    .line 1747
    invoke-virtual/range {p1 .. p1}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v19

    const-string/jumbo v20, "window_animation_scale"

    move-object/from16 v0, p0

    iget v0, v0, mWindowAnimationScaleSetting:F

    move/from16 v21, v0

    invoke-static/range {v19 .. v21}, Landroid/provider/Settings$Global;->getFloat(Landroid/content/ContentResolver;Ljava/lang/String;F)F

    move-result v19

    move/from16 v0, v19

    move-object/from16 v1, p0

    iput v0, v1, mWindowAnimationScaleSetting:F

    .line 1749
    invoke-virtual/range {p1 .. p1}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v19

    const-string/jumbo v20, "transition_animation_scale"

    move-object/from16 v0, p0

    iget v0, v0, mTransitionAnimationScaleSetting:F

    move/from16 v21, v0

    invoke-static/range {v19 .. v21}, Landroid/provider/Settings$Global;->getFloat(Landroid/content/ContentResolver;Ljava/lang/String;F)F

    move-result v19

    move/from16 v0, v19

    move-object/from16 v1, p0

    iput v0, v1, mTransitionAnimationScaleSetting:F

    .line 1751
    invoke-virtual/range {p1 .. p1}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v19

    const-string v20, "animator_duration_scale"

    move-object/from16 v0, p0

    iget v0, v0, mAnimatorDurationScaleSetting:F

    move/from16 v21, v0

    invoke-static/range {v19 .. v21}, Landroid/provider/Settings$Global;->getFloat(Landroid/content/ContentResolver;Ljava/lang/String;F)F

    move-result v19

    move-object/from16 v0, p0

    move/from16 v1, v19

    invoke-direct {v0, v1}, setAnimatorDurationScale(F)V

    .line 1755
    new-instance v8, Landroid/content/IntentFilter;

    invoke-direct {v8}, Landroid/content/IntentFilter;-><init>()V

    .line 1756
    .local v8, "filter":Landroid/content/IntentFilter;
    const-string v19, "android.app.action.DEVICE_POLICY_MANAGER_STATE_CHANGED"

    move-object/from16 v0, v19

    invoke-virtual {v8, v0}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    .line 1758
    sget-boolean v19, SAFE_DEBUG:Z

    if-eqz v19, :cond_866

    .line 1759
    const-string v19, "android.app.action.DEBUG_RECONFIGURE"

    move-object/from16 v0, v19

    invoke-virtual {v8, v0}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    .line 1762
    :cond_866
    move-object/from16 v0, p0

    iget-object v0, v0, mContext:Landroid/content/Context;

    move-object/from16 v19, v0

    move-object/from16 v0, p0

    iget-object v0, v0, mBroadcastReceiver:Landroid/content/BroadcastReceiver;

    move-object/from16 v20, v0

    move-object/from16 v0, v19

    move-object/from16 v1, v20

    invoke-virtual {v0, v1, v8}, Landroid/content/Context;->registerReceiver(Landroid/content/BroadcastReceiver;Landroid/content/IntentFilter;)Landroid/content/Intent;

    .line 1764
    new-instance v19, Lcom/android/server/wm/WindowManagerService$SettingsObserver;

    move-object/from16 v0, v19

    move-object/from16 v1, p0

    invoke-direct {v0, v1}, Lcom/android/server/wm/WindowManagerService$SettingsObserver;-><init>(Lcom/android/server/wm/WindowManagerService;)V

    move-object/from16 v0, v19

    move-object/from16 v1, p0

    iput-object v0, v1, mSettingsObserver:Lcom/android/server/wm/WindowManagerService$SettingsObserver;

    .line 1765
    invoke-virtual/range {p0 .. p0}, updateShowImeWithHardKeyboard()V

    .line 1767
    move-object/from16 v0, p0

    iget-object v0, v0, mPowerManager:Landroid/os/PowerManager;

    move-object/from16 v19, v0

    const v20, 0x2000000a

    const-string v21, "WindowManager"

    invoke-virtual/range {v19 .. v21}, Landroid/os/PowerManager;->newWakeLock(ILjava/lang/String;)Landroid/os/PowerManager$WakeLock;

    move-result-object v19

    move-object/from16 v0, v19

    move-object/from16 v1, p0

    iput-object v0, v1, mHoldingScreenWakeLock:Landroid/os/PowerManager$WakeLock;

    .line 1769
    move-object/from16 v0, p0

    iget-object v0, v0, mHoldingScreenWakeLock:Landroid/os/PowerManager$WakeLock;

    move-object/from16 v19, v0

    const/16 v20, 0x0

    invoke-virtual/range {v19 .. v20}, Landroid/os/PowerManager$WakeLock;->setReferenceCounted(Z)V

    .line 1771
    new-instance v19, Lcom/android/server/wm/WindowAnimator;

    move-object/from16 v0, v19

    move-object/from16 v1, p0

    invoke-direct {v0, v1}, Lcom/android/server/wm/WindowAnimator;-><init>(Lcom/android/server/wm/WindowManagerService;)V

    move-object/from16 v0, v19

    move-object/from16 v1, p0

    iput-object v0, v1, mAnimator:Lcom/android/server/wm/WindowAnimator;

    .line 1779
    invoke-virtual/range {p1 .. p1}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    move-result-object v19

    const v20, 0x1120038

    invoke-virtual/range {v19 .. v20}, Landroid/content/res/Resources;->getBoolean(I)Z

    move-result v19

    move/from16 v0, v19

    move-object/from16 v1, p0

    iput-boolean v0, v1, mAllowTheaterModeWakeFromLayout:Z

    .line 1782
    const-class v19, Landroid/view/WindowManagerInternal;

    new-instance v20, Lcom/android/server/wm/WindowManagerService$LocalService;

    const/16 v21, 0x0

    move-object/from16 v0, v20

    move-object/from16 v1, p0

    move-object/from16 v2, v21

    invoke-direct {v0, v1, v2}, Lcom/android/server/wm/WindowManagerService$LocalService;-><init>(Lcom/android/server/wm/WindowManagerService;Lcom/android/server/wm/WindowManagerService$1;)V

    invoke-static/range {v19 .. v20}, Lcom/android/server/LocalServices;->addService(Ljava/lang/Class;Ljava/lang/Object;)V

    .line 1783
    invoke-direct/range {p0 .. p0}, initPolicy()V

    .line 1786
    invoke-static {}, Lcom/android/server/Watchdog;->getInstance()Lcom/android/server/Watchdog;

    move-result-object v19

    move-object/from16 v0, v19

    move-object/from16 v1, p0

    invoke-virtual {v0, v1}, Lcom/android/server/Watchdog;->addMonitor(Lcom/android/server/Watchdog$Monitor;)V

    .line 1788
    invoke-static {}, Landroid/view/SurfaceControl;->openTransaction()V

    .line 1790
    :try_start_8ee
    invoke-virtual/range {p0 .. p0}, createWatermarkInTransaction()V

    .line 1791
    new-instance v19, Lcom/android/server/wm/FocusedStackFrame;

    invoke-virtual/range {p0 .. p0}, getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v20

    invoke-virtual/range {v20 .. v20}, Lcom/android/server/wm/DisplayContent;->getDisplay()Landroid/view/Display;

    move-result-object v20

    move-object/from16 v0, p0

    iget-object v0, v0, mFxSession:Landroid/view/SurfaceSession;

    move-object/from16 v21, v0

    move-object/from16 v0, p0

    iget-object v0, v0, mContext:Landroid/content/Context;

    move-object/from16 v22, v0

    move-object/from16 v0, v19

    move-object/from16 v1, v20

    move-object/from16 v2, v21

    move-object/from16 v3, v22

    move-object/from16 v4, p0

    invoke-direct {v0, v1, v2, v3, v4}, Lcom/android/server/wm/FocusedStackFrame;-><init>(Landroid/view/Display;Landroid/view/SurfaceSession;Landroid/content/Context;Lcom/android/server/wm/WindowManagerService;)V

    move-object/from16 v0, v19

    move-object/from16 v1, p0

    iput-object v0, v1, mFocusedStackFrame:Lcom/android/server/wm/FocusedStackFrame;
    :try_end_91a
    .catchall {:try_start_8ee .. :try_end_91a} :catchall_a70

    .line 1795
    invoke-static {}, Landroid/view/SurfaceControl;->closeTransaction()V

    .line 1798
    invoke-virtual/range {p0 .. p0}, updateCircularDisplayMaskIfNeeded()V

    .line 1799
    invoke-virtual/range {p0 .. p0}, showEmulatorDisplayOverlayIfNeeded()V

    .line 1804
    move-object/from16 v0, p0

    iget-object v0, v0, mInputManager:Lcom/android/server/input/InputManagerService;

    move-object/from16 v19, v0

    const-string v20, "TouchIntercepter"

    invoke-virtual/range {v19 .. v20}, Lcom/android/server/input/InputManagerService;->monitorInput(Ljava/lang/String;)Landroid/view/InputChannel;

    move-result-object v19

    move-object/from16 v0, v19

    move-object/from16 v1, p0

    iput-object v0, v1, mTouchIntercepterInputChannel:Landroid/view/InputChannel;

    .line 1805
    move-object/from16 v0, p0

    iget-object v0, v0, mInputManager:Lcom/android/server/input/InputManagerService;

    move-object/from16 v19, v0

    move-object/from16 v0, p0

    iget-object v0, v0, mTouchIntercepterInputChannel:Landroid/view/InputChannel;

    move-object/from16 v20, v0

    const/16 v21, 0x0

    invoke-virtual/range {v19 .. v21}, Lcom/android/server/input/InputManagerService;->registerInputChannel(Landroid/view/InputChannel;Lcom/android/server/input/InputWindowHandle;)V

    .line 1806
    new-instance v19, Lcom/android/server/wm/WindowManagerService$MiniModeInputEventReceiver;

    move-object/from16 v0, p0

    iget-object v0, v0, mTouchIntercepterInputChannel:Landroid/view/InputChannel;

    move-object/from16 v20, v0

    invoke-static {}, Landroid/os/Looper;->myLooper()Landroid/os/Looper;

    move-result-object v21

    move-object/from16 v0, v19

    move-object/from16 v1, p0

    move-object/from16 v2, v20

    move-object/from16 v3, v21

    invoke-direct {v0, v1, v2, v3}, Lcom/android/server/wm/WindowManagerService$MiniModeInputEventReceiver;-><init>(Lcom/android/server/wm/WindowManagerService;Landroid/view/InputChannel;Landroid/os/Looper;)V

    move-object/from16 v0, v19

    move-object/from16 v1, p0

    iput-object v0, v1, mMiniModeInputEventReceiver:Lcom/android/server/wm/WindowManagerService$MiniModeInputEventReceiver;

    .line 1811
    move-object/from16 v0, p0

    iget-object v0, v0, mContext:Landroid/content/Context;

    move-object/from16 v19, v0

    invoke-virtual/range {v19 .. v19}, Landroid/content/Context;->getPackageManager()Landroid/content/pm/PackageManager;

    move-result-object v19

    const-string v20, "com.sec.feature.hovering_ui"

    invoke-virtual/range {v19 .. v20}, Landroid/content/pm/PackageManager;->hasSystemFeature(Ljava/lang/String;)Z

    move-result v19

    move/from16 v0, v19

    move-object/from16 v1, p0

    iput-boolean v0, v1, mbEnableHoveringUI:Z

    .line 1815
    invoke-virtual/range {p0 .. p0}, getDefaultOrientation()I

    move-result v19

    sput v19, Lcom/samsung/android/multiwindow/MultiWindowStyle;->sDefaultOrientation:I

    .line 1816
    sget-boolean v19, Lcom/samsung/android/multiwindow/MultiWindowFeatures;->SELECTIVE1ORIENTATION_ENABLED:Z

    if-eqz v19, :cond_a6f

    .line 1817
    new-instance v18, Landroid/graphics/Rect;

    invoke-direct/range {v18 .. v18}, Landroid/graphics/Rect;-><init>()V

    .line 1818
    .local v18, "tmpRect":Landroid/graphics/Rect;
    invoke-virtual/range {p0 .. p0}, getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v19

    move-object/from16 v0, v19

    move-object/from16 v1, v18

    invoke-virtual {v0, v1}, Lcom/android/server/wm/DisplayContent;->getLogicalDisplayRect(Landroid/graphics/Rect;)V

    .line 1819
    invoke-virtual/range {v18 .. v18}, Landroid/graphics/Rect;->width()I

    move-result v12

    .line 1820
    .local v12, "logicalWidth":I
    invoke-virtual/range {v18 .. v18}, Landroid/graphics/Rect;->height()I

    move-result v11

    .line 1821
    .local v11, "logicalHeight":I
    move-object/from16 v0, p0

    iget-object v0, v0, mContext:Landroid/content/Context;

    move-object/from16 v19, v0

    invoke-virtual/range {v19 .. v19}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    move-result-object v19

    const v20, 0x10e010b

    invoke-virtual/range {v19 .. v20}, Landroid/content/res/Resources;->getInteger(I)I

    move-result v15

    .line 1822
    .local v15, "minFloatingSizeRatio":I
    move-object/from16 v0, p0

    iget-object v0, v0, mContext:Landroid/content/Context;

    move-object/from16 v19, v0

    invoke-virtual/range {v19 .. v19}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    move-result-object v19

    const v20, 0x10e010e

    invoke-virtual/range {v19 .. v20}, Landroid/content/res/Resources;->getInteger(I)I

    move-result v13

    .line 1824
    .local v13, "maxSelectiveSizeRatio":I
    new-instance v16, Landroid/graphics/Rect;

    const/16 v19, 0x0

    const/16 v20, 0x0

    mul-int v21, v12, v15

    move/from16 v0, v21

    int-to-float v0, v0

    move/from16 v21, v0

    const/high16 v22, 0x447a0000    # 1000.0f

    div-float v21, v21, v22

    move/from16 v0, v21

    float-to-int v0, v0

    move/from16 v21, v0

    mul-int v22, v11, v15

    move/from16 v0, v22

    int-to-float v0, v0

    move/from16 v22, v0

    const/high16 v23, 0x447a0000    # 1000.0f

    div-float v22, v22, v23

    move/from16 v0, v22

    float-to-int v0, v0

    move/from16 v22, v0

    move-object/from16 v0, v16

    move/from16 v1, v19

    move/from16 v2, v20

    move/from16 v3, v21

    move/from16 v4, v22

    invoke-direct {v0, v1, v2, v3, v4}, Landroid/graphics/Rect;-><init>(IIII)V

    .line 1825
    .local v16, "minSize":Landroid/graphics/Rect;
    new-instance v14, Landroid/graphics/Rect;

    const/16 v19, 0x0

    const/16 v20, 0x0

    mul-int v21, v12, v13

    move/from16 v0, v21

    int-to-float v0, v0

    move/from16 v21, v0

    const/high16 v22, 0x447a0000    # 1000.0f

    div-float v21, v21, v22

    move/from16 v0, v21

    float-to-int v0, v0

    move/from16 v21, v0

    mul-int v22, v11, v13

    move/from16 v0, v22

    int-to-float v0, v0

    move/from16 v22, v0

    const/high16 v23, 0x447a0000    # 1000.0f

    div-float v22, v22, v23

    move/from16 v0, v22

    float-to-int v0, v0

    move/from16 v22, v0

    move/from16 v0, v19

    move/from16 v1, v20

    move/from16 v2, v21

    move/from16 v3, v22

    invoke-direct {v14, v0, v1, v2, v3}, Landroid/graphics/Rect;-><init>(IIII)V

    .line 1827
    .local v14, "maxSize":Landroid/graphics/Rect;
    invoke-virtual/range {p0 .. p0}, getDefaultOrientation()I

    move-result v19

    const/16 v20, 0x1

    move/from16 v0, v19

    move/from16 v1, v20

    if-ne v0, v1, :cond_a75

    .line 1828
    move-object/from16 v0, p0

    iget-object v0, v0, mMinStackBoundForPort:Landroid/graphics/Rect;

    move-object/from16 v19, v0

    move-object/from16 v0, v19

    move-object/from16 v1, v16

    invoke-virtual {v0, v1}, Landroid/graphics/Rect;->set(Landroid/graphics/Rect;)V

    .line 1829
    move-object/from16 v0, p0

    iget-object v0, v0, mMinStackBoundForLand:Landroid/graphics/Rect;

    move-object/from16 v19, v0

    const/16 v20, 0x0

    const/16 v21, 0x0

    invoke-virtual/range {v16 .. v16}, Landroid/graphics/Rect;->height()I

    move-result v22

    invoke-virtual/range {v16 .. v16}, Landroid/graphics/Rect;->width()I

    move-result v23

    invoke-virtual/range {v19 .. v23}, Landroid/graphics/Rect;->set(IIII)V

    .line 1830
    move-object/from16 v0, p0

    iget-object v0, v0, mMaxSelectiveStackBoundForPort:Landroid/graphics/Rect;

    move-object/from16 v19, v0

    move-object/from16 v0, v19

    invoke-virtual {v0, v14}, Landroid/graphics/Rect;->set(Landroid/graphics/Rect;)V

    .line 1831
    move-object/from16 v0, p0

    iget-object v0, v0, mMaxSelectiveStackBoundForLand:Landroid/graphics/Rect;

    move-object/from16 v19, v0

    const/16 v20, 0x0

    const/16 v21, 0x0

    invoke-virtual {v14}, Landroid/graphics/Rect;->height()I

    move-result v22

    invoke-virtual {v14}, Landroid/graphics/Rect;->width()I

    move-result v23

    invoke-virtual/range {v19 .. v23}, Landroid/graphics/Rect;->set(IIII)V

    .line 1840
    .end local v11    # "logicalHeight":I
    .end local v12    # "logicalWidth":I
    .end local v13    # "maxSelectiveSizeRatio":I
    .end local v14    # "maxSize":Landroid/graphics/Rect;
    .end local v15    # "minFloatingSizeRatio":I
    .end local v16    # "minSize":Landroid/graphics/Rect;
    .end local v18    # "tmpRect":Landroid/graphics/Rect;
    :cond_a6f
    :goto_a6f
    return-void

    .line 1795
    :catchall_a70
    move-exception v19

    invoke-static {}, Landroid/view/SurfaceControl;->closeTransaction()V

    throw v19

    .line 1833
    .restart local v11    # "logicalHeight":I
    .restart local v12    # "logicalWidth":I
    .restart local v13    # "maxSelectiveSizeRatio":I
    .restart local v14    # "maxSize":Landroid/graphics/Rect;
    .restart local v15    # "minFloatingSizeRatio":I
    .restart local v16    # "minSize":Landroid/graphics/Rect;
    .restart local v18    # "tmpRect":Landroid/graphics/Rect;
    :cond_a75
    move-object/from16 v0, p0

    iget-object v0, v0, mMinStackBoundForPort:Landroid/graphics/Rect;

    move-object/from16 v19, v0

    const/16 v20, 0x0

    const/16 v21, 0x0

    invoke-virtual/range {v16 .. v16}, Landroid/graphics/Rect;->height()I

    move-result v22

    invoke-virtual/range {v16 .. v16}, Landroid/graphics/Rect;->width()I

    move-result v23

    invoke-virtual/range {v19 .. v23}, Landroid/graphics/Rect;->set(IIII)V

    .line 1834
    move-object/from16 v0, p0

    iget-object v0, v0, mMinStackBoundForLand:Landroid/graphics/Rect;

    move-object/from16 v19, v0

    move-object/from16 v0, v19

    move-object/from16 v1, v16

    invoke-virtual {v0, v1}, Landroid/graphics/Rect;->set(Landroid/graphics/Rect;)V

    .line 1835
    move-object/from16 v0, p0

    iget-object v0, v0, mMaxSelectiveStackBoundForPort:Landroid/graphics/Rect;

    move-object/from16 v19, v0

    const/16 v20, 0x0

    const/16 v21, 0x0

    invoke-virtual {v14}, Landroid/graphics/Rect;->height()I

    move-result v22

    invoke-virtual {v14}, Landroid/graphics/Rect;->width()I

    move-result v23

    invoke-virtual/range {v19 .. v23}, Landroid/graphics/Rect;->set(IIII)V

    .line 1836
    move-object/from16 v0, p0

    iget-object v0, v0, mMaxSelectiveStackBoundForLand:Landroid/graphics/Rect;

    move-object/from16 v19, v0

    move-object/from16 v0, v19

    invoke-virtual {v0, v14}, Landroid/graphics/Rect;->set(Landroid/graphics/Rect;)V

    goto :goto_a6f
.end method

.method synthetic constructor <init>(Landroid/content/Context;Lcom/android/server/input/InputManagerService;ZZZLcom/android/server/wm/WindowManagerService$1;)V
    .registers 7
    .param p1, "x0"    # Landroid/content/Context;
    .param p2, "x1"    # Lcom/android/server/input/InputManagerService;
    .param p3, "x2"    # Z
    .param p4, "x3"    # Z
    .param p5, "x4"    # Z
    .param p6, "x5"    # Lcom/android/server/wm/WindowManagerService$1;

    .prologue
    .line 387
    invoke-direct/range {p0 .. p5}, <init>(Landroid/content/Context;Lcom/android/server/input/InputManagerService;ZZZ)V

    return-void
.end method

.method static synthetic access$000(Lcom/android/server/wm/WindowManagerService;)Lcom/android/server/wm/KeyguardDisableHandler;
    .registers 2
    .param p0, "x0"    # Lcom/android/server/wm/WindowManagerService;

    .prologue
    .line 387
    iget-object v0, p0, mKeyguardDisableHandler:Lcom/android/server/wm/KeyguardDisableHandler;

    return-object v0
.end method

.method static synthetic access$100(Lcom/android/server/wm/WindowManagerService;[Z)V
    .registers 2
    .param p0, "x0"    # Lcom/android/server/wm/WindowManagerService;
    .param p1, "x1"    # [Z

    .prologue
    .line 387
    invoke-direct {p0, p1}, reconfigureDebug([Z)V

    return-void
.end method

.method static synthetic access$1000(Lcom/android/server/wm/WindowManagerService;)Lcom/android/server/wm/CustomStartingWindowManager;
    .registers 2
    .param p0, "x0"    # Lcom/android/server/wm/WindowManagerService;

    .prologue
    .line 387
    iget-object v0, p0, mCustomStartingWindowManager:Lcom/android/server/wm/CustomStartingWindowManager;

    return-object v0
.end method

.method static synthetic access$1100(Lcom/android/server/wm/WindowManagerService;)Lcom/android/server/wm/AppWindowToken;
    .registers 2
    .param p0, "x0"    # Lcom/android/server/wm/WindowManagerService;

    .prologue
    .line 387
    iget-object v0, p0, mNextStartingWindowAppToken:Lcom/android/server/wm/AppWindowToken;

    return-object v0
.end method

.method static synthetic access$1102(Lcom/android/server/wm/WindowManagerService;Lcom/android/server/wm/AppWindowToken;)Lcom/android/server/wm/AppWindowToken;
    .registers 2
    .param p0, "x0"    # Lcom/android/server/wm/WindowManagerService;
    .param p1, "x1"    # Lcom/android/server/wm/AppWindowToken;

    .prologue
    .line 387
    iput-object p1, p0, mNextStartingWindowAppToken:Lcom/android/server/wm/AppWindowToken;

    return-object p1
.end method

.method static synthetic access$1202(Lcom/android/server/wm/WindowManagerService;I)I
    .registers 2
    .param p0, "x0"    # Lcom/android/server/wm/WindowManagerService;
    .param p1, "x1"    # I

    .prologue
    .line 387
    iput p1, p0, mWindowsFreezingScreen:I

    return p1
.end method

.method static synthetic access$1300(Lcom/android/server/wm/WindowManagerService;)V
    .registers 1
    .param p0, "x0"    # Lcom/android/server/wm/WindowManagerService;

    .prologue
    .line 387
    invoke-direct {p0}, stopFreezingDisplayLocked()V

    return-void
.end method

.method static synthetic access$1400(Lcom/android/server/wm/WindowManagerService;)Z
    .registers 2
    .param p0, "x0"    # Lcom/android/server/wm/WindowManagerService;

    .prologue
    .line 387
    iget-boolean v0, p0, mWindowsChanged:Z

    return v0
.end method

.method static synthetic access$1402(Lcom/android/server/wm/WindowManagerService;Z)Z
    .registers 2
    .param p0, "x0"    # Lcom/android/server/wm/WindowManagerService;
    .param p1, "x1"    # Z

    .prologue
    .line 387
    iput-boolean p1, p0, mWindowsChanged:Z

    return p1
.end method

.method static synthetic access$1500(Lcom/android/server/wm/WindowManagerService;)V
    .registers 1
    .param p0, "x0"    # Lcom/android/server/wm/WindowManagerService;

    .prologue
    .line 387
    invoke-direct {p0}, notifyWindowsChanged()V

    return-void
.end method

.method static synthetic access$1600(Lcom/android/server/wm/WindowManagerService;II)V
    .registers 3
    .param p0, "x0"    # Lcom/android/server/wm/WindowManagerService;
    .param p1, "x1"    # I
    .param p2, "x2"    # I

    .prologue
    .line 387
    invoke-direct {p0, p1, p2}, showStrictModeViolation(II)V

    return-void
.end method

.method static synthetic access$1700(Lcom/android/server/wm/WindowManagerService;I)V
    .registers 2
    .param p0, "x0"    # Lcom/android/server/wm/WindowManagerService;
    .param p1, "x1"    # I

    .prologue
    .line 387
    invoke-direct {p0, p1}, handleDisplayRemovedLocked(I)V

    return-void
.end method

.method static synthetic access$1800(Lcom/android/server/wm/WindowManagerService;I)V
    .registers 2
    .param p0, "x0"    # Lcom/android/server/wm/WindowManagerService;
    .param p1, "x1"    # I

    .prologue
    .line 387
    invoke-direct {p0, p1}, handleDisplayChangedLocked(I)V

    return-void
.end method

.method static synthetic access$1900(Lcom/android/server/wm/WindowManagerService;Lcom/android/server/wm/AppWindowToken;)V
    .registers 2
    .param p0, "x0"    # Lcom/android/server/wm/WindowManagerService;
    .param p1, "x1"    # Lcom/android/server/wm/AppWindowToken;

    .prologue
    .line 387
    invoke-direct {p0, p1}, appTokenDrawnForMultiWindowLocked(Lcom/android/server/wm/AppWindowToken;)V

    return-void
.end method

.method static synthetic access$200(Lcom/android/server/wm/WindowManagerService;FFLandroid/os/IBinder;Z)Lcom/android/server/wm/WindowState;
    .registers 6
    .param p0, "x0"    # Lcom/android/server/wm/WindowManagerService;
    .param p1, "x1"    # F
    .param p2, "x2"    # F
    .param p3, "x3"    # Landroid/os/IBinder;
    .param p4, "x4"    # Z

    .prologue
    .line 387
    invoke-direct {p0, p1, p2, p3, p4}, findTargetWindow(FFLandroid/os/IBinder;Z)Lcom/android/server/wm/WindowState;

    move-result-object v0

    return-object v0
.end method

.method static synthetic access$2000(Lcom/android/server/wm/WindowManagerService;)Z
    .registers 2
    .param p0, "x0"    # Lcom/android/server/wm/WindowManagerService;

    .prologue
    .line 387
    invoke-direct {p0}, checkBootAnimationCompleteLocked()Z

    move-result v0

    return v0
.end method

.method static synthetic access$2100(Lcom/android/server/wm/WindowManagerService;Z)Z
    .registers 3
    .param p0, "x0"    # Lcom/android/server/wm/WindowManagerService;
    .param p1, "x1"    # Z

    .prologue
    .line 387
    invoke-direct {p0, p1}, setCoverConfiguration(Z)Z

    move-result v0

    return v0
.end method

.method static synthetic access$2200(Lcom/android/server/wm/WindowManagerService;Z)V
    .registers 2
    .param p0, "x0"    # Lcom/android/server/wm/WindowManagerService;
    .param p1, "x1"    # Z

    .prologue
    .line 387
    invoke-direct {p0, p1}, notifyCoverStateChanged(Z)V

    return-void
.end method

.method static synthetic access$300(Lcom/android/server/wm/WindowManagerService;Lcom/android/server/wm/WindowState;Lcom/android/server/wm/WindowState;)V
    .registers 3
    .param p0, "x0"    # Lcom/android/server/wm/WindowManagerService;
    .param p1, "x1"    # Lcom/android/server/wm/WindowState;
    .param p2, "x2"    # Lcom/android/server/wm/WindowState;

    .prologue
    .line 387
    invoke-direct {p0, p1, p2}, placeWindowAfter(Lcom/android/server/wm/WindowState;Lcom/android/server/wm/WindowState;)V

    return-void
.end method

.method static synthetic access$3200(Lcom/android/server/wm/WindowManagerService;)Lcom/android/server/wm/WindowState;
    .registers 2
    .param p0, "x0"    # Lcom/android/server/wm/WindowManagerService;

    .prologue
    .line 387
    invoke-direct {p0}, getFocusedWindowLocked()Lcom/android/server/wm/WindowState;

    move-result-object v0

    return-object v0
.end method

.method static synthetic access$3300(Lcom/android/server/wm/WindowManagerService;)Z
    .registers 2
    .param p0, "x0"    # Lcom/android/server/wm/WindowManagerService;

    .prologue
    .line 387
    iget-boolean v0, p0, mIsInputMethodDisplayUsed:Z

    return v0
.end method

.method static synthetic access$400(Lcom/android/server/wm/WindowManagerService;Lcom/android/server/wm/WindowList;)V
    .registers 2
    .param p0, "x0"    # Lcom/android/server/wm/WindowManagerService;
    .param p1, "x1"    # Lcom/android/server/wm/WindowList;

    .prologue
    .line 387
    invoke-direct {p0, p1}, assignLayersLocked(Lcom/android/server/wm/WindowList;)V

    return-void
.end method

.method static synthetic access$500(Lcom/android/server/wm/WindowManagerService;)V
    .registers 1
    .param p0, "x0"    # Lcom/android/server/wm/WindowManagerService;

    .prologue
    .line 387
    invoke-direct {p0}, performLayoutAndPlaceSurfacesLocked()V

    return-void
.end method

.method static synthetic access$800(Lcom/android/server/wm/WindowManagerService;)V
    .registers 1
    .param p0, "x0"    # Lcom/android/server/wm/WindowManagerService;

    .prologue
    .line 387
    invoke-direct {p0}, notifyFocusChanged()V

    return-void
.end method

.method static synthetic access$900(Lcom/android/server/wm/WindowManagerService;)Z
    .registers 2
    .param p0, "x0"    # Lcom/android/server/wm/WindowManagerService;

    .prologue
    .line 387
    iget-boolean v0, p0, mbEnableHoveringUI:Z

    return v0
.end method

.method private addAppWindowToListLocked(Lcom/android/server/wm/WindowState;)I
    .registers 33
    .param p1, "win"    # Lcom/android/server/wm/WindowState;

    .prologue
    .line 1945
    move-object/from16 v0, p1

    iget-object v8, v0, Lcom/android/server/wm/WindowState;->mClient:Landroid/view/IWindow;

    .line 1946
    .local v8, "client":Landroid/view/IWindow;
    move-object/from16 v0, p1

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mToken:Lcom/android/server/wm/WindowToken;

    move-object/from16 v19, v0

    .line 1947
    .local v19, "token":Lcom/android/server/wm/WindowToken;
    invoke-virtual/range {p1 .. p1}, Lcom/android/server/wm/WindowState;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    move-result-object v9

    .line 1948
    .local v9, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-nez v9, :cond_13

    .line 1950
    const/16 v22, 0x0

    .line 2128
    :goto_12
    return v22

    .line 1953
    :cond_13
    invoke-virtual/range {p1 .. p1}, Lcom/android/server/wm/WindowState;->getWindowList()Lcom/android/server/wm/WindowList;

    move-result-object v27

    .line 1954
    .local v27, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual/range {v27 .. v27}, Lcom/android/server/wm/WindowList;->size()I

    move-result v3

    .line 1955
    .local v3, "N":I
    move-object/from16 v0, p0

    move-object/from16 v1, v19

    invoke-virtual {v0, v1, v9}, getTokenWindowsOnDisplay(Lcom/android/server/wm/WindowToken;Lcom/android/server/wm/DisplayContent;)Lcom/android/server/wm/WindowList;

    move-result-object v21

    .line 1956
    .local v21, "tokenWindowList":Lcom/android/server/wm/WindowList;
    const/16 v22, 0x0

    .line 1957
    .local v22, "tokenWindowsPos":I
    invoke-virtual/range {v21 .. v21}, Lcom/android/server/wm/WindowList;->size()I

    move-result v26

    .line 1958
    .local v26, "windowListPos":I
    invoke-virtual/range {v21 .. v21}, Lcom/android/server/wm/WindowList;->isEmpty()Z

    move-result v28

    if-nez v28, :cond_10f

    .line 1962
    move-object/from16 v0, p1

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    move-object/from16 v28, v0

    move-object/from16 v0, v28

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    move/from16 v28, v0

    const/16 v29, 0x1

    move/from16 v0, v28

    move/from16 v1, v29

    if-ne v0, v1, :cond_65

    .line 1964
    const/16 v28, 0x0

    move-object/from16 v0, v21

    move/from16 v1, v28

    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v12

    check-cast v12, Lcom/android/server/wm/WindowState;

    .line 1965
    .local v12, "lowestWindow":Lcom/android/server/wm/WindowState;
    move-object/from16 v0, p0

    move-object/from16 v1, p1

    invoke-direct {v0, v12, v1}, placeWindowBefore(Lcom/android/server/wm/WindowState;Lcom/android/server/wm/WindowState;)V

    .line 1966
    move-object/from16 v0, v19

    iget-object v0, v0, Lcom/android/server/wm/WindowToken;->windows:Lcom/android/server/wm/WindowList;

    move-object/from16 v28, v0

    move-object/from16 v0, p0

    move-object/from16 v1, v28

    invoke-direct {v0, v12, v1}, indexOfWinInWindowList(Lcom/android/server/wm/WindowState;Lcom/android/server/wm/WindowList;)I

    move-result v22

    .line 1967
    goto :goto_12

    .line 1968
    .end local v12    # "lowestWindow":Lcom/android/server/wm/WindowState;
    :cond_65
    move-object/from16 v0, p1

    iget-object v6, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    .line 1969
    .local v6, "atoken":Lcom/android/server/wm/AppWindowToken;
    add-int/lit8 v28, v26, -0x1

    move-object/from16 v0, v21

    move/from16 v1, v28

    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v11

    check-cast v11, Lcom/android/server/wm/WindowState;

    .line 1970
    .local v11, "lastWindow":Lcom/android/server/wm/WindowState;
    if-eqz v6, :cond_96

    iget-object v0, v6, Lcom/android/server/wm/AppWindowToken;->startingWindow:Lcom/android/server/wm/WindowState;

    move-object/from16 v28, v0

    move-object/from16 v0, v28

    if-ne v11, v0, :cond_96

    .line 1971
    move-object/from16 v0, p0

    move-object/from16 v1, p1

    invoke-direct {v0, v11, v1}, placeWindowBefore(Lcom/android/server/wm/WindowState;Lcom/android/server/wm/WindowState;)V

    .line 1972
    move-object/from16 v0, v19

    iget-object v0, v0, Lcom/android/server/wm/WindowToken;->windows:Lcom/android/server/wm/WindowList;

    move-object/from16 v28, v0

    move-object/from16 v0, p0

    move-object/from16 v1, v28

    invoke-direct {v0, v11, v1}, indexOfWinInWindowList(Lcom/android/server/wm/WindowState;Lcom/android/server/wm/WindowList;)I

    move-result v22

    goto/16 :goto_12

    .line 1974
    :cond_96
    invoke-direct/range {p0 .. p1}, findIdxBasedOnAppTokens(Lcom/android/server/wm/WindowState;)I

    move-result v14

    .line 1979
    .local v14, "newIdx":I
    sget-boolean v28, DEBUG_FOCUS_LIGHT:Z

    if-nez v28, :cond_a6

    sget-boolean v28, DEBUG_WINDOW_MOVEMENT:Z

    if-nez v28, :cond_a6

    sget-boolean v28, DEBUG_ADD_REMOVE:Z

    if-eqz v28, :cond_db

    :cond_a6
    const-string v28, "WindowManager"

    new-instance v29, Ljava/lang/StringBuilder;

    invoke-direct/range {v29 .. v29}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v30, "not Base app: Adding window "

    invoke-virtual/range {v29 .. v30}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v29

    move-object/from16 v0, v29

    move-object/from16 v1, p1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v29

    const-string v30, " at "

    invoke-virtual/range {v29 .. v30}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v29

    add-int/lit8 v30, v14, 0x1

    invoke-virtual/range {v29 .. v30}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v29

    const-string v30, " of "

    invoke-virtual/range {v29 .. v30}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v29

    move-object/from16 v0, v29

    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v29

    invoke-virtual/range {v29 .. v29}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v29

    invoke-static/range {v28 .. v29}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 1982
    :cond_db
    add-int/lit8 v28, v14, 0x1

    move-object/from16 v0, v27

    move/from16 v1, v28

    move-object/from16 v2, p1

    invoke-virtual {v0, v1, v2}, Lcom/android/server/wm/WindowList;->add(ILjava/lang/Object;)V

    .line 1983
    if-gez v14, :cond_f4

    .line 1985
    const/16 v22, 0x0

    .line 1990
    :goto_ea
    const/16 v28, 0x1

    move/from16 v0, v28

    move-object/from16 v1, p0

    iput-boolean v0, v1, mWindowsChanged:Z

    goto/16 :goto_12

    .line 1987
    :cond_f4
    move-object/from16 v0, v27

    invoke-virtual {v0, v14}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v28

    check-cast v28, Lcom/android/server/wm/WindowState;

    move-object/from16 v0, v19

    iget-object v0, v0, Lcom/android/server/wm/WindowToken;->windows:Lcom/android/server/wm/WindowList;

    move-object/from16 v29, v0

    move-object/from16 v0, p0

    move-object/from16 v1, v28

    move-object/from16 v2, v29

    invoke-direct {v0, v1, v2}, indexOfWinInWindowList(Lcom/android/server/wm/WindowState;Lcom/android/server/wm/WindowList;)I

    move-result v28

    add-int/lit8 v22, v28, 0x1

    goto :goto_ea

    .line 2024
    .end local v6    # "atoken":Lcom/android/server/wm/AppWindowToken;
    .end local v11    # "lastWindow":Lcom/android/server/wm/WindowState;
    .end local v14    # "newIdx":I
    :cond_10f
    const/4 v15, 0x0

    .line 2026
    .local v15, "pos":Lcom/android/server/wm/WindowState;
    invoke-virtual {v9}, Lcom/android/server/wm/DisplayContent;->getTasks()Ljava/util/ArrayList;

    move-result-object v18

    .line 2028
    .local v18, "tasks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/Task;>;"
    const/16 v20, -0x1

    .line 2029
    .local v20, "tokenNdx":I
    invoke-virtual/range {v18 .. v18}, Ljava/util/ArrayList;->size()I

    move-result v28

    add-int/lit8 v17, v28, -0x1

    .local v17, "taskNdx":I
    :goto_11c
    if-ltz v17, :cond_166

    .line 2030
    move-object/from16 v0, v18

    move/from16 v1, v17

    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v28

    check-cast v28, Lcom/android/server/wm/Task;

    move-object/from16 v0, v28

    iget-object v0, v0, Lcom/android/server/wm/Task;->mAppTokens:Lcom/android/server/wm/AppTokenList;

    move-object/from16 v23, v0

    .line 2031
    .local v23, "tokens":Lcom/android/server/wm/AppTokenList;
    invoke-virtual/range {v23 .. v23}, Lcom/android/server/wm/AppTokenList;->size()I

    move-result v28

    add-int/lit8 v20, v28, -0x1

    :goto_134
    if-ltz v20, :cond_164

    .line 2032
    move-object/from16 v0, v23

    move/from16 v1, v20

    invoke-virtual {v0, v1}, Lcom/android/server/wm/AppTokenList;->get(I)Ljava/lang/Object;

    move-result-object v16

    check-cast v16, Lcom/android/server/wm/AppWindowToken;

    .line 2033
    .local v16, "t":Lcom/android/server/wm/AppWindowToken;
    move-object/from16 v0, v16

    move-object/from16 v1, v19

    if-ne v0, v1, :cond_1a6

    .line 2034
    add-int/lit8 v20, v20, -0x1

    .line 2035
    if-gez v20, :cond_164

    .line 2036
    add-int/lit8 v17, v17, -0x1

    .line 2037
    if-ltz v17, :cond_164

    .line 2038
    move-object/from16 v0, v18

    move/from16 v1, v17

    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v28

    check-cast v28, Lcom/android/server/wm/Task;

    move-object/from16 v0, v28

    iget-object v0, v0, Lcom/android/server/wm/Task;->mAppTokens:Lcom/android/server/wm/AppTokenList;

    move-object/from16 v28, v0

    invoke-virtual/range {v28 .. v28}, Lcom/android/server/wm/AppTokenList;->size()I

    move-result v28

    add-int/lit8 v20, v28, -0x1

    .line 2052
    .end local v16    # "t":Lcom/android/server/wm/AppWindowToken;
    :cond_164
    if-ltz v20, :cond_1cc

    .line 2061
    .end local v23    # "tokens":Lcom/android/server/wm/AppTokenList;
    :cond_166
    if-eqz v15, :cond_1d2

    .line 2063
    move-object/from16 v0, p0

    iget-object v0, v0, mTokenMap:Ljava/util/HashMap;

    move-object/from16 v28, v0

    iget-object v0, v15, Lcom/android/server/wm/WindowState;->mClient:Landroid/view/IWindow;

    move-object/from16 v29, v0

    invoke-interface/range {v29 .. v29}, Landroid/view/IWindow;->asBinder()Landroid/os/IBinder;

    move-result-object v29

    invoke-virtual/range {v28 .. v29}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Lcom/android/server/wm/WindowToken;

    .line 2064
    .local v6, "atoken":Lcom/android/server/wm/WindowToken;
    if-eqz v6, :cond_19d

    .line 2065
    move-object/from16 v0, p0

    invoke-virtual {v0, v6, v9}, getTokenWindowsOnDisplay(Lcom/android/server/wm/WindowToken;Lcom/android/server/wm/DisplayContent;)Lcom/android/server/wm/WindowList;

    move-result-object v21

    .line 2067
    invoke-virtual/range {v21 .. v21}, Lcom/android/server/wm/WindowList;->size()I

    move-result v4

    .line 2068
    .local v4, "NC":I
    if-lez v4, :cond_19d

    .line 2069
    const/16 v28, 0x0

    move-object/from16 v0, v21

    move/from16 v1, v28

    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v7

    check-cast v7, Lcom/android/server/wm/WindowState;

    .line 2070
    .local v7, "bottom":Lcom/android/server/wm/WindowState;
    iget v0, v7, Lcom/android/server/wm/WindowState;->mSubLayer:I

    move/from16 v28, v0

    if-gez v28, :cond_19d

    .line 2071
    move-object v15, v7

    .line 2075
    .end local v4    # "NC":I
    .end local v7    # "bottom":Lcom/android/server/wm/WindowState;
    :cond_19d
    move-object/from16 v0, p0

    move-object/from16 v1, p1

    invoke-direct {v0, v15, v1}, placeWindowBefore(Lcom/android/server/wm/WindowState;Lcom/android/server/wm/WindowState;)V

    goto/16 :goto_12

    .line 2047
    .end local v6    # "atoken":Lcom/android/server/wm/WindowToken;
    .restart local v16    # "t":Lcom/android/server/wm/AppWindowToken;
    .restart local v23    # "tokens":Lcom/android/server/wm/AppTokenList;
    :cond_1a6
    move-object/from16 v0, p0

    move-object/from16 v1, v16

    invoke-virtual {v0, v1, v9}, getTokenWindowsOnDisplay(Lcom/android/server/wm/WindowToken;Lcom/android/server/wm/DisplayContent;)Lcom/android/server/wm/WindowList;

    move-result-object v21

    .line 2048
    move-object/from16 v0, v16

    iget-boolean v0, v0, Lcom/android/server/wm/AppWindowToken;->sendingToBottom:Z

    move/from16 v28, v0

    if-nez v28, :cond_1c8

    invoke-virtual/range {v21 .. v21}, Lcom/android/server/wm/WindowList;->size()I

    move-result v28

    if-lez v28, :cond_1c8

    .line 2049
    const/16 v28, 0x0

    move-object/from16 v0, v21

    move/from16 v1, v28

    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v15

    .end local v15    # "pos":Lcom/android/server/wm/WindowState;
    check-cast v15, Lcom/android/server/wm/WindowState;

    .line 2031
    .restart local v15    # "pos":Lcom/android/server/wm/WindowState;
    :cond_1c8
    add-int/lit8 v20, v20, -0x1

    goto/16 :goto_134

    .line 2029
    .end local v16    # "t":Lcom/android/server/wm/AppWindowToken;
    :cond_1cc
    add-int/lit8 v17, v17, -0x1

    goto/16 :goto_11c

    .line 2081
    :cond_1d0
    add-int/lit8 v17, v17, -0x1

    .end local v23    # "tokens":Lcom/android/server/wm/AppTokenList;
    :cond_1d2
    if-ltz v17, :cond_20c

    .line 2082
    move-object/from16 v0, v18

    move/from16 v1, v17

    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v28

    check-cast v28, Lcom/android/server/wm/Task;

    move-object/from16 v0, v28

    iget-object v0, v0, Lcom/android/server/wm/Task;->mAppTokens:Lcom/android/server/wm/AppTokenList;

    move-object/from16 v23, v0

    .line 2083
    .restart local v23    # "tokens":Lcom/android/server/wm/AppTokenList;
    :goto_1e4
    if-ltz v20, :cond_20a

    .line 2084
    move-object/from16 v0, v23

    move/from16 v1, v20

    invoke-virtual {v0, v1}, Lcom/android/server/wm/AppTokenList;->get(I)Ljava/lang/Object;

    move-result-object v16

    check-cast v16, Lcom/android/server/wm/AppWindowToken;

    .line 2085
    .restart local v16    # "t":Lcom/android/server/wm/AppWindowToken;
    move-object/from16 v0, p0

    move-object/from16 v1, v16

    invoke-virtual {v0, v1, v9}, getTokenWindowsOnDisplay(Lcom/android/server/wm/WindowToken;Lcom/android/server/wm/DisplayContent;)Lcom/android/server/wm/WindowList;

    move-result-object v21

    .line 2086
    invoke-virtual/range {v21 .. v21}, Lcom/android/server/wm/WindowList;->size()I

    move-result v5

    .line 2087
    .local v5, "NW":I
    if-lez v5, :cond_24d

    .line 2088
    add-int/lit8 v28, v5, -0x1

    move-object/from16 v0, v21

    move/from16 v1, v28

    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v15

    .end local v15    # "pos":Lcom/android/server/wm/WindowState;
    check-cast v15, Lcom/android/server/wm/WindowState;

    .line 2092
    .end local v5    # "NW":I
    .end local v16    # "t":Lcom/android/server/wm/AppWindowToken;
    .restart local v15    # "pos":Lcom/android/server/wm/WindowState;
    :cond_20a
    if-ltz v20, :cond_1d0

    .line 2098
    .end local v23    # "tokens":Lcom/android/server/wm/AppTokenList;
    :cond_20c
    if-eqz v15, :cond_250

    .line 2101
    move-object/from16 v0, p0

    iget-object v0, v0, mTokenMap:Ljava/util/HashMap;

    move-object/from16 v28, v0

    iget-object v0, v15, Lcom/android/server/wm/WindowState;->mClient:Landroid/view/IWindow;

    move-object/from16 v29, v0

    invoke-interface/range {v29 .. v29}, Landroid/view/IWindow;->asBinder()Landroid/os/IBinder;

    move-result-object v29

    invoke-virtual/range {v28 .. v29}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Lcom/android/server/wm/WindowToken;

    .line 2102
    .restart local v6    # "atoken":Lcom/android/server/wm/WindowToken;
    if-eqz v6, :cond_244

    .line 2103
    iget-object v0, v6, Lcom/android/server/wm/WindowToken;->windows:Lcom/android/server/wm/WindowList;

    move-object/from16 v28, v0

    invoke-virtual/range {v28 .. v28}, Lcom/android/server/wm/WindowList;->size()I

    move-result v4

    .line 2104
    .restart local v4    # "NC":I
    if-lez v4, :cond_244

    .line 2105
    iget-object v0, v6, Lcom/android/server/wm/WindowToken;->windows:Lcom/android/server/wm/WindowList;

    move-object/from16 v28, v0

    add-int/lit8 v29, v4, -0x1

    invoke-virtual/range {v28 .. v29}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v24

    check-cast v24, Lcom/android/server/wm/WindowState;

    .line 2106
    .local v24, "top":Lcom/android/server/wm/WindowState;
    move-object/from16 v0, v24

    iget v0, v0, Lcom/android/server/wm/WindowState;->mSubLayer:I

    move/from16 v28, v0

    if-ltz v28, :cond_244

    .line 2107
    move-object/from16 v15, v24

    .line 2111
    .end local v4    # "NC":I
    .end local v24    # "top":Lcom/android/server/wm/WindowState;
    :cond_244
    move-object/from16 v0, p0

    move-object/from16 v1, p1

    invoke-direct {v0, v15, v1}, placeWindowAfter(Lcom/android/server/wm/WindowState;Lcom/android/server/wm/WindowState;)V

    goto/16 :goto_12

    .line 2083
    .end local v6    # "atoken":Lcom/android/server/wm/WindowToken;
    .restart local v5    # "NW":I
    .restart local v16    # "t":Lcom/android/server/wm/AppWindowToken;
    .restart local v23    # "tokens":Lcom/android/server/wm/AppTokenList;
    :cond_24d
    add-int/lit8 v20, v20, -0x1

    goto :goto_1e4

    .line 2116
    .end local v5    # "NW":I
    .end local v16    # "t":Lcom/android/server/wm/AppWindowToken;
    .end local v23    # "tokens":Lcom/android/server/wm/AppTokenList;
    :cond_250
    move-object/from16 v0, p1

    iget v13, v0, Lcom/android/server/wm/WindowState;->mBaseLayer:I

    .line 2118
    .local v13, "myLayer":I
    add-int/lit8 v10, v3, -0x1

    .local v10, "i":I
    :goto_256
    if-ltz v10, :cond_26a

    .line 2119
    move-object/from16 v0, v27

    invoke-virtual {v0, v10}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v25

    check-cast v25, Lcom/android/server/wm/WindowState;

    .line 2120
    .local v25, "w":Lcom/android/server/wm/WindowState;
    move-object/from16 v0, v25

    iget v0, v0, Lcom/android/server/wm/WindowState;->mBaseLayer:I

    move/from16 v28, v0

    move/from16 v0, v28

    if-gt v0, v13, :cond_2bf

    .line 2124
    .end local v25    # "w":Lcom/android/server/wm/WindowState;
    :cond_26a
    sget-boolean v28, DEBUG_FOCUS_LIGHT:Z

    if-nez v28, :cond_276

    sget-boolean v28, DEBUG_WINDOW_MOVEMENT:Z

    if-nez v28, :cond_276

    sget-boolean v28, DEBUG_ADD_REMOVE:Z

    if-eqz v28, :cond_2aa

    :cond_276
    const-string v28, "WindowManager"

    new-instance v29, Ljava/lang/StringBuilder;

    invoke-direct/range {v29 .. v29}, Ljava/lang/StringBuilder;-><init>()V

    const-string v30, "Based on layer: Adding window "

    invoke-virtual/range {v29 .. v30}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v29

    move-object/from16 v0, v29

    move-object/from16 v1, p1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v29

    const-string v30, " at "

    invoke-virtual/range {v29 .. v30}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v29

    add-int/lit8 v30, v10, 0x1

    invoke-virtual/range {v29 .. v30}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v29

    const-string v30, " of "

    invoke-virtual/range {v29 .. v30}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v29

    move-object/from16 v0, v29

    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v29

    invoke-virtual/range {v29 .. v29}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v29

    invoke-static/range {v28 .. v29}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 2126
    :cond_2aa
    add-int/lit8 v28, v10, 0x1

    move-object/from16 v0, v27

    move/from16 v1, v28

    move-object/from16 v2, p1

    invoke-virtual {v0, v1, v2}, Lcom/android/server/wm/WindowList;->add(ILjava/lang/Object;)V

    .line 2127
    const/16 v28, 0x1

    move/from16 v0, v28

    move-object/from16 v1, p0

    iput-boolean v0, v1, mWindowsChanged:Z

    goto/16 :goto_12

    .line 2118
    .restart local v25    # "w":Lcom/android/server/wm/WindowState;
    :cond_2bf
    add-int/lit8 v10, v10, -0x1

    goto :goto_256
.end method

.method private addAttachedWindowToListLocked(Lcom/android/server/wm/WindowState;Z)V
    .registers 17
    .param p1, "win"    # Lcom/android/server/wm/WindowState;
    .param p2, "addToToken"    # Z

    .prologue
    .line 2182
    iget-object v6, p1, Lcom/android/server/wm/WindowState;->mToken:Lcom/android/server/wm/WindowToken;

    .line 2183
    .local v6, "token":Lcom/android/server/wm/WindowToken;
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    move-result-object v2

    .line 2184
    .local v2, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-nez v2, :cond_9

    .line 2246
    :cond_8
    :goto_8
    return-void

    .line 2187
    :cond_9
    iget-object v1, p1, Lcom/android/server/wm/WindowState;->mAttachedWindow:Lcom/android/server/wm/WindowState;

    .line 2189
    .local v1, "attached":Lcom/android/server/wm/WindowState;
    invoke-virtual {p0, v6, v2}, getTokenWindowsOnDisplay(Lcom/android/server/wm/WindowToken;Lcom/android/server/wm/DisplayContent;)Lcom/android/server/wm/WindowList;

    move-result-object v7

    .line 2193
    .local v7, "tokenWindowList":Lcom/android/server/wm/WindowList;
    invoke-virtual {v7}, Lcom/android/server/wm/WindowList;->size()I

    move-result v0

    .line 2194
    .local v0, "NA":I
    iget v5, p1, Lcom/android/server/wm/WindowState;->mSubLayer:I

    .line 2195
    .local v5, "sublayer":I
    const/high16 v4, -0x80000000

    .line 2196
    .local v4, "largestSublayer":I
    const/4 v10, 0x0

    .line 2198
    .local v10, "windowWithLargestSublayer":Lcom/android/server/wm/WindowState;
    const/4 v3, 0x0

    .local v3, "i":I
    :goto_19
    if-ge v3, v0, :cond_6e

    .line 2199
    invoke-virtual {v7, v3}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v8

    check-cast v8, Lcom/android/server/wm/WindowState;

    .line 2200
    .local v8, "w":Lcom/android/server/wm/WindowState;
    iget v9, v8, Lcom/android/server/wm/WindowState;->mSubLayer:I

    .line 2201
    .local v9, "wSublayer":I
    if-lt v9, v4, :cond_37

    .line 2202
    iget-object v11, v8, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v11, v11, Landroid/view/WindowManager$LayoutParams;->type:I

    const/16 v12, 0x3ee

    if-ne v11, v12, :cond_35

    iget-object v11, p1, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v11, v11, Landroid/view/WindowManager$LayoutParams;->type:I

    const/16 v12, 0x3ef

    if-ne v11, v12, :cond_37

    .line 2204
    :cond_35
    move v4, v9

    .line 2205
    move-object v10, v8

    .line 2208
    :cond_37
    if-gez v5, :cond_a4

    .line 2211
    if-lt v9, v5, :cond_d7

    .line 2212
    if-eqz p2, :cond_68

    .line 2213
    sget-boolean v11, DEBUG_ADD_REMOVE:Z

    if-eqz v11, :cond_63

    const-string v11, "WindowManager"

    new-instance v12, Ljava/lang/StringBuilder;

    invoke-direct {v12}, Ljava/lang/StringBuilder;-><init>()V

    const-string v13, "Adding "

    invoke-virtual {v12, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v12

    invoke-virtual {v12, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v12

    const-string v13, " to "

    invoke-virtual {v12, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v12

    invoke-virtual {v12, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v12

    invoke-virtual {v12}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v12

    invoke-static {v11, v12}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 2214
    :cond_63
    iget-object v11, v6, Lcom/android/server/wm/WindowToken;->windows:Lcom/android/server/wm/WindowList;

    invoke-virtual {v11, v3, p1}, Lcom/android/server/wm/WindowList;->add(ILjava/lang/Object;)V

    .line 2216
    :cond_68
    if-ltz v9, :cond_6b

    move-object v8, v1

    .end local v8    # "w":Lcom/android/server/wm/WindowState;
    :cond_6b
    invoke-direct {p0, v8, p1}, placeWindowBefore(Lcom/android/server/wm/WindowState;Lcom/android/server/wm/WindowState;)V

    .line 2232
    .end local v9    # "wSublayer":I
    :cond_6e
    :goto_6e
    if-lt v3, v0, :cond_8

    .line 2233
    if-eqz p2, :cond_9d

    .line 2234
    sget-boolean v11, DEBUG_ADD_REMOVE:Z

    if-eqz v11, :cond_98

    const-string v11, "WindowManager"

    new-instance v12, Ljava/lang/StringBuilder;

    invoke-direct {v12}, Ljava/lang/StringBuilder;-><init>()V

    const-string v13, "Adding "

    invoke-virtual {v12, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v12

    invoke-virtual {v12, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v12

    const-string v13, " to "

    invoke-virtual {v12, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v12

    invoke-virtual {v12, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v12

    invoke-virtual {v12}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v12

    invoke-static {v11, v12}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 2235
    :cond_98
    iget-object v11, v6, Lcom/android/server/wm/WindowToken;->windows:Lcom/android/server/wm/WindowList;

    invoke-virtual {v11, p1}, Lcom/android/server/wm/WindowList;->add(Ljava/lang/Object;)Z

    .line 2237
    :cond_9d
    if-gez v5, :cond_db

    .line 2238
    invoke-direct {p0, v1, p1}, placeWindowBefore(Lcom/android/server/wm/WindowState;Lcom/android/server/wm/WindowState;)V

    goto/16 :goto_8

    .line 2222
    .restart local v8    # "w":Lcom/android/server/wm/WindowState;
    .restart local v9    # "wSublayer":I
    :cond_a4
    if-le v9, v5, :cond_d7

    .line 2223
    if-eqz p2, :cond_d3

    .line 2224
    sget-boolean v11, DEBUG_ADD_REMOVE:Z

    if-eqz v11, :cond_ce

    const-string v11, "WindowManager"

    new-instance v12, Ljava/lang/StringBuilder;

    invoke-direct {v12}, Ljava/lang/StringBuilder;-><init>()V

    const-string v13, "Adding "

    invoke-virtual {v12, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v12

    invoke-virtual {v12, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v12

    const-string v13, " to "

    invoke-virtual {v12, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v12

    invoke-virtual {v12, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v12

    invoke-virtual {v12}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v12

    invoke-static {v11, v12}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 2225
    :cond_ce
    iget-object v11, v6, Lcom/android/server/wm/WindowToken;->windows:Lcom/android/server/wm/WindowList;

    invoke-virtual {v11, v3, p1}, Lcom/android/server/wm/WindowList;->add(ILjava/lang/Object;)V

    .line 2227
    :cond_d3
    invoke-direct {p0, v8, p1}, placeWindowBefore(Lcom/android/server/wm/WindowState;Lcom/android/server/wm/WindowState;)V

    goto :goto_6e

    .line 2198
    :cond_d7
    add-int/lit8 v3, v3, 0x1

    goto/16 :goto_19

    .line 2240
    .end local v8    # "w":Lcom/android/server/wm/WindowState;
    .end local v9    # "wSublayer":I
    :cond_db
    if-ltz v4, :cond_e2

    .end local v10    # "windowWithLargestSublayer":Lcom/android/server/wm/WindowState;
    :goto_dd
    invoke-direct {p0, v10, p1}, placeWindowAfter(Lcom/android/server/wm/WindowState;Lcom/android/server/wm/WindowState;)V

    goto/16 :goto_8

    .restart local v10    # "windowWithLargestSublayer":Lcom/android/server/wm/WindowState;
    :cond_e2
    move-object v10, v1

    goto :goto_dd
.end method

.method private addFreeWindowToListLocked(Lcom/android/server/wm/WindowState;)V
    .registers 10
    .param p1, "win"    # Lcom/android/server/wm/WindowState;

    .prologue
    .line 2132
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->getWindowList()Lcom/android/server/wm/WindowList;

    move-result-object v4

    .line 2136
    .local v4, "windows":Lcom/android/server/wm/WindowList;
    const/4 v3, 0x0

    .line 2138
    .local v3, "skipWallpaper":Z
    iget-object v5, p1, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v5, v5, Landroid/view/WindowManager$LayoutParams;->type:I

    const/16 v6, 0x89b

    if-eq v5, v6, :cond_25

    iget-object v5, p1, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v5, v5, Landroid/view/WindowManager$LayoutParams;->type:I

    const/16 v6, 0x89a

    if-eq v5, v6, :cond_25

    iget-object v5, p1, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v5, v5, Landroid/view/WindowManager$LayoutParams;->type:I

    const/16 v6, 0x899

    if-eq v5, v6, :cond_25

    iget-object v5, p1, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v5, v5, Landroid/view/WindowManager$LayoutParams;->type:I

    const/16 v6, 0x7e7

    if-ne v5, v6, :cond_26

    .line 2142
    :cond_25
    const/4 v3, 0x1

    .line 2147
    :cond_26
    const/4 v2, 0x0

    .line 2148
    .local v2, "skipFloatingLayer":Z
    iget-object v5, p1, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v5, v5, Landroid/view/WindowManager$LayoutParams;->type:I

    const/16 v6, 0x832

    if-ne v5, v6, :cond_30

    .line 2149
    const/4 v2, 0x1

    .line 2152
    :cond_30
    iget v1, p1, Lcom/android/server/wm/WindowState;->mBaseLayer:I

    .line 2154
    .local v1, "myLayer":I
    invoke-virtual {v4}, Lcom/android/server/wm/WindowList;->size()I

    move-result v5

    add-int/lit8 v0, v5, -0x1

    .local v0, "i":I
    :goto_38
    if-ltz v0, :cond_84

    .line 2156
    if-eqz v2, :cond_6a

    invoke-virtual {v4, v0}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/android/server/wm/WindowState;

    iget-boolean v5, v5, Lcom/android/server/wm/WindowState;->mIsFloatingLayer:Z

    if-eqz v5, :cond_6a

    .line 2157
    sget-boolean v5, DEBUG_WINDOW_MOVEMENT:Z

    if-nez v5, :cond_4e

    sget-boolean v5, DEBUG_ADD_REMOVE:Z

    if-eqz v5, :cond_67

    .line 2158
    :cond_4e
    const-string v5, "WindowManager"

    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v7, "skipFloatingLayerWindow : win="

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-static {v5, v6}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 2154
    :cond_67
    add-int/lit8 v0, v0, -0x1

    goto :goto_38

    .line 2162
    :cond_6a
    invoke-virtual {v4, v0}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/android/server/wm/WindowState;

    iget v5, v5, Lcom/android/server/wm/WindowState;->mBaseLayer:I

    if-gt v5, v1, :cond_67

    .line 2165
    if-eqz v3, :cond_84

    invoke-virtual {v4, v0}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/android/server/wm/WindowState;

    iget-object v5, v5, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v5, v5, Landroid/view/WindowManager$LayoutParams;->type:I

    const/16 v6, 0x7dd

    if-eq v5, v6, :cond_67

    .line 2174
    :cond_84
    add-int/lit8 v0, v0, 0x1

    .line 2175
    sget-boolean v5, DEBUG_FOCUS_LIGHT:Z

    if-nez v5, :cond_92

    sget-boolean v5, DEBUG_WINDOW_MOVEMENT:Z

    if-nez v5, :cond_92

    sget-boolean v5, DEBUG_ADD_REMOVE:Z

    if-eqz v5, :cond_c2

    :cond_92
    const-string v5, "WindowManager"

    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "Free window: Adding window "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v6

    const-string v7, " at "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v6

    const-string v7, " of "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v4}, Lcom/android/server/wm/WindowList;->size()I

    move-result v7

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-static {v5, v6}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 2177
    :cond_c2
    invoke-virtual {v4, v0, p1}, Lcom/android/server/wm/WindowList;->add(ILjava/lang/Object;)V

    .line 2178
    const/4 v5, 0x1

    iput-boolean v5, p0, mWindowsChanged:Z

    .line 2179
    return-void
.end method

.method private addWindowToListInOrderLocked(Lcom/android/server/wm/WindowState;Z)V
    .registers 14
    .param p1, "win"    # Lcom/android/server/wm/WindowState;
    .param p2, "addToToken"    # Z

    .prologue
    const/4 v7, 0x0

    const/4 v6, 0x1

    .line 2332
    sget-boolean v8, DEBUG_FOCUS_LIGHT:Z

    if-eqz v8, :cond_2d

    const-string v8, "WindowManager"

    new-instance v9, Ljava/lang/StringBuilder;

    invoke-direct {v9}, Ljava/lang/StringBuilder;-><init>()V

    const-string v10, "addWindowToListInOrderLocked: win="

    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v9

    invoke-virtual {v9, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v9

    const-string v10, " Callers="

    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v9

    const/4 v10, 0x4

    invoke-static {v10}, Landroid/os/Debug;->getCallers(I)Ljava/lang/String;

    move-result-object v10

    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v9

    invoke-virtual {v9}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v9

    invoke-static {v8, v9}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 2334
    :cond_2d
    iget-object v8, p1, Lcom/android/server/wm/WindowState;->mAttachedWindow:Lcom/android/server/wm/WindowState;

    if-nez v8, :cond_f2

    .line 2335
    iget-object v2, p1, Lcom/android/server/wm/WindowState;->mToken:Lcom/android/server/wm/WindowToken;

    .line 2336
    .local v2, "token":Lcom/android/server/wm/WindowToken;
    const/4 v4, 0x0

    .line 2337
    .local v4, "tokenWindowsPos":I
    iget-object v8, v2, Lcom/android/server/wm/WindowToken;->appWindowToken:Lcom/android/server/wm/AppWindowToken;

    if-eqz v8, :cond_e9

    .line 2338
    invoke-direct {p0, p1}, addAppWindowToListLocked(Lcom/android/server/wm/WindowState;)I

    move-result v4

    .line 2342
    :goto_3c
    if-eqz p2, :cond_69

    .line 2343
    sget-boolean v8, DEBUG_ADD_REMOVE:Z

    if-eqz v8, :cond_64

    const-string v8, "WindowManager"

    new-instance v9, Ljava/lang/StringBuilder;

    invoke-direct {v9}, Ljava/lang/StringBuilder;-><init>()V

    const-string v10, "Adding "

    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v9

    invoke-virtual {v9, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v9

    const-string v10, " to "

    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v9

    invoke-virtual {v9, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v9

    invoke-virtual {v9}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v9

    invoke-static {v8, v9}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 2344
    :cond_64
    iget-object v8, v2, Lcom/android/server/wm/WindowToken;->windows:Lcom/android/server/wm/WindowList;

    invoke-virtual {v8, v4, p1}, Lcom/android/server/wm/WindowList;->add(ILjava/lang/Object;)V

    .line 2350
    :cond_69
    iget-object v8, p1, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v8, v8, Landroid/view/WindowManager$LayoutParams;->type:I

    const/16 v9, 0x834

    if-eq v8, v9, :cond_79

    iget-object v8, p1, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v8, v8, Landroid/view/WindowManager$LayoutParams;->type:I

    const/16 v9, 0x836

    if-ne v8, v9, :cond_80

    .line 2351
    :cond_79
    iput-object p1, p0, mTopWidgetWindow:Lcom/android/server/wm/WindowState;

    .line 2352
    iput-boolean v7, p0, mSkipWidgetFocus:Z

    .line 2355
    invoke-direct {p0, v7, v6}, updateFocusedWindowLocked(IZ)Z

    .line 2372
    :cond_80
    iget-object v8, p1, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    if-eqz v8, :cond_ee

    iget-object v8, p1, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    iget-object v8, v8, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    iget-boolean v8, v8, Lcom/android/server/wm/AppWindowAnimator;->freezingScreen:Z

    if-eqz v8, :cond_ee

    move v0, v6

    .line 2378
    .local v0, "isWindowAddedInConfigurationChanging":Z
    :goto_8d
    iget-object v8, p1, Lcom/android/server/wm/WindowState;->mDisplayContent:Lcom/android/server/wm/DisplayContent;

    invoke-virtual {v8}, Lcom/android/server/wm/DisplayContent;->getDisplay()Landroid/view/Display;

    move-result-object v8

    invoke-virtual {p0, v8}, getWindowListLocked(Landroid/view/Display;)Lcom/android/server/wm/WindowList;

    move-result-object v5

    .line 2379
    .local v5, "windowsOnDisplay":Lcom/android/server/wm/WindowList;
    iget-object v8, p0, mTopWidgetWindow:Lcom/android/server/wm/WindowState;

    if-eqz v8, :cond_f0

    invoke-virtual {v5, p1}, Lcom/android/server/wm/WindowList;->indexOf(Ljava/lang/Object;)I

    move-result v8

    iget-object v9, p0, mTopWidgetWindow:Lcom/android/server/wm/WindowState;

    invoke-virtual {v5, v9}, Lcom/android/server/wm/WindowList;->indexOf(Ljava/lang/Object;)I

    move-result v9

    if-ge v8, v9, :cond_f0

    move v1, v6

    .line 2380
    .local v1, "isWindowUnderTopWidgetWindow":Z
    :goto_a8
    if-eqz v1, :cond_ae

    if-nez v0, :cond_ae

    .line 2381
    iput-boolean v6, p0, mSkipWidgetFocus:Z

    .line 2390
    .end local v0    # "isWindowAddedInConfigurationChanging":Z
    .end local v1    # "isWindowUnderTopWidgetWindow":Z
    .end local v2    # "token":Lcom/android/server/wm/WindowToken;
    .end local v4    # "tokenWindowsPos":I
    .end local v5    # "windowsOnDisplay":Lcom/android/server/wm/WindowList;
    :cond_ae
    :goto_ae
    iget-object v7, p0, mContext:Landroid/content/Context;

    invoke-static {v7}, Lcom/samsung/android/cocktailbar/CocktailBarFeatures;->isSystemBarType(Landroid/content/Context;)Z

    move-result v7

    if-eqz v7, :cond_b9

    .line 2392
    invoke-direct {p0, p1}, reArrangeWindowListForCockatilWindow(Lcom/android/server/wm/WindowState;)V

    .line 2396
    :cond_b9
    iget-object v7, p1, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    if-eqz v7, :cond_c6

    if-eqz p2, :cond_c6

    .line 2397
    iget-object v7, p1, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    iget-object v7, v7, Lcom/android/server/wm/AppWindowToken;->allAppWindows:Lcom/android/server/wm/WindowList;

    invoke-virtual {v7, p1}, Lcom/android/server/wm/WindowList;->add(Ljava/lang/Object;)Z

    .line 2404
    :cond_c6
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->canReceiveKeys()Z

    move-result v7

    if-eqz v7, :cond_e8

    iget-object v7, p1, Lcom/android/server/wm/WindowState;->mAttachedWindow:Lcom/android/server/wm/WindowState;

    if-eqz v7, :cond_e8

    .line 2405
    iget-object v7, p1, Lcom/android/server/wm/WindowState;->mToken:Lcom/android/server/wm/WindowToken;

    iget-object v8, p1, Lcom/android/server/wm/WindowState;->mDisplayContent:Lcom/android/server/wm/DisplayContent;

    invoke-virtual {p0, v7, v8}, getTokenWindowsOnDisplay(Lcom/android/server/wm/WindowToken;Lcom/android/server/wm/DisplayContent;)Lcom/android/server/wm/WindowList;

    move-result-object v3

    .line 2406
    .local v3, "tokenWindowList":Lcom/android/server/wm/WindowList;
    iget-object v7, p1, Lcom/android/server/wm/WindowState;->mAttachedWindow:Lcom/android/server/wm/WindowState;

    invoke-virtual {v3, v7}, Lcom/android/server/wm/WindowList;->indexOf(Ljava/lang/Object;)I

    move-result v7

    iget-object v8, p0, mTopWidgetWindow:Lcom/android/server/wm/WindowState;

    invoke-virtual {v3, v8}, Lcom/android/server/wm/WindowList;->indexOf(Ljava/lang/Object;)I

    move-result v8

    if-ge v7, v8, :cond_e8

    .line 2410
    iput-boolean v6, p0, mSkipWidgetFocus:Z

    .line 2415
    .end local v3    # "tokenWindowList":Lcom/android/server/wm/WindowList;
    :cond_e8
    return-void

    .line 2340
    .restart local v2    # "token":Lcom/android/server/wm/WindowToken;
    .restart local v4    # "tokenWindowsPos":I
    :cond_e9
    invoke-direct {p0, p1}, addFreeWindowToListLocked(Lcom/android/server/wm/WindowState;)V

    goto/16 :goto_3c

    :cond_ee
    move v0, v7

    .line 2372
    goto :goto_8d

    .restart local v0    # "isWindowAddedInConfigurationChanging":Z
    .restart local v5    # "windowsOnDisplay":Lcom/android/server/wm/WindowList;
    :cond_f0
    move v1, v7

    .line 2379
    goto :goto_a8

    .line 2386
    .end local v0    # "isWindowAddedInConfigurationChanging":Z
    .end local v2    # "token":Lcom/android/server/wm/WindowToken;
    .end local v4    # "tokenWindowsPos":I
    .end local v5    # "windowsOnDisplay":Lcom/android/server/wm/WindowList;
    :cond_f2
    invoke-direct {p0, p1, p2}, addAttachedWindowToListLocked(Lcom/android/server/wm/WindowState;Z)V

    goto :goto_ae
.end method

.method private adjustDisplaySizeRanges(Landroid/view/DisplayInfo;III)V
    .registers 8
    .param p1, "displayInfo"    # Landroid/view/DisplayInfo;
    .param p2, "rotation"    # I
    .param p3, "dw"    # I
    .param p4, "dh"    # I

    .prologue
    .line 12481
    iget-object v2, p0, mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v2, p3, p4, p2}, Landroid/view/WindowManagerPolicy;->getConfigDisplayWidth(III)I

    move-result v1

    .line 12482
    .local v1, "width":I
    iget v2, p1, Landroid/view/DisplayInfo;->smallestNominalAppWidth:I

    if-ge v1, v2, :cond_c

    .line 12483
    iput v1, p1, Landroid/view/DisplayInfo;->smallestNominalAppWidth:I

    .line 12485
    :cond_c
    iget v2, p1, Landroid/view/DisplayInfo;->largestNominalAppWidth:I

    if-le v1, v2, :cond_12

    .line 12486
    iput v1, p1, Landroid/view/DisplayInfo;->largestNominalAppWidth:I

    .line 12488
    :cond_12
    iget-object v2, p0, mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v2, p3, p4, p2}, Landroid/view/WindowManagerPolicy;->getConfigDisplayHeight(III)I

    move-result v0

    .line 12489
    .local v0, "height":I
    iget v2, p1, Landroid/view/DisplayInfo;->smallestNominalAppHeight:I

    if-ge v0, v2, :cond_1e

    .line 12490
    iput v0, p1, Landroid/view/DisplayInfo;->smallestNominalAppHeight:I

    .line 12492
    :cond_1e
    iget v2, p1, Landroid/view/DisplayInfo;->largestNominalAppHeight:I

    if-le v0, v2, :cond_24

    .line 12493
    iput v0, p1, Landroid/view/DisplayInfo;->largestNominalAppHeight:I

    .line 12495
    :cond_24
    return-void
.end method

.method private appTokenDrawnForMultiWindowLocked(Lcom/android/server/wm/AppWindowToken;)V
    .registers 9
    .param p1, "wtoken"    # Lcom/android/server/wm/AppWindowToken;

    .prologue
    const/4 v6, 0x0

    .line 21059
    if-nez p1, :cond_4

    .line 21087
    :cond_3
    :goto_3
    return-void

    .line 21062
    :cond_4
    const/4 v0, 0x0

    .line 21066
    .local v0, "displayId":I
    iget-object v3, p0, mAnimator:Lcom/android/server/wm/WindowAnimator;

    invoke-virtual {v3, v0}, Lcom/android/server/wm/WindowAnimator;->getMultiWindowTransitionLocked(I)Lcom/android/server/wm/MultiWindowTransition;

    move-result-object v2

    .line 21067
    .local v2, "transition":Lcom/android/server/wm/MultiWindowTransition;
    if-eqz v2, :cond_16

    invoke-virtual {v2}, Lcom/android/server/wm/MultiWindowTransition;->isTransitionSet()Z

    move-result v3

    if-eqz v3, :cond_16

    .line 21068
    invoke-virtual {v2, p1}, Lcom/android/server/wm/MultiWindowTransition;->setApplicationDrawn(Lcom/android/server/wm/AppWindowToken;)V

    .line 21071
    :cond_16
    iget-object v3, p1, Lcom/android/server/wm/AppWindowToken;->appMultiWindowStyle:Lcom/samsung/android/multiwindow/MultiWindowStyle;

    const/4 v4, 0x4

    invoke-virtual {v3, v4}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->isEnabled(I)Z

    move-result v3

    if-nez v3, :cond_3

    .line 21074
    iget-boolean v3, p1, Lcom/android/server/wm/AppWindowToken;->mMultiWindowStyleChanging:Z

    if-eqz v3, :cond_2e

    .line 21076
    iput-boolean v6, p1, Lcom/android/server/wm/AppWindowToken;->mMultiWindowStyleChanging:Z

    .line 21077
    iget-object v3, p0, mH:Lcom/android/server/wm/WindowManagerService$H;

    const/16 v4, 0x68

    iget-object v5, p1, Lcom/android/server/wm/AppWindowToken;->token:Landroid/os/IBinder;

    invoke-virtual {v3, v4, v5}, Lcom/android/server/wm/WindowManagerService$H;->removeMessages(ILjava/lang/Object;)V

    .line 21079
    :cond_2e
    iget-object v3, p0, mContext:Landroid/content/Context;

    invoke-static {v3}, Lcom/samsung/android/multiwindow/MultiWindowFeatures;->isSupportStyleTransition(Landroid/content/Context;)Z

    move-result v3

    if-eqz v3, :cond_3

    iget-object v3, p0, mContext:Landroid/content/Context;

    invoke-static {v3}, Lcom/samsung/android/multiwindow/MultiWindowFeatures;->isSupportSimplificationUI(Landroid/content/Context;)Z

    move-result v3

    if-nez v3, :cond_3

    invoke-virtual {p1}, Lcom/android/server/wm/AppWindowToken;->findMainWindow()Lcom/android/server/wm/WindowState;

    move-result-object v3

    if-eqz v3, :cond_3

    iget-object v3, p0, mContext:Landroid/content/Context;

    invoke-virtual {v3}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v3

    const-string/jumbo v4, "do_not_show_gesture_help"

    const/4 v5, -0x2

    invoke-static {v3, v4, v6, v5}, Landroid/provider/Settings$System;->getIntForUser(Landroid/content/ContentResolver;Ljava/lang/String;II)I

    move-result v3

    if-nez v3, :cond_3

    .line 21084
    iget-object v3, p0, mH:Lcom/android/server/wm/WindowManagerService$H;

    const/16 v4, 0x66

    invoke-virtual {v3, v4, p1}, Lcom/android/server/wm/WindowManagerService$H;->obtainMessage(ILjava/lang/Object;)Landroid/os/Message;

    move-result-object v1

    .line 21085
    .local v1, "m":Landroid/os/Message;
    iget-object v3, p0, mH:Lcom/android/server/wm/WindowManagerService$H;

    invoke-virtual {v3, v1}, Lcom/android/server/wm/WindowManagerService$H;->sendMessage(Landroid/os/Message;)Z

    goto :goto_3
.end method

.method private applyAnimationLocked(Lcom/android/server/wm/AppWindowToken;Landroid/view/WindowManager$LayoutParams;IZZ)Z
    .registers 39
    .param p1, "atoken"    # Lcom/android/server/wm/AppWindowToken;
    .param p2, "lp"    # Landroid/view/WindowManager$LayoutParams;
    .param p3, "transit"    # I
    .param p4, "enter"    # Z
    .param p5, "isVoiceInteraction"    # Z

    .prologue
    .line 5929
    const/16 v23, 0x0

    .line 5930
    .local v23, "dualScreenTransition":Z
    const/16 v20, 0x1

    .line 5931
    .local v20, "appTransitAnimAllowed":Z
    const/16 v17, 0x0

    .line 5944
    .local v17, "aTokenDisplayId":I
    invoke-virtual/range {p0 .. p0}, okToDisplay()Z

    move-result v25

    .line 5945
    .local v25, "goodToDisplay":Z
    move-object/from16 v0, p0

    iget-object v2, v0, mAppTransition:Lcom/android/server/wm/AppTransition;

    .line 5954
    .local v2, "mAppTransition":Lcom/android/server/wm/AppTransition;
    if-eqz v25, :cond_345

    if-eqz v20, :cond_345

    .line 5955
    invoke-virtual/range {p0 .. p0}, getDefaultDisplayInfoLocked()Landroid/view/DisplayInfo;

    move-result-object v22

    .line 5958
    .local v22, "displayInfo":Landroid/view/DisplayInfo;
    move-object/from16 v0, v22

    iget v6, v0, Landroid/view/DisplayInfo;->appWidth:I

    .line 5959
    .local v6, "width":I
    move-object/from16 v0, v22

    iget v7, v0, Landroid/view/DisplayInfo;->appHeight:I

    .line 5962
    .local v7, "height":I
    move-object/from16 v0, p1

    iget-object v3, v0, Lcom/android/server/wm/AppWindowToken;->appMultiWindowStyle:Lcom/samsung/android/multiwindow/MultiWindowStyle;

    if-eqz v3, :cond_88

    move-object/from16 v0, p1

    iget-object v3, v0, Lcom/android/server/wm/AppWindowToken;->appMultiWindowStyle:Lcom/samsung/android/multiwindow/MultiWindowStyle;

    invoke-virtual {v3}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->isNormal()Z

    move-result v3

    if-nez v3, :cond_88

    .line 5963
    invoke-virtual/range {p1 .. p1}, Lcom/android/server/wm/AppWindowToken;->findMainWindow()Lcom/android/server/wm/WindowState;

    move-result-object v32

    .line 5964
    .local v32, "win":Lcom/android/server/wm/WindowState;
    if-eqz v32, :cond_29e

    .line 5965
    new-instance v29, Landroid/graphics/Rect;

    invoke-direct/range {v29 .. v29}, Landroid/graphics/Rect;-><init>()V

    .line 5966
    .local v29, "stackBounds":Landroid/graphics/Rect;
    move-object/from16 v0, v32

    move-object/from16 v1, v29

    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowState;->getStackBounds(Landroid/graphics/Rect;)V

    .line 5967
    invoke-virtual/range {v29 .. v29}, Landroid/graphics/Rect;->width()I

    move-result v3

    if-lez v3, :cond_26a

    .line 5968
    if-nez p4, :cond_260

    const/16 v3, 0xd

    move/from16 v0, p3

    if-ne v0, v3, :cond_260

    invoke-virtual/range {v32 .. v32}, Lcom/android/server/wm/WindowState;->getMultiWindowStyleLw()Lcom/samsung/android/multiwindow/MultiWindowStyle;

    move-result-object v3

    invoke-virtual {v3}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->isSplit()Z

    move-result v3

    if-eqz v3, :cond_260

    .line 5970
    sget-boolean v3, DEBUG_APP_TRANSITIONS:Z

    if-nez v3, :cond_60

    sget-boolean v3, DEBUG_ANIM:Z

    if-eqz v3, :cond_88

    .line 5971
    :cond_60
    const-string v3, "WindowManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "applyAnimation: use default value (width="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, ",height="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4, v7}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, ")"

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v3, v4}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 5993
    .end local v29    # "stackBounds":Landroid/graphics/Rect;
    .end local v32    # "win":Lcom/android/server/wm/WindowState;
    :cond_88
    :goto_88
    move-object/from16 v0, p0

    iget-object v3, v0, mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v3}, Landroid/view/WindowManagerPolicy;->isForceHideBySViewCover()Z

    move-result v3

    if-eqz v3, :cond_a6

    .line 5994
    move-object/from16 v0, p0

    iget-object v3, v0, mPolicy:Landroid/view/WindowManagerPolicy;

    move-object/from16 v0, v22

    invoke-interface {v3, v0}, Landroid/view/WindowManagerPolicy;->getSViewCoverWidth(Landroid/view/DisplayInfo;)I

    move-result v6

    .line 5995
    move-object/from16 v0, p0

    iget-object v3, v0, mPolicy:Landroid/view/WindowManagerPolicy;

    move-object/from16 v0, v22

    invoke-interface {v3, v0}, Landroid/view/WindowManagerPolicy;->getSViewCoverHeight(Landroid/view/DisplayInfo;)I

    move-result v7

    .line 5999
    :cond_a6
    sget-boolean v3, DEBUG_APP_TRANSITIONS:Z

    if-nez v3, :cond_ae

    sget-boolean v3, DEBUG_ANIM:Z

    if-eqz v3, :cond_c8

    :cond_ae
    const-string v3, "WindowManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "applyAnimation: atoken="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p1

    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v3, v4}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 6003
    :cond_c8
    invoke-virtual/range {p1 .. p1}, Lcom/android/server/wm/AppWindowToken;->findMainWindow()Lcom/android/server/wm/WindowState;

    move-result-object v32

    .line 6004
    .restart local v32    # "win":Lcom/android/server/wm/WindowState;
    new-instance v9, Landroid/graphics/Rect;

    const/4 v3, 0x0

    const/4 v4, 0x0

    invoke-direct {v9, v3, v4, v6, v7}, Landroid/graphics/Rect;-><init>(IIII)V

    .line 6005
    .local v9, "containingFrame":Landroid/graphics/Rect;
    new-instance v10, Landroid/graphics/Rect;

    invoke-direct {v10}, Landroid/graphics/Rect;-><init>()V

    .line 6006
    .local v10, "contentInsets":Landroid/graphics/Rect;
    new-instance v11, Landroid/graphics/Rect;

    const/4 v3, 0x0

    const/4 v4, 0x0

    invoke-direct {v11, v3, v4, v6, v7}, Landroid/graphics/Rect;-><init>(IIII)V

    .line 6007
    .local v11, "appFrame":Landroid/graphics/Rect;
    const/4 v12, 0x1

    .line 6008
    .local v12, "isFullScreen":Z
    if-eqz v32, :cond_131

    .line 6009
    move-object/from16 v0, v32

    iget-object v3, v0, Lcom/android/server/wm/WindowState;->mContainingFrame:Landroid/graphics/Rect;

    if-eqz v3, :cond_101

    .line 6010
    move-object/from16 v0, v32

    iget-object v3, v0, Lcom/android/server/wm/WindowState;->mContainingFrame:Landroid/graphics/Rect;

    invoke-virtual {v9, v3}, Landroid/graphics/Rect;->set(Landroid/graphics/Rect;)V

    .line 6012
    move-object/from16 v0, v32

    iget-object v3, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v3, v3, Landroid/view/WindowManager$LayoutParams;->privateFlags:I

    const/high16 v4, 0x1000000

    and-int/2addr v3, v4

    if-eqz v3, :cond_101

    .line 6013
    move-object/from16 v0, v32

    iget v3, v0, Lcom/android/server/wm/WindowState;->mDssScale:F

    invoke-virtual {v9, v3}, Landroid/graphics/Rect;->scale(F)V

    .line 6017
    :cond_101
    move-object/from16 v0, v32

    iget-object v3, v0, Lcom/android/server/wm/WindowState;->mContentInsets:Landroid/graphics/Rect;

    if-eqz v3, :cond_10e

    .line 6018
    move-object/from16 v0, v32

    iget-object v3, v0, Lcom/android/server/wm/WindowState;->mContentInsets:Landroid/graphics/Rect;

    invoke-virtual {v10, v3}, Landroid/graphics/Rect;->set(Landroid/graphics/Rect;)V

    .line 6020
    :cond_10e
    move-object/from16 v0, v32

    iget-object v3, v0, Lcom/android/server/wm/WindowState;->mFrame:Landroid/graphics/Rect;

    if-eqz v3, :cond_11b

    .line 6021
    move-object/from16 v0, v32

    iget-object v3, v0, Lcom/android/server/wm/WindowState;->mFrame:Landroid/graphics/Rect;

    invoke-virtual {v11, v3}, Landroid/graphics/Rect;->set(Landroid/graphics/Rect;)V

    .line 6023
    :cond_11b
    move-object/from16 v0, v32

    iget v3, v0, Lcom/android/server/wm/WindowState;->mSystemUiVisibility:I

    and-int/lit16 v3, v3, 0x500

    const/16 v4, 0x500

    if-eq v3, v4, :cond_130

    move-object/from16 v0, v32

    iget-object v3, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v3, v3, Landroid/view/WindowManager$LayoutParams;->flags:I

    const/high16 v4, -0x80000000

    and-int/2addr v3, v4

    if-eqz v3, :cond_2a8

    :cond_130
    const/4 v12, 0x1

    .line 6029
    :cond_131
    :goto_131
    move-object/from16 v0, p1

    iget-boolean v3, v0, Lcom/android/server/wm/AppWindowToken;->mLaunchTaskBehind:Z

    if-eqz v3, :cond_139

    .line 6033
    const/16 p4, 0x0

    .line 6043
    :cond_139
    move-object/from16 v0, p0

    iget-object v0, v0, mCurConfiguration:Landroid/content/res/Configuration;

    move-object/from16 v27, v0

    .line 6046
    .local v27, "mCurConfiguration":Landroid/content/res/Configuration;
    const/4 v14, 0x0

    .line 6047
    .local v14, "isFixedOrientation":Z
    move-object/from16 v0, p0

    iget v15, v0, mRotation:I

    .line 6049
    .local v15, "rotation":I
    move-object/from16 v0, p1

    iget-object v3, v0, Lcom/android/server/wm/AppWindowToken;->allAppWindows:Lcom/android/server/wm/WindowList;

    invoke-virtual {v3}, Lcom/android/server/wm/WindowList;->iterator()Ljava/util/Iterator;

    move-result-object v26

    .local v26, "i$":Ljava/util/Iterator;
    :cond_14c
    invoke-interface/range {v26 .. v26}, Ljava/util/Iterator;->hasNext()Z

    move-result v3

    if-eqz v3, :cond_197

    invoke-interface/range {v26 .. v26}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v31

    check-cast v31, Lcom/android/server/wm/WindowState;

    .line 6050
    .local v31, "w":Lcom/android/server/wm/WindowState;
    move-object/from16 v0, v31

    iget-object v3, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v3, v3, Landroid/view/WindowManager$LayoutParams;->samsungFlags:I

    and-int/lit8 v3, v3, 0xc

    if-eqz v3, :cond_163

    .line 6052
    const/4 v14, 0x1

    .line 6054
    :cond_163
    move-object/from16 v0, v31

    iget-object v3, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v3, v3, Landroid/view/WindowManager$LayoutParams;->samsungFlags:I

    and-int/lit8 v3, v3, 0x4

    if-eqz v3, :cond_177

    move-object/from16 v0, v22

    iget v3, v0, Landroid/view/DisplayInfo;->appHeight:I

    move-object/from16 v0, v22

    iget v4, v0, Landroid/view/DisplayInfo;->appWidth:I

    if-gt v3, v4, :cond_18b

    :cond_177
    move-object/from16 v0, v31

    iget-object v3, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v3, v3, Landroid/view/WindowManager$LayoutParams;->samsungFlags:I

    and-int/lit8 v3, v3, 0x8

    if-eqz v3, :cond_14c

    move-object/from16 v0, v22

    iget v3, v0, Landroid/view/DisplayInfo;->appWidth:I

    move-object/from16 v0, v22

    iget v4, v0, Landroid/view/DisplayInfo;->appHeight:I

    if-le v3, v4, :cond_14c

    .line 6060
    :cond_18b
    iget v0, v9, Landroid/graphics/Rect;->right:I

    move/from16 v30, v0

    .line 6061
    .local v30, "tmp":I
    iget v3, v9, Landroid/graphics/Rect;->bottom:I

    iput v3, v9, Landroid/graphics/Rect;->right:I

    .line 6062
    move/from16 v0, v30

    iput v0, v9, Landroid/graphics/Rect;->bottom:I

    .line 6066
    .end local v30    # "tmp":I
    .end local v31    # "w":Lcom/android/server/wm/WindowState;
    :cond_197
    if-eqz v14, :cond_1a9

    .line 6067
    move-object/from16 v0, p0

    move/from16 v1, v17

    invoke-virtual {v0, v1}, getDisplayContentLocked(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v21

    .line 6068
    .local v21, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-eqz v21, :cond_1a9

    .line 6069
    invoke-virtual/range {v21 .. v21}, Lcom/android/server/wm/DisplayContent;->getDisplayInfo()Landroid/view/DisplayInfo;

    move-result-object v3

    iget v15, v3, Landroid/view/DisplayInfo;->rotation:I

    .line 6074
    .end local v21    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :cond_1a9
    move-object/from16 v0, v27

    iget v8, v0, Landroid/content/res/Configuration;->orientation:I

    move-object/from16 v3, p2

    move/from16 v4, p3

    move/from16 v5, p4

    move/from16 v13, p5

    invoke-virtual/range {v2 .. v15}, Lcom/android/server/wm/AppTransition;->loadAnimation(Landroid/view/WindowManager$LayoutParams;IZIIILandroid/graphics/Rect;Landroid/graphics/Rect;Landroid/graphics/Rect;ZZZI)Landroid/view/animation/Animation;

    move-result-object v16

    .line 6078
    .local v16, "a":Landroid/view/animation/Animation;
    sget-boolean v3, DEBUG_APP_TRANSITIONS:Z

    if-eqz v3, :cond_20b

    .line 6079
    const-string v3, "WindowManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "applyAnimationLocked() closing app size : "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p0

    iget-object v5, v0, mClosingApps:Landroid/util/ArraySet;

    invoke-virtual {v5}, Landroid/util/ArraySet;->size()I

    move-result v5

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, " opening app size : "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p0

    iget-object v5, v0, mOpeningApps:Landroid/util/ArraySet;

    invoke-virtual {v5}, Landroid/util/ArraySet;->size()I

    move-result v5

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v3, v4}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 6081
    const-string v3, "WindowManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "applyAnimationLocked() fullscreen="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p1

    iget-boolean v5, v0, Lcom/android/server/wm/AppWindowToken;->appFullscreen:Z

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v3, v4}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 6083
    :cond_20b
    invoke-virtual {v2}, Lcom/android/server/wm/AppTransition;->isNextThumbnailTransitionAspectScaled()Z

    move-result v3

    if-eqz v3, :cond_2e5

    move-object/from16 v0, p0

    iget-object v3, v0, mClosingApps:Landroid/util/ArraySet;

    invoke-virtual {v3}, Landroid/util/ArraySet;->size()I

    move-result v3

    const/4 v4, 0x1

    if-gt v3, v4, :cond_227

    move-object/from16 v0, p0

    iget-object v3, v0, mOpeningApps:Landroid/util/ArraySet;

    invoke-virtual {v3}, Landroid/util/ArraySet;->size()I

    move-result v3

    const/4 v4, 0x1

    if-le v3, v4, :cond_2e5

    .line 6092
    :cond_227
    const/16 v18, 0x0

    .line 6093
    .local v18, "alphaAnimationShouldApplytoThisAppToken":Z
    move-object/from16 v0, p1

    iget-boolean v3, v0, Lcom/android/server/wm/AppWindowToken;->appFullscreen:Z

    if-eqz v3, :cond_2ab

    .line 6094
    move-object/from16 v0, p0

    iget-object v3, v0, mClosingApps:Landroid/util/ArraySet;

    invoke-virtual {v3}, Landroid/util/ArraySet;->iterator()Ljava/util/Iterator;

    move-result-object v26

    :cond_237
    :goto_237
    invoke-interface/range {v26 .. v26}, Ljava/util/Iterator;->hasNext()Z

    move-result v3

    if-eqz v3, :cond_2ab

    invoke-interface/range {v26 .. v26}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v19

    check-cast v19, Lcom/android/server/wm/AppWindowToken;

    .line 6095
    .local v19, "app":Lcom/android/server/wm/AppWindowToken;
    move-object/from16 v0, v19

    iget-boolean v3, v0, Lcom/android/server/wm/AppWindowToken;->appFullscreen:Z

    if-nez v3, :cond_237

    move-object/from16 v0, v19

    iget-object v3, v0, Lcom/android/server/wm/AppWindowToken;->mTask:Lcom/android/server/wm/Task;

    if-eqz v3, :cond_237

    move-object/from16 v0, p1

    iget-object v3, v0, Lcom/android/server/wm/AppWindowToken;->mTask:Lcom/android/server/wm/Task;

    iget v3, v3, Lcom/android/server/wm/Task;->mTaskId:I

    move-object/from16 v0, v19

    iget-object v4, v0, Lcom/android/server/wm/AppWindowToken;->mTask:Lcom/android/server/wm/Task;

    iget v4, v4, Lcom/android/server/wm/Task;->mTaskId:I

    if-eq v3, v4, :cond_237

    .line 6097
    const/16 v18, 0x1

    goto :goto_237

    .line 5973
    .end local v9    # "containingFrame":Landroid/graphics/Rect;
    .end local v10    # "contentInsets":Landroid/graphics/Rect;
    .end local v11    # "appFrame":Landroid/graphics/Rect;
    .end local v12    # "isFullScreen":Z
    .end local v14    # "isFixedOrientation":Z
    .end local v15    # "rotation":I
    .end local v16    # "a":Landroid/view/animation/Animation;
    .end local v18    # "alphaAnimationShouldApplytoThisAppToken":Z
    .end local v19    # "app":Lcom/android/server/wm/AppWindowToken;
    .end local v26    # "i$":Ljava/util/Iterator;
    .end local v27    # "mCurConfiguration":Landroid/content/res/Configuration;
    .restart local v29    # "stackBounds":Landroid/graphics/Rect;
    :cond_260
    invoke-virtual/range {v29 .. v29}, Landroid/graphics/Rect;->centerX()I

    move-result v6

    .line 5974
    invoke-virtual/range {v29 .. v29}, Landroid/graphics/Rect;->centerY()I

    move-result v7

    goto/16 :goto_88

    .line 5976
    :cond_26a
    move-object/from16 v0, p1

    iget-object v3, v0, Lcom/android/server/wm/AppWindowToken;->appMultiWindowStyle:Lcom/samsung/android/multiwindow/MultiWindowStyle;

    invoke-virtual {v3}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->isCascade()Z

    move-result v3

    if-eqz v3, :cond_28e

    .line 5977
    move-object/from16 v0, p1

    iget-object v3, v0, Lcom/android/server/wm/AppWindowToken;->appMultiWindowStyle:Lcom/samsung/android/multiwindow/MultiWindowStyle;

    invoke-virtual {v3}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->getBounds()Landroid/graphics/Rect;

    move-result-object v3

    invoke-virtual {v3}, Landroid/graphics/Rect;->centerX()I

    move-result v6

    .line 5978
    move-object/from16 v0, p1

    iget-object v3, v0, Lcom/android/server/wm/AppWindowToken;->appMultiWindowStyle:Lcom/samsung/android/multiwindow/MultiWindowStyle;

    invoke-virtual {v3}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->getBounds()Landroid/graphics/Rect;

    move-result-object v3

    invoke-virtual {v3}, Landroid/graphics/Rect;->centerY()I

    move-result v7

    goto/16 :goto_88

    .line 5980
    :cond_28e
    invoke-virtual/range {v32 .. v32}, Lcom/android/server/wm/WindowState;->getShownFrameLw()Landroid/graphics/RectF;

    move-result-object v28

    .line 5981
    .local v28, "showFrame":Landroid/graphics/RectF;
    invoke-virtual/range {v28 .. v28}, Landroid/graphics/RectF;->centerX()F

    move-result v3

    float-to-int v6, v3

    .line 5982
    invoke-virtual/range {v28 .. v28}, Landroid/graphics/RectF;->centerY()F

    move-result v3

    float-to-int v7, v3

    goto/16 :goto_88

    .line 5985
    .end local v28    # "showFrame":Landroid/graphics/RectF;
    .end local v29    # "stackBounds":Landroid/graphics/Rect;
    :cond_29e
    move-object/from16 v0, v22

    iget v6, v0, Landroid/view/DisplayInfo;->appWidth:I

    .line 5986
    move-object/from16 v0, v22

    iget v7, v0, Landroid/view/DisplayInfo;->appHeight:I

    goto/16 :goto_88

    .line 6023
    .restart local v9    # "containingFrame":Landroid/graphics/Rect;
    .restart local v10    # "contentInsets":Landroid/graphics/Rect;
    .restart local v11    # "appFrame":Landroid/graphics/Rect;
    .restart local v12    # "isFullScreen":Z
    :cond_2a8
    const/4 v12, 0x0

    goto/16 :goto_131

    .line 6101
    .restart local v14    # "isFixedOrientation":Z
    .restart local v15    # "rotation":I
    .restart local v16    # "a":Landroid/view/animation/Animation;
    .restart local v18    # "alphaAnimationShouldApplytoThisAppToken":Z
    .restart local v26    # "i$":Ljava/util/Iterator;
    .restart local v27    # "mCurConfiguration":Landroid/content/res/Configuration;
    :cond_2ab
    invoke-virtual {v2}, Lcom/android/server/wm/AppTransition;->isNextThumbnailTransitionScaleUp()Z

    move-result v3

    if-eqz v3, :cond_32c

    .line 6103
    if-eqz p4, :cond_2cf

    if-eqz v18, :cond_2cf

    .line 6104
    const-string v3, "WindowManager"

    const-string v4, "applied fade in animation for entering fullscreen app"

    invoke-static {v3, v4}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 6105
    new-instance v16, Landroid/view/animation/AlphaAnimation;

    .end local v16    # "a":Landroid/view/animation/Animation;
    const/4 v3, 0x0

    const/high16 v4, 0x3f800000    # 1.0f

    move-object/from16 v0, v16

    invoke-direct {v0, v3, v4}, Landroid/view/animation/AlphaAnimation;-><init>(FF)V

    .line 6106
    .restart local v16    # "a":Landroid/view/animation/Animation;
    const/4 v3, -0x1

    move-object/from16 v0, v16

    invoke-virtual {v0, v3}, Landroid/view/animation/Animation;->setZAdjustment(I)V

    .line 6107
    invoke-virtual {v2}, Lcom/android/server/wm/AppTransition;->appliedAlphaAnimationInsteadOfScaleAnimation()V

    .line 6118
    :cond_2cf
    :goto_2cf
    if-eqz v16, :cond_2e5

    invoke-virtual {v2}, Lcom/android/server/wm/AppTransition;->isAlphaAnimationAppliedInsteadOfScaleAnimation()Z

    move-result v3

    if-eqz v3, :cond_2e5

    .line 6119
    const-wide/16 v4, 0xc8

    move-object/from16 v0, v16

    invoke-virtual {v0, v4, v5}, Landroid/view/animation/Animation;->setDuration(J)V

    .line 6120
    iget-object v3, v2, Lcom/android/server/wm/AppTransition;->mAlphaTransitionInterpolator:Landroid/view/animation/Interpolator;

    move-object/from16 v0, v16

    invoke-virtual {v0, v3}, Landroid/view/animation/Animation;->setInterpolator(Landroid/view/animation/Interpolator;)V

    .line 6125
    .end local v18    # "alphaAnimationShouldApplytoThisAppToken":Z
    :cond_2e5
    if-eqz v16, :cond_322

    .line 6126
    sget-boolean v3, DEBUG_ANIM:Z

    if-eqz v3, :cond_315

    .line 6127
    const/16 v24, 0x0

    .line 6132
    .local v24, "e":Ljava/lang/RuntimeException;
    const-string v3, "WindowManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Loaded animation "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, v16

    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, " for "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p1

    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    move-object/from16 v0, v24

    invoke-static {v3, v4, v0}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 6134
    .end local v24    # "e":Ljava/lang/RuntimeException;
    :cond_315
    move-object/from16 v0, p1

    iget-object v3, v0, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    invoke-virtual {v2}, Lcom/android/server/wm/AppTransition;->canSkipFirstFrame()Z

    move-result v4

    move-object/from16 v0, v16

    invoke-virtual {v3, v0, v6, v7, v4}, Lcom/android/server/wm/AppWindowAnimator;->setAnimation(Landroid/view/animation/Animation;IIZ)V

    .line 6141
    .end local v6    # "width":I
    .end local v7    # "height":I
    .end local v9    # "containingFrame":Landroid/graphics/Rect;
    .end local v10    # "contentInsets":Landroid/graphics/Rect;
    .end local v11    # "appFrame":Landroid/graphics/Rect;
    .end local v12    # "isFullScreen":Z
    .end local v14    # "isFixedOrientation":Z
    .end local v15    # "rotation":I
    .end local v16    # "a":Landroid/view/animation/Animation;
    .end local v22    # "displayInfo":Landroid/view/DisplayInfo;
    .end local v26    # "i$":Ljava/util/Iterator;
    .end local v27    # "mCurConfiguration":Landroid/content/res/Configuration;
    .end local v32    # "win":Lcom/android/server/wm/WindowState;
    :cond_322
    :goto_322
    move-object/from16 v0, p1

    iget-object v3, v0, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    iget-object v3, v3, Lcom/android/server/wm/AppWindowAnimator;->animation:Landroid/view/animation/Animation;

    if-eqz v3, :cond_34d

    const/4 v3, 0x1

    :goto_32b
    return v3

    .line 6111
    .restart local v6    # "width":I
    .restart local v7    # "height":I
    .restart local v9    # "containingFrame":Landroid/graphics/Rect;
    .restart local v10    # "contentInsets":Landroid/graphics/Rect;
    .restart local v11    # "appFrame":Landroid/graphics/Rect;
    .restart local v12    # "isFullScreen":Z
    .restart local v14    # "isFixedOrientation":Z
    .restart local v15    # "rotation":I
    .restart local v16    # "a":Landroid/view/animation/Animation;
    .restart local v18    # "alphaAnimationShouldApplytoThisAppToken":Z
    .restart local v22    # "displayInfo":Landroid/view/DisplayInfo;
    .restart local v26    # "i$":Ljava/util/Iterator;
    .restart local v27    # "mCurConfiguration":Landroid/content/res/Configuration;
    .restart local v32    # "win":Lcom/android/server/wm/WindowState;
    :cond_32c
    if-nez p4, :cond_2cf

    if-eqz v18, :cond_2cf

    .line 6112
    const-string v3, "WindowManager"

    const-string v4, "applied fade out animation for exiting fullscreen app"

    invoke-static {v3, v4}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 6114
    new-instance v16, Landroid/view/animation/AlphaAnimation;

    .end local v16    # "a":Landroid/view/animation/Animation;
    const/high16 v3, 0x3f800000    # 1.0f

    const/4 v4, 0x0

    move-object/from16 v0, v16

    invoke-direct {v0, v3, v4}, Landroid/view/animation/AlphaAnimation;-><init>(FF)V

    .line 6115
    .restart local v16    # "a":Landroid/view/animation/Animation;
    invoke-virtual {v2}, Lcom/android/server/wm/AppTransition;->appliedAlphaAnimationInsteadOfScaleAnimation()V

    goto :goto_2cf

    .line 6138
    .end local v6    # "width":I
    .end local v7    # "height":I
    .end local v9    # "containingFrame":Landroid/graphics/Rect;
    .end local v10    # "contentInsets":Landroid/graphics/Rect;
    .end local v11    # "appFrame":Landroid/graphics/Rect;
    .end local v12    # "isFullScreen":Z
    .end local v14    # "isFixedOrientation":Z
    .end local v15    # "rotation":I
    .end local v16    # "a":Landroid/view/animation/Animation;
    .end local v18    # "alphaAnimationShouldApplytoThisAppToken":Z
    .end local v22    # "displayInfo":Landroid/view/DisplayInfo;
    .end local v26    # "i$":Ljava/util/Iterator;
    .end local v27    # "mCurConfiguration":Landroid/content/res/Configuration;
    .end local v32    # "win":Lcom/android/server/wm/WindowState;
    :cond_345
    move-object/from16 v0, p1

    iget-object v3, v0, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    invoke-virtual {v3}, Lcom/android/server/wm/AppWindowAnimator;->clearAnimation()V

    goto :goto_322

    .line 6141
    :cond_34d
    const/4 v3, 0x0

    goto :goto_32b
.end method

.method private applyDualScreenOrientationPolicyLocked(I)I
    .registers 6
    .param p1, "displayId"    # I

    .prologue
    .line 6936
    invoke-virtual {p0, p1}, getOrientationLocked(I)I

    move-result v1

    .line 6938
    .local v1, "orientation":I
    iget-object v2, p0, mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v2}, Landroid/view/WindowManagerPolicy;->isAllScreenOnFully()Z

    move-result v2

    if-nez v2, :cond_e

    move v2, v1

    .line 6959
    :goto_d
    return v2

    .line 6942
    :cond_e
    const/4 v0, 0x0

    .line 6943
    .local v0, "oppositeDisplayId":I
    if-nez p1, :cond_29

    .line 6944
    const/4 v0, 0x1

    .line 6951
    :goto_12
    invoke-virtual {p0, v0}, getOrientationLocked(I)I

    .line 6953
    iget-object v2, p0, mAppOrientionsForOppositeDisplay:Lcom/samsung/android/multidisplay/common/FallbackArrayList;

    invoke-virtual {v2, v0}, Lcom/samsung/android/multidisplay/common/FallbackArrayList;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Ljava/lang/Integer;

    invoke-virtual {v2}, Ljava/lang/Integer;->intValue()I

    move-result v2

    const/4 v3, -0x1

    if-ne v2, v3, :cond_30

    .line 6954
    if-nez v1, :cond_27

    .line 6955
    const/4 v1, 0x6

    :cond_27
    move v2, v1

    .line 6957
    goto :goto_d

    .line 6945
    :cond_29
    const/4 v2, 0x1

    if-ne p1, v2, :cond_2e

    .line 6946
    const/4 v0, 0x0

    goto :goto_12

    :cond_2e
    move v2, v1

    .line 6948
    goto :goto_d

    .line 6959
    :cond_30
    iget-object v2, p0, mAppOrientionsForOppositeDisplay:Lcom/samsung/android/multidisplay/common/FallbackArrayList;

    invoke-virtual {v2, v0}, Lcom/samsung/android/multidisplay/common/FallbackArrayList;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Ljava/lang/Integer;

    invoke-virtual {v2}, Ljava/lang/Integer;->intValue()I

    move-result v2

    invoke-static {v2, v1}, Lcom/android/server/am/DualScreenPolicy;->getPolicyOrientation(II)I

    move-result v2

    goto :goto_d
.end method

.method private final assignLayersLocked(Lcom/android/server/wm/WindowList;)V
    .registers 22
    .param p1, "windows"    # Lcom/android/server/wm/WindowList;

    .prologue
    .line 15272
    invoke-virtual/range {p1 .. p1}, Lcom/android/server/wm/WindowList;->size()I

    move-result v2

    .line 15273
    .local v2, "N":I
    const/4 v5, 0x0

    .line 15274
    .local v5, "curBaseLayer":I
    const/4 v6, 0x0

    .line 15277
    .local v6, "curLayer":I
    sget-boolean v16, DUALSCREEN_DEBUG_INPUT_METHOD:Z

    if-eqz v16, :cond_4e

    .line 15278
    move-object/from16 v0, p0

    iget-object v0, v0, mDualScreenInputMethodManager:Lcom/android/server/wm/DualScreenInputMethodManager;

    move-object/from16 v17, v0

    new-instance v16, Ljava/lang/StringBuilder;

    invoke-direct/range {v16 .. v16}, Ljava/lang/StringBuilder;-><init>()V

    const-string v18, "assign layer displayId="

    move-object/from16 v0, v16

    move-object/from16 v1, v18

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v18

    if-lez v2, :cond_1be

    const/16 v16, 0x0

    move-object/from16 v0, p1

    move/from16 v1, v16

    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v16

    check-cast v16, Lcom/android/server/wm/WindowState;

    move-object/from16 v0, v16

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mDisplayContent:Lcom/android/server/wm/DisplayContent;

    move-object/from16 v16, v0

    invoke-virtual/range {v16 .. v16}, Lcom/android/server/wm/DisplayContent;->getDisplayId()I

    move-result v16

    invoke-static/range {v16 .. v16}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v16

    :goto_3b
    move-object/from16 v0, v18

    move-object/from16 v1, v16

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v16

    invoke-virtual/range {v16 .. v16}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v16

    move-object/from16 v0, v17

    move-object/from16 v1, v16

    invoke-virtual {v0, v1}, Lcom/android/server/wm/DualScreenInputMethodManager;->printDebugInfo(Ljava/lang/String;)V

    .line 15282
    :cond_4e
    sget-boolean v16, DEBUG_LAYERS:Z

    if-eqz v16, :cond_7a

    const-string v16, "WindowManager"

    new-instance v17, Ljava/lang/StringBuilder;

    invoke-direct/range {v17 .. v17}, Ljava/lang/StringBuilder;-><init>()V

    const-string v18, "Assigning layers based on windows="

    invoke-virtual/range {v17 .. v18}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v17

    move-object/from16 v0, v17

    move-object/from16 v1, p1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v17

    invoke-virtual/range {v17 .. v17}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v17

    new-instance v18, Ljava/lang/RuntimeException;

    const-string/jumbo v19, "here"

    invoke-direct/range {v18 .. v19}, Ljava/lang/RuntimeException;-><init>(Ljava/lang/String;)V

    invoke-virtual/range {v18 .. v18}, Ljava/lang/RuntimeException;->fillInStackTrace()Ljava/lang/Throwable;

    move-result-object v18

    invoke-static/range {v16 .. v18}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 15287
    :cond_7a
    invoke-direct/range {p0 .. p0}, movePenWindowHeaderToAppListTopLocked()V

    .line 15289
    const/4 v8, 0x0

    .line 15292
    .local v8, "foundFirstCascade":Z
    const/4 v3, 0x0

    .line 15294
    .local v3, "anyLayerChanged":Z
    const/4 v9, 0x0

    .local v9, "i":I
    :goto_80
    if-ge v9, v2, :cond_36f

    .line 15295
    move-object/from16 v0, p1

    invoke-virtual {v0, v9}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v13

    check-cast v13, Lcom/android/server/wm/WindowState;

    .line 15296
    .local v13, "w":Lcom/android/server/wm/WindowState;
    iget-object v14, v13, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    .line 15297
    .local v14, "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    const/4 v10, 0x0

    .line 15298
    .local v10, "layerChanged":Z
    iget v11, v13, Lcom/android/server/wm/WindowState;->mLayer:I

    .line 15300
    .local v11, "oldLayer":I
    iget-object v0, v13, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    move-object/from16 v16, v0

    move-object/from16 v0, v16

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    move/from16 v16, v0

    const/16 v17, 0x898

    move/from16 v0, v16

    move/from16 v1, v17

    if-ne v0, v1, :cond_1c3

    .line 15301
    add-int/lit8 v6, v6, 0x5

    .line 15302
    iput v6, v13, Lcom/android/server/wm/WindowState;->mLayer:I

    .line 15314
    :goto_a5
    if-nez v8, :cond_c2

    invoke-virtual {v13}, Lcom/android/server/wm/WindowState;->getMultiWindowStyleLw()Lcom/samsung/android/multiwindow/MultiWindowStyle;

    move-result-object v16

    invoke-virtual/range {v16 .. v16}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->getLayer()I

    move-result v16

    if-lez v16, :cond_c2

    .line 15316
    move-object/from16 v0, p0

    iget v0, v0, mInputMethodAnimLayerAdjustment:I

    move/from16 v16, v0

    move/from16 v0, v16

    add-int/lit16 v0, v0, 0x3e8

    move/from16 v16, v0

    add-int v6, v6, v16

    .line 15317
    iput v6, v13, Lcom/android/server/wm/WindowState;->mLayer:I

    .line 15318
    const/4 v8, 0x1

    .line 15324
    :cond_c2
    iget v0, v13, Lcom/android/server/wm/WindowState;->mLayer:I

    move/from16 v16, v0

    invoke-virtual {v13}, Lcom/android/server/wm/WindowState;->getDisplayId()I

    move-result v17

    move/from16 v0, v17

    mul-int/lit16 v0, v0, 0x3e8

    move/from16 v17, v0

    add-int v16, v16, v17

    move/from16 v0, v16

    iput v0, v13, Lcom/android/server/wm/WindowState;->mLayer:I

    .line 15328
    iget v0, v13, Lcom/android/server/wm/WindowState;->mLayer:I

    move/from16 v16, v0

    move/from16 v0, v16

    if-eq v0, v11, :cond_e0

    .line 15329
    const/4 v10, 0x1

    .line 15330
    const/4 v3, 0x1

    .line 15332
    :cond_e0
    iget-object v15, v13, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    .line 15333
    .local v15, "wtoken":Lcom/android/server/wm/AppWindowToken;
    iget v11, v14, Lcom/android/server/wm/WindowStateAnimator;->mAnimLayer:I

    .line 15334
    iget-object v0, v13, Lcom/android/server/wm/WindowState;->mTargetAppToken:Lcom/android/server/wm/AppWindowToken;

    move-object/from16 v16, v0

    if-eqz v16, :cond_1e6

    .line 15335
    iget v0, v13, Lcom/android/server/wm/WindowState;->mLayer:I

    move/from16 v16, v0

    iget-object v0, v13, Lcom/android/server/wm/WindowState;->mTargetAppToken:Lcom/android/server/wm/AppWindowToken;

    move-object/from16 v17, v0

    move-object/from16 v0, v17

    iget-object v0, v0, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    move-object/from16 v17, v0

    move-object/from16 v0, v17

    iget v0, v0, Lcom/android/server/wm/AppWindowAnimator;->animLayerAdjustment:I

    move/from16 v17, v0

    add-int v16, v16, v17

    move/from16 v0, v16

    iput v0, v14, Lcom/android/server/wm/WindowStateAnimator;->mAnimLayer:I

    .line 15367
    :cond_104
    :goto_104
    iget-boolean v0, v13, Lcom/android/server/wm/WindowState;->mIsImWindow:Z

    move/from16 v16, v0

    if-eqz v16, :cond_330

    .line 15368
    iget v0, v14, Lcom/android/server/wm/WindowStateAnimator;->mAnimLayer:I

    move/from16 v17, v0

    iget-object v0, v13, Lcom/android/server/wm/WindowState;->mTargetAppToken:Lcom/android/server/wm/AppWindowToken;

    move-object/from16 v16, v0

    if-nez v16, :cond_32c

    move-object/from16 v0, p0

    iget v0, v0, mInputMethodAnimLayerAdjustment:I

    move/from16 v16, v0

    :goto_11a
    add-int v16, v16, v17

    move/from16 v0, v16

    iput v0, v14, Lcom/android/server/wm/WindowStateAnimator;->mAnimLayer:I

    .line 15379
    :cond_120
    :goto_120
    iget v0, v14, Lcom/android/server/wm/WindowStateAnimator;->mAnimLayer:I

    move/from16 v16, v0

    move/from16 v0, v16

    if-eq v0, v11, :cond_12a

    .line 15380
    const/4 v10, 0x1

    .line 15381
    const/4 v3, 0x1

    .line 15383
    :cond_12a
    invoke-virtual {v13}, Lcom/android/server/wm/WindowState;->getStack()Lcom/android/server/wm/TaskStack;

    move-result-object v12

    .line 15384
    .local v12, "stack":Lcom/android/server/wm/TaskStack;
    if-eqz v10, :cond_13b

    if-eqz v12, :cond_13b

    invoke-virtual {v12, v14}, Lcom/android/server/wm/TaskStack;->isDimming(Lcom/android/server/wm/WindowStateAnimator;)Z

    move-result v16

    if-eqz v16, :cond_13b

    .line 15386
    invoke-virtual/range {p0 .. p0}, scheduleAnimationLocked()V

    .line 15388
    :cond_13b
    sget-boolean v16, DEBUG_LAYERS:Z

    if-eqz v16, :cond_1ba

    const-string v17, "WindowManager"

    new-instance v16, Ljava/lang/StringBuilder;

    invoke-direct/range {v16 .. v16}, Ljava/lang/StringBuilder;-><init>()V

    const-string v18, "Assign layer "

    move-object/from16 v0, v16

    move-object/from16 v1, v18

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v16

    move-object/from16 v0, v16

    invoke-virtual {v0, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v16

    const-string v18, ": "

    move-object/from16 v0, v16

    move-object/from16 v1, v18

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v16

    const-string/jumbo v18, "mBase="

    move-object/from16 v0, v16

    move-object/from16 v1, v18

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v16

    iget v0, v13, Lcom/android/server/wm/WindowState;->mBaseLayer:I

    move/from16 v18, v0

    move-object/from16 v0, v16

    move/from16 v1, v18

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v16

    const-string v18, " mLayer="

    move-object/from16 v0, v16

    move-object/from16 v1, v18

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v16

    iget v0, v13, Lcom/android/server/wm/WindowState;->mLayer:I

    move/from16 v18, v0

    move-object/from16 v0, v16

    move/from16 v1, v18

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v18

    if-nez v15, :cond_348

    const-string v16, ""

    :goto_191
    move-object/from16 v0, v18

    move-object/from16 v1, v16

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v16

    const-string v18, " =mAnimLayer="

    move-object/from16 v0, v16

    move-object/from16 v1, v18

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v16

    iget v0, v14, Lcom/android/server/wm/WindowStateAnimator;->mAnimLayer:I

    move/from16 v18, v0

    move-object/from16 v0, v16

    move/from16 v1, v18

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v16

    invoke-virtual/range {v16 .. v16}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v16

    move-object/from16 v0, v17

    move-object/from16 v1, v16

    invoke-static {v0, v1}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 15294
    :cond_1ba
    add-int/lit8 v9, v9, 0x1

    goto/16 :goto_80

    .line 15278
    .end local v3    # "anyLayerChanged":Z
    .end local v8    # "foundFirstCascade":Z
    .end local v9    # "i":I
    .end local v10    # "layerChanged":Z
    .end local v11    # "oldLayer":I
    .end local v12    # "stack":Lcom/android/server/wm/TaskStack;
    .end local v13    # "w":Lcom/android/server/wm/WindowState;
    .end local v14    # "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    .end local v15    # "wtoken":Lcom/android/server/wm/AppWindowToken;
    :cond_1be
    const-string/jumbo v16, "null"

    goto/16 :goto_3b

    .line 15305
    .restart local v3    # "anyLayerChanged":Z
    .restart local v8    # "foundFirstCascade":Z
    .restart local v9    # "i":I
    .restart local v10    # "layerChanged":Z
    .restart local v11    # "oldLayer":I
    .restart local v13    # "w":Lcom/android/server/wm/WindowState;
    .restart local v14    # "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    :cond_1c3
    iget v0, v13, Lcom/android/server/wm/WindowState;->mBaseLayer:I

    move/from16 v16, v0

    move/from16 v0, v16

    if-eq v0, v5, :cond_1d9

    iget-boolean v0, v13, Lcom/android/server/wm/WindowState;->mIsImWindow:Z

    move/from16 v16, v0

    if-nez v16, :cond_1d9

    if-lez v9, :cond_1df

    iget-boolean v0, v13, Lcom/android/server/wm/WindowState;->mIsWallpaper:Z

    move/from16 v16, v0

    if-eqz v16, :cond_1df

    .line 15307
    :cond_1d9
    add-int/lit8 v6, v6, 0x5

    .line 15308
    iput v6, v13, Lcom/android/server/wm/WindowState;->mLayer:I

    goto/16 :goto_a5

    .line 15310
    :cond_1df
    iget v6, v13, Lcom/android/server/wm/WindowState;->mBaseLayer:I

    move v5, v6

    .line 15311
    iput v6, v13, Lcom/android/server/wm/WindowState;->mLayer:I

    goto/16 :goto_a5

    .line 15337
    .restart local v15    # "wtoken":Lcom/android/server/wm/AppWindowToken;
    :cond_1e6
    iget-object v0, v13, Lcom/android/server/wm/WindowState;->mAttachedWindow:Lcom/android/server/wm/WindowState;

    move-object/from16 v16, v0

    if-eqz v16, :cond_232

    iget-object v0, v13, Lcom/android/server/wm/WindowState;->mAttachedWindow:Lcom/android/server/wm/WindowState;

    move-object/from16 v16, v0

    move-object/from16 v0, v16

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    move-object/from16 v16, v0

    move-object/from16 v0, v16

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    move/from16 v16, v0

    const/16 v17, 0x898

    move/from16 v0, v16

    move/from16 v1, v17

    if-ne v0, v1, :cond_232

    iget-object v0, v13, Lcom/android/server/wm/WindowState;->mAttachedWindow:Lcom/android/server/wm/WindowState;

    move-object/from16 v16, v0

    move-object/from16 v0, v16

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mTargetAppToken:Lcom/android/server/wm/AppWindowToken;

    move-object/from16 v16, v0

    if-eqz v16, :cond_232

    .line 15340
    iget v0, v13, Lcom/android/server/wm/WindowState;->mLayer:I

    move/from16 v16, v0

    iget-object v0, v13, Lcom/android/server/wm/WindowState;->mAttachedWindow:Lcom/android/server/wm/WindowState;

    move-object/from16 v17, v0

    move-object/from16 v0, v17

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mTargetAppToken:Lcom/android/server/wm/AppWindowToken;

    move-object/from16 v17, v0

    move-object/from16 v0, v17

    iget-object v0, v0, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    move-object/from16 v17, v0

    move-object/from16 v0, v17

    iget v0, v0, Lcom/android/server/wm/AppWindowAnimator;->animLayerAdjustment:I

    move/from16 v17, v0

    add-int v16, v16, v17

    move/from16 v0, v16

    iput v0, v14, Lcom/android/server/wm/WindowStateAnimator;->mAnimLayer:I

    goto/16 :goto_104

    .line 15342
    :cond_232
    if-eqz v15, :cond_322

    .line 15343
    iget-object v0, v13, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    move-object/from16 v16, v0

    move-object/from16 v0, v16

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    move/from16 v16, v0

    const/16 v17, 0x3

    move/from16 v0, v16

    move/from16 v1, v17

    if-ne v0, v1, :cond_30c

    .line 15344
    iget v0, v13, Lcom/android/server/wm/WindowState;->mLayer:I

    move/from16 v16, v0

    iget-object v0, v15, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    move-object/from16 v17, v0

    move-object/from16 v0, v17

    iget v0, v0, Lcom/android/server/wm/AppWindowAnimator;->animLayerAdjustment:I

    move/from16 v17, v0

    add-int v16, v16, v17

    iget v0, v15, Lcom/android/server/wm/AppWindowToken;->startingAnimLayerAdjustment:I

    move/from16 v17, v0

    add-int v16, v16, v17

    move/from16 v0, v16

    iput v0, v14, Lcom/android/server/wm/WindowStateAnimator;->mAnimLayer:I

    .line 15351
    :goto_260
    move-object/from16 v0, p0

    iget-object v0, v0, mMultiWindowCenterBar:Lcom/android/server/wm/WindowState;

    move-object/from16 v16, v0

    if-eqz v16, :cond_104

    move-object/from16 v0, p0

    iget-object v0, v0, mMultiWindowCenterBar:Lcom/android/server/wm/WindowState;

    move-object/from16 v16, v0

    invoke-virtual/range {v16 .. v16}, Lcom/android/server/wm/WindowState;->isDisplayedLw()Z

    move-result v16

    if-eqz v16, :cond_104

    invoke-virtual {v13}, Lcom/android/server/wm/WindowState;->getMultiWindowStyleLw()Lcom/samsung/android/multiwindow/MultiWindowStyle;

    move-result-object v16

    invoke-virtual/range {v16 .. v16}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->isSplit()Z

    move-result v16

    if-eqz v16, :cond_104

    iget v0, v14, Lcom/android/server/wm/WindowStateAnimator;->mAnimLayer:I

    move/from16 v16, v0

    move-object/from16 v0, p0

    iget-object v0, v0, mMultiWindowCenterBar:Lcom/android/server/wm/WindowState;

    move-object/from16 v17, v0

    move-object/from16 v0, v17

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    move-object/from16 v17, v0

    move-object/from16 v0, v17

    iget v0, v0, Lcom/android/server/wm/WindowStateAnimator;->mAnimLayer:I

    move/from16 v17, v0

    move/from16 v0, v16

    move/from16 v1, v17

    if-lt v0, v1, :cond_104

    .line 15356
    move-object/from16 v0, p0

    iget-object v0, v0, mMultiWindowCenterBar:Lcom/android/server/wm/WindowState;

    move-object/from16 v16, v0

    move-object/from16 v0, v16

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    move-object/from16 v16, v0

    move-object/from16 v0, p0

    iget-object v0, v0, mMultiWindowCenterBar:Lcom/android/server/wm/WindowState;

    move-object/from16 v17, v0

    move-object/from16 v0, v17

    iget v0, v0, Lcom/android/server/wm/WindowState;->mLayer:I

    move/from16 v17, v0

    iget-object v0, v15, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    move-object/from16 v18, v0

    move-object/from16 v0, v18

    iget v0, v0, Lcom/android/server/wm/AppWindowAnimator;->animLayerAdjustment:I

    move/from16 v18, v0

    add-int v17, v17, v18

    move/from16 v0, v17

    move-object/from16 v1, v16

    iput v0, v1, Lcom/android/server/wm/WindowStateAnimator;->mAnimLayer:I

    .line 15357
    move-object/from16 v0, p0

    iget-object v0, v0, mMultiWindowCenterBar:Lcom/android/server/wm/WindowState;

    move-object/from16 v16, v0

    move-object/from16 v0, v16

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mChildWindows:Lcom/android/server/wm/WindowList;

    move-object/from16 v16, v0

    invoke-virtual/range {v16 .. v16}, Lcom/android/server/wm/WindowList;->size()I

    move-result v4

    .line 15358
    .local v4, "childNum":I
    if-lez v4, :cond_104

    .line 15359
    move-object/from16 v0, p0

    iget-object v0, v0, mMultiWindowCenterBar:Lcom/android/server/wm/WindowState;

    move-object/from16 v16, v0

    move-object/from16 v0, v16

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mChildWindows:Lcom/android/server/wm/WindowList;

    move-object/from16 v16, v0

    add-int/lit8 v17, v4, -0x1

    invoke-virtual/range {v16 .. v17}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v7

    check-cast v7, Lcom/android/server/wm/WindowState;

    .line 15360
    .local v7, "cw":Lcom/android/server/wm/WindowState;
    invoke-virtual {v7}, Lcom/android/server/wm/WindowState;->isDisplayedLw()Z

    move-result v16

    if-eqz v16, :cond_104

    .line 15361
    iget-object v0, v7, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    move-object/from16 v16, v0

    iget v0, v7, Lcom/android/server/wm/WindowState;->mLayer:I

    move/from16 v17, v0

    iget-object v0, v15, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    move-object/from16 v18, v0

    move-object/from16 v0, v18

    iget v0, v0, Lcom/android/server/wm/AppWindowAnimator;->animLayerAdjustment:I

    move/from16 v18, v0

    add-int v17, v17, v18

    move/from16 v0, v17

    move-object/from16 v1, v16

    iput v0, v1, Lcom/android/server/wm/WindowStateAnimator;->mAnimLayer:I

    goto/16 :goto_104

    .line 15347
    .end local v4    # "childNum":I
    .end local v7    # "cw":Lcom/android/server/wm/WindowState;
    :cond_30c
    iget v0, v13, Lcom/android/server/wm/WindowState;->mLayer:I

    move/from16 v16, v0

    iget-object v0, v15, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    move-object/from16 v17, v0

    move-object/from16 v0, v17

    iget v0, v0, Lcom/android/server/wm/AppWindowAnimator;->animLayerAdjustment:I

    move/from16 v17, v0

    add-int v16, v16, v17

    move/from16 v0, v16

    iput v0, v14, Lcom/android/server/wm/WindowStateAnimator;->mAnimLayer:I

    goto/16 :goto_260

    .line 15365
    :cond_322
    iget v0, v13, Lcom/android/server/wm/WindowState;->mLayer:I

    move/from16 v16, v0

    move/from16 v0, v16

    iput v0, v14, Lcom/android/server/wm/WindowStateAnimator;->mAnimLayer:I

    goto/16 :goto_104

    .line 15368
    :cond_32c
    const/16 v16, 0x0

    goto/16 :goto_11a

    .line 15369
    :cond_330
    iget-boolean v0, v13, Lcom/android/server/wm/WindowState;->mIsWallpaper:Z

    move/from16 v16, v0

    if-eqz v16, :cond_120

    .line 15376
    iget v0, v14, Lcom/android/server/wm/WindowStateAnimator;->mAnimLayer:I

    move/from16 v16, v0

    move-object/from16 v0, p0

    iget v0, v0, mWallpaperAnimLayerAdjustment:I

    move/from16 v17, v0

    add-int v16, v16, v17

    move/from16 v0, v16

    iput v0, v14, Lcom/android/server/wm/WindowStateAnimator;->mAnimLayer:I

    goto/16 :goto_120

    .line 15388
    .restart local v12    # "stack":Lcom/android/server/wm/TaskStack;
    :cond_348
    new-instance v16, Ljava/lang/StringBuilder;

    invoke-direct/range {v16 .. v16}, Ljava/lang/StringBuilder;-><init>()V

    const-string v19, " mAppLayer="

    move-object/from16 v0, v16

    move-object/from16 v1, v19

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v16

    iget-object v0, v15, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    move-object/from16 v19, v0

    move-object/from16 v0, v19

    iget v0, v0, Lcom/android/server/wm/AppWindowAnimator;->animLayerAdjustment:I

    move/from16 v19, v0

    move-object/from16 v0, v16

    move/from16 v1, v19

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v16

    invoke-virtual/range {v16 .. v16}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v16

    goto/16 :goto_191

    .line 15410
    .end local v10    # "layerChanged":Z
    .end local v11    # "oldLayer":I
    .end local v12    # "stack":Lcom/android/server/wm/TaskStack;
    .end local v13    # "w":Lcom/android/server/wm/WindowState;
    .end local v14    # "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    .end local v15    # "wtoken":Lcom/android/server/wm/AppWindowToken;
    :cond_36f
    move-object/from16 v0, p0

    iget-object v0, v0, mAccessibilityController:Lcom/android/server/wm/AccessibilityController;

    move-object/from16 v16, v0

    if-eqz v16, :cond_398

    if-eqz v3, :cond_398

    invoke-virtual/range {p1 .. p1}, Lcom/android/server/wm/WindowList;->size()I

    move-result v16

    add-int/lit8 v16, v16, -0x1

    move-object/from16 v0, p1

    move/from16 v1, v16

    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v16

    check-cast v16, Lcom/android/server/wm/WindowState;

    invoke-virtual/range {v16 .. v16}, Lcom/android/server/wm/WindowState;->getDisplayId()I

    move-result v16

    if-nez v16, :cond_398

    .line 15412
    move-object/from16 v0, p0

    iget-object v0, v0, mAccessibilityController:Lcom/android/server/wm/AccessibilityController;

    move-object/from16 v16, v0

    invoke-virtual/range {v16 .. v16}, Lcom/android/server/wm/AccessibilityController;->onWindowLayersChangedLocked()V

    .line 15415
    :cond_398
    return-void
.end method

.method private assignMultiWindowScaleLocked(Lcom/android/server/wm/TaskStack;)V
    .registers 10
    .param p1, "taskStack"    # Lcom/android/server/wm/TaskStack;

    .prologue
    .line 21523
    if-nez p1, :cond_3

    .line 21543
    :cond_2
    return-void

    .line 21526
    :cond_3
    invoke-virtual {p1}, Lcom/android/server/wm/TaskStack;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    move-result-object v0

    .line 21527
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    const/4 v3, -0x1

    .line 21528
    .local v3, "topAttached":I
    invoke-virtual {v0}, Lcom/android/server/wm/DisplayContent;->getWindowList()Lcom/android/server/wm/WindowList;

    move-result-object v6

    .line 21529
    .local v6, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual {v6}, Lcom/android/server/wm/WindowList;->size()I

    move-result v7

    add-int/lit8 v1, v7, -0x1

    .local v1, "i":I
    :goto_12
    if-ltz v1, :cond_28

    .line 21530
    invoke-virtual {v6, v1}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/server/wm/WindowState;

    .line 21531
    .local v4, "w":Lcom/android/server/wm/WindowState;
    iget-object v7, v4, Lcom/android/server/wm/WindowState;->mAttachedWindow:Lcom/android/server/wm/WindowState;

    if-nez v7, :cond_24

    .line 21532
    invoke-direct {p0, v4, p1}, assignMultiWindowScaleLockedInner(Lcom/android/server/wm/WindowState;Lcom/android/server/wm/TaskStack;)V

    .line 21529
    :cond_21
    :goto_21
    add-int/lit8 v1, v1, -0x1

    goto :goto_12

    .line 21533
    :cond_24
    if-gez v3, :cond_21

    .line 21534
    move v3, v1

    goto :goto_21

    .line 21537
    .end local v4    # "w":Lcom/android/server/wm/WindowState;
    :cond_28
    move v2, v3

    .local v2, "j":I
    :goto_29
    if-ltz v2, :cond_2

    .line 21538
    invoke-virtual {v6, v2}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/android/server/wm/WindowState;

    .line 21539
    .local v5, "win":Lcom/android/server/wm/WindowState;
    iget-object v7, v5, Lcom/android/server/wm/WindowState;->mAttachedWindow:Lcom/android/server/wm/WindowState;

    if-eqz v7, :cond_38

    .line 21540
    invoke-direct {p0, v5, p1}, assignMultiWindowScaleLockedInner(Lcom/android/server/wm/WindowState;Lcom/android/server/wm/TaskStack;)V

    .line 21537
    :cond_38
    add-int/lit8 v2, v2, -0x1

    goto :goto_29
.end method

.method private assignMultiWindowScaleLockedInner(Lcom/android/server/wm/WindowState;Lcom/android/server/wm/TaskStack;)V
    .registers 20
    .param p1, "w"    # Lcom/android/server/wm/WindowState;
    .param p2, "taskStack"    # Lcom/android/server/wm/TaskStack;

    .prologue
    .line 21546
    invoke-virtual/range {p2 .. p2}, Lcom/android/server/wm/TaskStack;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    move-result-object v4

    .line 21547
    .local v4, "displayContent":Lcom/android/server/wm/DisplayContent;
    invoke-virtual {v4}, Lcom/android/server/wm/DisplayContent;->getDisplayInfo()Landroid/view/DisplayInfo;

    move-result-object v5

    .line 21548
    .local v5, "displayInfo":Landroid/view/DisplayInfo;
    invoke-virtual/range {p1 .. p1}, Lcom/android/server/wm/WindowState;->getMultiWindowStyleLw()Lcom/samsung/android/multiwindow/MultiWindowStyle;

    move-result-object v8

    .line 21549
    .local v8, "multiWindowStyle":Lcom/samsung/android/multiwindow/MultiWindowStyle;
    invoke-virtual/range {p1 .. p1}, Lcom/android/server/wm/WindowState;->getAppToken()Landroid/view/IApplicationToken;

    move-result-object v14

    if-eqz v14, :cond_cd

    invoke-virtual/range {p1 .. p1}, Lcom/android/server/wm/WindowState;->getStack()Lcom/android/server/wm/TaskStack;

    move-result-object v14

    move-object/from16 v0, p2

    if-ne v14, v0, :cond_cd

    .line 21550
    move-object/from16 v0, p1

    iget-object v14, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v14, v14, Landroid/view/WindowManager$LayoutParams;->flags:I

    and-int/lit16 v14, v14, 0x4000

    if-eqz v14, :cond_ce

    const/4 v10, 0x1

    .line 21551
    .local v10, "scaledWindow":Z
    :goto_25
    move-object/from16 v0, p1

    iget-object v14, v0, Lcom/android/server/wm/WindowState;->mAttachedWindow:Lcom/android/server/wm/WindowState;

    if-eqz v14, :cond_d1

    if-nez v10, :cond_d1

    .line 21552
    move-object/from16 v0, p1

    iget-object v14, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v14, v14, Landroid/view/WindowManager$LayoutParams;->multiWindowFlags:I

    and-int/lit8 v14, v14, 0x8

    if-nez v14, :cond_cd

    .line 21553
    move-object/from16 v0, p1

    iget-object v14, v0, Lcom/android/server/wm/WindowState;->mAttachedWindow:Lcom/android/server/wm/WindowState;

    iget v14, v14, Lcom/android/server/wm/WindowState;->mHScale:F

    move-object/from16 v0, p1

    iput v14, v0, Lcom/android/server/wm/WindowState;->mHScale:F

    .line 21554
    move-object/from16 v0, p1

    iget-object v14, v0, Lcom/android/server/wm/WindowState;->mAttachedWindow:Lcom/android/server/wm/WindowState;

    iget v14, v14, Lcom/android/server/wm/WindowState;->mVScale:F

    move-object/from16 v0, p1

    iput v14, v0, Lcom/android/server/wm/WindowState;->mVScale:F

    .line 21555
    move-object/from16 v0, p1

    iget-object v14, v0, Lcom/android/server/wm/WindowState;->mAttachedWindow:Lcom/android/server/wm/WindowState;

    iget v14, v14, Lcom/android/server/wm/WindowState;->mFloatingAppHScale:F

    move-object/from16 v0, p1

    iput v14, v0, Lcom/android/server/wm/WindowState;->mFloatingAppHScale:F

    .line 21556
    move-object/from16 v0, p1

    iget-object v14, v0, Lcom/android/server/wm/WindowState;->mAttachedWindow:Lcom/android/server/wm/WindowState;

    iget v14, v14, Lcom/android/server/wm/WindowState;->mFloatingAppVScale:F

    move-object/from16 v0, p1

    iput v14, v0, Lcom/android/server/wm/WindowState;->mFloatingAppVScale:F

    .line 21557
    sget-boolean v14, DEBUG_MULTIWINDOW_SCALE:Z

    if-eqz v14, :cond_cd

    .line 21558
    const-string v14, "WindowManager"

    new-instance v15, Ljava/lang/StringBuilder;

    invoke-direct {v15}, Ljava/lang/StringBuilder;-><init>()V

    const-string v16, "assignMultiWindowScaleLockedInner "

    invoke-virtual/range {v15 .. v16}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v15

    move-object/from16 v0, p1

    invoke-virtual {v15, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v15

    const-string v16, ": mHScale="

    invoke-virtual/range {v15 .. v16}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v15

    move-object/from16 v0, p1

    iget v0, v0, Lcom/android/server/wm/WindowState;->mHScale:F

    move/from16 v16, v0

    invoke-virtual/range {v15 .. v16}, Ljava/lang/StringBuilder;->append(F)Ljava/lang/StringBuilder;

    move-result-object v15

    const-string v16, ", mVScale="

    invoke-virtual/range {v15 .. v16}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v15

    move-object/from16 v0, p1

    iget v0, v0, Lcom/android/server/wm/WindowState;->mVScale:F

    move/from16 v16, v0

    invoke-virtual/range {v15 .. v16}, Ljava/lang/StringBuilder;->append(F)Ljava/lang/StringBuilder;

    move-result-object v15

    const-string v16, ", mFloatingAppHScale="

    invoke-virtual/range {v15 .. v16}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v15

    move-object/from16 v0, p1

    iget v0, v0, Lcom/android/server/wm/WindowState;->mFloatingAppHScale:F

    move/from16 v16, v0

    invoke-virtual/range {v15 .. v16}, Ljava/lang/StringBuilder;->append(F)Ljava/lang/StringBuilder;

    move-result-object v15

    const-string v16, ", mFloatingAppVScale="

    invoke-virtual/range {v15 .. v16}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v15

    move-object/from16 v0, p1

    iget v0, v0, Lcom/android/server/wm/WindowState;->mFloatingAppVScale:F

    move/from16 v16, v0

    invoke-virtual/range {v15 .. v16}, Ljava/lang/StringBuilder;->append(F)Ljava/lang/StringBuilder;

    move-result-object v15

    const-string v16, ", Callers="

    invoke-virtual/range {v15 .. v16}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v15

    const/16 v16, 0x4

    invoke-static/range {v16 .. v16}, Landroid/os/Debug;->getCallers(I)Ljava/lang/String;

    move-result-object v16

    invoke-virtual/range {v15 .. v16}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v15

    invoke-virtual {v15}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v15

    invoke-static {v14, v15}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 21674
    .end local v10    # "scaledWindow":Z
    :cond_cd
    :goto_cd
    return-void

    .line 21550
    :cond_ce
    const/4 v10, 0x0

    goto/16 :goto_25

    .line 21566
    .restart local v10    # "scaledWindow":Z
    :cond_d1
    move-object/from16 v0, p0

    iget-object v15, v0, mPolicy:Landroid/view/WindowManagerPolicy;

    move-object/from16 v0, p1

    iget-object v14, v0, Lcom/android/server/wm/WindowState;->mAttachedWindow:Lcom/android/server/wm/WindowState;

    if-nez v14, :cond_185

    move-object/from16 v14, p1

    :goto_dd
    invoke-interface {v15, v14}, Landroid/view/WindowManagerPolicy;->getFloatingWindowPadding(Landroid/view/WindowManagerPolicy$WindowState;)Landroid/graphics/Rect;

    move-result-object v9

    .line 21568
    .local v9, "padding":Landroid/graphics/Rect;
    new-instance v3, Landroid/graphics/Rect;

    invoke-direct {v3}, Landroid/graphics/Rect;-><init>()V

    .line 21569
    .local v3, "bounds":Landroid/graphics/Rect;
    move-object/from16 v0, p2

    invoke-virtual {v0, v3}, Lcom/android/server/wm/TaskStack;->getBounds(Landroid/graphics/Rect;)V

    .line 21571
    iget v2, v5, Landroid/view/DisplayInfo;->appWidth:I

    .line 21572
    .local v2, "appWidth":I
    iget v1, v5, Landroid/view/DisplayInfo;->appHeight:I

    .line 21576
    .local v1, "appHeight":I
    move-object/from16 v0, p0

    iget-object v14, v0, mContext:Landroid/content/Context;

    invoke-static {v14}, Lcom/samsung/android/cocktailbar/CocktailBarFeatures;->isSystemBarType(Landroid/content/Context;)Z

    move-result v14

    if-eqz v14, :cond_110

    .line 21577
    invoke-virtual/range {p1 .. p1}, Lcom/android/server/wm/WindowState;->getMainWindow()Lcom/android/server/wm/WindowState;

    move-result-object v14

    if-eqz v14, :cond_110

    invoke-virtual/range {p1 .. p1}, Lcom/android/server/wm/WindowState;->getMainWindow()Lcom/android/server/wm/WindowState;

    move-result-object v14

    iget-object v14, v14, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v14, v14, Landroid/view/WindowManager$LayoutParams;->samsungFlags:I

    const/high16 v15, 0x20000000

    and-int/2addr v14, v15

    if-eqz v14, :cond_110

    .line 21579
    iget v2, v5, Landroid/view/DisplayInfo;->alphaScreenAppWidth:I

    .line 21580
    iget v1, v5, Landroid/view/DisplayInfo;->alphaScreenAppHeight:I

    .line 21586
    :cond_110
    move-object/from16 v0, p0

    iget-object v14, v0, mContext:Landroid/content/Context;

    invoke-static {v14}, Lcom/samsung/android/multiwindow/MultiWindowFeatures;->isSupportStyleTransition(Landroid/content/Context;)Z

    move-result v7

    .line 21587
    .local v7, "isFixedRatio":Z
    invoke-virtual {v3}, Landroid/graphics/Rect;->width()I

    move-result v12

    .line 21588
    .local v12, "tempWidth":I
    invoke-virtual {v3}, Landroid/graphics/Rect;->height()I

    move-result v11

    .line 21589
    .local v11, "tempHeight":I
    if-eqz v7, :cond_146

    .line 21590
    iget v14, v5, Landroid/view/DisplayInfo;->appWidth:I

    iget v15, v5, Landroid/view/DisplayInfo;->appHeight:I

    if-le v14, v15, :cond_18b

    invoke-virtual {v3}, Landroid/graphics/Rect;->height()I

    move-result v14

    invoke-virtual {v3}, Landroid/graphics/Rect;->width()I

    move-result v15

    invoke-static {v14, v15}, Ljava/lang/Math;->max(II)I

    move-result v12

    .line 21591
    :goto_134
    iget v14, v5, Landroid/view/DisplayInfo;->appWidth:I

    iget v15, v5, Landroid/view/DisplayInfo;->appHeight:I

    if-ge v14, v15, :cond_198

    invoke-virtual {v3}, Landroid/graphics/Rect;->height()I

    move-result v14

    invoke-virtual {v3}, Landroid/graphics/Rect;->width()I

    move-result v15

    invoke-static {v14, v15}, Ljava/lang/Math;->max(II)I

    move-result v11

    .line 21594
    :cond_146
    :goto_146
    int-to-float v14, v12

    iget v15, v9, Landroid/graphics/Rect;->left:I

    add-int/2addr v15, v2

    iget v0, v9, Landroid/graphics/Rect;->right:I

    move/from16 v16, v0

    add-int v15, v15, v16

    int-to-float v15, v15

    div-float v6, v14, v15

    .line 21595
    .local v6, "hScale":F
    int-to-float v14, v11

    iget v15, v9, Landroid/graphics/Rect;->top:I

    add-int/2addr v15, v1

    iget v0, v9, Landroid/graphics/Rect;->bottom:I

    move/from16 v16, v0

    add-int v15, v15, v16

    int-to-float v15, v15

    div-float v13, v14, v15

    .line 21597
    .local v13, "vScale":F
    const/16 v14, 0x800

    invoke-virtual {v8, v14}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->isEnabled(I)Z

    move-result v14

    if-eqz v14, :cond_cd

    .line 21600
    move-object/from16 v0, p1

    iget-object v14, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v14, v14, Landroid/view/WindowManager$LayoutParams;->multiWindowFlags:I

    and-int/lit8 v14, v14, 0x8

    if-nez v14, :cond_cd

    .line 21603
    const/4 v14, 0x4

    invoke-virtual {v8, v14}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->isEnabled(I)Z

    move-result v14

    if-eqz v14, :cond_1a5

    .line 21604
    const/high16 v14, 0x3f800000    # 1.0f

    move-object/from16 v0, p1

    iput v14, v0, Lcom/android/server/wm/WindowState;->mVScale:F

    move-object/from16 v0, p1

    iput v14, v0, Lcom/android/server/wm/WindowState;->mHScale:F

    goto/16 :goto_cd

    .line 21566
    .end local v1    # "appHeight":I
    .end local v2    # "appWidth":I
    .end local v3    # "bounds":Landroid/graphics/Rect;
    .end local v6    # "hScale":F
    .end local v7    # "isFixedRatio":Z
    .end local v9    # "padding":Landroid/graphics/Rect;
    .end local v11    # "tempHeight":I
    .end local v12    # "tempWidth":I
    .end local v13    # "vScale":F
    :cond_185
    move-object/from16 v0, p1

    iget-object v14, v0, Lcom/android/server/wm/WindowState;->mAttachedWindow:Lcom/android/server/wm/WindowState;

    goto/16 :goto_dd

    .line 21590
    .restart local v1    # "appHeight":I
    .restart local v2    # "appWidth":I
    .restart local v3    # "bounds":Landroid/graphics/Rect;
    .restart local v7    # "isFixedRatio":Z
    .restart local v9    # "padding":Landroid/graphics/Rect;
    .restart local v11    # "tempHeight":I
    .restart local v12    # "tempWidth":I
    :cond_18b
    invoke-virtual {v3}, Landroid/graphics/Rect;->height()I

    move-result v14

    invoke-virtual {v3}, Landroid/graphics/Rect;->width()I

    move-result v15

    invoke-static {v14, v15}, Ljava/lang/Math;->min(II)I

    move-result v12

    goto :goto_134

    .line 21591
    :cond_198
    invoke-virtual {v3}, Landroid/graphics/Rect;->height()I

    move-result v14

    invoke-virtual {v3}, Landroid/graphics/Rect;->width()I

    move-result v15

    invoke-static {v14, v15}, Ljava/lang/Math;->min(II)I

    move-result v11

    goto :goto_146

    .line 21607
    .restart local v6    # "hScale":F
    .restart local v13    # "vScale":F
    :cond_1a5
    move-object/from16 v0, p2

    iget v14, v0, Lcom/android/server/wm/TaskStack;->mStackType:I

    const/4 v15, 0x3

    if-eq v14, v15, :cond_1b8

    .line 21608
    const/high16 v14, 0x3f800000    # 1.0f

    move-object/from16 v0, p1

    iput v14, v0, Lcom/android/server/wm/WindowState;->mVScale:F

    move-object/from16 v0, p1

    iput v14, v0, Lcom/android/server/wm/WindowState;->mHScale:F

    goto/16 :goto_cd

    .line 21612
    :cond_1b8
    if-eqz v10, :cond_319

    .line 21615
    move-object/from16 v0, p1

    iget-object v14, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v14, v14, Landroid/view/WindowManager$LayoutParams;->width:I

    move-object/from16 v0, p1

    iget v15, v0, Lcom/android/server/wm/WindowState;->mRequestedWidth:I

    if-eq v14, v15, :cond_311

    move-object/from16 v0, p1

    iget-object v14, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v14, v14, Landroid/view/WindowManager$LayoutParams;->width:I

    int-to-float v14, v14

    move-object/from16 v0, p1

    iget v15, v0, Lcom/android/server/wm/WindowState;->mRequestedWidth:I

    int-to-float v15, v15

    div-float/2addr v14, v15

    :goto_1d3
    move-object/from16 v0, p1

    iput v14, v0, Lcom/android/server/wm/WindowState;->mHScale:F

    .line 21616
    move-object/from16 v0, p1

    iget-object v14, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v14, v14, Landroid/view/WindowManager$LayoutParams;->height:I

    move-object/from16 v0, p1

    iget v15, v0, Lcom/android/server/wm/WindowState;->mRequestedHeight:I

    if-eq v14, v15, :cond_315

    move-object/from16 v0, p1

    iget-object v14, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v14, v14, Landroid/view/WindowManager$LayoutParams;->height:I

    int-to-float v14, v14

    move-object/from16 v0, p1

    iget v15, v0, Lcom/android/server/wm/WindowState;->mRequestedHeight:I

    int-to-float v15, v15

    div-float/2addr v14, v15

    :goto_1f0
    move-object/from16 v0, p1

    iput v14, v0, Lcom/android/server/wm/WindowState;->mVScale:F

    .line 21622
    :goto_1f4
    sget-boolean v14, Lcom/samsung/android/multiwindow/MultiWindowFeatures;->SELECTIVE1ORIENTATION_ENABLED:Z

    if-eqz v14, :cond_27b

    move-object/from16 v0, p1

    iget-object v14, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    if-eqz v14, :cond_27b

    move-object/from16 v0, p1

    iget-object v14, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    invoke-virtual {v14}, Lcom/android/server/wm/AppWindowToken;->isSelectiveOrientationStateLocked()Z

    move-result v14

    if-eqz v14, :cond_27b

    .line 21624
    invoke-virtual {v4}, Lcom/android/server/wm/DisplayContent;->getReverseDisplayInfo()Landroid/view/DisplayInfo;

    move-result-object v5

    .line 21625
    iget v2, v5, Landroid/view/DisplayInfo;->appWidth:I

    .line 21626
    iget v1, v5, Landroid/view/DisplayInfo;->appHeight:I

    .line 21628
    if-eqz v7, :cond_236

    .line 21629
    iget v14, v5, Landroid/view/DisplayInfo;->appWidth:I

    iget v15, v5, Landroid/view/DisplayInfo;->appHeight:I

    if-le v14, v15, :cond_325

    invoke-virtual {v3}, Landroid/graphics/Rect;->height()I

    move-result v14

    invoke-virtual {v3}, Landroid/graphics/Rect;->width()I

    move-result v15

    invoke-static {v14, v15}, Ljava/lang/Math;->max(II)I

    move-result v12

    .line 21630
    :goto_224
    iget v14, v5, Landroid/view/DisplayInfo;->appWidth:I

    iget v15, v5, Landroid/view/DisplayInfo;->appHeight:I

    if-ge v14, v15, :cond_333

    invoke-virtual {v3}, Landroid/graphics/Rect;->height()I

    move-result v14

    invoke-virtual {v3}, Landroid/graphics/Rect;->width()I

    move-result v15

    invoke-static {v14, v15}, Ljava/lang/Math;->max(II)I

    move-result v11

    .line 21635
    :cond_236
    :goto_236
    move-object/from16 v0, p0

    iget-object v14, v0, mContext:Landroid/content/Context;

    invoke-static {v14}, Lcom/samsung/android/cocktailbar/CocktailBarFeatures;->isSystemBarType(Landroid/content/Context;)Z

    move-result v14

    if-eqz v14, :cond_257

    .line 21636
    invoke-virtual/range {p1 .. p1}, Lcom/android/server/wm/WindowState;->getMainWindow()Lcom/android/server/wm/WindowState;

    move-result-object v14

    if-eqz v14, :cond_257

    invoke-virtual/range {p1 .. p1}, Lcom/android/server/wm/WindowState;->getMainWindow()Lcom/android/server/wm/WindowState;

    move-result-object v14

    iget-object v14, v14, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v14, v14, Landroid/view/WindowManager$LayoutParams;->samsungFlags:I

    const/high16 v15, 0x20000000

    and-int/2addr v14, v15

    if-eqz v14, :cond_257

    .line 21638
    iget v2, v5, Landroid/view/DisplayInfo;->alphaScreenAppWidth:I

    .line 21639
    iget v1, v5, Landroid/view/DisplayInfo;->alphaScreenAppHeight:I

    .line 21645
    :cond_257
    int-to-float v14, v12

    iget v15, v5, Landroid/view/DisplayInfo;->appWidth:I

    iget v0, v9, Landroid/graphics/Rect;->left:I

    move/from16 v16, v0

    add-int v15, v15, v16

    iget v0, v9, Landroid/graphics/Rect;->right:I

    move/from16 v16, v0

    add-int v15, v15, v16

    int-to-float v15, v15

    div-float v6, v14, v15

    .line 21646
    int-to-float v14, v11

    iget v15, v5, Landroid/view/DisplayInfo;->appHeight:I

    iget v0, v9, Landroid/graphics/Rect;->top:I

    move/from16 v16, v0

    add-int v15, v15, v16

    iget v0, v9, Landroid/graphics/Rect;->bottom:I

    move/from16 v16, v0

    add-int v15, v15, v16

    int-to-float v15, v15

    div-float v13, v14, v15

    .line 21653
    :cond_27b
    move-object/from16 v0, p1

    iget v14, v0, Lcom/android/server/wm/WindowState;->mDssScale:F

    mul-float/2addr v6, v14

    .line 21654
    move-object/from16 v0, p1

    iget v14, v0, Lcom/android/server/wm/WindowState;->mDssScale:F

    mul-float/2addr v13, v14

    .line 21658
    move-object/from16 v0, p1

    iput v6, v0, Lcom/android/server/wm/WindowState;->mFloatingAppHScale:F

    .line 21659
    move-object/from16 v0, p1

    iput v13, v0, Lcom/android/server/wm/WindowState;->mFloatingAppVScale:F

    .line 21660
    if-eqz v10, :cond_341

    .line 21661
    move-object/from16 v0, p1

    iget v14, v0, Lcom/android/server/wm/WindowState;->mHScale:F

    mul-float/2addr v14, v6

    move-object/from16 v0, p1

    iput v14, v0, Lcom/android/server/wm/WindowState;->mHScale:F

    .line 21662
    move-object/from16 v0, p1

    iget v14, v0, Lcom/android/server/wm/WindowState;->mVScale:F

    mul-float/2addr v14, v13

    move-object/from16 v0, p1

    iput v14, v0, Lcom/android/server/wm/WindowState;->mVScale:F

    .line 21667
    :goto_2a1
    sget-boolean v14, DEBUG_MULTIWINDOW_SCALE:Z

    if-eqz v14, :cond_cd

    .line 21668
    const-string v14, "WindowManager"

    new-instance v15, Ljava/lang/StringBuilder;

    invoke-direct {v15}, Ljava/lang/StringBuilder;-><init>()V

    const-string v16, "assignMultiWindowScaleLockedInner "

    invoke-virtual/range {v15 .. v16}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v15

    move-object/from16 v0, p1

    invoke-virtual {v15, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v15

    const-string v16, ": mHScale="

    invoke-virtual/range {v15 .. v16}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v15

    move-object/from16 v0, p1

    iget v0, v0, Lcom/android/server/wm/WindowState;->mHScale:F

    move/from16 v16, v0

    invoke-virtual/range {v15 .. v16}, Ljava/lang/StringBuilder;->append(F)Ljava/lang/StringBuilder;

    move-result-object v15

    const-string v16, ", mVScale="

    invoke-virtual/range {v15 .. v16}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v15

    move-object/from16 v0, p1

    iget v0, v0, Lcom/android/server/wm/WindowState;->mVScale:F

    move/from16 v16, v0

    invoke-virtual/range {v15 .. v16}, Ljava/lang/StringBuilder;->append(F)Ljava/lang/StringBuilder;

    move-result-object v15

    const-string v16, ", mFloatingAppHScale="

    invoke-virtual/range {v15 .. v16}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v15

    move-object/from16 v0, p1

    iget v0, v0, Lcom/android/server/wm/WindowState;->mFloatingAppHScale:F

    move/from16 v16, v0

    invoke-virtual/range {v15 .. v16}, Ljava/lang/StringBuilder;->append(F)Ljava/lang/StringBuilder;

    move-result-object v15

    const-string v16, ", mFloatingAppVScale="

    invoke-virtual/range {v15 .. v16}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v15

    move-object/from16 v0, p1

    iget v0, v0, Lcom/android/server/wm/WindowState;->mFloatingAppVScale:F

    move/from16 v16, v0

    invoke-virtual/range {v15 .. v16}, Ljava/lang/StringBuilder;->append(F)Ljava/lang/StringBuilder;

    move-result-object v15

    const-string v16, ", Callers="

    invoke-virtual/range {v15 .. v16}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v15

    const/16 v16, 0x4

    invoke-static/range {v16 .. v16}, Landroid/os/Debug;->getCallers(I)Ljava/lang/String;

    move-result-object v16

    invoke-virtual/range {v15 .. v16}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v15

    invoke-virtual {v15}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v15

    invoke-static {v14, v15}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    goto/16 :goto_cd

    .line 21615
    :cond_311
    const/high16 v14, 0x3f800000    # 1.0f

    goto/16 :goto_1d3

    .line 21616
    :cond_315
    const/high16 v14, 0x3f800000    # 1.0f

    goto/16 :goto_1f0

    .line 21618
    :cond_319
    const/high16 v14, 0x3f800000    # 1.0f

    move-object/from16 v0, p1

    iput v14, v0, Lcom/android/server/wm/WindowState;->mVScale:F

    move-object/from16 v0, p1

    iput v14, v0, Lcom/android/server/wm/WindowState;->mHScale:F

    goto/16 :goto_1f4

    .line 21629
    :cond_325
    invoke-virtual {v3}, Landroid/graphics/Rect;->height()I

    move-result v14

    invoke-virtual {v3}, Landroid/graphics/Rect;->width()I

    move-result v15

    invoke-static {v14, v15}, Ljava/lang/Math;->min(II)I

    move-result v12

    goto/16 :goto_224

    .line 21630
    :cond_333
    invoke-virtual {v3}, Landroid/graphics/Rect;->height()I

    move-result v14

    invoke-virtual {v3}, Landroid/graphics/Rect;->width()I

    move-result v15

    invoke-static {v14, v15}, Ljava/lang/Math;->min(II)I

    move-result v11

    goto/16 :goto_236

    .line 21664
    :cond_341
    move-object/from16 v0, p1

    iput v6, v0, Lcom/android/server/wm/WindowState;->mHScale:F

    .line 21665
    move-object/from16 v0, p1

    iput v13, v0, Lcom/android/server/wm/WindowState;->mVScale:F

    goto/16 :goto_2a1
.end method

.method static canBeImeTarget(Lcom/android/server/wm/WindowState;)Z
    .registers 5
    .param p0, "w"    # Lcom/android/server/wm/WindowState;

    .prologue
    const v3, 0x20008

    const/4 v1, 0x0

    .line 2418
    iget-object v2, p0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v2, v2, Landroid/view/WindowManager$LayoutParams;->flags:I

    and-int v0, v2, v3

    .line 2420
    .local v0, "fl":I
    if-eqz v0, :cond_15

    if-eq v0, v3, :cond_15

    iget-object v2, p0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v2, v2, Landroid/view/WindowManager$LayoutParams;->type:I

    const/4 v3, 0x3

    if-ne v2, v3, :cond_44

    .line 2439
    :cond_15
    invoke-virtual {p0}, Lcom/android/server/wm/WindowState;->getMultiWindowStyleLw()Lcom/samsung/android/multiwindow/MultiWindowStyle;

    move-result-object v2

    invoke-virtual {v2}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->isCascade()Z

    move-result v2

    if-eqz v2, :cond_45

    iget-object v2, p0, Lcom/android/server/wm/WindowState;->mService:Lcom/android/server/wm/WindowManagerService;

    iget-object v2, v2, mFocusedApp:Lcom/android/server/wm/AppWindowToken;

    if-eqz v2, :cond_39

    iget-object v2, p0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    if-eqz v2, :cond_39

    iget-object v2, p0, Lcom/android/server/wm/WindowState;->mService:Lcom/android/server/wm/WindowManagerService;

    iget-object v2, v2, mFocusedApp:Lcom/android/server/wm/AppWindowToken;

    iget-object v2, v2, Lcom/android/server/wm/AppWindowToken;->mTask:Lcom/android/server/wm/Task;

    iget v2, v2, Lcom/android/server/wm/Task;->mTaskId:I

    iget-object v3, p0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    iget-object v3, v3, Lcom/android/server/wm/AppWindowToken;->mTask:Lcom/android/server/wm/Task;

    iget v3, v3, Lcom/android/server/wm/Task;->mTaskId:I

    if-ne v2, v3, :cond_44

    :cond_39
    invoke-virtual {p0}, Lcom/android/server/wm/WindowState;->getMultiWindowStyleLw()Lcom/samsung/android/multiwindow/MultiWindowStyle;

    move-result-object v2

    const/4 v3, 0x4

    invoke-virtual {v2, v3}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->isEnabled(I)Z

    move-result v2

    if-eqz v2, :cond_45

    .line 2449
    :cond_44
    :goto_44
    return v1

    .line 2447
    :cond_45
    invoke-virtual {p0}, Lcom/android/server/wm/WindowState;->isVisibleOrAdding()Z

    move-result v1

    goto :goto_44
.end method

.method private checkBootAnimationCompleteLocked()Z
    .registers 5

    .prologue
    const/16 v1, 0x25

    .line 10509
    const-string v0, "bootanim"

    invoke-static {v0}, Landroid/os/SystemService;->isRunning(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_18

    .line 10510
    iget-object v0, p0, mH:Lcom/android/server/wm/WindowManagerService$H;

    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowManagerService$H;->removeMessages(I)V

    .line 10511
    iget-object v0, p0, mH:Lcom/android/server/wm/WindowManagerService$H;

    const-wide/16 v2, 0xc8

    invoke-virtual {v0, v1, v2, v3}, Lcom/android/server/wm/WindowManagerService$H;->sendEmptyMessageDelayed(IJ)Z

    .line 10514
    const/4 v0, 0x0

    .line 10517
    :goto_17
    return v0

    :cond_18
    const/4 v0, 0x1

    goto :goto_17
.end method

.method private checkQuickBootException()V
    .registers 4

    .prologue
    .line 10521
    new-instance v0, Landroid/content/Intent;

    const-string/jumbo v1, "org.codeaurora.action.QUICKBOOT"

    invoke-direct {v0, v1}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 10522
    .local v0, "intent":Landroid/content/Intent;
    const-string/jumbo v1, "mode"

    const/4 v2, 0x2

    invoke-virtual {v0, v1, v2}, Landroid/content/Intent;->putExtra(Ljava/lang/String;I)Landroid/content/Intent;

    .line 10524
    :try_start_f
    iget-object v1, p0, mContext:Landroid/content/Context;

    sget-object v2, Landroid/os/UserHandle;->CURRENT:Landroid/os/UserHandle;

    invoke-virtual {v1, v0, v2}, Landroid/content/Context;->startActivityAsUser(Landroid/content/Intent;Landroid/os/UserHandle;)V
    :try_end_16
    .catch Landroid/content/ActivityNotFoundException; {:try_start_f .. :try_end_16} :catch_17

    .line 10527
    :goto_16
    return-void

    .line 10525
    :catch_17
    move-exception v1

    goto :goto_16
.end method

.method private checkWaitingForWindowsLocked()Z
    .registers 15

    .prologue
    const/4 v11, 0x0

    const/4 v10, 0x1

    .line 10343
    const/4 v2, 0x0

    .line 10344
    .local v2, "haveBootMsg":Z
    const/4 v1, 0x0

    .line 10347
    .local v1, "haveApp":Z
    const/4 v4, 0x0

    .line 10348
    .local v4, "haveWallpaper":Z
    iget-object v12, p0, mContext:Landroid/content/Context;

    invoke-virtual {v12}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    move-result-object v12

    const v13, 0x1120051

    invoke-virtual {v12, v13}, Landroid/content/res/Resources;->getBoolean(I)Z

    move-result v12

    if-eqz v12, :cond_86

    iget-boolean v12, p0, mOnlyCore:Z

    if-nez v12, :cond_86

    move v8, v10

    .line 10351
    .local v8, "wallpaperEnabled":Z
    :goto_19
    const/4 v3, 0x0

    .line 10353
    .local v3, "haveKeyguard":Z
    const/4 v6, 0x0

    .line 10356
    .local v6, "readyKeyguard":Z
    invoke-virtual {p0}, getDefaultWindowListLocked()Lcom/android/server/wm/WindowList;

    move-result-object v9

    .line 10357
    .local v9, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual {v9}, Lcom/android/server/wm/WindowList;->size()I

    move-result v0

    .line 10359
    .local v0, "N":I
    iget-boolean v12, p0, mPerformEnabled:Z

    if-nez v12, :cond_30

    .line 10360
    const-string v12, "WindowManager"

    const-string v13, "!@Boot: performEnableScreen"

    invoke-static {v12, v13}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 10361
    iput-boolean v10, p0, mPerformEnabled:Z

    .line 10364
    :cond_30
    const/4 v5, 0x0

    .local v5, "i":I
    :goto_31
    if-ge v5, v0, :cond_e2

    .line 10365
    invoke-virtual {v9, v5}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v7

    check-cast v7, Lcom/android/server/wm/WindowState;

    .line 10366
    .local v7, "w":Lcom/android/server/wm/WindowState;
    invoke-virtual {v7}, Lcom/android/server/wm/WindowState;->isVisibleLw()Z

    move-result v12

    if-eqz v12, :cond_74

    iget-boolean v12, v7, Lcom/android/server/wm/WindowState;->mObscured:Z

    if-nez v12, :cond_74

    invoke-virtual {v7}, Lcom/android/server/wm/WindowState;->isDrawnLw()Z

    move-result v12

    if-nez v12, :cond_74

    .line 10369
    new-instance v12, Ljava/lang/StringBuilder;

    invoke-direct {v12}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v7}, Lcom/android/server/wm/WindowState;->getAttrs()Landroid/view/WindowManager$LayoutParams;

    move-result-object v13

    invoke-virtual {v13}, Landroid/view/WindowManager$LayoutParams;->getTitle()Ljava/lang/CharSequence;

    move-result-object v13

    invoke-virtual {v12, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v12

    const-string v13, ""

    invoke-virtual {v12, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v12

    invoke-virtual {v12}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v12

    const-string v13, "com.android.systemui.ImageWallpaper"

    invoke-virtual {v12, v13}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v12

    if-eqz v12, :cond_88

    .line 10370
    const/4 v4, 0x1

    .line 10371
    const-string v12, "WindowManager"

    const-string v13, "!@skp"

    invoke-static {v12, v13}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 10378
    :cond_74
    invoke-virtual {v7}, Lcom/android/server/wm/WindowState;->isDrawnLw()Z

    move-result v12

    if-eqz v12, :cond_83

    .line 10379
    iget-object v12, v7, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v12, v12, Landroid/view/WindowManager$LayoutParams;->type:I

    const/16 v13, 0x7e5

    if-ne v12, v13, :cond_bf

    .line 10380
    const/4 v2, 0x1

    .line 10364
    :cond_83
    :goto_83
    add-int/lit8 v5, v5, 0x1

    goto :goto_31

    .end local v0    # "N":I
    .end local v3    # "haveKeyguard":Z
    .end local v5    # "i":I
    .end local v6    # "readyKeyguard":Z
    .end local v7    # "w":Lcom/android/server/wm/WindowState;
    .end local v8    # "wallpaperEnabled":Z
    .end local v9    # "windows":Lcom/android/server/wm/WindowList;
    :cond_86
    move v8, v11

    .line 10348
    goto :goto_19

    .line 10373
    .restart local v0    # "N":I
    .restart local v3    # "haveKeyguard":Z
    .restart local v5    # "i":I
    .restart local v6    # "readyKeyguard":Z
    .restart local v7    # "w":Lcom/android/server/wm/WindowState;
    .restart local v8    # "wallpaperEnabled":Z
    .restart local v9    # "windows":Lcom/android/server/wm/WindowList;
    :cond_88
    const-string v11, "WindowManager"

    new-instance v12, Ljava/lang/StringBuilder;

    invoke-direct {v12}, Ljava/lang/StringBuilder;-><init>()V

    const-string v13, "!@performEnableScreen return becase "

    invoke-virtual {v12, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v12

    invoke-virtual {v7}, Lcom/android/server/wm/WindowState;->getAttrs()Landroid/view/WindowManager$LayoutParams;

    move-result-object v13

    invoke-virtual {v13}, Landroid/view/WindowManager$LayoutParams;->getTitle()Ljava/lang/CharSequence;

    move-result-object v13

    invoke-virtual {v12, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v12

    const-string v13, " "

    invoke-virtual {v12, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v12

    invoke-virtual {v7}, Lcom/android/server/wm/WindowState;->getAttrs()Landroid/view/WindowManager$LayoutParams;

    move-result-object v13

    iget-object v13, v13, Landroid/view/WindowManager$LayoutParams;->packageName:Ljava/lang/String;

    invoke-virtual {v12, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v12

    const-string v13, " is not fully drawn!"

    invoke-virtual {v12, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v12

    invoke-virtual {v12}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v12

    invoke-static {v11, v12}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 10424
    .end local v7    # "w":Lcom/android/server/wm/WindowState;
    :cond_be
    :goto_be
    return v10

    .line 10381
    .restart local v7    # "w":Lcom/android/server/wm/WindowState;
    :cond_bf
    iget-object v12, v7, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v12, v12, Landroid/view/WindowManager$LayoutParams;->type:I

    const/4 v13, 0x2

    if-ne v12, v13, :cond_c8

    .line 10382
    const/4 v1, 0x1

    goto :goto_83

    .line 10383
    :cond_c8
    iget-object v12, v7, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v12, v12, Landroid/view/WindowManager$LayoutParams;->type:I

    const/16 v13, 0x7dd

    if-ne v12, v13, :cond_d2

    .line 10384
    const/4 v4, 0x1

    goto :goto_83

    .line 10385
    :cond_d2
    iget-object v12, v7, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v12, v12, Landroid/view/WindowManager$LayoutParams;->type:I

    const/16 v13, 0x7d0

    if-ne v12, v13, :cond_83

    .line 10386
    iget-object v12, p0, mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v12}, Landroid/view/WindowManagerPolicy;->isKeyguardDrawnLw()Z

    move-result v3

    .line 10388
    move v6, v3

    goto :goto_83

    .line 10395
    .end local v7    # "w":Lcom/android/server/wm/WindowState;
    :cond_e2
    if-eqz v6, :cond_e5

    .line 10396
    const/4 v4, 0x1

    .line 10408
    :cond_e5
    iget-boolean v12, p0, mSystemBooted:Z

    if-nez v12, :cond_eb

    if-eqz v2, :cond_be

    .line 10415
    :cond_eb
    iget-boolean v12, p0, mSystemBooted:Z

    if-eqz v12, :cond_151

    if-nez v1, :cond_f3

    if-eqz v3, :cond_f7

    :cond_f3
    if-eqz v8, :cond_151

    if-nez v4, :cond_151

    .line 10417
    :cond_f7
    const-string v11, "WindowManager"

    new-instance v12, Ljava/lang/StringBuilder;

    invoke-direct {v12}, Ljava/lang/StringBuilder;-><init>()V

    const-string v13, "booted="

    invoke-virtual {v12, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v12

    iget-boolean v13, p0, mSystemBooted:Z

    invoke-virtual {v12, v13}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v12

    const-string v13, " msg="

    invoke-virtual {v12, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v12

    iget-boolean v13, p0, mShowingBootMessages:Z

    invoke-virtual {v12, v13}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v12

    const-string v13, " haveBoot="

    invoke-virtual {v12, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v12

    invoke-virtual {v12, v2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v12

    const-string v13, " haveApp="

    invoke-virtual {v12, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v12

    invoke-virtual {v12, v1}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v12

    const-string v13, " haveWall="

    invoke-virtual {v12, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v12

    invoke-virtual {v12, v4}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v12

    const-string v13, " wallEnabled="

    invoke-virtual {v12, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v12

    invoke-virtual {v12, v8}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v12

    const-string v13, " haveKeyguard="

    invoke-virtual {v12, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v12

    invoke-virtual {v12, v3}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v12

    invoke-virtual {v12}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v12

    invoke-static {v11, v12}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    goto/16 :goto_be

    :cond_151
    move v10, v11

    .line 10424
    goto/16 :goto_be
.end method

.method private computeCompatSmallestWidth(ZLandroid/util/DisplayMetrics;II)I
    .registers 17
    .param p1, "rotated"    # Z
    .param p2, "dm"    # Landroid/util/DisplayMetrics;
    .param p3, "dw"    # I
    .param p4, "dh"    # I

    .prologue
    .line 12565
    iget-object v0, p0, mTmpDisplayMetrics:Landroid/util/DisplayMetrics;

    invoke-virtual {v0, p2}, Landroid/util/DisplayMetrics;->setTo(Landroid/util/DisplayMetrics;)V

    .line 12566
    iget-object v3, p0, mTmpDisplayMetrics:Landroid/util/DisplayMetrics;

    .line 12568
    .local v3, "tmpDm":Landroid/util/DisplayMetrics;
    if-eqz p1, :cond_2d

    .line 12569
    move/from16 v4, p4

    .line 12570
    .local v4, "unrotDw":I
    move v5, p3

    .line 12575
    .local v5, "unrotDh":I
    :goto_c
    const/4 v1, 0x0

    const/4 v2, 0x0

    move-object v0, p0

    invoke-direct/range {v0 .. v5}, reduceCompatConfigWidthSize(IILandroid/util/DisplayMetrics;II)I

    move-result v7

    .line 12576
    .local v7, "sw":I
    const/4 v8, 0x1

    move-object v6, p0

    move-object v9, v3

    move v10, v5

    move v11, v4

    invoke-direct/range {v6 .. v11}, reduceCompatConfigWidthSize(IILandroid/util/DisplayMetrics;II)I

    move-result v7

    .line 12577
    const/4 v2, 0x2

    move-object v0, p0

    move v1, v7

    invoke-direct/range {v0 .. v5}, reduceCompatConfigWidthSize(IILandroid/util/DisplayMetrics;II)I

    move-result v7

    .line 12578
    const/4 v8, 0x3

    move-object v6, p0

    move-object v9, v3

    move v10, v5

    move v11, v4

    invoke-direct/range {v6 .. v11}, reduceCompatConfigWidthSize(IILandroid/util/DisplayMetrics;II)I

    move-result v7

    .line 12579
    return v7

    .line 12572
    .end local v4    # "unrotDw":I
    .end local v5    # "unrotDh":I
    .end local v7    # "sw":I
    :cond_2d
    move v4, p3

    .line 12573
    .restart local v4    # "unrotDw":I
    move/from16 v5, p4

    .restart local v5    # "unrotDh":I
    goto :goto_c
.end method

.method private computeFocusedWindowLocked()Lcom/android/server/wm/WindowState;
    .registers 6

    .prologue
    .line 18390
    iget-object v4, p0, mDisplayContents:Landroid/util/SparseArray;

    invoke-virtual {v4}, Landroid/util/SparseArray;->size()I

    move-result v1

    .line 18391
    .local v1, "displayCount":I
    const/4 v2, 0x0

    .local v2, "i":I
    :goto_7
    if-ge v2, v1, :cond_1b

    .line 18392
    iget-object v4, p0, mDisplayContents:Landroid/util/SparseArray;

    invoke-virtual {v4, v2}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/wm/DisplayContent;

    .line 18393
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    invoke-direct {p0, v0}, findFocusedWindowLocked(Lcom/android/server/wm/DisplayContent;)Lcom/android/server/wm/WindowState;

    move-result-object v3

    .line 18394
    .local v3, "win":Lcom/android/server/wm/WindowState;
    if-eqz v3, :cond_18

    .line 18398
    .end local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v3    # "win":Lcom/android/server/wm/WindowState;
    :goto_17
    return-object v3

    .line 18391
    .restart local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .restart local v3    # "win":Lcom/android/server/wm/WindowState;
    :cond_18
    add-int/lit8 v2, v2, 0x1

    goto :goto_7

    .line 18398
    .end local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v3    # "win":Lcom/android/server/wm/WindowState;
    :cond_1b
    const/4 v3, 0x0

    goto :goto_17
.end method

.method private computeSizeRangesAndScreenLayout(Landroid/view/DisplayInfo;ZIIFLandroid/content/res/Configuration;)V
    .registers 20
    .param p1, "displayInfo"    # Landroid/view/DisplayInfo;
    .param p2, "rotated"    # Z
    .param p3, "dw"    # I
    .param p4, "dh"    # I
    .param p5, "density"    # F
    .param p6, "outConfig"    # Landroid/content/res/Configuration;

    .prologue
    .line 12526
    if-eqz p2, :cond_61

    .line 12527
    move/from16 v5, p4

    .line 12528
    .local v5, "unrotDw":I
    move/from16 v6, p3

    .line 12533
    .local v6, "unrotDh":I
    :goto_6
    const/high16 v1, 0x40000000    # 2.0f

    iput v1, p1, Landroid/view/DisplayInfo;->smallestNominalAppWidth:I

    .line 12534
    const/high16 v1, 0x40000000    # 2.0f

    iput v1, p1, Landroid/view/DisplayInfo;->smallestNominalAppHeight:I

    .line 12535
    const/4 v1, 0x0

    iput v1, p1, Landroid/view/DisplayInfo;->largestNominalAppWidth:I

    .line 12536
    const/4 v1, 0x0

    iput v1, p1, Landroid/view/DisplayInfo;->largestNominalAppHeight:I

    .line 12537
    const/4 v1, 0x0

    invoke-direct {p0, p1, v1, v5, v6}, adjustDisplaySizeRanges(Landroid/view/DisplayInfo;III)V

    .line 12538
    const/4 v1, 0x1

    invoke-direct {p0, p1, v1, v6, v5}, adjustDisplaySizeRanges(Landroid/view/DisplayInfo;III)V

    .line 12539
    const/4 v1, 0x2

    invoke-direct {p0, p1, v1, v5, v6}, adjustDisplaySizeRanges(Landroid/view/DisplayInfo;III)V

    .line 12540
    const/4 v1, 0x3

    invoke-direct {p0, p1, v1, v6, v5}, adjustDisplaySizeRanges(Landroid/view/DisplayInfo;III)V

    .line 12541
    move-object/from16 v0, p6

    iget v1, v0, Landroid/content/res/Configuration;->screenLayout:I

    invoke-static {v1}, Landroid/content/res/Configuration;->resetScreenLayout(I)I

    move-result v2

    .line 12542
    .local v2, "sl":I
    const/4 v3, 0x0

    move-object v1, p0

    move/from16 v4, p5

    invoke-direct/range {v1 .. v6}, reduceConfigLayout(IIFII)I

    move-result v2

    .line 12543
    const/4 v9, 0x1

    move-object v7, p0

    move v8, v2

    move/from16 v10, p5

    move v11, v6

    move v12, v5

    invoke-direct/range {v7 .. v12}, reduceConfigLayout(IIFII)I

    move-result v2

    .line 12544
    const/4 v3, 0x2

    move-object v1, p0

    move/from16 v4, p5

    invoke-direct/range {v1 .. v6}, reduceConfigLayout(IIFII)I

    move-result v2

    .line 12545
    const/4 v9, 0x3

    move-object v7, p0

    move v8, v2

    move/from16 v10, p5

    move v11, v6

    move v12, v5

    invoke-direct/range {v7 .. v12}, reduceConfigLayout(IIFII)I

    move-result v2

    .line 12546
    iget v1, p1, Landroid/view/DisplayInfo;->smallestNominalAppWidth:I

    int-to-float v1, v1

    div-float v1, v1, p5

    float-to-int v1, v1

    move-object/from16 v0, p6

    iput v1, v0, Landroid/content/res/Configuration;->smallestScreenWidthDp:I

    .line 12547
    move-object/from16 v0, p6

    iput v2, v0, Landroid/content/res/Configuration;->screenLayout:I

    .line 12548
    return-void

    .line 12530
    .end local v2    # "sl":I
    .end local v5    # "unrotDw":I
    .end local v6    # "unrotDh":I
    :cond_61
    move/from16 v5, p3

    .line 12531
    .restart local v5    # "unrotDw":I
    move/from16 v6, p4

    .restart local v6    # "unrotDh":I
    goto :goto_6
.end method

.method private configureDisplayPolicyLocked(Lcom/android/server/wm/DisplayContent;)V
    .registers 9
    .param p1, "displayContent"    # Lcom/android/server/wm/DisplayContent;

    .prologue
    .line 14723
    iget-object v0, p0, mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-virtual {p1}, Lcom/android/server/wm/DisplayContent;->getDisplay()Landroid/view/Display;

    move-result-object v1

    iget v2, p1, Lcom/android/server/wm/DisplayContent;->mBaseDisplayWidth:I

    iget v3, p1, Lcom/android/server/wm/DisplayContent;->mBaseDisplayHeight:I

    iget v4, p1, Lcom/android/server/wm/DisplayContent;->mBaseDisplayDensity:I

    invoke-interface {v0, v1, v2, v3, v4}, Landroid/view/WindowManagerPolicy;->setInitialDisplaySize(Landroid/view/Display;III)V

    .line 14728
    invoke-virtual {p1}, Lcom/android/server/wm/DisplayContent;->getDisplayInfo()Landroid/view/DisplayInfo;

    move-result-object v6

    .line 14729
    .local v6, "displayInfo":Landroid/view/DisplayInfo;
    iget-object v0, p0, mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-virtual {p1}, Lcom/android/server/wm/DisplayContent;->getDisplay()Landroid/view/Display;

    move-result-object v1

    iget v2, v6, Landroid/view/DisplayInfo;->overscanLeft:I

    iget v3, v6, Landroid/view/DisplayInfo;->overscanTop:I

    iget v4, v6, Landroid/view/DisplayInfo;->overscanRight:I

    iget v5, v6, Landroid/view/DisplayInfo;->overscanBottom:I

    invoke-interface/range {v0 .. v5}, Landroid/view/WindowManagerPolicy;->setDisplayOverscan(Landroid/view/Display;IIII)V

    .line 14732
    return-void
.end method

.method private convertActivityResultToComponentName(Landroid/os/IBinder;)Landroid/content/ComponentName;
    .registers 13
    .param p1, "token"    # Landroid/os/IBinder;

    .prologue
    const/4 v8, 0x0

    .line 20245
    const/4 v5, 0x0

    .line 20246
    .local v5, "pkgName":Ljava/lang/String;
    const/4 v0, 0x0

    .line 20247
    .local v0, "className":Ljava/lang/String;
    const/4 v7, 0x0

    .line 20248
    .local v7, "returnComponent":Landroid/content/ComponentName;
    const/4 v2, 0x0

    .line 20250
    .local v2, "length":I
    if-nez p1, :cond_8

    .line 20283
    :cond_7
    :goto_7
    return-object v8

    .line 20254
    :cond_8
    invoke-virtual {p1}, Ljava/lang/Object;->toString()Ljava/lang/String;

    move-result-object v6

    .line 20255
    .local v6, "rawString":Ljava/lang/String;
    if-eqz v6, :cond_7

    invoke-virtual {v6}, Ljava/lang/String;->length()I

    move-result v9

    const/16 v10, 0x1a

    if-le v9, v10, :cond_7

    .line 20259
    const-string v8, " "

    invoke-virtual {v6, v8}, Ljava/lang/String;->split(Ljava/lang/String;)[Ljava/lang/String;

    move-result-object v4

    .line 20261
    .local v4, "parsingData":[Ljava/lang/String;
    :try_start_1c
    array-length v2, v4

    .line 20262
    add-int/lit8 v1, v2, -0x1

    .local v1, "i":I
    :goto_1f
    if-ltz v1, :cond_34

    .line 20263
    aget-object v8, v4, v1

    const/16 v9, 0x2f

    invoke-virtual {v8, v9}, Ljava/lang/String;->indexOf(I)I

    move-result v8

    const/4 v9, -0x1

    if-eq v8, v9, :cond_61

    .line 20264
    aget-object v8, v4, v1

    const-string v9, "/"

    invoke-virtual {v8, v9}, Ljava/lang/String;->split(Ljava/lang/String;)[Ljava/lang/String;

    move-result-object v4

    .line 20269
    :cond_34
    array-length v8, v4

    const/4 v9, 0x2

    if-ne v8, v9, :cond_5f

    .line 20270
    const/4 v8, 0x0

    aget-object v5, v4, v8

    .line 20271
    const/4 v8, 0x1

    aget-object v8, v4, v8

    const-string v9, "."

    invoke-virtual {v8, v9}, Ljava/lang/String;->indexOf(Ljava/lang/String;)I

    move-result v8

    if-nez v8, :cond_64

    .line 20272
    new-instance v8, Ljava/lang/StringBuilder;

    invoke-direct {v8}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v8, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v8

    const/4 v9, 0x1

    aget-object v9, v4, v9

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v8

    invoke-virtual {v8}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    .line 20276
    :goto_5a
    new-instance v7, Landroid/content/ComponentName;

    .end local v7    # "returnComponent":Landroid/content/ComponentName;
    invoke-direct {v7, v5, v0}, Landroid/content/ComponentName;-><init>(Ljava/lang/String;Ljava/lang/String;)V

    .end local v1    # "i":I
    .restart local v7    # "returnComponent":Landroid/content/ComponentName;
    :cond_5f
    :goto_5f
    move-object v8, v7

    .line 20283
    goto :goto_7

    .line 20262
    .restart local v1    # "i":I
    :cond_61
    add-int/lit8 v1, v1, -0x1

    goto :goto_1f

    .line 20274
    :cond_64
    const/4 v8, 0x1

    aget-object v0, v4, v8
    :try_end_67
    .catch Ljava/lang/NullPointerException; {:try_start_1c .. :try_end_67} :catch_68

    goto :goto_5a

    .line 20278
    .end local v1    # "i":I
    .end local v7    # "returnComponent":Landroid/content/ComponentName;
    :catch_68
    move-exception v3

    .line 20279
    .local v3, "npe":Ljava/lang/NullPointerException;
    const-string v8, "WindowManager"

    const-string/jumbo v9, "package and class name\'s parsing error"

    invoke-static {v8, v9}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 20280
    invoke-virtual {v3}, Ljava/lang/NullPointerException;->printStackTrace()V

    .line 20281
    const/4 v7, 0x0

    .restart local v7    # "returnComponent":Landroid/content/ComponentName;
    goto :goto_5f
.end method

.method private static convertCropForSurfaceFlinger(Landroid/graphics/Rect;III)V
    .registers 6
    .param p0, "crop"    # Landroid/graphics/Rect;
    .param p1, "rot"    # I
    .param p2, "dw"    # I
    .param p3, "dh"    # I

    .prologue
    .line 10729
    const/4 v1, 0x1

    if-ne p1, v1, :cond_18

    .line 10730
    iget v0, p0, Landroid/graphics/Rect;->top:I

    .line 10731
    .local v0, "tmp":I
    iget v1, p0, Landroid/graphics/Rect;->right:I

    sub-int v1, p2, v1

    iput v1, p0, Landroid/graphics/Rect;->top:I

    .line 10732
    iget v1, p0, Landroid/graphics/Rect;->bottom:I

    iput v1, p0, Landroid/graphics/Rect;->right:I

    .line 10733
    iget v1, p0, Landroid/graphics/Rect;->left:I

    sub-int v1, p2, v1

    iput v1, p0, Landroid/graphics/Rect;->bottom:I

    .line 10734
    iput v0, p0, Landroid/graphics/Rect;->left:I

    .line 10749
    .end local v0    # "tmp":I
    :cond_17
    :goto_17
    return-void

    .line 10735
    :cond_18
    const/4 v1, 0x2

    if-ne p1, v1, :cond_34

    .line 10736
    iget v0, p0, Landroid/graphics/Rect;->top:I

    .line 10737
    .restart local v0    # "tmp":I
    iget v1, p0, Landroid/graphics/Rect;->bottom:I

    sub-int v1, p3, v1

    iput v1, p0, Landroid/graphics/Rect;->top:I

    .line 10738
    sub-int v1, p3, v0

    iput v1, p0, Landroid/graphics/Rect;->bottom:I

    .line 10739
    iget v0, p0, Landroid/graphics/Rect;->right:I

    .line 10740
    iget v1, p0, Landroid/graphics/Rect;->left:I

    sub-int v1, p2, v1

    iput v1, p0, Landroid/graphics/Rect;->right:I

    .line 10741
    sub-int v1, p2, v0

    iput v1, p0, Landroid/graphics/Rect;->left:I

    goto :goto_17

    .line 10742
    .end local v0    # "tmp":I
    :cond_34
    const/4 v1, 0x3

    if-ne p1, v1, :cond_17

    .line 10743
    iget v0, p0, Landroid/graphics/Rect;->top:I

    .line 10744
    .restart local v0    # "tmp":I
    iget v1, p0, Landroid/graphics/Rect;->left:I

    iput v1, p0, Landroid/graphics/Rect;->top:I

    .line 10745
    iget v1, p0, Landroid/graphics/Rect;->bottom:I

    sub-int v1, p3, v1

    iput v1, p0, Landroid/graphics/Rect;->left:I

    .line 10746
    iget v1, p0, Landroid/graphics/Rect;->right:I

    iput v1, p0, Landroid/graphics/Rect;->bottom:I

    .line 10747
    sub-int v1, p3, v0

    iput v1, p0, Landroid/graphics/Rect;->right:I

    goto :goto_17
.end method

.method private createTaskLocked(IIILcom/android/server/wm/AppWindowToken;)Lcom/android/server/wm/Task;
    .registers 12
    .param p1, "taskId"    # I
    .param p2, "stackId"    # I
    .param p3, "userId"    # I
    .param p4, "atoken"    # Lcom/android/server/wm/AppWindowToken;

    .prologue
    const/4 v2, 0x1

    const/4 v3, 0x0

    .line 6388
    sget-boolean v4, DEBUG_STACK:Z

    if-eqz v4, :cond_33

    const-string v4, "WindowManager"

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v6, "createTaskLocked: taskId="

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v5

    const-string v6, " stackId="

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v5

    const-string v6, " atoken="

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5, p4}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v4, v5}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 6390
    :cond_33
    iget-object v4, p0, mStackIdToStack:Landroid/util/SparseArray;

    invoke-virtual {v4, p2}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/wm/TaskStack;

    .line 6391
    .local v0, "stack":Lcom/android/server/wm/TaskStack;
    if-nez v0, :cond_56

    .line 6392
    new-instance v2, Ljava/lang/IllegalArgumentException;

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "addAppToken: invalid stackId="

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-direct {v2, v3}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v2

    .line 6394
    :cond_56
    const/16 v4, 0x7919

    const/4 v5, 0x2

    new-array v5, v5, [Ljava/lang/Object;

    invoke-static {p1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v6

    aput-object v6, v5, v3

    invoke-static {p2}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v6

    aput-object v6, v5, v2

    invoke-static {v4, v5}, Landroid/util/EventLog;->writeEvent(I[Ljava/lang/Object;)I

    .line 6395
    new-instance v1, Lcom/android/server/wm/Task;

    invoke-direct {v1, p1, v0, p3, p0}, Lcom/android/server/wm/Task;-><init>(ILcom/android/server/wm/TaskStack;ILcom/android/server/wm/WindowManagerService;)V

    .line 6396
    .local v1, "task":Lcom/android/server/wm/Task;
    iget-object v4, p0, mTaskIdToTask:Landroid/util/SparseArray;

    invoke-virtual {v4, p1, v1}, Landroid/util/SparseArray;->put(ILjava/lang/Object;)V

    .line 6397
    iget-boolean v4, p4, Lcom/android/server/wm/AppWindowToken;->mLaunchTaskBehind:Z

    if-nez v4, :cond_7e

    :goto_78
    iget-boolean v3, p4, Lcom/android/server/wm/AppWindowToken;->showForAllUsers:Z

    invoke-virtual {v0, v1, v2, v3}, Lcom/android/server/wm/TaskStack;->addTask(Lcom/android/server/wm/Task;ZZ)V

    .line 6398
    return-object v1

    :cond_7e
    move v2, v3

    .line 6397
    goto :goto_78
.end method

.method private displayReady(I)V
    .registers 12
    .param p1, "displayId"    # I

    .prologue
    .line 13168
    iget-object v4, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v4

    .line 13169
    :try_start_3
    invoke-virtual {p0, p1}, getDisplayContentLocked(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v0

    .line 13170
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-eqz v0, :cond_44

    .line 13171
    iget-object v3, p0, mAnimator:Lcom/android/server/wm/WindowAnimator;

    invoke-virtual {v3, p1}, Lcom/android/server/wm/WindowAnimator;->addDisplayLocked(I)V

    .line 13172
    iget-object v5, v0, Lcom/android/server/wm/DisplayContent;->mDisplaySizeLock:Ljava/lang/Object;

    monitor-enter v5
    :try_end_11
    .catchall {:try_start_3 .. :try_end_11} :catchall_49

    .line 13174
    :try_start_11
    invoke-virtual {v0}, Lcom/android/server/wm/DisplayContent;->getDisplayInfo()Landroid/view/DisplayInfo;

    move-result-object v1

    .line 13175
    .local v1, "displayInfo":Landroid/view/DisplayInfo;
    iget-object v3, p0, mDisplayManagerInternal:Landroid/hardware/display/DisplayManagerInternal;

    invoke-virtual {v3, p1}, Landroid/hardware/display/DisplayManagerInternal;->getDisplayInfo(I)Landroid/view/DisplayInfo;

    move-result-object v2

    .line 13176
    .local v2, "newDisplayInfo":Landroid/view/DisplayInfo;
    if-eqz v2, :cond_20

    .line 13177
    invoke-virtual {v1, v2}, Landroid/view/DisplayInfo;->copyFrom(Landroid/view/DisplayInfo;)V

    .line 13179
    :cond_20
    iget v3, v1, Landroid/view/DisplayInfo;->logicalWidth:I

    iput v3, v0, Lcom/android/server/wm/DisplayContent;->mInitialDisplayWidth:I

    .line 13180
    iget v3, v1, Landroid/view/DisplayInfo;->logicalHeight:I

    iput v3, v0, Lcom/android/server/wm/DisplayContent;->mInitialDisplayHeight:I

    .line 13181
    iget v3, v1, Landroid/view/DisplayInfo;->logicalDensityDpi:I

    iput v3, v0, Lcom/android/server/wm/DisplayContent;->mInitialDisplayDensity:I

    .line 13182
    iget v3, v0, Lcom/android/server/wm/DisplayContent;->mInitialDisplayWidth:I

    iput v3, v0, Lcom/android/server/wm/DisplayContent;->mBaseDisplayWidth:I

    .line 13183
    iget v3, v0, Lcom/android/server/wm/DisplayContent;->mInitialDisplayHeight:I

    iput v3, v0, Lcom/android/server/wm/DisplayContent;->mBaseDisplayHeight:I

    .line 13184
    iget v3, v0, Lcom/android/server/wm/DisplayContent;->mInitialDisplayDensity:I

    iput v3, v0, Lcom/android/server/wm/DisplayContent;->mBaseDisplayDensity:I

    .line 13185
    iget-object v3, v0, Lcom/android/server/wm/DisplayContent;->mBaseDisplayRect:Landroid/graphics/Rect;

    const/4 v6, 0x0

    const/4 v7, 0x0

    iget v8, v0, Lcom/android/server/wm/DisplayContent;->mBaseDisplayWidth:I

    iget v9, v0, Lcom/android/server/wm/DisplayContent;->mBaseDisplayHeight:I

    invoke-virtual {v3, v6, v7, v8, v9}, Landroid/graphics/Rect;->set(IIII)V

    .line 13187
    monitor-exit v5
    :try_end_44
    .catchall {:try_start_11 .. :try_end_44} :catchall_46

    .line 13189
    .end local v1    # "displayInfo":Landroid/view/DisplayInfo;
    .end local v2    # "newDisplayInfo":Landroid/view/DisplayInfo;
    :cond_44
    :try_start_44
    monitor-exit v4
    :try_end_45
    .catchall {:try_start_44 .. :try_end_45} :catchall_49

    .line 13190
    return-void

    .line 13187
    :catchall_46
    move-exception v3

    :try_start_47
    monitor-exit v5
    :try_end_48
    .catchall {:try_start_47 .. :try_end_48} :catchall_46

    :try_start_48
    throw v3

    .line 13189
    .end local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :catchall_49
    move-exception v3

    monitor-exit v4
    :try_end_4b
    .catchall {:try_start_48 .. :try_end_4b} :catchall_49

    throw v3
.end method

.method private findAppWindowInsertionPointLocked(Lcom/android/server/wm/AppWindowToken;II)I
    .registers 25
    .param p1, "target"    # Lcom/android/server/wm/AppWindowToken;
    .param p2, "displayId"    # I
    .param p3, "taskId"    # I

    .prologue
    .line 9499
    move-object/from16 v0, p0

    iget-object v0, v0, mTaskIdToTask:Landroid/util/SparseArray;

    move-object/from16 v18, v0

    move-object/from16 v0, v18

    move/from16 v1, p3

    invoke-virtual {v0, v1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v9

    check-cast v9, Lcom/android/server/wm/Task;

    .line 9500
    .local v9, "targetTask":Lcom/android/server/wm/Task;
    if-nez v9, :cond_40

    .line 9501
    const-string v18, "WindowManager"

    new-instance v19, Ljava/lang/StringBuilder;

    invoke-direct/range {v19 .. v19}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v20, "findAppWindowInsertionPointLocked: no Task for "

    invoke-virtual/range {v19 .. v20}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v19

    move-object/from16 v0, v19

    move-object/from16 v1, p1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v19

    const-string v20, " taskId="

    invoke-virtual/range {v19 .. v20}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v19

    move-object/from16 v0, v19

    move/from16 v1, p3

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v19

    invoke-virtual/range {v19 .. v19}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v19

    invoke-static/range {v18 .. v19}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 9503
    const/16 v18, 0x0

    .line 9585
    :goto_3f
    return v18

    .line 9505
    :cond_40
    invoke-virtual {v9}, Lcom/android/server/wm/Task;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    move-result-object v4

    .line 9513
    .local v4, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-nez v4, :cond_66

    .line 9514
    const-string v18, "WindowManager"

    new-instance v19, Ljava/lang/StringBuilder;

    invoke-direct/range {v19 .. v19}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v20, "findAppWindowInsertionPointLocked: no DisplayContent for "

    invoke-virtual/range {v19 .. v20}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v19

    move-object/from16 v0, v19

    move-object/from16 v1, p1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v19

    invoke-virtual/range {v19 .. v19}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v19

    invoke-static/range {v18 .. v19}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 9515
    const/16 v18, 0x0

    goto :goto_3f

    .line 9517
    :cond_66
    invoke-virtual {v4}, Lcom/android/server/wm/DisplayContent;->getWindowList()Lcom/android/server/wm/WindowList;

    move-result-object v16

    .line 9518
    .local v16, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual/range {v16 .. v16}, Lcom/android/server/wm/WindowList;->size()I

    move-result v2

    .line 9520
    .local v2, "NW":I
    const/4 v5, 0x0

    .line 9521
    .local v5, "found":Z
    invoke-virtual {v4}, Lcom/android/server/wm/DisplayContent;->getTasks()Ljava/util/ArrayList;

    move-result-object v12

    .line 9522
    .local v12, "tasks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/Task;>;"
    invoke-virtual {v12}, Ljava/util/ArrayList;->size()I

    move-result v18

    add-int/lit8 v11, v18, -0x1

    .local v11, "taskNdx":I
    :goto_79
    if-ltz v11, :cond_128

    .line 9523
    invoke-virtual {v12, v11}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v10

    check-cast v10, Lcom/android/server/wm/Task;

    .line 9529
    .local v10, "task":Lcom/android/server/wm/Task;
    if-nez v5, :cond_90

    iget v0, v10, Lcom/android/server/wm/Task;->mTaskId:I

    move/from16 v18, v0

    move/from16 v0, v18

    move/from16 v1, p3

    if-eq v0, v1, :cond_90

    .line 9522
    :cond_8d
    add-int/lit8 v11, v11, -0x1

    goto :goto_79

    .line 9532
    :cond_90
    iget-object v14, v10, Lcom/android/server/wm/Task;->mAppTokens:Lcom/android/server/wm/AppTokenList;

    .line 9533
    .local v14, "tokens":Lcom/android/server/wm/AppTokenList;
    invoke-virtual {v14}, Lcom/android/server/wm/AppTokenList;->size()I

    move-result v18

    add-int/lit8 v13, v18, -0x1

    .local v13, "tokenNdx":I
    :goto_98
    if-ltz v13, :cond_8d

    .line 9534
    invoke-virtual {v14, v13}, Lcom/android/server/wm/AppTokenList;->get(I)Ljava/lang/Object;

    move-result-object v17

    check-cast v17, Lcom/android/server/wm/AppWindowToken;

    .line 9535
    .local v17, "wtoken":Lcom/android/server/wm/AppWindowToken;
    if-nez v5, :cond_a9

    move-object/from16 v0, v17

    move-object/from16 v1, p1

    if-ne v0, v1, :cond_a9

    .line 9536
    const/4 v5, 0x1

    .line 9538
    :cond_a9
    if-eqz v5, :cond_b3

    .line 9542
    move-object/from16 v0, v17

    iget-boolean v0, v0, Lcom/android/server/wm/AppWindowToken;->sendingToBottom:Z

    move/from16 v18, v0

    if-eqz v18, :cond_b6

    .line 9533
    :cond_b3
    add-int/lit8 v13, v13, -0x1

    goto :goto_98

    .line 9546
    :cond_b6
    move-object/from16 v0, v17

    iget-object v0, v0, Lcom/android/server/wm/AppWindowToken;->windows:Lcom/android/server/wm/WindowList;

    move-object/from16 v18, v0

    invoke-virtual/range {v18 .. v18}, Lcom/android/server/wm/WindowList;->size()I

    move-result v18

    add-int/lit8 v6, v18, -0x1

    .local v6, "i":I
    :goto_c2
    if-ltz v6, :cond_b3

    .line 9547
    move-object/from16 v0, v17

    iget-object v0, v0, Lcom/android/server/wm/AppWindowToken;->windows:Lcom/android/server/wm/WindowList;

    move-object/from16 v18, v0

    move-object/from16 v0, v18

    invoke-virtual {v0, v6}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v15

    check-cast v15, Lcom/android/server/wm/WindowState;

    .line 9548
    .local v15, "win":Lcom/android/server/wm/WindowState;
    iget-object v0, v15, Lcom/android/server/wm/WindowState;->mChildWindows:Lcom/android/server/wm/WindowList;

    move-object/from16 v18, v0

    invoke-virtual/range {v18 .. v18}, Lcom/android/server/wm/WindowList;->size()I

    move-result v18

    add-int/lit8 v7, v18, -0x1

    .local v7, "j":I
    :goto_dc
    if-ltz v7, :cond_108

    .line 9549
    iget-object v0, v15, Lcom/android/server/wm/WindowState;->mChildWindows:Lcom/android/server/wm/WindowList;

    move-object/from16 v18, v0

    move-object/from16 v0, v18

    invoke-virtual {v0, v7}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/wm/WindowState;

    .line 9550
    .local v3, "cwin":Lcom/android/server/wm/WindowState;
    iget v0, v3, Lcom/android/server/wm/WindowState;->mSubLayer:I

    move/from16 v18, v0

    if-ltz v18, :cond_105

    .line 9551
    add-int/lit8 v8, v2, -0x1

    .local v8, "pos":I
    :goto_f2
    if-ltz v8, :cond_105

    .line 9552
    move-object/from16 v0, v16

    invoke-virtual {v0, v8}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v18

    move-object/from16 v0, v18

    if-ne v0, v3, :cond_102

    .line 9555
    add-int/lit8 v18, v8, 0x1

    goto/16 :goto_3f

    .line 9551
    :cond_102
    add-int/lit8 v8, v8, -0x1

    goto :goto_f2

    .line 9548
    .end local v8    # "pos":I
    :cond_105
    add-int/lit8 v7, v7, -0x1

    goto :goto_dc

    .line 9560
    .end local v3    # "cwin":Lcom/android/server/wm/WindowState;
    :cond_108
    add-int/lit8 v8, v2, -0x1

    .restart local v8    # "pos":I
    :goto_10a
    if-ltz v8, :cond_125

    .line 9561
    move-object/from16 v0, v16

    invoke-virtual {v0, v8}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v18

    move-object/from16 v0, v18

    if-ne v0, v15, :cond_122

    .line 9563
    move-object/from16 v0, p0

    move-object/from16 v1, v16

    invoke-direct {v0, v1, v8}, indexOfPenWindowHeaderOverCurrentWinow(Lcom/android/server/wm/WindowList;I)I

    move-result v8

    .line 9566
    add-int/lit8 v18, v8, 0x1

    goto/16 :goto_3f

    .line 9560
    :cond_122
    add-int/lit8 v8, v8, -0x1

    goto :goto_10a

    .line 9546
    :cond_125
    add-int/lit8 v6, v6, -0x1

    goto :goto_c2

    .line 9574
    .end local v6    # "i":I
    .end local v7    # "j":I
    .end local v8    # "pos":I
    .end local v10    # "task":Lcom/android/server/wm/Task;
    .end local v13    # "tokenNdx":I
    .end local v14    # "tokens":Lcom/android/server/wm/AppTokenList;
    .end local v15    # "win":Lcom/android/server/wm/WindowState;
    .end local v17    # "wtoken":Lcom/android/server/wm/AppWindowToken;
    :cond_128
    add-int/lit8 v8, v2, -0x1

    .restart local v8    # "pos":I
    :goto_12a
    if-ltz v8, :cond_143

    .line 9575
    move-object/from16 v0, v16

    invoke-virtual {v0, v8}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v18

    check-cast v18, Lcom/android/server/wm/WindowState;

    move-object/from16 v0, v18

    iget-boolean v0, v0, Lcom/android/server/wm/WindowState;->mIsWallpaper:Z

    move/from16 v18, v0

    if-eqz v18, :cond_140

    .line 9577
    add-int/lit8 v18, v8, 0x1

    goto/16 :goto_3f

    .line 9574
    :cond_140
    add-int/lit8 v8, v8, -0x1

    goto :goto_12a

    .line 9585
    :cond_143
    const/16 v18, 0x0

    goto/16 :goto_3f
.end method

.method private findDesiredInputMethodWindowIndexOnTargetDisplayLocked(Lcom/android/server/wm/DisplayContent;)I
    .registers 6
    .param p1, "targetDisplay"    # Lcom/android/server/wm/DisplayContent;

    .prologue
    .line 3089
    invoke-virtual {p1}, Lcom/android/server/wm/DisplayContent;->getWindowList()Lcom/android/server/wm/WindowList;

    move-result-object v2

    .line 3090
    .local v2, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual {v2}, Lcom/android/server/wm/WindowList;->size()I

    move-result v3

    add-int/lit8 v0, v3, -0x1

    .local v0, "i":I
    :goto_a
    if-ltz v0, :cond_1e

    .line 3091
    invoke-virtual {v2, v0}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/wm/WindowState;

    .line 3092
    .local v1, "win":Lcom/android/server/wm/WindowState;
    invoke-static {v1}, canBeImeTarget(Lcom/android/server/wm/WindowState;)Z

    move-result v3

    if-eqz v3, :cond_1b

    .line 3093
    add-int/lit8 v3, v0, 0x1

    .line 3096
    .end local v1    # "win":Lcom/android/server/wm/WindowState;
    :goto_1a
    return v3

    .line 3090
    .restart local v1    # "win":Lcom/android/server/wm/WindowState;
    :cond_1b
    add-int/lit8 v0, v0, -0x1

    goto :goto_a

    .line 3096
    .end local v1    # "win":Lcom/android/server/wm/WindowState;
    :cond_1e
    const/4 v3, 0x0

    goto :goto_1a
.end method

.method private findFocusedWindowLocked(Lcom/android/server/wm/DisplayContent;)Lcom/android/server/wm/WindowState;
    .registers 15
    .param p1, "displayContent"    # Lcom/android/server/wm/DisplayContent;

    .prologue
    const/4 v10, 0x0

    .line 18402
    invoke-virtual {p1}, Lcom/android/server/wm/DisplayContent;->getWindowList()Lcom/android/server/wm/WindowList;

    move-result-object v7

    .line 18409
    .local v7, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual {v7}, Lcom/android/server/wm/WindowList;->size()I

    move-result v9

    add-int/lit8 v0, v9, -0x1

    .local v0, "i":I
    :goto_b
    if-ltz v0, :cond_15b

    .line 18410
    invoke-virtual {v7, v0}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Lcom/android/server/wm/WindowState;

    .line 18412
    .local v6, "win":Lcom/android/server/wm/WindowState;
    sget-boolean v9, DEBUG_FOCUS:Z

    if-eqz v9, :cond_55

    const-string v9, "WindowManager"

    new-instance v11, Ljava/lang/StringBuilder;

    invoke-direct {v11}, Ljava/lang/StringBuilder;-><init>()V

    const-string v12, "Looking for focus: "

    invoke-virtual {v11, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v11

    invoke-virtual {v11, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v11

    const-string v12, " = "

    invoke-virtual {v11, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v11

    invoke-virtual {v11, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v11

    const-string v12, ", flags="

    invoke-virtual {v11, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v11

    iget-object v12, v6, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v12, v12, Landroid/view/WindowManager$LayoutParams;->flags:I

    invoke-virtual {v11, v12}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v11

    const-string v12, ", canReceive="

    invoke-virtual {v11, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v11

    invoke-virtual {v6}, Lcom/android/server/wm/WindowState;->canReceiveKeys()Z

    move-result v12

    invoke-virtual {v11, v12}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v11

    invoke-virtual {v11}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v11

    invoke-static {v9, v11}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 18418
    :cond_55
    invoke-virtual {v6}, Lcom/android/server/wm/WindowState;->canReceiveKeys()Z

    move-result v9

    if-nez v9, :cond_5e

    .line 18409
    :cond_5b
    :goto_5b
    add-int/lit8 v0, v0, -0x1

    goto :goto_b

    .line 18422
    :cond_5e
    iget-object v8, v6, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    .line 18425
    .local v8, "wtoken":Lcom/android/server/wm/AppWindowToken;
    if-eqz v8, :cond_9c

    iget-boolean v9, v8, Lcom/android/server/wm/AppWindowToken;->removed:Z

    if-nez v9, :cond_6a

    iget-boolean v9, v8, Lcom/android/server/wm/AppWindowToken;->sendingToBottom:Z

    if-eqz v9, :cond_9c

    .line 18426
    :cond_6a
    sget-boolean v9, DEBUG_FOCUS:Z

    if-eqz v9, :cond_5b

    const-string v11, "WindowManager"

    new-instance v9, Ljava/lang/StringBuilder;

    invoke-direct {v9}, Ljava/lang/StringBuilder;-><init>()V

    const-string v12, "Skipping "

    invoke-virtual {v9, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v9

    invoke-virtual {v9, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v9

    const-string v12, " because "

    invoke-virtual {v9, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v12

    iget-boolean v9, v8, Lcom/android/server/wm/AppWindowToken;->removed:Z

    if-eqz v9, :cond_98

    const-string/jumbo v9, "removed"

    :goto_8c
    invoke-virtual {v12, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v9

    invoke-virtual {v9}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v9

    invoke-static {v11, v9}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_5b

    :cond_98
    const-string/jumbo v9, "sendingToBottom"

    goto :goto_8c

    .line 18433
    :cond_9c
    if-eqz v8, :cond_cf

    iget-object v9, v6, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v9, v9, Landroid/view/WindowManager$LayoutParams;->type:I

    const/4 v11, 0x3

    if-eq v9, v11, :cond_cf

    iget-object v9, p0, mFocusedApp:Lcom/android/server/wm/AppWindowToken;

    if-eqz v9, :cond_cf

    .line 18435
    invoke-virtual {p1}, Lcom/android/server/wm/DisplayContent;->getTasks()Ljava/util/ArrayList;

    move-result-object v2

    .line 18436
    .local v2, "tasks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/Task;>;"
    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I

    move-result v9

    add-int/lit8 v1, v9, -0x1

    .local v1, "taskNdx":I
    :goto_b3
    if-ltz v1, :cond_cf

    .line 18437
    invoke-virtual {v2, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v9

    check-cast v9, Lcom/android/server/wm/Task;

    iget-object v5, v9, Lcom/android/server/wm/Task;->mAppTokens:Lcom/android/server/wm/AppTokenList;

    .line 18438
    .local v5, "tokens":Lcom/android/server/wm/AppTokenList;
    invoke-virtual {v5}, Lcom/android/server/wm/AppTokenList;->size()I

    move-result v9

    add-int/lit8 v4, v9, -0x1

    .line 18439
    .local v4, "tokenNdx":I
    :goto_c3
    if-ltz v4, :cond_cd

    .line 18440
    invoke-virtual {v5, v4}, Lcom/android/server/wm/AppTokenList;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/wm/AppWindowToken;

    .line 18441
    .local v3, "token":Lcom/android/server/wm/AppWindowToken;
    if-ne v8, v3, :cond_108

    .line 18451
    .end local v3    # "token":Lcom/android/server/wm/AppWindowToken;
    :cond_cd
    if-ltz v4, :cond_130

    .line 18460
    .end local v1    # "taskNdx":I
    .end local v2    # "tasks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/Task;>;"
    .end local v4    # "tokenNdx":I
    .end local v5    # "tokens":Lcom/android/server/wm/AppTokenList;
    :cond_cf
    iget-object v9, v6, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    if-eqz v9, :cond_133

    iget-object v9, v6, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    iget-object v11, p0, mFocusedApp:Lcom/android/server/wm/AppWindowToken;

    if-eq v9, v11, :cond_133

    invoke-virtual {v6}, Lcom/android/server/wm/WindowState;->getMultiWindowStyleLw()Lcom/samsung/android/multiwindow/MultiWindowStyle;

    move-result-object v9

    invoke-virtual {v9}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->getType()I

    move-result v9

    const/4 v11, 0x2

    if-ne v9, v11, :cond_133

    .line 18462
    sget-boolean v9, DEBUG_FOCUS_LIGHT:Z

    if-eqz v9, :cond_5b

    .line 18463
    const-string v9, "WindowManager"

    new-instance v11, Ljava/lang/StringBuilder;

    invoke-direct {v11}, Ljava/lang/StringBuilder;-><init>()V

    const-string v12, "The win("

    invoke-virtual {v11, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v11

    invoke-virtual {v11, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v11

    const-string v12, ") is found. But this is floating."

    invoke-virtual {v11, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v11

    invoke-virtual {v11}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v11

    invoke-static {v9, v11}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    goto/16 :goto_5b

    .line 18444
    .restart local v1    # "taskNdx":I
    .restart local v2    # "tasks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/Task;>;"
    .restart local v3    # "token":Lcom/android/server/wm/AppWindowToken;
    .restart local v4    # "tokenNdx":I
    .restart local v5    # "tokens":Lcom/android/server/wm/AppTokenList;
    :cond_108
    iget-object v9, p0, mFocusedApp:Lcom/android/server/wm/AppWindowToken;

    if-ne v9, v3, :cond_12d

    .line 18446
    sget-boolean v9, DEBUG_FOCUS_LIGHT:Z

    if-eqz v9, :cond_12b

    const-string v9, "WindowManager"

    new-instance v11, Ljava/lang/StringBuilder;

    invoke-direct {v11}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v12, "findFocusedWindow: Reached focused app="

    invoke-virtual {v11, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v11

    iget-object v12, p0, mFocusedApp:Lcom/android/server/wm/AppWindowToken;

    invoke-virtual {v11, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v11

    invoke-virtual {v11}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v11

    invoke-static {v9, v11}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    :cond_12b
    move-object v6, v10

    .line 18475
    .end local v1    # "taskNdx":I
    .end local v2    # "tasks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/Task;>;"
    .end local v3    # "token":Lcom/android/server/wm/AppWindowToken;
    .end local v4    # "tokenNdx":I
    .end local v5    # "tokens":Lcom/android/server/wm/AppTokenList;
    .end local v6    # "win":Lcom/android/server/wm/WindowState;
    .end local v8    # "wtoken":Lcom/android/server/wm/AppWindowToken;
    :cond_12c
    :goto_12c
    return-object v6

    .line 18439
    .restart local v1    # "taskNdx":I
    .restart local v2    # "tasks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/Task;>;"
    .restart local v3    # "token":Lcom/android/server/wm/AppWindowToken;
    .restart local v4    # "tokenNdx":I
    .restart local v5    # "tokens":Lcom/android/server/wm/AppTokenList;
    .restart local v6    # "win":Lcom/android/server/wm/WindowState;
    .restart local v8    # "wtoken":Lcom/android/server/wm/AppWindowToken;
    :cond_12d
    add-int/lit8 v4, v4, -0x1

    goto :goto_c3

    .line 18436
    .end local v3    # "token":Lcom/android/server/wm/AppWindowToken;
    :cond_130
    add-int/lit8 v1, v1, -0x1

    goto :goto_b3

    .line 18469
    .end local v1    # "taskNdx":I
    .end local v2    # "tasks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/Task;>;"
    .end local v4    # "tokenNdx":I
    .end local v5    # "tokens":Lcom/android/server/wm/AppTokenList;
    :cond_133
    sget-boolean v9, DEBUG_FOCUS_LIGHT:Z

    if-eqz v9, :cond_12c

    const-string v9, "WindowManager"

    new-instance v10, Ljava/lang/StringBuilder;

    invoke-direct {v10}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v11, "findFocusedWindow: Found new focus @ "

    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    invoke-virtual {v10, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v10

    const-string v11, " = "

    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    invoke-virtual {v10, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v10

    invoke-virtual {v10}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v10

    invoke-static {v9, v10}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_12c

    .line 18474
    .end local v6    # "win":Lcom/android/server/wm/WindowState;
    .end local v8    # "wtoken":Lcom/android/server/wm/AppWindowToken;
    :cond_15b
    sget-boolean v9, DEBUG_FOCUS_LIGHT:Z

    if-eqz v9, :cond_167

    const-string v9, "WindowManager"

    const-string/jumbo v11, "findFocusedWindow: No focusable windows."

    invoke-static {v9, v11}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    :cond_167
    move-object v6, v10

    .line 18475
    goto :goto_12c
.end method

.method private findForceLocalOrientationWindowLayer(Lcom/android/server/wm/DisplayContent;)I
    .registers 10
    .param p1, "displayContent"    # Lcom/android/server/wm/DisplayContent;

    .prologue
    const/4 v6, -0x1

    .line 20346
    iget-boolean v7, p0, mReduceScreenRunning:Z

    if-eqz v7, :cond_6

    .line 20384
    :cond_5
    :goto_5
    return v6

    .line 20350
    :cond_6
    invoke-virtual {p1}, Lcom/android/server/wm/DisplayContent;->isDimming()Z

    move-result v7

    if-nez v7, :cond_5

    .line 20361
    iget-object v3, p0, mOpeningApps:Landroid/util/ArraySet;

    .line 20362
    .local v3, "mOpeningApps":Landroid/util/ArraySet;, "Landroid/util/ArraySet<Lcom/android/server/wm/AppWindowToken;>;"
    iget-object v2, p0, mClosingApps:Landroid/util/ArraySet;

    .line 20365
    .local v2, "mClosingApps":Landroid/util/ArraySet;, "Landroid/util/ArraySet<Lcom/android/server/wm/AppWindowToken;>;"
    invoke-virtual {v3}, Landroid/util/ArraySet;->size()I

    move-result v7

    if-gtz v7, :cond_5

    invoke-virtual {v2}, Landroid/util/ArraySet;->size()I

    move-result v7

    if-gtz v7, :cond_5

    .line 20369
    invoke-virtual {p1}, Lcom/android/server/wm/DisplayContent;->getWindowList()Lcom/android/server/wm/WindowList;

    move-result-object v5

    .line 20370
    .local v5, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual {v5}, Lcom/android/server/wm/WindowList;->size()I

    move-result v0

    .line 20371
    .local v0, "N":I
    add-int/lit8 v1, v0, -0x1

    .line 20372
    .local v1, "i":I
    :goto_26
    if-ltz v1, :cond_5

    .line 20373
    invoke-virtual {v5, v1}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/server/wm/WindowState;

    .line 20374
    .local v4, "w":Lcom/android/server/wm/WindowState;
    invoke-virtual {v4}, Lcom/android/server/wm/WindowState;->isVisibleLw()Z

    move-result v7

    if-eqz v7, :cond_55

    iget-object v7, v4, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v7, v7, Landroid/view/WindowManager$LayoutParams;->samsungFlags:I

    and-int/lit8 v7, v7, 0xc

    if-eqz v7, :cond_55

    invoke-virtual {v4}, Lcom/android/server/wm/WindowState;->getMultiWindowStyleLw()Lcom/samsung/android/multiwindow/MultiWindowStyle;

    move-result-object v7

    invoke-virtual {v7}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->isCascade()Z

    move-result v7

    if-nez v7, :cond_55

    iget-object v7, v4, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    if-eqz v7, :cond_50

    iget-object v7, v4, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    iget-boolean v7, v7, Lcom/android/server/wm/AppWindowToken;->mMultiWindowStyleChanging:Z

    if-nez v7, :cond_55

    .line 20381
    :cond_50
    iget-object v6, v4, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    iget v6, v6, Lcom/android/server/wm/WindowStateAnimator;->mSurfaceLayer:I

    goto :goto_5

    .line 20372
    :cond_55
    add-int/lit8 v1, v1, -0x1

    goto :goto_26
.end method

.method private findGlobalFocusedWindowLocked()Lcom/android/server/wm/WindowState;
    .registers 14

    .prologue
    const/4 v10, 0x0

    .line 23273
    invoke-virtual {p0}, getGlobalWindowListLocked()Lcom/android/server/wm/WindowList;

    move-result-object v7

    .line 23275
    .local v7, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual {v7}, Lcom/android/server/wm/WindowList;->size()I

    move-result v9

    add-int/lit8 v0, v9, -0x1

    .local v0, "i":I
    :goto_b
    if-ltz v0, :cond_159

    .line 23276
    invoke-virtual {v7, v0}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Lcom/android/server/wm/WindowState;

    .line 23278
    .local v6, "win":Lcom/android/server/wm/WindowState;
    sget-boolean v9, DEBUG_FOCUS:Z

    if-eqz v9, :cond_55

    const-string v9, "WindowManager"

    new-instance v11, Ljava/lang/StringBuilder;

    invoke-direct {v11}, Ljava/lang/StringBuilder;-><init>()V

    const-string v12, "Looking for focus: "

    invoke-virtual {v11, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v11

    invoke-virtual {v11, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v11

    const-string v12, " = "

    invoke-virtual {v11, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v11

    invoke-virtual {v11, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v11

    const-string v12, ", flags="

    invoke-virtual {v11, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v11

    iget-object v12, v6, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v12, v12, Landroid/view/WindowManager$LayoutParams;->flags:I

    invoke-virtual {v11, v12}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v11

    const-string v12, ", canReceive="

    invoke-virtual {v11, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v11

    invoke-virtual {v6}, Lcom/android/server/wm/WindowState;->canReceiveKeys()Z

    move-result v12

    invoke-virtual {v11, v12}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v11

    invoke-virtual {v11}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v11

    invoke-static {v9, v11}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 23284
    :cond_55
    invoke-virtual {v6}, Lcom/android/server/wm/WindowState;->canReceiveKeys()Z

    move-result v9

    if-nez v9, :cond_5e

    .line 23275
    :cond_5b
    :goto_5b
    add-int/lit8 v0, v0, -0x1

    goto :goto_b

    .line 23288
    :cond_5e
    iget-object v8, v6, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    .line 23291
    .local v8, "wtoken":Lcom/android/server/wm/AppWindowToken;
    if-eqz v8, :cond_9c

    iget-boolean v9, v8, Lcom/android/server/wm/AppWindowToken;->removed:Z

    if-nez v9, :cond_6a

    iget-boolean v9, v8, Lcom/android/server/wm/AppWindowToken;->sendingToBottom:Z

    if-eqz v9, :cond_9c

    .line 23292
    :cond_6a
    sget-boolean v9, DEBUG_FOCUS:Z

    if-eqz v9, :cond_5b

    const-string v11, "WindowManager"

    new-instance v9, Ljava/lang/StringBuilder;

    invoke-direct {v9}, Ljava/lang/StringBuilder;-><init>()V

    const-string v12, "Skipping "

    invoke-virtual {v9, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v9

    invoke-virtual {v9, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v9

    const-string v12, " because "

    invoke-virtual {v9, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v12

    iget-boolean v9, v8, Lcom/android/server/wm/AppWindowToken;->removed:Z

    if-eqz v9, :cond_98

    const-string/jumbo v9, "removed"

    :goto_8c
    invoke-virtual {v12, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v9

    invoke-virtual {v9}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v9

    invoke-static {v11, v9}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_5b

    :cond_98
    const-string/jumbo v9, "sendingToBottom"

    goto :goto_8c

    .line 23299
    :cond_9c
    if-eqz v8, :cond_cd

    iget-object v9, v6, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v9, v9, Landroid/view/WindowManager$LayoutParams;->type:I

    const/4 v11, 0x3

    if-eq v9, v11, :cond_cd

    iget-object v9, p0, mFocusedApp:Lcom/android/server/wm/AppWindowToken;

    if-eqz v9, :cond_cd

    .line 23301
    iget-object v2, p0, mUniversalTaskHistory:Ljava/util/ArrayList;

    .line 23302
    .local v2, "tasks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/Task;>;"
    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I

    move-result v9

    add-int/lit8 v1, v9, -0x1

    .local v1, "taskNdx":I
    :goto_b1
    if-ltz v1, :cond_cd

    .line 23303
    invoke-virtual {v2, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v9

    check-cast v9, Lcom/android/server/wm/Task;

    iget-object v5, v9, Lcom/android/server/wm/Task;->mAppTokens:Lcom/android/server/wm/AppTokenList;

    .line 23304
    .local v5, "tokens":Lcom/android/server/wm/AppTokenList;
    invoke-virtual {v5}, Lcom/android/server/wm/AppTokenList;->size()I

    move-result v9

    add-int/lit8 v4, v9, -0x1

    .line 23305
    .local v4, "tokenNdx":I
    :goto_c1
    if-ltz v4, :cond_cb

    .line 23306
    invoke-virtual {v5, v4}, Lcom/android/server/wm/AppTokenList;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/wm/AppWindowToken;

    .line 23307
    .local v3, "token":Lcom/android/server/wm/AppWindowToken;
    if-ne v8, v3, :cond_106

    .line 23317
    .end local v3    # "token":Lcom/android/server/wm/AppWindowToken;
    :cond_cb
    if-ltz v4, :cond_12e

    .line 23326
    .end local v1    # "taskNdx":I
    .end local v2    # "tasks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/Task;>;"
    .end local v4    # "tokenNdx":I
    .end local v5    # "tokens":Lcom/android/server/wm/AppTokenList;
    :cond_cd
    iget-object v9, v6, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    if-eqz v9, :cond_131

    iget-object v9, v6, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    iget-object v11, p0, mFocusedApp:Lcom/android/server/wm/AppWindowToken;

    if-eq v9, v11, :cond_131

    invoke-virtual {v6}, Lcom/android/server/wm/WindowState;->getMultiWindowStyleLw()Lcom/samsung/android/multiwindow/MultiWindowStyle;

    move-result-object v9

    invoke-virtual {v9}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->getType()I

    move-result v9

    const/4 v11, 0x2

    if-ne v9, v11, :cond_131

    .line 23328
    sget-boolean v9, DEBUG_FOCUS_LIGHT:Z

    if-eqz v9, :cond_5b

    .line 23329
    const-string v9, "WindowManager"

    new-instance v11, Ljava/lang/StringBuilder;

    invoke-direct {v11}, Ljava/lang/StringBuilder;-><init>()V

    const-string v12, "The win("

    invoke-virtual {v11, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v11

    invoke-virtual {v11, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v11

    const-string v12, ") is found. But this is floating."

    invoke-virtual {v11, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v11

    invoke-virtual {v11}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v11

    invoke-static {v9, v11}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    goto/16 :goto_5b

    .line 23310
    .restart local v1    # "taskNdx":I
    .restart local v2    # "tasks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/Task;>;"
    .restart local v3    # "token":Lcom/android/server/wm/AppWindowToken;
    .restart local v4    # "tokenNdx":I
    .restart local v5    # "tokens":Lcom/android/server/wm/AppTokenList;
    :cond_106
    iget-object v9, p0, mFocusedApp:Lcom/android/server/wm/AppWindowToken;

    if-ne v9, v3, :cond_12b

    .line 23312
    sget-boolean v9, DEBUG_FOCUS_LIGHT:Z

    if-eqz v9, :cond_129

    const-string v9, "WindowManager"

    new-instance v11, Ljava/lang/StringBuilder;

    invoke-direct {v11}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v12, "findFocusedWindow: Reached focused app="

    invoke-virtual {v11, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v11

    iget-object v12, p0, mFocusedApp:Lcom/android/server/wm/AppWindowToken;

    invoke-virtual {v11, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v11

    invoke-virtual {v11}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v11

    invoke-static {v9, v11}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    :cond_129
    move-object v6, v10

    .line 23341
    .end local v1    # "taskNdx":I
    .end local v2    # "tasks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/Task;>;"
    .end local v3    # "token":Lcom/android/server/wm/AppWindowToken;
    .end local v4    # "tokenNdx":I
    .end local v5    # "tokens":Lcom/android/server/wm/AppTokenList;
    .end local v6    # "win":Lcom/android/server/wm/WindowState;
    .end local v8    # "wtoken":Lcom/android/server/wm/AppWindowToken;
    :cond_12a
    :goto_12a
    return-object v6

    .line 23305
    .restart local v1    # "taskNdx":I
    .restart local v2    # "tasks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/Task;>;"
    .restart local v3    # "token":Lcom/android/server/wm/AppWindowToken;
    .restart local v4    # "tokenNdx":I
    .restart local v5    # "tokens":Lcom/android/server/wm/AppTokenList;
    .restart local v6    # "win":Lcom/android/server/wm/WindowState;
    .restart local v8    # "wtoken":Lcom/android/server/wm/AppWindowToken;
    :cond_12b
    add-int/lit8 v4, v4, -0x1

    goto :goto_c1

    .line 23302
    .end local v3    # "token":Lcom/android/server/wm/AppWindowToken;
    :cond_12e
    add-int/lit8 v1, v1, -0x1

    goto :goto_b1

    .line 23335
    .end local v1    # "taskNdx":I
    .end local v2    # "tasks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/Task;>;"
    .end local v4    # "tokenNdx":I
    .end local v5    # "tokens":Lcom/android/server/wm/AppTokenList;
    :cond_131
    sget-boolean v9, DEBUG_FOCUS_LIGHT:Z

    if-eqz v9, :cond_12a

    const-string v9, "WindowManager"

    new-instance v10, Ljava/lang/StringBuilder;

    invoke-direct {v10}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v11, "findFocusedWindow: Found new focus @ "

    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    invoke-virtual {v10, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v10

    const-string v11, " = "

    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    invoke-virtual {v10, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v10

    invoke-virtual {v10}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v10

    invoke-static {v9, v10}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_12a

    .line 23340
    .end local v6    # "win":Lcom/android/server/wm/WindowState;
    .end local v8    # "wtoken":Lcom/android/server/wm/AppWindowToken;
    :cond_159
    sget-boolean v9, DEBUG_FOCUS_LIGHT:Z

    if-eqz v9, :cond_165

    const-string v9, "WindowManager"

    const-string/jumbo v11, "findFocusedWindow: No focusable windows."

    invoke-static {v9, v11}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    :cond_165
    move-object v6, v10

    .line 23341
    goto :goto_12a
.end method

.method private findIdxBasedOnAppTokens(Lcom/android/server/wm/WindowState;)I
    .registers 7
    .param p1, "win"    # Lcom/android/server/wm/WindowState;

    .prologue
    .line 1888
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->getWindowList()Lcom/android/server/wm/WindowList;

    move-result-object v2

    .line 1889
    .local v2, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual {v2}, Lcom/android/server/wm/WindowList;->size()I

    move-result v3

    add-int/lit8 v0, v3, -0x1

    .local v0, "j":I
    :goto_a
    if-ltz v0, :cond_2c

    .line 1890
    invoke-virtual {v2, v0}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/wm/WindowState;

    .line 1893
    .local v1, "wentry":Lcom/android/server/wm/WindowState;
    iget-object v3, v1, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v3, v3, Landroid/view/WindowManager$LayoutParams;->type:I

    const/16 v4, 0x3ee

    if-eq v3, v4, :cond_22

    iget-object v3, v1, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v3, v3, Landroid/view/WindowManager$LayoutParams;->type:I

    const/16 v4, 0x3ef

    if-ne v3, v4, :cond_25

    .line 1889
    :cond_22
    add-int/lit8 v0, v0, -0x1

    goto :goto_a

    .line 1898
    :cond_25
    iget-object v3, v1, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    iget-object v4, p1, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    if-ne v3, v4, :cond_22

    .line 1902
    .end local v0    # "j":I
    .end local v1    # "wentry":Lcom/android/server/wm/WindowState;
    :goto_2b
    return v0

    .restart local v0    # "j":I
    :cond_2c
    const/4 v0, -0x1

    goto :goto_2b
.end method

.method private findTargetWindow(FFLandroid/os/IBinder;)Lcom/android/server/wm/WindowState;
    .registers 5
    .param p1, "xf"    # F
    .param p2, "yf"    # F
    .param p3, "topToken"    # Landroid/os/IBinder;

    .prologue
    .line 1428
    const/4 v0, 0x0

    invoke-direct {p0, p1, p2, p3, v0}, findTargetWindow(FFLandroid/os/IBinder;Z)Lcom/android/server/wm/WindowState;

    move-result-object v0

    return-object v0
.end method

.method private findTargetWindow(FFLandroid/os/IBinder;Z)Lcom/android/server/wm/WindowState;
    .registers 20
    .param p1, "xf"    # F
    .param p2, "yf"    # F
    .param p3, "topToken"    # Landroid/os/IBinder;
    .param p4, "exceptInternnalWindow"    # Z

    .prologue
    .line 1434
    const/4 v9, 0x0

    .line 1435
    .local v9, "touchedWin":Lcom/android/server/wm/WindowState;
    move/from16 v0, p1

    float-to-int v11, v0

    .line 1436
    .local v11, "x":I
    move/from16 v0, p2

    float-to-int v12, v0

    .line 1437
    .local v12, "y":I
    invoke-virtual {p0}, getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v13

    invoke-virtual {v13}, Lcom/android/server/wm/DisplayContent;->getWindowList()Lcom/android/server/wm/WindowList;

    move-result-object v10

    .line 1438
    .local v10, "windows":Lcom/android/server/wm/WindowList;
    new-instance v7, Landroid/graphics/Rect;

    invoke-direct {v7}, Landroid/graphics/Rect;-><init>()V

    .line 1439
    .local v7, "tmpRect":Landroid/graphics/Rect;
    invoke-virtual {v10}, Lcom/android/server/wm/WindowList;->size()I

    move-result v13

    add-int/lit8 v4, v13, -0x1

    .local v4, "i":I
    :goto_1a
    if-ltz v4, :cond_d9

    .line 1440
    invoke-virtual {v10, v4}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/wm/WindowState;

    .line 1441
    .local v1, "child":Lcom/android/server/wm/WindowState;
    iget-object v13, v1, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v3, v13, Landroid/view/WindowManager$LayoutParams;->flags:I

    .line 1442
    .local v3, "flags":I
    invoke-virtual {v1}, Lcom/android/server/wm/WindowState;->isVisibleLw()Z

    move-result v13

    if-nez v13, :cond_2f

    .line 1439
    :cond_2c
    add-int/lit8 v4, v4, -0x1

    goto :goto_1a

    .line 1446
    :cond_2f
    and-int/lit8 v13, v3, 0x10

    if-nez v13, :cond_2c

    .line 1453
    if-eqz p4, :cond_3e

    iget-object v13, v1, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v13, v13, Landroid/view/WindowManager$LayoutParams;->samsungFlags:I

    const/high16 v14, -0x80000000

    and-int/2addr v13, v14

    if-nez v13, :cond_2c

    .line 1464
    :cond_3e
    iget-object v13, v1, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v13, v13, Landroid/view/WindowManager$LayoutParams;->type:I

    const/16 v14, 0x8cf

    if-eq v13, v14, :cond_2c

    iget-object v13, v1, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v13, v13, Landroid/view/WindowManager$LayoutParams;->type:I

    const/16 v14, 0x8ca

    if-eq v13, v14, :cond_2c

    .line 1472
    iget-object v13, v1, Lcom/android/server/wm/WindowState;->mFrame:Landroid/graphics/Rect;

    invoke-virtual {v7, v13}, Landroid/graphics/Rect;->set(Landroid/graphics/Rect;)V

    .line 1473
    iget v13, v1, Lcom/android/server/wm/WindowState;->mTouchableInsets:I

    const/4 v14, 0x1

    if-ne v13, v14, :cond_da

    .line 1478
    iget v13, v7, Landroid/graphics/Rect;->left:I

    iget-object v14, v1, Lcom/android/server/wm/WindowState;->mGivenContentInsets:Landroid/graphics/Rect;

    iget v14, v14, Landroid/graphics/Rect;->left:I

    add-int/2addr v13, v14

    iput v13, v7, Landroid/graphics/Rect;->left:I

    .line 1479
    iget v13, v7, Landroid/graphics/Rect;->top:I

    iget-object v14, v1, Lcom/android/server/wm/WindowState;->mGivenContentInsets:Landroid/graphics/Rect;

    iget v14, v14, Landroid/graphics/Rect;->top:I

    add-int/2addr v13, v14

    iput v13, v7, Landroid/graphics/Rect;->top:I

    .line 1480
    iget v13, v7, Landroid/graphics/Rect;->right:I

    iget-object v14, v1, Lcom/android/server/wm/WindowState;->mGivenContentInsets:Landroid/graphics/Rect;

    iget v14, v14, Landroid/graphics/Rect;->right:I

    sub-int/2addr v13, v14

    iput v13, v7, Landroid/graphics/Rect;->right:I

    .line 1481
    iget v13, v7, Landroid/graphics/Rect;->bottom:I

    iget-object v14, v1, Lcom/android/server/wm/WindowState;->mGivenContentInsets:Landroid/graphics/Rect;

    iget v14, v14, Landroid/graphics/Rect;->bottom:I

    sub-int/2addr v13, v14

    iput v13, v7, Landroid/graphics/Rect;->bottom:I

    .line 1503
    :cond_7c
    :goto_7c
    const/4 v5, 0x1

    .line 1505
    .local v5, "isNormal":Z
    invoke-virtual {v1}, Lcom/android/server/wm/WindowState;->getMultiWindowStyleLw()Lcom/samsung/android/multiwindow/MultiWindowStyle;

    move-result-object v6

    .line 1506
    .local v6, "multiWindowStyle":Lcom/samsung/android/multiwindow/MultiWindowStyle;
    invoke-virtual {v6}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->isNormal()Z

    move-result v5

    .line 1507
    invoke-virtual {v6}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->isCascade()Z

    move-result v13

    if-eqz v13, :cond_be

    .line 1508
    const/4 v13, 0x4

    invoke-virtual {v6, v13}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->isEnabled(I)Z

    move-result v13

    if-nez v13, :cond_2c

    .line 1511
    iget v13, v1, Lcom/android/server/wm/WindowState;->mHScale:F

    const/high16 v14, 0x3f800000    # 1.0f

    cmpl-float v13, v13, v14

    if-nez v13, :cond_a2

    iget v13, v1, Lcom/android/server/wm/WindowState;->mVScale:F

    const/high16 v14, 0x3f800000    # 1.0f

    cmpl-float v13, v13, v14

    if-eqz v13, :cond_be

    .line 1512
    :cond_a2
    invoke-virtual {v7}, Landroid/graphics/Rect;->width()I

    move-result v13

    int-to-float v13, v13

    iget v14, v1, Lcom/android/server/wm/WindowState;->mHScale:F

    mul-float/2addr v13, v14

    float-to-int v13, v13

    iget v14, v7, Landroid/graphics/Rect;->left:I

    add-int/2addr v13, v14

    iput v13, v7, Landroid/graphics/Rect;->right:I

    .line 1513
    invoke-virtual {v7}, Landroid/graphics/Rect;->height()I

    move-result v13

    int-to-float v13, v13

    iget v14, v1, Lcom/android/server/wm/WindowState;->mVScale:F

    mul-float/2addr v13, v14

    float-to-int v13, v13

    iget v14, v7, Landroid/graphics/Rect;->top:I

    add-int/2addr v13, v14

    iput v13, v7, Landroid/graphics/Rect;->bottom:I

    .line 1519
    :cond_be
    and-int/lit8 v8, v3, 0x28

    .line 1520
    .local v8, "touchFlags":I
    invoke-virtual {v7, v11, v12}, Landroid/graphics/Rect;->contains(II)Z

    move-result v2

    .line 1524
    .local v2, "contains":Z
    if-nez v2, :cond_ca

    if-nez v8, :cond_ca

    if-eqz v5, :cond_2c

    .line 1530
    :cond_ca
    if-nez v2, :cond_ce

    if-nez v8, :cond_2c

    .line 1532
    :cond_ce
    move-object v9, v1

    .line 1533
    iget-object v13, v9, Lcom/android/server/wm/WindowState;->mClient:Landroid/view/IWindow;

    invoke-interface {v13}, Landroid/view/IWindow;->asBinder()Landroid/os/IBinder;

    move-result-object v13

    move-object/from16 v0, p3

    if-eq v13, v0, :cond_2c

    .line 1538
    .end local v1    # "child":Lcom/android/server/wm/WindowState;
    .end local v2    # "contains":Z
    .end local v3    # "flags":I
    .end local v5    # "isNormal":Z
    .end local v6    # "multiWindowStyle":Lcom/samsung/android/multiwindow/MultiWindowStyle;
    .end local v8    # "touchFlags":I
    :cond_d9
    return-object v9

    .line 1482
    .restart local v1    # "child":Lcom/android/server/wm/WindowState;
    .restart local v3    # "flags":I
    :cond_da
    iget v13, v1, Lcom/android/server/wm/WindowState;->mTouchableInsets:I

    const/4 v14, 0x2

    if-ne v13, v14, :cond_105

    .line 1487
    iget v13, v7, Landroid/graphics/Rect;->left:I

    iget-object v14, v1, Lcom/android/server/wm/WindowState;->mGivenVisibleInsets:Landroid/graphics/Rect;

    iget v14, v14, Landroid/graphics/Rect;->left:I

    add-int/2addr v13, v14

    iput v13, v7, Landroid/graphics/Rect;->left:I

    .line 1488
    iget v13, v7, Landroid/graphics/Rect;->top:I

    iget-object v14, v1, Lcom/android/server/wm/WindowState;->mGivenVisibleInsets:Landroid/graphics/Rect;

    iget v14, v14, Landroid/graphics/Rect;->top:I

    add-int/2addr v13, v14

    iput v13, v7, Landroid/graphics/Rect;->top:I

    .line 1489
    iget v13, v7, Landroid/graphics/Rect;->right:I

    iget-object v14, v1, Lcom/android/server/wm/WindowState;->mGivenVisibleInsets:Landroid/graphics/Rect;

    iget v14, v14, Landroid/graphics/Rect;->right:I

    sub-int/2addr v13, v14

    iput v13, v7, Landroid/graphics/Rect;->right:I

    .line 1490
    iget v13, v7, Landroid/graphics/Rect;->bottom:I

    iget-object v14, v1, Lcom/android/server/wm/WindowState;->mGivenVisibleInsets:Landroid/graphics/Rect;

    iget v14, v14, Landroid/graphics/Rect;->bottom:I

    sub-int/2addr v13, v14

    iput v13, v7, Landroid/graphics/Rect;->bottom:I

    goto/16 :goto_7c

    .line 1491
    :cond_105
    iget v13, v1, Lcom/android/server/wm/WindowState;->mTouchableInsets:I

    const/4 v14, 0x3

    if-ne v13, v14, :cond_7c

    .line 1496
    iget v13, v7, Landroid/graphics/Rect;->left:I

    iget-object v14, v1, Lcom/android/server/wm/WindowState;->mGivenVisibleInsets:Landroid/graphics/Rect;

    iget v14, v14, Landroid/graphics/Rect;->left:I

    add-int/2addr v13, v14

    iput v13, v7, Landroid/graphics/Rect;->left:I

    .line 1497
    iget v13, v7, Landroid/graphics/Rect;->top:I

    iget-object v14, v1, Lcom/android/server/wm/WindowState;->mGivenVisibleInsets:Landroid/graphics/Rect;

    iget v14, v14, Landroid/graphics/Rect;->top:I

    add-int/2addr v13, v14

    iput v13, v7, Landroid/graphics/Rect;->top:I

    .line 1498
    iget v13, v7, Landroid/graphics/Rect;->right:I

    iget-object v14, v1, Lcom/android/server/wm/WindowState;->mGivenVisibleInsets:Landroid/graphics/Rect;

    iget v14, v14, Landroid/graphics/Rect;->right:I

    sub-int/2addr v13, v14

    iput v13, v7, Landroid/graphics/Rect;->right:I

    .line 1499
    iget v13, v7, Landroid/graphics/Rect;->bottom:I

    iget-object v14, v1, Lcom/android/server/wm/WindowState;->mGivenVisibleInsets:Landroid/graphics/Rect;

    iget v14, v14, Landroid/graphics/Rect;->bottom:I

    sub-int/2addr v13, v14

    iput v13, v7, Landroid/graphics/Rect;->bottom:I

    goto/16 :goto_7c
.end method

.method private findWindow(I)Lcom/android/server/wm/WindowState;
    .registers 10
    .param p1, "hashCode"    # I

    .prologue
    .line 12399
    const/4 v6, -0x1

    if-ne p1, v6, :cond_8

    .line 12401
    invoke-direct {p0}, getFocusedWindow()Lcom/android/server/wm/WindowState;

    move-result-object v3

    .line 12418
    :goto_7
    return-object v3

    .line 12404
    :cond_8
    iget-object v7, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v7

    .line 12405
    :try_start_b
    iget-object v6, p0, mDisplayContents:Landroid/util/SparseArray;

    invoke-virtual {v6}, Landroid/util/SparseArray;->size()I

    move-result v1

    .line 12406
    .local v1, "numDisplays":I
    const/4 v0, 0x0

    .local v0, "displayNdx":I
    :goto_12
    if-ge v0, v1, :cond_3e

    .line 12407
    iget-object v6, p0, mDisplayContents:Landroid/util/SparseArray;

    invoke-virtual {v6, v0}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Lcom/android/server/wm/DisplayContent;

    invoke-virtual {v6}, Lcom/android/server/wm/DisplayContent;->getWindowList()Lcom/android/server/wm/WindowList;

    move-result-object v5

    .line 12408
    .local v5, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual {v5}, Lcom/android/server/wm/WindowList;->size()I

    move-result v2

    .line 12409
    .local v2, "numWindows":I
    const/4 v4, 0x0

    .local v4, "winNdx":I
    :goto_25
    if-ge v4, v2, :cond_3b

    .line 12410
    invoke-virtual {v5, v4}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/wm/WindowState;

    .line 12411
    .local v3, "w":Lcom/android/server/wm/WindowState;
    invoke-static {v3}, Ljava/lang/System;->identityHashCode(Ljava/lang/Object;)I

    move-result v6

    if-ne v6, p1, :cond_38

    .line 12412
    monitor-exit v7

    goto :goto_7

    .line 12416
    .end local v0    # "displayNdx":I
    .end local v1    # "numDisplays":I
    .end local v2    # "numWindows":I
    .end local v3    # "w":Lcom/android/server/wm/WindowState;
    .end local v4    # "winNdx":I
    .end local v5    # "windows":Lcom/android/server/wm/WindowList;
    :catchall_35
    move-exception v6

    monitor-exit v7
    :try_end_37
    .catchall {:try_start_b .. :try_end_37} :catchall_35

    throw v6

    .line 12409
    .restart local v0    # "displayNdx":I
    .restart local v1    # "numDisplays":I
    .restart local v2    # "numWindows":I
    .restart local v3    # "w":Lcom/android/server/wm/WindowState;
    .restart local v4    # "winNdx":I
    .restart local v5    # "windows":Lcom/android/server/wm/WindowList;
    :cond_38
    add-int/lit8 v4, v4, 0x1

    goto :goto_25

    .line 12406
    .end local v3    # "w":Lcom/android/server/wm/WindowState;
    :cond_3b
    add-int/lit8 v0, v0, 0x1

    goto :goto_12

    .line 12416
    .end local v2    # "numWindows":I
    .end local v4    # "winNdx":I
    .end local v5    # "windows":Lcom/android/server/wm/WindowList;
    :cond_3e
    :try_start_3e
    monitor-exit v7
    :try_end_3f
    .catchall {:try_start_3e .. :try_end_3f} :catchall_35

    .line 12418
    const/4 v3, 0x0

    goto :goto_7
.end method

.method static fixScale(F)F
    .registers 2
    .param p0, "scale"    # F

    .prologue
    .line 9992
    const/4 v0, 0x0

    cmpg-float v0, p0, v0

    if-gez v0, :cond_b

    const/4 p0, 0x0

    .line 9994
    :cond_6
    :goto_6
    invoke-static {p0}, Ljava/lang/Math;->abs(F)F

    move-result v0

    return v0

    .line 9993
    :cond_b
    const/high16 v0, 0x41a00000    # 20.0f

    cmpl-float v0, p0, v0

    if-lez v0, :cond_6

    const/high16 p0, 0x41a00000    # 20.0f

    goto :goto_6
.end method

.method private getFocusedWindow()Lcom/android/server/wm/WindowState;
    .registers 3

    .prologue
    .line 13014
    iget-object v1, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v1

    .line 13015
    :try_start_3
    invoke-direct {p0}, getFocusedWindowLocked()Lcom/android/server/wm/WindowState;

    move-result-object v0

    monitor-exit v1

    return-object v0

    .line 13016
    :catchall_9
    move-exception v0

    monitor-exit v1
    :try_end_b
    .catchall {:try_start_3 .. :try_end_b} :catchall_9

    throw v0
.end method

.method private getFocusedWindowLocked()Lcom/android/server/wm/WindowState;
    .registers 2

    .prologue
    .line 13020
    iget-object v0, p0, mCurrentFocus:Lcom/android/server/wm/WindowState;

    return-object v0
.end method

.method private getMultiWindowTransitionLocked()Lcom/android/server/wm/MultiWindowTransition;
    .registers 2

    .prologue
    .line 21172
    const/4 v0, 0x0

    invoke-virtual {p0, v0}, getMultiWindowTransitionLocked(I)Lcom/android/server/wm/MultiWindowTransition;

    move-result-object v0

    return-object v0
.end method

.method static getPropertyInt([Ljava/lang/String;IIILandroid/util/DisplayMetrics;)I
    .registers 8
    .param p0, "tokens"    # [Ljava/lang/String;
    .param p1, "index"    # I
    .param p2, "defUnits"    # I
    .param p3, "defDps"    # I
    .param p4, "dm"    # Landroid/util/DisplayMetrics;

    .prologue
    .line 19008
    array-length v2, p0

    if-ge p1, v2, :cond_13

    .line 19009
    aget-object v0, p0, p1

    .line 19010
    .local v0, "str":Ljava/lang/String;
    if-eqz v0, :cond_13

    invoke-virtual {v0}, Ljava/lang/String;->length()I

    move-result v2

    if-lez v2, :cond_13

    .line 19012
    :try_start_d
    invoke-static {v0}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;)I
    :try_end_10
    .catch Ljava/lang/Exception; {:try_start_d .. :try_end_10} :catch_12

    move-result v1

    .line 19022
    .end local v0    # "str":Ljava/lang/String;
    :goto_11
    return v1

    .line 19014
    .restart local v0    # "str":Ljava/lang/String;
    :catch_12
    move-exception v2

    .line 19018
    .end local v0    # "str":Ljava/lang/String;
    :cond_13
    if-nez p2, :cond_17

    move v1, p3

    .line 19019
    goto :goto_11

    .line 19021
    :cond_17
    int-to-float v2, p3

    invoke-static {p2, v2, p4}, Landroid/util/TypedValue;->applyDimension(IFLandroid/util/DisplayMetrics;)F

    move-result v2

    float-to-int v1, v2

    .line 19022
    .local v1, "val":I
    goto :goto_11
.end method

.method private handleAnimatingStoppedAndTransitionLocked()I
    .registers 2

    .prologue
    .line 16572
    const/4 v0, 0x0

    invoke-direct {p0, v0}, handleAnimatingStoppedAndTransitionLocked(I)I

    move-result v0

    return v0
.end method

.method private handleAnimatingStoppedAndTransitionLocked(I)I
    .registers 16
    .param p1, "displayId"    # I

    .prologue
    const/4 v13, 0x1

    .line 16575
    invoke-virtual {p0, p1}, getDisplayContentLocked(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v1

    .line 16576
    .local v1, "displayContent":Lcom/android/server/wm/DisplayContent;
    invoke-virtual {p0, p1}, getAppTransitionForDisplayLocked(I)Lcom/android/server/wm/AppTransition;

    move-result-object v3

    .line 16578
    .local v3, "mAppTransition":Lcom/android/server/wm/AppTransition;
    const/4 v0, 0x0

    .line 16580
    .local v0, "changes":I
    invoke-virtual {v3}, Lcom/android/server/wm/AppTransition;->setIdle()V

    .line 16582
    iget-object v11, p0, mNoAnimationNotifyOnTransitionFinished:Ljava/util/List;

    invoke-interface {v11}, Ljava/util/List;->size()I

    move-result v11

    add-int/lit8 v2, v11, -0x1

    .local v2, "i":I
    :goto_15
    if-ltz v2, :cond_25

    .line 16583
    iget-object v11, p0, mNoAnimationNotifyOnTransitionFinished:Ljava/util/List;

    invoke-interface {v11, v2}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v8

    check-cast v8, Landroid/os/IBinder;

    .line 16584
    .local v8, "token":Landroid/os/IBinder;
    invoke-virtual {v3, v8}, Lcom/android/server/wm/AppTransition;->notifyAppTransitionFinishedLocked(Landroid/os/IBinder;)V

    .line 16582
    add-int/lit8 v2, v2, -0x1

    goto :goto_15

    .line 16586
    .end local v8    # "token":Landroid/os/IBinder;
    :cond_25
    iget-object v11, p0, mNoAnimationNotifyOnTransitionFinished:Ljava/util/List;

    invoke-interface {v11}, Ljava/util/List;->clear()V

    .line 16588
    iget-object v11, p0, mDeferredHideWallpaper:Lcom/android/server/wm/WindowState;

    if-eqz v11, :cond_36

    .line 16589
    iget-object v11, p0, mDeferredHideWallpaper:Lcom/android/server/wm/WindowState;

    invoke-virtual {p0, v11}, hideWallpapersLocked(Lcom/android/server/wm/WindowState;)V

    .line 16590
    const/4 v11, 0x0

    iput-object v11, p0, mDeferredHideWallpaper:Lcom/android/server/wm/WindowState;

    .line 16597
    :cond_36
    invoke-virtual {v1}, Lcom/android/server/wm/DisplayContent;->getStacks()Ljava/util/ArrayList;

    move-result-object v5

    .line 16600
    .local v5, "stacks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/TaskStack;>;"
    invoke-virtual {v5}, Ljava/util/ArrayList;->size()I

    move-result v11

    add-int/lit8 v4, v11, -0x1

    .local v4, "stackNdx":I
    :goto_40
    if-ltz v4, :cond_76

    .line 16601
    invoke-virtual {v5, v4}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v11

    check-cast v11, Lcom/android/server/wm/TaskStack;

    invoke-virtual {v11}, Lcom/android/server/wm/TaskStack;->getTasks()Ljava/util/ArrayList;

    move-result-object v7

    .line 16602
    .local v7, "tasks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/Task;>;"
    invoke-virtual {v7}, Ljava/util/ArrayList;->size()I

    move-result v11

    add-int/lit8 v6, v11, -0x1

    .local v6, "taskNdx":I
    :goto_52
    if-ltz v6, :cond_73

    .line 16603
    invoke-virtual {v7, v6}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v11

    check-cast v11, Lcom/android/server/wm/Task;

    iget-object v10, v11, Lcom/android/server/wm/Task;->mAppTokens:Lcom/android/server/wm/AppTokenList;

    .line 16604
    .local v10, "tokens":Lcom/android/server/wm/AppTokenList;
    invoke-virtual {v10}, Lcom/android/server/wm/AppTokenList;->size()I

    move-result v11

    add-int/lit8 v9, v11, -0x1

    .local v9, "tokenNdx":I
    :goto_62
    if-ltz v9, :cond_70

    .line 16605
    invoke-virtual {v10, v9}, Lcom/android/server/wm/AppTokenList;->get(I)Ljava/lang/Object;

    move-result-object v11

    check-cast v11, Lcom/android/server/wm/AppWindowToken;

    const/4 v12, 0x0

    iput-boolean v12, v11, Lcom/android/server/wm/AppWindowToken;->sendingToBottom:Z

    .line 16604
    add-int/lit8 v9, v9, -0x1

    goto :goto_62

    .line 16602
    :cond_70
    add-int/lit8 v6, v6, -0x1

    goto :goto_52

    .line 16600
    .end local v9    # "tokenNdx":I
    .end local v10    # "tokens":Lcom/android/server/wm/AppTokenList;
    :cond_73
    add-int/lit8 v4, v4, -0x1

    goto :goto_40

    .line 16614
    .end local v6    # "taskNdx":I
    .end local v7    # "tasks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/Task;>;"
    :cond_76
    invoke-virtual {p0}, rebuildAppWindowListLocked()V

    .line 16621
    invoke-virtual {p0, v13}, moveMultiWindowCenterBarLocked(Z)Z

    .line 16622
    invoke-direct {p0}, movePenWindowHeaderToAppListTopLocked()V

    .line 16626
    or-int/lit8 v0, v0, 0x1

    .line 16627
    sget-boolean v11, DEBUG_WALLPAPER_LIGHT:Z

    if-eqz v11, :cond_8c

    const-string v11, "WindowManager"

    const-string v12, "Wallpaper layer changed: assigning layers + relayout"

    invoke-static {v11, v12}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 16634
    :cond_8c
    invoke-virtual {p0, v13}, moveInputMethodWindowsIfNeededLocked(Z)Z

    move-result v11

    if-nez v11, :cond_99

    .line 16635
    invoke-virtual {p0}, getDefaultWindowListLocked()Lcom/android/server/wm/WindowList;

    move-result-object v11

    invoke-direct {p0, v11}, assignLayersLocked(Lcom/android/server/wm/WindowList;)V

    .line 16639
    :cond_99
    iget-object v11, p0, mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    iput-boolean v13, v11, Lcom/android/server/wm/WindowManagerService$LayoutFields;->mWallpaperMayChange:Z

    .line 16643
    iput-boolean v13, p0, mFocusMayChange:Z

    .line 16645
    return v0
.end method

.method private handleDisplayChangedLocked(I)V
    .registers 3
    .param p1, "displayId"    # I

    .prologue
    .line 20178
    invoke-virtual {p0, p1}, getDisplayContentLocked(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v0

    .line 20179
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-eqz v0, :cond_9

    .line 20180
    invoke-virtual {v0}, Lcom/android/server/wm/DisplayContent;->updateDisplayInfo()V

    .line 20182
    :cond_9
    invoke-virtual {p0}, requestTraversalLocked()V

    .line 20183
    return-void
.end method

.method private handleDisplayRemovedLocked(I)V
    .registers 6
    .param p1, "displayId"    # I

    .prologue
    .line 20149
    invoke-virtual {p0, p1}, getDisplayContentLocked(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v0

    .line 20150
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-eqz v0, :cond_44

    .line 20151
    invoke-virtual {v0}, Lcom/android/server/wm/DisplayContent;->isAnimating()Z

    move-result v1

    if-eqz v1, :cond_10

    .line 20152
    const/4 v1, 0x1

    iput-boolean v1, v0, Lcom/android/server/wm/DisplayContent;->mDeferredRemoval:Z

    .line 20171
    :goto_f
    return-void

    .line 20155
    :cond_10
    sget-boolean v1, DEBUG_DISPLAY:Z

    if-eqz v1, :cond_2c

    const-string v1, "WindowManager"

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Removing display="

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v1, v2}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 20156
    :cond_2c
    iget-object v1, p0, mDisplayContents:Landroid/util/SparseArray;

    invoke-virtual {v1, p1}, Landroid/util/SparseArray;->delete(I)V

    .line 20157
    invoke-virtual {v0}, Lcom/android/server/wm/DisplayContent;->close()V

    .line 20158
    if-nez p1, :cond_44

    .line 20159
    iget-object v1, v0, Lcom/android/server/wm/DisplayContent;->mTapDetector:Lcom/android/server/wm/StackTapPointerEventListener;

    invoke-virtual {p0, v1}, unregisterPointerEventListener(Landroid/view/WindowManagerPolicy$PointerEventListener;)V

    .line 20162
    iget-object v1, v0, Lcom/android/server/wm/DisplayContent;->mMultiWindowGestureDetector:Lcom/android/server/wm/MultiWindowPointerEventListener;

    if-eqz v1, :cond_44

    .line 20163
    iget-object v1, v0, Lcom/android/server/wm/DisplayContent;->mMultiWindowGestureDetector:Lcom/android/server/wm/MultiWindowPointerEventListener;

    invoke-virtual {p0, v1}, unregisterPointerEventListener(Landroid/view/WindowManagerPolicy$PointerEventListener;)V

    .line 20169
    :cond_44
    iget-object v1, p0, mAnimator:Lcom/android/server/wm/WindowAnimator;

    invoke-virtual {v1, p1}, Lcom/android/server/wm/WindowAnimator;->removeDisplayLocked(I)V

    .line 20170
    invoke-virtual {p0}, requestTraversalLocked()V

    goto :goto_f
.end method

.method private handleFlagDimBehind(Lcom/android/server/wm/WindowState;)V
    .registers 7
    .param p1, "w"    # Lcom/android/server/wm/WindowState;

    .prologue
    .line 16882
    iget-object v0, p1, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    .line 16883
    .local v0, "attrs":Landroid/view/WindowManager$LayoutParams;
    iget v3, v0, Landroid/view/WindowManager$LayoutParams;->flags:I

    and-int/lit8 v3, v3, 0x2

    if-eqz v3, :cond_25

    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->isOnScreen()Z

    move-result v3

    if-eqz v3, :cond_25

    iget-boolean v3, p1, Lcom/android/server/wm/WindowState;->mExiting:Z

    if-eqz v3, :cond_19

    iget v3, v0, Landroid/view/WindowManager$LayoutParams;->flags:I

    const/high16 v4, 0x100000

    and-int/2addr v3, v4

    if-eqz v3, :cond_25

    .line 16886
    :cond_19
    iget-object v2, p1, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    .line 16888
    .local v2, "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    iget-object v3, p1, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    if-eqz v3, :cond_26

    .line 16892
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->getStack()Lcom/android/server/wm/TaskStack;

    move-result-object v1

    .line 16896
    .local v1, "stack":Lcom/android/server/wm/TaskStack;
    :goto_23
    if-nez v1, :cond_2d

    .line 16934
    .end local v1    # "stack":Lcom/android/server/wm/TaskStack;
    .end local v2    # "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    :cond_25
    :goto_25
    return-void

    .line 16894
    .restart local v2    # "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    :cond_26
    iget-object v3, p1, Lcom/android/server/wm/WindowState;->mDisplayContent:Lcom/android/server/wm/DisplayContent;

    invoke-virtual {v3}, Lcom/android/server/wm/DisplayContent;->getHomeStack()Lcom/android/server/wm/TaskStack;

    move-result-object v1

    .restart local v1    # "stack":Lcom/android/server/wm/TaskStack;
    goto :goto_23

    .line 16901
    :cond_2d
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->getMultiWindowStyleLw()Lcom/samsung/android/multiwindow/MultiWindowStyle;

    move-result-object v3

    invoke-virtual {v3}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->isCascade()Z

    move-result v3

    if-eqz v3, :cond_64

    .line 16902
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->getMultiWindowStyleLw()Lcom/samsung/android/multiwindow/MultiWindowStyle;

    move-result-object v3

    const/4 v4, 0x4

    invoke-virtual {v3, v4}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->isEnabled(I)Z

    move-result v3

    if-nez v3, :cond_25

    iget-object v3, p0, mAnimator:Lcom/android/server/wm/WindowAnimator;

    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->getDisplayId()I

    move-result v4

    invoke-virtual {v3, v4}, Lcom/android/server/wm/WindowAnimator;->getScreenRotationAnimationLocked(I)Lcom/android/server/wm/ScreenRotationAnimation;

    move-result-object v3

    if-nez v3, :cond_25

    iget-object v3, p1, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    invoke-virtual {v3}, Lcom/android/server/wm/WindowStateAnimator;->isAnimating()Z

    move-result v3

    if-nez v3, :cond_25

    iget-boolean v3, p1, Lcom/android/server/wm/WindowState;->mMultiWindowStyleChanging:Z

    if-nez v3, :cond_25

    iget-object v3, p1, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    if-eqz v3, :cond_64

    iget-object v3, p1, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    iget-boolean v3, v3, Lcom/android/server/wm/AppWindowToken;->mWaitingForMaximizeAnim:Z

    if-nez v3, :cond_25

    .line 16913
    :cond_64
    invoke-virtual {v1}, Lcom/android/server/wm/TaskStack;->setDimmingTag()V

    .line 16914
    invoke-virtual {v1, v2}, Lcom/android/server/wm/TaskStack;->isDimming(Lcom/android/server/wm/WindowStateAnimator;)Z

    move-result v3

    if-nez v3, :cond_25

    .line 16916
    invoke-virtual {v1, v2}, Lcom/android/server/wm/TaskStack;->startDimmingIfNeeded(Lcom/android/server/wm/WindowStateAnimator;)V

    goto :goto_25
.end method

.method private handleNotObscuredLocked(Lcom/android/server/wm/WindowState;II)V
    .registers 14
    .param p1, "w"    # Lcom/android/server/wm/WindowState;
    .param p2, "innerDw"    # I
    .param p3, "innerDh"    # I

    .prologue
    .line 16787
    iget-object v1, p1, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    .line 16788
    .local v1, "attrs":Landroid/view/WindowManager$LayoutParams;
    iget v0, v1, Landroid/view/WindowManager$LayoutParams;->flags:I

    .line 16789
    .local v0, "attrFlags":I
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->isDisplayedLw()Z

    move-result v2

    .line 16790
    .local v2, "canBeSeen":Z
    if-eqz v2, :cond_187

    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->isOpaqueDrawn()Z

    move-result v6

    if-eqz v6, :cond_187

    const/4 v4, 0x1

    .line 16792
    .local v4, "opaqueDrawn":Z
    :goto_11
    if-eqz v4, :cond_27

    invoke-virtual {p1, p2, p3}, Lcom/android/server/wm/WindowState;->isFullscreen(II)Z

    move-result v6

    if-eqz v6, :cond_27

    iget-object v6, p1, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v6, v6, Landroid/view/WindowManager$LayoutParams;->type:I

    const/16 v7, 0x8b1

    if-eq v6, v7, :cond_27

    .line 16796
    iget-object v6, p0, mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    const/4 v7, 0x1

    # setter for: Lcom/android/server/wm/WindowManagerService$LayoutFields;->mObscured:Z
    invoke-static {v6, v7}, Lcom/android/server/wm/WindowManagerService$LayoutFields;->access$2302(Lcom/android/server/wm/WindowManagerService$LayoutFields;Z)Z

    .line 16799
    :cond_27
    iget-boolean v6, p1, Lcom/android/server/wm/WindowState;->mHasSurface:Z

    if-eqz v6, :cond_186

    .line 16800
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->isVisibleNow()Z

    move-result v6

    if-eqz v6, :cond_119

    .line 16801
    and-int/lit16 v6, v0, 0x80

    if-eqz v6, :cond_3c

    .line 16802
    iget-object v6, p0, mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    iget-object v7, p1, Lcom/android/server/wm/WindowState;->mSession:Lcom/android/server/wm/Session;

    # setter for: Lcom/android/server/wm/WindowManagerService$LayoutFields;->mHoldScreen:Lcom/android/server/wm/Session;
    invoke-static {v6, v7}, Lcom/android/server/wm/WindowManagerService$LayoutFields;->access$2402(Lcom/android/server/wm/WindowManagerService$LayoutFields;Lcom/android/server/wm/Session;)Lcom/android/server/wm/Session;

    .line 16804
    :cond_3c
    iget-object v6, p0, mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    # getter for: Lcom/android/server/wm/WindowManagerService$LayoutFields;->mSyswin:Z
    invoke-static {v6}, Lcom/android/server/wm/WindowManagerService$LayoutFields;->access$2500(Lcom/android/server/wm/WindowManagerService$LayoutFields;)Z

    move-result v6

    if-nez v6, :cond_61

    iget-object v6, p1, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v6, v6, Landroid/view/WindowManager$LayoutParams;->screenBrightness:F

    const/4 v7, 0x0

    cmpl-float v6, v6, v7

    if-ltz v6, :cond_61

    iget-object v6, p0, mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    # getter for: Lcom/android/server/wm/WindowManagerService$LayoutFields;->mScreenBrightness:F
    invoke-static {v6}, Lcom/android/server/wm/WindowManagerService$LayoutFields;->access$2600(Lcom/android/server/wm/WindowManagerService$LayoutFields;)F

    move-result v6

    const/4 v7, 0x0

    cmpg-float v6, v6, v7

    if-gez v6, :cond_61

    .line 16806
    iget-object v6, p0, mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    iget-object v7, p1, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v7, v7, Landroid/view/WindowManager$LayoutParams;->screenBrightness:F

    # setter for: Lcom/android/server/wm/WindowManagerService$LayoutFields;->mScreenBrightness:F
    invoke-static {v6, v7}, Lcom/android/server/wm/WindowManagerService$LayoutFields;->access$2602(Lcom/android/server/wm/WindowManagerService$LayoutFields;F)F

    .line 16808
    :cond_61
    iget-object v6, p0, mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    # getter for: Lcom/android/server/wm/WindowManagerService$LayoutFields;->mSyswin:Z
    invoke-static {v6}, Lcom/android/server/wm/WindowManagerService$LayoutFields;->access$2500(Lcom/android/server/wm/WindowManagerService$LayoutFields;)Z

    move-result v6

    if-nez v6, :cond_86

    iget-object v6, p1, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v6, v6, Landroid/view/WindowManager$LayoutParams;->buttonBrightness:F

    const/4 v7, 0x0

    cmpl-float v6, v6, v7

    if-ltz v6, :cond_86

    iget-object v6, p0, mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    # getter for: Lcom/android/server/wm/WindowManagerService$LayoutFields;->mButtonBrightness:F
    invoke-static {v6}, Lcom/android/server/wm/WindowManagerService$LayoutFields;->access$2700(Lcom/android/server/wm/WindowManagerService$LayoutFields;)F

    move-result v6

    const/4 v7, 0x0

    cmpg-float v6, v6, v7

    if-gez v6, :cond_86

    .line 16810
    iget-object v6, p0, mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    iget-object v7, p1, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v7, v7, Landroid/view/WindowManager$LayoutParams;->buttonBrightness:F

    # setter for: Lcom/android/server/wm/WindowManagerService$LayoutFields;->mButtonBrightness:F
    invoke-static {v6, v7}, Lcom/android/server/wm/WindowManagerService$LayoutFields;->access$2702(Lcom/android/server/wm/WindowManagerService$LayoutFields;F)F

    .line 16812
    :cond_86
    iget-object v6, p0, mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    # getter for: Lcom/android/server/wm/WindowManagerService$LayoutFields;->mSyswin:Z
    invoke-static {v6}, Lcom/android/server/wm/WindowManagerService$LayoutFields;->access$2500(Lcom/android/server/wm/WindowManagerService$LayoutFields;)Z

    move-result v6

    if-nez v6, :cond_ad

    iget-object v6, p1, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget-wide v6, v6, Landroid/view/WindowManager$LayoutParams;->userActivityTimeout:J

    const-wide/16 v8, 0x0

    cmp-long v6, v6, v8

    if-ltz v6, :cond_ad

    iget-object v6, p0, mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    # getter for: Lcom/android/server/wm/WindowManagerService$LayoutFields;->mUserActivityTimeout:J
    invoke-static {v6}, Lcom/android/server/wm/WindowManagerService$LayoutFields;->access$2800(Lcom/android/server/wm/WindowManagerService$LayoutFields;)J

    move-result-wide v6

    const-wide/16 v8, 0x0

    cmp-long v6, v6, v8

    if-gez v6, :cond_ad

    .line 16814
    iget-object v6, p0, mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    iget-object v7, p1, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget-wide v8, v7, Landroid/view/WindowManager$LayoutParams;->userActivityTimeout:J

    # setter for: Lcom/android/server/wm/WindowManagerService$LayoutFields;->mUserActivityTimeout:J
    invoke-static {v6, v8, v9}, Lcom/android/server/wm/WindowManagerService$LayoutFields;->access$2802(Lcom/android/server/wm/WindowManagerService$LayoutFields;J)J

    .line 16817
    :cond_ad
    iget-object v6, p0, mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    # getter for: Lcom/android/server/wm/WindowManagerService$LayoutFields;->mSyswin:Z
    invoke-static {v6}, Lcom/android/server/wm/WindowManagerService$LayoutFields;->access$2500(Lcom/android/server/wm/WindowManagerService$LayoutFields;)Z

    move-result v6

    if-nez v6, :cond_d4

    iget-object v6, p1, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget-wide v6, v6, Landroid/view/WindowManager$LayoutParams;->screenDimDuration:J

    const-wide/16 v8, 0x0

    cmp-long v6, v6, v8

    if-ltz v6, :cond_d4

    iget-object v6, p0, mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    # getter for: Lcom/android/server/wm/WindowManagerService$LayoutFields;->mScreenDimDuration:J
    invoke-static {v6}, Lcom/android/server/wm/WindowManagerService$LayoutFields;->access$2900(Lcom/android/server/wm/WindowManagerService$LayoutFields;)J

    move-result-wide v6

    const-wide/16 v8, 0x0

    cmp-long v6, v6, v8

    if-gez v6, :cond_d4

    .line 16819
    iget-object v6, p0, mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    iget-object v7, p1, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget-wide v8, v7, Landroid/view/WindowManager$LayoutParams;->screenDimDuration:J

    # setter for: Lcom/android/server/wm/WindowManagerService$LayoutFields;->mScreenDimDuration:J
    invoke-static {v6, v8, v9}, Lcom/android/server/wm/WindowManagerService$LayoutFields;->access$2902(Lcom/android/server/wm/WindowManagerService$LayoutFields;J)J

    .line 16821
    :cond_d4
    iget-object v6, p0, mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    # getter for: Lcom/android/server/wm/WindowManagerService$LayoutFields;->mSyswin:Z
    invoke-static {v6}, Lcom/android/server/wm/WindowManagerService$LayoutFields;->access$2500(Lcom/android/server/wm/WindowManagerService$LayoutFields;)Z

    move-result v6

    if-nez v6, :cond_fb

    iget-object v6, p1, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget-wide v6, v6, Landroid/view/WindowManager$LayoutParams;->buttonLightTimeout:J

    const-wide/16 v8, 0x0

    cmp-long v6, v6, v8

    if-ltz v6, :cond_fb

    iget-object v6, p0, mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    # getter for: Lcom/android/server/wm/WindowManagerService$LayoutFields;->mButtonLightTimeout:J
    invoke-static {v6}, Lcom/android/server/wm/WindowManagerService$LayoutFields;->access$3000(Lcom/android/server/wm/WindowManagerService$LayoutFields;)J

    move-result-wide v6

    const-wide/16 v8, 0x0

    cmp-long v6, v6, v8

    if-gez v6, :cond_fb

    .line 16823
    iget-object v6, p0, mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    iget-object v7, p1, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget-wide v8, v7, Landroid/view/WindowManager$LayoutParams;->buttonLightTimeout:J

    # setter for: Lcom/android/server/wm/WindowManagerService$LayoutFields;->mButtonLightTimeout:J
    invoke-static {v6, v8, v9}, Lcom/android/server/wm/WindowManagerService$LayoutFields;->access$3002(Lcom/android/server/wm/WindowManagerService$LayoutFields;J)J

    .line 16831
    :cond_fb
    iget-object v6, p0, mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    # getter for: Lcom/android/server/wm/WindowManagerService$LayoutFields;->mSyswin:Z
    invoke-static {v6}, Lcom/android/server/wm/WindowManagerService$LayoutFields;->access$2500(Lcom/android/server/wm/WindowManagerService$LayoutFields;)Z

    move-result v6

    if-nez v6, :cond_119

    iget-object v6, p1, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget-wide v6, v6, Landroid/view/WindowManager$LayoutParams;->userActivityTimeout:J

    const-wide/16 v8, 0x146a

    cmp-long v6, v6, v8

    if-nez v6, :cond_119

    .line 16832
    iget-object v6, p1, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    const-wide/16 v8, -0x1

    iput-wide v8, v6, Landroid/view/WindowManager$LayoutParams;->userActivityTimeout:J

    .line 16833
    iget-object v6, p1, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    const-wide/16 v8, -0x1

    iput-wide v8, v6, Landroid/view/WindowManager$LayoutParams;->screenDimDuration:J

    .line 16838
    :cond_119
    iget v5, v1, Landroid/view/WindowManager$LayoutParams;->type:I

    .line 16839
    .local v5, "type":I
    if-eqz v2, :cond_138

    const/16 v6, 0x7d8

    if-eq v5, v6, :cond_132

    const/16 v6, 0x7da

    if-eq v5, v6, :cond_132

    iget v6, v1, Landroid/view/WindowManager$LayoutParams;->privateFlags:I

    and-int/lit16 v6, v6, 0x400

    if-nez v6, :cond_132

    iget v6, v1, Landroid/view/WindowManager$LayoutParams;->samsungFlags:I

    const/high16 v7, 0x10000000

    and-int/2addr v6, v7

    if-eqz v6, :cond_138

    .line 16847
    :cond_132
    iget-object v6, p0, mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    const/4 v7, 0x1

    # setter for: Lcom/android/server/wm/WindowManagerService$LayoutFields;->mSyswin:Z
    invoke-static {v6, v7}, Lcom/android/server/wm/WindowManagerService$LayoutFields;->access$2502(Lcom/android/server/wm/WindowManagerService$LayoutFields;Z)Z

    .line 16850
    :cond_138
    if-eqz v2, :cond_186

    .line 16853
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    move-result-object v3

    .line 16854
    .local v3, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-eqz v3, :cond_18a

    iget-boolean v6, v3, Lcom/android/server/wm/DisplayContent;->isDefaultDisplay:Z

    if-eqz v6, :cond_18a

    .line 16859
    const/16 v6, 0x7e7

    if-eq v5, v6, :cond_14e

    iget v6, v1, Landroid/view/WindowManager$LayoutParams;->privateFlags:I

    and-int/lit16 v6, v6, 0x400

    if-eqz v6, :cond_153

    .line 16860
    :cond_14e
    iget-object v6, p0, mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    const/4 v7, 0x1

    iput-boolean v7, v6, Lcom/android/server/wm/WindowManagerService$LayoutFields;->mObscureApplicationContentOnSecondaryDisplays:Z

    .line 16862
    :cond_153
    iget-object v6, p0, mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    const/4 v7, 0x1

    iput-boolean v7, v6, Lcom/android/server/wm/WindowManagerService$LayoutFields;->mDisplayHasContent:Z

    .line 16869
    :cond_158
    :goto_158
    iget-object v6, p0, mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    iget v6, v6, Lcom/android/server/wm/WindowManagerService$LayoutFields;->mPreferredRefreshRate:F

    const/4 v7, 0x0

    cmpl-float v6, v6, v7

    if-nez v6, :cond_172

    iget-object v6, p1, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v6, v6, Landroid/view/WindowManager$LayoutParams;->preferredRefreshRate:F

    const/4 v7, 0x0

    cmpl-float v6, v6, v7

    if-eqz v6, :cond_172

    .line 16871
    iget-object v6, p0, mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    iget-object v7, p1, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v7, v7, Landroid/view/WindowManager$LayoutParams;->preferredRefreshRate:F

    iput v7, v6, Lcom/android/server/wm/WindowManagerService$LayoutFields;->mPreferredRefreshRate:F

    .line 16873
    :cond_172
    iget-object v6, p0, mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    iget v6, v6, Lcom/android/server/wm/WindowManagerService$LayoutFields;->mPreferredModeId:I

    if-nez v6, :cond_186

    iget-object v6, p1, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v6, v6, Landroid/view/WindowManager$LayoutParams;->preferredDisplayModeId:I

    if-eqz v6, :cond_186

    .line 16875
    iget-object v6, p0, mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    iget-object v7, p1, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v7, v7, Landroid/view/WindowManager$LayoutParams;->preferredDisplayModeId:I

    iput v7, v6, Lcom/android/server/wm/WindowManagerService$LayoutFields;->mPreferredModeId:I

    .line 16879
    .end local v3    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v5    # "type":I
    :cond_186
    return-void

    .line 16790
    .end local v4    # "opaqueDrawn":Z
    :cond_187
    const/4 v4, 0x0

    goto/16 :goto_11

    .line 16863
    .restart local v3    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .restart local v4    # "opaqueDrawn":Z
    .restart local v5    # "type":I
    :cond_18a
    if-eqz v3, :cond_158

    iget-object v6, p0, mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    iget-boolean v6, v6, Lcom/android/server/wm/WindowManagerService$LayoutFields;->mObscureApplicationContentOnSecondaryDisplays:Z

    if-eqz v6, :cond_19e

    iget-object v6, p0, mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    # getter for: Lcom/android/server/wm/WindowManagerService$LayoutFields;->mObscured:Z
    invoke-static {v6}, Lcom/android/server/wm/WindowManagerService$LayoutFields;->access$2300(Lcom/android/server/wm/WindowManagerService$LayoutFields;)Z

    move-result v6

    if-eqz v6, :cond_158

    const/16 v6, 0x7d9

    if-ne v5, v6, :cond_158

    .line 16867
    :cond_19e
    iget-object v6, p0, mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    const/4 v7, 0x1

    iput-boolean v7, v6, Lcom/android/server/wm/WindowManagerService$LayoutFields;->mDisplayHasContent:Z

    goto :goto_158
.end method

.method private indexOfPenWindowHeaderOverCurrentWinow(Lcom/android/server/wm/WindowList;I)I
    .registers 8
    .param p1, "windows"    # Lcom/android/server/wm/WindowList;
    .param p2, "pos"    # I

    .prologue
    .line 2250
    move v1, p2

    .line 2251
    .local v1, "orig_pos":I
    invoke-virtual {p1, p2}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/wm/WindowState;

    .line 2252
    .local v0, "curWin":Lcom/android/server/wm/WindowState;
    :goto_7
    invoke-virtual {p1}, Lcom/android/server/wm/WindowList;->size()I

    move-result v3

    if-ge p2, v3, :cond_25

    .line 2253
    invoke-virtual {p1, p2}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/wm/WindowState;

    .line 2254
    .local v2, "tempWin":Lcom/android/server/wm/WindowState;
    iget-object v3, v2, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    iget-object v4, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    if-ne v3, v4, :cond_22

    .line 2255
    iget-object v3, v2, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v3, v3, Landroid/view/WindowManager$LayoutParams;->type:I

    const/16 v4, 0x3ee

    if-ne v3, v4, :cond_22

    .line 2260
    .end local v2    # "tempWin":Lcom/android/server/wm/WindowState;
    .end local p2    # "pos":I
    :goto_21
    return p2

    .line 2252
    .restart local v2    # "tempWin":Lcom/android/server/wm/WindowState;
    .restart local p2    # "pos":I
    :cond_22
    add-int/lit8 p2, p2, 0x1

    goto :goto_7

    .end local v2    # "tempWin":Lcom/android/server/wm/WindowState;
    :cond_25
    move p2, v1

    .line 2260
    goto :goto_21
.end method

.method private indexOfWinInWindowList(Lcom/android/server/wm/WindowState;Lcom/android/server/wm/WindowList;)I
    .registers 6
    .param p1, "targetWin"    # Lcom/android/server/wm/WindowState;
    .param p2, "windows"    # Lcom/android/server/wm/WindowList;

    .prologue
    .line 1930
    invoke-virtual {p2}, Lcom/android/server/wm/WindowList;->size()I

    move-result v2

    add-int/lit8 v0, v2, -0x1

    .local v0, "i":I
    :goto_6
    if-ltz v0, :cond_24

    .line 1931
    invoke-virtual {p2, v0}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/wm/WindowState;

    .line 1932
    .local v1, "w":Lcom/android/server/wm/WindowState;
    if-ne v1, p1, :cond_11

    .line 1941
    .end local v0    # "i":I
    .end local v1    # "w":Lcom/android/server/wm/WindowState;
    :cond_10
    :goto_10
    return v0

    .line 1935
    .restart local v0    # "i":I
    .restart local v1    # "w":Lcom/android/server/wm/WindowState;
    :cond_11
    iget-object v2, v1, Lcom/android/server/wm/WindowState;->mChildWindows:Lcom/android/server/wm/WindowList;

    invoke-virtual {v2}, Lcom/android/server/wm/WindowList;->isEmpty()Z

    move-result v2

    if-nez v2, :cond_21

    .line 1936
    iget-object v2, v1, Lcom/android/server/wm/WindowState;->mChildWindows:Lcom/android/server/wm/WindowList;

    invoke-direct {p0, p1, v2}, indexOfWinInWindowList(Lcom/android/server/wm/WindowState;Lcom/android/server/wm/WindowList;)I

    move-result v2

    if-gez v2, :cond_10

    .line 1930
    :cond_21
    add-int/lit8 v0, v0, -0x1

    goto :goto_6

    .line 1941
    .end local v1    # "w":Lcom/android/server/wm/WindowState;
    :cond_24
    const/4 v0, -0x1

    goto :goto_10
.end method

.method private initPolicy()V
    .registers 5

    .prologue
    .line 1616
    invoke-static {}, Lcom/android/server/UiThread;->getHandler()Landroid/os/Handler;

    move-result-object v0

    new-instance v1, Lcom/android/server/wm/WindowManagerService$4;

    invoke-direct {v1, p0}, Lcom/android/server/wm/WindowManagerService$4;-><init>(Lcom/android/server/wm/WindowManagerService;)V

    const-wide/16 v2, 0x0

    invoke-virtual {v0, v1, v2, v3}, Landroid/os/Handler;->runWithScissors(Ljava/lang/Runnable;J)Z

    .line 1624
    return-void
.end method

.method private isContainsCenterBarIncludeChild(Lcom/android/server/wm/WindowState;)Z
    .registers 11
    .param p1, "window"    # Lcom/android/server/wm/WindowState;

    .prologue
    const/4 v6, 0x5

    const/4 v4, 0x0

    const/4 v8, -0x1

    .line 21739
    iget-object v1, p0, mMultiWindowCenterBar:Lcom/android/server/wm/WindowState;

    .line 21740
    .local v1, "centerBarWin":Lcom/android/server/wm/WindowState;
    if-nez v1, :cond_8

    .line 21755
    :cond_7
    :goto_7
    return v4

    .line 21743
    :cond_8
    new-instance v0, Landroid/graphics/Rect;

    invoke-virtual {v1}, Lcom/android/server/wm/WindowState;->getFrameLw()Landroid/graphics/Rect;

    move-result-object v5

    invoke-direct {v0, v5}, Landroid/graphics/Rect;-><init>(Landroid/graphics/Rect;)V

    .line 21744
    .local v0, "centerBarRect":Landroid/graphics/Rect;
    invoke-virtual {v0, v6, v6}, Landroid/graphics/Rect;->inset(II)V

    .line 21745
    iget-object v5, p1, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    if-eqz v5, :cond_7

    .line 21746
    iget-object v5, p1, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    iget-object v5, v5, Lcom/android/server/wm/AppWindowToken;->allAppWindows:Lcom/android/server/wm/WindowList;

    invoke-virtual {v5}, Lcom/android/server/wm/WindowList;->iterator()Ljava/util/Iterator;

    move-result-object v2

    .local v2, "i$":Ljava/util/Iterator;
    :cond_20
    invoke-interface {v2}, Ljava/util/Iterator;->hasNext()Z

    move-result v5

    if-eqz v5, :cond_7

    invoke-interface {v2}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/wm/WindowState;

    .line 21747
    .local v3, "w":Lcom/android/server/wm/WindowState;
    iget-object v5, v3, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v5, v5, Landroid/view/WindowManager$LayoutParams;->width:I

    if-eq v5, v8, :cond_20

    iget-object v5, v3, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v5, v5, Landroid/view/WindowManager$LayoutParams;->height:I

    if-eq v5, v8, :cond_20

    invoke-virtual {v3}, Lcom/android/server/wm/WindowState;->isVisibleNow()Z

    move-result v5

    if-eqz v5, :cond_20

    invoke-virtual {v3}, Lcom/android/server/wm/WindowState;->getFrameLw()Landroid/graphics/Rect;

    move-result-object v5

    invoke-virtual {v0}, Landroid/graphics/Rect;->centerX()I

    move-result v6

    invoke-virtual {v0}, Landroid/graphics/Rect;->centerY()I

    move-result v7

    invoke-virtual {v5, v6, v7}, Landroid/graphics/Rect;->contains(II)Z

    move-result v5

    if-eqz v5, :cond_20

    .line 21751
    const/4 v4, 0x1

    goto :goto_7
.end method

.method private isSystemSecure()Z
    .registers 4

    .prologue
    .line 12107
    const-string v0, "1"

    const-string/jumbo v1, "ro.secure"

    const-string v2, "1"

    invoke-static {v1, v2}, Landroid/os/SystemProperties;->get(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v0, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_24

    const-string v0, "0"

    const-string/jumbo v1, "ro.debuggable"

    const-string v2, "0"

    invoke-static {v1, v2}, Landroid/os/SystemProperties;->get(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v0, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_24

    const/4 v0, 0x1

    :goto_23
    return v0

    :cond_24
    const/4 v0, 0x0

    goto :goto_23
.end method

.method private isWallpaperVisible(Lcom/android/server/wm/WindowState;)Z
    .registers 7
    .param p1, "wallpaperTarget"    # Lcom/android/server/wm/WindowState;

    .prologue
    .line 3106
    const/4 v0, 0x0

    .line 3107
    .local v0, "mLowerWallpaperTarget":Lcom/android/server/wm/WindowState;
    const/4 v1, 0x0

    .line 3116
    .local v1, "mUpperWallpaperTarget":Lcom/android/server/wm/WindowState;
    iget-object v0, p0, mLowerWallpaperTarget:Lcom/android/server/wm/WindowState;

    .line 3117
    iget-object v1, p0, mUpperWallpaperTarget:Lcom/android/server/wm/WindowState;

    .line 3121
    sget-boolean v2, DEBUG_WALLPAPER:Z

    if-eqz v2, :cond_5e

    const-string v3, "WindowManager"

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "Wallpaper vis: target "

    invoke-virtual {v2, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string v4, ", obscured="

    invoke-virtual {v2, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    if-eqz p1, :cond_76

    iget-boolean v2, p1, Lcom/android/server/wm/WindowState;->mObscured:Z

    invoke-static {v2}, Ljava/lang/Boolean;->toString(Z)Ljava/lang/String;

    move-result-object v2

    :goto_29
    invoke-virtual {v4, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string v4, " anim="

    invoke-virtual {v2, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    if-eqz p1, :cond_79

    iget-object v2, p1, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    if-eqz v2, :cond_79

    iget-object v2, p1, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    iget-object v2, v2, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    iget-object v2, v2, Lcom/android/server/wm/AppWindowAnimator;->animation:Landroid/view/animation/Animation;

    :goto_3f
    invoke-virtual {v4, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string v4, " upper="

    invoke-virtual {v2, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string v4, " lower="

    invoke-virtual {v2, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v3, v2}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 3127
    :cond_5e
    if-eqz p1, :cond_70

    iget-boolean v2, p1, Lcom/android/server/wm/WindowState;->mObscured:Z

    if-eqz v2, :cond_74

    iget-object v2, p1, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    if-eqz v2, :cond_70

    iget-object v2, p1, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    iget-object v2, v2, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    iget-object v2, v2, Lcom/android/server/wm/AppWindowAnimator;->animation:Landroid/view/animation/Animation;

    if-nez v2, :cond_74

    :cond_70
    if-nez v1, :cond_74

    if-eqz v0, :cond_7b

    :cond_74
    const/4 v2, 0x1

    :goto_75
    return v2

    .line 3121
    :cond_76
    const-string v2, "??"

    goto :goto_29

    :cond_79
    const/4 v2, 0x0

    goto :goto_3f

    .line 3127
    :cond_7b
    const/4 v2, 0x0

    goto :goto_75
.end method

.method static logSurface(Landroid/view/SurfaceControl;Ljava/lang/String;Ljava/lang/String;Ljava/lang/RuntimeException;)V
    .registers 7
    .param p0, "s"    # Landroid/view/SurfaceControl;
    .param p1, "title"    # Ljava/lang/String;
    .param p2, "msg"    # Ljava/lang/String;
    .param p3, "where"    # Ljava/lang/RuntimeException;

    .prologue
    .line 4987
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "  SURFACE "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, ": "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, " / "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    .line 4988
    .local v0, "str":Ljava/lang/String;
    if-eqz p3, :cond_2f

    .line 4989
    const-string v1, "WindowManager"

    invoke-static {v1, v0, p3}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 4993
    :goto_2e
    return-void

    .line 4991
    :cond_2f
    const-string v1, "WindowManager"

    invoke-static {v1, v0}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_2e
.end method

.method static logSurface(Lcom/android/server/wm/WindowState;Ljava/lang/String;Ljava/lang/RuntimeException;)V
    .registers 6
    .param p0, "w"    # Lcom/android/server/wm/WindowState;
    .param p1, "msg"    # Ljava/lang/String;
    .param p2, "where"    # Ljava/lang/RuntimeException;

    .prologue
    .line 4978
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "  SURFACE "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, ": "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    .line 4979
    .local v0, "str":Ljava/lang/String;
    if-eqz p2, :cond_25

    .line 4980
    const-string v1, "WindowManager"

    invoke-static {v1, v0, p2}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 4984
    :goto_24
    return-void

    .line 4982
    :cond_25
    const-string v1, "WindowManager"

    invoke-static {v1, v0}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_24
.end method

.method public static main(Landroid/content/Context;Lcom/android/server/input/InputManagerService;ZZZ)Lcom/android/server/wm/WindowManagerService;
    .registers 13
    .param p0, "context"    # Landroid/content/Context;
    .param p1, "im"    # Lcom/android/server/input/InputManagerService;
    .param p2, "haveInputMethods"    # Z
    .param p3, "showBootMsgs"    # Z
    .param p4, "onlyCore"    # Z

    .prologue
    .line 1604
    const/4 v0, 0x1

    new-array v1, v0, [Lcom/android/server/wm/WindowManagerService;

    .line 1605
    .local v1, "holder":[Lcom/android/server/wm/WindowManagerService;
    invoke-static {}, Lcom/android/server/DisplayThread;->getHandler()Landroid/os/Handler;

    move-result-object v7

    new-instance v0, Lcom/android/server/wm/WindowManagerService$3;

    move-object v2, p0

    move-object v3, p1

    move v4, p2

    move v5, p3

    move v6, p4

    invoke-direct/range {v0 .. v6}, Lcom/android/server/wm/WindowManagerService$3;-><init>([Lcom/android/server/wm/WindowManagerService;Landroid/content/Context;Lcom/android/server/input/InputManagerService;ZZZ)V

    const-wide/16 v2, 0x0

    invoke-virtual {v7, v0, v2, v3}, Landroid/os/Handler;->runWithScissors(Ljava/lang/Runnable;J)Z

    .line 1612
    const/4 v0, 0x0

    aget-object v0, v1, v0

    return-object v0
.end method

.method private moveInputMethodTargetToDisplayIfNeeded(Lcom/android/server/wm/WindowState;Lcom/android/server/wm/DisplayContent;)V
    .registers 7
    .param p1, "inputMethodTarget"    # Lcom/android/server/wm/WindowState;
    .param p2, "targetDisplay"    # Lcom/android/server/wm/DisplayContent;

    .prologue
    const/4 v3, 0x3

    .line 3026
    invoke-virtual {p0}, isFullInputMethod()Z

    move-result v1

    if-eqz v1, :cond_44

    if-eqz p1, :cond_44

    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->getDisplayId()I

    move-result v1

    const/4 v2, 0x2

    if-eq v1, v2, :cond_44

    iget-object v1, p1, Lcom/android/server/wm/WindowState;->mDisplayContent:Lcom/android/server/wm/DisplayContent;

    if-eq v1, p2, :cond_44

    iget-object v1, p1, Lcom/android/server/wm/WindowState;->mDisplayContent:Lcom/android/server/wm/DisplayContent;

    invoke-virtual {v1}, Lcom/android/server/wm/DisplayContent;->getDisplay()Landroid/view/Display;

    move-result-object v1

    invoke-virtual {v1}, Landroid/view/Display;->getRotation()I

    move-result v1

    const/4 v2, 0x1

    if-eq v1, v2, :cond_2d

    iget-object v1, p1, Lcom/android/server/wm/WindowState;->mDisplayContent:Lcom/android/server/wm/DisplayContent;

    invoke-virtual {v1}, Lcom/android/server/wm/DisplayContent;->getDisplay()Landroid/view/Display;

    move-result-object v1

    invoke-virtual {v1}, Landroid/view/Display;->getRotation()I

    move-result v1

    if-ne v1, v3, :cond_44

    :cond_2d
    iget-boolean v1, p0, mInputShown:Z

    if-eqz v1, :cond_44

    .line 3033
    invoke-direct {p0}, turnOnInputMethodDisplayLocked()Z

    move-result v0

    .line 3034
    .local v0, "configChanged":Z
    const/4 v1, 0x0

    invoke-virtual {p0, v1, v3}, updateOrientationFromAppTokensLocked(ZI)Z

    move-result v1

    or-int/2addr v0, v1

    .line 3035
    if-eqz v0, :cond_44

    .line 3036
    iget-object v1, p0, mH:Lcom/android/server/wm/WindowManagerService$H;

    const/16 v2, 0x12

    invoke-virtual {v1, v2}, Lcom/android/server/wm/WindowManagerService$H;->sendEmptyMessage(I)Z

    .line 3039
    .end local v0    # "configChanged":Z
    :cond_44
    return-void
.end method

.method private movePenWindowHeaderToAppListTopLocked()V
    .registers 14

    .prologue
    .line 2264
    invoke-virtual {p0}, getDefaultWindowListLocked()Lcom/android/server/wm/WindowList;

    move-result-object v1

    .line 2265
    .local v1, "allWindowList":Lcom/android/server/wm/WindowList;
    invoke-virtual {v1}, Lcom/android/server/wm/WindowList;->size()I

    move-result v0

    .line 2266
    .local v0, "N":I
    if-lez v0, :cond_106

    .line 2267
    new-instance v6, Lcom/android/server/wm/WindowList;

    invoke-direct {v6}, Lcom/android/server/wm/WindowList;-><init>()V

    .line 2268
    .local v6, "tempWindowList":Lcom/android/server/wm/WindowList;
    invoke-virtual {v6, v1}, Lcom/android/server/wm/WindowList;->addAll(Ljava/util/Collection;)Z

    .line 2270
    add-int/lit8 v4, v0, -0x1

    .local v4, "i":I
    :goto_14
    if-ltz v4, :cond_106

    .line 2271
    invoke-virtual {v6, v4}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v7

    check-cast v7, Lcom/android/server/wm/WindowState;

    .line 2273
    .local v7, "win":Lcom/android/server/wm/WindowState;
    invoke-virtual {v7}, Lcom/android/server/wm/WindowState;->getMultiWindowStyleLw()Lcom/samsung/android/multiwindow/MultiWindowStyle;

    move-result-object v10

    invoke-virtual {v10}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->getType()I

    move-result v10

    const/4 v11, 0x2

    if-eq v10, v11, :cond_2a

    .line 2270
    :cond_27
    :goto_27
    add-int/lit8 v4, v4, -0x1

    goto :goto_14

    .line 2276
    :cond_2a
    iget-object v10, v7, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v10, v10, Landroid/view/WindowManager$LayoutParams;->type:I

    const/16 v11, 0x3ee

    if-eq v10, v11, :cond_3a

    iget-object v10, v7, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v10, v10, Landroid/view/WindowManager$LayoutParams;->type:I

    const/16 v11, 0x3ef

    if-ne v10, v11, :cond_27

    .line 2279
    :cond_3a
    iget-object v10, v7, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    if-eqz v10, :cond_27

    .line 2283
    move-object v3, v7

    .line 2284
    .local v3, "headerWin":Lcom/android/server/wm/WindowState;
    iget-object v10, v3, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    iget-object v2, v10, Lcom/android/server/wm/AppWindowToken;->mTask:Lcom/android/server/wm/Task;

    .line 2286
    .local v2, "currentTask":Lcom/android/server/wm/Task;
    const/4 v9, 0x0

    .line 2287
    .local v9, "wsIndex":I
    const/4 v5, 0x0

    .line 2288
    .local v5, "tempWin":Lcom/android/server/wm/WindowState;
    invoke-virtual {v1, v3}, Lcom/android/server/wm/WindowList;->indexOf(Ljava/lang/Object;)I

    move-result v8

    .line 2290
    .local v8, "wpos":I
    sget-boolean v10, DEBUG_MULTIWINDOW_CONTROL:Z

    if-eqz v10, :cond_70

    .line 2291
    const-string v10, "WindowManager"

    new-instance v11, Ljava/lang/StringBuilder;

    invoke-direct {v11}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v12, "removing from "

    invoke-virtual {v11, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v11

    invoke-virtual {v11, v8}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v11

    const-string v12, ": "

    invoke-virtual {v11, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v11

    invoke-virtual {v11, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v11

    invoke-virtual {v11}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v11

    invoke-static {v10, v11}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 2292
    :cond_70
    if-ltz v8, :cond_27

    .line 2293
    invoke-virtual {v1, v8}, Lcom/android/server/wm/WindowList;->remove(I)Ljava/lang/Object;

    .line 2294
    const/4 v10, 0x1

    iput-boolean v10, p0, mWindowsChanged:Z

    .line 2296
    invoke-virtual {v1}, Lcom/android/server/wm/WindowList;->size()I

    move-result v10

    add-int/lit8 v9, v10, -0x1

    :goto_7e
    if-ltz v9, :cond_f7

    .line 2297
    invoke-virtual {v1, v9}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v5

    .end local v5    # "tempWin":Lcom/android/server/wm/WindowState;
    check-cast v5, Lcom/android/server/wm/WindowState;

    .line 2298
    .restart local v5    # "tempWin":Lcom/android/server/wm/WindowState;
    iget-object v10, v5, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    if-nez v10, :cond_8d

    .line 2296
    :cond_8a
    add-int/lit8 v9, v9, -0x1

    goto :goto_7e

    .line 2303
    :cond_8d
    iget-object v10, v5, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v10, v10, Landroid/view/WindowManager$LayoutParams;->type:I

    const/16 v11, 0x3ee

    if-ne v10, v11, :cond_a3

    .line 2304
    iget-object v10, v3, Lcom/android/server/wm/WindowState;->mAttachedWindow:Lcom/android/server/wm/WindowState;

    invoke-virtual {v1, v10}, Lcom/android/server/wm/WindowList;->indexOf(Ljava/lang/Object;)I

    move-result v10

    iget-object v11, v5, Lcom/android/server/wm/WindowState;->mAttachedWindow:Lcom/android/server/wm/WindowState;

    invoke-virtual {v1, v11}, Lcom/android/server/wm/WindowList;->indexOf(Ljava/lang/Object;)I

    move-result v11

    if-lt v10, v11, :cond_8a

    .line 2308
    :cond_a3
    iget-object v10, v5, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v10, v10, Landroid/view/WindowManager$LayoutParams;->type:I

    const/16 v11, 0x3ef

    if-eq v10, v11, :cond_8a

    .line 2312
    invoke-virtual {v5}, Lcom/android/server/wm/WindowState;->getMultiWindowStyleLw()Lcom/samsung/android/multiwindow/MultiWindowStyle;

    move-result-object v10

    invoke-virtual {v10}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->getType()I

    move-result v10

    const/4 v11, 0x2

    if-ne v10, v11, :cond_8a

    invoke-virtual {v5}, Lcom/android/server/wm/WindowState;->getStackId()I

    move-result v10

    invoke-virtual {v3}, Lcom/android/server/wm/WindowState;->getStackId()I

    move-result v11

    if-ne v10, v11, :cond_8a

    .line 2314
    add-int/lit8 v10, v9, 0x1

    invoke-virtual {v1, v10, v3}, Lcom/android/server/wm/WindowList;->add(ILjava/lang/Object;)V

    .line 2315
    sget-boolean v10, DEBUG_MULTIWINDOW_CONTROL:Z

    if-eqz v10, :cond_f7

    .line 2316
    const-string v10, "WindowManager"

    new-instance v11, Ljava/lang/StringBuilder;

    invoke-direct {v11}, Ljava/lang/StringBuilder;-><init>()V

    const-string v12, "Adding "

    invoke-virtual {v11, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v11

    invoke-virtual {v11, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v11

    const-string v12, " to "

    invoke-virtual {v11, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v11

    add-int/lit8 v12, v9, 0x1

    invoke-virtual {v11, v12}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v11

    const-string v12, " targetWin="

    invoke-virtual {v11, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v11

    invoke-virtual {v11, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v11

    invoke-virtual {v11}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v11

    invoke-static {v10, v11}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 2322
    :cond_f7
    invoke-virtual {v1}, Lcom/android/server/wm/WindowList;->size()I

    move-result v10

    invoke-virtual {v6}, Lcom/android/server/wm/WindowList;->size()I

    move-result v11

    if-eq v10, v11, :cond_27

    .line 2323
    invoke-virtual {v1, v8, v3}, Lcom/android/server/wm/WindowList;->add(ILjava/lang/Object;)V

    goto/16 :goto_27

    .line 2328
    .end local v2    # "currentTask":Lcom/android/server/wm/Task;
    .end local v3    # "headerWin":Lcom/android/server/wm/WindowState;
    .end local v4    # "i":I
    .end local v5    # "tempWin":Lcom/android/server/wm/WindowState;
    .end local v6    # "tempWindowList":Lcom/android/server/wm/WindowList;
    .end local v7    # "win":Lcom/android/server/wm/WindowState;
    .end local v8    # "wpos":I
    .end local v9    # "wsIndex":I
    :cond_106
    return-void
.end method

.method private needToUpdateFocusStackFrame()Z
    .registers 10

    .prologue
    const/4 v8, 0x3

    const/4 v5, 0x1

    .line 22146
    invoke-virtual {p0}, getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v0

    .line 22148
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    invoke-virtual {v0}, Lcom/android/server/wm/DisplayContent;->getStacks()Ljava/util/ArrayList;

    move-result-object v3

    .line 22149
    .local v3, "stacks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/TaskStack;>;"
    invoke-virtual {v3}, Ljava/util/ArrayList;->size()I

    move-result v1

    .line 22150
    .local v1, "numStacks":I
    const/4 v2, 0x0

    .local v2, "stackNdx":I
    :goto_f
    if-ge v2, v1, :cond_29

    .line 22151
    invoke-virtual {v3, v2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/server/wm/TaskStack;

    .line 22153
    .local v4, "stk":Lcom/android/server/wm/TaskStack;
    iget v6, v4, Lcom/android/server/wm/TaskStack;->mStackZone:I

    if-eq v6, v8, :cond_21

    iget v6, v4, Lcom/android/server/wm/TaskStack;->mStackZone:I

    const/16 v7, 0xc

    if-ne v6, v7, :cond_22

    .line 22160
    .end local v4    # "stk":Lcom/android/server/wm/TaskStack;
    :cond_21
    :goto_21
    return v5

    .line 22155
    .restart local v4    # "stk":Lcom/android/server/wm/TaskStack;
    :cond_22
    iget v6, v4, Lcom/android/server/wm/TaskStack;->mStackType:I

    if-eq v6, v8, :cond_21

    .line 22150
    add-int/lit8 v2, v2, 0x1

    goto :goto_f

    .line 22160
    .end local v4    # "stk":Lcom/android/server/wm/TaskStack;
    :cond_29
    const/4 v5, 0x0

    goto :goto_21
.end method

.method private needsLayout()Z
    .registers 5

    .prologue
    .line 18060
    iget-object v3, p0, mDisplayContents:Landroid/util/SparseArray;

    invoke-virtual {v3}, Landroid/util/SparseArray;->size()I

    move-result v2

    .line 18061
    .local v2, "numDisplays":I
    const/4 v1, 0x0

    .local v1, "displayNdx":I
    :goto_7
    if-ge v1, v2, :cond_1a

    .line 18062
    iget-object v3, p0, mDisplayContents:Landroid/util/SparseArray;

    invoke-virtual {v3, v1}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/wm/DisplayContent;

    .line 18063
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    iget-boolean v3, v0, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    if-eqz v3, :cond_17

    .line 18064
    const/4 v3, 0x1

    .line 18067
    .end local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :goto_16
    return v3

    .line 18061
    .restart local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :cond_17
    add-int/lit8 v1, v1, 0x1

    goto :goto_7

    .line 18067
    .end local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :cond_1a
    const/4 v3, 0x0

    goto :goto_16
.end method

.method private newDisplayContentLocked(Landroid/view/Display;)Lcom/android/server/wm/DisplayContent;
    .registers 9
    .param p1, "display"    # Landroid/view/Display;

    .prologue
    .line 20002
    new-instance v0, Lcom/android/server/wm/DisplayContent;

    invoke-direct {v0, p1, p0}, Lcom/android/server/wm/DisplayContent;-><init>(Landroid/view/Display;Lcom/android/server/wm/WindowManagerService;)V

    .line 20003
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    invoke-virtual {p1}, Landroid/view/Display;->getDisplayId()I

    move-result v1

    .line 20004
    .local v1, "displayId":I
    sget-boolean v4, DEBUG_DISPLAY:Z

    if-eqz v4, :cond_25

    const-string v4, "WindowManager"

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string v6, "Adding display="

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v4, v5}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 20005
    :cond_25
    iget-object v4, p0, mDisplayContents:Landroid/util/SparseArray;

    invoke-virtual {v4, v1, v0}, Landroid/util/SparseArray;->put(ILjava/lang/Object;)V

    .line 20007
    invoke-virtual {v0}, Lcom/android/server/wm/DisplayContent;->getDisplayInfo()Landroid/view/DisplayInfo;

    move-result-object v2

    .line 20008
    .local v2, "displayInfo":Landroid/view/DisplayInfo;
    new-instance v3, Landroid/graphics/Rect;

    invoke-direct {v3}, Landroid/graphics/Rect;-><init>()V

    .line 20009
    .local v3, "rect":Landroid/graphics/Rect;
    iget-object v4, p0, mDisplaySettings:Lcom/android/server/wm/DisplaySettings;

    iget-object v5, v2, Landroid/view/DisplayInfo;->name:Ljava/lang/String;

    iget-object v6, v2, Landroid/view/DisplayInfo;->uniqueId:Ljava/lang/String;

    invoke-virtual {v4, v5, v6, v3}, Lcom/android/server/wm/DisplaySettings;->getOverscanLocked(Ljava/lang/String;Ljava/lang/String;Landroid/graphics/Rect;)V

    .line 20010
    iget-object v5, v0, Lcom/android/server/wm/DisplayContent;->mDisplaySizeLock:Ljava/lang/Object;

    monitor-enter v5

    .line 20011
    :try_start_3f
    iget v4, v3, Landroid/graphics/Rect;->left:I

    iput v4, v2, Landroid/view/DisplayInfo;->overscanLeft:I

    .line 20012
    iget v4, v3, Landroid/graphics/Rect;->top:I

    iput v4, v2, Landroid/view/DisplayInfo;->overscanTop:I

    .line 20013
    iget v4, v3, Landroid/graphics/Rect;->right:I

    iput v4, v2, Landroid/view/DisplayInfo;->overscanRight:I

    .line 20014
    iget v4, v3, Landroid/graphics/Rect;->bottom:I

    iput v4, v2, Landroid/view/DisplayInfo;->overscanBottom:I

    .line 20015
    iget-object v4, p0, mDisplayManagerInternal:Landroid/hardware/display/DisplayManagerInternal;

    invoke-virtual {v4, v1, v2}, Landroid/hardware/display/DisplayManagerInternal;->setDisplayInfoOverrideFromWindowManager(ILandroid/view/DisplayInfo;)V

    .line 20017
    monitor-exit v5
    :try_end_55
    .catchall {:try_start_3f .. :try_end_55} :catchall_7b

    .line 20018
    invoke-direct {p0, v0}, configureDisplayPolicyLocked(Lcom/android/server/wm/DisplayContent;)V

    .line 20021
    if-nez v1, :cond_7a

    .line 20022
    new-instance v4, Lcom/android/server/wm/StackTapPointerEventListener;

    invoke-direct {v4, p0, v0}, Lcom/android/server/wm/StackTapPointerEventListener;-><init>(Lcom/android/server/wm/WindowManagerService;Lcom/android/server/wm/DisplayContent;)V

    iput-object v4, v0, Lcom/android/server/wm/DisplayContent;->mTapDetector:Lcom/android/server/wm/StackTapPointerEventListener;

    .line 20023
    iget-object v4, v0, Lcom/android/server/wm/DisplayContent;->mTapDetector:Lcom/android/server/wm/StackTapPointerEventListener;

    invoke-virtual {p0, v4}, registerPointerEventListener(Landroid/view/WindowManagerPolicy$PointerEventListener;)V

    .line 20026
    iget-object v4, p0, mContext:Landroid/content/Context;

    invoke-static {v4}, Lcom/samsung/android/multiwindow/MultiWindowFeatures;->isSupportStyleTransition(Landroid/content/Context;)Z

    move-result v4

    if-eqz v4, :cond_7a

    .line 20027
    new-instance v4, Lcom/android/server/wm/MultiWindowPointerEventListener;

    invoke-direct {v4, p0, v0}, Lcom/android/server/wm/MultiWindowPointerEventListener;-><init>(Lcom/android/server/wm/WindowManagerService;Lcom/android/server/wm/DisplayContent;)V

    iput-object v4, v0, Lcom/android/server/wm/DisplayContent;->mMultiWindowGestureDetector:Lcom/android/server/wm/MultiWindowPointerEventListener;

    .line 20028
    iget-object v4, v0, Lcom/android/server/wm/DisplayContent;->mMultiWindowGestureDetector:Lcom/android/server/wm/MultiWindowPointerEventListener;

    invoke-virtual {p0, v4}, registerPointerEventListener(Landroid/view/WindowManagerPolicy$PointerEventListener;)V

    .line 20047
    :cond_7a
    return-object v0

    .line 20017
    :catchall_7b
    move-exception v4

    :try_start_7c
    monitor-exit v5
    :try_end_7d
    .catchall {:try_start_7c .. :try_end_7d} :catchall_7b

    throw v4
.end method

.method private notifyCoverStateChanged(Z)V
    .registers 8
    .param p1, "isOpen"    # Z

    .prologue
    .line 14257
    iget-object v5, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v5

    .line 14258
    :try_start_3
    invoke-virtual {p0}, getDefaultWindowListLocked()Lcom/android/server/wm/WindowList;

    move-result-object v2

    .line 14259
    .local v2, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual {v2}, Lcom/android/server/wm/WindowList;->size()I

    move-result v0

    .line 14260
    .local v0, "N":I
    const/4 v1, 0x0

    .local v1, "i":I
    :goto_c
    if-ge v1, v0, :cond_20

    .line 14261
    invoke-virtual {v2, v1}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/wm/WindowState;
    :try_end_14
    .catchall {:try_start_3 .. :try_end_14} :catchall_22

    .line 14263
    .local v3, "ws":Lcom/android/server/wm/WindowState;
    :try_start_14
    iget-boolean v4, v3, Lcom/android/server/wm/WindowState;->mHasSurface:Z

    if-eqz v4, :cond_1d

    .line 14264
    iget-object v4, v3, Lcom/android/server/wm/WindowState;->mClient:Landroid/view/IWindow;

    invoke-interface {v4, p1}, Landroid/view/IWindow;->dispatchCoverStateChanged(Z)V
    :try_end_1d
    .catch Landroid/os/RemoteException; {:try_start_14 .. :try_end_1d} :catch_25
    .catchall {:try_start_14 .. :try_end_1d} :catchall_22

    .line 14260
    :cond_1d
    :goto_1d
    add-int/lit8 v1, v1, 0x1

    goto :goto_c

    .line 14269
    .end local v3    # "ws":Lcom/android/server/wm/WindowState;
    :cond_20
    :try_start_20
    monitor-exit v5

    .line 14270
    return-void

    .line 14269
    .end local v0    # "N":I
    .end local v1    # "i":I
    .end local v2    # "windows":Lcom/android/server/wm/WindowList;
    :catchall_22
    move-exception v4

    monitor-exit v5
    :try_end_24
    .catchall {:try_start_20 .. :try_end_24} :catchall_22

    throw v4

    .line 14266
    .restart local v0    # "N":I
    .restart local v1    # "i":I
    .restart local v2    # "windows":Lcom/android/server/wm/WindowList;
    .restart local v3    # "ws":Lcom/android/server/wm/WindowState;
    :catch_25
    move-exception v4

    goto :goto_1d
.end method

.method private notifyFocusChanged()V
    .registers 6

    .prologue
    .line 12385
    iget-object v4, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v4

    .line 12386
    :try_start_3
    iget-object v3, p0, mWindowChangeListeners:Ljava/util/ArrayList;

    invoke-virtual {v3}, Ljava/util/ArrayList;->isEmpty()Z

    move-result v3

    if-eqz v3, :cond_d

    .line 12387
    monitor-exit v4

    .line 12396
    :cond_c
    return-void

    .line 12389
    :cond_d
    iget-object v3, p0, mWindowChangeListeners:Ljava/util/ArrayList;

    invoke-virtual {v3}, Ljava/util/ArrayList;->size()I

    move-result v3

    new-array v2, v3, [Lcom/android/server/wm/WindowManagerService$WindowChangeListener;

    .line 12390
    .local v2, "windowChangeListeners":[Lcom/android/server/wm/WindowManagerService$WindowChangeListener;
    iget-object v3, p0, mWindowChangeListeners:Ljava/util/ArrayList;

    invoke-virtual {v3, v2}, Ljava/util/ArrayList;->toArray([Ljava/lang/Object;)[Ljava/lang/Object;

    move-result-object v2

    .end local v2    # "windowChangeListeners":[Lcom/android/server/wm/WindowManagerService$WindowChangeListener;
    check-cast v2, [Lcom/android/server/wm/WindowManagerService$WindowChangeListener;

    .line 12391
    .restart local v2    # "windowChangeListeners":[Lcom/android/server/wm/WindowManagerService$WindowChangeListener;
    monitor-exit v4
    :try_end_1e
    .catchall {:try_start_3 .. :try_end_1e} :catchall_2a

    .line 12392
    array-length v0, v2

    .line 12393
    .local v0, "N":I
    const/4 v1, 0x0

    .local v1, "i":I
    :goto_20
    if-ge v1, v0, :cond_c

    .line 12394
    aget-object v3, v2, v1

    invoke-interface {v3}, Lcom/android/server/wm/WindowManagerService$WindowChangeListener;->focusChanged()V

    .line 12393
    add-int/lit8 v1, v1, 0x1

    goto :goto_20

    .line 12391
    .end local v0    # "N":I
    .end local v1    # "i":I
    .end local v2    # "windowChangeListeners":[Lcom/android/server/wm/WindowManagerService$WindowChangeListener;
    :catchall_2a
    move-exception v3

    :try_start_2b
    monitor-exit v4
    :try_end_2c
    .catchall {:try_start_2b .. :try_end_2c} :catchall_2a

    throw v3
.end method

.method private notifyWindowsChanged()V
    .registers 6

    .prologue
    .line 12370
    iget-object v4, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v4

    .line 12371
    :try_start_3
    iget-object v3, p0, mWindowChangeListeners:Ljava/util/ArrayList;

    invoke-virtual {v3}, Ljava/util/ArrayList;->isEmpty()Z

    move-result v3

    if-eqz v3, :cond_d

    .line 12372
    monitor-exit v4

    .line 12381
    :cond_c
    return-void

    .line 12374
    :cond_d
    iget-object v3, p0, mWindowChangeListeners:Ljava/util/ArrayList;

    invoke-virtual {v3}, Ljava/util/ArrayList;->size()I

    move-result v3

    new-array v2, v3, [Lcom/android/server/wm/WindowManagerService$WindowChangeListener;

    .line 12375
    .local v2, "windowChangeListeners":[Lcom/android/server/wm/WindowManagerService$WindowChangeListener;
    iget-object v3, p0, mWindowChangeListeners:Ljava/util/ArrayList;

    invoke-virtual {v3, v2}, Ljava/util/ArrayList;->toArray([Ljava/lang/Object;)[Ljava/lang/Object;

    move-result-object v2

    .end local v2    # "windowChangeListeners":[Lcom/android/server/wm/WindowManagerService$WindowChangeListener;
    check-cast v2, [Lcom/android/server/wm/WindowManagerService$WindowChangeListener;

    .line 12376
    .restart local v2    # "windowChangeListeners":[Lcom/android/server/wm/WindowManagerService$WindowChangeListener;
    monitor-exit v4
    :try_end_1e
    .catchall {:try_start_3 .. :try_end_1e} :catchall_2a

    .line 12377
    array-length v0, v2

    .line 12378
    .local v0, "N":I
    const/4 v1, 0x0

    .local v1, "i":I
    :goto_20
    if-ge v1, v0, :cond_c

    .line 12379
    aget-object v3, v2, v1

    invoke-interface {v3}, Lcom/android/server/wm/WindowManagerService$WindowChangeListener;->windowsChanged()V

    .line 12378
    add-int/lit8 v1, v1, 0x1

    goto :goto_20

    .line 12376
    .end local v0    # "N":I
    .end local v1    # "i":I
    .end local v2    # "windowChangeListeners":[Lcom/android/server/wm/WindowManagerService$WindowChangeListener;
    :catchall_2a
    move-exception v3

    :try_start_2b
    monitor-exit v4
    :try_end_2c
    .catchall {:try_start_2b .. :try_end_2c} :catchall_2a

    throw v3
.end method

.method private final performLayoutAndPlaceSurfacesLocked()V
    .registers 5

    .prologue
    const/4 v3, 0x0

    .line 15418
    const/4 v0, 0x6

    .line 15420
    .local v0, "loopCount":I
    :cond_2
    iput-boolean v3, p0, mTraversalScheduled:Z

    .line 15421
    invoke-direct {p0}, performLayoutAndPlaceSurfacesLockedLoop()V

    .line 15422
    iget-object v1, p0, mH:Lcom/android/server/wm/WindowManagerService$H;

    const/4 v2, 0x4

    invoke-virtual {v1, v2}, Lcom/android/server/wm/WindowManagerService$H;->removeMessages(I)V

    .line 15423
    add-int/lit8 v0, v0, -0x1

    .line 15424
    iget-boolean v1, p0, mTraversalScheduled:Z

    if-eqz v1, :cond_15

    if-gtz v0, :cond_2

    .line 15425
    :cond_15
    iget-object v1, p0, mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    iput-boolean v3, v1, Lcom/android/server/wm/WindowManagerService$LayoutFields;->mWallpaperActionPending:Z

    .line 15426
    return-void
.end method

.method private final performLayoutAndPlaceSurfacesLockedInner(Z)V
    .registers 67
    .param p1, "recoveringMemory"    # Z

    .prologue
    .line 17024
    sget-boolean v4, DEBUG_WINDOW_TRACE:Z

    if-eqz v4, :cond_22

    .line 17025
    const-string v4, "WindowManager"

    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v7, "performLayoutAndPlaceSurfacesLockedInner: entry. Called by "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    const/4 v7, 0x3

    invoke-static {v7}, Landroid/os/Debug;->getCallers(I)Ljava/lang/String;

    move-result-object v7

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-static {v4, v6}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 17030
    :cond_22
    const/16 v58, 0x0

    .line 17032
    .local v58, "updateInputWindowsNeeded":Z
    move-object/from16 v0, p0

    iget-boolean v4, v0, mFocusMayChange:Z

    if-eqz v4, :cond_37

    .line 17033
    const/4 v4, 0x0

    move-object/from16 v0, p0

    iput-boolean v4, v0, mFocusMayChange:Z

    .line 17034
    const/4 v4, 0x3

    const/4 v6, 0x0

    move-object/from16 v0, p0

    invoke-direct {v0, v4, v6}, updateFocusedWindowLocked(IZ)Z

    move-result v58

    .line 17039
    :cond_37
    move-object/from16 v0, p0

    iget-object v4, v0, mDisplayContents:Landroid/util/SparseArray;

    invoke-virtual {v4}, Landroid/util/SparseArray;->size()I

    move-result v46

    .line 17040
    .local v46, "numDisplays":I
    const/16 v24, 0x0

    .local v24, "displayNdx":I
    :goto_41
    move/from16 v0, v24

    move/from16 v1, v46

    if-ge v0, v1, :cond_74

    .line 17041
    move-object/from16 v0, p0

    iget-object v4, v0, mDisplayContents:Landroid/util/SparseArray;

    move/from16 v0, v24

    invoke-virtual {v4, v0}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v21

    check-cast v21, Lcom/android/server/wm/DisplayContent;

    .line 17042
    .local v21, "displayContent":Lcom/android/server/wm/DisplayContent;
    move-object/from16 v0, v21

    iget-object v4, v0, Lcom/android/server/wm/DisplayContent;->mExitingTokens:Ljava/util/ArrayList;

    invoke-virtual {v4}, Ljava/util/ArrayList;->size()I

    move-result v4

    add-int/lit8 v30, v4, -0x1

    .local v30, "i":I
    :goto_5d
    if-ltz v30, :cond_71

    .line 17043
    move-object/from16 v0, v21

    iget-object v4, v0, Lcom/android/server/wm/DisplayContent;->mExitingTokens:Ljava/util/ArrayList;

    move/from16 v0, v30

    invoke-virtual {v4, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/server/wm/WindowToken;

    const/4 v6, 0x0

    iput-boolean v6, v4, Lcom/android/server/wm/WindowToken;->hasVisible:Z

    .line 17042
    add-int/lit8 v30, v30, -0x1

    goto :goto_5d

    .line 17040
    :cond_71
    add-int/lit8 v24, v24, 0x1

    goto :goto_41

    .line 17047
    .end local v21    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v30    # "i":I
    :cond_74
    move-object/from16 v0, p0

    iget-object v4, v0, mStackIdToStack:Landroid/util/SparseArray;

    invoke-virtual {v4}, Landroid/util/SparseArray;->size()I

    move-result v4

    add-int/lit8 v52, v4, -0x1

    .local v52, "stackNdx":I
    :goto_7e
    if-ltz v52, :cond_ab

    .line 17049
    move-object/from16 v0, p0

    iget-object v4, v0, mStackIdToStack:Landroid/util/SparseArray;

    move/from16 v0, v52

    invoke-virtual {v4, v0}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/server/wm/TaskStack;

    iget-object v0, v4, Lcom/android/server/wm/TaskStack;->mExitingAppTokens:Lcom/android/server/wm/AppTokenList;

    move-object/from16 v27, v0

    .line 17051
    .local v27, "exitingAppTokens":Lcom/android/server/wm/AppTokenList;
    invoke-virtual/range {v27 .. v27}, Lcom/android/server/wm/AppTokenList;->size()I

    move-result v4

    add-int/lit8 v55, v4, -0x1

    .local v55, "tokenNdx":I
    :goto_96
    if-ltz v55, :cond_a8

    .line 17052
    move-object/from16 v0, v27

    move/from16 v1, v55

    invoke-virtual {v0, v1}, Lcom/android/server/wm/AppTokenList;->get(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/server/wm/AppWindowToken;

    const/4 v6, 0x0

    iput-boolean v6, v4, Lcom/android/server/wm/AppWindowToken;->hasVisible:Z

    .line 17051
    add-int/lit8 v55, v55, -0x1

    goto :goto_96

    .line 17047
    :cond_a8
    add-int/lit8 v52, v52, -0x1

    goto :goto_7e

    .line 17056
    .end local v27    # "exitingAppTokens":Lcom/android/server/wm/AppTokenList;
    .end local v55    # "tokenNdx":I
    :cond_ab
    move-object/from16 v0, p0

    iget-object v4, v0, mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    const/4 v6, 0x0

    # setter for: Lcom/android/server/wm/WindowManagerService$LayoutFields;->mHoldScreen:Lcom/android/server/wm/Session;
    invoke-static {v4, v6}, Lcom/android/server/wm/WindowManagerService$LayoutFields;->access$2402(Lcom/android/server/wm/WindowManagerService$LayoutFields;Lcom/android/server/wm/Session;)Lcom/android/server/wm/Session;

    .line 17057
    move-object/from16 v0, p0

    iget-object v4, v0, mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    const/high16 v6, -0x40800000    # -1.0f

    # setter for: Lcom/android/server/wm/WindowManagerService$LayoutFields;->mScreenBrightness:F
    invoke-static {v4, v6}, Lcom/android/server/wm/WindowManagerService$LayoutFields;->access$2602(Lcom/android/server/wm/WindowManagerService$LayoutFields;F)F

    .line 17058
    move-object/from16 v0, p0

    iget-object v4, v0, mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    const/high16 v6, -0x40800000    # -1.0f

    # setter for: Lcom/android/server/wm/WindowManagerService$LayoutFields;->mButtonBrightness:F
    invoke-static {v4, v6}, Lcom/android/server/wm/WindowManagerService$LayoutFields;->access$2702(Lcom/android/server/wm/WindowManagerService$LayoutFields;F)F

    .line 17059
    move-object/from16 v0, p0

    iget-object v4, v0, mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    const-wide/16 v6, -0x1

    # setter for: Lcom/android/server/wm/WindowManagerService$LayoutFields;->mUserActivityTimeout:J
    invoke-static {v4, v6, v7}, Lcom/android/server/wm/WindowManagerService$LayoutFields;->access$2802(Lcom/android/server/wm/WindowManagerService$LayoutFields;J)J

    .line 17061
    move-object/from16 v0, p0

    iget-object v4, v0, mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    const-wide/16 v6, -0x1

    # setter for: Lcom/android/server/wm/WindowManagerService$LayoutFields;->mScreenDimDuration:J
    invoke-static {v4, v6, v7}, Lcom/android/server/wm/WindowManagerService$LayoutFields;->access$2902(Lcom/android/server/wm/WindowManagerService$LayoutFields;J)J

    .line 17062
    move-object/from16 v0, p0

    iget-object v4, v0, mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    const-wide/16 v6, -0x1

    # setter for: Lcom/android/server/wm/WindowManagerService$LayoutFields;->mButtonLightTimeout:J
    invoke-static {v4, v6, v7}, Lcom/android/server/wm/WindowManagerService$LayoutFields;->access$3002(Lcom/android/server/wm/WindowManagerService$LayoutFields;J)J

    .line 17064
    move-object/from16 v0, p0

    iget-object v4, v0, mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    const/4 v6, 0x0

    iput-boolean v6, v4, Lcom/android/server/wm/WindowManagerService$LayoutFields;->mObscureApplicationContentOnSecondaryDisplays:Z

    .line 17066
    move-object/from16 v0, p0

    iget v4, v0, mTransactionSequence:I

    add-int/lit8 v4, v4, 0x1

    move-object/from16 v0, p0

    iput v4, v0, mTransactionSequence:I

    .line 17068
    invoke-virtual/range {p0 .. p0}, getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v16

    .line 17069
    .local v16, "defaultDisplay":Lcom/android/server/wm/DisplayContent;
    invoke-virtual/range {v16 .. v16}, Lcom/android/server/wm/DisplayContent;->getDisplayInfo()Landroid/view/DisplayInfo;

    move-result-object v18

    .line 17070
    .local v18, "defaultInfo":Landroid/view/DisplayInfo;
    move-object/from16 v0, v18

    iget v0, v0, Landroid/view/DisplayInfo;->logicalWidth:I

    move/from16 v17, v0

    .line 17071
    .local v17, "defaultDw":I
    move-object/from16 v0, v18

    iget v15, v0, Landroid/view/DisplayInfo;->logicalHeight:I

    .line 17075
    .local v15, "defaultDh":I
    invoke-static {}, Landroid/view/SurfaceControl;->openTransaction()V

    .line 17078
    :try_start_106
    move-object/from16 v0, p0

    iget-object v4, v0, mWatermark:Lcom/android/server/wm/Watermark;

    if-eqz v4, :cond_115

    .line 17079
    move-object/from16 v0, p0

    iget-object v4, v0, mWatermark:Lcom/android/server/wm/Watermark;

    move/from16 v0, v17

    invoke-virtual {v4, v0, v15}, Lcom/android/server/wm/Watermark;->positionSurface(II)V

    .line 17081
    :cond_115
    move-object/from16 v0, p0

    iget-object v4, v0, mStrictModeFlash:Lcom/android/server/wm/StrictModeFlash;

    if-eqz v4, :cond_124

    .line 17082
    move-object/from16 v0, p0

    iget-object v4, v0, mStrictModeFlash:Lcom/android/server/wm/StrictModeFlash;

    move/from16 v0, v17

    invoke-virtual {v4, v0, v15}, Lcom/android/server/wm/StrictModeFlash;->positionSurface(II)V

    .line 17084
    :cond_124
    move-object/from16 v0, p0

    iget-object v4, v0, mCircularDisplayMask:Lcom/android/server/wm/CircularDisplayMask;

    if-eqz v4, :cond_137

    .line 17085
    move-object/from16 v0, p0

    iget-object v4, v0, mCircularDisplayMask:Lcom/android/server/wm/CircularDisplayMask;

    move-object/from16 v0, p0

    iget v6, v0, mRotation:I

    move/from16 v0, v17

    invoke-virtual {v4, v0, v15, v6}, Lcom/android/server/wm/CircularDisplayMask;->positionSurface(III)V

    .line 17087
    :cond_137
    move-object/from16 v0, p0

    iget-object v4, v0, mEmulatorDisplayOverlay:Lcom/android/server/wm/EmulatorDisplayOverlay;

    if-eqz v4, :cond_14a

    .line 17088
    move-object/from16 v0, p0

    iget-object v4, v0, mEmulatorDisplayOverlay:Lcom/android/server/wm/EmulatorDisplayOverlay;

    move-object/from16 v0, p0

    iget v6, v0, mRotation:I

    move/from16 v0, v17

    invoke-virtual {v4, v0, v15, v6}, Lcom/android/server/wm/EmulatorDisplayOverlay;->positionSurface(III)V

    .line 17091
    :cond_14a
    const/16 v29, 0x0

    .line 17099
    .local v29, "focusDisplayed":Z
    const/16 v24, 0x0

    :goto_14e
    move/from16 v0, v24

    move/from16 v1, v46

    if-ge v0, v1, :cond_932

    .line 17100
    move-object/from16 v0, p0

    iget-object v4, v0, mDisplayContents:Landroid/util/SparseArray;

    move/from16 v0, v24

    invoke-virtual {v4, v0}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v21

    check-cast v21, Lcom/android/server/wm/DisplayContent;

    .line 17101
    .restart local v21    # "displayContent":Lcom/android/server/wm/DisplayContent;
    const/16 v57, 0x0

    .line 17103
    .local v57, "updateAllDrawn":Z
    const/4 v12, 0x0

    .line 17105
    .local v12, "allDrawnTaskDisplayContent":Lcom/android/server/wm/DisplayContent;
    invoke-virtual/range {v21 .. v21}, Lcom/android/server/wm/DisplayContent;->getWindowList()Lcom/android/server/wm/WindowList;

    move-result-object v64

    .line 17106
    .local v64, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual/range {v21 .. v21}, Lcom/android/server/wm/DisplayContent;->getDisplayInfo()Landroid/view/DisplayInfo;

    move-result-object v22

    .line 17107
    .local v22, "displayInfo":Landroid/view/DisplayInfo;
    invoke-virtual/range {v21 .. v21}, Lcom/android/server/wm/DisplayContent;->getDisplayId()I

    move-result v5

    .line 17108
    .local v5, "displayId":I
    move-object/from16 v0, v22

    iget v0, v0, Landroid/view/DisplayInfo;->logicalWidth:I

    move/from16 v25, v0

    .line 17109
    .local v25, "dw":I
    move-object/from16 v0, v22

    iget v0, v0, Landroid/view/DisplayInfo;->logicalHeight:I

    move/from16 v20, v0

    .line 17110
    .local v20, "dh":I
    move-object/from16 v0, v22

    iget v0, v0, Landroid/view/DisplayInfo;->appWidth:I

    move/from16 v33, v0

    .line 17111
    .local v33, "innerDw":I
    move-object/from16 v0, v22

    iget v0, v0, Landroid/view/DisplayInfo;->appHeight:I

    move/from16 v32, v0

    .line 17112
    .local v32, "innerDh":I
    if-nez v5, :cond_21b

    const/16 v36, 0x1

    .line 17116
    .local v36, "isDefaultDisplay":Z
    :goto_18b
    move-object/from16 v0, p0

    iget-object v4, v0, mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    const/4 v6, 0x0

    iput-boolean v6, v4, Lcom/android/server/wm/WindowManagerService$LayoutFields;->mDisplayHasContent:Z

    .line 17117
    move-object/from16 v0, p0

    iget-object v4, v0, mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    const/4 v6, 0x0

    iput v6, v4, Lcom/android/server/wm/WindowManagerService$LayoutFields;->mPreferredRefreshRate:F

    .line 17118
    move-object/from16 v0, p0

    iget-object v4, v0, mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    const/4 v6, 0x0

    iput v6, v4, Lcom/android/server/wm/WindowManagerService$LayoutFields;->mPreferredModeId:I

    .line 17120
    const/16 v48, 0x0

    .line 17122
    .local v48, "repeats":I
    :cond_1a2
    add-int/lit8 v48, v48, 0x1

    .line 17123
    const/4 v4, 0x6

    move/from16 v0, v48

    if-le v0, v4, :cond_21f

    .line 17124
    const-string v4, "WindowManager"

    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "[d"

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    move/from16 v0, v24

    invoke-virtual {v6, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v6

    const-string v7, "] Animation repeat aborted after too many iterations"

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-static {v4, v6}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 17125
    const/4 v4, 0x0

    move-object/from16 v0, v21

    iput-boolean v4, v0, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    .line 17227
    :goto_1ce
    move-object/from16 v0, p0

    iget-object v4, v0, mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    const/4 v6, 0x0

    # setter for: Lcom/android/server/wm/WindowManagerService$LayoutFields;->mObscured:Z
    invoke-static {v4, v6}, Lcom/android/server/wm/WindowManagerService$LayoutFields;->access$2302(Lcom/android/server/wm/WindowManagerService$LayoutFields;Z)Z

    .line 17228
    move-object/from16 v0, p0

    iget-object v4, v0, mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    const/4 v6, 0x0

    # setter for: Lcom/android/server/wm/WindowManagerService$LayoutFields;->mSyswin:Z
    invoke-static {v4, v6}, Lcom/android/server/wm/WindowManagerService$LayoutFields;->access$2502(Lcom/android/server/wm/WindowManagerService$LayoutFields;Z)Z

    .line 17229
    invoke-virtual/range {v21 .. v21}, Lcom/android/server/wm/DisplayContent;->resetDimming()V

    .line 17233
    invoke-virtual/range {v21 .. v21}, Lcom/android/server/wm/DisplayContent;->resetVisibleWindow()V

    .line 17238
    move-object/from16 v0, p0

    iget-object v4, v0, mLosingFocus:Ljava/util/ArrayList;

    invoke-virtual {v4}, Ljava/util/ArrayList;->isEmpty()Z

    move-result v4

    if-nez v4, :cond_428

    const/16 v50, 0x1

    .line 17240
    .local v50, "someoneLosingFocus":Z
    :goto_1f0
    invoke-virtual/range {v64 .. v64}, Lcom/android/server/wm/WindowList;->size()I

    move-result v10

    .line 17241
    .local v10, "N":I
    add-int/lit8 v30, v10, -0x1

    .restart local v30    # "i":I
    :goto_1f6
    if-ltz v30, :cond_908

    .line 17242
    move-object/from16 v0, v64

    move/from16 v1, v30

    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v59

    check-cast v59, Lcom/android/server/wm/WindowState;

    .line 17245
    .local v59, "w":Lcom/android/server/wm/WindowState;
    move-object/from16 v0, v59

    iget-object v4, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    if-eqz v4, :cond_42c

    :cond_208
    invoke-virtual/range {v59 .. v59}, Lcom/android/server/wm/WindowState;->getStack()Lcom/android/server/wm/TaskStack;

    move-result-object v51

    .line 17252
    .local v51, "stack":Lcom/android/server/wm/TaskStack;
    :goto_20c
    if-nez v51, :cond_43c

    invoke-virtual/range {v59 .. v59}, Lcom/android/server/wm/WindowState;->getAttrs()Landroid/view/WindowManager$LayoutParams;

    move-result-object v4

    iget v4, v4, Landroid/view/WindowManager$LayoutParams;->type:I

    const/16 v6, 0x7ee

    if-eq v4, v6, :cond_43c

    .line 17241
    :goto_218
    add-int/lit8 v30, v30, -0x1

    goto :goto_1f6

    .line 17112
    .end local v10    # "N":I
    .end local v30    # "i":I
    .end local v36    # "isDefaultDisplay":Z
    .end local v48    # "repeats":I
    .end local v50    # "someoneLosingFocus":Z
    .end local v51    # "stack":Lcom/android/server/wm/TaskStack;
    .end local v59    # "w":Lcom/android/server/wm/WindowState;
    :cond_21b
    const/16 v36, 0x0

    goto/16 :goto_18b

    .line 17129
    .restart local v36    # "isDefaultDisplay":Z
    .restart local v48    # "repeats":I
    :cond_21f
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v6, "[d"

    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move/from16 v0, v24

    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v6, "] On entry to LockedInner"

    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    move-object/from16 v0, v21

    iget v6, v0, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    move-object/from16 v0, p0

    invoke-virtual {v0, v4, v6}, debugLayoutRepeats(Ljava/lang/String;I)V

    .line 17132
    move-object/from16 v0, v21

    iget v4, v0, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    and-int/lit8 v4, v4, 0x4

    if-eqz v4, :cond_261

    move-object/from16 v0, p0

    move-object/from16 v1, v21

    invoke-virtual {v0, v1}, adjustWallpaperWindowsLocked(Lcom/android/server/wm/DisplayContent;)Z

    move-result v4

    if-eqz v4, :cond_261

    .line 17138
    move-object/from16 v0, p0

    move-object/from16 v1, v64

    invoke-direct {v0, v1}, assignLayersLocked(Lcom/android/server/wm/WindowList;)V

    .line 17139
    const/4 v4, 0x1

    move-object/from16 v0, v21

    iput-boolean v4, v0, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    .line 17143
    :cond_261
    if-eqz v36, :cond_2a6

    move-object/from16 v0, v21

    iget v4, v0, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    and-int/lit8 v4, v4, 0x2

    if-eqz v4, :cond_2a6

    .line 17145
    sget-boolean v4, DEBUG_LAYOUT:Z

    if-eqz v4, :cond_28f

    const-string v4, "WindowManager"

    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "[d"

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    move/from16 v0, v24

    invoke-virtual {v6, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v6

    const-string v7, "] Computing new config from layout"

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-static {v4, v6}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 17146
    :cond_28f
    const/4 v4, 0x1

    move-object/from16 v0, p0

    invoke-virtual {v0, v4, v5}, updateOrientationFromAppTokensLocked(ZI)Z

    move-result v4

    if-eqz v4, :cond_2a6

    .line 17147
    const/4 v4, 0x1

    move-object/from16 v0, v21

    iput-boolean v4, v0, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    .line 17148
    move-object/from16 v0, p0

    iget-object v4, v0, mH:Lcom/android/server/wm/WindowManagerService$H;

    const/16 v6, 0x12

    invoke-virtual {v4, v6}, Lcom/android/server/wm/WindowManagerService$H;->sendEmptyMessage(I)Z

    .line 17152
    :cond_2a6
    move-object/from16 v0, v21

    iget v4, v0, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    and-int/lit8 v4, v4, 0x1

    if-eqz v4, :cond_2b3

    .line 17154
    const/4 v4, 0x1

    move-object/from16 v0, v21

    iput-boolean v4, v0, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    .line 17158
    :cond_2b3
    move-object/from16 v0, v21

    iget v4, v0, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    and-int/lit8 v4, v4, 0x10

    if-eqz v4, :cond_2c0

    .line 17160
    const/4 v4, 0x1

    move-object/from16 v0, p0

    iput-boolean v4, v0, mFocusMayChange:Z

    .line 17165
    :cond_2c0
    const/4 v4, 0x4

    move/from16 v0, v48

    if-ge v0, v4, :cond_337

    .line 17166
    const/4 v4, 0x1

    move/from16 v0, v48

    if-ne v0, v4, :cond_335

    const/4 v4, 0x1

    :goto_2cb
    const/4 v6, 0x0

    move-object/from16 v0, p0

    move-object/from16 v1, v21

    invoke-direct {v0, v1, v4, v6}, performLayoutLockedInner(Lcom/android/server/wm/DisplayContent;ZZ)V

    .line 17174
    :goto_2d3
    const/4 v4, 0x0

    move-object/from16 v0, v21

    iput v4, v0, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    .line 17176
    sget-boolean v4, DEBUG_LAYOUT:Z

    if-eqz v4, :cond_2fc

    const-string v4, "WindowManager"

    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "[d"

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    move/from16 v0, v24

    invoke-virtual {v6, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v6

    const-string v7, "] displayContent.pendingLayoutChanges = 0"

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-static {v4, v6}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 17178
    :cond_2fc
    if-eqz v36, :cond_420

    .line 17185
    move-object/from16 v0, p0

    iget-object v4, v0, mPolicy:Landroid/view/WindowManagerPolicy;

    move/from16 v0, v25

    move/from16 v1, v20

    invoke-interface {v4, v0, v1}, Landroid/view/WindowManagerPolicy;->beginPostLayoutPolicyLw(II)V

    .line 17190
    invoke-virtual/range {v64 .. v64}, Lcom/android/server/wm/WindowList;->size()I

    move-result v4

    add-int/lit8 v30, v4, -0x1

    .restart local v30    # "i":I
    :goto_30f
    if-ltz v30, :cond_3a8

    .line 17191
    move-object/from16 v0, v64

    move/from16 v1, v30

    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v59

    check-cast v59, Lcom/android/server/wm/WindowState;

    .line 17192
    .restart local v59    # "w":Lcom/android/server/wm/WindowState;
    move-object/from16 v0, v59

    iget-boolean v4, v0, Lcom/android/server/wm/WindowState;->mHasSurface:Z

    if-eqz v4, :cond_332

    .line 17193
    move-object/from16 v0, p0

    iget-object v4, v0, mPolicy:Landroid/view/WindowManagerPolicy;

    move-object/from16 v0, v59

    iget-object v6, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    move-object/from16 v0, v59

    iget-object v7, v0, Lcom/android/server/wm/WindowState;->mAttachedWindow:Lcom/android/server/wm/WindowState;

    move-object/from16 v0, v59

    invoke-interface {v4, v0, v6, v7}, Landroid/view/WindowManagerPolicy;->applyPostLayoutPolicyLw(Landroid/view/WindowManagerPolicy$WindowState;Landroid/view/WindowManager$LayoutParams;Landroid/view/WindowManagerPolicy$WindowState;)V

    .line 17190
    :cond_332
    add-int/lit8 v30, v30, -0x1

    goto :goto_30f

    .line 17166
    .end local v30    # "i":I
    .end local v59    # "w":Lcom/android/server/wm/WindowState;
    :cond_335
    const/4 v4, 0x0

    goto :goto_2cb

    .line 17169
    :cond_337
    const-string v4, "WindowManager"

    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "[d"

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    move/from16 v0, v24

    invoke-virtual {v6, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v6

    const-string v7, "] Layout repeat skipped after too many iterations"

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-static {v4, v6}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_357
    .catch Ljava/lang/RuntimeException; {:try_start_106 .. :try_end_357} :catch_359
    .catchall {:try_start_106 .. :try_end_357} :catchall_8bd

    goto/16 :goto_2d3

    .line 17545
    .end local v5    # "displayId":I
    .end local v12    # "allDrawnTaskDisplayContent":Lcom/android/server/wm/DisplayContent;
    .end local v20    # "dh":I
    .end local v21    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v22    # "displayInfo":Landroid/view/DisplayInfo;
    .end local v25    # "dw":I
    .end local v29    # "focusDisplayed":Z
    .end local v32    # "innerDh":I
    .end local v33    # "innerDw":I
    .end local v36    # "isDefaultDisplay":Z
    .end local v48    # "repeats":I
    .end local v57    # "updateAllDrawn":Z
    .end local v64    # "windows":Lcom/android/server/wm/WindowList;
    :catch_359
    move-exception v26

    .line 17546
    .local v26, "e":Ljava/lang/RuntimeException;
    :try_start_35a
    const-string v4, "WindowManager"

    const-string v6, "Unhandled exception in Window Manager"

    move-object/from16 v0, v26

    invoke-static {v4, v6, v0}, Landroid/util/Slog;->wtf(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_363
    .catchall {:try_start_35a .. :try_end_363} :catchall_8bd

    .line 17548
    invoke-static {}, Landroid/view/SurfaceControl;->closeTransaction()V

    .line 17582
    .end local v26    # "e":Ljava/lang/RuntimeException;
    :goto_366
    const/16 v24, 0x1

    :goto_368
    move-object/from16 v0, p0

    iget-object v4, v0, mDisplayContents:Landroid/util/SparseArray;

    invoke-virtual {v4}, Landroid/util/SparseArray;->size()I

    move-result v4

    move/from16 v0, v24

    if-ge v0, v4, :cond_948

    .line 17583
    move-object/from16 v0, p0

    iget-object v4, v0, mDisplayContents:Landroid/util/SparseArray;

    move/from16 v0, v24

    invoke-virtual {v4, v0}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v21

    check-cast v21, Lcom/android/server/wm/DisplayContent;

    .line 17584
    .restart local v21    # "displayContent":Lcom/android/server/wm/DisplayContent;
    invoke-static {}, Lcom/android/server/am/VirtualScreenManagerService;->self()Lcom/android/server/am/VirtualScreenManagerService;

    move-result-object v4

    invoke-virtual/range {v21 .. v21}, Lcom/android/server/wm/DisplayContent;->getDisplayId()I

    move-result v6

    invoke-virtual {v4, v6}, Lcom/android/server/am/VirtualScreenManagerService;->isVirtualScreen(I)Z

    move-result v4

    if-eqz v4, :cond_3a5

    invoke-static {}, Lcom/android/server/am/VirtualScreenManagerService;->self()Lcom/android/server/am/VirtualScreenManagerService;

    move-result-object v4

    invoke-virtual/range {v21 .. v21}, Lcom/android/server/wm/DisplayContent;->getDisplayId()I

    move-result v6

    invoke-virtual {v4, v6}, Lcom/android/server/am/VirtualScreenManagerService;->isVisibleVirtualScreen(I)Z

    move-result v4

    if-eqz v4, :cond_3a5

    .line 17586
    invoke-virtual/range {v21 .. v21}, Lcom/android/server/wm/DisplayContent;->getDisplayId()I

    move-result v4

    move-object/from16 v0, p0

    invoke-direct {v0, v4}, performLayoutForAppTransitionLocked(I)V

    .line 17582
    :cond_3a5
    add-int/lit8 v24, v24, 0x1

    goto :goto_368

    .line 17201
    .restart local v5    # "displayId":I
    .restart local v12    # "allDrawnTaskDisplayContent":Lcom/android/server/wm/DisplayContent;
    .restart local v20    # "dh":I
    .restart local v22    # "displayInfo":Landroid/view/DisplayInfo;
    .restart local v25    # "dw":I
    .restart local v29    # "focusDisplayed":Z
    .restart local v30    # "i":I
    .restart local v32    # "innerDh":I
    .restart local v33    # "innerDw":I
    .restart local v36    # "isDefaultDisplay":Z
    .restart local v48    # "repeats":I
    .restart local v57    # "updateAllDrawn":Z
    .restart local v64    # "windows":Lcom/android/server/wm/WindowList;
    :cond_3a8
    :try_start_3a8
    move-object/from16 v0, p0

    iget-object v6, v0, mPolicy:Landroid/view/WindowManagerPolicy;

    move-object/from16 v0, p0

    iget-boolean v4, v0, mForceHideCenterbar:Z

    if-nez v4, :cond_3be

    move-object/from16 v0, p0

    iget-boolean v4, v0, mIsRecentsMultiWindowRunning:Z

    if-nez v4, :cond_3be

    move-object/from16 v0, p0

    iget-boolean v4, v0, mIsForceHideCenterbarTransitionRunning:Z

    if-eqz v4, :cond_3e9

    :cond_3be
    const/4 v4, 0x1

    :goto_3bf
    invoke-interface {v6, v4}, Landroid/view/WindowManagerPolicy;->forceHideCenterBar(Z)V

    .line 17204
    move-object/from16 v0, p0

    iget-object v4, v0, mStackIdToStack:Landroid/util/SparseArray;

    invoke-virtual {v4}, Landroid/util/SparseArray;->size()I

    move-result v4

    add-int/lit8 v52, v4, -0x1

    :goto_3cc
    if-ltz v52, :cond_3eb

    .line 17205
    move-object/from16 v0, p0

    iget-object v4, v0, mStackIdToStack:Landroid/util/SparseArray;

    move/from16 v0, v52

    invoke-virtual {v4, v0}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v53

    check-cast v53, Lcom/android/server/wm/TaskStack;

    .line 17206
    .local v53, "taskStack":Lcom/android/server/wm/TaskStack;
    if-eqz v53, :cond_3e6

    move-object/from16 v0, v53

    iget v4, v0, Lcom/android/server/wm/TaskStack;->mStackType:I

    const/4 v6, 0x3

    if-ne v4, v6, :cond_3e6

    .line 17207
    invoke-virtual/range {v53 .. v53}, Lcom/android/server/wm/TaskStack;->updateTopPenWindowControllerToken()V

    .line 17204
    :cond_3e6
    add-int/lit8 v52, v52, -0x1

    goto :goto_3cc

    .line 17201
    .end local v53    # "taskStack":Lcom/android/server/wm/TaskStack;
    :cond_3e9
    const/4 v4, 0x0

    goto :goto_3bf

    .line 17219
    :cond_3eb
    move-object/from16 v0, v21

    iget v4, v0, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    move-object/from16 v0, p0

    iget-object v6, v0, mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v6}, Landroid/view/WindowManagerPolicy;->finishPostLayoutPolicyLw()I

    move-result v6

    or-int/2addr v4, v6

    move-object/from16 v0, v21

    iput v4, v0, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    .line 17222
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v6, "[d"

    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move/from16 v0, v24

    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v6, "] after finishPostLayoutPolicyLw"

    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    move-object/from16 v0, v21

    iget v6, v0, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    move-object/from16 v0, p0

    invoke-virtual {v0, v4, v6}, debugLayoutRepeats(Ljava/lang/String;I)V

    .line 17225
    .end local v30    # "i":I
    :cond_420
    move-object/from16 v0, v21

    iget v4, v0, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    if-nez v4, :cond_1a2

    goto/16 :goto_1ce

    .line 17238
    :cond_428
    const/16 v50, 0x0

    goto/16 :goto_1f0

    .line 17245
    .restart local v10    # "N":I
    .restart local v30    # "i":I
    .restart local v50    # "someoneLosingFocus":Z
    .restart local v59    # "w":Lcom/android/server/wm/WindowState;
    :cond_42c
    invoke-virtual/range {v59 .. v59}, Lcom/android/server/wm/WindowState;->isDefaultDisplay()Z

    move-result v4

    if-eqz v4, :cond_208

    move-object/from16 v0, v59

    iget-object v4, v0, Lcom/android/server/wm/WindowState;->mDisplayContent:Lcom/android/server/wm/DisplayContent;

    invoke-virtual {v4}, Lcom/android/server/wm/DisplayContent;->getHomeStack()Lcom/android/server/wm/TaskStack;

    move-result-object v51

    goto/16 :goto_20c

    .line 17261
    .restart local v51    # "stack":Lcom/android/server/wm/TaskStack;
    :cond_43c
    move-object/from16 v0, v59

    iget-boolean v4, v0, Lcom/android/server/wm/WindowState;->mObscured:Z

    move-object/from16 v0, p0

    iget-object v6, v0, mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    # getter for: Lcom/android/server/wm/WindowManagerService$LayoutFields;->mObscured:Z
    invoke-static {v6}, Lcom/android/server/wm/WindowManagerService$LayoutFields;->access$2300(Lcom/android/server/wm/WindowManagerService$LayoutFields;)Z

    move-result v6

    if-eq v4, v6, :cond_8c2

    const/16 v47, 0x1

    .line 17263
    .local v47, "obscuredChanged":Z
    :goto_44c
    move-object/from16 v0, p0

    iget-object v4, v0, mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    # getter for: Lcom/android/server/wm/WindowManagerService$LayoutFields;->mObscured:Z
    invoke-static {v4}, Lcom/android/server/wm/WindowManagerService$LayoutFields;->access$2300(Lcom/android/server/wm/WindowManagerService$LayoutFields;)Z

    move-result v4

    move-object/from16 v0, v59

    iput-boolean v4, v0, Lcom/android/server/wm/WindowState;->mObscured:Z

    .line 17266
    move-object/from16 v0, p0

    iget-object v4, v0, mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    # getter for: Lcom/android/server/wm/WindowManagerService$LayoutFields;->mObscured:Z
    invoke-static {v4}, Lcom/android/server/wm/WindowManagerService$LayoutFields;->access$2300(Lcom/android/server/wm/WindowManagerService$LayoutFields;)Z

    move-result v4

    if-nez v4, :cond_46d

    .line 17267
    move-object/from16 v0, p0

    move-object/from16 v1, v59

    move/from16 v2, v33

    move/from16 v3, v32

    invoke-direct {v0, v1, v2, v3}, handleNotObscuredLocked(Lcom/android/server/wm/WindowState;II)V

    .line 17270
    :cond_46d
    if-eqz v51, :cond_47c

    invoke-virtual/range {v51 .. v51}, Lcom/android/server/wm/TaskStack;->testDimmingTag()Z

    move-result v4

    if-nez v4, :cond_47c

    .line 17271
    move-object/from16 v0, p0

    move-object/from16 v1, v59

    invoke-direct {v0, v1}, handleFlagDimBehind(Lcom/android/server/wm/WindowState;)V

    .line 17276
    :cond_47c
    invoke-virtual/range {v59 .. v59}, Lcom/android/server/wm/WindowState;->getMultiWindowStyleLw()Lcom/samsung/android/multiwindow/MultiWindowStyle;

    move-result-object v4

    invoke-virtual {v4}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->isCascade()Z

    move-result v4

    if-nez v4, :cond_4a3

    move-object/from16 v0, p0

    iget-boolean v4, v0, mIsRecentsMultiWindowRunning:Z

    if-eqz v4, :cond_8ca

    invoke-virtual/range {v59 .. v59}, Lcom/android/server/wm/WindowState;->getMultiWindowStyleLw()Lcom/samsung/android/multiwindow/MultiWindowStyle;

    move-result-object v4

    invoke-virtual {v4}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->isSplit()Z

    move-result v4

    if-eqz v4, :cond_8ca

    invoke-virtual/range {v59 .. v59}, Lcom/android/server/wm/WindowState;->getMultiWindowStyleLw()Lcom/samsung/android/multiwindow/MultiWindowStyle;

    move-result-object v4

    invoke-virtual {v4}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->getOptionFlags()I

    move-result v4

    const/high16 v6, 0x4000000

    and-int/2addr v4, v6

    if-nez v4, :cond_8ca

    .line 17279
    :cond_4a3
    move-object/from16 v0, v59

    iget-boolean v0, v0, Lcom/android/server/wm/WindowState;->mHasSurface:Z

    move/from16 v38, v0

    .line 17280
    .local v38, "isVisible":Z
    move-object/from16 v0, v59

    iget-object v4, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v4, v4, Landroid/view/WindowManager$LayoutParams;->type:I

    const/4 v6, 0x1

    if-ne v4, v6, :cond_8c6

    const/16 v34, 0x1

    .line 17281
    .local v34, "isBaseApp":Z
    :goto_4b4
    if-eqz v51, :cond_4d0

    if-eqz v38, :cond_4d0

    if-eqz v34, :cond_4d0

    .line 17282
    invoke-virtual/range {v51 .. v51}, Lcom/android/server/wm/TaskStack;->hasBlackBackground()Z

    move-result v4

    if-nez v4, :cond_4c9

    .line 17283
    invoke-virtual/range {v51 .. v51}, Lcom/android/server/wm/TaskStack;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    move-result-object v4

    move-object/from16 v0, v51

    invoke-virtual {v0, v4}, Lcom/android/server/wm/TaskStack;->createBlackBackground(Lcom/android/server/wm/DisplayContent;)V

    .line 17285
    :cond_4c9
    move-object/from16 v0, v51

    move-object/from16 v1, v59

    invoke-virtual {v0, v1}, Lcom/android/server/wm/TaskStack;->notifyVisibleWindow(Lcom/android/server/wm/WindowState;)V

    .line 17299
    .end local v34    # "isBaseApp":Z
    .end local v38    # "isVisible":Z
    :cond_4d0
    :goto_4d0
    move-object/from16 v0, p0

    iget-object v0, v0, mWallpaperTarget:Lcom/android/server/wm/WindowState;

    move-object/from16 v41, v0

    .line 17303
    .local v41, "mWallpaperTarget":Lcom/android/server/wm/WindowState;
    if-eqz v36, :cond_4eb

    if-eqz v47, :cond_4eb

    move-object/from16 v0, v41

    move-object/from16 v1, v59

    if-ne v0, v1, :cond_4eb

    invoke-virtual/range {v59 .. v59}, Lcom/android/server/wm/WindowState;->isVisibleLw()Z

    move-result v4

    if-eqz v4, :cond_4eb

    .line 17308
    move-object/from16 v0, p0

    invoke-virtual {v0, v5}, updateWallpaperVisibilityLocked(I)V

    .line 17311
    :cond_4eb
    move-object/from16 v0, v59

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    move-object/from16 v63, v0

    .line 17315
    .local v63, "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    invoke-virtual/range {v59 .. v59}, Lcom/android/server/wm/WindowState;->hasMoved()Z

    move-result v4

    if-eqz v4, :cond_597

    .line 17318
    move-object/from16 v0, v59

    iget-object v4, v0, Lcom/android/server/wm/WindowState;->mFrame:Landroid/graphics/Rect;

    iget v0, v4, Landroid/graphics/Rect;->left:I

    move/from16 v39, v0

    .line 17319
    .local v39, "left":I
    move-object/from16 v0, v59

    iget-object v4, v0, Lcom/android/server/wm/WindowState;->mFrame:Landroid/graphics/Rect;

    iget v0, v4, Landroid/graphics/Rect;->top:I

    move/from16 v56, v0

    .line 17322
    .local v56, "top":I
    const/16 v49, 0x0

    .line 17324
    .local v49, "shouldSkipMoving":Z
    const/16 v37, 0x0

    .line 17325
    .local v37, "isMultiWindowAnimating":Z
    move-object/from16 v0, p0

    iget-object v4, v0, mAnimator:Lcom/android/server/wm/WindowAnimator;

    invoke-virtual {v4, v5}, Lcom/android/server/wm/WindowAnimator;->getMultiWindowTransitionLocked(I)Lcom/android/server/wm/MultiWindowTransition;

    move-result-object v45

    .line 17326
    .local v45, "mwAnim":Lcom/android/server/wm/MultiWindowTransition;
    if-eqz v45, :cond_51d

    invoke-virtual/range {v45 .. v45}, Lcom/android/server/wm/MultiWindowTransition;->isAnimating()Z

    move-result v4

    if-eqz v4, :cond_51d

    .line 17327
    const/16 v37, 0x1

    .line 17329
    :cond_51d
    invoke-virtual/range {v59 .. v59}, Lcom/android/server/wm/WindowState;->getMultiWindowStyleLw()Lcom/samsung/android/multiwindow/MultiWindowStyle;

    move-result-object v4

    if-eqz v4, :cond_8d5

    invoke-virtual/range {v59 .. v59}, Lcom/android/server/wm/WindowState;->getMultiWindowStyleLw()Lcom/samsung/android/multiwindow/MultiWindowStyle;

    move-result-object v4

    invoke-virtual {v4}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->isCascade()Z

    move-result v4

    if-eqz v4, :cond_8d5

    const/16 v35, 0x1

    .line 17330
    .local v35, "isCascade":Z
    :goto_52f
    if-eqz v35, :cond_53e

    move-object/from16 v0, v59

    iget-object v4, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    if-eqz v4, :cond_53e

    .line 17331
    move-object/from16 v0, v59

    iget-object v4, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    const/4 v6, 0x1

    iput-boolean v6, v4, Lcom/android/server/wm/AppWindowToken;->mHasMoved:Z

    .line 17333
    :cond_53e
    if-nez v37, :cond_542

    if-eqz v35, :cond_8d9

    :cond_542
    const/16 v49, 0x1

    .line 17337
    :goto_544
    move-object/from16 v0, v59

    iget-object v4, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v4, v4, Landroid/view/WindowManager$LayoutParams;->privateFlags:I

    and-int/lit8 v4, v4, 0x40

    if-nez v4, :cond_57d

    if-nez v49, :cond_57d

    .line 17339
    move-object/from16 v0, p0

    iget-object v4, v0, mContext:Landroid/content/Context;

    const v6, 0x10a00c7

    invoke-static {v4, v6}, Landroid/view/animation/AnimationUtils;->loadAnimation(Landroid/content/Context;I)Landroid/view/animation/Animation;

    move-result-object v11

    .line 17341
    .local v11, "a":Landroid/view/animation/Animation;
    move-object/from16 v0, v63

    invoke-virtual {v0, v11}, Lcom/android/server/wm/WindowStateAnimator;->setAnimation(Landroid/view/animation/Animation;)V

    .line 17342
    move-object/from16 v0, v59

    iget-object v4, v0, Lcom/android/server/wm/WindowState;->mLastFrame:Landroid/graphics/Rect;

    iget v4, v4, Landroid/graphics/Rect;->left:I

    sub-int v4, v4, v39

    move-object/from16 v0, v63

    iput v4, v0, Lcom/android/server/wm/WindowStateAnimator;->mAnimDw:I

    .line 17343
    move-object/from16 v0, v59

    iget-object v4, v0, Lcom/android/server/wm/WindowState;->mLastFrame:Landroid/graphics/Rect;

    iget v4, v4, Landroid/graphics/Rect;->top:I

    sub-int v4, v4, v56

    move-object/from16 v0, v63

    iput v4, v0, Lcom/android/server/wm/WindowStateAnimator;->mAnimDh:I

    .line 17344
    const/4 v4, 0x1

    move-object/from16 v0, v63

    iput-boolean v4, v0, Lcom/android/server/wm/WindowStateAnimator;->mAnimateMove:Z

    .line 17356
    .end local v11    # "a":Landroid/view/animation/Animation;
    :cond_57d
    move-object/from16 v0, p0

    iget-object v4, v0, mAccessibilityController:Lcom/android/server/wm/AccessibilityController;

    if-eqz v4, :cond_58c

    if-nez v5, :cond_58c

    .line 17358
    move-object/from16 v0, p0

    iget-object v4, v0, mAccessibilityController:Lcom/android/server/wm/AccessibilityController;

    invoke-virtual {v4}, Lcom/android/server/wm/AccessibilityController;->onSomeWindowResizedOrMovedLocked()V
    :try_end_58c
    .catch Ljava/lang/RuntimeException; {:try_start_3a8 .. :try_end_58c} :catch_359
    .catchall {:try_start_3a8 .. :try_end_58c} :catchall_8bd

    .line 17363
    :cond_58c
    :try_start_58c
    move-object/from16 v0, v59

    iget-object v4, v0, Lcom/android/server/wm/WindowState;->mClient:Landroid/view/IWindow;

    move/from16 v0, v39

    move/from16 v1, v56

    invoke-interface {v4, v0, v1}, Landroid/view/IWindow;->moved(II)V
    :try_end_597
    .catch Landroid/os/RemoteException; {:try_start_58c .. :try_end_597} :catch_f33
    .catch Ljava/lang/RuntimeException; {:try_start_58c .. :try_end_597} :catch_359
    .catchall {:try_start_58c .. :try_end_597} :catchall_8bd

    .line 17369
    .end local v35    # "isCascade":Z
    .end local v37    # "isMultiWindowAnimating":Z
    .end local v39    # "left":I
    .end local v45    # "mwAnim":Lcom/android/server/wm/MultiWindowTransition;
    .end local v49    # "shouldSkipMoving":Z
    .end local v56    # "top":I
    :cond_597
    :goto_597
    const/4 v4, 0x0

    :try_start_598
    move-object/from16 v0, v59

    iput-boolean v4, v0, Lcom/android/server/wm/WindowState;->mContentChanged:Z

    .line 17372
    move-object/from16 v0, v59

    iget-boolean v4, v0, Lcom/android/server/wm/WindowState;->mHasSurface:Z

    if-eqz v4, :cond_8a0

    invoke-virtual/range {v59 .. v59}, Lcom/android/server/wm/WindowState;->isHiddenFromUserLocked()Z

    move-result v4

    if-nez v4, :cond_8a0

    .line 17374
    invoke-virtual/range {v63 .. v63}, Lcom/android/server/wm/WindowStateAnimator;->commitFinishDrawingLocked()Z

    move-result v14

    .line 17376
    .local v14, "committed":Z
    if-eqz v36, :cond_646

    if-eqz v14, :cond_646

    .line 17377
    move-object/from16 v0, v59

    iget-object v4, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v4, v4, Landroid/view/WindowManager$LayoutParams;->type:I

    const/16 v6, 0x7e7

    if-ne v4, v6, :cond_5e8

    .line 17382
    move-object/from16 v0, v21

    iget v4, v0, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    or-int/lit8 v4, v4, 0x1

    move-object/from16 v0, v21

    iput v4, v0, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    .line 17385
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v6, "[d"

    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move/from16 v0, v24

    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v6, "] dream and commitFinishDrawingLocked true"

    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    move-object/from16 v0, v21

    iget v6, v0, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    move-object/from16 v0, p0

    invoke-virtual {v0, v4, v6}, debugLayoutRepeats(Ljava/lang/String;I)V

    .line 17390
    :cond_5e8
    move-object/from16 v0, v59

    iget-object v4, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v4, v4, Landroid/view/WindowManager$LayoutParams;->flags:I

    const/high16 v6, 0x100000

    and-int/2addr v4, v6

    if-eqz v4, :cond_646

    .line 17392
    sget-boolean v4, DEBUG_WALLPAPER_LIGHT:Z

    if-eqz v4, :cond_611

    const-string v4, "WindowManager"

    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "First draw done in potential wallpaper target "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    move-object/from16 v0, v59

    invoke-virtual {v6, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-static {v4, v6}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 17394
    :cond_611
    move-object/from16 v0, p0

    iget-object v4, v0, mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    const/4 v6, 0x1

    iput-boolean v6, v4, Lcom/android/server/wm/WindowManagerService$LayoutFields;->mWallpaperMayChange:Z

    .line 17395
    move-object/from16 v0, v21

    iget v4, v0, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    or-int/lit8 v4, v4, 0x4

    move-object/from16 v0, v21

    iput v4, v0, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    .line 17398
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v6, "[d"

    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move/from16 v0, v24

    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v6, "] wallpaper and commitFinishDrawingLocked true"

    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    move-object/from16 v0, v21

    iget v6, v0, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    move-object/from16 v0, p0

    invoke-virtual {v0, v4, v6}, debugLayoutRepeats(Ljava/lang/String;I)V

    .line 17405
    :cond_646
    move-object/from16 v0, v63

    move/from16 v1, p1

    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowStateAnimator;->setSurfaceBoundariesLocked(Z)V

    .line 17407
    move-object/from16 v0, v59

    iget-object v13, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    .line 17408
    .local v13, "atoken":Lcom/android/server/wm/AppWindowToken;
    sget-boolean v4, DEBUG_STARTING_WINDOW:Z

    if-eqz v4, :cond_6a0

    if-eqz v13, :cond_6a0

    iget-object v4, v13, Lcom/android/server/wm/AppWindowToken;->startingWindow:Lcom/android/server/wm/WindowState;

    move-object/from16 v0, v59

    if-ne v0, v4, :cond_6a0

    .line 17410
    const-string v4, "WindowManager"

    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v7, "updateWindows: starting "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    move-object/from16 v0, v59

    invoke-virtual {v6, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v6

    const-string v7, " isOnScreen="

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual/range {v59 .. v59}, Lcom/android/server/wm/WindowState;->isOnScreen()Z

    move-result v7

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v6

    const-string v7, " allDrawn="

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    iget-boolean v7, v13, Lcom/android/server/wm/AppWindowToken;->allDrawn:Z

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v6

    const-string v7, " freezingScreen="

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    iget-object v7, v13, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    iget-boolean v7, v7, Lcom/android/server/wm/AppWindowAnimator;->freezingScreen:Z

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-static {v4, v6}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 17414
    :cond_6a0
    if-eqz v13, :cond_865

    iget-boolean v4, v13, Lcom/android/server/wm/AppWindowToken;->allDrawn:Z

    if-eqz v4, :cond_6ac

    iget-object v4, v13, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    iget-boolean v4, v4, Lcom/android/server/wm/AppWindowAnimator;->freezingScreen:Z

    if-eqz v4, :cond_865

    .line 17416
    :cond_6ac
    iget-wide v6, v13, Lcom/android/server/wm/AppWindowToken;->lastTransactionSequence:J

    move-object/from16 v0, p0

    iget v4, v0, mTransactionSequence:I

    int-to-long v8, v4

    cmp-long v4, v6, v8

    if-eqz v4, :cond_6c6

    .line 17417
    move-object/from16 v0, p0

    iget v4, v0, mTransactionSequence:I

    int-to-long v6, v4

    iput-wide v6, v13, Lcom/android/server/wm/AppWindowToken;->lastTransactionSequence:J

    .line 17418
    const/4 v4, 0x0

    iput v4, v13, Lcom/android/server/wm/AppWindowToken;->numDrawnWindows:I

    iput v4, v13, Lcom/android/server/wm/AppWindowToken;->numInterestingWindows:I

    .line 17419
    const/4 v4, 0x0

    iput-boolean v4, v13, Lcom/android/server/wm/AppWindowToken;->startingDisplayed:Z

    .line 17421
    :cond_6c6
    invoke-virtual/range {v59 .. v59}, Lcom/android/server/wm/WindowState;->isOnScreenIgnoringKeyguard()Z

    move-result v4

    if-nez v4, :cond_6d3

    move-object/from16 v0, v63

    iget v4, v0, Lcom/android/server/wm/WindowStateAnimator;->mAttrType:I

    const/4 v6, 0x1

    if-ne v4, v6, :cond_865

    :cond_6d3
    move-object/from16 v0, v59

    iget-boolean v4, v0, Lcom/android/server/wm/WindowState;->mExiting:Z

    if-nez v4, :cond_865

    move-object/from16 v0, v59

    iget-boolean v4, v0, Lcom/android/server/wm/WindowState;->mDestroying:Z

    if-nez v4, :cond_865

    .line 17424
    sget-boolean v4, DEBUG_VISIBILITY:Z

    if-nez v4, :cond_6e7

    sget-boolean v4, DEBUG_ORIENTATION:Z

    if-eqz v4, :cond_783

    .line 17425
    :cond_6e7
    const-string v4, "WindowManager"

    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "Eval win "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    move-object/from16 v0, v59

    invoke-virtual {v6, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v6

    const-string v7, ": isDrawn="

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual/range {v59 .. v59}, Lcom/android/server/wm/WindowState;->isDrawnLw()Z

    move-result v7

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v6

    const-string v7, ", isAnimating="

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual/range {v63 .. v63}, Lcom/android/server/wm/WindowStateAnimator;->isAnimating()Z

    move-result v7

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-static {v4, v6}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 17427
    invoke-virtual/range {v59 .. v59}, Lcom/android/server/wm/WindowState;->isDrawnLw()Z

    move-result v4

    if-nez v4, :cond_783

    .line 17428
    const-string v4, "WindowManager"

    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "Not displayed: s="

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    move-object/from16 v0, v63

    iget-object v7, v0, Lcom/android/server/wm/WindowStateAnimator;->mSurfaceControl:Landroid/view/SurfaceControl;

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v6

    const-string v7, " pv="

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    move-object/from16 v0, v59

    iget-boolean v7, v0, Lcom/android/server/wm/WindowState;->mPolicyVisibility:Z

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v6

    const-string v7, " mDrawState="

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual/range {v63 .. v63}, Lcom/android/server/wm/WindowStateAnimator;->drawStateToString()Ljava/lang/String;

    move-result-object v7

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    const-string v7, " ah="

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    move-object/from16 v0, v59

    iget-boolean v7, v0, Lcom/android/server/wm/WindowState;->mAttachedHidden:Z

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v6

    const-string v7, " th="

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    iget-boolean v7, v13, Lcom/android/server/wm/AppWindowToken;->hiddenRequested:Z

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v6

    const-string v7, " a="

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    move-object/from16 v0, v63

    iget-boolean v7, v0, Lcom/android/server/wm/WindowStateAnimator;->mAnimating:Z

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-static {v4, v6}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 17436
    :cond_783
    iget-object v4, v13, Lcom/android/server/wm/AppWindowToken;->startingWindow:Lcom/android/server/wm/WindowState;

    move-object/from16 v0, v59

    if-eq v0, v4, :cond_8e9

    .line 17437
    iget-object v4, v13, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    iget-boolean v4, v4, Lcom/android/server/wm/AppWindowAnimator;->freezingScreen:Z

    if-eqz v4, :cond_795

    move-object/from16 v0, v59

    iget-boolean v4, v0, Lcom/android/server/wm/WindowState;->mAppFreezing:Z

    if-nez v4, :cond_865

    .line 17438
    :cond_795
    iget v4, v13, Lcom/android/server/wm/AppWindowToken;->numInterestingWindows:I

    add-int/lit8 v4, v4, 0x1

    iput v4, v13, Lcom/android/server/wm/AppWindowToken;->numInterestingWindows:I

    .line 17440
    const/16 v60, 0x0

    .line 17441
    .local v60, "waitForMainWindow":Z
    invoke-virtual/range {v59 .. v59}, Lcom/android/server/wm/WindowState;->getMainWindow()Lcom/android/server/wm/WindowState;

    move-result-object v43

    .line 17443
    .local v43, "mainWindow":Lcom/android/server/wm/WindowState;
    invoke-virtual/range {v59 .. v59}, Lcom/android/server/wm/WindowState;->getAttrs()Landroid/view/WindowManager$LayoutParams;

    move-result-object v4

    iget v4, v4, Landroid/view/WindowManager$LayoutParams;->type:I

    const/16 v6, 0x3ee

    if-eq v4, v6, :cond_7b5

    invoke-virtual/range {v59 .. v59}, Lcom/android/server/wm/WindowState;->getAttrs()Landroid/view/WindowManager$LayoutParams;

    move-result-object v4

    iget v4, v4, Landroid/view/WindowManager$LayoutParams;->type:I

    const/16 v6, 0x3ef

    if-ne v4, v6, :cond_7cb

    .line 17445
    :cond_7b5
    if-eqz v43, :cond_8dd

    move-object/from16 v0, v43

    iget-boolean v4, v0, Lcom/android/server/wm/WindowState;->mHasSurface:Z

    if-eqz v4, :cond_7c3

    move-object/from16 v0, v43

    iget-boolean v4, v0, Lcom/android/server/wm/WindowState;->mDestroying:Z

    if-eqz v4, :cond_8dd

    :cond_7c3
    move-object/from16 v0, v43

    iget-boolean v4, v0, Lcom/android/server/wm/WindowState;->mAppFreezing:Z

    if-nez v4, :cond_8dd

    const/16 v60, 0x1

    .line 17453
    :cond_7cb
    :goto_7cb
    invoke-virtual/range {v59 .. v59}, Lcom/android/server/wm/WindowState;->getAttrs()Landroid/view/WindowManager$LayoutParams;

    move-result-object v4

    iget v4, v4, Landroid/view/WindowManager$LayoutParams;->type:I

    const/16 v6, 0x62

    if-ne v4, v6, :cond_7f6

    invoke-virtual/range {v59 .. v59}, Lcom/android/server/wm/WindowState;->getMultiWindowStyleLw()Lcom/samsung/android/multiwindow/MultiWindowStyle;

    move-result-object v4

    const/4 v6, 0x4

    invoke-virtual {v4, v6}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->isEnabled(I)Z

    move-result v4

    if-nez v4, :cond_7f6

    .line 17455
    if-eqz v43, :cond_8e1

    move-object/from16 v0, v43

    iget-boolean v4, v0, Lcom/android/server/wm/WindowState;->mHasSurface:Z

    if-eqz v4, :cond_7ee

    move-object/from16 v0, v43

    iget-boolean v4, v0, Lcom/android/server/wm/WindowState;->mDestroying:Z

    if-eqz v4, :cond_8e1

    :cond_7ee
    move-object/from16 v0, v43

    iget-boolean v4, v0, Lcom/android/server/wm/WindowState;->mAppFreezing:Z

    if-nez v4, :cond_8e1

    const/16 v60, 0x1

    .line 17463
    :cond_7f6
    :goto_7f6
    if-nez v60, :cond_818

    move-object/from16 v0, v59

    iget-object v4, v0, Lcom/android/server/wm/WindowState;->mAttachedWindow:Lcom/android/server/wm/WindowState;

    if-eqz v4, :cond_818

    .line 17464
    move-object/from16 v0, v59

    iget-object v4, v0, Lcom/android/server/wm/WindowState;->mAttachedWindow:Lcom/android/server/wm/WindowState;

    iget-boolean v4, v4, Lcom/android/server/wm/WindowState;->mHasSurface:Z

    if-eqz v4, :cond_80e

    move-object/from16 v0, v59

    iget-object v4, v0, Lcom/android/server/wm/WindowState;->mAttachedWindow:Lcom/android/server/wm/WindowState;

    iget-boolean v4, v4, Lcom/android/server/wm/WindowState;->mDestroying:Z

    if-eqz v4, :cond_8e5

    :cond_80e
    move-object/from16 v0, v59

    iget-object v4, v0, Lcom/android/server/wm/WindowState;->mAttachedWindow:Lcom/android/server/wm/WindowState;

    iget-boolean v4, v4, Lcom/android/server/wm/WindowState;->mAppFreezing:Z

    if-nez v4, :cond_8e5

    const/16 v60, 0x1

    .line 17468
    :cond_818
    :goto_818
    invoke-virtual/range {v59 .. v59}, Lcom/android/server/wm/WindowState;->isDrawnLw()Z

    move-result v4

    if-eqz v4, :cond_865

    if-nez v60, :cond_865

    .line 17469
    iget v4, v13, Lcom/android/server/wm/AppWindowToken;->numDrawnWindows:I

    add-int/lit8 v4, v4, 0x1

    iput v4, v13, Lcom/android/server/wm/AppWindowToken;->numDrawnWindows:I

    .line 17470
    sget-boolean v4, DEBUG_VISIBILITY:Z

    if-nez v4, :cond_82e

    sget-boolean v4, DEBUG_ORIENTATION:Z

    if-eqz v4, :cond_863

    :cond_82e
    const-string v4, "WindowManager"

    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v7, "tokenMayBeDrawn: "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v6

    const-string v7, " freezingScreen="

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    iget-object v7, v13, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    iget-boolean v7, v7, Lcom/android/server/wm/AppWindowAnimator;->freezingScreen:Z

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v6

    const-string v7, " mAppFreezing="

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    move-object/from16 v0, v59

    iget-boolean v7, v0, Lcom/android/server/wm/WindowState;->mAppFreezing:Z

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-static {v4, v6}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 17474
    :cond_863
    const/16 v57, 0x1

    .line 17492
    .end local v43    # "mainWindow":Lcom/android/server/wm/WindowState;
    .end local v60    # "waitForMainWindow":Z
    :cond_865
    :goto_865
    move-object/from16 v0, v59

    iget-object v4, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    if-eqz v4, :cond_8a0

    .line 17493
    move-object/from16 v0, v59

    iget-object v4, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    iget-boolean v4, v4, Lcom/android/server/wm/AppWindowToken;->mMultiWindowStyleChanging:Z

    if-eqz v4, :cond_8f4

    move-object/from16 v0, v59

    iget-boolean v4, v0, Lcom/android/server/wm/WindowState;->mMultiWindowStyleChanging:Z

    if-nez v4, :cond_8f4

    .line 17496
    const/4 v4, 0x1

    move-object/from16 v0, v59

    iput-boolean v4, v0, Lcom/android/server/wm/WindowState;->mMultiWindowStyleChanging:Z

    .line 17497
    move-object/from16 v0, v59

    iget-object v4, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v4, v4, Landroid/view/WindowManager$LayoutParams;->type:I

    const/4 v6, 0x1

    if-ne v4, v6, :cond_8a0

    move-object/from16 v0, v59

    iget-object v4, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v4, v4, Landroid/view/WindowManager$LayoutParams;->multiWindowFlags:I

    and-int/lit8 v4, v4, 0x8

    if-nez v4, :cond_8a0

    move-object/from16 v0, v59

    iget-object v4, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    iget v4, v4, Lcom/android/server/wm/AppWindowToken;->mTargetTransit:I

    const/16 v6, 0x14

    if-eq v4, v6, :cond_8a0

    .line 17500
    const/4 v4, 0x1

    move-object/from16 v0, v63

    iput-boolean v4, v0, Lcom/android/server/wm/WindowStateAnimator;->mSurfaceResized:Z

    .line 17509
    .end local v13    # "atoken":Lcom/android/server/wm/AppWindowToken;
    .end local v14    # "committed":Z
    :cond_8a0
    :goto_8a0
    if-eqz v36, :cond_8b4

    if-eqz v50, :cond_8b4

    move-object/from16 v0, p0

    iget-object v4, v0, mCurrentFocus:Lcom/android/server/wm/WindowState;

    move-object/from16 v0, v59

    if-ne v0, v4, :cond_8b4

    invoke-virtual/range {v59 .. v59}, Lcom/android/server/wm/WindowState;->isDisplayedLw()Z

    move-result v4

    if-eqz v4, :cond_8b4

    .line 17511
    const/16 v29, 0x1

    .line 17514
    :cond_8b4
    move-object/from16 v0, p0

    move-object/from16 v1, v59

    invoke-direct {v0, v1}, updateResizingWindows(Lcom/android/server/wm/WindowState;)V
    :try_end_8bb
    .catch Ljava/lang/RuntimeException; {:try_start_598 .. :try_end_8bb} :catch_359
    .catchall {:try_start_598 .. :try_end_8bb} :catchall_8bd

    goto/16 :goto_218

    .line 17548
    .end local v5    # "displayId":I
    .end local v10    # "N":I
    .end local v12    # "allDrawnTaskDisplayContent":Lcom/android/server/wm/DisplayContent;
    .end local v20    # "dh":I
    .end local v21    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v22    # "displayInfo":Landroid/view/DisplayInfo;
    .end local v25    # "dw":I
    .end local v29    # "focusDisplayed":Z
    .end local v30    # "i":I
    .end local v32    # "innerDh":I
    .end local v33    # "innerDw":I
    .end local v36    # "isDefaultDisplay":Z
    .end local v41    # "mWallpaperTarget":Lcom/android/server/wm/WindowState;
    .end local v47    # "obscuredChanged":Z
    .end local v48    # "repeats":I
    .end local v50    # "someoneLosingFocus":Z
    .end local v51    # "stack":Lcom/android/server/wm/TaskStack;
    .end local v57    # "updateAllDrawn":Z
    .end local v59    # "w":Lcom/android/server/wm/WindowState;
    .end local v63    # "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    .end local v64    # "windows":Lcom/android/server/wm/WindowList;
    :catchall_8bd
    move-exception v4

    invoke-static {}, Landroid/view/SurfaceControl;->closeTransaction()V

    throw v4

    .line 17261
    .restart local v5    # "displayId":I
    .restart local v10    # "N":I
    .restart local v12    # "allDrawnTaskDisplayContent":Lcom/android/server/wm/DisplayContent;
    .restart local v20    # "dh":I
    .restart local v21    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .restart local v22    # "displayInfo":Landroid/view/DisplayInfo;
    .restart local v25    # "dw":I
    .restart local v29    # "focusDisplayed":Z
    .restart local v30    # "i":I
    .restart local v32    # "innerDh":I
    .restart local v33    # "innerDw":I
    .restart local v36    # "isDefaultDisplay":Z
    .restart local v48    # "repeats":I
    .restart local v50    # "someoneLosingFocus":Z
    .restart local v51    # "stack":Lcom/android/server/wm/TaskStack;
    .restart local v57    # "updateAllDrawn":Z
    .restart local v59    # "w":Lcom/android/server/wm/WindowState;
    .restart local v64    # "windows":Lcom/android/server/wm/WindowList;
    :cond_8c2
    const/16 v47, 0x0

    goto/16 :goto_44c

    .line 17280
    .restart local v38    # "isVisible":Z
    .restart local v47    # "obscuredChanged":Z
    :cond_8c6
    const/16 v34, 0x0

    goto/16 :goto_4b4

    .line 17287
    .end local v38    # "isVisible":Z
    :cond_8ca
    :try_start_8ca
    invoke-virtual/range {v51 .. v51}, Lcom/android/server/wm/TaskStack;->hasBlackBackground()Z

    move-result v4

    if-eqz v4, :cond_4d0

    .line 17288
    invoke-virtual/range {v51 .. v51}, Lcom/android/server/wm/TaskStack;->detachBlackBackground()Z

    goto/16 :goto_4d0

    .line 17329
    .restart local v37    # "isMultiWindowAnimating":Z
    .restart local v39    # "left":I
    .restart local v41    # "mWallpaperTarget":Lcom/android/server/wm/WindowState;
    .restart local v45    # "mwAnim":Lcom/android/server/wm/MultiWindowTransition;
    .restart local v49    # "shouldSkipMoving":Z
    .restart local v56    # "top":I
    .restart local v63    # "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    :cond_8d5
    const/16 v35, 0x0

    goto/16 :goto_52f

    .line 17333
    .restart local v35    # "isCascade":Z
    :cond_8d9
    const/16 v49, 0x0

    goto/16 :goto_544

    .line 17445
    .end local v35    # "isCascade":Z
    .end local v37    # "isMultiWindowAnimating":Z
    .end local v39    # "left":I
    .end local v45    # "mwAnim":Lcom/android/server/wm/MultiWindowTransition;
    .end local v49    # "shouldSkipMoving":Z
    .end local v56    # "top":I
    .restart local v13    # "atoken":Lcom/android/server/wm/AppWindowToken;
    .restart local v14    # "committed":Z
    .restart local v43    # "mainWindow":Lcom/android/server/wm/WindowState;
    .restart local v60    # "waitForMainWindow":Z
    :cond_8dd
    const/16 v60, 0x0

    goto/16 :goto_7cb

    .line 17455
    :cond_8e1
    const/16 v60, 0x0

    goto/16 :goto_7f6

    .line 17464
    :cond_8e5
    const/16 v60, 0x0

    goto/16 :goto_818

    .line 17485
    .end local v43    # "mainWindow":Lcom/android/server/wm/WindowState;
    .end local v60    # "waitForMainWindow":Z
    :cond_8e9
    invoke-virtual/range {v59 .. v59}, Lcom/android/server/wm/WindowState;->isDrawnLw()Z

    move-result v4

    if-eqz v4, :cond_865

    .line 17486
    const/4 v4, 0x1

    iput-boolean v4, v13, Lcom/android/server/wm/AppWindowToken;->startingDisplayed:Z

    goto/16 :goto_865

    .line 17502
    :cond_8f4
    move-object/from16 v0, v59

    iget-object v4, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    iget-boolean v4, v4, Lcom/android/server/wm/AppWindowToken;->mMultiWindowStyleChanging:Z

    if-nez v4, :cond_8a0

    move-object/from16 v0, v59

    iget-boolean v4, v0, Lcom/android/server/wm/WindowState;->mMultiWindowStyleChanging:Z

    if-eqz v4, :cond_8a0

    .line 17503
    const/4 v4, 0x0

    move-object/from16 v0, v59

    iput-boolean v4, v0, Lcom/android/server/wm/WindowState;->mMultiWindowStyleChanging:Z

    goto :goto_8a0

    .line 17517
    .end local v13    # "atoken":Lcom/android/server/wm/AppWindowToken;
    .end local v14    # "committed":Z
    .end local v41    # "mWallpaperTarget":Lcom/android/server/wm/WindowState;
    .end local v47    # "obscuredChanged":Z
    .end local v51    # "stack":Lcom/android/server/wm/TaskStack;
    .end local v59    # "w":Lcom/android/server/wm/WindowState;
    .end local v63    # "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    :cond_908
    move-object/from16 v0, p0

    iget-object v4, v0, mDisplayManagerInternal:Landroid/hardware/display/DisplayManagerInternal;

    move-object/from16 v0, p0

    iget-object v6, v0, mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    iget-boolean v6, v6, Lcom/android/server/wm/WindowManagerService$LayoutFields;->mDisplayHasContent:Z

    move-object/from16 v0, p0

    iget-object v7, v0, mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    iget v7, v7, Lcom/android/server/wm/WindowManagerService$LayoutFields;->mPreferredRefreshRate:F

    move-object/from16 v0, p0

    iget-object v8, v0, mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    iget v8, v8, Lcom/android/server/wm/WindowManagerService$LayoutFields;->mPreferredModeId:I

    const/4 v9, 0x1

    invoke-virtual/range {v4 .. v9}, Landroid/hardware/display/DisplayManagerInternal;->setDisplayProperties(IZFIZ)V

    .line 17522
    invoke-virtual/range {v21 .. v21}, Lcom/android/server/wm/DisplayContent;->stopDimmingIfNeeded()V

    .line 17524
    if-eqz v57, :cond_92e

    .line 17525
    move-object/from16 v0, p0

    move-object/from16 v1, v21

    invoke-direct {v0, v1}, updateAllDrawnLocked(Lcom/android/server/wm/DisplayContent;)V

    .line 17099
    :cond_92e
    add-int/lit8 v24, v24, 0x1

    goto/16 :goto_14e

    .line 17537
    .end local v5    # "displayId":I
    .end local v10    # "N":I
    .end local v12    # "allDrawnTaskDisplayContent":Lcom/android/server/wm/DisplayContent;
    .end local v20    # "dh":I
    .end local v21    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v22    # "displayInfo":Landroid/view/DisplayInfo;
    .end local v25    # "dw":I
    .end local v30    # "i":I
    .end local v32    # "innerDh":I
    .end local v33    # "innerDw":I
    .end local v36    # "isDefaultDisplay":Z
    .end local v48    # "repeats":I
    .end local v50    # "someoneLosingFocus":Z
    .end local v57    # "updateAllDrawn":Z
    .end local v64    # "windows":Lcom/android/server/wm/WindowList;
    :cond_932
    if-eqz v29, :cond_93c

    .line 17538
    move-object/from16 v0, p0

    iget-object v4, v0, mH:Lcom/android/server/wm/WindowManagerService$H;

    const/4 v6, 0x3

    invoke-virtual {v4, v6}, Lcom/android/server/wm/WindowManagerService$H;->sendEmptyMessage(I)Z

    .line 17543
    :cond_93c
    move-object/from16 v0, p0

    iget-object v4, v0, mDisplayManagerInternal:Landroid/hardware/display/DisplayManagerInternal;

    invoke-virtual {v4}, Landroid/hardware/display/DisplayManagerInternal;->performTraversalInTransactionFromWindowManager()V
    :try_end_943
    .catch Ljava/lang/RuntimeException; {:try_start_8ca .. :try_end_943} :catch_359
    .catchall {:try_start_8ca .. :try_end_943} :catchall_8bd

    .line 17548
    invoke-static {}, Landroid/view/SurfaceControl;->closeTransaction()V

    goto/16 :goto_366

    .line 17592
    .end local v29    # "focusDisplayed":Z
    :cond_948
    invoke-virtual/range {v16 .. v16}, Lcom/android/server/wm/DisplayContent;->getWindowList()Lcom/android/server/wm/WindowList;

    move-result-object v19

    .line 17597
    .local v19, "defaultWindows":Lcom/android/server/wm/WindowList;
    move-object/from16 v0, p0

    iget-object v4, v0, mAppTransition:Lcom/android/server/wm/AppTransition;

    invoke-virtual {v4}, Lcom/android/server/wm/AppTransition;->isReady()Z

    move-result v4

    if-eqz v4, :cond_972

    .line 17598
    move-object/from16 v0, v16

    iget v4, v0, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    move-object/from16 v0, p0

    move-object/from16 v1, v19

    invoke-virtual {v0, v1}, handleAppTransitionReadyLocked(Lcom/android/server/wm/WindowList;)I

    move-result v6

    or-int/2addr v4, v6

    move-object/from16 v0, v16

    iput v4, v0, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    .line 17599
    const-string v4, "after handleAppTransitionReadyLocked"

    move-object/from16 v0, v16

    iget v6, v0, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    move-object/from16 v0, p0

    invoke-virtual {v0, v4, v6}, debugLayoutRepeats(Ljava/lang/String;I)V

    .line 17603
    :cond_972
    move-object/from16 v0, p0

    iget-object v4, v0, mAnimator:Lcom/android/server/wm/WindowAnimator;

    iget-boolean v4, v4, Lcom/android/server/wm/WindowAnimator;->mAnimating:Z

    if-nez v4, :cond_99c

    move-object/from16 v0, p0

    iget-object v4, v0, mAppTransition:Lcom/android/server/wm/AppTransition;

    invoke-virtual {v4}, Lcom/android/server/wm/AppTransition;->isRunning()Z

    move-result v4

    if-eqz v4, :cond_99c

    .line 17610
    move-object/from16 v0, v16

    iget v4, v0, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    invoke-direct/range {p0 .. p0}, handleAnimatingStoppedAndTransitionLocked()I

    move-result v6

    or-int/2addr v4, v6

    move-object/from16 v0, v16

    iput v4, v0, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    .line 17611
    const-string v4, "after handleAnimStopAndXitionLock"

    move-object/from16 v0, v16

    iget v6, v0, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    move-object/from16 v0, p0

    invoke-virtual {v0, v4, v6}, debugLayoutRepeats(Ljava/lang/String;I)V

    .line 17619
    :cond_99c
    move-object/from16 v0, p0

    iget-object v4, v0, mAnimator:Lcom/android/server/wm/WindowAnimator;

    const/4 v6, 0x0

    invoke-virtual {v4, v6}, Lcom/android/server/wm/WindowAnimator;->getMultiWindowTransitionLocked(I)Lcom/android/server/wm/MultiWindowTransition;

    move-result-object v44

    .line 17620
    .local v44, "multiwindowTransition":Lcom/android/server/wm/MultiWindowTransition;
    if-eqz v44, :cond_9c5

    invoke-virtual/range {v44 .. v44}, Lcom/android/server/wm/MultiWindowTransition;->isTransitReady()Z

    move-result v4

    if-eqz v4, :cond_9c5

    .line 17621
    move-object/from16 v0, v16

    iget v4, v0, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    invoke-virtual/range {v44 .. v44}, Lcom/android/server/wm/MultiWindowTransition;->handleMultiWindowTransitionReady()I

    move-result v6

    or-int/2addr v4, v6

    move-object/from16 v0, v16

    iput v4, v0, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    .line 17622
    const-string v4, "after handleMultiWindowTransitionReady"

    move-object/from16 v0, v16

    iget v6, v0, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    move-object/from16 v0, p0

    invoke-virtual {v0, v4, v6}, debugLayoutRepeats(Ljava/lang/String;I)V

    .line 17628
    :cond_9c5
    move-object/from16 v0, p0

    iget-object v4, v0, mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    iget-boolean v4, v4, Lcom/android/server/wm/WindowManagerService$LayoutFields;->mWallpaperForceHidingChanged:Z

    if-eqz v4, :cond_9f2

    move-object/from16 v0, v16

    iget v4, v0, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    if-nez v4, :cond_9f2

    move-object/from16 v0, p0

    iget-object v4, v0, mAppTransition:Lcom/android/server/wm/AppTransition;

    invoke-virtual {v4}, Lcom/android/server/wm/AppTransition;->isReady()Z

    move-result v4

    if-nez v4, :cond_9f2

    .line 17636
    move-object/from16 v0, v16

    iget v4, v0, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    or-int/lit8 v4, v4, 0x1

    move-object/from16 v0, v16

    iput v4, v0, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    .line 17637
    const-string v4, "after animateAwayWallpaperLocked"

    move-object/from16 v0, v16

    iget v6, v0, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    move-object/from16 v0, p0

    invoke-virtual {v0, v4, v6}, debugLayoutRepeats(Ljava/lang/String;I)V

    .line 17643
    :cond_9f2
    move-object/from16 v0, p0

    iget-object v4, v0, mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    const/4 v6, 0x0

    iput-boolean v6, v4, Lcom/android/server/wm/WindowManagerService$LayoutFields;->mWallpaperForceHidingChanged:Z

    .line 17645
    move-object/from16 v0, p0

    iget-object v4, v0, mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    iget-boolean v4, v4, Lcom/android/server/wm/WindowManagerService$LayoutFields;->mWallpaperMayChange:Z

    if-eqz v4, :cond_a21

    .line 17646
    sget-boolean v4, DEBUG_WALLPAPER_LIGHT:Z

    if-eqz v4, :cond_a0c

    const-string v4, "WindowManager"

    const-string v6, "Wallpaper may change!  Adjusting"

    invoke-static {v4, v6}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 17661
    :cond_a0c
    move-object/from16 v0, v16

    iget v4, v0, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    or-int/lit8 v4, v4, 0x4

    move-object/from16 v0, v16

    iput v4, v0, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    .line 17663
    const-string v4, "WallpaperMayChange"

    move-object/from16 v0, v16

    iget v6, v0, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    move-object/from16 v0, p0

    invoke-virtual {v0, v4, v6}, debugLayoutRepeats(Ljava/lang/String;I)V

    .line 17668
    :cond_a21
    move-object/from16 v0, p0

    iget-boolean v4, v0, mFocusMayChange:Z

    if-eqz v4, :cond_a42

    .line 17669
    const/4 v4, 0x0

    move-object/from16 v0, p0

    iput-boolean v4, v0, mFocusMayChange:Z

    .line 17670
    const/4 v4, 0x2

    const/4 v6, 0x0

    move-object/from16 v0, p0

    invoke-direct {v0, v4, v6}, updateFocusedWindowLocked(IZ)Z

    move-result v4

    if-eqz v4, :cond_a42

    .line 17672
    const/16 v58, 0x1

    .line 17673
    move-object/from16 v0, v16

    iget v4, v0, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    or-int/lit8 v4, v4, 0x8

    move-object/from16 v0, v16

    iput v4, v0, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    .line 17677
    :cond_a42
    invoke-direct/range {p0 .. p0}, needsLayout()Z

    move-result v4

    if-eqz v4, :cond_a5e

    .line 17678
    move-object/from16 v0, v16

    iget v4, v0, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    or-int/lit8 v4, v4, 0x1

    move-object/from16 v0, v16

    iput v4, v0, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    .line 17679
    const-string/jumbo v4, "mLayoutNeeded"

    move-object/from16 v0, v16

    iget v6, v0, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    move-object/from16 v0, p0

    invoke-virtual {v0, v4, v6}, debugLayoutRepeats(Ljava/lang/String;I)V

    .line 17683
    :cond_a5e
    move-object/from16 v0, p0

    iget-object v4, v0, mResizingWindows:Ljava/util/ArrayList;

    invoke-virtual {v4}, Ljava/util/ArrayList;->size()I

    move-result v4

    add-int/lit8 v30, v4, -0x1

    .restart local v30    # "i":I
    :goto_a68
    if-ltz v30, :cond_af6

    .line 17684
    move-object/from16 v0, p0

    iget-object v4, v0, mResizingWindows:Ljava/util/ArrayList;

    move/from16 v0, v30

    invoke-virtual {v4, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v62

    check-cast v62, Lcom/android/server/wm/WindowState;

    .line 17685
    .local v62, "win":Lcom/android/server/wm/WindowState;
    move-object/from16 v0, v62

    iget-boolean v4, v0, Lcom/android/server/wm/WindowState;->mAppFreezing:Z

    if-eqz v4, :cond_a7f

    .line 17683
    :goto_a7c
    add-int/lit8 v30, v30, -0x1

    goto :goto_a68

    .line 17700
    :cond_a7f
    move-object/from16 v0, v62

    iget-object v4, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v4, v4, Landroid/view/WindowManager$LayoutParams;->samsungFlags:I

    and-int/lit16 v4, v4, 0x200

    if-eqz v4, :cond_ae9

    move-object/from16 v0, v62

    iget-object v4, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v4, v4, Landroid/view/WindowManager$LayoutParams;->softInputMode:I

    and-int/lit16 v4, v4, 0xf0

    const/16 v6, 0x10

    if-ne v4, v6, :cond_ae9

    move-object/from16 v0, p0

    iget-object v4, v0, mInputMethodWindow:Lcom/android/server/wm/WindowState;

    if-eqz v4, :cond_ae9

    move-object/from16 v0, p0

    iget-object v4, v0, mInputMethodWindow:Lcom/android/server/wm/WindowState;

    iget-object v4, v4, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v4, v4, Landroid/view/WindowManager$LayoutParams;->height:I

    const/4 v6, -0x2

    if-ne v4, v6, :cond_ae9

    move-object/from16 v0, p0

    iget-object v4, v0, mInputMethodWindow:Lcom/android/server/wm/WindowState;

    invoke-virtual {v4}, Lcom/android/server/wm/WindowState;->isExiting()Z

    move-result v4

    if-nez v4, :cond_ae9

    .line 17705
    move-object/from16 v0, v62

    iget-boolean v4, v0, Lcom/android/server/wm/WindowState;->mDelayedResize:Z

    if-eqz v4, :cond_abe

    .line 17706
    const-string v4, "WindowManager"

    const-string v6, "Skip resize window in delayed resizing"

    invoke-static {v4, v6}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_a7c

    .line 17708
    :cond_abe
    sget-boolean v4, DEBUG_RESIZE:Z

    if-eqz v4, :cond_adc

    const-string v4, "WindowManager"

    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "Set delayed resize for "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    move-object/from16 v0, v62

    invoke-virtual {v6, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-static {v4, v6}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 17709
    :cond_adc
    const/4 v4, 0x1

    move-object/from16 v0, v62

    iput-boolean v4, v0, Lcom/android/server/wm/WindowState;->mDelayedResize:Z

    .line 17710
    move-object/from16 v0, p0

    move-object/from16 v1, v62

    invoke-virtual {v0, v1}, postDelayedResize(Lcom/android/server/wm/WindowState;)V

    goto :goto_a7c

    .line 17716
    :cond_ae9
    invoke-virtual/range {v62 .. v62}, Lcom/android/server/wm/WindowState;->reportResized()V

    .line 17717
    move-object/from16 v0, p0

    iget-object v4, v0, mResizingWindows:Ljava/util/ArrayList;

    move/from16 v0, v30

    invoke-virtual {v4, v0}, Ljava/util/ArrayList;->remove(I)Ljava/lang/Object;

    goto :goto_a7c

    .line 17720
    .end local v62    # "win":Lcom/android/server/wm/WindowState;
    :cond_af6
    sget-boolean v4, DEBUG_ORIENTATION:Z

    if-eqz v4, :cond_b1e

    move-object/from16 v0, p0

    iget-boolean v4, v0, mDisplayFrozen:Z

    if-eqz v4, :cond_b1e

    const-string v4, "WindowManager"

    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "With display frozen, orientationChangeComplete="

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    move-object/from16 v0, p0

    iget-object v7, v0, mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    iget-boolean v7, v7, Lcom/android/server/wm/WindowManagerService$LayoutFields;->mOrientationChangeComplete:Z

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-static {v4, v6}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 17723
    :cond_b1e
    move-object/from16 v0, p0

    iget-object v4, v0, mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    iget-boolean v4, v4, Lcom/android/server/wm/WindowManagerService$LayoutFields;->mOrientationChangeComplete:Z

    if-eqz v4, :cond_b4d

    .line 17724
    move-object/from16 v0, p0

    iget v4, v0, mWindowsFreezingScreen:I

    if-eqz v4, :cond_b4a

    .line 17725
    const/4 v4, 0x0

    move-object/from16 v0, p0

    iput v4, v0, mWindowsFreezingScreen:I

    .line 17726
    move-object/from16 v0, p0

    iget-object v4, v0, mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    iget-object v4, v4, Lcom/android/server/wm/WindowManagerService$LayoutFields;->mLastWindowFreezeSource:Ljava/lang/Object;

    move-object/from16 v0, p0

    iput-object v4, v0, mLastFinishedFreezeSource:Ljava/lang/Object;

    .line 17730
    move-object/from16 v0, p0

    iget-boolean v4, v0, mHasAppWindowForWaitingForOrientation:Z

    if-nez v4, :cond_b4a

    .line 17731
    move-object/from16 v0, p0

    iget-object v4, v0, mH:Lcom/android/server/wm/WindowManagerService$H;

    const/16 v6, 0xb

    invoke-virtual {v4, v6}, Lcom/android/server/wm/WindowManagerService$H;->removeMessages(I)V

    .line 17735
    :cond_b4a
    invoke-direct/range {p0 .. p0}, stopFreezingDisplayLocked()V

    .line 17747
    :cond_b4d
    const/16 v61, 0x0

    .line 17748
    .local v61, "wallpaperDestroyed":Z
    move-object/from16 v0, p0

    iget-object v4, v0, mDestroySurface:Ljava/util/ArrayList;

    invoke-virtual {v4}, Ljava/util/ArrayList;->size()I

    move-result v30

    .line 17749
    if-lez v30, :cond_ba5

    .line 17751
    :cond_b59
    add-int/lit8 v30, v30, -0x1

    .line 17752
    move-object/from16 v0, p0

    iget-object v4, v0, mDestroySurface:Ljava/util/ArrayList;

    move/from16 v0, v30

    invoke-virtual {v4, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v62

    check-cast v62, Lcom/android/server/wm/WindowState;

    .line 17753
    .restart local v62    # "win":Lcom/android/server/wm/WindowState;
    const/4 v4, 0x0

    move-object/from16 v0, v62

    iput-boolean v4, v0, Lcom/android/server/wm/WindowState;->mDestroying:Z

    .line 17754
    move-object/from16 v0, p0

    iget-object v4, v0, mInputMethodWindow:Lcom/android/server/wm/WindowState;

    move-object/from16 v0, v62

    if-ne v4, v0, :cond_b87

    .line 17755
    const/4 v4, 0x0

    move-object/from16 v0, p0

    iput-object v4, v0, mInputMethodWindow:Lcom/android/server/wm/WindowState;

    .line 17757
    sget-boolean v4, DUALSCREEN_DEBUG_INPUT_METHOD:Z

    if-eqz v4, :cond_b87

    .line 17758
    move-object/from16 v0, p0

    iget-object v4, v0, mDualScreenInputMethodManager:Lcom/android/server/wm/DualScreenInputMethodManager;

    const-string/jumbo v6, "hide SIP"

    invoke-virtual {v4, v6}, Lcom/android/server/wm/DualScreenInputMethodManager;->printDebugInfo(Ljava/lang/String;)V

    .line 17769
    :cond_b87
    move-object/from16 v0, p0

    iget-object v0, v0, mWallpaperTarget:Lcom/android/server/wm/WindowState;

    move-object/from16 v41, v0

    .line 17773
    .restart local v41    # "mWallpaperTarget":Lcom/android/server/wm/WindowState;
    move-object/from16 v0, v62

    move-object/from16 v1, v41

    if-ne v0, v1, :cond_b95

    .line 17774
    const/16 v61, 0x1

    .line 17776
    :cond_b95
    move-object/from16 v0, v62

    iget-object v4, v0, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    invoke-virtual {v4}, Lcom/android/server/wm/WindowStateAnimator;->destroySurfaceLocked()V

    .line 17777
    if-gtz v30, :cond_b59

    .line 17778
    move-object/from16 v0, p0

    iget-object v4, v0, mDestroySurface:Ljava/util/ArrayList;

    invoke-virtual {v4}, Ljava/util/ArrayList;->clear()V

    .line 17782
    .end local v41    # "mWallpaperTarget":Lcom/android/server/wm/WindowState;
    .end local v62    # "win":Lcom/android/server/wm/WindowState;
    :cond_ba5
    const/16 v24, 0x0

    :goto_ba7
    move/from16 v0, v24

    move/from16 v1, v46

    if-ge v0, v1, :cond_bf9

    .line 17783
    move-object/from16 v0, p0

    iget-object v4, v0, mDisplayContents:Landroid/util/SparseArray;

    move/from16 v0, v24

    invoke-virtual {v4, v0}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v21

    check-cast v21, Lcom/android/server/wm/DisplayContent;

    .line 17784
    .restart local v21    # "displayContent":Lcom/android/server/wm/DisplayContent;
    move-object/from16 v0, v21

    iget-object v0, v0, Lcom/android/server/wm/DisplayContent;->mExitingTokens:Ljava/util/ArrayList;

    move-object/from16 v28, v0

    .line 17785
    .local v28, "exitingTokens":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/WindowToken;>;"
    invoke-virtual/range {v28 .. v28}, Ljava/util/ArrayList;->size()I

    move-result v4

    add-int/lit8 v30, v4, -0x1

    :goto_bc5
    if-ltz v30, :cond_bf6

    .line 17786
    move-object/from16 v0, v28

    move/from16 v1, v30

    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v54

    check-cast v54, Lcom/android/server/wm/WindowToken;

    .line 17787
    .local v54, "token":Lcom/android/server/wm/WindowToken;
    move-object/from16 v0, v54

    iget-boolean v4, v0, Lcom/android/server/wm/WindowToken;->hasVisible:Z

    if-nez v4, :cond_bf3

    .line 17788
    move-object/from16 v0, v28

    move/from16 v1, v30

    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->remove(I)Ljava/lang/Object;

    .line 17789
    move-object/from16 v0, v54

    iget v4, v0, Lcom/android/server/wm/WindowToken;->windowType:I

    const/16 v6, 0x7dd

    if-ne v4, v6, :cond_bf3

    .line 17796
    move-object/from16 v0, p0

    iget-object v0, v0, mWallpaperTokens:Ljava/util/ArrayList;

    move-object/from16 v42, v0

    .line 17799
    .local v42, "mWallpaperTokens":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/WindowToken;>;"
    move-object/from16 v0, v42

    move-object/from16 v1, v54

    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    .line 17785
    .end local v42    # "mWallpaperTokens":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/WindowToken;>;"
    :cond_bf3
    add-int/lit8 v30, v30, -0x1

    goto :goto_bc5

    .line 17782
    .end local v54    # "token":Lcom/android/server/wm/WindowToken;
    :cond_bf6
    add-int/lit8 v24, v24, 0x1

    goto :goto_ba7

    .line 17806
    .end local v21    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v28    # "exitingTokens":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/WindowToken;>;"
    :cond_bf9
    move-object/from16 v0, p0

    iget-object v4, v0, mStackIdToStack:Landroid/util/SparseArray;

    invoke-virtual {v4}, Landroid/util/SparseArray;->size()I

    move-result v4

    add-int/lit8 v52, v4, -0x1

    :goto_c03
    if-ltz v52, :cond_c88

    .line 17808
    move-object/from16 v0, p0

    iget-object v4, v0, mStackIdToStack:Landroid/util/SparseArray;

    move/from16 v0, v52

    invoke-virtual {v4, v0}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/server/wm/TaskStack;

    iget-object v0, v4, Lcom/android/server/wm/TaskStack;->mExitingAppTokens:Lcom/android/server/wm/AppTokenList;

    move-object/from16 v27, v0

    .line 17810
    .restart local v27    # "exitingAppTokens":Lcom/android/server/wm/AppTokenList;
    invoke-virtual/range {v27 .. v27}, Lcom/android/server/wm/AppTokenList;->size()I

    move-result v4

    add-int/lit8 v30, v4, -0x1

    :goto_c1b
    if-ltz v30, :cond_c84

    .line 17811
    move-object/from16 v0, v27

    move/from16 v1, v30

    invoke-virtual {v0, v1}, Lcom/android/server/wm/AppTokenList;->get(I)Ljava/lang/Object;

    move-result-object v54

    check-cast v54, Lcom/android/server/wm/AppWindowToken;

    .line 17817
    .local v54, "token":Lcom/android/server/wm/AppWindowToken;
    move-object/from16 v0, p0

    iget-object v0, v0, mClosingApps:Landroid/util/ArraySet;

    move-object/from16 v40, v0

    .line 17820
    .local v40, "mClosingApps":Landroid/util/ArraySet;, "Landroid/util/ArraySet<Lcom/android/server/wm/AppWindowToken;>;"
    move-object/from16 v0, v54

    iget-boolean v4, v0, Lcom/android/server/wm/AppWindowToken;->hasVisible:Z

    if-nez v4, :cond_c81

    move-object/from16 v0, v40

    move-object/from16 v1, v54

    invoke-virtual {v0, v1}, Landroid/util/ArraySet;->contains(Ljava/lang/Object;)Z

    move-result v4

    if-nez v4, :cond_c81

    move-object/from16 v0, v54

    iget-boolean v4, v0, Lcom/android/server/wm/AppWindowToken;->mIsExiting:Z

    if-eqz v4, :cond_c4d

    move-object/from16 v0, v54

    iget-object v4, v0, Lcom/android/server/wm/AppWindowToken;->allAppWindows:Lcom/android/server/wm/WindowList;

    invoke-virtual {v4}, Lcom/android/server/wm/WindowList;->isEmpty()Z

    move-result v4

    if-eqz v4, :cond_c81

    .line 17825
    :cond_c4d
    move-object/from16 v0, v54

    iget-object v4, v0, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    invoke-virtual {v4}, Lcom/android/server/wm/AppWindowAnimator;->clearAnimation()V

    .line 17826
    move-object/from16 v0, v54

    iget-object v4, v0, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    const/4 v6, 0x0

    iput-boolean v6, v4, Lcom/android/server/wm/AppWindowAnimator;->animating:Z

    .line 17827
    sget-boolean v4, DEBUG_ADD_REMOVE:Z

    if-nez v4, :cond_c63

    sget-boolean v4, DEBUG_TOKEN_MOVEMENT:Z

    if-eqz v4, :cond_c7e

    :cond_c63
    const-string v4, "WindowManager"

    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v7, "performLayout: App token exiting now removed"

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    move-object/from16 v0, v54

    invoke-virtual {v6, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-static {v4, v6}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 17829
    :cond_c7e
    invoke-virtual/range {v54 .. v54}, Lcom/android/server/wm/AppWindowToken;->removeAppFromTaskLocked()V

    .line 17810
    :cond_c81
    add-int/lit8 v30, v30, -0x1

    goto :goto_c1b

    .line 17806
    .end local v40    # "mClosingApps":Landroid/util/ArraySet;, "Landroid/util/ArraySet<Lcom/android/server/wm/AppWindowToken;>;"
    .end local v54    # "token":Lcom/android/server/wm/AppWindowToken;
    :cond_c84
    add-int/lit8 v52, v52, -0x1

    goto/16 :goto_c03

    .line 17834
    .end local v27    # "exitingAppTokens":Lcom/android/server/wm/AppTokenList;
    :cond_c88
    if-eqz v61, :cond_c99

    .line 17845
    move-object/from16 v0, v16

    iget v4, v0, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    or-int/lit8 v4, v4, 0x4

    move-object/from16 v0, v16

    iput v4, v0, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    .line 17847
    const/4 v4, 0x1

    move-object/from16 v0, v16

    iput-boolean v4, v0, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    .line 17851
    :cond_c99
    const/16 v24, 0x0

    :goto_c9b
    move/from16 v0, v24

    move/from16 v1, v46

    if-ge v0, v1, :cond_cbb

    .line 17852
    move-object/from16 v0, p0

    iget-object v4, v0, mDisplayContents:Landroid/util/SparseArray;

    move/from16 v0, v24

    invoke-virtual {v4, v0}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v21

    check-cast v21, Lcom/android/server/wm/DisplayContent;

    .line 17853
    .restart local v21    # "displayContent":Lcom/android/server/wm/DisplayContent;
    move-object/from16 v0, v21

    iget v4, v0, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    if-eqz v4, :cond_cb8

    .line 17854
    const/4 v4, 0x1

    move-object/from16 v0, v21

    iput-boolean v4, v0, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    .line 17851
    :cond_cb8
    add-int/lit8 v24, v24, 0x1

    goto :goto_c9b

    .line 17859
    .end local v21    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :cond_cbb
    move-object/from16 v0, p0

    iget-object v4, v0, mInputMonitor:Lcom/android/server/wm/InputMonitor;

    const/4 v6, 0x1

    invoke-virtual {v4, v6}, Lcom/android/server/wm/InputMonitor;->updateInputWindowsLw(Z)V

    .line 17861
    move-object/from16 v0, p0

    iget-object v4, v0, mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    # getter for: Lcom/android/server/wm/WindowManagerService$LayoutFields;->mHoldScreen:Lcom/android/server/wm/Session;
    invoke-static {v4}, Lcom/android/server/wm/WindowManagerService$LayoutFields;->access$2400(Lcom/android/server/wm/WindowManagerService$LayoutFields;)Lcom/android/server/wm/Session;

    move-result-object v4

    move-object/from16 v0, p0

    invoke-virtual {v0, v4}, setHoldScreenLocked(Lcom/android/server/wm/Session;)V

    .line 17863
    move-object/from16 v0, p0

    iget-boolean v4, v0, mDisplayFrozen:Z

    if-nez v4, :cond_d49

    .line 17864
    move-object/from16 v0, p0

    iget-object v4, v0, mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    # getter for: Lcom/android/server/wm/WindowManagerService$LayoutFields;->mScreenBrightness:F
    invoke-static {v4}, Lcom/android/server/wm/WindowManagerService$LayoutFields;->access$2600(Lcom/android/server/wm/WindowManagerService$LayoutFields;)F

    move-result v4

    const/4 v6, 0x0

    cmpg-float v4, v4, v6

    if-ltz v4, :cond_cf1

    move-object/from16 v0, p0

    iget-object v4, v0, mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    # getter for: Lcom/android/server/wm/WindowManagerService$LayoutFields;->mScreenBrightness:F
    invoke-static {v4}, Lcom/android/server/wm/WindowManagerService$LayoutFields;->access$2600(Lcom/android/server/wm/WindowManagerService$LayoutFields;)F

    move-result v4

    const/high16 v6, 0x3f800000    # 1.0f

    cmpl-float v4, v4, v6

    if-lez v4, :cond_e47

    .line 17865
    :cond_cf1
    move-object/from16 v0, p0

    iget-object v4, v0, mPowerManagerInternal:Landroid/os/PowerManagerInternal;

    const/4 v6, -0x1

    invoke-virtual {v4, v6}, Landroid/os/PowerManagerInternal;->setScreenBrightnessOverrideFromWindowManager(I)V

    .line 17870
    :goto_cf9
    move-object/from16 v0, p0

    iget-object v4, v0, mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    # getter for: Lcom/android/server/wm/WindowManagerService$LayoutFields;->mButtonBrightness:F
    invoke-static {v4}, Lcom/android/server/wm/WindowManagerService$LayoutFields;->access$2700(Lcom/android/server/wm/WindowManagerService$LayoutFields;)F

    move-result v4

    const/4 v6, 0x0

    cmpg-float v4, v4, v6

    if-ltz v4, :cond_d14

    move-object/from16 v0, p0

    iget-object v4, v0, mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    # getter for: Lcom/android/server/wm/WindowManagerService$LayoutFields;->mButtonBrightness:F
    invoke-static {v4}, Lcom/android/server/wm/WindowManagerService$LayoutFields;->access$2700(Lcom/android/server/wm/WindowManagerService$LayoutFields;)F

    move-result v4

    const/high16 v6, 0x3f800000    # 1.0f

    cmpl-float v4, v4, v6

    if-lez v4, :cond_e5e

    .line 17871
    :cond_d14
    move-object/from16 v0, p0

    iget-object v4, v0, mPowerManagerInternal:Landroid/os/PowerManagerInternal;

    const/4 v6, -0x1

    invoke-virtual {v4, v6}, Landroid/os/PowerManagerInternal;->setButtonBrightnessOverrideFromWindowManager(I)V

    .line 17876
    :goto_d1c
    move-object/from16 v0, p0

    iget-object v4, v0, mPowerManagerInternal:Landroid/os/PowerManagerInternal;

    move-object/from16 v0, p0

    iget-object v6, v0, mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    # getter for: Lcom/android/server/wm/WindowManagerService$LayoutFields;->mUserActivityTimeout:J
    invoke-static {v6}, Lcom/android/server/wm/WindowManagerService$LayoutFields;->access$2800(Lcom/android/server/wm/WindowManagerService$LayoutFields;)J

    move-result-wide v6

    invoke-virtual {v4, v6, v7}, Landroid/os/PowerManagerInternal;->setUserActivityTimeoutOverrideFromWindowManager(J)V

    .line 17879
    move-object/from16 v0, p0

    iget-object v4, v0, mPowerManagerInternal:Landroid/os/PowerManagerInternal;

    move-object/from16 v0, p0

    iget-object v6, v0, mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    # getter for: Lcom/android/server/wm/WindowManagerService$LayoutFields;->mScreenDimDuration:J
    invoke-static {v6}, Lcom/android/server/wm/WindowManagerService$LayoutFields;->access$2900(Lcom/android/server/wm/WindowManagerService$LayoutFields;)J

    move-result-wide v6

    invoke-virtual {v4, v6, v7}, Landroid/os/PowerManagerInternal;->setScreenDimDurationOverrideFromWindowManager(J)V

    .line 17881
    move-object/from16 v0, p0

    iget-object v4, v0, mPowerManagerInternal:Landroid/os/PowerManagerInternal;

    move-object/from16 v0, p0

    iget-object v6, v0, mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    # getter for: Lcom/android/server/wm/WindowManagerService$LayoutFields;->mButtonLightTimeout:J
    invoke-static {v6}, Lcom/android/server/wm/WindowManagerService$LayoutFields;->access$3000(Lcom/android/server/wm/WindowManagerService$LayoutFields;)J

    move-result-wide v6

    invoke-virtual {v4, v6, v7}, Landroid/os/PowerManagerInternal;->setButtonTimeoutOverrideFromWindowManager(J)V

    .line 17886
    :cond_d49
    move-object/from16 v0, p0

    iget-boolean v4, v0, mTurnOnScreen:Z

    if-eqz v4, :cond_d9b

    .line 17887
    move-object/from16 v0, p0

    iget-boolean v4, v0, mAllowTheaterModeWakeFromLayout:Z

    if-nez v4, :cond_d67

    move-object/from16 v0, p0

    iget-object v4, v0, mContext:Landroid/content/Context;

    invoke-virtual {v4}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v4

    const-string/jumbo v6, "theater_mode_on"

    const/4 v7, 0x0

    invoke-static {v4, v6, v7}, Landroid/provider/Settings$Global;->getInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I

    move-result v4

    if-nez v4, :cond_d91

    .line 17890
    :cond_d67
    sget-boolean v4, DEBUG_VISIBILITY:Z

    if-nez v4, :cond_d6f

    sget-boolean v4, DEBUG_POWER:Z

    if-eqz v4, :cond_d76

    .line 17891
    :cond_d6f
    const-string v4, "WindowManager"

    const-string v6, "Turning screen on after layout!"

    invoke-static {v4, v6}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 17893
    :cond_d76
    move-object/from16 v0, p0

    iget-object v4, v0, mPolicy:Landroid/view/WindowManagerPolicy;

    move-object/from16 v0, p0

    iget-object v6, v0, mTurnOnScreenPackage:Ljava/lang/String;

    invoke-interface {v4, v6}, Landroid/view/WindowManagerPolicy;->isWakeupPreventionPackage(Ljava/lang/String;)Z

    move-result v4

    if-nez v4, :cond_e75

    .line 17894
    move-object/from16 v0, p0

    iget-object v4, v0, mPowerManager:Landroid/os/PowerManager;

    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v6

    const/16 v8, 0x11

    invoke-virtual {v4, v6, v7, v8}, Landroid/os/PowerManager;->wakeUp(JI)V

    .line 17899
    :cond_d91
    :goto_d91
    const/4 v4, 0x0

    move-object/from16 v0, p0

    iput-object v4, v0, mTurnOnScreenPackage:Ljava/lang/String;

    .line 17900
    const/4 v4, 0x0

    move-object/from16 v0, p0

    iput-boolean v4, v0, mTurnOnScreen:Z

    .line 17903
    :cond_d9b
    move-object/from16 v0, p0

    iget-object v4, v0, mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    # getter for: Lcom/android/server/wm/WindowManagerService$LayoutFields;->mUpdateRotation:Z
    invoke-static {v4}, Lcom/android/server/wm/WindowManagerService$LayoutFields;->access$3100(Lcom/android/server/wm/WindowManagerService$LayoutFields;)Z

    move-result v4

    if-eqz v4, :cond_dc2

    .line 17904
    sget-boolean v4, DEBUG_ORIENTATION:Z

    if-eqz v4, :cond_db0

    const-string v4, "WindowManager"

    const-string v6, "Performing post-rotate rotation"

    invoke-static {v4, v6}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 17905
    :cond_db0
    const/4 v4, 0x0

    move-object/from16 v0, p0

    invoke-virtual {v0, v4}, updateRotationUncheckedLocked(Z)Z

    move-result v4

    if-eqz v4, :cond_e9c

    .line 17906
    move-object/from16 v0, p0

    iget-object v4, v0, mH:Lcom/android/server/wm/WindowManagerService$H;

    const/16 v6, 0x12

    invoke-virtual {v4, v6}, Lcom/android/server/wm/WindowManagerService$H;->sendEmptyMessage(I)Z

    .line 17912
    :cond_dc2
    :goto_dc2
    move-object/from16 v0, p0

    iget-object v4, v0, mWaitingForDrawnCallback:Ljava/lang/Runnable;

    if-nez v4, :cond_de0

    move-object/from16 v0, p0

    iget-object v4, v0, mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    iget-boolean v4, v4, Lcom/android/server/wm/WindowManagerService$LayoutFields;->mOrientationChangeComplete:Z

    if-eqz v4, :cond_de3

    move-object/from16 v0, v16

    iget-boolean v4, v0, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    if-nez v4, :cond_de3

    move-object/from16 v0, p0

    iget-object v4, v0, mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    # getter for: Lcom/android/server/wm/WindowManagerService$LayoutFields;->mUpdateRotation:Z
    invoke-static {v4}, Lcom/android/server/wm/WindowManagerService$LayoutFields;->access$3100(Lcom/android/server/wm/WindowManagerService$LayoutFields;)Z

    move-result v4

    if-nez v4, :cond_de3

    .line 17915
    :cond_de0
    invoke-virtual/range {p0 .. p0}, checkDrawnWindowsLocked()V

    .line 17918
    :cond_de3
    move-object/from16 v0, p0

    iget-object v4, v0, mPendingRemove:Ljava/util/ArrayList;

    invoke-virtual {v4}, Ljava/util/ArrayList;->size()I

    move-result v10

    .line 17919
    .restart local v10    # "N":I
    if-lez v10, :cond_ec5

    .line 17920
    move-object/from16 v0, p0

    iget-object v4, v0, mPendingRemoveTmp:[Lcom/android/server/wm/WindowState;

    array-length v4, v4

    if-ge v4, v10, :cond_dfc

    .line 17921
    add-int/lit8 v4, v10, 0xa

    new-array v4, v4, [Lcom/android/server/wm/WindowState;

    move-object/from16 v0, p0

    iput-object v4, v0, mPendingRemoveTmp:[Lcom/android/server/wm/WindowState;

    .line 17923
    :cond_dfc
    move-object/from16 v0, p0

    iget-object v4, v0, mPendingRemove:Ljava/util/ArrayList;

    move-object/from16 v0, p0

    iget-object v6, v0, mPendingRemoveTmp:[Lcom/android/server/wm/WindowState;

    invoke-virtual {v4, v6}, Ljava/util/ArrayList;->toArray([Ljava/lang/Object;)[Ljava/lang/Object;

    .line 17924
    move-object/from16 v0, p0

    iget-object v4, v0, mPendingRemove:Ljava/util/ArrayList;

    invoke-virtual {v4}, Ljava/util/ArrayList;->clear()V

    .line 17925
    new-instance v23, Lcom/android/server/wm/DisplayContentList;

    invoke-direct/range {v23 .. v23}, Lcom/android/server/wm/DisplayContentList;-><init>()V

    .line 17926
    .local v23, "displayList":Lcom/android/server/wm/DisplayContentList;
    const/16 v30, 0x0

    :goto_e15
    move/from16 v0, v30

    if-ge v0, v10, :cond_ea6

    .line 17927
    move-object/from16 v0, p0

    iget-object v4, v0, mPendingRemoveTmp:[Lcom/android/server/wm/WindowState;

    aget-object v59, v4, v30

    .line 17928
    .restart local v59    # "w":Lcom/android/server/wm/WindowState;
    move-object/from16 v0, p0

    iget-object v4, v0, mPendingRemoveTmp:[Lcom/android/server/wm/WindowState;

    const/4 v6, 0x0

    aput-object v6, v4, v30

    .line 17929
    move-object/from16 v0, p0

    move-object/from16 v1, v59

    invoke-virtual {v0, v1}, removeWindowInnerLocked(Lcom/android/server/wm/WindowState;)V

    .line 17930
    invoke-virtual/range {v59 .. v59}, Lcom/android/server/wm/WindowState;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    move-result-object v21

    .line 17931
    .restart local v21    # "displayContent":Lcom/android/server/wm/DisplayContent;
    if-eqz v21, :cond_e44

    move-object/from16 v0, v23

    move-object/from16 v1, v21

    invoke-virtual {v0, v1}, Lcom/android/server/wm/DisplayContentList;->contains(Ljava/lang/Object;)Z

    move-result v4

    if-nez v4, :cond_e44

    .line 17932
    move-object/from16 v0, v23

    move-object/from16 v1, v21

    invoke-virtual {v0, v1}, Lcom/android/server/wm/DisplayContentList;->add(Ljava/lang/Object;)Z

    .line 17926
    :cond_e44
    add-int/lit8 v30, v30, 0x1

    goto :goto_e15

    .line 17867
    .end local v10    # "N":I
    .end local v21    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v23    # "displayList":Lcom/android/server/wm/DisplayContentList;
    .end local v59    # "w":Lcom/android/server/wm/WindowState;
    :cond_e47
    move-object/from16 v0, p0

    iget-object v4, v0, mPowerManagerInternal:Landroid/os/PowerManagerInternal;

    move-object/from16 v0, p0

    iget-object v6, v0, mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    # getter for: Lcom/android/server/wm/WindowManagerService$LayoutFields;->mScreenBrightness:F
    invoke-static {v6}, Lcom/android/server/wm/WindowManagerService$LayoutFields;->access$2600(Lcom/android/server/wm/WindowManagerService$LayoutFields;)F

    move-result v6

    move-object/from16 v0, p0

    invoke-direct {v0, v6}, toBrightnessOverride(F)I

    move-result v6

    invoke-virtual {v4, v6}, Landroid/os/PowerManagerInternal;->setScreenBrightnessOverrideFromWindowManager(I)V

    goto/16 :goto_cf9

    .line 17873
    :cond_e5e
    move-object/from16 v0, p0

    iget-object v4, v0, mPowerManagerInternal:Landroid/os/PowerManagerInternal;

    move-object/from16 v0, p0

    iget-object v6, v0, mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    # getter for: Lcom/android/server/wm/WindowManagerService$LayoutFields;->mButtonBrightness:F
    invoke-static {v6}, Lcom/android/server/wm/WindowManagerService$LayoutFields;->access$2700(Lcom/android/server/wm/WindowManagerService$LayoutFields;)F

    move-result v6

    move-object/from16 v0, p0

    invoke-direct {v0, v6}, toBrightnessOverride(F)I

    move-result v6

    invoke-virtual {v4, v6}, Landroid/os/PowerManagerInternal;->setButtonBrightnessOverrideFromWindowManager(I)V

    goto/16 :goto_d1c

    .line 17896
    :cond_e75
    const-string v6, "WindowManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "Turning screen block by WakeupPreventionPackage : "

    invoke-virtual {v4, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    move-object/from16 v0, p0

    iget-object v4, v0, mTurnOnScreenPackage:Ljava/lang/String;

    if-eqz v4, :cond_e99

    move-object/from16 v0, p0

    iget-object v4, v0, mTurnOnScreenPackage:Ljava/lang/String;

    :goto_e8c
    invoke-virtual {v7, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v6, v4}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto/16 :goto_d91

    :cond_e99
    const-string v4, "NULL"

    goto :goto_e8c

    .line 17908
    :cond_e9c
    move-object/from16 v0, p0

    iget-object v4, v0, mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    const/4 v6, 0x0

    # setter for: Lcom/android/server/wm/WindowManagerService$LayoutFields;->mUpdateRotation:Z
    invoke-static {v4, v6}, Lcom/android/server/wm/WindowManagerService$LayoutFields;->access$3102(Lcom/android/server/wm/WindowManagerService$LayoutFields;Z)Z

    goto/16 :goto_dc2

    .line 17936
    .restart local v10    # "N":I
    .restart local v23    # "displayList":Lcom/android/server/wm/DisplayContentList;
    :cond_ea6
    invoke-virtual/range {v23 .. v23}, Lcom/android/server/wm/DisplayContentList;->iterator()Ljava/util/Iterator;

    move-result-object v31

    .local v31, "i$":Ljava/util/Iterator;
    :goto_eaa
    invoke-interface/range {v31 .. v31}, Ljava/util/Iterator;->hasNext()Z

    move-result v4

    if-eqz v4, :cond_ec5

    invoke-interface/range {v31 .. v31}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v21

    check-cast v21, Lcom/android/server/wm/DisplayContent;

    .line 17937
    .restart local v21    # "displayContent":Lcom/android/server/wm/DisplayContent;
    invoke-virtual/range {v21 .. v21}, Lcom/android/server/wm/DisplayContent;->getWindowList()Lcom/android/server/wm/WindowList;

    move-result-object v4

    move-object/from16 v0, p0

    invoke-direct {v0, v4}, assignLayersLocked(Lcom/android/server/wm/WindowList;)V

    .line 17938
    const/4 v4, 0x1

    move-object/from16 v0, v21

    iput-boolean v4, v0, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    goto :goto_eaa

    .line 17943
    .end local v21    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v23    # "displayList":Lcom/android/server/wm/DisplayContentList;
    .end local v31    # "i$":Ljava/util/Iterator;
    :cond_ec5
    move-object/from16 v0, p0

    iget-object v4, v0, mDisplayContents:Landroid/util/SparseArray;

    invoke-virtual {v4}, Landroid/util/SparseArray;->size()I

    move-result v4

    add-int/lit8 v24, v4, -0x1

    :goto_ecf
    if-ltz v24, :cond_ee3

    .line 17944
    move-object/from16 v0, p0

    iget-object v4, v0, mDisplayContents:Landroid/util/SparseArray;

    move/from16 v0, v24

    invoke-virtual {v4, v0}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/server/wm/DisplayContent;

    invoke-virtual {v4}, Lcom/android/server/wm/DisplayContent;->checkForDeferredActions()V

    .line 17943
    add-int/lit8 v24, v24, -0x1

    goto :goto_ecf

    .line 17947
    :cond_ee3
    if-eqz v58, :cond_eed

    .line 17948
    move-object/from16 v0, p0

    iget-object v4, v0, mInputMonitor:Lcom/android/server/wm/InputMonitor;

    const/4 v6, 0x0

    invoke-virtual {v4, v6}, Lcom/android/server/wm/InputMonitor;->updateInputWindowsLw(Z)V

    .line 17952
    :cond_eed
    move-object/from16 v0, p0

    iget-object v4, v0, mAppTransition:Lcom/android/server/wm/AppTransition;

    invoke-virtual {v4}, Lcom/android/server/wm/AppTransition;->isTransitionSet()Z

    move-result v4

    if-nez v4, :cond_f06

    move-object/from16 v0, p0

    iget-object v4, v0, mAppTransition:Lcom/android/server/wm/AppTransition;

    invoke-virtual {v4}, Lcom/android/server/wm/AppTransition;->isRunning()Z

    move-result v4

    if-nez v4, :cond_f06

    .line 17953
    const/4 v4, 0x0

    move-object/from16 v0, p0

    iput-boolean v4, v0, mIsForceHideCenterbarTransitionRunning:Z

    .line 17956
    :cond_f06
    invoke-virtual/range {p0 .. p0}, setFocusedStackFrame()V

    .line 17960
    invoke-virtual/range {p0 .. p0}, enableScreenIfNeededLocked()V

    .line 17962
    invoke-virtual/range {p0 .. p0}, scheduleAnimationLocked()V

    .line 17964
    sget-boolean v4, DEBUG_WINDOW_TRACE:Z

    if-eqz v4, :cond_f32

    .line 17965
    const-string v4, "WindowManager"

    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v7, "performLayoutAndPlaceSurfacesLockedInner exit: animating="

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    move-object/from16 v0, p0

    iget-object v7, v0, mAnimator:Lcom/android/server/wm/WindowAnimator;

    iget-boolean v7, v7, Lcom/android/server/wm/WindowAnimator;->mAnimating:Z

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-static {v4, v6}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 17968
    :cond_f32
    return-void

    .line 17364
    .end local v19    # "defaultWindows":Lcom/android/server/wm/WindowList;
    .end local v44    # "multiwindowTransition":Lcom/android/server/wm/MultiWindowTransition;
    .end local v61    # "wallpaperDestroyed":Z
    .restart local v5    # "displayId":I
    .restart local v12    # "allDrawnTaskDisplayContent":Lcom/android/server/wm/DisplayContent;
    .restart local v20    # "dh":I
    .restart local v21    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .restart local v22    # "displayInfo":Landroid/view/DisplayInfo;
    .restart local v25    # "dw":I
    .restart local v29    # "focusDisplayed":Z
    .restart local v32    # "innerDh":I
    .restart local v33    # "innerDw":I
    .restart local v35    # "isCascade":Z
    .restart local v36    # "isDefaultDisplay":Z
    .restart local v37    # "isMultiWindowAnimating":Z
    .restart local v39    # "left":I
    .restart local v41    # "mWallpaperTarget":Lcom/android/server/wm/WindowState;
    .restart local v45    # "mwAnim":Lcom/android/server/wm/MultiWindowTransition;
    .restart local v47    # "obscuredChanged":Z
    .restart local v48    # "repeats":I
    .restart local v49    # "shouldSkipMoving":Z
    .restart local v50    # "someoneLosingFocus":Z
    .restart local v51    # "stack":Lcom/android/server/wm/TaskStack;
    .restart local v56    # "top":I
    .restart local v57    # "updateAllDrawn":Z
    .restart local v59    # "w":Lcom/android/server/wm/WindowState;
    .restart local v63    # "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    .restart local v64    # "windows":Lcom/android/server/wm/WindowList;
    :catch_f33
    move-exception v4

    goto/16 :goto_597
.end method

.method private final performLayoutAndPlaceSurfacesLockedLoop()V
    .registers 11

    .prologue
    const-wide/16 v8, 0x20

    const/4 v7, 0x0

    .line 15430
    iget-boolean v4, p0, mInLayout:Z

    if-eqz v4, :cond_26

    .line 15434
    const-string v4, "WindowManager"

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v6, "performLayoutAndPlaceSurfacesLocked called while in layout. Callers="

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    const/4 v6, 0x3

    invoke-static {v6}, Landroid/os/Debug;->getCallers(I)Ljava/lang/String;

    move-result-object v6

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v4, v5}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 15499
    :cond_25
    :goto_25
    return-void

    .line 15439
    :cond_26
    iget-boolean v4, p0, mWaitingForConfig:Z

    if-nez v4, :cond_25

    .line 15446
    iget-boolean v4, p0, mDisplayReady:Z

    if-eqz v4, :cond_25

    .line 15451
    const-string/jumbo v4, "wmLayout"

    invoke-static {v8, v9, v4}, Landroid/os/Trace;->traceBegin(JLjava/lang/String;)V

    .line 15452
    const/4 v4, 0x1

    iput-boolean v4, p0, mInLayout:Z

    .line 15454
    const/4 v1, 0x0

    .line 15455
    .local v1, "recoveringMemory":Z
    iget-object v4, p0, mForceRemoves:Ljava/util/ArrayList;

    invoke-virtual {v4}, Ljava/util/ArrayList;->isEmpty()Z

    move-result v4

    if-nez v4, :cond_80

    .line 15456
    const/4 v1, 0x1

    .line 15458
    :goto_41
    iget-object v4, p0, mForceRemoves:Ljava/util/ArrayList;

    invoke-virtual {v4}, Ljava/util/ArrayList;->isEmpty()Z

    move-result v4

    if-nez v4, :cond_6d

    .line 15459
    iget-object v4, p0, mForceRemoves:Ljava/util/ArrayList;

    invoke-virtual {v4, v7}, Ljava/util/ArrayList;->remove(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/wm/WindowState;

    .line 15460
    .local v3, "ws":Lcom/android/server/wm/WindowState;
    const-string v4, "WindowManager"

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string v6, "Force removing: "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v4, v5}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 15461
    invoke-virtual {p0, v3}, removeWindowInnerLocked(Lcom/android/server/wm/WindowState;)V

    goto :goto_41

    .line 15463
    .end local v3    # "ws":Lcom/android/server/wm/WindowState;
    :cond_6d
    const-string v4, "WindowManager"

    const-string v5, "Due to memory failure, waiting a bit for next layout"

    invoke-static {v4, v5}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 15464
    new-instance v2, Ljava/lang/Object;

    invoke-direct {v2}, Ljava/lang/Object;-><init>()V

    .line 15465
    .local v2, "tmp":Ljava/lang/Object;
    monitor-enter v2

    .line 15467
    const-wide/16 v4, 0xfa

    :try_start_7c
    invoke-virtual {v2, v4, v5}, Ljava/lang/Object;->wait(J)V
    :try_end_7f
    .catch Ljava/lang/InterruptedException; {:try_start_7c .. :try_end_7f} :catch_d4
    .catchall {:try_start_7c .. :try_end_7f} :catchall_b7

    .line 15470
    :goto_7f
    :try_start_7f
    monitor-exit v2
    :try_end_80
    .catchall {:try_start_7f .. :try_end_80} :catchall_b7

    .line 15474
    .end local v2    # "tmp":Ljava/lang/Object;
    :cond_80
    :try_start_80
    invoke-direct {p0, v1}, performLayoutAndPlaceSurfacesLockedInner(Z)V

    .line 15476
    const/4 v4, 0x0

    iput-boolean v4, p0, mInLayout:Z

    .line 15478
    invoke-direct {p0}, needsLayout()Z

    move-result v4

    if-eqz v4, :cond_d0

    .line 15479
    iget v4, p0, mLayoutRepeatCount:I

    add-int/lit8 v4, v4, 0x1

    iput v4, p0, mLayoutRepeatCount:I

    const/4 v5, 0x6

    if-ge v4, v5, :cond_ba

    .line 15480
    invoke-virtual {p0}, requestTraversalLocked()V

    .line 15489
    :goto_98
    iget-boolean v4, p0, mWindowsChanged:Z

    if-eqz v4, :cond_b2

    iget-object v4, p0, mWindowChangeListeners:Ljava/util/ArrayList;

    invoke-virtual {v4}, Ljava/util/ArrayList;->isEmpty()Z

    move-result v4

    if-nez v4, :cond_b2

    .line 15490
    iget-object v4, p0, mH:Lcom/android/server/wm/WindowManagerService$H;

    const/16 v5, 0x13

    invoke-virtual {v4, v5}, Lcom/android/server/wm/WindowManagerService$H;->removeMessages(I)V

    .line 15491
    iget-object v4, p0, mH:Lcom/android/server/wm/WindowManagerService$H;

    const/16 v5, 0x13

    invoke-virtual {v4, v5}, Lcom/android/server/wm/WindowManagerService$H;->sendEmptyMessage(I)Z
    :try_end_b2
    .catch Ljava/lang/RuntimeException; {:try_start_80 .. :try_end_b2} :catch_c5

    .line 15498
    :cond_b2
    :goto_b2
    invoke-static {v8, v9}, Landroid/os/Trace;->traceEnd(J)V

    goto/16 :goto_25

    .line 15470
    .restart local v2    # "tmp":Ljava/lang/Object;
    :catchall_b7
    move-exception v4

    :try_start_b8
    monitor-exit v2
    :try_end_b9
    .catchall {:try_start_b8 .. :try_end_b9} :catchall_b7

    throw v4

    .line 15482
    .end local v2    # "tmp":Ljava/lang/Object;
    :cond_ba
    :try_start_ba
    const-string v4, "WindowManager"

    const-string v5, "Performed 6 layouts in a row. Skipping"

    invoke-static {v4, v5}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 15483
    const/4 v4, 0x0

    iput v4, p0, mLayoutRepeatCount:I
    :try_end_c4
    .catch Ljava/lang/RuntimeException; {:try_start_ba .. :try_end_c4} :catch_c5

    goto :goto_98

    .line 15493
    :catch_c5
    move-exception v0

    .line 15494
    .local v0, "e":Ljava/lang/RuntimeException;
    iput-boolean v7, p0, mInLayout:Z

    .line 15495
    const-string v4, "WindowManager"

    const-string v5, "Unhandled exception while laying out windows"

    invoke-static {v4, v5, v0}, Landroid/util/Slog;->wtf(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    goto :goto_b2

    .line 15486
    .end local v0    # "e":Ljava/lang/RuntimeException;
    :cond_d0
    const/4 v4, 0x0

    :try_start_d1
    iput v4, p0, mLayoutRepeatCount:I
    :try_end_d3
    .catch Ljava/lang/RuntimeException; {:try_start_d1 .. :try_end_d3} :catch_c5

    goto :goto_98

    .line 15468
    .restart local v2    # "tmp":Ljava/lang/Object;
    :catch_d4
    move-exception v4

    goto :goto_7f
.end method

.method private performLayoutForAppTransitionLocked(I)V
    .registers 9
    .param p1, "displayId"    # I

    .prologue
    .line 22625
    invoke-virtual {p0, p1}, getDisplayContentLocked(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v0

    .line 22626
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    invoke-virtual {v0}, Lcom/android/server/wm/DisplayContent;->getWindowList()Lcom/android/server/wm/WindowList;

    move-result-object v1

    .line 22627
    .local v1, "displayWindows":Lcom/android/server/wm/WindowList;
    invoke-virtual {p0, p1}, getAppTransitionForDisplayLocked(I)Lcom/android/server/wm/AppTransition;

    move-result-object v2

    .line 22633
    .local v2, "mAppTransition":Lcom/android/server/wm/AppTransition;
    sget-boolean v4, Lcom/android/server/wm/DualScreenTransition;->DEBUG_VERBOSE:Z

    if-eqz v4, :cond_37

    .line 22634
    const-string v4, "WindowManager"

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v6, "performLayoutForAppTransitionLocked[d"

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v5

    const-string v6, "] mAppTransition.isReady="

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v2}, Lcom/android/server/wm/AppTransition;->isReady()Z

    move-result v6

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v4, v5}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 22638
    :cond_37
    invoke-virtual {v2}, Lcom/android/server/wm/AppTransition;->isReady()Z

    move-result v4

    if-eqz v4, :cond_65

    .line 22639
    iget v4, v0, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    invoke-virtual {p0, v1, p1}, handleAppTransitionReadyLocked(Lcom/android/server/wm/WindowList;I)I

    move-result v5

    or-int/2addr v4, v5

    iput v4, v0, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    .line 22640
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v5, "d["

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, "] after handleAppTransitionReadyLocked"

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    iget v5, v0, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    invoke-virtual {p0, v4, v5}, debugLayoutRepeats(Ljava/lang/String;I)V

    .line 22644
    :cond_65
    iget-object v4, p0, mAnimator:Lcom/android/server/wm/WindowAnimator;

    iget-boolean v4, v4, Lcom/android/server/wm/WindowAnimator;->mAnimating:Z

    if-nez v4, :cond_99

    invoke-virtual {v2}, Lcom/android/server/wm/AppTransition;->isRunning()Z

    move-result v4

    if-eqz v4, :cond_99

    .line 22651
    iget v4, v0, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    invoke-direct {p0, p1}, handleAnimatingStoppedAndTransitionLocked(I)I

    move-result v5

    or-int/2addr v4, v5

    iput v4, v0, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    .line 22652
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v5, "d["

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, "] after handleAnimStopAndXitionLock"

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    iget v5, v0, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    invoke-virtual {p0, v4, v5}, debugLayoutRepeats(Ljava/lang/String;I)V

    .line 22661
    :cond_99
    iget-object v4, p0, mAnimator:Lcom/android/server/wm/WindowAnimator;

    invoke-virtual {v4, p1}, Lcom/android/server/wm/WindowAnimator;->getMultiWindowTransitionLocked(I)Lcom/android/server/wm/MultiWindowTransition;

    move-result-object v3

    .line 22662
    .local v3, "multiwindowTransition":Lcom/android/server/wm/MultiWindowTransition;
    if-eqz v3, :cond_cf

    invoke-virtual {v3}, Lcom/android/server/wm/MultiWindowTransition;->isTransitReady()Z

    move-result v4

    if-eqz v4, :cond_cf

    .line 22663
    iget v4, v0, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    invoke-virtual {v3}, Lcom/android/server/wm/MultiWindowTransition;->handleMultiWindowTransitionReady()I

    move-result v5

    or-int/2addr v4, v5

    iput v4, v0, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    .line 22664
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v5, "d["

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, "] after handleMultiWindowTransitionReady"

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    iget v5, v0, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    invoke-virtual {p0, v4, v5}, debugLayoutRepeats(Ljava/lang/String;I)V

    .line 22670
    :cond_cf
    iget-object v4, p0, mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    iget-boolean v4, v4, Lcom/android/server/wm/WindowManagerService$LayoutFields;->mWallpaperForceHidingChanged:Z

    if-eqz v4, :cond_104

    iget v4, v0, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    if-nez v4, :cond_104

    invoke-virtual {v2}, Lcom/android/server/wm/AppTransition;->isReady()Z

    move-result v4

    if-nez v4, :cond_104

    .line 22678
    iget v4, v0, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    or-int/lit8 v4, v4, 0x1

    iput v4, v0, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    .line 22679
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v5, "d["

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, "] after animateAwayWallpaperLocked"

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    iget v5, v0, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    invoke-virtual {p0, v4, v5}, debugLayoutRepeats(Ljava/lang/String;I)V

    .line 22682
    :cond_104
    return-void
.end method

.method private final performLayoutLockedInner(Lcom/android/server/wm/DisplayContent;ZZ)V
    .registers 34
    .param p1, "displayContent"    # Lcom/android/server/wm/DisplayContent;
    .param p2, "initial"    # Z
    .param p3, "updateInputWindows"    # Z

    .prologue
    .line 15503
    move-object/from16 v0, p1

    iget-boolean v0, v0, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    move/from16 v27, v0

    if-nez v27, :cond_9

    .line 15761
    :goto_8
    return-void

    .line 15506
    :cond_9
    const/16 v27, 0x0

    move/from16 v0, v27

    move-object/from16 v1, p1

    iput-boolean v0, v1, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    .line 15507
    invoke-virtual/range {p1 .. p1}, Lcom/android/server/wm/DisplayContent;->getWindowList()Lcom/android/server/wm/WindowList;

    move-result-object v26

    .line 15508
    .local v26, "windows":Lcom/android/server/wm/WindowList;
    move-object/from16 v0, p1

    iget-boolean v12, v0, Lcom/android/server/wm/DisplayContent;->isDefaultDisplay:Z

    .line 15510
    .local v12, "isDefaultDisplay":Z
    invoke-virtual/range {p1 .. p1}, Lcom/android/server/wm/DisplayContent;->getDisplayInfo()Landroid/view/DisplayInfo;

    move-result-object v8

    .line 15511
    .local v8, "displayInfo":Landroid/view/DisplayInfo;
    iget v9, v8, Landroid/view/DisplayInfo;->logicalWidth:I

    .line 15512
    .local v9, "dw":I
    iget v7, v8, Landroid/view/DisplayInfo;->logicalHeight:I

    .line 15518
    .local v7, "dh":I
    move-object/from16 v0, p0

    iget-object v15, v0, mInputConsumer:Lcom/android/server/wm/InputConsumerImpl;

    .line 15521
    .local v15, "mInputConsumer":Lcom/android/server/wm/InputConsumerImpl;
    if-eqz v15, :cond_2a

    .line 15522
    invoke-virtual {v15, v9, v7}, Lcom/android/server/wm/InputConsumerImpl;->layout(II)V

    .line 15525
    :cond_2a
    invoke-virtual/range {v26 .. v26}, Lcom/android/server/wm/WindowList;->size()I

    move-result v3

    .line 15528
    .local v3, "N":I
    sget-boolean v27, DEBUG_LAYOUT:Z

    if-eqz v27, :cond_70

    .line 15529
    const-string v27, "WindowManager"

    const-string v28, "-------------------------------------"

    invoke-static/range {v27 .. v28}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 15530
    const-string v27, "WindowManager"

    new-instance v28, Ljava/lang/StringBuilder;

    invoke-direct/range {v28 .. v28}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v29, "performLayout: needed="

    invoke-virtual/range {v28 .. v29}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v28

    move-object/from16 v0, p1

    iget-boolean v0, v0, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    move/from16 v29, v0

    invoke-virtual/range {v28 .. v29}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v28

    const-string v29, " dw="

    invoke-virtual/range {v28 .. v29}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v28

    move-object/from16 v0, v28

    invoke-virtual {v0, v9}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v28

    const-string v29, " dh="

    invoke-virtual/range {v28 .. v29}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v28

    move-object/from16 v0, v28

    invoke-virtual {v0, v7}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v28

    invoke-virtual/range {v28 .. v28}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v28

    invoke-static/range {v27 .. v28}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 15535
    :cond_70
    invoke-virtual/range {p1 .. p1}, Lcom/android/server/wm/DisplayContent;->getDisplayId()I

    move-result v17

    .line 15543
    .local v17, "nDisplayId":I
    move-object/from16 v0, p0

    iget v0, v0, mRotation:I

    move/from16 v16, v0

    .line 15545
    .local v16, "mRotation":I
    move-object/from16 v0, p0

    iget-object v0, v0, mPolicy:Landroid/view/WindowManagerPolicy;

    move-object/from16 v27, v0

    move-object/from16 v0, v27

    move/from16 v1, v16

    invoke-interface {v0, v12, v9, v7, v1}, Landroid/view/WindowManagerPolicy;->beginLayoutLw(ZIII)V

    .line 15550
    if-eqz v12, :cond_ac

    .line 15552
    move-object/from16 v0, p0

    iget-object v0, v0, mPolicy:Landroid/view/WindowManagerPolicy;

    move-object/from16 v27, v0

    invoke-interface/range {v27 .. v27}, Landroid/view/WindowManagerPolicy;->getSystemDecorLayerLw()I

    move-result v27

    move/from16 v0, v27

    move-object/from16 v1, p0

    iput v0, v1, mSystemDecorLayer:I

    .line 15553
    move-object/from16 v0, p0

    iget-object v0, v0, mScreenRect:Landroid/graphics/Rect;

    move-object/from16 v27, v0

    const/16 v28, 0x0

    const/16 v29, 0x0

    move-object/from16 v0, v27

    move/from16 v1, v28

    move/from16 v2, v29

    invoke-virtual {v0, v1, v2, v9, v7}, Landroid/graphics/Rect;->set(IIII)V

    .line 15556
    :cond_ac
    move-object/from16 v0, p0

    iget-object v0, v0, mPolicy:Landroid/view/WindowManagerPolicy;

    move-object/from16 v27, v0

    move-object/from16 v0, p0

    iget-object v0, v0, mTmpContentRect:Landroid/graphics/Rect;

    move-object/from16 v28, v0

    invoke-interface/range {v27 .. v28}, Landroid/view/WindowManagerPolicy;->getContentRectLw(Landroid/graphics/Rect;)V

    .line 15557
    move-object/from16 v0, p0

    iget-object v0, v0, mTmpContentRect:Landroid/graphics/Rect;

    move-object/from16 v27, v0

    move-object/from16 v0, p1

    move-object/from16 v1, v27

    invoke-virtual {v0, v1}, Lcom/android/server/wm/DisplayContent;->resize(Landroid/graphics/Rect;)V

    .line 15559
    move-object/from16 v0, p0

    iget v0, v0, mLayoutSeq:I

    move/from16 v27, v0

    add-int/lit8 v20, v27, 0x1

    .line 15560
    .local v20, "seq":I
    if-gez v20, :cond_d4

    const/16 v20, 0x0

    .line 15561
    :cond_d4
    move/from16 v0, v20

    move-object/from16 v1, p0

    iput v0, v1, mLayoutSeq:I

    .line 15563
    const/4 v6, 0x0

    .line 15567
    .local v6, "behindDream":Z
    const/16 v23, -0x1

    .line 15568
    .local v23, "topAttached":I
    add-int/lit8 v11, v3, -0x1

    .local v11, "i":I
    :goto_df
    if-ltz v11, :cond_55b

    .line 15569
    move-object/from16 v0, v26

    invoke-virtual {v0, v11}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v25

    check-cast v25, Lcom/android/server/wm/WindowState;

    .line 15574
    .local v25, "win":Lcom/android/server/wm/WindowState;
    if-eqz v6, :cond_103

    move-object/from16 v0, p0

    iget-object v0, v0, mPolicy:Landroid/view/WindowManagerPolicy;

    move-object/from16 v27, v0

    move-object/from16 v0, v25

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    move-object/from16 v28, v0

    move-object/from16 v0, v27

    move-object/from16 v1, v25

    move-object/from16 v2, v28

    invoke-interface {v0, v1, v2}, Landroid/view/WindowManagerPolicy;->canBeForceHidden(Landroid/view/WindowManagerPolicy$WindowState;Landroid/view/WindowManager$LayoutParams;)Z

    move-result v27

    if-nez v27, :cond_109

    :cond_103
    invoke-virtual/range {v25 .. v25}, Lcom/android/server/wm/WindowState;->isGoneForMWLayoutLw()Z

    move-result v27

    if-eqz v27, :cond_4a9

    :cond_109
    const/4 v10, 0x1

    .line 15583
    .local v10, "gone":Z
    :goto_10a
    move-object/from16 v0, v25

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    move-object/from16 v27, v0

    if-eqz v27, :cond_4ac

    move-object/from16 v0, p0

    iget-object v0, v0, mPolicy:Landroid/view/WindowManagerPolicy;

    move-object/from16 v27, v0

    invoke-interface/range {v27 .. v27}, Landroid/view/WindowManagerPolicy;->isStatusBarSViewCover()Z

    move-result v27

    if-eqz v27, :cond_4ac

    move-object/from16 v0, p0

    iget-object v0, v0, mPolicy:Landroid/view/WindowManagerPolicy;

    move-object/from16 v27, v0

    move-object/from16 v0, v25

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    move-object/from16 v28, v0

    move-object/from16 v0, v27

    move-object/from16 v1, v25

    move-object/from16 v2, v28

    invoke-interface {v0, v1, v2}, Landroid/view/WindowManagerPolicy;->canBeForceHiddenBySViewCover(Landroid/view/WindowManagerPolicy$WindowState;Landroid/view/WindowManager$LayoutParams;)Z

    move-result v27

    if-eqz v27, :cond_4ac

    const/16 v21, 0x1

    .line 15588
    .local v21, "skipLayout":Z
    :goto_138
    sget-boolean v27, DEBUG_LAYOUT:Z

    if-eqz v27, :cond_234

    move-object/from16 v0, v25

    iget-boolean v0, v0, Lcom/android/server/wm/WindowState;->mLayoutAttached:Z

    move/from16 v27, v0

    if-nez v27, :cond_234

    .line 15589
    const-string v27, "WindowManager"

    new-instance v28, Ljava/lang/StringBuilder;

    invoke-direct/range {v28 .. v28}, Ljava/lang/StringBuilder;-><init>()V

    const-string v29, "1ST PASS "

    invoke-virtual/range {v28 .. v29}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v28

    move-object/from16 v0, v28

    move-object/from16 v1, v25

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v28

    const-string v29, ": gone="

    invoke-virtual/range {v28 .. v29}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v28

    move-object/from16 v0, v28

    invoke-virtual {v0, v10}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v28

    const-string v29, " mHaveFrame="

    invoke-virtual/range {v28 .. v29}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v28

    move-object/from16 v0, v25

    iget-boolean v0, v0, Lcom/android/server/wm/WindowState;->mHaveFrame:Z

    move/from16 v29, v0

    invoke-virtual/range {v28 .. v29}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v28

    const-string v29, " mLayoutAttached="

    invoke-virtual/range {v28 .. v29}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v28

    move-object/from16 v0, v25

    iget-boolean v0, v0, Lcom/android/server/wm/WindowState;->mLayoutAttached:Z

    move/from16 v29, v0

    invoke-virtual/range {v28 .. v29}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v28

    const-string v29, " screen changed="

    invoke-virtual/range {v28 .. v29}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v28

    invoke-virtual/range {v25 .. v25}, Lcom/android/server/wm/WindowState;->isConfigChanged()Z

    move-result v29

    invoke-virtual/range {v28 .. v29}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v28

    invoke-virtual/range {v28 .. v28}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v28

    invoke-static/range {v27 .. v28}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 15593
    move-object/from16 v0, v25

    iget-object v4, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    .line 15594
    .local v4, "atoken":Lcom/android/server/wm/AppWindowToken;
    if-eqz v10, :cond_4b4

    const-string v28, "WindowManager"

    new-instance v27, Ljava/lang/StringBuilder;

    invoke-direct/range {v27 .. v27}, Ljava/lang/StringBuilder;-><init>()V

    const-string v29, "  GONE: mViewVisibility="

    move-object/from16 v0, v27

    move-object/from16 v1, v29

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v27

    move-object/from16 v0, v25

    iget v0, v0, Lcom/android/server/wm/WindowState;->mViewVisibility:I

    move/from16 v29, v0

    move-object/from16 v0, v27

    move/from16 v1, v29

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v27

    const-string v29, " mRelayoutCalled="

    move-object/from16 v0, v27

    move-object/from16 v1, v29

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v27

    move-object/from16 v0, v25

    iget-boolean v0, v0, Lcom/android/server/wm/WindowState;->mRelayoutCalled:Z

    move/from16 v29, v0

    move-object/from16 v0, v27

    move/from16 v1, v29

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v27

    const-string v29, " hidden="

    move-object/from16 v0, v27

    move-object/from16 v1, v29

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v27

    move-object/from16 v0, v25

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mRootToken:Lcom/android/server/wm/WindowToken;

    move-object/from16 v29, v0

    move-object/from16 v0, v29

    iget-boolean v0, v0, Lcom/android/server/wm/WindowToken;->hidden:Z

    move/from16 v29, v0

    move-object/from16 v0, v27

    move/from16 v1, v29

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v27

    const-string v29, " hiddenRequested="

    move-object/from16 v0, v27

    move-object/from16 v1, v29

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v29

    if-eqz v4, :cond_4b0

    iget-boolean v0, v4, Lcom/android/server/wm/AppWindowToken;->hiddenRequested:Z

    move/from16 v27, v0

    if-eqz v27, :cond_4b0

    const/16 v27, 0x1

    :goto_209
    move-object/from16 v0, v29

    move/from16 v1, v27

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v27

    const-string v29, " mAttachedHidden="

    move-object/from16 v0, v27

    move-object/from16 v1, v29

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v27

    move-object/from16 v0, v25

    iget-boolean v0, v0, Lcom/android/server/wm/WindowState;->mAttachedHidden:Z

    move/from16 v29, v0

    move-object/from16 v0, v27

    move/from16 v1, v29

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v27

    invoke-virtual/range {v27 .. v27}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v27

    move-object/from16 v0, v28

    move-object/from16 v1, v27

    invoke-static {v0, v1}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 15613
    .end local v4    # "atoken":Lcom/android/server/wm/AppWindowToken;
    :cond_234
    :goto_234
    if-eqz v10, :cond_296

    move-object/from16 v0, v25

    iget-boolean v0, v0, Lcom/android/server/wm/WindowState;->mHaveFrame:Z

    move/from16 v27, v0

    if-eqz v27, :cond_296

    move-object/from16 v0, v25

    iget-boolean v0, v0, Lcom/android/server/wm/WindowState;->mLayoutNeeded:Z

    move/from16 v27, v0

    if-nez v27, :cond_296

    invoke-virtual/range {v25 .. v25}, Lcom/android/server/wm/WindowState;->isConfigChanged()Z

    move-result v27

    if-nez v27, :cond_252

    invoke-virtual/range {v25 .. v25}, Lcom/android/server/wm/WindowState;->setInsetsChanged()Z

    move-result v27

    if-eqz v27, :cond_4a5

    :cond_252
    move-object/from16 v0, v25

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    move-object/from16 v27, v0

    move-object/from16 v0, v27

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->privateFlags:I

    move/from16 v27, v0

    move/from16 v0, v27

    and-int/lit16 v0, v0, 0x400

    move/from16 v27, v0

    if-nez v27, :cond_296

    move-object/from16 v0, v25

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    move-object/from16 v27, v0

    move-object/from16 v0, v27

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->samsungFlags:I

    move/from16 v27, v0

    const/high16 v28, 0x10000000

    and-int v27, v27, v28

    if-nez v27, :cond_296

    move-object/from16 v0, v25

    iget-boolean v0, v0, Lcom/android/server/wm/WindowState;->mHasSurface:Z

    move/from16 v27, v0

    if-eqz v27, :cond_4a5

    move-object/from16 v0, v25

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    move-object/from16 v27, v0

    if-eqz v27, :cond_4a5

    move-object/from16 v0, v25

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    move-object/from16 v27, v0

    move-object/from16 v0, v27

    iget-boolean v0, v0, Lcom/android/server/wm/AppWindowToken;->layoutConfigChanges:Z

    move/from16 v27, v0

    if-eqz v27, :cond_4a5

    .line 15621
    :cond_296
    move-object/from16 v0, v25

    iget-boolean v0, v0, Lcom/android/server/wm/WindowState;->mLayoutAttached:Z

    move/from16 v27, v0

    if-nez v27, :cond_555

    .line 15622
    if-eqz p2, :cond_2a8

    .line 15624
    const/16 v27, 0x0

    move/from16 v0, v27

    move-object/from16 v1, v25

    iput-boolean v0, v1, Lcom/android/server/wm/WindowState;->mContentChanged:Z

    .line 15626
    :cond_2a8
    move-object/from16 v0, v25

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    move-object/from16 v27, v0

    move-object/from16 v0, v27

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    move/from16 v27, v0

    const/16 v28, 0x7e7

    move/from16 v0, v27

    move/from16 v1, v28

    if-ne v0, v1, :cond_2bd

    .line 15630
    const/4 v6, 0x1

    .line 15632
    :cond_2bd
    const/16 v27, 0x0

    move/from16 v0, v27

    move-object/from16 v1, v25

    iput-boolean v0, v1, Lcom/android/server/wm/WindowState;->mLayoutNeeded:Z

    .line 15633
    invoke-virtual/range {v25 .. v25}, Lcom/android/server/wm/WindowState;->prelayout()V

    .line 15637
    const/16 v24, 0x0

    .line 15638
    .local v24, "updateCenterbarOrder":Z
    const/4 v14, 0x0

    .line 15639
    .local v14, "isSelectivetState":Z
    const/4 v13, 0x0

    .line 15642
    .local v13, "isSelectiveToastWin":Z
    move-object/from16 v0, p0

    iget-object v0, v0, mMultiWindowCenterBar:Lcom/android/server/wm/WindowState;

    move-object/from16 v27, v0

    if-eqz v27, :cond_54d

    move-object/from16 v0, v25

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    move-object/from16 v27, v0

    move-object/from16 v0, v27

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    move/from16 v27, v0

    const/16 v28, 0x1

    move/from16 v0, v27

    move/from16 v1, v28

    if-ne v0, v1, :cond_314

    move-object/from16 v0, v25

    iget v0, v0, Lcom/android/server/wm/WindowState;->mViewVisibility:I

    move/from16 v27, v0

    if-nez v27, :cond_314

    move-object/from16 v0, v25

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    move-object/from16 v27, v0

    move-object/from16 v0, v27

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->flags:I

    move/from16 v27, v0

    and-int/lit8 v27, v27, 0x4

    if-nez v27, :cond_314

    invoke-virtual/range {v25 .. v25}, Lcom/android/server/wm/WindowState;->getFrameLw()Landroid/graphics/Rect;

    move-result-object v27

    move-object/from16 v0, p0

    iget-object v0, v0, mMultiWindowCenterBar:Lcom/android/server/wm/WindowState;

    move-object/from16 v28, v0

    invoke-virtual/range {v28 .. v28}, Lcom/android/server/wm/WindowState;->getFrameLw()Landroid/graphics/Rect;

    move-result-object v28

    invoke-virtual/range {v27 .. v28}, Landroid/graphics/Rect;->contains(Landroid/graphics/Rect;)Z

    move-result v27

    if-eqz v27, :cond_346

    :cond_314
    move-object/from16 v0, v25

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    move-object/from16 v27, v0

    move-object/from16 v0, v27

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    move/from16 v27, v0

    const/16 v28, 0x3e8

    move/from16 v0, v27

    move/from16 v1, v28

    if-eq v0, v1, :cond_33c

    move-object/from16 v0, v25

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    move-object/from16 v27, v0

    move-object/from16 v0, v27

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    move/from16 v27, v0

    const/16 v28, 0x3e9

    move/from16 v0, v27

    move/from16 v1, v28

    if-ne v0, v1, :cond_54d

    :cond_33c
    invoke-virtual/range {v25 .. v25}, Lcom/android/server/wm/WindowState;->getFrameLw()Landroid/graphics/Rect;

    move-result-object v27

    invoke-virtual/range {v27 .. v27}, Landroid/graphics/Rect;->isEmpty()Z

    move-result v27

    if-eqz v27, :cond_54d

    :cond_346
    const/16 v24, 0x1

    .line 15650
    :goto_348
    move-object/from16 v0, v25

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttachedWindow:Lcom/android/server/wm/WindowState;

    move-object/from16 v27, v0

    if-eqz v27, :cond_551

    move-object/from16 v0, v25

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttachedWindow:Lcom/android/server/wm/WindowState;

    move-object/from16 v27, v0

    invoke-virtual/range {v27 .. v27}, Lcom/android/server/wm/WindowState;->isVisibleLw()Z

    move-result v27

    if-eqz v27, :cond_551

    move-object/from16 v0, v25

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    move-object/from16 v27, v0

    move-object/from16 v0, v27

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->multiWindowFlags:I

    move/from16 v27, v0

    move/from16 v0, v27

    and-int/lit16 v0, v0, 0x200

    move/from16 v27, v0

    if-nez v27, :cond_551

    .line 15653
    move-object/from16 v0, v25

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttachedWindow:Lcom/android/server/wm/WindowState;

    move-object/from16 v22, v0

    .line 15658
    .local v22, "target":Lcom/android/server/wm/WindowState;
    :goto_376
    sget-boolean v27, Lcom/samsung/android/multiwindow/MultiWindowFeatures;->SELECTIVE1ORIENTATION_ENABLED:Z

    if-eqz v27, :cond_3f3

    .line 15659
    move-object/from16 v0, v25

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    move-object/from16 v27, v0

    move-object/from16 v0, v27

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    move/from16 v27, v0

    const/16 v28, 0x7d5

    move/from16 v0, v27

    move/from16 v1, v28

    if-ne v0, v1, :cond_3b7

    move-object/from16 v0, v25

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mScaleToastFrameWindow:Lcom/android/server/wm/WindowState;

    move-object/from16 v27, v0

    if-eqz v27, :cond_3b7

    move-object/from16 v0, v25

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mScaleToastFrameWindow:Lcom/android/server/wm/WindowState;

    move-object/from16 v27, v0

    move-object/from16 v0, v27

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    move-object/from16 v27, v0

    if-eqz v27, :cond_3b7

    move-object/from16 v0, v25

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mScaleToastFrameWindow:Lcom/android/server/wm/WindowState;

    move-object/from16 v27, v0

    move-object/from16 v0, v27

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    move-object/from16 v27, v0

    invoke-virtual/range {v27 .. v27}, Lcom/android/server/wm/AppWindowToken;->isSelectiveOrientationStateLocked()Z

    move-result v27

    if-eqz v27, :cond_3b7

    .line 15663
    const/4 v13, 0x1

    .line 15666
    :cond_3b7
    if-nez v13, :cond_3e1

    move-object/from16 v0, v22

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    move-object/from16 v27, v0

    if-eqz v27, :cond_3f3

    move-object/from16 v0, v22

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    move-object/from16 v27, v0

    invoke-virtual/range {v27 .. v27}, Lcom/android/server/wm/AppWindowToken;->isSelectiveOrientationStateLocked()Z

    move-result v27

    if-eqz v27, :cond_3f3

    move-object/from16 v0, v22

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    move-object/from16 v27, v0

    move-object/from16 v0, v27

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->multiWindowFlags:I

    move/from16 v27, v0

    move/from16 v0, v27

    and-int/lit16 v0, v0, 0x200

    move/from16 v27, v0

    if-nez v27, :cond_3f3

    .line 15670
    :cond_3e1
    const/4 v14, 0x1

    .line 15671
    move-object/from16 v0, p0

    iget-object v0, v0, mPolicy:Landroid/view/WindowManagerPolicy;

    move-object/from16 v27, v0

    add-int/lit8 v28, v16, 0x1

    rem-int/lit8 v28, v28, 0x4

    move-object/from16 v0, v27

    move/from16 v1, v28

    invoke-interface {v0, v12, v7, v9, v1}, Landroid/view/WindowManagerPolicy;->beginLayoutLw(ZIII)V

    .line 15677
    :cond_3f3
    if-nez v21, :cond_406

    .line 15679
    move-object/from16 v0, p0

    iget-object v0, v0, mPolicy:Landroid/view/WindowManagerPolicy;

    move-object/from16 v27, v0

    const/16 v28, 0x0

    move-object/from16 v0, v27

    move-object/from16 v1, v25

    move-object/from16 v2, v28

    invoke-interface {v0, v1, v2}, Landroid/view/WindowManagerPolicy;->layoutWindowLw(Landroid/view/WindowManagerPolicy$WindowState;Landroid/view/WindowManagerPolicy$WindowState;)V

    .line 15682
    :cond_406
    if-eqz v14, :cond_415

    .line 15683
    move-object/from16 v0, p0

    iget-object v0, v0, mPolicy:Landroid/view/WindowManagerPolicy;

    move-object/from16 v27, v0

    move-object/from16 v0, v27

    move/from16 v1, v16

    invoke-interface {v0, v12, v9, v7, v1}, Landroid/view/WindowManagerPolicy;->beginLayoutLw(ZIII)V

    .line 15686
    :cond_415
    if-eqz v24, :cond_44f

    invoke-virtual/range {v25 .. v25}, Lcom/android/server/wm/WindowState;->getFrameLw()Landroid/graphics/Rect;

    move-result-object v27

    invoke-virtual/range {v27 .. v27}, Landroid/graphics/Rect;->isEmpty()Z

    move-result v27

    if-nez v27, :cond_44f

    .line 15687
    move-object/from16 v0, p0

    iget-object v0, v0, mMultiWindowCenterBar:Lcom/android/server/wm/WindowState;

    move-object/from16 v27, v0

    invoke-virtual/range {v26 .. v27}, Lcom/android/server/wm/WindowList;->indexOf(Ljava/lang/Object;)I

    move-result v19

    .line 15688
    .local v19, "oldMultiWindowCenterBarPosition":I
    const/16 v27, 0x1

    move-object/from16 v0, p0

    move/from16 v1, v27

    invoke-virtual {v0, v1}, moveMultiWindowCenterBarLocked(Z)Z

    move-result v27

    if-eqz v27, :cond_44f

    .line 15689
    move-object/from16 v0, p0

    iget-object v0, v0, mMultiWindowCenterBar:Lcom/android/server/wm/WindowState;

    move-object/from16 v27, v0

    invoke-virtual/range {v26 .. v27}, Lcom/android/server/wm/WindowList;->indexOf(Ljava/lang/Object;)I

    move-result v18

    .line 15690
    .local v18, "newMultiWindowCenterBarPosition":I
    move/from16 v0, v19

    move/from16 v1, v18

    if-le v0, v1, :cond_44f

    move/from16 v0, v23

    move/from16 v1, v18

    if-lt v0, v1, :cond_44f

    .line 15692
    add-int/lit8 v23, v23, 0x1

    .line 15698
    .end local v18    # "newMultiWindowCenterBarPosition":I
    .end local v19    # "oldMultiWindowCenterBarPosition":I
    :cond_44f
    move/from16 v0, v20

    move-object/from16 v1, v25

    iput v0, v1, Lcom/android/server/wm/WindowState;->mLayoutSeq:I

    .line 15699
    sget-boolean v27, DEBUG_LAYOUT:Z

    if-eqz v27, :cond_4a5

    const-string v27, "WindowManager"

    new-instance v28, Ljava/lang/StringBuilder;

    invoke-direct/range {v28 .. v28}, Ljava/lang/StringBuilder;-><init>()V

    const-string v29, "  LAYOUT: "

    invoke-virtual/range {v28 .. v29}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v28

    move-object/from16 v0, v28

    move-object/from16 v1, v25

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v28

    const-string v29, " mFrame="

    invoke-virtual/range {v28 .. v29}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v28

    move-object/from16 v0, v25

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mFrame:Landroid/graphics/Rect;

    move-object/from16 v29, v0

    invoke-virtual/range {v28 .. v29}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v28

    const-string v29, " mContainingFrame="

    invoke-virtual/range {v28 .. v29}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v28

    move-object/from16 v0, v25

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mContainingFrame:Landroid/graphics/Rect;

    move-object/from16 v29, v0

    invoke-virtual/range {v28 .. v29}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v28

    const-string v29, " mDisplayFrame="

    invoke-virtual/range {v28 .. v29}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v28

    move-object/from16 v0, v25

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mDisplayFrame:Landroid/graphics/Rect;

    move-object/from16 v29, v0

    invoke-virtual/range {v28 .. v29}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v28

    invoke-virtual/range {v28 .. v28}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v28

    invoke-static/range {v27 .. v28}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 15568
    .end local v13    # "isSelectiveToastWin":Z
    .end local v14    # "isSelectivetState":Z
    .end local v22    # "target":Lcom/android/server/wm/WindowState;
    .end local v24    # "updateCenterbarOrder":Z
    :cond_4a5
    :goto_4a5
    add-int/lit8 v11, v11, -0x1

    goto/16 :goto_df

    .line 15574
    .end local v10    # "gone":Z
    .end local v21    # "skipLayout":Z
    :cond_4a9
    const/4 v10, 0x0

    goto/16 :goto_10a

    .line 15583
    .restart local v10    # "gone":Z
    :cond_4ac
    const/16 v21, 0x0

    goto/16 :goto_138

    .line 15594
    .restart local v4    # "atoken":Lcom/android/server/wm/AppWindowToken;
    .restart local v21    # "skipLayout":Z
    :cond_4b0
    const/16 v27, 0x0

    goto/16 :goto_209

    .line 15600
    :cond_4b4
    const-string v28, "WindowManager"

    new-instance v27, Ljava/lang/StringBuilder;

    invoke-direct/range {v27 .. v27}, Ljava/lang/StringBuilder;-><init>()V

    const-string v29, "  VIS: mViewVisibility="

    move-object/from16 v0, v27

    move-object/from16 v1, v29

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v27

    move-object/from16 v0, v25

    iget v0, v0, Lcom/android/server/wm/WindowState;->mViewVisibility:I

    move/from16 v29, v0

    move-object/from16 v0, v27

    move/from16 v1, v29

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v27

    const-string v29, " mRelayoutCalled="

    move-object/from16 v0, v27

    move-object/from16 v1, v29

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v27

    move-object/from16 v0, v25

    iget-boolean v0, v0, Lcom/android/server/wm/WindowState;->mRelayoutCalled:Z

    move/from16 v29, v0

    move-object/from16 v0, v27

    move/from16 v1, v29

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v27

    const-string v29, " hidden="

    move-object/from16 v0, v27

    move-object/from16 v1, v29

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v27

    move-object/from16 v0, v25

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mRootToken:Lcom/android/server/wm/WindowToken;

    move-object/from16 v29, v0

    move-object/from16 v0, v29

    iget-boolean v0, v0, Lcom/android/server/wm/WindowToken;->hidden:Z

    move/from16 v29, v0

    move-object/from16 v0, v27

    move/from16 v1, v29

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v27

    const-string v29, " hiddenRequested="

    move-object/from16 v0, v27

    move-object/from16 v1, v29

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v29

    if-eqz v4, :cond_54a

    iget-boolean v0, v4, Lcom/android/server/wm/AppWindowToken;->hiddenRequested:Z

    move/from16 v27, v0

    if-eqz v27, :cond_54a

    const/16 v27, 0x1

    :goto_51d
    move-object/from16 v0, v29

    move/from16 v1, v27

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v27

    const-string v29, " mAttachedHidden="

    move-object/from16 v0, v27

    move-object/from16 v1, v29

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v27

    move-object/from16 v0, v25

    iget-boolean v0, v0, Lcom/android/server/wm/WindowState;->mAttachedHidden:Z

    move/from16 v29, v0

    move-object/from16 v0, v27

    move/from16 v1, v29

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v27

    invoke-virtual/range {v27 .. v27}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v27

    move-object/from16 v0, v28

    move-object/from16 v1, v27

    invoke-static {v0, v1}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    goto/16 :goto_234

    :cond_54a
    const/16 v27, 0x0

    goto :goto_51d

    .line 15642
    .end local v4    # "atoken":Lcom/android/server/wm/AppWindowToken;
    .restart local v13    # "isSelectiveToastWin":Z
    .restart local v14    # "isSelectivetState":Z
    .restart local v24    # "updateCenterbarOrder":Z
    :cond_54d
    const/16 v24, 0x0

    goto/16 :goto_348

    .line 15655
    :cond_551
    move-object/from16 v22, v25

    .restart local v22    # "target":Lcom/android/server/wm/WindowState;
    goto/16 :goto_376

    .line 15704
    .end local v13    # "isSelectiveToastWin":Z
    .end local v14    # "isSelectivetState":Z
    .end local v22    # "target":Lcom/android/server/wm/WindowState;
    .end local v24    # "updateCenterbarOrder":Z
    :cond_555
    if-gez v23, :cond_4a5

    move/from16 v23, v11

    goto/16 :goto_4a5

    .line 15709
    .end local v10    # "gone":Z
    .end local v21    # "skipLayout":Z
    .end local v25    # "win":Lcom/android/server/wm/WindowState;
    :cond_55b
    const/4 v5, 0x0

    .line 15715
    .local v5, "attachedBehindDream":Z
    move/from16 v11, v23

    :goto_55e
    if-ltz v11, :cond_69c

    .line 15716
    move-object/from16 v0, v26

    invoke-virtual {v0, v11}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v25

    check-cast v25, Lcom/android/server/wm/WindowState;

    .line 15718
    .restart local v25    # "win":Lcom/android/server/wm/WindowState;
    move-object/from16 v0, v25

    iget-boolean v0, v0, Lcom/android/server/wm/WindowState;->mLayoutAttached:Z

    move/from16 v27, v0

    if-eqz v27, :cond_685

    .line 15719
    sget-boolean v27, DEBUG_LAYOUT:Z

    if-eqz v27, :cond_5c0

    const-string v27, "WindowManager"

    new-instance v28, Ljava/lang/StringBuilder;

    invoke-direct/range {v28 .. v28}, Ljava/lang/StringBuilder;-><init>()V

    const-string v29, "2ND PASS "

    invoke-virtual/range {v28 .. v29}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v28

    move-object/from16 v0, v28

    move-object/from16 v1, v25

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v28

    const-string v29, " mHaveFrame="

    invoke-virtual/range {v28 .. v29}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v28

    move-object/from16 v0, v25

    iget-boolean v0, v0, Lcom/android/server/wm/WindowState;->mHaveFrame:Z

    move/from16 v29, v0

    invoke-virtual/range {v28 .. v29}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v28

    const-string v29, " mViewVisibility="

    invoke-virtual/range {v28 .. v29}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v28

    move-object/from16 v0, v25

    iget v0, v0, Lcom/android/server/wm/WindowState;->mViewVisibility:I

    move/from16 v29, v0

    invoke-virtual/range {v28 .. v29}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v28

    const-string v29, " mRelayoutCalled="

    invoke-virtual/range {v28 .. v29}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v28

    move-object/from16 v0, v25

    iget-boolean v0, v0, Lcom/android/server/wm/WindowState;->mRelayoutCalled:Z

    move/from16 v29, v0

    invoke-virtual/range {v28 .. v29}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v28

    invoke-virtual/range {v28 .. v28}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v28

    invoke-static/range {v27 .. v28}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 15728
    :cond_5c0
    if-eqz v5, :cond_5dd

    move-object/from16 v0, p0

    iget-object v0, v0, mPolicy:Landroid/view/WindowManagerPolicy;

    move-object/from16 v27, v0

    move-object/from16 v0, v25

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    move-object/from16 v28, v0

    move-object/from16 v0, v27

    move-object/from16 v1, v25

    move-object/from16 v2, v28

    invoke-interface {v0, v1, v2}, Landroid/view/WindowManagerPolicy;->canBeForceHidden(Landroid/view/WindowManagerPolicy$WindowState;Landroid/view/WindowManager$LayoutParams;)Z

    move-result v27

    if-eqz v27, :cond_5dd

    .line 15715
    :cond_5da
    :goto_5da
    add-int/lit8 v11, v11, -0x1

    goto :goto_55e

    .line 15731
    :cond_5dd
    move-object/from16 v0, v25

    iget v0, v0, Lcom/android/server/wm/WindowState;->mViewVisibility:I

    move/from16 v27, v0

    const/16 v28, 0x8

    move/from16 v0, v27

    move/from16 v1, v28

    if-eq v0, v1, :cond_5f3

    move-object/from16 v0, v25

    iget-boolean v0, v0, Lcom/android/server/wm/WindowState;->mRelayoutCalled:Z

    move/from16 v27, v0

    if-nez v27, :cond_603

    :cond_5f3
    move-object/from16 v0, v25

    iget-boolean v0, v0, Lcom/android/server/wm/WindowState;->mHaveFrame:Z

    move/from16 v27, v0

    if-eqz v27, :cond_603

    move-object/from16 v0, v25

    iget-boolean v0, v0, Lcom/android/server/wm/WindowState;->mLayoutNeeded:Z

    move/from16 v27, v0

    if-eqz v27, :cond_5da

    .line 15733
    :cond_603
    if-eqz p2, :cond_60d

    .line 15735
    const/16 v27, 0x0

    move/from16 v0, v27

    move-object/from16 v1, v25

    iput-boolean v0, v1, Lcom/android/server/wm/WindowState;->mContentChanged:Z

    .line 15737
    :cond_60d
    const/16 v27, 0x0

    move/from16 v0, v27

    move-object/from16 v1, v25

    iput-boolean v0, v1, Lcom/android/server/wm/WindowState;->mLayoutNeeded:Z

    .line 15738
    invoke-virtual/range {v25 .. v25}, Lcom/android/server/wm/WindowState;->prelayout()V

    .line 15739
    move-object/from16 v0, p0

    iget-object v0, v0, mPolicy:Landroid/view/WindowManagerPolicy;

    move-object/from16 v27, v0

    move-object/from16 v0, v25

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttachedWindow:Lcom/android/server/wm/WindowState;

    move-object/from16 v28, v0

    move-object/from16 v0, v27

    move-object/from16 v1, v25

    move-object/from16 v2, v28

    invoke-interface {v0, v1, v2}, Landroid/view/WindowManagerPolicy;->layoutWindowLw(Landroid/view/WindowManagerPolicy$WindowState;Landroid/view/WindowManagerPolicy$WindowState;)V

    .line 15740
    move/from16 v0, v20

    move-object/from16 v1, v25

    iput v0, v1, Lcom/android/server/wm/WindowState;->mLayoutSeq:I

    .line 15741
    sget-boolean v27, DEBUG_LAYOUT:Z

    if-eqz v27, :cond_5da

    const-string v27, "WindowManager"

    new-instance v28, Ljava/lang/StringBuilder;

    invoke-direct/range {v28 .. v28}, Ljava/lang/StringBuilder;-><init>()V

    const-string v29, "  LAYOUT: "

    invoke-virtual/range {v28 .. v29}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v28

    move-object/from16 v0, v28

    move-object/from16 v1, v25

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v28

    const-string v29, " mFrame="

    invoke-virtual/range {v28 .. v29}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v28

    move-object/from16 v0, v25

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mFrame:Landroid/graphics/Rect;

    move-object/from16 v29, v0

    invoke-virtual/range {v28 .. v29}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v28

    const-string v29, " mContainingFrame="

    invoke-virtual/range {v28 .. v29}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v28

    move-object/from16 v0, v25

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mContainingFrame:Landroid/graphics/Rect;

    move-object/from16 v29, v0

    invoke-virtual/range {v28 .. v29}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v28

    const-string v29, " mDisplayFrame="

    invoke-virtual/range {v28 .. v29}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v28

    move-object/from16 v0, v25

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mDisplayFrame:Landroid/graphics/Rect;

    move-object/from16 v29, v0

    invoke-virtual/range {v28 .. v29}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v28

    invoke-virtual/range {v28 .. v28}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v28

    invoke-static/range {v27 .. v28}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    goto/16 :goto_5da

    .line 15746
    :cond_685
    move-object/from16 v0, v25

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    move-object/from16 v27, v0

    move-object/from16 v0, v27

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    move/from16 v27, v0

    const/16 v28, 0x7e7

    move/from16 v0, v27

    move/from16 v1, v28

    if-ne v0, v1, :cond_5da

    .line 15750
    move v5, v6

    goto/16 :goto_5da

    .line 15755
    .end local v25    # "win":Lcom/android/server/wm/WindowState;
    :cond_69c
    move-object/from16 v0, p0

    iget-object v0, v0, mInputMonitor:Lcom/android/server/wm/InputMonitor;

    move-object/from16 v27, v0

    invoke-virtual/range {v27 .. v27}, Lcom/android/server/wm/InputMonitor;->setUpdateInputWindowsNeededLw()V

    .line 15756
    if-eqz p3, :cond_6b2

    .line 15757
    move-object/from16 v0, p0

    iget-object v0, v0, mInputMonitor:Lcom/android/server/wm/InputMonitor;

    move-object/from16 v27, v0

    const/16 v28, 0x0

    invoke-virtual/range {v27 .. v28}, Lcom/android/server/wm/InputMonitor;->updateInputWindowsLw(Z)V

    .line 15760
    :cond_6b2
    move-object/from16 v0, p0

    iget-object v0, v0, mPolicy:Landroid/view/WindowManagerPolicy;

    move-object/from16 v27, v0

    invoke-interface/range {v27 .. v27}, Landroid/view/WindowManagerPolicy;->finishLayoutLw()V

    goto/16 :goto_8
.end method

.method private placeWindowAfter(Lcom/android/server/wm/WindowState;Lcom/android/server/wm/WindowState;)V
    .registers 8
    .param p1, "pos"    # Lcom/android/server/wm/WindowState;
    .param p2, "window"    # Lcom/android/server/wm/WindowState;

    .prologue
    .line 1862
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->getWindowList()Lcom/android/server/wm/WindowList;

    move-result-object v1

    .line 1863
    .local v1, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual {v1, p1}, Lcom/android/server/wm/WindowList;->indexOf(Ljava/lang/Object;)I

    move-result v0

    .line 1864
    .local v0, "i":I
    sget-boolean v2, DEBUG_FOCUS:Z

    if-nez v2, :cond_14

    sget-boolean v2, DEBUG_WINDOW_MOVEMENT:Z

    if-nez v2, :cond_14

    sget-boolean v2, DEBUG_ADD_REMOVE:Z

    if-eqz v2, :cond_56

    :cond_14
    const-string v2, "WindowManager"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "Adding window "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v3

    const-string v4, " at "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    add-int/lit8 v4, v0, 0x1

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v3

    const-string v4, " of "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v1}, Lcom/android/server/wm/WindowList;->size()I

    move-result v4

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v3

    const-string v4, " (after "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v3

    const-string v4, ")"

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 1867
    :cond_56
    add-int/lit8 v2, v0, 0x1

    invoke-virtual {v1, v2, p2}, Lcom/android/server/wm/WindowList;->add(ILjava/lang/Object;)V

    .line 1868
    const/4 v2, 0x1

    iput-boolean v2, p0, mWindowsChanged:Z

    .line 1869
    return-void
.end method

.method private placeWindowBefore(Lcom/android/server/wm/WindowState;Lcom/android/server/wm/WindowState;)V
    .registers 8
    .param p1, "pos"    # Lcom/android/server/wm/WindowState;
    .param p2, "window"    # Lcom/android/server/wm/WindowState;

    .prologue
    .line 1872
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->getWindowList()Lcom/android/server/wm/WindowList;

    move-result-object v1

    .line 1873
    .local v1, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual {v1, p1}, Lcom/android/server/wm/WindowList;->indexOf(Ljava/lang/Object;)I

    move-result v0

    .line 1874
    .local v0, "i":I
    sget-boolean v2, DEBUG_FOCUS:Z

    if-nez v2, :cond_14

    sget-boolean v2, DEBUG_WINDOW_MOVEMENT:Z

    if-nez v2, :cond_14

    sget-boolean v2, DEBUG_ADD_REMOVE:Z

    if-eqz v2, :cond_54

    :cond_14
    const-string v2, "WindowManager"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "Adding window "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v3

    const-string v4, " at "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v3

    const-string v4, " of "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v1}, Lcom/android/server/wm/WindowList;->size()I

    move-result v4

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v3

    const-string v4, " (before "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v3

    const-string v4, ")"

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 1877
    :cond_54
    if-gez v0, :cond_7a

    .line 1878
    const-string v2, "WindowManager"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v4, "placeWindowBefore: Unable to find "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v3

    const-string v4, " in "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 1879
    const/4 v0, 0x0

    .line 1881
    :cond_7a
    invoke-virtual {v1, v0, p2}, Lcom/android/server/wm/WindowList;->add(ILjava/lang/Object;)V

    .line 1882
    const/4 v2, 0x1

    iput-boolean v2, p0, mWindowsChanged:Z

    .line 1883
    return-void
.end method

.method private prepareMultiWindowTransitionLocked(Ljava/util/ArrayList;I)V
    .registers 4
    .param p2, "transit"    # I
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/util/ArrayList",
            "<",
            "Lcom/android/server/wm/AppWindowToken;",
            ">;I)V"
        }
    .end annotation

    .prologue
    .line 21227
    .local p1, "targetTokens":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/AppWindowToken;>;"
    const/4 v0, 0x0

    invoke-direct {p0, p1, p2, v0}, prepareMultiWindowTransitionLocked(Ljava/util/ArrayList;II)V

    .line 21228
    return-void
.end method

.method private prepareMultiWindowTransitionLocked(Ljava/util/ArrayList;II)V
    .registers 15
    .param p2, "transit"    # I
    .param p3, "displayId"    # I
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/util/ArrayList",
            "<",
            "Lcom/android/server/wm/AppWindowToken;",
            ">;II)V"
        }
    .end annotation

    .prologue
    .local p1, "targetTokens":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/AppWindowToken;>;"
    const/4 v10, 0x3

    const/4 v8, 0x1

    .line 21232
    iget v7, p0, mWindowsFreezingScreen:I

    if-ne v7, v8, :cond_f

    .line 21233
    const-string v7, "WindowManager"

    const-string/jumbo v8, "prepareMultiWindowTransitionLocked : Other window animation is already running.. skip "

    invoke-static {v7, v8}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 21283
    :cond_e
    :goto_e
    return-void

    .line 21236
    :cond_f
    if-eqz p1, :cond_17

    invoke-virtual {p1}, Ljava/util/ArrayList;->isEmpty()Z

    move-result v7

    if-eqz v7, :cond_24

    .line 21237
    :cond_17
    sget-boolean v7, DEBUG_APP_TRANSITIONS:Z

    if-eqz v7, :cond_e

    const-string v7, "WindowManager"

    const-string/jumbo v8, "prepareMultiWindowTransitionLocked : requested target is not avilable"

    invoke-static {v7, v8}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_e

    .line 21251
    :cond_24
    invoke-virtual {p0, p3}, getMultiWindowTransitionLocked(I)Lcom/android/server/wm/MultiWindowTransition;

    move-result-object v4

    .line 21252
    .local v4, "transition":Lcom/android/server/wm/MultiWindowTransition;
    invoke-virtual {v4}, Lcom/android/server/wm/MultiWindowTransition;->isTranitRunning()Z

    move-result v7

    if-nez v7, :cond_3a

    invoke-virtual {v4}, Lcom/android/server/wm/MultiWindowTransition;->isTransitReady()Z

    move-result v7

    if-nez v7, :cond_3a

    invoke-virtual {v4}, Lcom/android/server/wm/MultiWindowTransition;->isAnimating()Z

    move-result v7

    if-eqz v7, :cond_4d

    .line 21253
    :cond_3a
    invoke-virtual {v4}, Lcom/android/server/wm/MultiWindowTransition;->isTransitionSet()Z

    move-result v7

    if-eqz v7, :cond_4d

    .line 21254
    sget-boolean v7, DEBUG_APP_TRANSITIONS:Z

    if-eqz v7, :cond_e

    const-string v7, "WindowManager"

    const-string/jumbo v8, "prepareMultiWindowTransitionLocked : transition is already running.. skip request"

    invoke-static {v7, v8}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_e

    .line 21258
    :cond_4d
    if-eq p2, v8, :cond_51

    if-ne p2, v10, :cond_c5

    .line 21261
    :cond_51
    new-instance v5, Ljava/util/ArrayList;

    invoke-direct {v5}, Ljava/util/ArrayList;-><init>()V

    .line 21262
    .local v5, "visibleTokens":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/AppWindowToken;>;"
    invoke-virtual {p1}, Ljava/util/ArrayList;->iterator()Ljava/util/Iterator;

    move-result-object v0

    :cond_5a
    :goto_5a
    invoke-interface {v0}, Ljava/util/Iterator;->hasNext()Z

    move-result v7

    if-eqz v7, :cond_86

    invoke-interface {v0}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/wm/AppWindowToken;

    .line 21263
    .local v3, "token":Lcom/android/server/wm/AppWindowToken;
    iget-object v7, v3, Lcom/android/server/wm/AppWindowToken;->windows:Lcom/android/server/wm/WindowList;

    invoke-virtual {v7}, Lcom/android/server/wm/WindowList;->iterator()Ljava/util/Iterator;

    move-result-object v1

    .local v1, "i$":Ljava/util/Iterator;
    :cond_6c
    invoke-interface {v1}, Ljava/util/Iterator;->hasNext()Z

    move-result v7

    if-eqz v7, :cond_5a

    invoke-interface {v1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Lcom/android/server/wm/WindowState;

    .line 21264
    .local v6, "win":Lcom/android/server/wm/WindowState;
    invoke-virtual {v6}, Lcom/android/server/wm/WindowState;->isVisibleLw()Z

    move-result v7

    if-eqz v7, :cond_6c

    iget-object v7, v6, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    if-eqz v7, :cond_6c

    .line 21265
    invoke-virtual {v5, v3}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    goto :goto_5a

    .line 21270
    .end local v1    # "i$":Ljava/util/Iterator;
    .end local v3    # "token":Lcom/android/server/wm/AppWindowToken;
    .end local v6    # "win":Lcom/android/server/wm/WindowState;
    :cond_86
    move-object p1, v5

    .line 21277
    .end local v5    # "visibleTokens":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/AppWindowToken;>;"
    :cond_87
    invoke-virtual {v4, p1, p2}, Lcom/android/server/wm/MultiWindowTransition;->setMultiWindowTransition(Ljava/util/ArrayList;I)Ljava/util/ArrayList;

    move-result-object v2

    .line 21279
    .local v2, "registeredTokens":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/AppWindowToken;>;"
    sget-boolean v7, DEBUG_APP_TRANSITIONS:Z

    if-eqz v7, :cond_c0

    const-string v7, "WindowManager"

    new-instance v8, Ljava/lang/StringBuilder;

    invoke-direct {v8}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v9, "prepareMultiWindowTransitionLocked: transit="

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v8

    invoke-virtual {v8, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v8

    const-string v9, " for "

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v8

    invoke-virtual {v8, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v8

    const-string v9, " Callers="

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v8

    invoke-static {v10}, Landroid/os/Debug;->getCallers(I)Ljava/lang/String;

    move-result-object v9

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v8

    invoke-virtual {v8}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v8

    invoke-static {v7, v8}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 21282
    :cond_c0
    invoke-direct {p0, v2, p3}, requestMultiWindowTransitionTargetDrawnIfNeededLocked(Ljava/util/ArrayList;I)V

    goto/16 :goto_e

    .line 21271
    .end local v2    # "registeredTokens":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/AppWindowToken;>;"
    :cond_c5
    const/16 v7, 0x15

    if-eq p2, v7, :cond_cd

    const/16 v7, 0xa

    if-ne p2, v7, :cond_87

    .line 21272
    :cond_cd
    invoke-virtual {p1}, Ljava/util/ArrayList;->iterator()Ljava/util/Iterator;

    move-result-object v0

    .local v0, "i$":Ljava/util/Iterator;
    :goto_d1
    invoke-interface {v0}, Ljava/util/Iterator;->hasNext()Z

    move-result v7

    if-eqz v7, :cond_87

    invoke-interface {v0}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/wm/AppWindowToken;

    .line 21273
    .restart local v3    # "token":Lcom/android/server/wm/AppWindowToken;
    const/4 v7, 0x0

    iput-boolean v7, v3, Lcom/android/server/wm/AppWindowToken;->allDrawn:Z

    .line 21274
    iput-boolean v8, v3, Lcom/android/server/wm/AppWindowToken;->mWaitingForMaximizeAnim:Z

    goto :goto_d1
.end method

.method private final reAddAppWindowsLocked(Lcom/android/server/wm/DisplayContent;ILcom/android/server/wm/WindowToken;)I
    .registers 5
    .param p1, "displayContent"    # Lcom/android/server/wm/DisplayContent;
    .param p2, "index"    # I
    .param p3, "token"    # Lcom/android/server/wm/WindowToken;

    .prologue
    .line 9036
    const/4 v0, 0x0

    invoke-direct {p0, p1, p2, p3, v0}, reAddAppWindowsLocked(Lcom/android/server/wm/DisplayContent;ILcom/android/server/wm/WindowToken;Lcom/android/server/wm/WindowList;)I

    move-result v0

    return v0
.end method

.method private final reAddAppWindowsLocked(Lcom/android/server/wm/DisplayContent;ILcom/android/server/wm/WindowToken;Lcom/android/server/wm/WindowList;)I
    .registers 10
    .param p1, "displayContent"    # Lcom/android/server/wm/DisplayContent;
    .param p2, "index"    # I
    .param p3, "token"    # Lcom/android/server/wm/WindowToken;
    .param p4, "targetWindowList"    # Lcom/android/server/wm/WindowList;

    .prologue
    .line 9042
    iget-object v4, p3, Lcom/android/server/wm/WindowToken;->windows:Lcom/android/server/wm/WindowList;

    invoke-virtual {v4}, Lcom/android/server/wm/WindowList;->size()I

    move-result v0

    .line 9043
    .local v0, "NW":I
    const/4 v1, 0x0

    .local v1, "i":I
    :goto_7
    if-ge v1, v0, :cond_27

    .line 9044
    iget-object v4, p3, Lcom/android/server/wm/WindowToken;->windows:Lcom/android/server/wm/WindowList;

    invoke-virtual {v4, v1}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/wm/WindowState;

    .line 9045
    .local v2, "win":Lcom/android/server/wm/WindowState;
    invoke-virtual {v2}, Lcom/android/server/wm/WindowState;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    move-result-object v3

    .line 9046
    .local v3, "winDisplayContent":Lcom/android/server/wm/DisplayContent;
    if-eq v3, p1, :cond_1c

    if-eqz v3, :cond_1c

    .line 9043
    :goto_19
    add-int/lit8 v1, v1, 0x1

    goto :goto_7

    .line 9047
    :cond_1c
    iget-boolean v4, v2, Lcom/android/server/wm/WindowState;->mKeptStartingWindowToCurrentDisplay:Z

    if-nez v4, :cond_22

    .line 9048
    iput-object p1, v2, Lcom/android/server/wm/WindowState;->mDisplayContent:Lcom/android/server/wm/DisplayContent;

    .line 9050
    :cond_22
    invoke-direct {p0, p2, v2, p4}, reAddWindowLocked(ILcom/android/server/wm/WindowState;Lcom/android/server/wm/WindowList;)I

    move-result p2

    goto :goto_19

    .line 9053
    .end local v2    # "win":Lcom/android/server/wm/WindowState;
    .end local v3    # "winDisplayContent":Lcom/android/server/wm/DisplayContent;
    :cond_27
    return p2
.end method

.method private final reAddWindowLocked(ILcom/android/server/wm/WindowState;)I
    .registers 4
    .param p1, "index"    # I
    .param p2, "win"    # Lcom/android/server/wm/WindowState;

    .prologue
    .line 8989
    const/4 v0, 0x0

    invoke-direct {p0, p1, p2, v0}, reAddWindowLocked(ILcom/android/server/wm/WindowState;Lcom/android/server/wm/WindowList;)I

    move-result v0

    return v0
.end method

.method private final reAddWindowLocked(ILcom/android/server/wm/WindowState;Lcom/android/server/wm/WindowList;)I
    .registers 13
    .param p1, "index"    # I
    .param p2, "win"    # Lcom/android/server/wm/WindowState;
    .param p3, "targetWindowList"    # Lcom/android/server/wm/WindowList;

    .prologue
    const/4 v8, 0x0

    .line 8998
    invoke-virtual {p2}, Lcom/android/server/wm/WindowState;->getWindowList()Lcom/android/server/wm/WindowList;

    move-result-object v4

    .line 8999
    .local v4, "windows":Lcom/android/server/wm/WindowList;
    iget-object v5, p2, Lcom/android/server/wm/WindowState;->mChildWindows:Lcom/android/server/wm/WindowList;

    invoke-virtual {v5}, Lcom/android/server/wm/WindowList;->size()I

    move-result v0

    .line 9000
    .local v0, "NCW":I
    const/4 v3, 0x0

    .line 9001
    .local v3, "winAdded":Z
    const/4 v2, 0x0

    .local v2, "j":I
    :goto_d
    if-ge v2, v0, :cond_7b

    .line 9002
    iget-object v5, p2, Lcom/android/server/wm/WindowState;->mChildWindows:Lcom/android/server/wm/WindowList;

    invoke-virtual {v5, v2}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/wm/WindowState;

    .line 9003
    .local v1, "cwin":Lcom/android/server/wm/WindowState;
    if-nez v3, :cond_4b

    iget v5, v1, Lcom/android/server/wm/WindowState;->mSubLayer:I

    if-ltz v5, :cond_4b

    .line 9004
    sget-boolean v5, DEBUG_WINDOW_MOVEMENT:Z

    if-eqz v5, :cond_43

    const-string v5, "WindowManager"

    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "Re-adding child window at "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v6

    const-string v7, ": "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-static {v5, v6}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 9006
    :cond_43
    iput-boolean v8, p2, Lcom/android/server/wm/WindowState;->mRebuilding:Z

    .line 9007
    invoke-virtual {v4, p1, p2}, Lcom/android/server/wm/WindowList;->add(ILjava/lang/Object;)V

    .line 9008
    add-int/lit8 p1, p1, 0x1

    .line 9009
    const/4 v3, 0x1

    .line 9011
    :cond_4b
    sget-boolean v5, DEBUG_WINDOW_MOVEMENT:Z

    if-eqz v5, :cond_71

    const-string v5, "WindowManager"

    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "Re-adding window at "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v6

    const-string v7, ": "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-static {v5, v6}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 9013
    :cond_71
    iput-boolean v8, v1, Lcom/android/server/wm/WindowState;->mRebuilding:Z

    .line 9014
    invoke-virtual {v4, p1, v1}, Lcom/android/server/wm/WindowList;->add(ILjava/lang/Object;)V

    .line 9015
    add-int/lit8 p1, p1, 0x1

    .line 9001
    add-int/lit8 v2, v2, 0x1

    goto :goto_d

    .line 9017
    .end local v1    # "cwin":Lcom/android/server/wm/WindowState;
    :cond_7b
    if-nez v3, :cond_aa

    .line 9018
    sget-boolean v5, DEBUG_WINDOW_MOVEMENT:Z

    if-eqz v5, :cond_a3

    const-string v5, "WindowManager"

    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "Re-adding window at "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v6

    const-string v7, ": "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-static {v5, v6}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 9020
    :cond_a3
    iput-boolean v8, p2, Lcom/android/server/wm/WindowState;->mRebuilding:Z

    .line 9021
    invoke-virtual {v4, p1, p2}, Lcom/android/server/wm/WindowList;->add(ILjava/lang/Object;)V

    .line 9022
    add-int/lit8 p1, p1, 0x1

    .line 9027
    :cond_aa
    const/4 v5, 0x1

    iput-boolean v5, p0, mWindowsChanged:Z

    .line 9030
    return p1
.end method

.method private reAddWindowToListInOrderLocked(Lcom/android/server/wm/WindowState;)V
    .registers 7
    .param p1, "win"    # Lcom/android/server/wm/WindowState;

    .prologue
    .line 2713
    const/4 v2, 0x0

    invoke-direct {p0, p1, v2}, addWindowToListInOrderLocked(Lcom/android/server/wm/WindowState;Z)V

    .line 2717
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->getWindowList()Lcom/android/server/wm/WindowList;

    move-result-object v0

    .line 2718
    .local v0, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual {v0, p1}, Lcom/android/server/wm/WindowList;->indexOf(Ljava/lang/Object;)I

    move-result v1

    .line 2719
    .local v1, "wpos":I
    if-ltz v1, :cond_3d

    .line 2720
    sget-boolean v2, DEBUG_WINDOW_MOVEMENT:Z

    if-eqz v2, :cond_34

    const-string v2, "WindowManager"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "ReAdd removing from "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v3

    const-string v4, ": "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 2721
    :cond_34
    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowList;->remove(I)Ljava/lang/Object;

    .line 2722
    const/4 v2, 0x1

    iput-boolean v2, p0, mWindowsChanged:Z

    .line 2723
    invoke-direct {p0, v1, p1}, reAddWindowLocked(ILcom/android/server/wm/WindowState;)I

    .line 2725
    :cond_3d
    return-void
.end method

.method private reArrangeAppWindowTokenForCocktailWindow(Lcom/android/server/wm/AppWindowToken;Lcom/android/server/wm/DisplayContent;)V
    .registers 17
    .param p1, "appWindowToken"    # Lcom/android/server/wm/AppWindowToken;
    .param p2, "displayContent"    # Lcom/android/server/wm/DisplayContent;

    .prologue
    const/high16 v13, 0x20000000

    .line 15210
    invoke-virtual/range {p2 .. p2}, Lcom/android/server/wm/DisplayContent;->getWindowList()Lcom/android/server/wm/WindowList;

    move-result-object v10

    .line 15211
    .local v10, "windowList":Lcom/android/server/wm/WindowList;
    iget-object v11, p1, Lcom/android/server/wm/AppWindowToken;->windows:Lcom/android/server/wm/WindowList;

    invoke-virtual {v11}, Lcom/android/server/wm/WindowList;->size()I

    move-result v1

    .line 15212
    .local v1, "NW":I
    const/4 v4, 0x0

    .local v4, "i":I
    :goto_d
    if-ge v4, v1, :cond_73

    .line 15213
    iget-object v11, p1, Lcom/android/server/wm/AppWindowToken;->windows:Lcom/android/server/wm/WindowList;

    invoke-virtual {v11, v4}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v9

    check-cast v9, Lcom/android/server/wm/WindowState;

    .line 15215
    .local v9, "win":Lcom/android/server/wm/WindowState;
    iget-object v11, v9, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v11, v11, Landroid/view/WindowManager$LayoutParams;->type:I

    const/16 v12, 0x62

    if-ne v11, v12, :cond_83

    iget-object v11, v9, Lcom/android/server/wm/WindowState;->mDisplayContent:Lcom/android/server/wm/DisplayContent;

    move-object/from16 v0, p2

    if-ne v11, v0, :cond_83

    .line 15216
    invoke-virtual {v10, v9}, Lcom/android/server/wm/WindowList;->indexOf(Ljava/lang/Object;)I

    move-result v2

    .line 15217
    .local v2, "cocktailWindowIndex":I
    const/4 v8, 0x0

    .line 15221
    .local v8, "targetWindow":Lcom/android/server/wm/WindowState;
    add-int/lit8 v11, v2, -0x1

    :try_start_2c
    invoke-virtual {v10, v11}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v8

    .end local v8    # "targetWindow":Lcom/android/server/wm/WindowState;
    check-cast v8, Lcom/android/server/wm/WindowState;
    :try_end_32
    .catch Ljava/lang/Exception; {:try_start_2c .. :try_end_32} :catch_74

    .line 15228
    .restart local v8    # "targetWindow":Lcom/android/server/wm/WindowState;
    iget-object v11, v8, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v11, v11, Landroid/view/WindowManager$LayoutParams;->samsungFlags:I

    and-int/2addr v11, v13

    if-nez v11, :cond_73

    .line 15230
    const/4 v6, 0x0

    .line 15233
    .local v6, "pos":Lcom/android/server/wm/WindowState;
    add-int/lit8 v5, v2, -0x2

    .local v5, "j":I
    :goto_3c
    if-ltz v5, :cond_4d

    .line 15234
    :try_start_3e
    invoke-virtual {v10, v5}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v11

    move-object v0, v11

    check-cast v0, Lcom/android/server/wm/WindowState;

    move-object v6, v0

    .line 15235
    iget-object v11, v6, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v11, v11, Landroid/view/WindowManager$LayoutParams;->samsungFlags:I
    :try_end_4a
    .catch Ljava/lang/Exception; {:try_start_3e .. :try_end_4a} :catch_7d

    and-int/2addr v11, v13

    if-eqz v11, :cond_79

    .line 15246
    :cond_4d
    :goto_4d
    if-eqz v6, :cond_73

    .line 15247
    invoke-virtual {v10, v9}, Lcom/android/server/wm/WindowList;->remove(Ljava/lang/Object;)Z

    .line 15248
    invoke-direct {p0, v6, v9}, placeWindowAfter(Lcom/android/server/wm/WindowState;Lcom/android/server/wm/WindowState;)V

    .line 15250
    iget-object v11, v9, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    if-eqz v11, :cond_73

    .line 15251
    iget-object v11, v9, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    iget-object v11, v11, Lcom/android/server/wm/AppWindowToken;->windows:Lcom/android/server/wm/WindowList;

    invoke-virtual {v11, v6}, Lcom/android/server/wm/WindowList;->lastIndexOf(Ljava/lang/Object;)I

    move-result v7

    .line 15252
    .local v7, "posIndex":I
    if-ltz v7, :cond_73

    .line 15253
    iget-object v11, v9, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    iget-object v11, v11, Lcom/android/server/wm/AppWindowToken;->windows:Lcom/android/server/wm/WindowList;

    invoke-virtual {v11, v9}, Lcom/android/server/wm/WindowList;->remove(Ljava/lang/Object;)Z

    .line 15254
    iget-object v11, v9, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    iget-object v11, v11, Lcom/android/server/wm/AppWindowToken;->windows:Lcom/android/server/wm/WindowList;

    add-int/lit8 v12, v7, 0x1

    invoke-virtual {v11, v12, v9}, Lcom/android/server/wm/WindowList;->add(ILjava/lang/Object;)V

    .line 15262
    .end local v2    # "cocktailWindowIndex":I
    .end local v5    # "j":I
    .end local v6    # "pos":Lcom/android/server/wm/WindowState;
    .end local v7    # "posIndex":I
    .end local v8    # "targetWindow":Lcom/android/server/wm/WindowState;
    .end local v9    # "win":Lcom/android/server/wm/WindowState;
    :cond_73
    :goto_73
    return-void

    .line 15222
    .restart local v2    # "cocktailWindowIndex":I
    .restart local v9    # "win":Lcom/android/server/wm/WindowState;
    :catch_74
    move-exception v3

    .line 15223
    .local v3, "e":Ljava/lang/Exception;
    invoke-virtual {v3}, Ljava/lang/Exception;->printStackTrace()V

    goto :goto_73

    .line 15238
    .end local v3    # "e":Ljava/lang/Exception;
    .restart local v5    # "j":I
    .restart local v6    # "pos":Lcom/android/server/wm/WindowState;
    .restart local v8    # "targetWindow":Lcom/android/server/wm/WindowState;
    :cond_79
    const/4 v6, 0x0

    .line 15233
    add-int/lit8 v5, v5, -0x1

    goto :goto_3c

    .line 15240
    :catch_7d
    move-exception v3

    .line 15241
    .restart local v3    # "e":Ljava/lang/Exception;
    invoke-virtual {v3}, Ljava/lang/Exception;->printStackTrace()V

    .line 15242
    const/4 v6, 0x0

    goto :goto_4d

    .line 15212
    .end local v2    # "cocktailWindowIndex":I
    .end local v3    # "e":Ljava/lang/Exception;
    .end local v5    # "j":I
    .end local v6    # "pos":Lcom/android/server/wm/WindowState;
    .end local v8    # "targetWindow":Lcom/android/server/wm/WindowState;
    :cond_83
    add-int/lit8 v4, v4, 0x1

    goto :goto_d
.end method

.method private reArrangeWindowListForCockatilWindow(Lcom/android/server/wm/WindowState;)V
    .registers 15
    .param p1, "win"    # Lcom/android/server/wm/WindowState;

    .prologue
    const/high16 v12, 0x20000000

    .line 15170
    const/4 v4, 0x0

    .line 15172
    .local v4, "targetAppWindowToken":Lcom/android/server/wm/AppWindowToken;
    const/4 v1, 0x0

    .line 15173
    .local v1, "needRearrange":Z
    if-eqz p1, :cond_2c

    .line 15174
    iget-object v10, p1, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v10, v10, Landroid/view/WindowManager$LayoutParams;->type:I

    const/16 v11, 0x62

    if-ne v10, v11, :cond_14

    .line 15175
    const/4 v1, 0x1

    .line 15181
    :cond_f
    :goto_f
    iget-object v4, p1, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    .line 15185
    :goto_11
    if-nez v1, :cond_2e

    .line 15206
    :cond_13
    :goto_13
    return-void

    .line 15176
    :cond_14
    iget-object v10, p1, Lcom/android/server/wm/WindowState;->mAttachedWindow:Lcom/android/server/wm/WindowState;

    if-eqz v10, :cond_23

    iget-object v10, p1, Lcom/android/server/wm/WindowState;->mAttachedWindow:Lcom/android/server/wm/WindowState;

    iget-object v10, v10, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v10, v10, Landroid/view/WindowManager$LayoutParams;->samsungFlags:I

    and-int/2addr v10, v12

    if-eqz v10, :cond_23

    .line 15177
    const/4 v1, 0x1

    goto :goto_f

    .line 15178
    :cond_23
    iget-object v10, p1, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v10, v10, Landroid/view/WindowManager$LayoutParams;->samsungFlags:I

    and-int/2addr v10, v12

    if-eqz v10, :cond_f

    .line 15179
    const/4 v1, 0x1

    goto :goto_f

    .line 15183
    :cond_2c
    const/4 v1, 0x1

    goto :goto_11

    .line 15189
    :cond_2e
    invoke-virtual {p0}, getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v0

    .line 15190
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-eqz v4, :cond_38

    .line 15191
    invoke-direct {p0, v4, v0}, reArrangeAppWindowTokenForCocktailWindow(Lcom/android/server/wm/AppWindowToken;Lcom/android/server/wm/DisplayContent;)V

    goto :goto_13

    .line 15193
    :cond_38
    invoke-virtual {v0}, Lcom/android/server/wm/DisplayContent;->getTasks()Ljava/util/ArrayList;

    move-result-object v6

    .line 15194
    .local v6, "tasks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/Task;>;"
    invoke-virtual {v6}, Ljava/util/ArrayList;->size()I

    move-result v2

    .line 15195
    .local v2, "numTasks":I
    const/4 v5, 0x0

    .local v5, "taskNdx":I
    :goto_41
    if-ge v5, v2, :cond_13

    .line 15196
    invoke-virtual {v6, v5}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v10

    check-cast v10, Lcom/android/server/wm/Task;

    iget-object v8, v10, Lcom/android/server/wm/Task;->mAppTokens:Lcom/android/server/wm/AppTokenList;

    .line 15197
    .local v8, "tokens":Lcom/android/server/wm/AppTokenList;
    invoke-virtual {v8}, Lcom/android/server/wm/AppTokenList;->size()I

    move-result v3

    .line 15198
    .local v3, "numTokens":I
    const/4 v7, 0x0

    .local v7, "tokenNdx":I
    :goto_50
    if-ge v7, v3, :cond_64

    .line 15199
    invoke-virtual {v8, v7}, Lcom/android/server/wm/AppTokenList;->get(I)Ljava/lang/Object;

    move-result-object v9

    check-cast v9, Lcom/android/server/wm/AppWindowToken;

    .line 15200
    .local v9, "wtoken":Lcom/android/server/wm/AppWindowToken;
    invoke-virtual {v9}, Lcom/android/server/wm/AppWindowToken;->isVisible()Z

    move-result v10

    if-eqz v10, :cond_61

    .line 15201
    invoke-direct {p0, v9, v0}, reArrangeAppWindowTokenForCocktailWindow(Lcom/android/server/wm/AppWindowToken;Lcom/android/server/wm/DisplayContent;)V

    .line 15198
    :cond_61
    add-int/lit8 v7, v7, 0x1

    goto :goto_50

    .line 15195
    .end local v9    # "wtoken":Lcom/android/server/wm/AppWindowToken;
    :cond_64
    add-int/lit8 v5, v5, 0x1

    goto :goto_41
.end method

.method private readForcedDisplayPropertiesLocked(Lcom/android/server/wm/DisplayContent;)V
    .registers 15
    .param p1, "displayContent"    # Lcom/android/server/wm/DisplayContent;

    .prologue
    const/4 v12, 0x0

    const/16 v9, 0x2c

    const/4 v11, 0x0

    .line 14485
    iget-object v7, p0, mContext:Landroid/content/Context;

    invoke-virtual {v7}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v7

    const-string/jumbo v8, "display_size_forced"

    invoke-static {v7, v8}, Landroid/provider/Settings$Global;->getString(Landroid/content/ContentResolver;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v5

    .line 14487
    .local v5, "sizeStr":Ljava/lang/String;
    if-eqz v5, :cond_19

    invoke-virtual {v5}, Ljava/lang/String;->length()I

    move-result v7

    if-nez v7, :cond_20

    .line 14488
    :cond_19
    const-string/jumbo v7, "ro.config.size_override"

    invoke-static {v7, v12}, Landroid/os/SystemProperties;->get(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v5

    .line 14490
    :cond_20
    if-eqz v5, :cond_7a

    invoke-virtual {v5}, Ljava/lang/String;->length()I

    move-result v7

    if-lez v7, :cond_7a

    .line 14491
    invoke-virtual {v5, v9}, Ljava/lang/String;->indexOf(I)I

    move-result v4

    .line 14492
    .local v4, "pos":I
    if-lez v4, :cond_7a

    invoke-virtual {v5, v9}, Ljava/lang/String;->lastIndexOf(I)I

    move-result v7

    if-ne v7, v4, :cond_7a

    .line 14495
    const/4 v7, 0x0

    :try_start_35
    invoke-virtual {v5, v7, v4}, Ljava/lang/String;->substring(II)Ljava/lang/String;

    move-result-object v7

    invoke-static {v7}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;)I

    move-result v6

    .line 14496
    .local v6, "width":I
    add-int/lit8 v7, v4, 0x1

    invoke-virtual {v5, v7}, Ljava/lang/String;->substring(I)Ljava/lang/String;

    move-result-object v7

    invoke-static {v7}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;)I

    move-result v2

    .line 14497
    .local v2, "height":I
    iget-object v8, p1, Lcom/android/server/wm/DisplayContent;->mDisplaySizeLock:Ljava/lang/Object;

    monitor-enter v8
    :try_end_4a
    .catch Ljava/lang/NumberFormatException; {:try_start_35 .. :try_end_4a} :catch_e5

    .line 14498
    :try_start_4a
    iget v7, p1, Lcom/android/server/wm/DisplayContent;->mBaseDisplayWidth:I

    if-ne v7, v6, :cond_52

    iget v7, p1, Lcom/android/server/wm/DisplayContent;->mBaseDisplayHeight:I

    if-eq v7, v2, :cond_79

    .line 14500
    :cond_52
    const-string v7, "WindowManager"

    new-instance v9, Ljava/lang/StringBuilder;

    invoke-direct {v9}, Ljava/lang/StringBuilder;-><init>()V

    const-string v10, "FORCED DISPLAY SIZE: "

    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v9

    invoke-virtual {v9, v6}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v9

    const-string/jumbo v10, "x"

    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v9

    invoke-virtual {v9, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v9

    invoke-virtual {v9}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v9

    invoke-static {v7, v9}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 14501
    iput v6, p1, Lcom/android/server/wm/DisplayContent;->mBaseDisplayWidth:I

    .line 14502
    iput v2, p1, Lcom/android/server/wm/DisplayContent;->mBaseDisplayHeight:I

    .line 14504
    :cond_79
    monitor-exit v8
    :try_end_7a
    .catchall {:try_start_4a .. :try_end_7a} :catchall_e2

    .line 14511
    .end local v2    # "height":I
    .end local v4    # "pos":I
    .end local v6    # "width":I
    :cond_7a
    :goto_7a
    iget-object v7, p0, mContext:Landroid/content/Context;

    invoke-virtual {v7}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v7

    const-string/jumbo v8, "display_density_forced"

    invoke-static {v7, v8}, Landroid/provider/Settings$Global;->getString(Landroid/content/ContentResolver;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v1

    .line 14513
    .local v1, "densityStr":Ljava/lang/String;
    if-eqz v1, :cond_8f

    invoke-virtual {v1}, Ljava/lang/String;->length()I

    move-result v7

    if-nez v7, :cond_96

    .line 14514
    :cond_8f
    const-string/jumbo v7, "ro.config.density_override"

    invoke-static {v7, v12}, Landroid/os/SystemProperties;->get(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v1

    .line 14516
    :cond_96
    if-eqz v1, :cond_c4

    invoke-virtual {v1}, Ljava/lang/String;->length()I

    move-result v7

    if-lez v7, :cond_c4

    .line 14519
    :try_start_9e
    invoke-static {v1}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;)I

    move-result v0

    .line 14520
    .local v0, "density":I
    iget-object v8, p1, Lcom/android/server/wm/DisplayContent;->mDisplaySizeLock:Ljava/lang/Object;

    monitor-enter v8
    :try_end_a5
    .catch Ljava/lang/NumberFormatException; {:try_start_9e .. :try_end_a5} :catch_ea

    .line 14521
    :try_start_a5
    iget v7, p1, Lcom/android/server/wm/DisplayContent;->mBaseDisplayDensity:I

    if-eq v7, v0, :cond_c3

    .line 14522
    const-string v7, "WindowManager"

    new-instance v9, Ljava/lang/StringBuilder;

    invoke-direct {v9}, Ljava/lang/StringBuilder;-><init>()V

    const-string v10, "FORCED DISPLAY DENSITY: "

    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v9

    invoke-virtual {v9, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v9

    invoke-virtual {v9}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v9

    invoke-static {v7, v9}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 14523
    iput v0, p1, Lcom/android/server/wm/DisplayContent;->mBaseDisplayDensity:I

    .line 14525
    :cond_c3
    monitor-exit v8
    :try_end_c4
    .catchall {:try_start_a5 .. :try_end_c4} :catchall_e7

    .line 14531
    .end local v0    # "density":I
    :cond_c4
    :goto_c4
    iget-object v7, p0, mContext:Landroid/content/Context;

    invoke-virtual {v7}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v7

    const-string/jumbo v8, "display_scaling_force"

    invoke-static {v7, v8, v11}, Landroid/provider/Settings$Global;->getInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I

    move-result v3

    .line 14533
    .local v3, "mode":I
    if-eqz v3, :cond_e1

    .line 14534
    iget-object v8, p1, Lcom/android/server/wm/DisplayContent;->mDisplaySizeLock:Ljava/lang/Object;

    monitor-enter v8

    .line 14535
    :try_start_d6
    const-string v7, "WindowManager"

    const-string v9, "FORCED DISPLAY SCALING DISABLED"

    invoke-static {v7, v9}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 14536
    const/4 v7, 0x1

    iput-boolean v7, p1, Lcom/android/server/wm/DisplayContent;->mDisplayScalingDisabled:Z

    .line 14537
    monitor-exit v8
    :try_end_e1
    .catchall {:try_start_d6 .. :try_end_e1} :catchall_ec

    .line 14539
    :cond_e1
    return-void

    .line 14504
    .end local v1    # "densityStr":Ljava/lang/String;
    .end local v3    # "mode":I
    .restart local v2    # "height":I
    .restart local v4    # "pos":I
    .restart local v6    # "width":I
    :catchall_e2
    move-exception v7

    :try_start_e3
    monitor-exit v8
    :try_end_e4
    .catchall {:try_start_e3 .. :try_end_e4} :catchall_e2

    :try_start_e4
    throw v7
    :try_end_e5
    .catch Ljava/lang/NumberFormatException; {:try_start_e4 .. :try_end_e5} :catch_e5

    .line 14505
    .end local v2    # "height":I
    .end local v6    # "width":I
    :catch_e5
    move-exception v7

    goto :goto_7a

    .line 14525
    .end local v4    # "pos":I
    .restart local v0    # "density":I
    .restart local v1    # "densityStr":Ljava/lang/String;
    :catchall_e7
    move-exception v7

    :try_start_e8
    monitor-exit v8
    :try_end_e9
    .catchall {:try_start_e8 .. :try_end_e9} :catchall_e7

    :try_start_e9
    throw v7
    :try_end_ea
    .catch Ljava/lang/NumberFormatException; {:try_start_e9 .. :try_end_ea} :catch_ea

    .line 14526
    .end local v0    # "density":I
    :catch_ea
    move-exception v7

    goto :goto_c4

    .line 14537
    .restart local v3    # "mode":I
    :catchall_ec
    move-exception v7

    :try_start_ed
    monitor-exit v8
    :try_end_ee
    .catchall {:try_start_ed .. :try_end_ee} :catchall_ec

    throw v7
.end method

.method private rebuildAppWindowListLocked(Lcom/android/server/wm/DisplayContent;)V
    .registers 32
    .param p1, "displayContent"    # Lcom/android/server/wm/DisplayContent;

    .prologue
    .line 14998
    move-object/from16 v0, p0

    iget-object v0, v0, mMovingTask:Lcom/android/server/wm/Task;

    move-object/from16 v26, v0

    if-eqz v26, :cond_2b

    .line 14999
    sget-boolean v26, SAFE_DEBUG:Z

    if-eqz v26, :cond_2a

    .line 15000
    const-string v26, "WindowManager"

    new-instance v27, Ljava/lang/StringBuilder;

    invoke-direct/range {v27 .. v27}, Ljava/lang/StringBuilder;-><init>()V

    const-string v28, "Skip Rebuilding because of mMovingTask="

    invoke-virtual/range {v27 .. v28}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v27

    move-object/from16 v0, p0

    iget-object v0, v0, mMovingTask:Lcom/android/server/wm/Task;

    move-object/from16 v28, v0

    invoke-virtual/range {v27 .. v28}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v27

    invoke-virtual/range {v27 .. v27}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v27

    invoke-static/range {v26 .. v27}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 15166
    :cond_2a
    :goto_2a
    return-void

    .line 15004
    :cond_2b
    invoke-virtual/range {p1 .. p1}, Lcom/android/server/wm/DisplayContent;->getWindowList()Lcom/android/server/wm/WindowList;

    move-result-object v23

    .line 15005
    .local v23, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual/range {v23 .. v23}, Lcom/android/server/wm/WindowList;->size()I

    move-result v4

    .line 15007
    .local v4, "NW":I
    const/4 v8, -0x1

    .line 15008
    .local v8, "lastBelow":I
    const/4 v9, 0x0

    .line 15010
    .local v9, "numRemoved":I
    move-object/from16 v0, p0

    iget-object v0, v0, mRebuildTmp:[Ljava/lang/ref/WeakReference;

    move-object/from16 v26, v0

    move-object/from16 v0, v26

    array-length v0, v0

    move/from16 v26, v0

    move/from16 v0, v26

    if-ge v0, v4, :cond_52

    .line 15011
    add-int/lit8 v26, v4, 0xa

    move/from16 v0, v26

    new-array v0, v0, [Ljava/lang/ref/WeakReference;

    move-object/from16 v26, v0

    move-object/from16 v0, v26

    move-object/from16 v1, p0

    iput-object v0, v1, mRebuildTmp:[Ljava/lang/ref/WeakReference;

    .line 15015
    :cond_52
    const/4 v6, 0x0

    .line 15016
    .local v6, "i":I
    :goto_53
    if-ge v6, v4, :cond_d1

    .line 15017
    move-object/from16 v0, v23

    invoke-virtual {v0, v6}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v21

    check-cast v21, Lcom/android/server/wm/WindowState;

    .line 15028
    .local v21, "w":Lcom/android/server/wm/WindowState;
    move-object/from16 v0, v21

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    move-object/from16 v26, v0

    if-eqz v26, :cond_b3

    .line 15029
    move-object/from16 v0, v23

    invoke-virtual {v0, v6}, Lcom/android/server/wm/WindowList;->remove(I)Ljava/lang/Object;

    move-result-object v22

    check-cast v22, Lcom/android/server/wm/WindowState;

    .line 15030
    .local v22, "win":Lcom/android/server/wm/WindowState;
    const/16 v26, 0x1

    move/from16 v0, v26

    move-object/from16 v1, v22

    iput-boolean v0, v1, Lcom/android/server/wm/WindowState;->mRebuilding:Z

    .line 15031
    move-object/from16 v0, p0

    iget-object v0, v0, mRebuildTmp:[Ljava/lang/ref/WeakReference;

    move-object/from16 v26, v0

    new-instance v27, Ljava/lang/ref/WeakReference;

    move-object/from16 v0, v27

    move-object/from16 v1, v22

    invoke-direct {v0, v1}, Ljava/lang/ref/WeakReference;-><init>(Ljava/lang/Object;)V

    aput-object v27, v26, v9

    .line 15032
    const/16 v26, 0x1

    move/from16 v0, v26

    move-object/from16 v1, p0

    iput-boolean v0, v1, mWindowsChanged:Z

    .line 15033
    sget-boolean v26, DEBUG_WINDOW_MOVEMENT:Z

    if-eqz v26, :cond_ae

    const-string v26, "WindowManager"

    new-instance v27, Ljava/lang/StringBuilder;

    invoke-direct/range {v27 .. v27}, Ljava/lang/StringBuilder;-><init>()V

    const-string v28, "Rebuild removing window: "

    invoke-virtual/range {v27 .. v28}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v27

    move-object/from16 v0, v27

    move-object/from16 v1, v22

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v27

    invoke-virtual/range {v27 .. v27}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v27

    invoke-static/range {v26 .. v27}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 15034
    :cond_ae
    add-int/lit8 v4, v4, -0x1

    .line 15035
    add-int/lit8 v9, v9, 0x1

    .line 15036
    goto :goto_53

    .line 15037
    .end local v22    # "win":Lcom/android/server/wm/WindowState;
    :cond_b3
    add-int/lit8 v26, v6, -0x1

    move/from16 v0, v26

    if-ne v8, v0, :cond_ce

    .line 15038
    move-object/from16 v0, v21

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    move-object/from16 v26, v0

    move-object/from16 v0, v26

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    move/from16 v26, v0

    const/16 v27, 0x7dd

    move/from16 v0, v26

    move/from16 v1, v27

    if-ne v0, v1, :cond_ce

    .line 15039
    move v8, v6

    .line 15042
    :cond_ce
    add-int/lit8 v6, v6, 0x1

    .line 15043
    goto :goto_53

    .line 15047
    .end local v21    # "w":Lcom/android/server/wm/WindowState;
    :cond_d1
    add-int/lit8 v8, v8, 0x1

    .line 15048
    move v6, v8

    .line 15054
    invoke-virtual/range {p1 .. p1}, Lcom/android/server/wm/DisplayContent;->getStacks()Ljava/util/ArrayList;

    move-result-object v15

    .line 15055
    .local v15, "stacks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/TaskStack;>;"
    invoke-virtual {v15}, Ljava/util/ArrayList;->size()I

    move-result v10

    .line 15076
    .local v10, "numStacks":I
    const/4 v14, 0x0

    .local v14, "stackNdx":I
    :goto_dd
    if-ge v14, v10, :cond_106

    .line 15077
    invoke-virtual {v15, v14}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v26

    check-cast v26, Lcom/android/server/wm/TaskStack;

    move-object/from16 v0, v26

    iget-object v5, v0, Lcom/android/server/wm/TaskStack;->mExitingAppTokens:Lcom/android/server/wm/AppTokenList;

    .line 15078
    .local v5, "exitingAppTokens":Lcom/android/server/wm/AppTokenList;
    invoke-virtual {v5}, Lcom/android/server/wm/AppTokenList;->size()I

    move-result v3

    .line 15079
    .local v3, "NT":I
    const/4 v7, 0x0

    .local v7, "j":I
    :goto_ee
    if-ge v7, v3, :cond_103

    .line 15080
    invoke-virtual {v5, v7}, Lcom/android/server/wm/AppTokenList;->get(I)Ljava/lang/Object;

    move-result-object v26

    check-cast v26, Lcom/android/server/wm/WindowToken;

    move-object/from16 v0, p0

    move-object/from16 v1, p1

    move-object/from16 v2, v26

    invoke-direct {v0, v1, v6, v2}, reAddAppWindowsLocked(Lcom/android/server/wm/DisplayContent;ILcom/android/server/wm/WindowToken;)I

    move-result v6

    .line 15079
    add-int/lit8 v7, v7, 0x1

    goto :goto_ee

    .line 15076
    :cond_103
    add-int/lit8 v14, v14, 0x1

    goto :goto_dd

    .line 15088
    .end local v3    # "NT":I
    .end local v5    # "exitingAppTokens":Lcom/android/server/wm/AppTokenList;
    .end local v7    # "j":I
    :cond_106
    invoke-virtual/range {p1 .. p1}, Lcom/android/server/wm/DisplayContent;->getTasks()Ljava/util/ArrayList;

    move-result-object v18

    .line 15089
    .local v18, "tasks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/Task;>;"
    invoke-virtual/range {v18 .. v18}, Ljava/util/ArrayList;->size()I

    move-result v11

    .line 15090
    .local v11, "numTasks":I
    const/16 v17, 0x0

    .local v17, "taskNdx":I
    :goto_110
    move/from16 v0, v17

    if-ge v0, v11, :cond_151

    .line 15091
    move-object/from16 v0, v18

    move/from16 v1, v17

    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v26

    check-cast v26, Lcom/android/server/wm/Task;

    move-object/from16 v0, v26

    iget-object v0, v0, Lcom/android/server/wm/Task;->mAppTokens:Lcom/android/server/wm/AppTokenList;

    move-object/from16 v20, v0

    .line 15092
    .local v20, "tokens":Lcom/android/server/wm/AppTokenList;
    invoke-virtual/range {v20 .. v20}, Lcom/android/server/wm/AppTokenList;->size()I

    move-result v12

    .line 15093
    .local v12, "numTokens":I
    const/16 v19, 0x0

    .local v19, "tokenNdx":I
    :goto_12a
    move/from16 v0, v19

    if-ge v0, v12, :cond_14e

    .line 15094
    move-object/from16 v0, v20

    move/from16 v1, v19

    invoke-virtual {v0, v1}, Lcom/android/server/wm/AppTokenList;->get(I)Ljava/lang/Object;

    move-result-object v25

    check-cast v25, Lcom/android/server/wm/AppWindowToken;

    .line 15095
    .local v25, "wtoken":Lcom/android/server/wm/AppWindowToken;
    move-object/from16 v0, v25

    iget-boolean v0, v0, Lcom/android/server/wm/AppWindowToken;->mIsExiting:Z

    move/from16 v26, v0

    if-eqz v26, :cond_143

    .line 15093
    :goto_140
    add-int/lit8 v19, v19, 0x1

    goto :goto_12a

    .line 15105
    :cond_143
    move-object/from16 v0, p0

    move-object/from16 v1, p1

    move-object/from16 v2, v25

    invoke-direct {v0, v1, v6, v2}, reAddAppWindowsLocked(Lcom/android/server/wm/DisplayContent;ILcom/android/server/wm/WindowToken;)I

    move-result v6

    goto :goto_140

    .line 15090
    .end local v25    # "wtoken":Lcom/android/server/wm/AppWindowToken;
    :cond_14e
    add-int/lit8 v17, v17, 0x1

    goto :goto_110

    .line 15129
    .end local v12    # "numTokens":I
    .end local v19    # "tokenNdx":I
    .end local v20    # "tokens":Lcom/android/server/wm/AppTokenList;
    :cond_151
    sub-int/2addr v6, v8

    .line 15130
    if-eq v6, v9, :cond_251

    .line 15131
    const/16 v26, 0x1

    move/from16 v0, v26

    move-object/from16 v1, p1

    iput-boolean v0, v1, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    .line 15132
    const-string v26, "WindowManager"

    new-instance v27, Ljava/lang/StringBuilder;

    invoke-direct/range {v27 .. v27}, Ljava/lang/StringBuilder;-><init>()V

    const-string v28, "On display="

    invoke-virtual/range {v27 .. v28}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v27

    invoke-virtual/range {p1 .. p1}, Lcom/android/server/wm/DisplayContent;->getDisplayId()I

    move-result v28

    invoke-virtual/range {v27 .. v28}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v27

    const-string v28, " Rebuild removed "

    invoke-virtual/range {v27 .. v28}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v27

    move-object/from16 v0, v27

    invoke-virtual {v0, v9}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v27

    const-string v28, " windows but added "

    invoke-virtual/range {v27 .. v28}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v27

    move-object/from16 v0, v27

    invoke-virtual {v0, v6}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v27

    invoke-virtual/range {v27 .. v27}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v27

    new-instance v28, Ljava/lang/RuntimeException;

    const-string/jumbo v29, "here"

    invoke-direct/range {v28 .. v29}, Ljava/lang/RuntimeException;-><init>(Ljava/lang/String;)V

    invoke-virtual/range {v28 .. v28}, Ljava/lang/RuntimeException;->fillInStackTrace()Ljava/lang/Throwable;

    move-result-object v28

    invoke-static/range {v26 .. v28}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 15135
    const/4 v6, 0x0

    :goto_19d
    if-ge v6, v9, :cond_23d

    .line 15136
    move-object/from16 v0, p0

    iget-object v0, v0, mRebuildTmp:[Ljava/lang/ref/WeakReference;

    move-object/from16 v26, v0

    aget-object v26, v26, v6

    invoke-virtual/range {v26 .. v26}, Ljava/lang/ref/WeakReference;->get()Ljava/lang/Object;

    move-result-object v24

    check-cast v24, Lcom/android/server/wm/WindowState;

    .line 15137
    .local v24, "ws":Lcom/android/server/wm/WindowState;
    move-object/from16 v0, v24

    iget-boolean v0, v0, Lcom/android/server/wm/WindowState;->mRebuilding:Z

    move/from16 v26, v0

    if-eqz v26, :cond_239

    .line 15138
    new-instance v16, Ljava/io/StringWriter;

    invoke-direct/range {v16 .. v16}, Ljava/io/StringWriter;-><init>()V

    .line 15139
    .local v16, "sw":Ljava/io/StringWriter;
    new-instance v13, Lcom/android/internal/util/FastPrintWriter;

    const/16 v26, 0x0

    const/16 v27, 0x400

    move-object/from16 v0, v16

    move/from16 v1, v26

    move/from16 v2, v27

    invoke-direct {v13, v0, v1, v2}, Lcom/android/internal/util/FastPrintWriter;-><init>(Ljava/io/Writer;ZI)V

    .line 15140
    .local v13, "pw":Ljava/io/PrintWriter;
    const-string v26, ""

    const/16 v27, 0x1

    move-object/from16 v0, v24

    move-object/from16 v1, v26

    move/from16 v2, v27

    invoke-virtual {v0, v13, v1, v2}, Lcom/android/server/wm/WindowState;->dump(Ljava/io/PrintWriter;Ljava/lang/String;Z)V

    .line 15141
    invoke-virtual {v13}, Ljava/io/PrintWriter;->flush()V

    .line 15142
    const-string v26, "WindowManager"

    new-instance v27, Ljava/lang/StringBuilder;

    invoke-direct/range {v27 .. v27}, Ljava/lang/StringBuilder;-><init>()V

    const-string v28, "This window was lost: "

    invoke-virtual/range {v27 .. v28}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v27

    move-object/from16 v0, v27

    move-object/from16 v1, v24

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v27

    invoke-virtual/range {v27 .. v27}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v27

    invoke-static/range {v26 .. v27}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 15143
    const-string v26, "WindowManager"

    invoke-virtual/range {v16 .. v16}, Ljava/io/StringWriter;->toString()Ljava/lang/String;

    move-result-object v27

    invoke-static/range {v26 .. v27}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 15145
    move-object/from16 v0, v24

    iget-boolean v0, v0, Lcom/android/server/wm/WindowState;->mWaitingForOrientation:Z

    move/from16 v26, v0

    if-eqz v26, :cond_230

    .line 15146
    sget-boolean v26, SAFE_DEBUG:Z

    if-eqz v26, :cond_22d

    const-string v26, "WindowManager"

    new-instance v27, Ljava/lang/StringBuilder;

    invoke-direct/range {v27 .. v27}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v28, "stopWaitingForOrientation() w="

    invoke-virtual/range {v27 .. v28}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v27

    move-object/from16 v0, v27

    move-object/from16 v1, v24

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v27

    const-string v28, " in rebuild process"

    invoke-virtual/range {v27 .. v28}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v27

    invoke-virtual/range {v27 .. v27}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v27

    invoke-static/range {v26 .. v27}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 15147
    :cond_22d
    invoke-virtual/range {v24 .. v24}, Lcom/android/server/wm/WindowState;->stopWaitingForOrientation()V

    .line 15150
    :cond_230
    move-object/from16 v0, v24

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    move-object/from16 v26, v0

    invoke-virtual/range {v26 .. v26}, Lcom/android/server/wm/WindowStateAnimator;->destroySurfaceLocked()V

    .line 15135
    .end local v13    # "pw":Ljava/io/PrintWriter;
    .end local v16    # "sw":Ljava/io/StringWriter;
    :cond_239
    add-int/lit8 v6, v6, 0x1

    goto/16 :goto_19d

    .line 15153
    .end local v24    # "ws":Lcom/android/server/wm/WindowState;
    :cond_23d
    const-string v26, "WindowManager"

    const-string v27, "Current app token list:"

    invoke-static/range {v26 .. v27}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 15154
    invoke-virtual/range {p0 .. p0}, dumpAppTokensLocked()V

    .line 15155
    const-string v26, "WindowManager"

    const-string v27, "Final window list:"

    invoke-static/range {v26 .. v27}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 15156
    invoke-virtual/range {p0 .. p0}, dumpWindowsLocked()V

    .line 15159
    :cond_251
    move-object/from16 v0, p0

    iget-object v0, v0, mContext:Landroid/content/Context;

    move-object/from16 v26, v0

    invoke-static/range {v26 .. v26}, Lcom/samsung/android/cocktailbar/CocktailBarFeatures;->isSystemBarType(Landroid/content/Context;)Z

    move-result v26

    if-eqz v26, :cond_266

    .line 15161
    const/16 v26, 0x0

    move-object/from16 v0, p0

    move-object/from16 v1, v26

    invoke-direct {v0, v1}, reArrangeWindowListForCockatilWindow(Lcom/android/server/wm/WindowState;)V

    .line 15164
    :cond_266
    move-object/from16 v0, p0

    iget-object v0, v0, mRebuildTmp:[Ljava/lang/ref/WeakReference;

    move-object/from16 v26, v0

    const/16 v27, 0x0

    invoke-static/range {v26 .. v27}, Ljava/util/Arrays;->fill([Ljava/lang/Object;Ljava/lang/Object;)V

    goto/16 :goto_2a
.end method

.method private reconfigureDebug([Z)V
    .registers 6
    .param p1, "wm_debug"    # [Z

    .prologue
    .line 552
    const/4 v0, 0x0

    .line 553
    .local v0, "i":I
    array-length v2, p1

    const/16 v3, 0x1a

    if-eq v2, v3, :cond_7

    .line 580
    :goto_6
    return-void

    .line 554
    :cond_7
    add-int/lit8 v1, v0, 0x1

    .end local v0    # "i":I
    .local v1, "i":I
    aget-boolean v2, p1, v0

    sput-boolean v2, DEBUG_ADD_REMOVE:Z

    .line 555
    add-int/lit8 v0, v1, 0x1

    .end local v1    # "i":I
    .restart local v0    # "i":I
    aget-boolean v2, p1, v1

    sput-boolean v2, DEBUG_FOCUS:Z

    .line 556
    add-int/lit8 v1, v0, 0x1

    .end local v0    # "i":I
    .restart local v1    # "i":I
    aget-boolean v2, p1, v0

    sput-boolean v2, DEBUG_ANIM:Z

    .line 557
    add-int/lit8 v0, v1, 0x1

    .end local v1    # "i":I
    .restart local v0    # "i":I
    aget-boolean v2, p1, v1

    sput-boolean v2, DEBUG_KEYGUARD:Z

    .line 558
    add-int/lit8 v1, v0, 0x1

    .end local v0    # "i":I
    .restart local v1    # "i":I
    aget-boolean v2, p1, v0

    sput-boolean v2, DEBUG_LAYOUT:Z

    .line 559
    add-int/lit8 v0, v1, 0x1

    .end local v1    # "i":I
    .restart local v0    # "i":I
    aget-boolean v2, p1, v1

    sput-boolean v2, DEBUG_RESIZE:Z

    .line 560
    add-int/lit8 v1, v0, 0x1

    .end local v0    # "i":I
    .restart local v1    # "i":I
    aget-boolean v2, p1, v0

    sput-boolean v2, DEBUG_LAYERS:Z

    .line 561
    add-int/lit8 v0, v1, 0x1

    .end local v1    # "i":I
    .restart local v0    # "i":I
    aget-boolean v2, p1, v1

    sput-boolean v2, DEBUG_VISIBILITY:Z

    .line 562
    add-int/lit8 v1, v0, 0x1

    .end local v0    # "i":I
    .restart local v1    # "i":I
    aget-boolean v2, p1, v0

    sput-boolean v2, DEBUG_WINDOW_MOVEMENT:Z

    .line 563
    add-int/lit8 v0, v1, 0x1

    .end local v1    # "i":I
    .restart local v0    # "i":I
    aget-boolean v2, p1, v1

    sput-boolean v2, DEBUG_TOKEN_MOVEMENT:Z

    .line 564
    add-int/lit8 v1, v0, 0x1

    .end local v0    # "i":I
    .restart local v1    # "i":I
    aget-boolean v2, p1, v0

    sput-boolean v2, DEBUG_ORIENTATION:Z

    .line 565
    add-int/lit8 v0, v1, 0x1

    .end local v1    # "i":I
    .restart local v0    # "i":I
    aget-boolean v2, p1, v1

    sput-boolean v2, DEBUG_APP_ORIENTATION:Z

    .line 566
    add-int/lit8 v1, v0, 0x1

    .end local v0    # "i":I
    .restart local v1    # "i":I
    aget-boolean v2, p1, v0

    sput-boolean v2, DEBUG_CONFIGURATION:Z

    .line 567
    add-int/lit8 v0, v1, 0x1

    .end local v1    # "i":I
    .restart local v0    # "i":I
    aget-boolean v2, p1, v1

    sput-boolean v2, DEBUG_APP_TRANSITIONS:Z

    .line 568
    add-int/lit8 v1, v0, 0x1

    .end local v0    # "i":I
    .restart local v1    # "i":I
    aget-boolean v2, p1, v0

    sput-boolean v2, DEBUG_STARTING_WINDOW:Z

    .line 569
    add-int/lit8 v0, v1, 0x1

    .end local v1    # "i":I
    .restart local v0    # "i":I
    aget-boolean v2, p1, v1

    sput-boolean v2, DEBUG_WALLPAPER:Z

    .line 570
    add-int/lit8 v1, v0, 0x1

    .end local v0    # "i":I
    .restart local v1    # "i":I
    aget-boolean v2, p1, v0

    sput-boolean v2, DEBUG_SURFACE_TRACE:Z

    .line 571
    add-int/lit8 v0, v1, 0x1

    .end local v1    # "i":I
    .restart local v0    # "i":I
    aget-boolean v2, p1, v1

    sput-boolean v2, DEBUG_WINDOW_TRACE:Z

    .line 572
    add-int/lit8 v1, v0, 0x1

    .end local v0    # "i":I
    .restart local v1    # "i":I
    aget-boolean v2, p1, v0

    sput-boolean v2, DEBUG_TASK_MOVEMENT:Z

    .line 573
    add-int/lit8 v0, v1, 0x1

    .end local v1    # "i":I
    .restart local v0    # "i":I
    aget-boolean v2, p1, v1

    sput-boolean v2, DEBUG_STACK:Z

    .line 574
    add-int/lit8 v1, v0, 0x1

    .end local v0    # "i":I
    .restart local v1    # "i":I
    aget-boolean v2, p1, v0

    sput-boolean v2, DEBUG_DISPLAY:Z

    .line 575
    add-int/lit8 v0, v1, 0x1

    .end local v1    # "i":I
    .restart local v0    # "i":I
    aget-boolean v2, p1, v1

    sput-boolean v2, DEBUG_POWER:Z

    .line 576
    add-int/lit8 v1, v0, 0x1

    .end local v0    # "i":I
    .restart local v1    # "i":I
    aget-boolean v2, p1, v0

    sput-boolean v2, DEBUG_MULTIWINDOW:Z

    .line 577
    add-int/lit8 v0, v1, 0x1

    .end local v1    # "i":I
    .restart local v0    # "i":I
    aget-boolean v2, p1, v1

    sput-boolean v2, DEBUG_MULTIWINDOW_SCALE:Z

    .line 578
    add-int/lit8 v1, v0, 0x1

    .end local v0    # "i":I
    .restart local v1    # "i":I
    aget-boolean v2, p1, v0

    sput-boolean v2, DEBUG_MULTIWINDOW_ORIENTATION:Z

    .line 579
    add-int/lit8 v0, v1, 0x1

    .end local v1    # "i":I
    .restart local v0    # "i":I
    aget-boolean v2, p1, v1

    sput-boolean v2, DEBUG_MULTIWINDOW_CONTROL:Z

    goto/16 :goto_6
.end method

.method private reconfigureDisplayLocked(Lcom/android/server/wm/DisplayContent;)V
    .registers 8
    .param p1, "displayContent"    # Lcom/android/server/wm/DisplayContent;

    .prologue
    const/4 v3, 0x1

    const/4 v4, 0x0

    .line 14682
    iget-boolean v2, p0, mDisplayReady:Z

    if-nez v2, :cond_7

    .line 14720
    :goto_6
    return-void

    .line 14685
    :cond_7
    invoke-direct {p0, p1}, configureDisplayPolicyLocked(Lcom/android/server/wm/DisplayContent;)V

    .line 14686
    iput-boolean v3, p1, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    .line 14689
    invoke-virtual {p1}, Lcom/android/server/wm/DisplayContent;->getDisplayId()I

    move-result v1

    .line 14705
    .local v1, "displayId":I
    invoke-virtual {p0, v4}, updateOrientationFromAppTokensLocked(Z)Z

    move-result v0

    .line 14706
    .local v0, "configChanged":Z
    iget-object v2, p0, mTempConfiguration:Landroid/content/res/Configuration;

    invoke-virtual {v2}, Landroid/content/res/Configuration;->setToDefaults()V

    .line 14707
    iget-object v2, p0, mTempConfiguration:Landroid/content/res/Configuration;

    iget-object v5, p0, mCurConfiguration:Landroid/content/res/Configuration;

    iget v5, v5, Landroid/content/res/Configuration;->fontScale:F

    iput v5, v2, Landroid/content/res/Configuration;->fontScale:F

    .line 14708
    iget-object v2, p0, mTempConfiguration:Landroid/content/res/Configuration;

    iget-object v5, p0, mCurConfiguration:Landroid/content/res/Configuration;

    iget v5, v5, Landroid/content/res/Configuration;->showButtonBackground:I

    iput v5, v2, Landroid/content/res/Configuration;->showButtonBackground:I

    .line 14709
    iget-object v2, p0, mTempConfiguration:Landroid/content/res/Configuration;

    invoke-virtual {p0, v2}, computeScreenConfigurationLocked(Landroid/content/res/Configuration;)V

    .line 14710
    iget-object v2, p0, mCurConfiguration:Landroid/content/res/Configuration;

    iget-object v5, p0, mTempConfiguration:Landroid/content/res/Configuration;

    invoke-virtual {v2, v5}, Landroid/content/res/Configuration;->diff(Landroid/content/res/Configuration;)I

    move-result v2

    if-eqz v2, :cond_4c

    move v2, v3

    :goto_39
    or-int/2addr v0, v2

    .line 14713
    if-eqz v0, :cond_48

    .line 14714
    iput-boolean v3, p0, mWaitingForConfig:Z

    .line 14715
    invoke-direct {p0, v4, v4, v4}, startFreezingDisplayLocked(ZII)V

    .line 14716
    iget-object v2, p0, mH:Lcom/android/server/wm/WindowManagerService$H;

    const/16 v3, 0x12

    invoke-virtual {v2, v3}, Lcom/android/server/wm/WindowManagerService$H;->sendEmptyMessage(I)Z

    .line 14719
    :cond_48
    invoke-direct {p0}, performLayoutAndPlaceSurfacesLocked()V

    goto :goto_6

    :cond_4c
    move v2, v4

    .line 14710
    goto :goto_39
.end method

.method private reduceCompatConfigWidthSize(IILandroid/util/DisplayMetrics;II)I
    .registers 10
    .param p1, "curSize"    # I
    .param p2, "rotation"    # I
    .param p3, "dm"    # Landroid/util/DisplayMetrics;
    .param p4, "dw"    # I
    .param p5, "dh"    # I

    .prologue
    .line 12553
    iget-object v2, p0, mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v2, p4, p5, p2}, Landroid/view/WindowManagerPolicy;->getNonDecorDisplayWidth(III)I

    move-result v2

    iput v2, p3, Landroid/util/DisplayMetrics;->noncompatWidthPixels:I

    .line 12554
    iget-object v2, p0, mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v2, p4, p5, p2}, Landroid/view/WindowManagerPolicy;->getNonDecorDisplayHeight(III)I

    move-result v2

    iput v2, p3, Landroid/util/DisplayMetrics;->noncompatHeightPixels:I

    .line 12555
    const/4 v2, 0x0

    invoke-static {p3, v2}, Landroid/content/res/CompatibilityInfo;->computeCompatibleScaling(Landroid/util/DisplayMetrics;Landroid/util/DisplayMetrics;)F

    move-result v0

    .line 12556
    .local v0, "scale":F
    iget v2, p3, Landroid/util/DisplayMetrics;->noncompatWidthPixels:I

    int-to-float v2, v2

    div-float/2addr v2, v0

    iget v3, p3, Landroid/util/DisplayMetrics;->density:F

    div-float/2addr v2, v3

    const/high16 v3, 0x3f000000    # 0.5f

    add-float/2addr v2, v3

    float-to-int v1, v2

    .line 12557
    .local v1, "size":I
    if-eqz p1, :cond_24

    if-ge v1, p1, :cond_25

    .line 12558
    :cond_24
    move p1, v1

    .line 12560
    :cond_25
    return p1
.end method

.method private reduceConfigLayout(IIFII)I
    .registers 12
    .param p1, "curLayout"    # I
    .param p2, "rotation"    # I
    .param p3, "density"    # F
    .param p4, "dw"    # I
    .param p5, "dh"    # I

    .prologue
    .line 12501
    iget-object v5, p0, mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v5, p4, p5, p2}, Landroid/view/WindowManagerPolicy;->getNonDecorDisplayWidth(III)I

    move-result v4

    .line 12502
    .local v4, "w":I
    iget-object v5, p0, mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v5, p4, p5, p2}, Landroid/view/WindowManagerPolicy;->getNonDecorDisplayHeight(III)I

    move-result v0

    .line 12505
    .local v0, "h":I
    move v1, v4

    .line 12506
    .local v1, "longSize":I
    move v2, v0

    .line 12507
    .local v2, "shortSize":I
    if-ge v1, v2, :cond_13

    .line 12508
    move v3, v1

    .line 12509
    .local v3, "tmp":I
    move v1, v2

    .line 12510
    move v2, v3

    .line 12512
    .end local v3    # "tmp":I
    :cond_13
    int-to-float v5, v1

    div-float/2addr v5, p3

    float-to-int v1, v5

    .line 12513
    int-to-float v5, v2

    div-float/2addr v5, p3

    float-to-int v2, v5

    .line 12514
    invoke-static {p1, v1, v2}, Landroid/content/res/Configuration;->reduceScreenLayout(III)I

    move-result v5

    return v5
.end method

.method private requestMultiWindowTransitionTargetDrawnIfNeededLocked(Ljava/util/ArrayList;)V
    .registers 3
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/util/ArrayList",
            "<",
            "Lcom/android/server/wm/AppWindowToken;",
            ">;)V"
        }
    .end annotation

    .prologue
    .line 21321
    .local p1, "targetTokens":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/AppWindowToken;>;"
    const/4 v0, 0x0

    invoke-direct {p0, p1, v0}, requestMultiWindowTransitionTargetDrawnIfNeededLocked(Ljava/util/ArrayList;I)V

    .line 21322
    return-void
.end method

.method private requestMultiWindowTransitionTargetDrawnIfNeededLocked(Ljava/util/ArrayList;I)V
    .registers 13
    .param p2, "displayId"    # I
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/util/ArrayList",
            "<",
            "Lcom/android/server/wm/AppWindowToken;",
            ">;I)V"
        }
    .end annotation

    .prologue
    .local p1, "targetTokens":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/AppWindowToken;>;"
    const/4 v9, 0x0

    const/4 v8, -0x1

    .line 21326
    if-eqz p1, :cond_76

    invoke-virtual {p1}, Ljava/util/ArrayList;->isEmpty()Z

    move-result v6

    if-nez v6, :cond_76

    .line 21327
    invoke-virtual {p0, p2}, okToDisplay(I)Z

    move-result v6

    if-eqz v6, :cond_17

    .line 21328
    invoke-virtual {p0, p2}, getMultiWindowTransitionLocked(I)Lcom/android/server/wm/MultiWindowTransition;

    move-result-object v6

    invoke-virtual {v6}, Lcom/android/server/wm/MultiWindowTransition;->prepare()V

    .line 21331
    :cond_17
    const/4 v0, 0x0

    .line 21332
    .local v0, "drawnChanged":Z
    const/4 v3, 0x0

    .line 21333
    .local v3, "isNormalToSplit":Z
    invoke-direct {p0}, getMultiWindowTransitionLocked()Lcom/android/server/wm/MultiWindowTransition;

    move-result-object v6

    if-eqz v6, :cond_2c

    invoke-direct {p0}, getMultiWindowTransitionLocked()Lcom/android/server/wm/MultiWindowTransition;

    move-result-object v6

    invoke-virtual {v6}, Lcom/android/server/wm/MultiWindowTransition;->getMultiWindowTransition()I

    move-result v6

    const/16 v7, 0x8

    if-ne v6, v7, :cond_2c

    .line 21336
    const/4 v3, 0x1

    .line 21338
    :cond_2c
    invoke-virtual {p1}, Ljava/util/ArrayList;->iterator()Ljava/util/Iterator;

    move-result-object v1

    :cond_30
    :goto_30
    invoke-interface {v1}, Ljava/util/Iterator;->hasNext()Z

    move-result v6

    if-eqz v6, :cond_71

    invoke-interface {v1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/android/server/wm/AppWindowToken;

    .line 21339
    .local v5, "wtoken":Lcom/android/server/wm/AppWindowToken;
    iget-object v6, v5, Lcom/android/server/wm/AppWindowToken;->allAppWindows:Lcom/android/server/wm/WindowList;

    invoke-virtual {v6}, Lcom/android/server/wm/WindowList;->iterator()Ljava/util/Iterator;

    move-result-object v2

    .local v2, "i$":Ljava/util/Iterator;
    :cond_42
    :goto_42
    invoke-interface {v2}, Ljava/util/Iterator;->hasNext()Z

    move-result v6

    if-eqz v6, :cond_6a

    invoke-interface {v2}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/server/wm/WindowState;

    .line 21340
    .local v4, "win":Lcom/android/server/wm/WindowState;
    invoke-virtual {v4}, Lcom/android/server/wm/WindowState;->hasDrawnLw()Z

    move-result v6

    if-nez v6, :cond_5a

    if-eqz v3, :cond_42

    iget-boolean v6, v5, Lcom/android/server/wm/AppWindowToken;->allDrawn:Z

    if-eqz v6, :cond_42

    .line 21341
    :cond_5a
    iget-object v6, v4, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    const/4 v7, 0x1

    iput v7, v6, Lcom/android/server/wm/WindowStateAnimator;->mDrawState:I

    .line 21342
    iput-boolean v9, v5, Lcom/android/server/wm/AppWindowToken;->allDrawn:Z

    .line 21343
    iput-boolean v9, v5, Lcom/android/server/wm/AppWindowToken;->deferClearAllDrawn:Z

    .line 21345
    iget-object v6, v4, Lcom/android/server/wm/WindowState;->mLastContentInsets:Landroid/graphics/Rect;

    invoke-virtual {v6, v8, v8, v8, v8}, Landroid/graphics/Rect;->set(IIII)V

    .line 21346
    const/4 v0, 0x1

    goto :goto_42

    .line 21349
    .end local v4    # "win":Lcom/android/server/wm/WindowState;
    :cond_6a
    if-eqz v3, :cond_30

    .line 21350
    iput v9, v5, Lcom/android/server/wm/AppWindowToken;->numDrawnWindows:I

    iput v9, v5, Lcom/android/server/wm/AppWindowToken;->numInterestingWindows:I

    goto :goto_30

    .line 21353
    .end local v2    # "i$":Ljava/util/Iterator;
    .end local v5    # "wtoken":Lcom/android/server/wm/AppWindowToken;
    :cond_71
    if-eqz v0, :cond_76

    .line 21354
    invoke-virtual {p0}, requestTraversalLocked()V

    .line 21357
    .end local v0    # "drawnChanged":Z
    .end local v3    # "isNormalToSplit":Z
    :cond_76
    return-void
.end method

.method private requestReportDrawnLocked(Lcom/android/server/wm/AppWindowToken;)V
    .registers 9
    .param p1, "atoken"    # Lcom/android/server/wm/AppWindowToken;

    .prologue
    const/4 v6, 0x0

    const/4 v5, -0x1

    .line 23045
    if-nez p1, :cond_5

    .line 23065
    :cond_4
    :goto_4
    return-void

    .line 23048
    :cond_5
    iget-object v3, p0, mAnimator:Lcom/android/server/wm/WindowAnimator;

    invoke-virtual {v3}, Lcom/android/server/wm/WindowAnimator;->getDualScreenTransitionLocked()Lcom/android/server/wm/DualScreenTransition;

    move-result-object v0

    .line 23049
    .local v0, "dualScreenTransition":Lcom/android/server/wm/DualScreenTransition;
    iget-boolean v3, p1, Lcom/android/server/wm/AppWindowToken;->layoutConfigChanges:Z

    if-eqz v3, :cond_4

    .line 23050
    iget-object v3, p1, Lcom/android/server/wm/AppWindowToken;->allAppWindows:Lcom/android/server/wm/WindowList;

    invoke-virtual {v3}, Lcom/android/server/wm/WindowList;->iterator()Ljava/util/Iterator;

    move-result-object v1

    .local v1, "i$":Ljava/util/Iterator;
    :cond_15
    :goto_15
    invoke-interface {v1}, Ljava/util/Iterator;->hasNext()Z

    move-result v3

    if-eqz v3, :cond_45

    invoke-interface {v1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/wm/WindowState;

    .line 23051
    .local v2, "win":Lcom/android/server/wm/WindowState;
    invoke-virtual {v2}, Lcom/android/server/wm/WindowState;->hasDrawnLw()Z

    move-result v3

    if-nez v3, :cond_2d

    iget-object v3, v2, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    iget-boolean v3, v3, Lcom/android/server/wm/AppWindowToken;->allDrawn:Z

    if-eqz v3, :cond_15

    .line 23052
    :cond_2d
    iget-object v3, v2, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    const/4 v4, 0x1

    iput v4, v3, Lcom/android/server/wm/WindowStateAnimator;->mDrawState:I

    .line 23054
    iget-object v3, v2, Lcom/android/server/wm/WindowState;->mLastContentInsets:Landroid/graphics/Rect;

    invoke-virtual {v3, v5, v5, v5, v5}, Landroid/graphics/Rect;->set(IIII)V

    .line 23055
    if-eqz v0, :cond_15

    invoke-virtual {v0}, Lcom/android/server/wm/DualScreenTransition;->isHalfToFullTransition()Z

    move-result v3

    if-eqz v3, :cond_15

    .line 23057
    iget-object v3, v2, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    invoke-virtual {v3}, Lcom/android/server/wm/WindowStateAnimator;->hide()V

    goto :goto_15

    .line 23061
    .end local v2    # "win":Lcom/android/server/wm/WindowState;
    :cond_45
    iput-boolean v6, p1, Lcom/android/server/wm/AppWindowToken;->allDrawn:Z

    .line 23062
    iput-boolean v6, p1, Lcom/android/server/wm/AppWindowToken;->deferClearAllDrawn:Z

    .line 23063
    iput v6, p1, Lcom/android/server/wm/AppWindowToken;->numDrawnWindows:I

    iput v6, p1, Lcom/android/server/wm/AppWindowToken;->numInterestingWindows:I

    goto :goto_4
.end method

.method private setAnimatorDurationScale(F)V
    .registers 2
    .param p1, "scale"    # F

    .prologue
    .line 10082
    iput p1, p0, mAnimatorDurationScaleSetting:F

    .line 10083
    invoke-static {p1}, Landroid/animation/ValueAnimator;->setDurationScale(F)V

    .line 10084
    return-void
.end method

.method private setCoverConfiguration(Z)Z
    .registers 9
    .param p1, "switchState"    # Z

    .prologue
    const/4 v6, 0x1

    .line 14236
    const/4 v0, 0x0

    .line 14240
    .local v0, "changed":Z
    iget v2, p0, mForcedAppOrientation:I

    .line 14241
    .local v2, "req":I
    if-ne p1, v6, :cond_a

    .line 14242
    invoke-virtual {p0}, getOrientationLocked()I

    move-result v2

    .line 14244
    :cond_a
    iget-object v3, p0, mPolicy:Landroid/view/WindowManagerPolicy;

    iget v4, p0, mRotation:I

    const/4 v5, 0x0

    invoke-interface {v3, v2, v4, v5}, Landroid/view/WindowManagerPolicy;->rotationForOrientationLw(III)I

    move-result v1

    .line 14246
    .local v1, "newRotation":I
    iget v3, p0, mRotation:I

    if-eq v3, v1, :cond_24

    .line 14247
    invoke-virtual {p0, v6, v6}, updateRotationUncheckedLocked(ZZ)Z

    move-result v0

    .line 14249
    if-eqz v0, :cond_24

    .line 14250
    iget-object v3, p0, mH:Lcom/android/server/wm/WindowManagerService$H;

    const/16 v4, 0x12

    invoke-virtual {v3, v4}, Lcom/android/server/wm/WindowManagerService$H;->sendEmptyMessage(I)Z

    .line 14253
    :cond_24
    return v0
.end method

.method private setForcedDisplayDensityLocked(Lcom/android/server/wm/DisplayContent;I)V
    .registers 6
    .param p1, "displayContent"    # Lcom/android/server/wm/DisplayContent;
    .param p2, "density"    # I

    .prologue
    .line 14644
    const-string v0, "WindowManager"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Using new display density: "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 14646
    iget-object v1, p1, Lcom/android/server/wm/DisplayContent;->mDisplaySizeLock:Ljava/lang/Object;

    monitor-enter v1

    .line 14647
    :try_start_1b
    iput p2, p1, Lcom/android/server/wm/DisplayContent;->mBaseDisplayDensity:I

    .line 14648
    monitor-exit v1
    :try_end_1e
    .catchall {:try_start_1b .. :try_end_1e} :catchall_22

    .line 14649
    invoke-direct {p0, p1}, reconfigureDisplayLocked(Lcom/android/server/wm/DisplayContent;)V

    .line 14650
    return-void

    .line 14648
    :catchall_22
    move-exception v0

    :try_start_23
    monitor-exit v1
    :try_end_24
    .catchall {:try_start_23 .. :try_end_24} :catchall_22

    throw v0
.end method

.method private setForcedDisplayScalingModeLocked(Lcom/android/server/wm/DisplayContent;I)V
    .registers 6
    .param p1, "displayContent"    # Lcom/android/server/wm/DisplayContent;
    .param p2, "mode"    # I

    .prologue
    .line 14475
    const-string v1, "WindowManager"

    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Using display scaling mode: "

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    if-nez p2, :cond_29

    const-string v0, "auto"

    :goto_11
    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-static {v1, v0}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 14477
    iget-object v1, p1, Lcom/android/server/wm/DisplayContent;->mDisplaySizeLock:Ljava/lang/Object;

    monitor-enter v1

    .line 14478
    if-eqz p2, :cond_2d

    const/4 v0, 0x1

    :goto_22
    :try_start_22
    iput-boolean v0, p1, Lcom/android/server/wm/DisplayContent;->mDisplayScalingDisabled:Z

    .line 14479
    monitor-exit v1
    :try_end_25
    .catchall {:try_start_22 .. :try_end_25} :catchall_2f

    .line 14480
    invoke-direct {p0, p1}, reconfigureDisplayLocked(Lcom/android/server/wm/DisplayContent;)V

    .line 14481
    return-void

    .line 14475
    :cond_29
    const-string/jumbo v0, "off"

    goto :goto_11

    .line 14478
    :cond_2d
    const/4 v0, 0x0

    goto :goto_22

    .line 14479
    :catchall_2f
    move-exception v0

    :try_start_30
    monitor-exit v1
    :try_end_31
    .catchall {:try_start_30 .. :try_end_31} :catchall_2f

    throw v0
.end method

.method private setForcedDisplaySizeLocked(Lcom/android/server/wm/DisplayContent;II)V
    .registers 7
    .param p1, "displayContent"    # Lcom/android/server/wm/DisplayContent;
    .param p2, "width"    # I
    .param p3, "height"    # I

    .prologue
    .line 14543
    const-string v0, "WindowManager"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Using new display size: "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string/jumbo v2, "x"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 14545
    iget-object v1, p1, Lcom/android/server/wm/DisplayContent;->mDisplaySizeLock:Ljava/lang/Object;

    monitor-enter v1

    .line 14546
    :try_start_26
    iput p2, p1, Lcom/android/server/wm/DisplayContent;->mBaseDisplayWidth:I

    .line 14547
    iput p3, p1, Lcom/android/server/wm/DisplayContent;->mBaseDisplayHeight:I

    .line 14548
    monitor-exit v1
    :try_end_2b
    .catchall {:try_start_26 .. :try_end_2b} :catchall_2f

    .line 14549
    invoke-direct {p0, p1}, reconfigureDisplayLocked(Lcom/android/server/wm/DisplayContent;)V

    .line 14550
    return-void

    .line 14548
    :catchall_2f
    move-exception v0

    :try_start_30
    monitor-exit v1
    :try_end_31
    .catchall {:try_start_30 .. :try_end_31} :catchall_2f

    throw v0
.end method

.method private setOverscanLocked(Lcom/android/server/wm/DisplayContent;IIII)V
    .registers 13
    .param p1, "displayContent"    # Lcom/android/server/wm/DisplayContent;
    .param p2, "left"    # I
    .param p3, "top"    # I
    .param p4, "right"    # I
    .param p5, "bottom"    # I

    .prologue
    .line 14757
    invoke-virtual {p1}, Lcom/android/server/wm/DisplayContent;->getDisplayInfo()Landroid/view/DisplayInfo;

    move-result-object v6

    .line 14758
    .local v6, "displayInfo":Landroid/view/DisplayInfo;
    iget-object v1, p1, Lcom/android/server/wm/DisplayContent;->mDisplaySizeLock:Ljava/lang/Object;

    monitor-enter v1

    .line 14759
    :try_start_7
    iput p2, v6, Landroid/view/DisplayInfo;->overscanLeft:I

    .line 14760
    iput p3, v6, Landroid/view/DisplayInfo;->overscanTop:I

    .line 14761
    iput p4, v6, Landroid/view/DisplayInfo;->overscanRight:I

    .line 14762
    iput p5, v6, Landroid/view/DisplayInfo;->overscanBottom:I

    .line 14763
    monitor-exit v1
    :try_end_10
    .catchall {:try_start_7 .. :try_end_10} :catchall_24

    .line 14765
    iget-object v0, p0, mDisplaySettings:Lcom/android/server/wm/DisplaySettings;

    iget-object v1, v6, Landroid/view/DisplayInfo;->uniqueId:Ljava/lang/String;

    move v2, p2

    move v3, p3

    move v4, p4

    move v5, p5

    invoke-virtual/range {v0 .. v5}, Lcom/android/server/wm/DisplaySettings;->setOverscanLocked(Ljava/lang/String;IIII)V

    .line 14766
    iget-object v0, p0, mDisplaySettings:Lcom/android/server/wm/DisplaySettings;

    invoke-virtual {v0}, Lcom/android/server/wm/DisplaySettings;->writeSettingsLocked()V

    .line 14768
    invoke-direct {p0, p1}, reconfigureDisplayLocked(Lcom/android/server/wm/DisplayContent;)V

    .line 14769
    return-void

    .line 14763
    :catchall_24
    move-exception v0

    :try_start_25
    monitor-exit v1
    :try_end_26
    .catchall {:try_start_25 .. :try_end_26} :catchall_24

    throw v0
.end method

.method private showStrictModeViolation(II)V
    .registers 15
    .param p1, "arg"    # I
    .param p2, "pid"    # I

    .prologue
    .line 10681
    if-eqz p1, :cond_3b

    const/4 v4, 0x1

    .line 10682
    .local v4, "on":Z
    :goto_3
    iget-object v9, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v9

    .line 10686
    if-eqz v4, :cond_44

    .line 10687
    const/4 v1, 0x0

    .line 10688
    .local v1, "isVisible":Z
    :try_start_9
    iget-object v8, p0, mDisplayContents:Landroid/util/SparseArray;

    invoke-virtual {v8}, Landroid/util/SparseArray;->size()I

    move-result v2

    .line 10689
    .local v2, "numDisplays":I
    const/4 v0, 0x0

    .local v0, "displayNdx":I
    :goto_10
    if-ge v0, v2, :cond_40

    .line 10690
    iget-object v8, p0, mDisplayContents:Landroid/util/SparseArray;

    invoke-virtual {v8, v0}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v8

    check-cast v8, Lcom/android/server/wm/DisplayContent;

    invoke-virtual {v8}, Lcom/android/server/wm/DisplayContent;->getWindowList()Lcom/android/server/wm/WindowList;

    move-result-object v6

    .line 10691
    .local v6, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual {v6}, Lcom/android/server/wm/WindowList;->size()I

    move-result v3

    .line 10692
    .local v3, "numWindows":I
    const/4 v5, 0x0

    .local v5, "winNdx":I
    :goto_23
    if-ge v5, v3, :cond_38

    .line 10693
    invoke-virtual {v6, v5}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v7

    check-cast v7, Lcom/android/server/wm/WindowState;

    .line 10694
    .local v7, "ws":Lcom/android/server/wm/WindowState;
    iget-object v8, v7, Lcom/android/server/wm/WindowState;->mSession:Lcom/android/server/wm/Session;

    iget v8, v8, Lcom/android/server/wm/Session;->mPid:I

    if-ne v8, p2, :cond_3d

    invoke-virtual {v7}, Lcom/android/server/wm/WindowState;->isVisibleLw()Z

    move-result v8

    if-eqz v8, :cond_3d

    .line 10695
    const/4 v1, 0x1

    .line 10689
    .end local v7    # "ws":Lcom/android/server/wm/WindowState;
    :cond_38
    add-int/lit8 v0, v0, 0x1

    goto :goto_10

    .line 10681
    .end local v0    # "displayNdx":I
    .end local v1    # "isVisible":Z
    .end local v2    # "numDisplays":I
    .end local v3    # "numWindows":I
    .end local v4    # "on":Z
    .end local v5    # "winNdx":I
    .end local v6    # "windows":Lcom/android/server/wm/WindowList;
    :cond_3b
    const/4 v4, 0x0

    goto :goto_3

    .line 10692
    .restart local v0    # "displayNdx":I
    .restart local v1    # "isVisible":Z
    .restart local v2    # "numDisplays":I
    .restart local v3    # "numWindows":I
    .restart local v4    # "on":Z
    .restart local v5    # "winNdx":I
    .restart local v6    # "windows":Lcom/android/server/wm/WindowList;
    .restart local v7    # "ws":Lcom/android/server/wm/WindowState;
    :cond_3d
    add-int/lit8 v5, v5, 0x1

    goto :goto_23

    .line 10700
    .end local v3    # "numWindows":I
    .end local v5    # "winNdx":I
    .end local v6    # "windows":Lcom/android/server/wm/WindowList;
    .end local v7    # "ws":Lcom/android/server/wm/WindowState;
    :cond_40
    if-nez v1, :cond_44

    .line 10701
    monitor-exit v9

    .line 10721
    .end local v0    # "displayNdx":I
    .end local v1    # "isVisible":Z
    .end local v2    # "numDisplays":I
    :goto_43
    return-void

    .line 10707
    :cond_44
    invoke-static {}, Landroid/view/SurfaceControl;->openTransaction()V
    :try_end_47
    .catchall {:try_start_9 .. :try_end_47} :catchall_66

    .line 10710
    :try_start_47
    iget-object v8, p0, mStrictModeFlash:Lcom/android/server/wm/StrictModeFlash;

    if-nez v8, :cond_5c

    .line 10711
    new-instance v8, Lcom/android/server/wm/StrictModeFlash;

    invoke-virtual {p0}, getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v10

    invoke-virtual {v10}, Lcom/android/server/wm/DisplayContent;->getDisplay()Landroid/view/Display;

    move-result-object v10

    iget-object v11, p0, mFxSession:Landroid/view/SurfaceSession;

    invoke-direct {v8, v10, v11}, Lcom/android/server/wm/StrictModeFlash;-><init>(Landroid/view/Display;Landroid/view/SurfaceSession;)V

    iput-object v8, p0, mStrictModeFlash:Lcom/android/server/wm/StrictModeFlash;

    .line 10714
    :cond_5c
    iget-object v8, p0, mStrictModeFlash:Lcom/android/server/wm/StrictModeFlash;

    invoke-virtual {v8, v4}, Lcom/android/server/wm/StrictModeFlash;->setVisibility(Z)V
    :try_end_61
    .catchall {:try_start_47 .. :try_end_61} :catchall_69

    .line 10716
    :try_start_61
    invoke-static {}, Landroid/view/SurfaceControl;->closeTransaction()V

    .line 10720
    monitor-exit v9

    goto :goto_43

    :catchall_66
    move-exception v8

    monitor-exit v9
    :try_end_68
    .catchall {:try_start_61 .. :try_end_68} :catchall_66

    throw v8

    .line 10716
    :catchall_69
    move-exception v8

    :try_start_6a
    invoke-static {}, Landroid/view/SurfaceControl;->closeTransaction()V

    throw v8
    :try_end_6e
    .catchall {:try_start_6a .. :try_end_6e} :catchall_66
.end method

.method private startAppFreezingScreenLocked(Lcom/android/server/wm/AppWindowToken;)V
    .registers 12
    .param p1, "wtoken"    # Lcom/android/server/wm/AppWindowToken;

    .prologue
    const/16 v9, 0x11

    const/4 v8, 0x1

    const/4 v7, 0x0

    .line 8729
    sget-boolean v4, DEBUG_ORIENTATION:Z

    if-eqz v4, :cond_49

    .line 8730
    const/4 v1, 0x0

    .line 8735
    .local v1, "e":Ljava/lang/RuntimeException;
    const-string v4, "WindowManager"

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string v6, "Set freezing of "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    iget-object v6, p1, Lcom/android/server/wm/AppWindowToken;->appToken:Landroid/view/IApplicationToken;

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v5

    const-string v6, ": hidden="

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    iget-boolean v6, p1, Lcom/android/server/wm/AppWindowToken;->hidden:Z

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v5

    const-string v6, " freezing="

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    iget-object v6, p1, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    iget-boolean v6, v6, Lcom/android/server/wm/AppWindowAnimator;->freezingScreen:Z

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v5

    const-string v6, " hiddenRequested="

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    iget-boolean v6, p1, Lcom/android/server/wm/AppWindowToken;->hiddenRequested:Z

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v4, v5, v1}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 8751
    .end local v1    # "e":Ljava/lang/RuntimeException;
    :cond_49
    iget-boolean v4, p1, Lcom/android/server/wm/AppWindowToken;->hiddenRequested:Z

    if-nez v4, :cond_8a

    .line 8752
    iget-object v4, p1, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    iget-boolean v4, v4, Lcom/android/server/wm/AppWindowAnimator;->freezingScreen:Z

    if-nez v4, :cond_74

    .line 8753
    iget-object v4, p1, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    iput-boolean v8, v4, Lcom/android/server/wm/AppWindowAnimator;->freezingScreen:Z

    .line 8754
    iget-object v4, p1, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    iput v7, v4, Lcom/android/server/wm/AppWindowAnimator;->lastFreezeDuration:I

    .line 8755
    iget v4, p0, mAppsFreezingScreen:I

    add-int/lit8 v4, v4, 0x1

    iput v4, p0, mAppsFreezingScreen:I

    .line 8756
    iget v4, p0, mAppsFreezingScreen:I

    if-ne v4, v8, :cond_74

    .line 8762
    invoke-direct {p0, v7, v7, v7}, startFreezingDisplayLocked(ZII)V

    .line 8763
    iget-object v4, p0, mH:Lcom/android/server/wm/WindowManagerService$H;

    invoke-virtual {v4, v9}, Lcom/android/server/wm/WindowManagerService$H;->removeMessages(I)V

    .line 8764
    iget-object v4, p0, mH:Lcom/android/server/wm/WindowManagerService$H;

    const-wide/16 v6, 0x7d0

    invoke-virtual {v4, v9, v6, v7}, Lcom/android/server/wm/WindowManagerService$H;->sendEmptyMessageDelayed(IJ)Z

    .line 8767
    :cond_74
    iget-object v4, p1, Lcom/android/server/wm/AppWindowToken;->allAppWindows:Lcom/android/server/wm/WindowList;

    invoke-virtual {v4}, Lcom/android/server/wm/WindowList;->size()I

    move-result v0

    .line 8768
    .local v0, "N":I
    const/4 v2, 0x0

    .local v2, "i":I
    :goto_7b
    if-ge v2, v0, :cond_8a

    .line 8769
    iget-object v4, p1, Lcom/android/server/wm/AppWindowToken;->allAppWindows:Lcom/android/server/wm/WindowList;

    invoke-virtual {v4, v2}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/wm/WindowState;

    .line 8770
    .local v3, "w":Lcom/android/server/wm/WindowState;
    iput-boolean v8, v3, Lcom/android/server/wm/WindowState;->mAppFreezing:Z

    .line 8768
    add-int/lit8 v2, v2, 0x1

    goto :goto_7b

    .line 8773
    .end local v0    # "N":I
    .end local v2    # "i":I
    .end local v3    # "w":Lcom/android/server/wm/WindowState;
    :cond_8a
    return-void
.end method

.method private startFreezingDisplayLocked(ZII)V
    .registers 23
    .param p1, "inTransaction"    # Z
    .param p2, "exitAnim"    # I
    .param p3, "enterAnim"    # I

    .prologue
    .line 18494
    move-object/from16 v0, p0

    iget-boolean v3, v0, mDisplayFrozen:Z

    if-eqz v3, :cond_7

    .line 18690
    :cond_6
    :goto_6
    return-void

    .line 18497
    :cond_7
    move-object/from16 v0, p0

    iget-boolean v3, v0, mDisplayReady:Z

    if-eqz v3, :cond_6

    .line 18503
    move-object/from16 v0, p0

    iget-object v3, v0, mScreenFrozenLock:Landroid/os/PowerManager$WakeLock;

    invoke-virtual {v3}, Landroid/os/PowerManager$WakeLock;->acquire()V

    .line 18506
    const/4 v12, 0x0

    .line 18508
    .local v12, "dualScreenTransition":Lcom/android/server/wm/DualScreenTransition;
    sget-boolean v3, DEBUG_DUALSCREEN:Z

    if-eqz v3, :cond_53

    .line 18509
    move-object/from16 v0, p0

    iget-object v3, v0, mAnimator:Lcom/android/server/wm/WindowAnimator;

    invoke-virtual {v3}, Lcom/android/server/wm/WindowAnimator;->getDualScreenTransitionLocked()Lcom/android/server/wm/DualScreenTransition;

    move-result-object v12

    .line 18510
    new-instance v15, Ljava/lang/StringBuilder;

    const/16 v3, 0x80

    invoke-direct {v15, v3}, Ljava/lang/StringBuilder;-><init>(I)V

    .line 18511
    .local v15, "sb":Ljava/lang/StringBuilder;
    const-string/jumbo v3, "freeze display! freezeRequests : "

    invoke-virtual {v15, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 18512
    const-string v3, "WindowManager"

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v15}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    const-string v6, " callers="

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    const/4 v6, 0x6

    invoke-static {v6}, Landroid/os/Debug;->getCallers(I)Ljava/lang/String;

    move-result-object v6

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v3, v5}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 18515
    .end local v15    # "sb":Ljava/lang/StringBuilder;
    :cond_53
    sget-boolean v3, DUALSCREEN_DEBUG_INPUT_METHOD:Z

    if-eqz v3, :cond_61

    .line 18516
    move-object/from16 v0, p0

    iget-object v3, v0, mDualScreenInputMethodManager:Lcom/android/server/wm/DualScreenInputMethodManager;

    const-string/jumbo v5, "start display freeze"

    invoke-virtual {v3, v5}, Lcom/android/server/wm/DualScreenInputMethodManager;->printDebugInfo(Ljava/lang/String;)V

    .line 18519
    :cond_61
    const/4 v14, 0x0

    .line 18520
    .local v14, "previousDisplayFrozens":[Z
    const/16 v16, 0x0

    .line 18530
    .local v16, "screenRotationAllowed":[Z
    const/4 v3, 0x1

    move-object/from16 v0, p0

    iput-boolean v3, v0, mDisplayFrozen:Z

    .line 18531
    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J

    move-result-wide v6

    move-object/from16 v0, p0

    iput-wide v6, v0, mDisplayFreezeTime:J

    .line 18532
    const/4 v3, 0x0

    move-object/from16 v0, p0

    iput-object v3, v0, mLastFinishedFreezeSource:Ljava/lang/Object;

    .line 18534
    move-object/from16 v0, p0

    iget-object v3, v0, mInputMonitor:Lcom/android/server/wm/InputMonitor;

    invoke-virtual {v3}, Lcom/android/server/wm/InputMonitor;->freezeInputDispatchingLw()V

    .line 18539
    move-object/from16 v0, p0

    iget-object v3, v0, mPolicy:Landroid/view/WindowManagerPolicy;

    const/4 v5, 0x0

    const/4 v6, 0x0

    invoke-interface {v3, v5, v6}, Landroid/view/WindowManagerPolicy;->setLastInputMethodWindowLw(Landroid/view/WindowManagerPolicy$WindowState;Landroid/view/WindowManagerPolicy$WindowState;)V

    .line 18563
    move-object/from16 v0, p0

    iget-object v3, v0, mAppTransition:Lcom/android/server/wm/AppTransition;

    invoke-virtual {v3}, Lcom/android/server/wm/AppTransition;->isTransitionSet()Z

    move-result v3

    if-eqz v3, :cond_97

    .line 18564
    move-object/from16 v0, p0

    iget-object v3, v0, mAppTransition:Lcom/android/server/wm/AppTransition;

    invoke-virtual {v3}, Lcom/android/server/wm/AppTransition;->freeze()V

    .line 18574
    :cond_97
    move/from16 v0, p2

    move-object/from16 v1, p0

    iput v0, v1, mExitAnimId:I

    .line 18575
    move/from16 v0, p3

    move-object/from16 v1, p0

    iput v0, v1, mEnterAnimId:I

    .line 18655
    invoke-virtual/range {p0 .. p0}, getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v4

    .line 18656
    .local v4, "displayContent":Lcom/android/server/wm/DisplayContent;
    invoke-virtual {v4}, Lcom/android/server/wm/DisplayContent;->getDisplayId()I

    move-result v11

    .line 18657
    .local v11, "displayId":I
    move-object/from16 v0, p0

    iget-object v3, v0, mAnimator:Lcom/android/server/wm/WindowAnimator;

    invoke-virtual {v3, v11}, Lcom/android/server/wm/WindowAnimator;->getScreenRotationAnimationLocked(I)Lcom/android/server/wm/ScreenRotationAnimation;

    move-result-object v2

    .line 18659
    .local v2, "screenRotationAnimation":Lcom/android/server/wm/ScreenRotationAnimation;
    if-eqz v2, :cond_b8

    .line 18660
    invoke-virtual {v2}, Lcom/android/server/wm/ScreenRotationAnimation;->kill()V

    .line 18664
    :cond_b8
    const/4 v8, 0x0

    .line 18665
    .local v8, "isSecure":Z
    invoke-virtual/range {p0 .. p0}, getDefaultWindowListLocked()Lcom/android/server/wm/WindowList;

    move-result-object v17

    .line 18666
    .local v17, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual/range {v17 .. v17}, Lcom/android/server/wm/WindowList;->size()I

    move-result v10

    .line 18667
    .local v10, "N":I
    const/4 v13, 0x0

    .local v13, "i":I
    :goto_c2
    if-ge v13, v10, :cond_dd

    .line 18668
    move-object/from16 v0, v17

    invoke-virtual {v0, v13}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v18

    check-cast v18, Lcom/android/server/wm/WindowState;

    .line 18669
    .local v18, "ws":Lcom/android/server/wm/WindowState;
    invoke-virtual/range {v18 .. v18}, Lcom/android/server/wm/WindowState;->isOnScreen()Z

    move-result v3

    if-eqz v3, :cond_10c

    move-object/from16 v0, v18

    iget-object v3, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v3, v3, Landroid/view/WindowManager$LayoutParams;->flags:I

    and-int/lit16 v3, v3, 0x2000

    if-eqz v3, :cond_10c

    .line 18670
    const/4 v8, 0x1

    .line 18676
    .end local v18    # "ws":Lcom/android/server/wm/WindowState;
    :cond_dd
    invoke-virtual {v4}, Lcom/android/server/wm/DisplayContent;->updateDisplayInfo()V

    .line 18677
    new-instance v2, Lcom/android/server/wm/ScreenRotationAnimation;

    .end local v2    # "screenRotationAnimation":Lcom/android/server/wm/ScreenRotationAnimation;
    move-object/from16 v0, p0

    iget-object v3, v0, mContext:Landroid/content/Context;

    move-object/from16 v0, p0

    iget-object v5, v0, mFxSession:Landroid/view/SurfaceSession;

    move-object/from16 v0, p0

    iget-object v6, v0, mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v6}, Landroid/view/WindowManagerPolicy;->isDefaultOrientationForced()Z

    move-result v7

    move-object/from16 v0, p0

    invoke-direct {v0, v4}, findForceLocalOrientationWindowLayer(Lcom/android/server/wm/DisplayContent;)I

    move-result v9

    move/from16 v6, p1

    invoke-direct/range {v2 .. v9}, Lcom/android/server/wm/ScreenRotationAnimation;-><init>(Landroid/content/Context;Lcom/android/server/wm/DisplayContent;Landroid/view/SurfaceSession;ZZZI)V

    .line 18682
    .restart local v2    # "screenRotationAnimation":Lcom/android/server/wm/ScreenRotationAnimation;
    move-object/from16 v0, p0

    iget-object v3, v0, mAnimator:Lcom/android/server/wm/WindowAnimator;

    invoke-virtual {v3, v11, v2}, Lcom/android/server/wm/WindowAnimator;->setScreenRotationAnimationLocked(ILcom/android/server/wm/ScreenRotationAnimation;)V

    .line 18685
    const/4 v3, 0x0

    move-object/from16 v0, p0

    invoke-virtual {v0, v3}, finishMultiWindowTransitionLocked(I)V

    goto/16 :goto_6

    .line 18667
    .restart local v18    # "ws":Lcom/android/server/wm/WindowState;
    :cond_10c
    add-int/lit8 v13, v13, 0x1

    goto :goto_c2
.end method

.method private stopFreezingDisplayLocked()V
    .registers 28

    .prologue
    .line 18693
    const/16 v23, 0x0

    .line 18711
    .local v23, "updateRotation":Z
    move-object/from16 v0, p0

    iget-boolean v3, v0, mDisplayFrozen:Z

    if-nez v3, :cond_11

    .line 18713
    move-object/from16 v0, p0

    iget-object v3, v0, mPolicy:Landroid/view/WindowManagerPolicy;

    const/4 v4, 0x0

    invoke-interface {v3, v4}, Landroid/view/WindowManagerPolicy;->requestDefaultKeyguardRotationAnimation(Z)V

    .line 19004
    :cond_10
    :goto_10
    return-void

    .line 18719
    :cond_11
    sget-boolean v3, DEBUG_DUALSCREEN:Z

    if-eqz v3, :cond_3b

    sget-boolean v3, Lcom/android/server/wm/DualScreenTransition;->DEBUG:Z

    if-eqz v3, :cond_3b

    sget-boolean v3, DEBUG_ORIENTATION:Z

    if-eqz v3, :cond_3b

    .line 18720
    const-string v3, "WindowManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v5, "try to stop freezing display! callers="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    const/4 v5, 0x6

    invoke-static {v5}, Landroid/os/Debug;->getCallers(I)Ljava/lang/String;

    move-result-object v5

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v3, v4}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 18723
    :cond_3b
    move-object/from16 v0, p0

    iget-boolean v3, v0, mWaitingForConfig:Z

    if-nez v3, :cond_5e

    move-object/from16 v0, p0

    iget v3, v0, mAppsFreezingScreen:I

    if-gtz v3, :cond_5e

    move-object/from16 v0, p0

    iget v3, v0, mWindowsFreezingScreen:I

    const/4 v4, 0x1

    if-eq v3, v4, :cond_5e

    move-object/from16 v0, p0

    iget-boolean v3, v0, mClientFreezingScreen:Z

    if-nez v3, :cond_5e

    move-object/from16 v0, p0

    iget-object v3, v0, mOpeningApps:Landroid/util/ArraySet;

    invoke-virtual {v3}, Landroid/util/ArraySet;->isEmpty()Z

    move-result v3

    if-nez v3, :cond_bd

    .line 18726
    :cond_5e
    sget-boolean v3, DEBUG_ORIENTATION:Z

    if-eqz v3, :cond_10

    const-string v3, "WindowManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v5, "stopFreezingDisplayLocked: Returning mWaitingForConfig="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p0

    iget-boolean v5, v0, mWaitingForConfig:Z

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, ", mAppsFreezingScreen="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p0

    iget v5, v0, mAppsFreezingScreen:I

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, ", mWindowsFreezingScreen="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p0

    iget v5, v0, mWindowsFreezingScreen:I

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, ", mClientFreezingScreen="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p0

    iget-boolean v5, v0, mClientFreezingScreen:Z

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, ", mOpeningApps.size()="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p0

    iget-object v5, v0, mOpeningApps:Landroid/util/ArraySet;

    invoke-virtual {v5}, Landroid/util/ArraySet;->size()I

    move-result v5

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v3, v4}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto/16 :goto_10

    .line 18734
    :cond_bd
    const/16 v17, 0x0

    .line 18773
    .local v17, "dualScreenTransition":Lcom/android/server/wm/DualScreenTransition;
    move-object/from16 v0, p0

    iget-boolean v3, v0, mWaitingForConfig:Z

    if-nez v3, :cond_de

    move-object/from16 v0, p0

    iget v3, v0, mAppsFreezingScreen:I

    if-gtz v3, :cond_de

    move-object/from16 v0, p0

    iget v3, v0, mWindowsFreezingScreen:I

    const/4 v4, 0x1

    if-eq v3, v4, :cond_de

    move-object/from16 v0, p0

    iget-boolean v3, v0, mClientFreezingScreen:Z

    if-nez v3, :cond_de

    move-object/from16 v0, p0

    iget-boolean v3, v0, mHasAppWindowForWaitingForOrientation:Z

    if-eqz v3, :cond_17c

    .line 18775
    :cond_de
    sget-boolean v3, SAFE_DEBUG:Z

    if-eqz v3, :cond_137

    const-string v3, "WindowManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v5, "stopFreezingDisplayLocked: Returning mWaitingForConfig="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p0

    iget-boolean v5, v0, mWaitingForConfig:Z

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, ", mAppsFreezingScreen="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p0

    iget v5, v0, mAppsFreezingScreen:I

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, ", mWindowsFreezingScreen="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p0

    iget v5, v0, mWindowsFreezingScreen:I

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, ", mClientFreezingScreen="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p0

    iget-boolean v5, v0, mClientFreezingScreen:Z

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, ", mHasNotDrawnWindowForAppFreezing="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p0

    iget-boolean v5, v0, mHasAppWindowForWaitingForOrientation:Z

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v3, v4}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 18782
    :cond_137
    sget-boolean v3, SAFE_DEBUG:Z

    if-eqz v3, :cond_10

    .line 18783
    move-object/from16 v0, p0

    iget-boolean v3, v0, mHasAppWindowForWaitingForOrientation:Z

    if-eqz v3, :cond_10

    .line 18784
    invoke-virtual/range {p0 .. p0}, getDefaultWindowListLocked()Lcom/android/server/wm/WindowList;

    move-result-object v24

    .line 18785
    .local v24, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual/range {v24 .. v24}, Lcom/android/server/wm/WindowList;->size()I

    move-result v11

    .line 18786
    .local v11, "N":I
    const/16 v19, 0x0

    .local v19, "i":I
    :goto_14b
    move/from16 v0, v19

    if-ge v0, v11, :cond_10

    .line 18787
    move-object/from16 v0, v24

    move/from16 v1, v19

    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v25

    check-cast v25, Lcom/android/server/wm/WindowState;

    .line 18788
    .local v25, "ws":Lcom/android/server/wm/WindowState;
    move-object/from16 v0, v25

    iget-boolean v3, v0, Lcom/android/server/wm/WindowState;->mWaitingForOrientation:Z

    if-eqz v3, :cond_179

    .line 18789
    const-string v3, "WindowManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "    waiting for orientation > "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, v25

    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v3, v4}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 18786
    :cond_179
    add-int/lit8 v19, v19, 0x1

    goto :goto_14b

    .line 18806
    .end local v11    # "N":I
    .end local v19    # "i":I
    .end local v24    # "windows":Lcom/android/server/wm/WindowList;
    .end local v25    # "ws":Lcom/android/server/wm/WindowState;
    :cond_17c
    const/4 v3, 0x0

    move-object/from16 v0, p0

    iput-boolean v3, v0, mDisplayFrozen:Z

    .line 18809
    :try_start_181
    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J

    move-result-wide v4

    move-object/from16 v0, p0

    iget-wide v6, v0, mDisplayFreezeTime:J

    sub-long/2addr v4, v6

    long-to-int v3, v4

    move-object/from16 v0, p0

    iput v3, v0, mLastDisplayFreezeDuration:I

    .line 18810
    new-instance v22, Ljava/lang/StringBuilder;

    const/16 v3, 0x80

    move-object/from16 v0, v22

    invoke-direct {v0, v3}, Ljava/lang/StringBuilder;-><init>(I)V

    .line 18811
    .local v22, "sb":Ljava/lang/StringBuilder;
    const-string v3, "Screen frozen for "

    move-object/from16 v0, v22

    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 18812
    move-object/from16 v0, p0

    iget v3, v0, mLastDisplayFreezeDuration:I

    int-to-long v4, v3

    move-object/from16 v0, v22

    invoke-static {v4, v5, v0}, Landroid/util/TimeUtils;->formatDuration(JLjava/lang/StringBuilder;)V

    .line 18813
    move-object/from16 v0, p0

    iget-object v3, v0, mLastFinishedFreezeSource:Ljava/lang/Object;

    if-eqz v3, :cond_1bf

    .line 18814
    const-string v3, " due to "

    move-object/from16 v0, v22

    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 18815
    move-object/from16 v0, p0

    iget-object v3, v0, mLastFinishedFreezeSource:Ljava/lang/Object;

    move-object/from16 v0, v22

    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 18817
    :cond_1bf
    const-string v3, "WindowManager"

    invoke-virtual/range {v22 .. v22}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v3, v4}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 18818
    move-object/from16 v0, p0

    iget-object v3, v0, mH:Lcom/android/server/wm/WindowManagerService$H;

    const/16 v4, 0x11

    invoke-virtual {v3, v4}, Lcom/android/server/wm/WindowManagerService$H;->removeMessages(I)V

    .line 18819
    move-object/from16 v0, p0

    iget-object v3, v0, mH:Lcom/android/server/wm/WindowManagerService$H;

    const/16 v4, 0x1e

    invoke-virtual {v3, v4}, Lcom/android/server/wm/WindowManagerService$H;->removeMessages(I)V

    .line 18880
    invoke-virtual/range {p0 .. p0}, getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v14

    .line 18881
    .local v14, "displayContent":Lcom/android/server/wm/DisplayContent;
    invoke-virtual {v14}, Lcom/android/server/wm/DisplayContent;->getDisplayId()I

    move-result v15

    .line 18882
    .local v15, "displayId":I
    invoke-virtual {v14}, Lcom/android/server/wm/DisplayContent;->getDisplayInfo()Landroid/view/DisplayInfo;

    move-result-object v16

    .line 18883
    .local v16, "displayInfo":Landroid/view/DisplayInfo;
    move-object/from16 v0, p0

    iget-object v3, v0, mAnimator:Lcom/android/server/wm/WindowAnimator;

    invoke-virtual {v3, v15}, Lcom/android/server/wm/WindowAnimator;->getScreenRotationAnimationLocked(I)Lcom/android/server/wm/ScreenRotationAnimation;

    move-result-object v2

    .line 18885
    .local v2, "screenRotationAnimation":Lcom/android/server/wm/ScreenRotationAnimation;
    if-eqz v2, :cond_30a

    invoke-virtual {v2}, Lcom/android/server/wm/ScreenRotationAnimation;->hasScreenshot()Z

    move-result v3

    if-eqz v3, :cond_30a

    invoke-static {}, Lcom/android/server/power/ShutdownThread;->IsStarted()Z

    move-result v3

    if-nez v3, :cond_30a

    .line 18888
    sget-boolean v3, DEBUG_ORIENTATION:Z

    if-eqz v3, :cond_207

    const-string v3, "WindowManager"

    const-string v4, "**** Dismissing screen rotation animation"

    invoke-static {v3, v4}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 18892
    :cond_207
    if-nez v15, :cond_297

    move-object/from16 v0, p0

    iget-object v3, v0, mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v3}, Landroid/view/WindowManagerPolicy;->isCocktailRotationAnimationNeeded()Z

    move-result v3

    if-nez v3, :cond_21d

    move-object/from16 v0, p0

    iget-object v3, v0, mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v3}, Landroid/view/WindowManagerPolicy;->isDefaultKeyguardRotationAnimationAlwaysUsed()Z

    move-result v3

    if-eqz v3, :cond_297

    .line 18894
    :cond_21d
    const/4 v3, 0x2

    new-array v12, v3, [I

    .line 18895
    .local v12, "anim":[I
    move-object/from16 v0, p0

    iget-object v3, v0, mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v3, v12}, Landroid/view/WindowManagerPolicy;->selectRotationAnimationLw([I)V

    .line 18896
    const/4 v3, 0x0

    aget v3, v12, v3

    move-object/from16 v0, p0

    iput v3, v0, mExitAnimId:I

    .line 18897
    const/4 v3, 0x1

    aget v3, v12, v3

    move-object/from16 v0, p0

    iput v3, v0, mEnterAnimId:I

    .line 18908
    .end local v12    # "anim":[I
    :cond_235
    :goto_235
    move-object/from16 v0, p0

    iget-object v3, v0, mPolicy:Landroid/view/WindowManagerPolicy;

    const/4 v4, 0x0

    invoke-interface {v3, v4}, Landroid/view/WindowManagerPolicy;->requestDefaultKeyguardRotationAnimation(Z)V

    .line 18910
    move-object/from16 v0, p0

    iget-object v3, v0, mFxSession:Landroid/view/SurfaceSession;

    const-wide/16 v4, 0x2710

    invoke-virtual/range {p0 .. p0}, getTransitionAnimationScaleLocked()F

    move-result v6

    move-object/from16 v0, v16

    iget v7, v0, Landroid/view/DisplayInfo;->logicalWidth:I

    move-object/from16 v0, v16

    iget v8, v0, Landroid/view/DisplayInfo;->logicalHeight:I

    move-object/from16 v0, p0

    iget v9, v0, mExitAnimId:I

    move-object/from16 v0, p0

    iget v10, v0, mEnterAnimId:I

    invoke-virtual/range {v2 .. v10}, Lcom/android/server/wm/ScreenRotationAnimation;->dismiss(Landroid/view/SurfaceSession;JFIIII)Z

    move-result v3

    if-eqz v3, :cond_2fb

    .line 18913
    invoke-virtual/range {p0 .. p0}, scheduleAnimationLocked()V
    :try_end_260
    .catch Ljava/lang/Exception; {:try_start_181 .. :try_end_260} :catch_2ba
    .catchall {:try_start_181 .. :try_end_260} :catchall_435

    .line 18934
    :goto_260
    invoke-virtual/range {p0 .. p0}, getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v14

    .line 18935
    invoke-virtual {v14}, Lcom/android/server/wm/DisplayContent;->getDisplayId()I

    move-result v15

    .line 18936
    invoke-virtual {v14}, Lcom/android/server/wm/DisplayContent;->getDisplayInfo()Landroid/view/DisplayInfo;

    move-result-object v16

    .line 18938
    move-object/from16 v0, p0

    iget-object v3, v0, mAnimator:Lcom/android/server/wm/WindowAnimator;

    invoke-virtual {v3, v15}, Lcom/android/server/wm/WindowAnimator;->getScreenRotationAnimationLocked(I)Lcom/android/server/wm/ScreenRotationAnimation;

    move-result-object v2

    .line 18941
    move-object/from16 v0, p0

    iget-object v3, v0, mInputMonitor:Lcom/android/server/wm/InputMonitor;

    invoke-virtual {v3}, Lcom/android/server/wm/InputMonitor;->thawInputDispatchingLw()V

    .line 18951
    const/4 v13, 0x0

    .line 18952
    .local v13, "configChanged":Z
    const/16 v21, 0x1

    .line 18956
    .local v21, "numberOfDisplayes":I
    const/16 v19, 0x0

    .restart local v19    # "i":I
    :goto_280
    move/from16 v0, v19

    move/from16 v1, v21

    if-ge v0, v1, :cond_31e

    .line 18957
    if-nez v13, :cond_293

    const/4 v3, 0x0

    move-object/from16 v0, p0

    move/from16 v1, v19

    invoke-virtual {v0, v3, v1}, updateOrientationFromAppTokensLockedInner(ZI)Z

    move-result v3

    if-eqz v3, :cond_31b

    :cond_293
    const/4 v13, 0x1

    .line 18956
    :goto_294
    add-int/lit8 v19, v19, 0x1

    goto :goto_280

    .line 18901
    .end local v13    # "configChanged":Z
    .end local v19    # "i":I
    .end local v21    # "numberOfDisplayes":I
    :cond_297
    :try_start_297
    invoke-virtual {v14}, Lcom/android/server/wm/DisplayContent;->isDimming()Z

    move-result v20

    .line 18902
    .local v20, "isDimming":Z
    move-object/from16 v0, p0

    iget-object v3, v0, mPolicy:Landroid/view/WindowManagerPolicy;

    move-object/from16 v0, p0

    iget v4, v0, mExitAnimId:I

    move-object/from16 v0, p0

    iget v5, v0, mEnterAnimId:I

    move/from16 v0, v20

    invoke-interface {v3, v4, v5, v0}, Landroid/view/WindowManagerPolicy;->validateRotationAnimationLw(IIZ)Z

    move-result v3

    if-nez v3, :cond_235

    .line 18903
    const/4 v3, 0x0

    move-object/from16 v0, p0

    iput v3, v0, mEnterAnimId:I

    move-object/from16 v0, p0

    iput v3, v0, mExitAnimId:I
    :try_end_2b8
    .catch Ljava/lang/Exception; {:try_start_297 .. :try_end_2b8} :catch_2ba
    .catchall {:try_start_297 .. :try_end_2b8} :catchall_435

    goto/16 :goto_235

    .line 18931
    .end local v2    # "screenRotationAnimation":Lcom/android/server/wm/ScreenRotationAnimation;
    .end local v14    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v15    # "displayId":I
    .end local v16    # "displayInfo":Landroid/view/DisplayInfo;
    .end local v20    # "isDimming":Z
    .end local v22    # "sb":Ljava/lang/StringBuilder;
    :catch_2ba
    move-exception v18

    .line 18932
    .local v18, "e":Ljava/lang/Exception;
    :try_start_2bb
    const-string v3, "WindowManager"

    const-string v4, "Unhandled exception while stopFreezingDisplayLocked"

    move-object/from16 v0, v18

    invoke-static {v3, v4, v0}, Landroid/util/Log;->wtf(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_2c4
    .catchall {:try_start_2bb .. :try_end_2c4} :catchall_435

    .line 18934
    invoke-virtual/range {p0 .. p0}, getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v14

    .line 18935
    .restart local v14    # "displayContent":Lcom/android/server/wm/DisplayContent;
    invoke-virtual {v14}, Lcom/android/server/wm/DisplayContent;->getDisplayId()I

    move-result v15

    .line 18936
    .restart local v15    # "displayId":I
    invoke-virtual {v14}, Lcom/android/server/wm/DisplayContent;->getDisplayInfo()Landroid/view/DisplayInfo;

    move-result-object v16

    .line 18938
    .restart local v16    # "displayInfo":Landroid/view/DisplayInfo;
    move-object/from16 v0, p0

    iget-object v3, v0, mAnimator:Lcom/android/server/wm/WindowAnimator;

    invoke-virtual {v3, v15}, Lcom/android/server/wm/WindowAnimator;->getScreenRotationAnimationLocked(I)Lcom/android/server/wm/ScreenRotationAnimation;

    move-result-object v2

    .line 18941
    .restart local v2    # "screenRotationAnimation":Lcom/android/server/wm/ScreenRotationAnimation;
    move-object/from16 v0, p0

    iget-object v3, v0, mInputMonitor:Lcom/android/server/wm/InputMonitor;

    invoke-virtual {v3}, Lcom/android/server/wm/InputMonitor;->thawInputDispatchingLw()V

    .line 18951
    const/4 v13, 0x0

    .line 18952
    .restart local v13    # "configChanged":Z
    const/16 v21, 0x1

    .line 18956
    .restart local v21    # "numberOfDisplayes":I
    const/16 v19, 0x0

    .restart local v19    # "i":I
    :goto_2e4
    move/from16 v0, v19

    move/from16 v1, v21

    if-ge v0, v1, :cond_3ab

    .line 18957
    if-nez v13, :cond_2f7

    const/4 v3, 0x0

    move-object/from16 v0, p0

    move/from16 v1, v19

    invoke-virtual {v0, v3, v1}, updateOrientationFromAppTokensLockedInner(ZI)Z

    move-result v3

    if-eqz v3, :cond_3a8

    :cond_2f7
    const/4 v13, 0x1

    .line 18956
    :goto_2f8
    add-int/lit8 v19, v19, 0x1

    goto :goto_2e4

    .line 18915
    .end local v13    # "configChanged":Z
    .end local v18    # "e":Ljava/lang/Exception;
    .end local v19    # "i":I
    .end local v21    # "numberOfDisplayes":I
    .restart local v22    # "sb":Ljava/lang/StringBuilder;
    :cond_2fb
    :try_start_2fb
    invoke-virtual {v2}, Lcom/android/server/wm/ScreenRotationAnimation;->kill()V

    .line 18916
    const/4 v2, 0x0

    .line 18917
    move-object/from16 v0, p0

    iget-object v3, v0, mAnimator:Lcom/android/server/wm/WindowAnimator;

    invoke-virtual {v3, v15, v2}, Lcom/android/server/wm/WindowAnimator;->setScreenRotationAnimationLocked(ILcom/android/server/wm/ScreenRotationAnimation;)V

    .line 18918
    const/16 v23, 0x1

    goto/16 :goto_260

    .line 18921
    :cond_30a
    if-eqz v2, :cond_317

    .line 18922
    invoke-virtual {v2}, Lcom/android/server/wm/ScreenRotationAnimation;->kill()V

    .line 18923
    const/4 v2, 0x0

    .line 18924
    move-object/from16 v0, p0

    iget-object v3, v0, mAnimator:Lcom/android/server/wm/WindowAnimator;

    invoke-virtual {v3, v15, v2}, Lcom/android/server/wm/WindowAnimator;->setScreenRotationAnimationLocked(ILcom/android/server/wm/ScreenRotationAnimation;)V
    :try_end_317
    .catch Ljava/lang/Exception; {:try_start_2fb .. :try_end_317} :catch_2ba
    .catchall {:try_start_2fb .. :try_end_317} :catchall_435

    .line 18926
    :cond_317
    const/16 v23, 0x1

    goto/16 :goto_260

    .line 18957
    .restart local v13    # "configChanged":Z
    .restart local v19    # "i":I
    .restart local v21    # "numberOfDisplayes":I
    :cond_31b
    const/4 v13, 0x0

    goto/16 :goto_294

    .line 18966
    :cond_31e
    move-object/from16 v0, p0

    iget-object v3, v0, mH:Lcom/android/server/wm/WindowManagerService$H;

    const/16 v4, 0xf

    invoke-virtual {v3, v4}, Lcom/android/server/wm/WindowManagerService$H;->removeMessages(I)V

    .line 18967
    move-object/from16 v0, p0

    iget-object v3, v0, mH:Lcom/android/server/wm/WindowManagerService$H;

    const/16 v4, 0xf

    const-wide/16 v6, 0x7d0

    invoke-virtual {v3, v4, v6, v7}, Lcom/android/server/wm/WindowManagerService$H;->sendEmptyMessageDelayed(IJ)Z

    .line 18969
    move-object/from16 v0, p0

    iget-object v3, v0, mScreenFrozenLock:Landroid/os/PowerManager$WakeLock;

    invoke-virtual {v3}, Landroid/os/PowerManager$WakeLock;->release()V

    .line 18971
    if-eqz v23, :cond_34e

    .line 18972
    sget-boolean v3, DEBUG_ORIENTATION:Z

    if-eqz v3, :cond_346

    const-string v3, "WindowManager"

    const-string v4, "Performing post-rotate rotation"

    invoke-static {v3, v4}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 18973
    :cond_346
    const/4 v3, 0x0

    move-object/from16 v0, p0

    invoke-virtual {v0, v3}, updateRotationUncheckedLocked(Z)Z

    move-result v3

    or-int/2addr v13, v3

    .line 18976
    :cond_34e
    if-eqz v13, :cond_38f

    .line 18977
    move-object/from16 v0, p0

    iget-object v3, v0, mH:Lcom/android/server/wm/WindowManagerService$H;

    const/16 v4, 0x12

    invoke-virtual {v3, v4}, Lcom/android/server/wm/WindowManagerService$H;->sendEmptyMessage(I)Z

    .line 18986
    :goto_359
    move-object/from16 v0, p0

    iget-object v3, v0, mCocktailBar:Lcom/android/server/wm/WindowState;

    if-eqz v3, :cond_368

    .line 18987
    move-object/from16 v0, p0

    iget-object v3, v0, mCocktailBar:Lcom/android/server/wm/WindowState;

    iget-object v3, v3, Lcom/android/server/wm/WindowState;->mToken:Lcom/android/server/wm/WindowToken;

    const/4 v4, 0x0

    iput-boolean v4, v3, Lcom/android/server/wm/WindowToken;->willBeHideBlockMain:Z

    .line 18991
    :cond_368
    if-eqz v2, :cond_10

    .line 18992
    move-object/from16 v0, p0

    iget-object v3, v0, mFxSession:Landroid/view/SurfaceSession;

    const-wide/16 v4, 0x2710

    invoke-virtual/range {p0 .. p0}, getTransitionAnimationScaleLocked()F

    move-result v6

    move-object/from16 v0, v16

    iget v7, v0, Landroid/view/DisplayInfo;->logicalWidth:I

    move-object/from16 v0, v16

    iget v8, v0, Landroid/view/DisplayInfo;->logicalHeight:I

    move-object/from16 v0, p0

    iget v9, v0, mExitAnimId:I

    move-object/from16 v0, p0

    iget v10, v0, mEnterAnimId:I

    invoke-virtual/range {v2 .. v10}, Lcom/android/server/wm/ScreenRotationAnimation;->dismiss(Landroid/view/SurfaceSession;JFIIII)Z

    move-result v3

    if-eqz v3, :cond_399

    .line 18995
    invoke-virtual/range {p0 .. p0}, scheduleAnimationLocked()V

    goto/16 :goto_10

    .line 18981
    :cond_38f
    move-object/from16 v0, p0

    iget-object v3, v0, mH:Lcom/android/server/wm/WindowManagerService$H;

    const/16 v4, 0x6a

    invoke-virtual {v3, v4}, Lcom/android/server/wm/WindowManagerService$H;->sendEmptyMessage(I)Z

    goto :goto_359

    .line 18997
    :cond_399
    invoke-virtual {v2}, Lcom/android/server/wm/ScreenRotationAnimation;->kill()V

    .line 18998
    move-object/from16 v0, p0

    iget-object v3, v0, mAnimator:Lcom/android/server/wm/WindowAnimator;

    const/4 v4, 0x0

    invoke-virtual {v3, v15, v4}, Lcom/android/server/wm/WindowAnimator;->setScreenRotationAnimationLocked(ILcom/android/server/wm/ScreenRotationAnimation;)V

    .line 18999
    const/16 v23, 0x1

    goto/16 :goto_10

    .line 18957
    .end local v22    # "sb":Ljava/lang/StringBuilder;
    .restart local v18    # "e":Ljava/lang/Exception;
    :cond_3a8
    const/4 v13, 0x0

    goto/16 :goto_2f8

    .line 18966
    :cond_3ab
    move-object/from16 v0, p0

    iget-object v3, v0, mH:Lcom/android/server/wm/WindowManagerService$H;

    const/16 v4, 0xf

    invoke-virtual {v3, v4}, Lcom/android/server/wm/WindowManagerService$H;->removeMessages(I)V

    .line 18967
    move-object/from16 v0, p0

    iget-object v3, v0, mH:Lcom/android/server/wm/WindowManagerService$H;

    const/16 v4, 0xf

    const-wide/16 v6, 0x7d0

    invoke-virtual {v3, v4, v6, v7}, Lcom/android/server/wm/WindowManagerService$H;->sendEmptyMessageDelayed(IJ)Z

    .line 18969
    move-object/from16 v0, p0

    iget-object v3, v0, mScreenFrozenLock:Landroid/os/PowerManager$WakeLock;

    invoke-virtual {v3}, Landroid/os/PowerManager$WakeLock;->release()V

    .line 18971
    if-eqz v23, :cond_3db

    .line 18972
    sget-boolean v3, DEBUG_ORIENTATION:Z

    if-eqz v3, :cond_3d3

    const-string v3, "WindowManager"

    const-string v4, "Performing post-rotate rotation"

    invoke-static {v3, v4}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 18973
    :cond_3d3
    const/4 v3, 0x0

    move-object/from16 v0, p0

    invoke-virtual {v0, v3}, updateRotationUncheckedLocked(Z)Z

    move-result v3

    or-int/2addr v13, v3

    .line 18976
    :cond_3db
    if-eqz v13, :cond_41c

    .line 18977
    move-object/from16 v0, p0

    iget-object v3, v0, mH:Lcom/android/server/wm/WindowManagerService$H;

    const/16 v4, 0x12

    invoke-virtual {v3, v4}, Lcom/android/server/wm/WindowManagerService$H;->sendEmptyMessage(I)Z

    .line 18986
    :goto_3e6
    move-object/from16 v0, p0

    iget-object v3, v0, mCocktailBar:Lcom/android/server/wm/WindowState;

    if-eqz v3, :cond_3f5

    .line 18987
    move-object/from16 v0, p0

    iget-object v3, v0, mCocktailBar:Lcom/android/server/wm/WindowState;

    iget-object v3, v3, Lcom/android/server/wm/WindowState;->mToken:Lcom/android/server/wm/WindowToken;

    const/4 v4, 0x0

    iput-boolean v4, v3, Lcom/android/server/wm/WindowToken;->willBeHideBlockMain:Z

    .line 18991
    :cond_3f5
    if-eqz v2, :cond_10

    .line 18992
    move-object/from16 v0, p0

    iget-object v3, v0, mFxSession:Landroid/view/SurfaceSession;

    const-wide/16 v4, 0x2710

    invoke-virtual/range {p0 .. p0}, getTransitionAnimationScaleLocked()F

    move-result v6

    move-object/from16 v0, v16

    iget v7, v0, Landroid/view/DisplayInfo;->logicalWidth:I

    move-object/from16 v0, v16

    iget v8, v0, Landroid/view/DisplayInfo;->logicalHeight:I

    move-object/from16 v0, p0

    iget v9, v0, mExitAnimId:I

    move-object/from16 v0, p0

    iget v10, v0, mEnterAnimId:I

    invoke-virtual/range {v2 .. v10}, Lcom/android/server/wm/ScreenRotationAnimation;->dismiss(Landroid/view/SurfaceSession;JFIIII)Z

    move-result v3

    if-eqz v3, :cond_426

    .line 18995
    invoke-virtual/range {p0 .. p0}, scheduleAnimationLocked()V

    goto/16 :goto_10

    .line 18981
    :cond_41c
    move-object/from16 v0, p0

    iget-object v3, v0, mH:Lcom/android/server/wm/WindowManagerService$H;

    const/16 v4, 0x6a

    invoke-virtual {v3, v4}, Lcom/android/server/wm/WindowManagerService$H;->sendEmptyMessage(I)Z

    goto :goto_3e6

    .line 18997
    :cond_426
    invoke-virtual {v2}, Lcom/android/server/wm/ScreenRotationAnimation;->kill()V

    .line 18998
    move-object/from16 v0, p0

    iget-object v3, v0, mAnimator:Lcom/android/server/wm/WindowAnimator;

    const/4 v4, 0x0

    invoke-virtual {v3, v15, v4}, Lcom/android/server/wm/WindowAnimator;->setScreenRotationAnimationLocked(ILcom/android/server/wm/ScreenRotationAnimation;)V

    .line 18999
    const/16 v23, 0x1

    goto/16 :goto_10

    .line 18934
    .end local v2    # "screenRotationAnimation":Lcom/android/server/wm/ScreenRotationAnimation;
    .end local v13    # "configChanged":Z
    .end local v14    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v15    # "displayId":I
    .end local v16    # "displayInfo":Landroid/view/DisplayInfo;
    .end local v18    # "e":Ljava/lang/Exception;
    .end local v19    # "i":I
    .end local v21    # "numberOfDisplayes":I
    :catchall_435
    move-exception v3

    move-object/from16 v26, v3

    invoke-virtual/range {p0 .. p0}, getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v14

    .line 18935
    .restart local v14    # "displayContent":Lcom/android/server/wm/DisplayContent;
    invoke-virtual {v14}, Lcom/android/server/wm/DisplayContent;->getDisplayId()I

    move-result v15

    .line 18936
    .restart local v15    # "displayId":I
    invoke-virtual {v14}, Lcom/android/server/wm/DisplayContent;->getDisplayInfo()Landroid/view/DisplayInfo;

    move-result-object v16

    .line 18938
    .restart local v16    # "displayInfo":Landroid/view/DisplayInfo;
    move-object/from16 v0, p0

    iget-object v3, v0, mAnimator:Lcom/android/server/wm/WindowAnimator;

    invoke-virtual {v3, v15}, Lcom/android/server/wm/WindowAnimator;->getScreenRotationAnimationLocked(I)Lcom/android/server/wm/ScreenRotationAnimation;

    move-result-object v2

    .line 18941
    .restart local v2    # "screenRotationAnimation":Lcom/android/server/wm/ScreenRotationAnimation;
    move-object/from16 v0, p0

    iget-object v3, v0, mInputMonitor:Lcom/android/server/wm/InputMonitor;

    invoke-virtual {v3}, Lcom/android/server/wm/InputMonitor;->thawInputDispatchingLw()V

    .line 18951
    const/4 v13, 0x0

    .line 18952
    .restart local v13    # "configChanged":Z
    const/16 v21, 0x1

    .line 18956
    .restart local v21    # "numberOfDisplayes":I
    const/16 v19, 0x0

    .restart local v19    # "i":I
    :goto_458
    move/from16 v0, v19

    move/from16 v1, v21

    if-ge v0, v1, :cond_471

    .line 18957
    if-nez v13, :cond_46b

    const/4 v3, 0x0

    move-object/from16 v0, p0

    move/from16 v1, v19

    invoke-virtual {v0, v3, v1}, updateOrientationFromAppTokensLockedInner(ZI)Z

    move-result v3

    if-eqz v3, :cond_46f

    :cond_46b
    const/4 v13, 0x1

    .line 18956
    :goto_46c
    add-int/lit8 v19, v19, 0x1

    goto :goto_458

    .line 18957
    :cond_46f
    const/4 v13, 0x0

    goto :goto_46c

    .line 18966
    :cond_471
    move-object/from16 v0, p0

    iget-object v3, v0, mH:Lcom/android/server/wm/WindowManagerService$H;

    const/16 v4, 0xf

    invoke-virtual {v3, v4}, Lcom/android/server/wm/WindowManagerService$H;->removeMessages(I)V

    .line 18967
    move-object/from16 v0, p0

    iget-object v3, v0, mH:Lcom/android/server/wm/WindowManagerService$H;

    const/16 v4, 0xf

    const-wide/16 v6, 0x7d0

    invoke-virtual {v3, v4, v6, v7}, Lcom/android/server/wm/WindowManagerService$H;->sendEmptyMessageDelayed(IJ)Z

    .line 18969
    move-object/from16 v0, p0

    iget-object v3, v0, mScreenFrozenLock:Landroid/os/PowerManager$WakeLock;

    invoke-virtual {v3}, Landroid/os/PowerManager$WakeLock;->release()V

    .line 18971
    if-eqz v23, :cond_4a1

    .line 18972
    sget-boolean v3, DEBUG_ORIENTATION:Z

    if-eqz v3, :cond_499

    const-string v3, "WindowManager"

    const-string v4, "Performing post-rotate rotation"

    invoke-static {v3, v4}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 18973
    :cond_499
    const/4 v3, 0x0

    move-object/from16 v0, p0

    invoke-virtual {v0, v3}, updateRotationUncheckedLocked(Z)Z

    move-result v3

    or-int/2addr v13, v3

    .line 18976
    :cond_4a1
    if-eqz v13, :cond_4e1

    .line 18977
    move-object/from16 v0, p0

    iget-object v3, v0, mH:Lcom/android/server/wm/WindowManagerService$H;

    const/16 v4, 0x12

    invoke-virtual {v3, v4}, Lcom/android/server/wm/WindowManagerService$H;->sendEmptyMessage(I)Z

    .line 18986
    :goto_4ac
    move-object/from16 v0, p0

    iget-object v3, v0, mCocktailBar:Lcom/android/server/wm/WindowState;

    if-eqz v3, :cond_4bb

    .line 18987
    move-object/from16 v0, p0

    iget-object v3, v0, mCocktailBar:Lcom/android/server/wm/WindowState;

    iget-object v3, v3, Lcom/android/server/wm/WindowState;->mToken:Lcom/android/server/wm/WindowToken;

    const/4 v4, 0x0

    iput-boolean v4, v3, Lcom/android/server/wm/WindowToken;->willBeHideBlockMain:Z

    .line 18991
    :cond_4bb
    if-eqz v2, :cond_4e0

    .line 18992
    move-object/from16 v0, p0

    iget-object v3, v0, mFxSession:Landroid/view/SurfaceSession;

    const-wide/16 v4, 0x2710

    invoke-virtual/range {p0 .. p0}, getTransitionAnimationScaleLocked()F

    move-result v6

    move-object/from16 v0, v16

    iget v7, v0, Landroid/view/DisplayInfo;->logicalWidth:I

    move-object/from16 v0, v16

    iget v8, v0, Landroid/view/DisplayInfo;->logicalHeight:I

    move-object/from16 v0, p0

    iget v9, v0, mExitAnimId:I

    move-object/from16 v0, p0

    iget v10, v0, mEnterAnimId:I

    invoke-virtual/range {v2 .. v10}, Lcom/android/server/wm/ScreenRotationAnimation;->dismiss(Landroid/view/SurfaceSession;JFIIII)Z

    move-result v3

    if-eqz v3, :cond_4eb

    .line 18995
    invoke-virtual/range {p0 .. p0}, scheduleAnimationLocked()V

    .line 19002
    :cond_4e0
    :goto_4e0
    throw v26

    .line 18981
    :cond_4e1
    move-object/from16 v0, p0

    iget-object v3, v0, mH:Lcom/android/server/wm/WindowManagerService$H;

    const/16 v4, 0x6a

    invoke-virtual {v3, v4}, Lcom/android/server/wm/WindowManagerService$H;->sendEmptyMessage(I)Z

    goto :goto_4ac

    .line 18997
    :cond_4eb
    invoke-virtual {v2}, Lcom/android/server/wm/ScreenRotationAnimation;->kill()V

    .line 18998
    move-object/from16 v0, p0

    iget-object v3, v0, mAnimator:Lcom/android/server/wm/WindowAnimator;

    const/4 v4, 0x0

    invoke-virtual {v3, v15, v4}, Lcom/android/server/wm/WindowAnimator;->setScreenRotationAnimationLocked(ILcom/android/server/wm/ScreenRotationAnimation;)V

    .line 18999
    const/16 v23, 0x1

    goto :goto_4e0
.end method

.method private tmpRemoveWindowLocked(ILcom/android/server/wm/WindowState;)I
    .registers 4
    .param p1, "interestingPos"    # I
    .param p2, "win"    # Lcom/android/server/wm/WindowState;

    .prologue
    .line 2683
    invoke-virtual {p2}, Lcom/android/server/wm/WindowState;->getWindowList()Lcom/android/server/wm/WindowList;

    move-result-object v0

    invoke-direct {p0, p1, p2, v0}, tmpRemoveWindowLocked(ILcom/android/server/wm/WindowState;Lcom/android/server/wm/WindowList;)I

    move-result v0

    return v0
.end method

.method private tmpRemoveWindowLocked(ILcom/android/server/wm/WindowState;Lcom/android/server/wm/WindowList;)I
    .registers 12
    .param p1, "interestingPos"    # I
    .param p2, "win"    # Lcom/android/server/wm/WindowState;
    .param p3, "interestingPosWindows"    # Lcom/android/server/wm/WindowList;

    .prologue
    .line 2689
    invoke-virtual {p2}, Lcom/android/server/wm/WindowState;->getWindowList()Lcom/android/server/wm/WindowList;

    move-result-object v3

    .line 2690
    .local v3, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual {v3, p2}, Lcom/android/server/wm/WindowList;->indexOf(Ljava/lang/Object;)I

    move-result v4

    .line 2691
    .local v4, "wpos":I
    if-ltz v4, :cond_84

    .line 2692
    if-ge v4, p1, :cond_10

    if-ne v3, p3, :cond_10

    add-int/lit8 p1, p1, -0x1

    .line 2693
    :cond_10
    sget-boolean v5, DEBUG_WINDOW_MOVEMENT:Z

    if-eqz v5, :cond_36

    const-string v5, "WindowManager"

    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "Temp removing at "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6, v4}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v6

    const-string v7, ": "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-static {v5, v6}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 2694
    :cond_36
    invoke-virtual {v3, v4}, Lcom/android/server/wm/WindowList;->remove(I)Ljava/lang/Object;

    .line 2695
    const/4 v5, 0x1

    iput-boolean v5, p0, mWindowsChanged:Z

    .line 2696
    iget-object v5, p2, Lcom/android/server/wm/WindowState;->mChildWindows:Lcom/android/server/wm/WindowList;

    invoke-virtual {v5}, Lcom/android/server/wm/WindowList;->size()I

    move-result v0

    .line 2697
    .local v0, "NC":I
    :cond_42
    :goto_42
    if-lez v0, :cond_84

    .line 2698
    add-int/lit8 v0, v0, -0x1

    .line 2699
    iget-object v5, p2, Lcom/android/server/wm/WindowState;->mChildWindows:Lcom/android/server/wm/WindowList;

    invoke-virtual {v5, v0}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/wm/WindowState;

    .line 2700
    .local v2, "cw":Lcom/android/server/wm/WindowState;
    invoke-virtual {v3, v2}, Lcom/android/server/wm/WindowList;->indexOf(Ljava/lang/Object;)I

    move-result v1

    .line 2701
    .local v1, "cpos":I
    if-ltz v1, :cond_42

    .line 2702
    if-ge v1, p1, :cond_5a

    if-ne v3, p3, :cond_5a

    add-int/lit8 p1, p1, -0x1

    .line 2703
    :cond_5a
    sget-boolean v5, DEBUG_WINDOW_MOVEMENT:Z

    if-eqz v5, :cond_80

    const-string v5, "WindowManager"

    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "Temp removing child at "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v6

    const-string v7, ": "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-static {v5, v6}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 2705
    :cond_80
    invoke-virtual {v3, v1}, Lcom/android/server/wm/WindowList;->remove(I)Ljava/lang/Object;

    goto :goto_42

    .line 2709
    .end local v0    # "NC":I
    .end local v1    # "cpos":I
    .end local v2    # "cw":Lcom/android/server/wm/WindowState;
    :cond_84
    return p1
.end method

.method private toBrightnessOverride(F)I
    .registers 3
    .param p1, "value"    # F

    .prologue
    .line 17971
    const/high16 v0, 0x437f0000    # 255.0f

    mul-float/2addr v0, p1

    float-to-int v0, v0

    return v0
.end method

.method private trackingAnimationChangingHistory()V
    .registers 9

    .prologue
    .line 9998
    const/4 v3, 0x0

    .line 10000
    .local v3, "fos":Ljava/io/FileOutputStream;
    :try_start_1
    new-instance v1, Ljava/io/File;

    const-string v5, "/data/log/"

    const-string v6, "AnimationChanging.txt"

    invoke-direct {v1, v5, v6}, Ljava/io/File;-><init>(Ljava/lang/String;Ljava/lang/String;)V

    .line 10001
    .local v1, "f":Ljava/io/File;
    invoke-virtual {v1}, Ljava/io/File;->exists()Z

    move-result v5

    if-nez v5, :cond_13

    .line 10002
    invoke-virtual {v1}, Ljava/io/File;->createNewFile()Z

    .line 10004
    :cond_13
    new-instance v0, Landroid/util/AtomicFile;

    invoke-direct {v0, v1}, Landroid/util/AtomicFile;-><init>(Ljava/io/File;)V

    .line 10006
    .local v0, "atomicFile":Landroid/util/AtomicFile;
    invoke-virtual {v0}, Landroid/util/AtomicFile;->readFully()[B

    move-result-object v2

    .line 10007
    .local v2, "file_data":[B
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    .line 10009
    .local v4, "sb":Ljava/lang/StringBuilder;
    new-instance v5, Ljava/lang/String;

    invoke-direct {v5, v2}, Ljava/lang/String;-><init>([B)V

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 10010
    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v6

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v5

    iget-object v6, p0, mActivityManager:Landroid/app/IActivityManager;

    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v7

    invoke-interface {v6, v7}, Landroid/app/IActivityManager;->getPackageFromAppProcesses(I)Ljava/lang/String;

    move-result-object v6

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    const-string v6, " change to mWindowAnimationScaleSetting = "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    iget v6, p0, mWindowAnimationScaleSetting:F

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(F)Ljava/lang/StringBuilder;

    move-result-object v5

    const-string v6, " mTransitionAnimationScaleSetting = "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    iget v6, p0, mTransitionAnimationScaleSetting:F

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(F)Ljava/lang/StringBuilder;

    move-result-object v5

    const-string v6, " mAnimatorDurationScaleSetting = "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    iget v6, p0, mAnimatorDurationScaleSetting:F

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(F)Ljava/lang/StringBuilder;

    move-result-object v5

    const-string v6, "\n"

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 10015
    invoke-virtual {v0}, Landroid/util/AtomicFile;->startWrite()Ljava/io/FileOutputStream;

    move-result-object v3

    .line 10016
    new-instance v5, Ljava/lang/String;

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-direct {v5, v6}, Ljava/lang/String;-><init>(Ljava/lang/String;)V

    invoke-virtual {v5}, Ljava/lang/String;->getBytes()[B

    move-result-object v5

    invoke-virtual {v3, v5}, Ljava/io/FileOutputStream;->write([B)V

    .line 10017
    invoke-virtual {v3}, Ljava/io/FileOutputStream;->flush()V

    .line 10018
    invoke-virtual {v0, v3}, Landroid/util/AtomicFile;->finishWrite(Ljava/io/FileOutputStream;)V

    .line 10020
    const-string v5, "WindowManager"

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-static {v5, v6}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_98
    .catch Ljava/io/IOException; {:try_start_1 .. :try_end_98} :catch_9e
    .catch Landroid/os/RemoteException; {:try_start_1 .. :try_end_98} :catch_a7
    .catchall {:try_start_1 .. :try_end_98} :catchall_b0

    .line 10027
    if-eqz v3, :cond_9d

    :try_start_9a
    invoke-virtual {v3}, Ljava/io/FileOutputStream;->close()V
    :try_end_9d
    .catch Ljava/lang/Exception; {:try_start_9a .. :try_end_9d} :catch_b7

    .line 10032
    .end local v0    # "atomicFile":Landroid/util/AtomicFile;
    .end local v1    # "f":Ljava/io/File;
    .end local v2    # "file_data":[B
    .end local v4    # "sb":Ljava/lang/StringBuilder;
    :cond_9d
    :goto_9d
    return-void

    .line 10021
    :catch_9e
    move-exception v5

    .line 10027
    if-eqz v3, :cond_9d

    :try_start_a1
    invoke-virtual {v3}, Ljava/io/FileOutputStream;->close()V
    :try_end_a4
    .catch Ljava/lang/Exception; {:try_start_a1 .. :try_end_a4} :catch_a5

    goto :goto_9d

    .line 10028
    :catch_a5
    move-exception v5

    goto :goto_9d

    .line 10023
    :catch_a7
    move-exception v5

    .line 10027
    if-eqz v3, :cond_9d

    :try_start_aa
    invoke-virtual {v3}, Ljava/io/FileOutputStream;->close()V
    :try_end_ad
    .catch Ljava/lang/Exception; {:try_start_aa .. :try_end_ad} :catch_ae

    goto :goto_9d

    .line 10028
    :catch_ae
    move-exception v5

    goto :goto_9d

    .line 10026
    :catchall_b0
    move-exception v5

    .line 10027
    if-eqz v3, :cond_b6

    :try_start_b3
    invoke-virtual {v3}, Ljava/io/FileOutputStream;->close()V
    :try_end_b6
    .catch Ljava/lang/Exception; {:try_start_b3 .. :try_end_b6} :catch_b9

    .line 10030
    :cond_b6
    :goto_b6
    throw v5

    .line 10028
    .restart local v0    # "atomicFile":Landroid/util/AtomicFile;
    .restart local v1    # "f":Ljava/io/File;
    .restart local v2    # "file_data":[B
    .restart local v4    # "sb":Ljava/lang/StringBuilder;
    :catch_b7
    move-exception v5

    goto :goto_9d

    .end local v0    # "atomicFile":Landroid/util/AtomicFile;
    .end local v1    # "f":Ljava/io/File;
    .end local v2    # "file_data":[B
    .end local v4    # "sb":Ljava/lang/StringBuilder;
    :catch_b9
    move-exception v6

    goto :goto_b6
.end method

.method private turnOffInputMethodDisplayLocked()Z
    .registers 5

    .prologue
    const/4 v1, 0x1

    const/4 v0, 0x0

    .line 3071
    iget-boolean v2, p0, mIsInputMethodDisplayUsed:Z

    if-nez v2, :cond_7

    .line 3085
    :goto_6
    return v0

    .line 3074
    :cond_7
    sget-boolean v2, DUALSCREEN_DEBUG_INPUT_METHOD:Z

    if-eqz v2, :cond_13

    .line 3075
    iget-object v2, p0, mDualScreenInputMethodManager:Lcom/android/server/wm/DualScreenInputMethodManager;

    const-string/jumbo v3, "turn off input method display"

    invoke-virtual {v2, v3}, Lcom/android/server/wm/DualScreenInputMethodManager;->printDebugInfo(Ljava/lang/String;)V

    .line 3077
    :cond_13
    iput-boolean v0, p0, mIsInputMethodDisplayUsed:Z

    .line 3078
    iget-object v2, p0, mDisplayManagerInternal:Landroid/hardware/display/DisplayManagerInternal;

    const/4 v3, -0x1

    invoke-virtual {v2, v0, v3}, Landroid/hardware/display/DisplayManagerInternal;->setInputMethodDisplayEnabled(ZI)V

    .line 3080
    iget-object v2, p0, mInputManager:Lcom/android/server/input/InputManagerService;

    invoke-virtual {v2, v0, v0, v1}, Lcom/android/server/input/InputManagerService;->redirectTouchToDisplay(ZII)V

    .line 3081
    iget-boolean v2, p0, mDisableSubKey:Z

    if-nez v2, :cond_29

    .line 3082
    iget-object v2, p0, mInputManager:Lcom/android/server/input/InputManagerService;

    invoke-virtual {v2, v0}, Lcom/android/server/input/InputManagerService;->sendDuplicatedKeyToFocus(Z)V

    :cond_29
    move v0, v1

    .line 3085
    goto :goto_6
.end method

.method private turnOnInputMethodDisplayLocked()Z
    .registers 7

    .prologue
    const/4 v5, 0x3

    const/4 v4, 0x1

    .line 3043
    const/4 v0, 0x0

    .line 3044
    .local v0, "configChanged":Z
    iget-boolean v1, p0, mIsInputMethodDisplayUsed:Z

    if-nez v1, :cond_b

    iget-object v1, p0, mInputMethodTarget:Lcom/android/server/wm/WindowState;

    if-nez v1, :cond_d

    .line 3045
    :cond_b
    const/4 v1, 0x0

    .line 3067
    :goto_c
    return v1

    .line 3047
    :cond_d
    sget-boolean v1, DUALSCREEN_DEBUG_INPUT_METHOD:Z

    if-eqz v1, :cond_19

    .line 3048
    iget-object v1, p0, mDualScreenInputMethodManager:Lcom/android/server/wm/DualScreenInputMethodManager;

    const-string/jumbo v2, "turn on input method display"

    invoke-virtual {v1, v2}, Lcom/android/server/wm/DualScreenInputMethodManager;->printDebugInfo(Ljava/lang/String;)V

    .line 3051
    :cond_19
    iput-boolean v4, p0, mIsInputMethodDisplayUsed:Z

    .line 3052
    iget-object v1, p0, mRotations:Lcom/samsung/android/multidisplay/common/FallbackArrayList;

    invoke-virtual {v1, v5}, Lcom/samsung/android/multidisplay/common/FallbackArrayList;->get(I)Ljava/lang/Object;

    move-result-object v1

    iget-object v2, p0, mRotations:Lcom/samsung/android/multidisplay/common/FallbackArrayList;

    iget-object v3, p0, mInputMethodTarget:Lcom/android/server/wm/WindowState;

    invoke-virtual {v3}, Lcom/android/server/wm/WindowState;->getDisplayId()I

    move-result v3

    invoke-virtual {v2, v3}, Lcom/samsung/android/multidisplay/common/FallbackArrayList;->get(I)Ljava/lang/Object;

    move-result-object v2

    if-eq v1, v2, :cond_41

    .line 3053
    iget-object v1, p0, mRotations:Lcom/samsung/android/multidisplay/common/FallbackArrayList;

    iget-object v2, p0, mRotations:Lcom/samsung/android/multidisplay/common/FallbackArrayList;

    iget-object v3, p0, mInputMethodTarget:Lcom/android/server/wm/WindowState;

    invoke-virtual {v3}, Lcom/android/server/wm/WindowState;->getDisplayId()I

    move-result v3

    invoke-virtual {v2, v3}, Lcom/samsung/android/multidisplay/common/FallbackArrayList;->get(I)Ljava/lang/Object;

    move-result-object v2

    invoke-virtual {v1, v5, v2}, Lcom/samsung/android/multidisplay/common/FallbackArrayList;->set(ILjava/lang/Object;)Ljava/lang/Object;

    .line 3054
    const/4 v0, 0x1

    .line 3056
    :cond_41
    iget-object v1, p0, mDisplayManagerInternal:Landroid/hardware/display/DisplayManagerInternal;

    iget-object v2, p0, mInputMethodTarget:Lcom/android/server/wm/WindowState;

    invoke-virtual {v2}, Lcom/android/server/wm/WindowState;->getDisplayId()I

    move-result v2

    invoke-virtual {v1, v4, v2}, Landroid/hardware/display/DisplayManagerInternal;->setInputMethodDisplayEnabled(ZI)V

    .line 3058
    iget-object v1, p0, mRotations:Lcom/samsung/android/multidisplay/common/FallbackArrayList;

    invoke-virtual {v1, v5}, Lcom/samsung/android/multidisplay/common/FallbackArrayList;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Ljava/lang/Integer;

    invoke-virtual {v1}, Ljava/lang/Integer;->intValue()I

    move-result v1

    if-ne v1, v4, :cond_76

    .line 3059
    iget-object v1, p0, mInputManager:Lcom/android/server/input/InputManagerService;

    iget-object v2, p0, mInputMethodTarget:Lcom/android/server/wm/WindowState;

    invoke-virtual {v2}, Lcom/android/server/wm/WindowState;->getDisplayId()I

    move-result v2

    iget-object v3, p0, mInputMethodWindow:Lcom/android/server/wm/WindowState;

    invoke-virtual {v3}, Lcom/android/server/wm/WindowState;->getDisplayId()I

    move-result v3

    invoke-virtual {v1, v4, v2, v3}, Lcom/android/server/input/InputManagerService;->redirectTouchToDisplay(ZII)V

    .line 3063
    :goto_6b
    iget-boolean v1, p0, mDisableSubKey:Z

    if-nez v1, :cond_74

    .line 3064
    iget-object v1, p0, mInputManager:Lcom/android/server/input/InputManagerService;

    invoke-virtual {v1, v4}, Lcom/android/server/input/InputManagerService;->sendDuplicatedKeyToFocus(Z)V

    :cond_74
    move v1, v0

    .line 3067
    goto :goto_c

    .line 3061
    :cond_76
    iget-object v1, p0, mInputManager:Lcom/android/server/input/InputManagerService;

    iget-object v2, p0, mInputMethodWindow:Lcom/android/server/wm/WindowState;

    invoke-virtual {v2}, Lcom/android/server/wm/WindowState;->getDisplayId()I

    move-result v2

    iget-object v3, p0, mInputMethodTarget:Lcom/android/server/wm/WindowState;

    invoke-virtual {v3}, Lcom/android/server/wm/WindowState;->getDisplayId()I

    move-result v3

    invoke-virtual {v1, v4, v2, v3}, Lcom/android/server/input/InputManagerService;->redirectTouchToDisplay(ZII)V

    goto :goto_6b
.end method

.method private updateAllDrawnLocked(Lcom/android/server/wm/DisplayContent;)V
    .registers 14
    .param p1, "displayContent"    # Lcom/android/server/wm/DisplayContent;

    .prologue
    const/4 v11, 0x1

    .line 16939
    invoke-virtual {p1}, Lcom/android/server/wm/DisplayContent;->getStacks()Ljava/util/ArrayList;

    move-result-object v2

    .line 16940
    .local v2, "stacks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/TaskStack;>;"
    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I

    move-result v8

    add-int/lit8 v1, v8, -0x1

    .local v1, "stackNdx":I
    :goto_b
    if-ltz v1, :cond_8e

    .line 16941
    invoke-virtual {v2, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v8

    check-cast v8, Lcom/android/server/wm/TaskStack;

    invoke-virtual {v8}, Lcom/android/server/wm/TaskStack;->getTasks()Ljava/util/ArrayList;

    move-result-object v4

    .line 16942
    .local v4, "tasks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/Task;>;"
    invoke-virtual {v4}, Ljava/util/ArrayList;->size()I

    move-result v8

    add-int/lit8 v3, v8, -0x1

    .local v3, "taskNdx":I
    :goto_1d
    if-ltz v3, :cond_8a

    .line 16943
    invoke-virtual {v4, v3}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v8

    check-cast v8, Lcom/android/server/wm/Task;

    iget-object v6, v8, Lcom/android/server/wm/Task;->mAppTokens:Lcom/android/server/wm/AppTokenList;

    .line 16944
    .local v6, "tokens":Lcom/android/server/wm/AppTokenList;
    invoke-virtual {v6}, Lcom/android/server/wm/AppTokenList;->size()I

    move-result v8

    add-int/lit8 v5, v8, -0x1

    .local v5, "tokenNdx":I
    :goto_2d
    if-ltz v5, :cond_87

    .line 16945
    invoke-virtual {v6, v5}, Lcom/android/server/wm/AppTokenList;->get(I)Ljava/lang/Object;

    move-result-object v7

    check-cast v7, Lcom/android/server/wm/AppWindowToken;

    .line 16946
    .local v7, "wtoken":Lcom/android/server/wm/AppWindowToken;
    iget-boolean v8, v7, Lcom/android/server/wm/AppWindowToken;->allDrawn:Z

    if-nez v8, :cond_84

    .line 16947
    iget v0, v7, Lcom/android/server/wm/AppWindowToken;->numInterestingWindows:I

    .line 16948
    .local v0, "numInteresting":I
    if-lez v0, :cond_84

    iget v8, v7, Lcom/android/server/wm/AppWindowToken;->numDrawnWindows:I

    if-lt v8, v0, :cond_84

    .line 16949
    sget-boolean v8, DEBUG_VISIBILITY:Z

    if-eqz v8, :cond_73

    const-string v8, "WindowManager"

    new-instance v9, Ljava/lang/StringBuilder;

    invoke-direct {v9}, Ljava/lang/StringBuilder;-><init>()V

    const-string v10, "allDrawn: "

    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v9

    invoke-virtual {v9, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v9

    const-string v10, " interesting="

    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v9

    invoke-virtual {v9, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v9

    const-string v10, " drawn="

    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v9

    iget v10, v7, Lcom/android/server/wm/AppWindowToken;->numDrawnWindows:I

    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v9

    invoke-virtual {v9}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v9

    invoke-static {v8, v9}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 16953
    :cond_73
    iput-boolean v11, v7, Lcom/android/server/wm/AppWindowToken;->allDrawn:Z

    .line 16961
    iput-boolean v11, p1, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    .line 16963
    iget-object v8, p0, mH:Lcom/android/server/wm/WindowManagerService$H;

    const/16 v9, 0x20

    iget-object v10, v7, Lcom/android/server/wm/AppWindowToken;->token:Landroid/os/IBinder;

    invoke-virtual {v8, v9, v10}, Lcom/android/server/wm/WindowManagerService$H;->obtainMessage(ILjava/lang/Object;)Landroid/os/Message;

    move-result-object v8

    invoke-virtual {v8}, Landroid/os/Message;->sendToTarget()V

    .line 16944
    .end local v0    # "numInteresting":I
    :cond_84
    add-int/lit8 v5, v5, -0x1

    goto :goto_2d

    .line 16942
    .end local v7    # "wtoken":Lcom/android/server/wm/AppWindowToken;
    :cond_87
    add-int/lit8 v3, v3, -0x1

    goto :goto_1d

    .line 16940
    .end local v5    # "tokenNdx":I
    .end local v6    # "tokens":Lcom/android/server/wm/AppTokenList;
    :cond_8a
    add-int/lit8 v1, v1, -0x1

    goto/16 :goto_b

    .line 17020
    .end local v3    # "taskNdx":I
    .end local v4    # "tasks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/Task;>;"
    :cond_8e
    return-void
.end method

.method private updateAllWindowsObscuredLocked()V
    .registers 16

    .prologue
    .line 23240
    invoke-virtual {p0}, getGlobalWindowListLocked()Lcom/android/server/wm/WindowList;

    move-result-object v11

    .line 23241
    .local v11, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual {v11}, Lcom/android/server/wm/WindowList;->size()I

    move-result v0

    .line 23243
    .local v0, "NW":I
    const/4 v2, 0x0

    .line 23245
    .local v2, "currentDisplayObscuredZone":I
    const/4 v4, 0x0

    .line 23247
    .local v4, "displayContent":Lcom/android/server/wm/DisplayContent;
    add-int/lit8 v7, v0, -0x1

    .local v7, "i":I
    :goto_c
    if-ltz v7, :cond_7d

    .line 23248
    invoke-virtual {v11, v7}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v10

    check-cast v10, Lcom/android/server/wm/WindowState;

    .line 23249
    .local v10, "win":Lcom/android/server/wm/WindowState;
    invoke-virtual {v10}, Lcom/android/server/wm/WindowState;->isDisplayedLw()Z

    move-result v1

    .line 23250
    .local v1, "canBeSeen":Z
    if-eqz v1, :cond_75

    invoke-virtual {v10}, Lcom/android/server/wm/WindowState;->isOpaqueDrawn()Z

    move-result v13

    if-eqz v13, :cond_75

    const/4 v9, 0x1

    .line 23251
    .local v9, "opaqueDrawn":Z
    :goto_21
    iget-object v13, v10, Lcom/android/server/wm/WindowState;->mDisplayContent:Lcom/android/server/wm/DisplayContent;

    invoke-virtual {v13}, Lcom/android/server/wm/DisplayContent;->getDisplayInfo()Landroid/view/DisplayInfo;

    move-result-object v3

    .line 23252
    .local v3, "di":Landroid/view/DisplayInfo;
    invoke-virtual {v10}, Lcom/android/server/wm/WindowState;->getDisplayId()I

    move-result v13

    invoke-static {v13}, Lcom/android/server/am/ActivityStackSupervisor;->convertDisplayIdToScreenZone(I)I

    move-result v5

    .line 23254
    .local v5, "displayObscuredZone":I
    and-int v13, v2, v5

    if-ne v13, v5, :cond_77

    const/4 v8, 0x1

    .line 23255
    .local v8, "obscured":Z
    :goto_34
    iget-boolean v13, v10, Lcom/android/server/wm/WindowState;->mIsWallpaper:Z

    if-eqz v13, :cond_4e

    .line 23256
    iget-object v13, p0, mWallpaperInnerStates:Lcom/samsung/android/multidisplay/common/FallbackArrayList;

    invoke-virtual {v10}, Lcom/android/server/wm/WindowState;->getDisplayId()I

    move-result v14

    invoke-virtual {v13, v14}, Lcom/samsung/android/multidisplay/common/FallbackArrayList;->get(I)Ljava/lang/Object;

    move-result-object v12

    check-cast v12, Lcom/android/server/wm/WindowManagerService$WallpaperInnerState;

    .line 23257
    .local v12, "wis":Lcom/android/server/wm/WindowManagerService$WallpaperInnerState;
    if-eqz v12, :cond_4e

    iget-object v13, v12, Lcom/android/server/wm/WindowManagerService$WallpaperInnerState;->mWallpaperTarget:Lcom/android/server/wm/WindowState;

    if-eqz v13, :cond_4e

    .line 23258
    iget-object v13, v12, Lcom/android/server/wm/WindowManagerService$WallpaperInnerState;->mWallpaperTarget:Lcom/android/server/wm/WindowState;

    iget-boolean v8, v13, Lcom/android/server/wm/WindowState;->mObscured:Z

    .line 23261
    .end local v12    # "wis":Lcom/android/server/wm/WindowManagerService$WallpaperInnerState;
    :cond_4e
    iget-boolean v13, v10, Lcom/android/server/wm/WindowState;->mObscured:Z

    if-eq v13, v8, :cond_79

    const/4 v13, 0x1

    :goto_53
    iput-boolean v13, v10, Lcom/android/server/wm/WindowState;->mObscuredChanged:Z

    .line 23262
    iput-boolean v8, v10, Lcom/android/server/wm/WindowState;->mObscured:Z

    .line 23264
    iget-object v13, v10, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v13, v13, Landroid/view/WindowManager$LayoutParams;->flags:I

    const/high16 v14, 0x100000

    and-int/2addr v13, v14

    if-eqz v13, :cond_7b

    const/4 v6, 0x1

    .line 23266
    .local v6, "hasWallpaper":Z
    :goto_61
    if-eqz v9, :cond_6d

    iget v13, v3, Landroid/view/DisplayInfo;->logicalWidth:I

    iget v14, v3, Landroid/view/DisplayInfo;->logicalHeight:I

    invoke-virtual {v10, v13, v14}, Lcom/android/server/wm/WindowState;->isFullscreen(II)Z

    move-result v13

    if-nez v13, :cond_71

    :cond_6d
    if-eqz v1, :cond_72

    if-eqz v6, :cond_72

    .line 23267
    :cond_71
    or-int/2addr v2, v5

    .line 23247
    :cond_72
    add-int/lit8 v7, v7, -0x1

    goto :goto_c

    .line 23250
    .end local v3    # "di":Landroid/view/DisplayInfo;
    .end local v5    # "displayObscuredZone":I
    .end local v6    # "hasWallpaper":Z
    .end local v8    # "obscured":Z
    .end local v9    # "opaqueDrawn":Z
    :cond_75
    const/4 v9, 0x0

    goto :goto_21

    .line 23254
    .restart local v3    # "di":Landroid/view/DisplayInfo;
    .restart local v5    # "displayObscuredZone":I
    .restart local v9    # "opaqueDrawn":Z
    :cond_77
    const/4 v8, 0x0

    goto :goto_34

    .line 23261
    .restart local v8    # "obscured":Z
    :cond_79
    const/4 v13, 0x0

    goto :goto_53

    .line 23264
    :cond_7b
    const/4 v6, 0x0

    goto :goto_61

    .line 23270
    .end local v1    # "canBeSeen":Z
    .end local v3    # "di":Landroid/view/DisplayInfo;
    .end local v5    # "displayObscuredZone":I
    .end local v8    # "obscured":Z
    .end local v9    # "opaqueDrawn":Z
    .end local v10    # "win":Lcom/android/server/wm/WindowState;
    :cond_7d
    return-void
.end method

.method private updateFocusedWindowLocked(IZ)Z
    .registers 11
    .param p1, "mode"    # I
    .param p2, "updateInputWindows"    # Z

    .prologue
    .line 18264
    invoke-direct {p0}, computeFocusedWindowLocked()Lcom/android/server/wm/WindowState;

    move-result-object v3

    .line 18265
    .local v3, "newFocus":Lcom/android/server/wm/WindowState;
    iget-object v5, p0, mCurrentFocus:Lcom/android/server/wm/WindowState;

    if-eq v5, v3, :cond_f4

    .line 18267
    sget-boolean v5, DUALSCREEN_DEBUG_INPUT_METHOD:Z

    if-eqz v5, :cond_24

    .line 18268
    iget-object v5, p0, mDualScreenInputMethodManager:Lcom/android/server/wm/DualScreenInputMethodManager;

    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "changed focus newFocus="

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-virtual {v5, v6}, Lcom/android/server/wm/DualScreenInputMethodManager;->printDebugInfo(Ljava/lang/String;)V

    .line 18271
    :cond_24
    const-wide/16 v6, 0x20

    const-string/jumbo v5, "wmUpdateFocus"

    invoke-static {v6, v7, v5}, Landroid/os/Trace;->traceBegin(JLjava/lang/String;)V

    .line 18274
    iget-object v5, p0, mH:Lcom/android/server/wm/WindowManagerService$H;

    const/4 v6, 0x2

    invoke-virtual {v5, v6}, Lcom/android/server/wm/WindowManagerService$H;->removeMessages(I)V

    .line 18275
    iget-object v5, p0, mH:Lcom/android/server/wm/WindowManagerService$H;

    const/4 v6, 0x2

    invoke-virtual {v5, v6}, Lcom/android/server/wm/WindowManagerService$H;->sendEmptyMessage(I)Z

    .line 18279
    const/4 v5, 0x1

    invoke-virtual {p0, v5}, moveMultiWindowCenterBarLocked(Z)Z

    .line 18284
    invoke-virtual {p0}, getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v0

    .line 18287
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    iget-object v5, v0, Lcom/android/server/wm/DisplayContent;->mMultiWindowGestureDetector:Lcom/android/server/wm/MultiWindowPointerEventListener;

    if-eqz v5, :cond_4a

    .line 18288
    iget-object v5, v0, Lcom/android/server/wm/DisplayContent;->mMultiWindowGestureDetector:Lcom/android/server/wm/MultiWindowPointerEventListener;

    const/4 v6, 0x0

    invoke-virtual {v5, v6}, Lcom/android/server/wm/MultiWindowPointerEventListener;->dismissGuide(Z)V

    .line 18292
    :cond_4a
    const/4 v5, 0x1

    if-eq p1, v5, :cond_9f

    const/4 v5, 0x3

    if-eq p1, v5, :cond_9f

    const/4 v5, 0x1

    :goto_51
    invoke-virtual {p0, v5}, moveInputMethodWindowsIfNeededLocked(Z)Z

    move-result v2

    .line 18295
    .local v2, "imWindowChanged":Z
    if-eqz v2, :cond_5e

    .line 18296
    const/4 v5, 0x1

    iput-boolean v5, v0, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    .line 18297
    invoke-direct {p0}, computeFocusedWindowLocked()Lcom/android/server/wm/WindowState;

    move-result-object v3

    .line 18300
    :cond_5e
    sget-boolean v5, DEBUG_FOCUS_LIGHT:Z

    if-nez v5, :cond_a1

    .line 18302
    :goto_62
    iget-object v4, p0, mCurrentFocus:Lcom/android/server/wm/WindowState;

    .line 18303
    .local v4, "oldFocus":Lcom/android/server/wm/WindowState;
    iput-object v3, p0, mCurrentFocus:Lcom/android/server/wm/WindowState;

    .line 18320
    iget-object v5, p0, mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v5, v4, v3}, Landroid/view/WindowManagerPolicy;->focusChangedLw(Landroid/view/WindowManagerPolicy$WindowState;Landroid/view/WindowManagerPolicy$WindowState;)I

    move-result v1

    .line 18322
    .local v1, "focusChanged":I
    if-eqz v2, :cond_7b

    iget-object v5, p0, mInputMethodWindow:Lcom/android/server/wm/WindowState;

    if-eq v4, v5, :cond_7b

    .line 18324
    const/4 v5, 0x2

    if-ne p1, v5, :cond_d5

    .line 18325
    const/4 v5, 0x1

    invoke-direct {p0, v0, v5, p2}, performLayoutLockedInner(Lcom/android/server/wm/DisplayContent;ZZ)V

    .line 18326
    and-int/lit8 v1, v1, -0x2

    .line 18337
    :cond_7b
    :goto_7b
    and-int/lit8 v5, v1, 0x1

    if-eqz v5, :cond_89

    .line 18339
    const/4 v5, 0x1

    iput-boolean v5, v0, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    .line 18340
    const/4 v5, 0x2

    if-ne p1, v5, :cond_89

    .line 18341
    const/4 v5, 0x1

    invoke-direct {p0, v0, v5, p2}, performLayoutLockedInner(Lcom/android/server/wm/DisplayContent;ZZ)V

    .line 18345
    :cond_89
    const/4 v5, 0x1

    if-eq p1, v5, :cond_93

    .line 18348
    iget-object v5, p0, mInputMonitor:Lcom/android/server/wm/InputMonitor;

    iget-object v6, p0, mCurrentFocus:Lcom/android/server/wm/WindowState;

    invoke-virtual {v5, v6, p2}, Lcom/android/server/wm/InputMonitor;->setInputFocusLw(Lcom/android/server/wm/WindowState;Z)V

    .line 18351
    :cond_93
    iget-object v5, p0, mInputManager:Lcom/android/server/input/InputManagerService;

    invoke-virtual {v5}, Lcom/android/server/input/InputManagerService;->notifyWindowFocusChanged()V

    .line 18353
    const-wide/16 v6, 0x20

    invoke-static {v6, v7}, Landroid/os/Trace;->traceEnd(J)V

    .line 18354
    const/4 v5, 0x1

    .line 18356
    .end local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v1    # "focusChanged":I
    .end local v2    # "imWindowChanged":Z
    .end local v4    # "oldFocus":Lcom/android/server/wm/WindowState;
    :goto_9e
    return v5

    .line 18292
    .restart local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :cond_9f
    const/4 v5, 0x0

    goto :goto_51

    .line 18300
    .restart local v2    # "imWindowChanged":Z
    :cond_a1
    const-string v5, "WindowManager"

    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "Changing focus from "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    iget-object v7, p0, mCurrentFocus:Lcom/android/server/wm/WindowState;

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v6

    const-string v7, " to "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v6

    const-string v7, " Callers="

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    const/4 v7, 0x4

    invoke-static {v7}, Landroid/os/Debug;->getCallers(I)Ljava/lang/String;

    move-result-object v7

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-static {v5, v6}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_62

    .line 18327
    .restart local v1    # "focusChanged":I
    .restart local v4    # "oldFocus":Lcom/android/server/wm/WindowState;
    :cond_d5
    const/4 v5, 0x3

    if-ne p1, v5, :cond_7b

    .line 18330
    iget-object v5, p0, mInputMethodTarget:Lcom/android/server/wm/WindowState;

    if-eqz v5, :cond_ec

    iget-object v5, p0, mInputMethodTarget:Lcom/android/server/wm/WindowState;

    invoke-virtual {v5}, Lcom/android/server/wm/WindowState;->isAnimatingLw()Z

    move-result v5

    if-eqz v5, :cond_ec

    iget-object v5, p0, mInputMethodTarget:Lcom/android/server/wm/WindowState;

    invoke-virtual {v5}, Lcom/android/server/wm/WindowState;->isClosing()Z

    move-result v5

    if-nez v5, :cond_7b

    .line 18332
    :cond_ec
    invoke-virtual {v0}, Lcom/android/server/wm/DisplayContent;->getWindowList()Lcom/android/server/wm/WindowList;

    move-result-object v5

    invoke-direct {p0, v5}, assignLayersLocked(Lcom/android/server/wm/WindowList;)V

    goto :goto_7b

    .line 18356
    .end local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v1    # "focusChanged":I
    .end local v2    # "imWindowChanged":Z
    .end local v4    # "oldFocus":Lcom/android/server/wm/WindowState;
    :cond_f4
    const/4 v5, 0x0

    goto :goto_9e
.end method

.method private updateOrientationFromAppTokensLocked(Landroid/content/res/Configuration;Landroid/os/IBinder;)Landroid/content/res/Configuration;
    .registers 12
    .param p1, "currentConfig"    # Landroid/content/res/Configuration;
    .param p2, "freezeThisOneIfNeeded"    # Landroid/os/IBinder;

    .prologue
    const/4 v8, 0x1

    const/4 v5, 0x0

    .line 6992
    iget-boolean v6, p0, mDisplayReady:Z

    if-nez v6, :cond_8

    .line 6993
    const/4 v2, 0x0

    .line 7059
    :cond_7
    :goto_7
    return-object v2

    .line 6995
    :cond_8
    const/4 v2, 0x0

    .line 6998
    .local v2, "config":Landroid/content/res/Configuration;
    if-eqz p1, :cond_23

    iget v4, p1, Landroid/content/res/Configuration;->displayId:I

    .line 6999
    .local v4, "displayId":I
    :goto_d
    invoke-virtual {p0, v5, v4}, updateOrientationFromAppTokensLocked(ZI)Z

    move-result v6

    if-eqz v6, :cond_25

    .line 7001
    if-eqz p2, :cond_1e

    .line 7002
    invoke-virtual {p0, p2}, findAppWindowToken(Landroid/os/IBinder;)Lcom/android/server/wm/AppWindowToken;

    move-result-object v1

    .line 7003
    .local v1, "atoken":Lcom/android/server/wm/AppWindowToken;
    if-eqz v1, :cond_1e

    .line 7004
    invoke-direct {p0, v1}, startAppFreezingScreenLocked(Lcom/android/server/wm/AppWindowToken;)V

    .line 7007
    .end local v1    # "atoken":Lcom/android/server/wm/AppWindowToken;
    :cond_1e
    invoke-virtual {p0, v4}, computeNewConfigurationLocked(I)Landroid/content/res/Configuration;

    move-result-object v2

    goto :goto_7

    .end local v4    # "displayId":I
    :cond_23
    move v4, v5

    .line 6998
    goto :goto_d

    .line 7009
    .restart local v4    # "displayId":I
    :cond_25
    if-eqz p1, :cond_7

    .line 7039
    iget-object v6, p0, mTempConfiguration:Landroid/content/res/Configuration;

    invoke-virtual {v6}, Landroid/content/res/Configuration;->setToDefaults()V

    .line 7040
    iget-object v6, p0, mTempConfiguration:Landroid/content/res/Configuration;

    iget v7, p1, Landroid/content/res/Configuration;->fontScale:F

    iput v7, v6, Landroid/content/res/Configuration;->fontScale:F

    .line 7041
    iget-object v6, p0, mTempConfiguration:Landroid/content/res/Configuration;

    iget v7, p1, Landroid/content/res/Configuration;->showButtonBackground:I

    iput v7, v6, Landroid/content/res/Configuration;->showButtonBackground:I

    .line 7042
    iget-object v6, p0, mTempConfiguration:Landroid/content/res/Configuration;

    invoke-virtual {p0, v6}, computeScreenConfigurationLocked(Landroid/content/res/Configuration;)V

    .line 7043
    iget-object v6, p0, mTempConfiguration:Landroid/content/res/Configuration;

    invoke-virtual {p1, v6}, Landroid/content/res/Configuration;->diff(Landroid/content/res/Configuration;)I

    move-result v6

    if-eqz v6, :cond_7

    .line 7044
    iput-boolean v8, p0, mWaitingForConfig:Z

    .line 7045
    invoke-virtual {p0}, getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v3

    .line 7046
    .local v3, "displayContent":Lcom/android/server/wm/DisplayContent;
    iput-boolean v8, v3, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    .line 7047
    const/4 v6, 0x2

    new-array v0, v6, [I

    .line 7048
    .local v0, "anim":[I
    invoke-virtual {v3}, Lcom/android/server/wm/DisplayContent;->isDimming()Z

    move-result v6

    if-eqz v6, :cond_69

    .line 7049
    aput v5, v0, v8

    aput v5, v0, v5

    .line 7053
    :goto_5a
    aget v6, v0, v5

    aget v7, v0, v8

    invoke-direct {p0, v5, v6, v7}, startFreezingDisplayLocked(ZII)V

    .line 7054
    new-instance v2, Landroid/content/res/Configuration;

    .end local v2    # "config":Landroid/content/res/Configuration;
    iget-object v5, p0, mTempConfiguration:Landroid/content/res/Configuration;

    invoke-direct {v2, v5}, Landroid/content/res/Configuration;-><init>(Landroid/content/res/Configuration;)V

    .restart local v2    # "config":Landroid/content/res/Configuration;
    goto :goto_7

    .line 7051
    :cond_69
    iget-object v6, p0, mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v6, v0}, Landroid/view/WindowManagerPolicy;->selectRotationAnimationLw([I)V

    goto :goto_5a
.end method

.method private updateResizingWindows(Lcom/android/server/wm/WindowState;)V
    .registers 13
    .param p1, "w"    # Lcom/android/server/wm/WindowState;

    .prologue
    const/4 v7, 0x1

    const/4 v6, 0x0

    .line 16649
    iget-object v5, p1, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    .line 16650
    .local v5, "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    iget-boolean v8, p1, Lcom/android/server/wm/WindowState;->mHasSurface:Z

    if-eqz v8, :cond_23b

    iget v8, p1, Lcom/android/server/wm/WindowState;->mLayoutSeq:I

    iget v9, p0, mLayoutSeq:I

    if-ne v8, v9, :cond_23b

    .line 16651
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->setInsetsChanged()Z

    .line 16652
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->isConfigChanged()Z

    move-result v0

    .line 16653
    .local v0, "configChanged":Z
    sget-boolean v8, DEBUG_CONFIGURATION:Z

    if-eqz v8, :cond_3f

    if-eqz v0, :cond_3f

    .line 16660
    iget-object v2, p0, mCurConfiguration:Landroid/content/res/Configuration;

    .line 16662
    .local v2, "mCurConfiguration":Landroid/content/res/Configuration;
    const-string v8, "WindowManager"

    new-instance v9, Ljava/lang/StringBuilder;

    invoke-direct {v9}, Ljava/lang/StringBuilder;-><init>()V

    const-string v10, "Win "

    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v9

    invoke-virtual {v9, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v9

    const-string v10, " config changed: "

    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v9

    invoke-virtual {v9, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v9

    invoke-virtual {v9}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v9

    invoke-static {v8, v9}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 16671
    .end local v2    # "mCurConfiguration":Landroid/content/res/Configuration;
    :cond_3f
    iget-object v8, p1, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v8, v8, Landroid/view/WindowManager$LayoutParams;->samsungFlags:I

    and-int/lit8 v8, v8, 0xc

    if-eqz v8, :cond_48

    .line 16674
    const/4 v0, 0x0

    .line 16679
    :cond_48
    const/4 v3, 0x0

    .line 16680
    .local v3, "multiWindowStyleChanging":Z
    const/4 v1, 0x0

    .line 16681
    .local v1, "frameChanaged":Z
    iget-object v8, p1, Lcom/android/server/wm/WindowState;->mLastFrame:Landroid/graphics/Rect;

    invoke-virtual {v8}, Landroid/graphics/Rect;->width()I

    move-result v8

    iget-object v9, p1, Lcom/android/server/wm/WindowState;->mFrame:Landroid/graphics/Rect;

    invoke-virtual {v9}, Landroid/graphics/Rect;->width()I

    move-result v9

    if-ne v8, v9, :cond_66

    iget-object v8, p1, Lcom/android/server/wm/WindowState;->mLastFrame:Landroid/graphics/Rect;

    invoke-virtual {v8}, Landroid/graphics/Rect;->height()I

    move-result v8

    iget-object v9, p1, Lcom/android/server/wm/WindowState;->mFrame:Landroid/graphics/Rect;

    invoke-virtual {v9}, Landroid/graphics/Rect;->height()I

    move-result v9

    if-eq v8, v9, :cond_23c

    :cond_66
    move v4, v7

    .line 16683
    .local v4, "sizeChanged":Z
    :goto_67
    sget-boolean v8, Lcom/samsung/android/multiwindow/MultiWindowFeatures;->SELECTIVE1ORIENTATION_ENABLED:Z

    if-eqz v8, :cond_95

    .line 16684
    iget-object v8, p1, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    if-eqz v8, :cond_95

    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->getMultiWindowStyleLw()Lcom/samsung/android/multiwindow/MultiWindowStyle;

    move-result-object v8

    invoke-virtual {v8}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->isCascade()Z

    move-result v8

    if-eqz v8, :cond_95

    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->getStack()Lcom/android/server/wm/TaskStack;

    move-result-object v8

    if-eqz v8, :cond_95

    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->getStack()Lcom/android/server/wm/TaskStack;

    move-result-object v8

    iget-object v8, v8, Lcom/android/server/wm/TaskStack;->mOverrideConfig:Landroid/content/res/Configuration;

    if-eqz v8, :cond_95

    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->getStack()Lcom/android/server/wm/TaskStack;

    move-result-object v8

    iget-object v8, v8, Lcom/android/server/wm/TaskStack;->mOverrideConfig:Landroid/content/res/Configuration;

    sget-object v9, Landroid/content/res/Configuration;->EMPTY:Landroid/content/res/Configuration;

    if-eq v8, v9, :cond_95

    .line 16688
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->isOverrideConfigChanged()Z

    move-result v0

    .line 16692
    :cond_95
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->getMultiWindowStyleLw()Lcom/samsung/android/multiwindow/MultiWindowStyle;

    move-result-object v8

    const/4 v9, 0x4

    invoke-virtual {v8, v9}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->isEnabled(I)Z

    move-result v8

    if-nez v8, :cond_c4

    .line 16693
    iget-object v8, p1, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v8, v8, Landroid/view/WindowManager$LayoutParams;->type:I

    const/16 v9, 0x3e9

    if-eq v8, v9, :cond_b0

    iget-object v8, p1, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v8, v8, Landroid/view/WindowManager$LayoutParams;->type:I

    const/16 v9, 0x3ec

    if-ne v8, v9, :cond_23f

    .line 16695
    :cond_b0
    move v1, v4

    .line 16699
    :goto_b1
    iget-boolean v8, p1, Lcom/android/server/wm/WindowState;->mMultiWindowStyleChanging:Z

    if-eqz v8, :cond_c4

    iget-object v8, p1, Lcom/android/server/wm/WindowState;->mAttachedWindow:Lcom/android/server/wm/WindowState;

    if-eqz v8, :cond_c4

    iget-object v8, p0, mResizingWindows:Ljava/util/ArrayList;

    iget-object v9, p1, Lcom/android/server/wm/WindowState;->mAttachedWindow:Lcom/android/server/wm/WindowState;

    invoke-virtual {v8, v9}, Ljava/util/ArrayList;->contains(Ljava/lang/Object;)Z

    move-result v8

    if-eqz v8, :cond_c4

    .line 16700
    const/4 v3, 0x1

    .line 16706
    :cond_c4
    iget-object v8, p1, Lcom/android/server/wm/WindowState;->mLastFrame:Landroid/graphics/Rect;

    iget-object v9, p1, Lcom/android/server/wm/WindowState;->mFrame:Landroid/graphics/Rect;

    invoke-virtual {v8, v9}, Landroid/graphics/Rect;->set(Landroid/graphics/Rect;)V

    .line 16707
    iget-boolean v8, p1, Lcom/android/server/wm/WindowState;->mContentInsetsChanged:Z

    if-nez v8, :cond_dd

    iget-boolean v8, p1, Lcom/android/server/wm/WindowState;->mVisibleInsetsChanged:Z

    if-nez v8, :cond_dd

    iget-boolean v8, v5, Lcom/android/server/wm/WindowStateAnimator;->mSurfaceResized:Z

    if-nez v8, :cond_dd

    if-nez v0, :cond_dd

    if-nez v1, :cond_dd

    if-eqz v3, :cond_24e

    .line 16715
    :cond_dd
    sget-boolean v8, DEBUG_RESIZE:Z

    if-nez v8, :cond_e5

    sget-boolean v8, DEBUG_ORIENTATION:Z

    if-eqz v8, :cond_181

    .line 16716
    :cond_e5
    const-string v8, "WindowManager"

    new-instance v9, Ljava/lang/StringBuilder;

    invoke-direct {v9}, Ljava/lang/StringBuilder;-><init>()V

    const-string v10, "Resize reasons for w="

    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v9

    invoke-virtual {v9, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v9

    const-string v10, ": "

    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v9

    const-string v10, " contentInsetsChanged="

    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v9

    iget-boolean v10, p1, Lcom/android/server/wm/WindowState;->mContentInsetsChanged:Z

    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v9

    const-string v10, " "

    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v9

    iget-object v10, p1, Lcom/android/server/wm/WindowState;->mContentInsets:Landroid/graphics/Rect;

    invoke-virtual {v10}, Landroid/graphics/Rect;->toShortString()Ljava/lang/String;

    move-result-object v10

    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v9

    const-string v10, " visibleInsetsChanged="

    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v9

    iget-boolean v10, p1, Lcom/android/server/wm/WindowState;->mVisibleInsetsChanged:Z

    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v9

    const-string v10, " "

    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v9

    iget-object v10, p1, Lcom/android/server/wm/WindowState;->mVisibleInsets:Landroid/graphics/Rect;

    invoke-virtual {v10}, Landroid/graphics/Rect;->toShortString()Ljava/lang/String;

    move-result-object v10

    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v9

    const-string v10, " stableInsetsChanged="

    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v9

    iget-boolean v10, p1, Lcom/android/server/wm/WindowState;->mStableInsetsChanged:Z

    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v9

    const-string v10, " "

    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v9

    iget-object v10, p1, Lcom/android/server/wm/WindowState;->mStableInsets:Landroid/graphics/Rect;

    invoke-virtual {v10}, Landroid/graphics/Rect;->toShortString()Ljava/lang/String;

    move-result-object v10

    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v9

    const-string v10, " surfaceResized="

    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v9

    iget-boolean v10, v5, Lcom/android/server/wm/WindowStateAnimator;->mSurfaceResized:Z

    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v9

    const-string v10, " configChanged="

    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v9

    invoke-virtual {v9, v0}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v9

    const-string v10, " frameChanaged="

    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v9

    invoke-virtual {v9, v1}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v9

    const-string v10, " multiWindowStyleChanging="

    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v9

    invoke-virtual {v9, v3}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v9

    invoke-virtual {v9}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v9

    invoke-static {v8, v9}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 16729
    :cond_181
    iget-object v8, p1, Lcom/android/server/wm/WindowState;->mLastOverscanInsets:Landroid/graphics/Rect;

    iget-object v9, p1, Lcom/android/server/wm/WindowState;->mOverscanInsets:Landroid/graphics/Rect;

    invoke-virtual {v8, v9}, Landroid/graphics/Rect;->set(Landroid/graphics/Rect;)V

    .line 16730
    iget-object v8, p1, Lcom/android/server/wm/WindowState;->mLastContentInsets:Landroid/graphics/Rect;

    iget-object v9, p1, Lcom/android/server/wm/WindowState;->mContentInsets:Landroid/graphics/Rect;

    invoke-virtual {v8, v9}, Landroid/graphics/Rect;->set(Landroid/graphics/Rect;)V

    .line 16731
    iget-object v8, p1, Lcom/android/server/wm/WindowState;->mLastVisibleInsets:Landroid/graphics/Rect;

    iget-object v9, p1, Lcom/android/server/wm/WindowState;->mVisibleInsets:Landroid/graphics/Rect;

    invoke-virtual {v8, v9}, Landroid/graphics/Rect;->set(Landroid/graphics/Rect;)V

    .line 16732
    iget-object v8, p1, Lcom/android/server/wm/WindowState;->mLastStableInsets:Landroid/graphics/Rect;

    iget-object v9, p1, Lcom/android/server/wm/WindowState;->mStableInsets:Landroid/graphics/Rect;

    invoke-virtual {v8, v9}, Landroid/graphics/Rect;->set(Landroid/graphics/Rect;)V

    .line 16733
    iget-object v8, p1, Lcom/android/server/wm/WindowState;->mLastOutsets:Landroid/graphics/Rect;

    iget-object v9, p1, Lcom/android/server/wm/WindowState;->mOutsets:Landroid/graphics/Rect;

    invoke-virtual {v8, v9}, Landroid/graphics/Rect;->set(Landroid/graphics/Rect;)V

    .line 16734
    invoke-virtual {p0, p1}, makeWindowFreezingScreenIfNeededLocked(Lcom/android/server/wm/WindowState;)V

    .line 16740
    iget-boolean v8, p1, Lcom/android/server/wm/WindowState;->mOrientationChanging:Z

    if-eqz v8, :cond_1e9

    .line 16741
    sget-boolean v8, DEBUG_SURFACE_TRACE:Z

    if-nez v8, :cond_1b7

    sget-boolean v8, DEBUG_ANIM:Z

    if-nez v8, :cond_1b7

    sget-boolean v8, DEBUG_ORIENTATION:Z

    if-eqz v8, :cond_1db

    :cond_1b7
    const-string v8, "WindowManager"

    new-instance v9, Ljava/lang/StringBuilder;

    invoke-direct {v9}, Ljava/lang/StringBuilder;-><init>()V

    const-string v10, "Orientation start waiting for draw mDrawState=DRAW_PENDING in "

    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v9

    invoke-virtual {v9, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v9

    const-string v10, ", surface "

    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v9

    iget-object v10, v5, Lcom/android/server/wm/WindowStateAnimator;->mSurfaceControl:Landroid/view/SurfaceControl;

    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v9

    invoke-virtual {v9}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v9

    invoke-static {v8, v9}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 16744
    :cond_1db
    iput v7, v5, Lcom/android/server/wm/WindowStateAnimator;->mDrawState:I

    .line 16745
    iget-object v8, p1, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    if-eqz v8, :cond_1e9

    .line 16746
    iget-object v8, p1, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    iput-boolean v6, v8, Lcom/android/server/wm/AppWindowToken;->allDrawn:Z

    .line 16747
    iget-object v8, p1, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    iput-boolean v6, v8, Lcom/android/server/wm/AppWindowToken;->deferClearAllDrawn:Z

    .line 16752
    :cond_1e9
    iget-object v6, p1, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    if-eqz v6, :cond_1f5

    iget-object v6, p1, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    iget-boolean v6, v6, Lcom/android/server/wm/AppWindowToken;->mMultiWindowStyleChanging:Z

    if-eqz v6, :cond_1f5

    .line 16753
    iput v7, v5, Lcom/android/server/wm/WindowStateAnimator;->mDrawState:I

    .line 16757
    :cond_1f5
    iget-object v6, p0, mResizingWindows:Ljava/util/ArrayList;

    invoke-virtual {v6, p1}, Ljava/util/ArrayList;->contains(Ljava/lang/Object;)Z

    move-result v6

    if-nez v6, :cond_23b

    .line 16758
    sget-boolean v6, DEBUG_RESIZE:Z

    if-nez v6, :cond_205

    sget-boolean v6, DEBUG_ORIENTATION:Z

    if-eqz v6, :cond_236

    :cond_205
    const-string v6, "WindowManager"

    new-instance v7, Ljava/lang/StringBuilder;

    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    const-string v8, "Resizing window "

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v7

    const-string v8, " to "

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    iget v8, v5, Lcom/android/server/wm/WindowStateAnimator;->mSurfaceW:F

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(F)Ljava/lang/StringBuilder;

    move-result-object v7

    const-string/jumbo v8, "x"

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    iget v8, v5, Lcom/android/server/wm/WindowStateAnimator;->mSurfaceH:F

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(F)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v7

    invoke-static {v6, v7}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 16761
    :cond_236
    iget-object v6, p0, mResizingWindows:Ljava/util/ArrayList;

    invoke-virtual {v6, p1}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 16777
    .end local v0    # "configChanged":Z
    .end local v1    # "frameChanaged":Z
    .end local v3    # "multiWindowStyleChanging":Z
    .end local v4    # "sizeChanged":Z
    :cond_23b
    :goto_23b
    return-void

    .restart local v0    # "configChanged":Z
    .restart local v1    # "frameChanaged":Z
    .restart local v3    # "multiWindowStyleChanging":Z
    :cond_23c
    move v4, v6

    .line 16681
    goto/16 :goto_67

    .line 16697
    .restart local v4    # "sizeChanged":Z
    :cond_23f
    iget-object v8, p1, Lcom/android/server/wm/WindowState;->mLastFrame:Landroid/graphics/Rect;

    iget-object v9, p1, Lcom/android/server/wm/WindowState;->mFrame:Landroid/graphics/Rect;

    invoke-virtual {v8, v9}, Landroid/graphics/Rect;->equals(Ljava/lang/Object;)Z

    move-result v8

    if-nez v8, :cond_24c

    move v1, v7

    :goto_24a
    goto/16 :goto_b1

    :cond_24c
    move v1, v6

    goto :goto_24a

    .line 16763
    :cond_24e
    iget-boolean v7, p1, Lcom/android/server/wm/WindowState;->mOrientationChanging:Z

    if-eqz v7, :cond_23b

    .line 16764
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->isDrawnLw()Z

    move-result v7

    if-eqz v7, :cond_23b

    .line 16765
    sget-boolean v7, DEBUG_ORIENTATION:Z

    if-eqz v7, :cond_280

    const-string v7, "WindowManager"

    new-instance v8, Ljava/lang/StringBuilder;

    invoke-direct {v8}, Ljava/lang/StringBuilder;-><init>()V

    const-string v9, "Orientation not waiting for draw in "

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v8

    invoke-virtual {v8, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v8

    const-string v9, ", surface "

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v8

    iget-object v9, v5, Lcom/android/server/wm/WindowStateAnimator;->mSurfaceControl:Landroid/view/SurfaceControl;

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v8

    invoke-virtual {v8}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v8

    invoke-static {v7, v8}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 16768
    :cond_280
    iput-boolean v6, p1, Lcom/android/server/wm/WindowState;->mOrientationChanging:Z

    .line 16769
    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J

    move-result-wide v6

    iget-wide v8, p0, mDisplayFreezeTime:J

    sub-long/2addr v6, v8

    long-to-int v6, v6

    iput v6, p1, Lcom/android/server/wm/WindowState;->mLastFreezeDuration:I

    .line 16772
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->stopWaitingForOrientation()V

    goto :goto_23b
.end method

.method private updateSurfacesInTransactionLocked(Lcom/android/server/wm/DisplayContent;)Z
    .registers 12
    .param p1, "displayContent"    # Lcom/android/server/wm/DisplayContent;

    .prologue
    .line 20397
    const/4 v5, 0x0

    .line 20398
    .local v5, "needsUpdateSurfaceMatrix":Z
    invoke-virtual {p1}, Lcom/android/server/wm/DisplayContent;->getWindowList()Lcom/android/server/wm/WindowList;

    move-result-object v7

    .line 20399
    .local v7, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual {v7}, Lcom/android/server/wm/WindowList;->size()I

    move-result v0

    .line 20400
    .local v0, "N":I
    add-int/lit8 v2, v0, -0x1

    .line 20401
    .local v2, "i":I
    const/4 v3, -0x1

    .line 20402
    .local v3, "indexOfFirstFixedOrientationWindow":I
    const/4 v1, -0x1

    .line 20404
    .local v1, "animLayerOfFirstFixedOrientationWindow":I
    :goto_d
    if-ltz v2, :cond_34

    .line 20405
    invoke-virtual {v7, v2}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Lcom/android/server/wm/WindowState;

    .line 20406
    .local v6, "w":Lcom/android/server/wm/WindowState;
    invoke-virtual {v6}, Lcom/android/server/wm/WindowState;->isOnScreen()Z

    move-result v8

    if-eqz v8, :cond_31

    iget-object v8, v6, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v8, v8, Landroid/view/WindowManager$LayoutParams;->samsungFlags:I

    and-int/lit8 v8, v8, 0xc

    if-eqz v8, :cond_31

    .line 20408
    iget-object v8, v6, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    invoke-virtual {v8}, Lcom/android/server/wm/WindowStateAnimator;->updateFixedOrientationWindowInTransactionLocked()V

    .line 20409
    const/4 v5, 0x1

    .line 20410
    const/4 v8, -0x1

    if-ne v3, v8, :cond_31

    .line 20411
    move v3, v2

    .line 20412
    iget-object v8, v6, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    iget v1, v8, Lcom/android/server/wm/WindowStateAnimator;->mAnimLayer:I

    .line 20404
    :cond_31
    add-int/lit8 v2, v2, -0x1

    goto :goto_d

    .line 20417
    .end local v6    # "w":Lcom/android/server/wm/WindowState;
    :cond_34
    if-nez v5, :cond_37

    .line 20437
    :cond_36
    return v5

    .line 20421
    :cond_37
    add-int/lit8 v4, v0, -0x1

    .local v4, "j":I
    :goto_39
    if-le v4, v3, :cond_36

    .line 20422
    invoke-virtual {v7, v4}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Lcom/android/server/wm/WindowState;

    .line 20423
    .restart local v6    # "w":Lcom/android/server/wm/WindowState;
    iget-object v8, v6, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    iget v8, v8, Lcom/android/server/wm/WindowStateAnimator;->mAnimLayer:I

    if-le v8, v1, :cond_6b

    .line 20424
    iget-object v8, v6, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    const/4 v9, 0x0

    invoke-virtual {v8, v9}, Lcom/android/server/wm/WindowStateAnimator;->hideSurfaceBeofreScreenRotationAnimation(F)V

    .line 20428
    invoke-virtual {v6}, Lcom/android/server/wm/WindowState;->getMultiWindowStyleLw()Lcom/samsung/android/multiwindow/MultiWindowStyle;

    move-result-object v8

    invoke-virtual {v8}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->isCascade()Z

    move-result v8

    if-eqz v8, :cond_6b

    iget-object v8, v6, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v8, v8, Landroid/view/WindowManager$LayoutParams;->type:I

    const/4 v9, 0x1

    if-ne v8, v9, :cond_6b

    invoke-virtual {v6}, Lcom/android/server/wm/WindowState;->getStack()Lcom/android/server/wm/TaskStack;

    move-result-object v8

    if-eqz v8, :cond_6b

    .line 20431
    invoke-virtual {v6}, Lcom/android/server/wm/WindowState;->getStack()Lcom/android/server/wm/TaskStack;

    move-result-object v8

    invoke-virtual {v8}, Lcom/android/server/wm/TaskStack;->animateDimLayers()Z

    .line 20421
    :cond_6b
    add-int/lit8 v4, v4, -0x1

    goto :goto_39
.end method

.method private updateWallpaperVisibilityLocked()V
    .registers 2

    .prologue
    .line 3928
    const/4 v0, 0x0

    invoke-virtual {p0, v0}, updateWallpaperVisibilityLocked(I)V

    .line 3929
    return-void
.end method

.method private usesOppositeOrientation(I)Z
    .registers 6
    .param p1, "displayId"    # I

    .prologue
    const/4 v2, 0x0

    const/4 v3, -0x1

    const/4 v1, 0x1

    .line 23227
    if-nez p1, :cond_15

    .line 23228
    iget-object v0, p0, mAppOrientionsForOppositeDisplay:Lcom/samsung/android/multidisplay/common/FallbackArrayList;

    invoke-virtual {v0, v1}, Lcom/samsung/android/multidisplay/common/FallbackArrayList;->get(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Ljava/lang/Integer;

    invoke-virtual {v0}, Ljava/lang/Integer;->intValue()I

    move-result v0

    if-eq v0, v3, :cond_27

    move v0, v1

    .line 23236
    :goto_14
    return v0

    .line 23231
    :cond_15
    if-ne p1, v1, :cond_27

    .line 23232
    iget-object v0, p0, mAppOrientionsForOppositeDisplay:Lcom/samsung/android/multidisplay/common/FallbackArrayList;

    invoke-virtual {v0, v2}, Lcom/samsung/android/multidisplay/common/FallbackArrayList;->get(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Ljava/lang/Integer;

    invoke-virtual {v0}, Ljava/lang/Integer;->intValue()I

    move-result v0

    if-eq v0, v3, :cond_27

    move v0, v1

    .line 23233
    goto :goto_14

    :cond_27
    move v0, v2

    .line 23236
    goto :goto_14
.end method


# virtual methods
.method public addAppToken(ILandroid/view/IApplicationToken;IIIZZIIZZ)V
    .registers 26
    .param p1, "addPos"    # I
    .param p2, "token"    # Landroid/view/IApplicationToken;
    .param p3, "taskId"    # I
    .param p4, "stackId"    # I
    .param p5, "requestedOrientation"    # I
    .param p6, "fullscreen"    # Z
    .param p7, "showForAllUsers"    # Z
    .param p8, "userId"    # I
    .param p9, "configChanges"    # I
    .param p10, "voiceInteraction"    # Z
    .param p11, "launchTaskBehind"    # Z

    .prologue
    .line 6406
    sget-object v12, Lcom/samsung/android/multiwindow/MultiWindowStyle;->sConstDefaultMultiWindowStyle:Lcom/samsung/android/multiwindow/MultiWindowStyle;

    const/4 v13, 0x0

    move-object v0, p0

    move v1, p1

    move-object/from16 v2, p2

    move/from16 v3, p3

    move/from16 v4, p4

    move/from16 v5, p5

    move/from16 v6, p6

    move/from16 v7, p7

    move/from16 v8, p8

    move/from16 v9, p9

    move/from16 v10, p10

    move/from16 v11, p11

    invoke-virtual/range {v0 .. v13}, addAppToken(ILandroid/view/IApplicationToken;IIIZZIIZZLcom/samsung/android/multiwindow/MultiWindowStyle;Z)V

    .line 6408
    return-void
.end method

.method public addAppToken(ILandroid/view/IApplicationToken;IIIZZIIZZLcom/samsung/android/multiwindow/MultiWindowStyle;Z)V
    .registers 30
    .param p1, "addPos"    # I
    .param p2, "token"    # Landroid/view/IApplicationToken;
    .param p3, "taskId"    # I
    .param p4, "stackId"    # I
    .param p5, "requestedOrientation"    # I
    .param p6, "fullscreen"    # Z
    .param p7, "showForAllUsers"    # Z
    .param p8, "userId"    # I
    .param p9, "configChanges"    # I
    .param p10, "voiceInteraction"    # Z
    .param p11, "launchTaskBehind"    # Z
    .param p12, "currentMultiWindowStyle"    # Lcom/samsung/android/multiwindow/MultiWindowStyle;
    .param p13, "skipRotationAnimation"    # Z

    .prologue
    .line 6414
    const/4 v14, 0x0

    const/4 v15, -0x2

    move-object/from16 v0, p0

    move/from16 v1, p1

    move-object/from16 v2, p2

    move/from16 v3, p3

    move/from16 v4, p4

    move/from16 v5, p5

    move/from16 v6, p6

    move/from16 v7, p7

    move/from16 v8, p8

    move/from16 v9, p9

    move/from16 v10, p10

    move/from16 v11, p11

    move-object/from16 v12, p12

    move/from16 v13, p13

    invoke-virtual/range {v0 .. v15}, addAppToken(ILandroid/view/IApplicationToken;IIIZZIIZZLcom/samsung/android/multiwindow/MultiWindowStyle;ZZI)V

    .line 6416
    return-void
.end method

.method public addAppToken(ILandroid/view/IApplicationToken;IIIZZIIZZLcom/samsung/android/multiwindow/MultiWindowStyle;ZZI)V
    .registers 38
    .param p1, "addPos"    # I
    .param p2, "token"    # Landroid/view/IApplicationToken;
    .param p3, "taskId"    # I
    .param p4, "stackId"    # I
    .param p5, "requestedOrientation"    # I
    .param p6, "fullscreen"    # Z
    .param p7, "showForAllUsers"    # Z
    .param p8, "userId"    # I
    .param p9, "configChanges"    # I
    .param p10, "voiceInteraction"    # Z
    .param p11, "launchTaskBehind"    # Z
    .param p12, "currentMultiWindowStyle"    # Lcom/samsung/android/multiwindow/MultiWindowStyle;
    .param p13, "skipRotationAnimation"    # Z
    .param p14, "noDisplay"    # Z
    .param p15, "requestedExpandedOrientation"    # I

    .prologue
    .line 6424
    const-string v17, "android.permission.MANAGE_APP_TOKENS"

    const-string v18, "addAppToken()"

    move-object/from16 v0, p0

    move-object/from16 v1, v17

    move-object/from16 v2, v18

    invoke-virtual {v0, v1, v2}, checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v17

    if-nez v17, :cond_18

    .line 6426
    new-instance v17, Ljava/lang/SecurityException;

    const-string v18, "Requires MANAGE_APP_TOKENS permission"

    invoke-direct/range {v17 .. v18}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v17

    .line 6437
    :cond_18
    :try_start_18
    invoke-interface/range {p2 .. p2}, Landroid/view/IApplicationToken;->getKeyDispatchingTimeout()J
    :try_end_1b
    .catch Landroid/os/RemoteException; {:try_start_18 .. :try_end_1b} :catch_5d

    move-result-wide v18

    const-wide/32 v20, 0xf4240

    mul-long v12, v18, v20

    .line 6444
    .local v12, "inputDispatchingTimeoutNanos":J
    :goto_21
    const/4 v6, 0x0

    .line 6447
    .local v6, "displayId":I
    :try_start_22
    invoke-interface/range {p2 .. p2}, Landroid/view/IApplicationToken;->getDisplayId()I
    :try_end_25
    .catch Landroid/os/RemoteException; {:try_start_22 .. :try_end_25} :catch_6f

    move-result v6

    .line 6455
    :goto_26
    move-object/from16 v0, p0

    iget-object v0, v0, mWindowMap:Ljava/util/HashMap;

    move-object/from16 v18, v0

    monitor-enter v18

    .line 6456
    :try_start_2d
    invoke-interface/range {p2 .. p2}, Landroid/view/IApplicationToken;->asBinder()Landroid/os/IBinder;

    move-result-object v17

    move-object/from16 v0, p0

    move-object/from16 v1, v17

    invoke-virtual {v0, v1}, findAppWindowToken(Landroid/os/IBinder;)Lcom/android/server/wm/AppWindowToken;

    move-result-object v5

    .line 6457
    .local v5, "atoken":Lcom/android/server/wm/AppWindowToken;
    if-eqz v5, :cond_7d

    .line 6458
    const-string v17, "WindowManager"

    new-instance v19, Ljava/lang/StringBuilder;

    invoke-direct/range {v19 .. v19}, Ljava/lang/StringBuilder;-><init>()V

    const-string v20, "Attempted to add existing app token: "

    invoke-virtual/range {v19 .. v20}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v19

    move-object/from16 v0, v19

    move-object/from16 v1, p2

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v19

    invoke-virtual/range {v19 .. v19}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v19

    move-object/from16 v0, v17

    move-object/from16 v1, v19

    invoke-static {v0, v1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 6459
    monitor-exit v18
    :try_end_5c
    .catchall {:try_start_2d .. :try_end_5c} :catchall_130

    .line 6550
    :goto_5c
    return-void

    .line 6438
    .end local v5    # "atoken":Lcom/android/server/wm/AppWindowToken;
    .end local v6    # "displayId":I
    .end local v12    # "inputDispatchingTimeoutNanos":J
    :catch_5d
    move-exception v8

    .line 6439
    .local v8, "ex":Landroid/os/RemoteException;
    const-string v17, "WindowManager"

    const-string v18, "Could not get dispatching timeout."

    move-object/from16 v0, v17

    move-object/from16 v1, v18

    invoke-static {v0, v1, v8}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 6440
    const-wide v12, 0x12a05f200L

    .restart local v12    # "inputDispatchingTimeoutNanos":J
    goto :goto_21

    .line 6448
    .end local v8    # "ex":Landroid/os/RemoteException;
    .restart local v6    # "displayId":I
    :catch_6f
    move-exception v8

    .line 6449
    .restart local v8    # "ex":Landroid/os/RemoteException;
    const-string v17, "WindowManager"

    const-string v18, "Could not get displayId."

    move-object/from16 v0, v17

    move-object/from16 v1, v18

    invoke-static {v0, v1, v8}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 6450
    const/4 v6, -0x1

    goto :goto_26

    .line 6461
    .end local v8    # "ex":Landroid/os/RemoteException;
    .restart local v5    # "atoken":Lcom/android/server/wm/AppWindowToken;
    :cond_7d
    :try_start_7d
    new-instance v5, Lcom/android/server/wm/AppWindowToken;

    .end local v5    # "atoken":Lcom/android/server/wm/AppWindowToken;
    move-object/from16 v0, p0

    move-object/from16 v1, p2

    move/from16 v2, p10

    invoke-direct {v5, v0, v1, v2}, Lcom/android/server/wm/AppWindowToken;-><init>(Lcom/android/server/wm/WindowManagerService;Landroid/view/IApplicationToken;Z)V

    .line 6462
    .restart local v5    # "atoken":Lcom/android/server/wm/AppWindowToken;
    iput-wide v12, v5, Lcom/android/server/wm/AppWindowToken;->inputDispatchingTimeoutNanos:J

    .line 6463
    move/from16 v0, p6

    iput-boolean v0, v5, Lcom/android/server/wm/AppWindowToken;->appFullscreen:Z

    .line 6464
    move/from16 v0, p7

    iput-boolean v0, v5, Lcom/android/server/wm/AppWindowToken;->showForAllUsers:Z

    .line 6465
    move/from16 v0, p5

    iput v0, v5, Lcom/android/server/wm/AppWindowToken;->requestedOrientation:I

    .line 6471
    move/from16 v0, p9

    and-int/lit16 v0, v0, 0x480

    move/from16 v17, v0

    if-eqz v17, :cond_133

    const/16 v17, 0x1

    :goto_a0
    move/from16 v0, v17

    iput-boolean v0, v5, Lcom/android/server/wm/AppWindowToken;->layoutConfigChanges:Z

    .line 6473
    move/from16 v0, p11

    iput-boolean v0, v5, Lcom/android/server/wm/AppWindowToken;->mLaunchTaskBehind:Z

    .line 6476
    iget-object v0, v5, Lcom/android/server/wm/AppWindowToken;->appMultiWindowStyle:Lcom/samsung/android/multiwindow/MultiWindowStyle;

    move-object/from16 v17, v0

    const/16 v19, 0x1

    move-object/from16 v0, v17

    move-object/from16 v1, p12

    move/from16 v2, v19

    invoke-virtual {v0, v1, v2}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->setTo(Lcom/samsung/android/multiwindow/MultiWindowStyle;Z)V

    .line 6477
    const/high16 v17, 0x4000000

    move-object/from16 v0, p12

    move/from16 v1, v17

    invoke-virtual {v0, v1}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->isEnabled(I)Z

    move-result v17

    if-eqz v17, :cond_137

    .line 6478
    const/16 v17, 0x1

    move/from16 v0, v17

    move-object/from16 v1, p0

    iput-boolean v0, v1, mIsRecentsMultiWindowRunning:Z

    .line 6479
    invoke-virtual/range {p0 .. p0}, getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v17

    invoke-virtual/range {v17 .. v17}, Lcom/android/server/wm/DisplayContent;->getTasks()Ljava/util/ArrayList;

    move-result-object v16

    .line 6480
    .local v16, "tasks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/Task;>;"
    invoke-virtual/range {v16 .. v16}, Ljava/util/ArrayList;->iterator()Ljava/util/Iterator;

    move-result-object v9

    :cond_d7
    :goto_d7
    invoke-interface {v9}, Ljava/util/Iterator;->hasNext()Z

    move-result v17

    if-eqz v17, :cond_14b

    invoke-interface {v9}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v15

    check-cast v15, Lcom/android/server/wm/Task;

    .line 6481
    .local v15, "task":Lcom/android/server/wm/Task;
    iget-object v0, v15, Lcom/android/server/wm/Task;->mAppTokens:Lcom/android/server/wm/AppTokenList;

    move-object/from16 v17, v0

    invoke-virtual/range {v17 .. v17}, Lcom/android/server/wm/AppTokenList;->iterator()Ljava/util/Iterator;

    move-result-object v10

    .local v10, "i$":Ljava/util/Iterator;
    :cond_eb
    invoke-interface {v10}, Ljava/util/Iterator;->hasNext()Z

    move-result v17

    if-eqz v17, :cond_d7

    invoke-interface {v10}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/server/wm/AppWindowToken;

    .line 6482
    .local v4, "appWinToken":Lcom/android/server/wm/AppWindowToken;
    new-instance v14, Lcom/samsung/android/multiwindow/MultiWindowStyle;

    iget-object v0, v4, Lcom/android/server/wm/AppWindowToken;->appMultiWindowStyle:Lcom/samsung/android/multiwindow/MultiWindowStyle;

    move-object/from16 v17, v0

    move-object/from16 v0, v17

    invoke-direct {v14, v0}, Lcom/samsung/android/multiwindow/MultiWindowStyle;-><init>(Lcom/samsung/android/multiwindow/MultiWindowStyle;)V

    .line 6483
    .local v14, "style":Lcom/samsung/android/multiwindow/MultiWindowStyle;
    const/4 v11, 0x0

    .line 6484
    .local v11, "needToUpdate":Z
    iget-object v0, v4, Lcom/android/server/wm/AppWindowToken;->appMultiWindowStyle:Lcom/samsung/android/multiwindow/MultiWindowStyle;

    move-object/from16 v17, v0

    const/high16 v19, 0x2000000

    move-object/from16 v0, v17

    move/from16 v1, v19

    invoke-virtual {v0, v1}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->isEnabled(I)Z

    move-result v17

    if-eqz v17, :cond_11f

    .line 6485
    const/high16 v17, 0x2000000

    const/16 v19, 0x0

    move/from16 v0, v17

    move/from16 v1, v19

    invoke-virtual {v14, v0, v1}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->setOption(IZ)V
    :try_end_11e
    .catchall {:try_start_7d .. :try_end_11e} :catchall_130

    .line 6486
    const/4 v11, 0x1

    .line 6488
    :cond_11f
    if-eqz v11, :cond_eb

    .line 6490
    :try_start_121
    iget-object v0, v4, Lcom/android/server/wm/AppWindowToken;->appToken:Landroid/view/IApplicationToken;

    move-object/from16 v17, v0

    move-object/from16 v0, v17

    invoke-interface {v0, v14}, Landroid/view/IApplicationToken;->setMultiWindowStyle(Lcom/samsung/android/multiwindow/MultiWindowStyle;)V
    :try_end_12a
    .catch Landroid/os/RemoteException; {:try_start_121 .. :try_end_12a} :catch_12b
    .catchall {:try_start_121 .. :try_end_12a} :catchall_130

    goto :goto_d7

    .line 6491
    :catch_12b
    move-exception v7

    .line 6492
    .local v7, "e":Landroid/os/RemoteException;
    :try_start_12c
    invoke-virtual {v7}, Landroid/os/RemoteException;->printStackTrace()V

    goto :goto_d7

    .line 6549
    .end local v4    # "appWinToken":Lcom/android/server/wm/AppWindowToken;
    .end local v5    # "atoken":Lcom/android/server/wm/AppWindowToken;
    .end local v7    # "e":Landroid/os/RemoteException;
    .end local v10    # "i$":Ljava/util/Iterator;
    .end local v11    # "needToUpdate":Z
    .end local v14    # "style":Lcom/samsung/android/multiwindow/MultiWindowStyle;
    .end local v15    # "task":Lcom/android/server/wm/Task;
    .end local v16    # "tasks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/Task;>;"
    :catchall_130
    move-exception v17

    monitor-exit v18
    :try_end_132
    .catchall {:try_start_12c .. :try_end_132} :catchall_130

    throw v17

    .line 6471
    .restart local v5    # "atoken":Lcom/android/server/wm/AppWindowToken;
    :cond_133
    const/16 v17, 0x0

    goto/16 :goto_a0

    .line 6498
    :cond_137
    const/high16 v17, 0x2000000

    :try_start_139
    move-object/from16 v0, p12

    move/from16 v1, v17

    invoke-virtual {v0, v1}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->isEnabled(I)Z

    move-result v17

    if-eqz v17, :cond_14b

    .line 6499
    const/16 v17, 0x1

    move/from16 v0, v17

    move-object/from16 v1, p0

    iput-boolean v0, v1, mForceHideCenterbar:Z

    .line 6504
    :cond_14b
    move/from16 v0, p13

    iput-boolean v0, v5, Lcom/android/server/wm/AppWindowToken;->skipRotationAnimation:Z

    .line 6508
    invoke-virtual {v5, v6}, Lcom/android/server/wm/AppWindowToken;->setDisplayId(I)V

    .line 6510
    move/from16 v0, p8

    iput v0, v5, Lcom/android/server/wm/AppWindowToken;->userId:I

    .line 6512
    const-string v17, "WindowManager"

    new-instance v19, Ljava/lang/StringBuilder;

    invoke-direct/range {v19 .. v19}, Ljava/lang/StringBuilder;-><init>()V

    const-string v20, "addAppToken: "

    invoke-virtual/range {v19 .. v20}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v19

    move-object/from16 v0, v19

    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v19

    const-string v20, " to stack="

    invoke-virtual/range {v19 .. v20}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v19

    move-object/from16 v0, v19

    move/from16 v1, p4

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v19

    const-string v20, " task="

    invoke-virtual/range {v19 .. v20}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v19

    move-object/from16 v0, v19

    move/from16 v1, p3

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v19

    const-string v20, " at "

    invoke-virtual/range {v19 .. v20}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v19

    move-object/from16 v0, v19

    move/from16 v1, p1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v19

    invoke-virtual/range {v19 .. v19}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v19

    move-object/from16 v0, v17

    move-object/from16 v1, v19

    invoke-static {v0, v1}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 6515
    move-object/from16 v0, p0

    iget-object v0, v0, mTaskIdToTask:Landroid/util/SparseArray;

    move-object/from16 v17, v0

    move-object/from16 v0, v17

    move/from16 v1, p3

    invoke-virtual {v0, v1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v15

    check-cast v15, Lcom/android/server/wm/Task;

    .line 6516
    .restart local v15    # "task":Lcom/android/server/wm/Task;
    if-nez v15, :cond_1bc

    .line 6517
    move-object/from16 v0, p0

    move/from16 v1, p3

    move/from16 v2, p4

    move/from16 v3, p8

    invoke-direct {v0, v1, v2, v3, v5}, createTaskLocked(IIILcom/android/server/wm/AppWindowToken;)Lcom/android/server/wm/Task;

    move-result-object v15

    .line 6519
    :cond_1bc
    move/from16 v0, p1

    invoke-virtual {v15, v0, v5}, Lcom/android/server/wm/Task;->addAppToken(ILcom/android/server/wm/AppWindowToken;)V

    .line 6521
    move-object/from16 v0, p0

    iget-object v0, v0, mTokenMap:Ljava/util/HashMap;

    move-object/from16 v17, v0

    invoke-interface/range {p2 .. p2}, Landroid/view/IApplicationToken;->asBinder()Landroid/os/IBinder;

    move-result-object v19

    move-object/from16 v0, v17

    move-object/from16 v1, v19

    invoke-virtual {v0, v1, v5}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 6539
    const/16 v17, 0x1

    move/from16 v0, v17

    iput-boolean v0, v5, Lcom/android/server/wm/AppWindowToken;->hidden:Z

    .line 6540
    const/16 v17, 0x1

    move/from16 v0, v17

    iput-boolean v0, v5, Lcom/android/server/wm/AppWindowToken;->hiddenRequested:Z

    .line 6542
    const/16 v17, 0x0

    move/from16 v0, v17

    iput-boolean v0, v5, Lcom/android/server/wm/AppWindowToken;->noWindowWhenHiddenRequested:Z

    .line 6545
    move/from16 v0, p14

    iput-boolean v0, v5, Lcom/android/server/wm/AppWindowToken;->noDisplay:Z

    .line 6549
    monitor-exit v18
    :try_end_1e9
    .catchall {:try_start_139 .. :try_end_1e9} :catchall_130

    goto/16 :goto_5c
.end method

.method public bridge synthetic addInputConsumer(Landroid/os/Looper;Landroid/view/InputEventReceiver$Factory;)Landroid/view/WindowManagerPolicy$InputConsumer;
    .registers 4
    .param p1, "x0"    # Landroid/os/Looper;
    .param p2, "x1"    # Landroid/view/InputEventReceiver$Factory;

    .prologue
    .line 387
    invoke-virtual {p0, p1, p2}, addInputConsumer(Landroid/os/Looper;Landroid/view/InputEventReceiver$Factory;)Lcom/android/server/wm/InputConsumerImpl;

    move-result-object v0

    return-object v0
.end method

.method public bridge synthetic addInputConsumer(Landroid/os/Looper;Landroid/view/InputEventReceiver$Factory;I)Landroid/view/WindowManagerPolicy$InputConsumer;
    .registers 5
    .param p1, "x0"    # Landroid/os/Looper;
    .param p2, "x1"    # Landroid/view/InputEventReceiver$Factory;
    .param p3, "x2"    # I

    .prologue
    .line 387
    invoke-virtual {p0, p1, p2, p3}, addInputConsumer(Landroid/os/Looper;Landroid/view/InputEventReceiver$Factory;I)Lcom/android/server/wm/InputConsumerImpl;

    move-result-object v0

    return-object v0
.end method

.method public addInputConsumer(Landroid/os/Looper;Landroid/view/InputEventReceiver$Factory;)Lcom/android/server/wm/InputConsumerImpl;
    .registers 6
    .param p1, "looper"    # Landroid/os/Looper;
    .param p2, "inputEventReceiverFactory"    # Landroid/view/InputEventReceiver$Factory;

    .prologue
    .line 19176
    iget-object v1, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v1

    .line 19177
    :try_start_3
    new-instance v0, Lcom/android/server/wm/InputConsumerImpl;

    invoke-direct {v0, p0, p1, p2}, Lcom/android/server/wm/InputConsumerImpl;-><init>(Lcom/android/server/wm/WindowManagerService;Landroid/os/Looper;Landroid/view/InputEventReceiver$Factory;)V

    iput-object v0, p0, mInputConsumer:Lcom/android/server/wm/InputConsumerImpl;

    .line 19178
    iget-object v0, p0, mInputMonitor:Lcom/android/server/wm/InputMonitor;

    const/4 v2, 0x1

    invoke-virtual {v0, v2}, Lcom/android/server/wm/InputMonitor;->updateInputWindowsLw(Z)V

    .line 19179
    iget-object v0, p0, mInputConsumer:Lcom/android/server/wm/InputConsumerImpl;

    monitor-exit v1

    return-object v0

    .line 19180
    :catchall_14
    move-exception v0

    monitor-exit v1
    :try_end_16
    .catchall {:try_start_3 .. :try_end_16} :catchall_14

    throw v0
.end method

.method public addInputConsumer(Landroid/os/Looper;Landroid/view/InputEventReceiver$Factory;I)Lcom/android/server/wm/InputConsumerImpl;
    .registers 6
    .param p1, "looper"    # Landroid/os/Looper;
    .param p2, "inputEventReceiverFactory"    # Landroid/view/InputEventReceiver$Factory;
    .param p3, "displayId"    # I

    .prologue
    .line 19198
    iget-object v1, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v1

    .line 19206
    const/4 v0, 0x0

    :try_start_4
    monitor-exit v1

    return-object v0

    .line 19207
    :catchall_6
    move-exception v0

    monitor-exit v1
    :try_end_8
    .catchall {:try_start_4 .. :try_end_8} :catchall_6

    throw v0
.end method

.method addInputMethodWindowToListLocked(Lcom/android/server/wm/WindowState;)V
    .registers 7
    .param p1, "win"    # Lcom/android/server/wm/WindowState;

    .prologue
    const/4 v4, 0x1

    .line 2623
    invoke-virtual {p0, v4}, findDesiredInputMethodWindowIndexLocked(Z)I

    move-result v0

    .line 2624
    .local v0, "pos":I
    if-ltz v0, :cond_46

    .line 2625
    iget-object v1, p0, mInputMethodTarget:Lcom/android/server/wm/WindowState;

    iget-object v1, v1, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    iput-object v1, p1, Lcom/android/server/wm/WindowState;->mTargetAppToken:Lcom/android/server/wm/AppWindowToken;

    .line 2626
    sget-boolean v1, DEBUG_WINDOW_MOVEMENT:Z

    if-nez v1, :cond_15

    sget-boolean v1, DEBUG_ADD_REMOVE:Z

    if-eqz v1, :cond_37

    :cond_15
    const-string v1, "WindowManager"

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Adding input method window "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string v3, " at "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v1, v2}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 2644
    :cond_37
    invoke-virtual {p0}, getDefaultWindowListLocked()Lcom/android/server/wm/WindowList;

    move-result-object v1

    invoke-virtual {v1, v0, p1}, Lcom/android/server/wm/WindowList;->add(ILjava/lang/Object;)V

    .line 2645
    iput-boolean v4, p0, mWindowsChanged:Z

    .line 2646
    add-int/lit8 v1, v0, 0x1

    invoke-virtual {p0, v1}, moveInputMethodDialogsLocked(I)V

    .line 2652
    :goto_45
    return-void

    .line 2649
    :cond_46
    const/4 v1, 0x0

    iput-object v1, p1, Lcom/android/server/wm/WindowState;->mTargetAppToken:Lcom/android/server/wm/AppWindowToken;

    .line 2650
    invoke-direct {p0, p1, v4}, addWindowToListInOrderLocked(Lcom/android/server/wm/WindowState;Z)V

    .line 2651
    invoke-virtual {p0, v0}, moveInputMethodDialogsLocked(I)V

    goto :goto_45
.end method

.method public addMultiWindowTransitionTargetIfNeeded(Ljava/util/ArrayList;)V
    .registers 3
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/util/ArrayList",
            "<",
            "Landroid/os/IBinder;",
            ">;)V"
        }
    .end annotation

    .prologue
    .line 21287
    .local p1, "tokens":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/os/IBinder;>;"
    const/4 v0, 0x0

    invoke-virtual {p0, p1, v0}, addMultiWindowTransitionTargetIfNeeded(Ljava/util/ArrayList;I)V

    .line 21288
    return-void
.end method

.method public addMultiWindowTransitionTargetIfNeeded(Ljava/util/ArrayList;I)V
    .registers 14
    .param p2, "displayId"    # I
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/util/ArrayList",
            "<",
            "Landroid/os/IBinder;",
            ">;I)V"
        }
    .end annotation

    .prologue
    .line 21292
    .local p1, "tokens":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/os/IBinder;>;"
    iget-object v8, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v8

    .line 21293
    if-eqz p1, :cond_76

    .line 21294
    const/4 v6, 0x0

    .line 21295
    .local v6, "wtoken":Lcom/android/server/wm/AppWindowToken;
    :try_start_6
    new-instance v3, Ljava/util/ArrayList;

    invoke-direct {v3}, Ljava/util/ArrayList;-><init>()V

    .line 21296
    .local v3, "targetTokens":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/AppWindowToken;>;"
    invoke-virtual {p1}, Ljava/util/ArrayList;->iterator()Ljava/util/Iterator;

    move-result-object v0

    .local v0, "i$":Ljava/util/Iterator;
    :cond_f
    :goto_f
    invoke-interface {v0}, Ljava/util/Iterator;->hasNext()Z

    move-result v7

    if-eqz v7, :cond_28

    invoke-interface {v0}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Landroid/os/IBinder;

    .line 21297
    .local v4, "token":Landroid/os/IBinder;
    invoke-virtual {p0, v4}, findAppWindowToken(Landroid/os/IBinder;)Lcom/android/server/wm/AppWindowToken;

    move-result-object v6

    .line 21298
    if-eqz v6, :cond_f

    .line 21299
    invoke-virtual {v3, v6}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    goto :goto_f

    .line 21316
    .end local v0    # "i$":Ljava/util/Iterator;
    .end local v3    # "targetTokens":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/AppWindowToken;>;"
    .end local v4    # "token":Landroid/os/IBinder;
    .end local v6    # "wtoken":Lcom/android/server/wm/AppWindowToken;
    :catchall_25
    move-exception v7

    monitor-exit v8
    :try_end_27
    .catchall {:try_start_6 .. :try_end_27} :catchall_25

    throw v7

    .line 21302
    .restart local v0    # "i$":Ljava/util/Iterator;
    .restart local v3    # "targetTokens":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/AppWindowToken;>;"
    .restart local v6    # "wtoken":Lcom/android/server/wm/AppWindowToken;
    :cond_28
    :try_start_28
    invoke-virtual {v3}, Ljava/util/ArrayList;->isEmpty()Z

    move-result v7

    if-nez v7, :cond_76

    .line 21303
    invoke-virtual {p0, p2}, getMultiWindowTransitionLocked(I)Lcom/android/server/wm/MultiWindowTransition;

    move-result-object v5

    .line 21304
    .local v5, "transition":Lcom/android/server/wm/MultiWindowTransition;
    invoke-virtual {v5}, Lcom/android/server/wm/MultiWindowTransition;->isTransitionSet()Z

    move-result v7

    if-eqz v7, :cond_76

    .line 21305
    new-instance v1, Ljava/util/ArrayList;

    invoke-direct {v1}, Ljava/util/ArrayList;-><init>()V

    .line 21306
    .local v1, "registeredTokens":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/AppWindowToken;>;"
    invoke-virtual {v3}, Ljava/util/ArrayList;->iterator()Ljava/util/Iterator;

    move-result-object v0

    :cond_41
    :goto_41
    invoke-interface {v0}, Ljava/util/Iterator;->hasNext()Z

    move-result v7

    if-eqz v7, :cond_57

    invoke-interface {v0}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/wm/AppWindowToken;

    .line 21307
    .local v2, "targetToken":Lcom/android/server/wm/AppWindowToken;
    invoke-virtual {v5, v2}, Lcom/android/server/wm/MultiWindowTransition;->addMultiWindowTransitionTarget(Lcom/android/server/wm/AppWindowToken;)Z

    move-result v7

    if-eqz v7, :cond_41

    .line 21308
    invoke-virtual {v1, v2}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    goto :goto_41

    .line 21311
    .end local v2    # "targetToken":Lcom/android/server/wm/AppWindowToken;
    :cond_57
    sget-boolean v7, DEBUG_APP_TRANSITIONS:Z

    if-eqz v7, :cond_73

    const-string v7, "WindowManager"

    new-instance v9, Ljava/lang/StringBuilder;

    invoke-direct {v9}, Ljava/lang/StringBuilder;-><init>()V

    const-string v10, "addMultiWindowTransitionTargetIfNeeded: "

    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v9

    invoke-virtual {v9, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v9

    invoke-virtual {v9}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v9

    invoke-static {v7, v9}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 21312
    :cond_73
    invoke-direct {p0, v1, p2}, requestMultiWindowTransitionTargetDrawnIfNeededLocked(Ljava/util/ArrayList;I)V

    .line 21316
    .end local v0    # "i$":Ljava/util/Iterator;
    .end local v1    # "registeredTokens":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/AppWindowToken;>;"
    .end local v3    # "targetTokens":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/AppWindowToken;>;"
    .end local v5    # "transition":Lcom/android/server/wm/MultiWindowTransition;
    .end local v6    # "wtoken":Lcom/android/server/wm/AppWindowToken;
    :cond_76
    monitor-exit v8
    :try_end_77
    .catchall {:try_start_28 .. :try_end_77} :catchall_25

    .line 21317
    return-void
.end method

.method public addScaledPid(ILjava/lang/String;)V
    .registers 5
    .param p1, "pid"    # I
    .param p2, "packageName"    # Ljava/lang/String;

    .prologue
    .line 3998
    iget-object v0, p0, mScaledPids:Ljava/util/HashMap;

    invoke-static {p1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v1

    invoke-virtual {v0, v1, p2}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 3999
    iget-object v0, p0, mDisplayManagerInternal:Landroid/hardware/display/DisplayManagerInternal;

    invoke-virtual {v0, p1, p2}, Landroid/hardware/display/DisplayManagerInternal;->addScaledPidFromWindowManager(ILjava/lang/String;)V

    .line 4000
    return-void
.end method

.method public addTask(IIZ)V
    .registers 5
    .param p1, "taskId"    # I
    .param p2, "stackId"    # I
    .param p3, "toTop"    # Z

    .prologue
    .line 9342
    const/4 v0, 0x1

    invoke-virtual {p0, p1, p2, p3, v0}, addTask(IIZZ)V

    .line 9343
    return-void
.end method

.method public addTask(IIZZ)V
    .registers 13
    .param p1, "taskId"    # I
    .param p2, "stackId"    # I
    .param p3, "toTop"    # Z
    .param p4, "layoutNeeded"    # Z

    .prologue
    .line 9347
    iget-object v5, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v5

    .line 9348
    :try_start_3
    sget-boolean v4, DEBUG_STACK:Z

    if-eqz v4, :cond_2e

    const-string v6, "WindowManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "addTask: adding taskId="

    invoke-virtual {v4, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v7, " to "

    invoke-virtual {v4, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    if-eqz p3, :cond_56

    const-string/jumbo v4, "top"

    :goto_23
    invoke-virtual {v7, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v6, v4}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 9350
    :cond_2e
    iget-object v4, p0, mTaskIdToTask:Landroid/util/SparseArray;

    invoke-virtual {v4, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/wm/Task;

    .line 9351
    .local v3, "task":Lcom/android/server/wm/Task;
    if-nez v3, :cond_59

    .line 9352
    sget-boolean v4, DEBUG_STACK:Z

    if-eqz v4, :cond_54

    const-string v4, "WindowManager"

    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "addTask: could not find taskId="

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-static {v4, v6}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 9353
    :cond_54
    monitor-exit v5

    .line 9391
    :goto_55
    return-void

    .line 9348
    .end local v3    # "task":Lcom/android/server/wm/Task;
    :cond_56
    const-string v4, "bottom"

    goto :goto_23

    .line 9355
    .restart local v3    # "task":Lcom/android/server/wm/Task;
    :cond_59
    iget-object v4, p0, mStackIdToStack:Landroid/util/SparseArray;

    invoke-virtual {v4, p2}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/wm/TaskStack;

    .line 9357
    .local v2, "stack":Lcom/android/server/wm/TaskStack;
    const/4 v1, 0x0

    .line 9359
    .local v1, "needRebuild":Z
    if-nez v2, :cond_69

    .line 9360
    monitor-exit v5

    goto :goto_55

    .line 9390
    .end local v1    # "needRebuild":Z
    .end local v2    # "stack":Lcom/android/server/wm/TaskStack;
    .end local v3    # "task":Lcom/android/server/wm/Task;
    :catchall_66
    move-exception v4

    monitor-exit v5
    :try_end_68
    .catchall {:try_start_3 .. :try_end_68} :catchall_66

    throw v4

    .line 9361
    .restart local v1    # "needRebuild":Z
    .restart local v2    # "stack":Lcom/android/server/wm/TaskStack;
    .restart local v3    # "task":Lcom/android/server/wm/Task;
    :cond_69
    :try_start_69
    iget-object v4, v3, Lcom/android/server/wm/Task;->mStack:Lcom/android/server/wm/TaskStack;

    if-eqz v4, :cond_97

    .line 9362
    iget-object v4, v3, Lcom/android/server/wm/Task;->mStack:Lcom/android/server/wm/TaskStack;

    invoke-virtual {v4}, Lcom/android/server/wm/TaskStack;->isFloatingStack()Z

    move-result v4

    if-eqz v4, :cond_7c

    invoke-virtual {v2}, Lcom/android/server/wm/TaskStack;->isFloatingStack()Z

    move-result v4

    if-nez v4, :cond_7c

    .line 9363
    const/4 v1, 0x1

    .line 9365
    :cond_7c
    iget-object v4, v3, Lcom/android/server/wm/Task;->mStack:Lcom/android/server/wm/TaskStack;

    invoke-virtual {v4}, Lcom/android/server/wm/TaskStack;->isFloatingStack()Z

    move-result v4

    if-nez v4, :cond_97

    invoke-virtual {v2}, Lcom/android/server/wm/TaskStack;->isFloatingStack()Z

    move-result v4

    if-eqz v4, :cond_97

    iget-object v4, v3, Lcom/android/server/wm/Task;->mStack:Lcom/android/server/wm/TaskStack;

    invoke-virtual {v4}, Lcom/android/server/wm/TaskStack;->checkFixedBound()Z

    move-result v4

    if-eqz v4, :cond_97

    .line 9366
    iget-object v4, v3, Lcom/android/server/wm/Task;->mStack:Lcom/android/server/wm/TaskStack;

    const/4 v6, 0x1

    iput-boolean v6, v4, Lcom/android/server/wm/TaskStack;->mPostFixedBound:Z

    .line 9372
    :cond_97
    invoke-virtual {v2, v3, p3}, Lcom/android/server/wm/TaskStack;->addTask(Lcom/android/server/wm/Task;Z)V

    .line 9374
    invoke-virtual {v2}, Lcom/android/server/wm/TaskStack;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    move-result-object v0

    .line 9377
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    const/4 v4, 0x0

    iput-object v4, p0, mMovingTask:Lcom/android/server/wm/Task;

    .line 9378
    if-eqz p4, :cond_ae

    .line 9379
    const/4 v4, 0x1

    iput-boolean v4, v0, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    .line 9380
    if-eqz v1, :cond_ab

    .line 9381
    invoke-virtual {p0}, rebuildAppWindowListLocked()V

    .line 9383
    :cond_ab
    invoke-direct {p0}, performLayoutAndPlaceSurfacesLocked()V

    .line 9390
    :cond_ae
    monitor-exit v5
    :try_end_af
    .catchall {:try_start_69 .. :try_end_af} :catchall_66

    goto :goto_55
.end method

.method public addWindow(Lcom/android/server/wm/Session;Landroid/view/IWindow;ILandroid/view/WindowManager$LayoutParams;IILandroid/graphics/Rect;Landroid/graphics/Rect;Landroid/graphics/Rect;Landroid/view/InputChannel;)I
    .registers 56
    .param p1, "session"    # Lcom/android/server/wm/Session;
    .param p2, "client"    # Landroid/view/IWindow;
    .param p3, "seq"    # I
    .param p4, "attrs"    # Landroid/view/WindowManager$LayoutParams;
    .param p5, "viewVisibility"    # I
    .param p6, "displayId"    # I
    .param p7, "outContentInsets"    # Landroid/graphics/Rect;
    .param p8, "outStableInsets"    # Landroid/graphics/Rect;
    .param p9, "outOutsets"    # Landroid/graphics/Rect;
    .param p10, "outInputChannel"    # Landroid/view/InputChannel;

    .prologue
    .line 4019
    const/4 v3, 0x1

    new-array v0, v3, [I

    move-object/from16 v20, v0

    .line 4020
    .local v20, "appOp":[I
    move-object/from16 v0, p0

    iget-object v3, v0, mPolicy:Landroid/view/WindowManagerPolicy;

    move-object/from16 v0, p4

    move-object/from16 v1, v20

    invoke-interface {v3, v0, v1}, Landroid/view/WindowManagerPolicy;->checkAddPermission(Landroid/view/WindowManager$LayoutParams;[I)I

    move-result v36

    .line 4021
    .local v36, "res":I
    if-eqz v36, :cond_16

    move/from16 v3, v36

    .line 4563
    :goto_15
    return v3

    .line 4025
    :cond_16
    const/16 v33, 0x0

    .line 4026
    .local v33, "reportNewConfig":Z
    const/4 v7, 0x0

    .line 4028
    .local v7, "attachedWindow":Lcom/android/server/wm/WindowState;
    move-object/from16 v0, p4

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    move/from16 v41, v0

    .line 4030
    .local v41, "type":I
    move-object/from16 v0, p0

    iget-object v0, v0, mWindowMap:Ljava/util/HashMap;

    move-object/from16 v44, v0

    monitor-enter v44

    .line 4031
    :try_start_26
    move-object/from16 v0, p0

    iget-boolean v3, v0, mDisplayReady:Z

    if-nez v3, :cond_37

    .line 4032
    new-instance v3, Ljava/lang/IllegalStateException;

    const-string v4, "Display has not been initialialized"

    invoke-direct {v3, v4}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw v3

    .line 4542
    :catchall_34
    move-exception v3

    monitor-exit v44
    :try_end_36
    .catchall {:try_start_26 .. :try_end_36} :catchall_34

    throw v3

    .line 4076
    :cond_37
    :try_start_37
    invoke-static {}, Lcom/android/server/am/VirtualScreenManagerService;->self()Lcom/android/server/am/VirtualScreenManagerService;

    move-result-object v3

    move/from16 v0, p6

    invoke-virtual {v3, v0}, Lcom/android/server/am/VirtualScreenManagerService;->isVirtualScreen(I)Z

    move-result v3

    if-nez v3, :cond_4d

    move-object/from16 v0, p0

    move/from16 v1, p6

    invoke-virtual {v0, v1}, getDisplayContentLocked(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v3

    if-nez v3, :cond_8d

    .line 4078
    :cond_4d
    move-object/from16 v0, p0

    iget-object v3, v0, mTokenMap:Ljava/util/HashMap;

    move-object/from16 v0, p4

    iget-object v4, v0, Landroid/view/WindowManager$LayoutParams;->token:Landroid/os/IBinder;

    invoke-virtual {v3, v4}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v42

    check-cast v42, Lcom/android/server/wm/WindowToken;

    .line 4079
    .local v42, "wToken":Lcom/android/server/wm/WindowToken;
    if-eqz v42, :cond_8d

    move-object/from16 v0, v42

    iget-object v3, v0, Lcom/android/server/wm/WindowToken;->appWindowToken:Lcom/android/server/wm/AppWindowToken;

    if-eqz v3, :cond_8d

    .line 4080
    move-object/from16 v0, v42

    iget-object v3, v0, Lcom/android/server/wm/WindowToken;->appWindowToken:Lcom/android/server/wm/AppWindowToken;

    invoke-virtual {v3}, Lcom/android/server/wm/AppWindowToken;->getDisplayId()I

    move-result v21

    .line 4081
    .local v21, "appTokenDisplayId":I
    move/from16 v0, p6

    move/from16 v1, v21

    if-eq v0, v1, :cond_8d

    .line 4082
    const-string v3, "WindowManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "[VIRTUALSCREEN] addWindow: displayId changed to "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move/from16 v0, v21

    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v3, v4}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 4083
    move/from16 p6, v21

    .line 4089
    .end local v21    # "appTokenDisplayId":I
    .end local v42    # "wToken":Lcom/android/server/wm/WindowToken;
    :cond_8d
    move-object/from16 v0, p0

    move/from16 v1, p6

    invoke-virtual {v0, v1}, getDisplayContentLocked(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v12

    .line 4090
    .local v12, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-nez v12, :cond_bc

    .line 4091
    const-string v3, "WindowManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Attempted to add window to a display that does not exist: "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move/from16 v0, p6

    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, ".  Aborting."

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 4093
    const/16 v3, -0x9

    monitor-exit v44

    goto/16 :goto_15

    .line 4095
    :cond_bc
    move-object/from16 v0, p1

    iget v3, v0, Lcom/android/server/wm/Session;->mUid:I

    invoke-virtual {v12, v3}, Lcom/android/server/wm/DisplayContent;->hasAccess(I)Z

    move-result v3

    if-nez v3, :cond_eb

    .line 4096
    const-string v3, "WindowManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Attempted to add window to a display for which the application does not have access: "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move/from16 v0, p6

    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, ".  Aborting."

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 4098
    const/16 v3, -0x9

    monitor-exit v44

    goto/16 :goto_15

    .line 4101
    :cond_eb
    move-object/from16 v0, p0

    iget-object v3, v0, mWindowMap:Ljava/util/HashMap;

    invoke-interface/range {p2 .. p2}, Landroid/view/IWindow;->asBinder()Landroid/os/IBinder;

    move-result-object v4

    invoke-virtual {v3, v4}, Ljava/util/HashMap;->containsKey(Ljava/lang/Object;)Z

    move-result v3

    if-eqz v3, :cond_11d

    .line 4102
    const-string v3, "WindowManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Window "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p2

    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, " is already added"

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 4103
    const/4 v3, -0x5

    monitor-exit v44

    goto/16 :goto_15

    .line 4106
    :cond_11d
    const/16 v3, 0x3e8

    move/from16 v0, v41

    if-lt v0, v3, :cond_193

    const/16 v3, 0x7cf

    move/from16 v0, v41

    if-gt v0, v3, :cond_193

    .line 4107
    const/4 v3, 0x0

    move-object/from16 v0, p4

    iget-object v4, v0, Landroid/view/WindowManager$LayoutParams;->token:Landroid/os/IBinder;

    const/4 v5, 0x0

    move-object/from16 v0, p0

    invoke-virtual {v0, v3, v4, v5}, windowForClientLocked(Lcom/android/server/wm/Session;Landroid/os/IBinder;Z)Lcom/android/server/wm/WindowState;

    move-result-object v7

    .line 4108
    if-nez v7, :cond_15d

    .line 4109
    const-string v3, "WindowManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Attempted to add window with token that is not a window: "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p4

    iget-object v5, v0, Landroid/view/WindowManager$LayoutParams;->token:Landroid/os/IBinder;

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, ".  Aborting."

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 4111
    const/4 v3, -0x2

    monitor-exit v44

    goto/16 :goto_15

    .line 4113
    :cond_15d
    iget-object v3, v7, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v3, v3, Landroid/view/WindowManager$LayoutParams;->type:I

    const/16 v4, 0x3e8

    if-lt v3, v4, :cond_193

    iget-object v3, v7, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v3, v3, Landroid/view/WindowManager$LayoutParams;->type:I

    const/16 v4, 0x7cf

    if-gt v3, v4, :cond_193

    .line 4115
    const-string v3, "WindowManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Attempted to add window with token that is a sub-window: "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p4

    iget-object v5, v0, Landroid/view/WindowManager$LayoutParams;->token:Landroid/os/IBinder;

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, ".  Aborting."

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 4117
    const/4 v3, -0x2

    monitor-exit v44

    goto/16 :goto_15

    .line 4121
    :cond_193
    const/16 v3, 0x7ee

    move/from16 v0, v41

    if-ne v0, v3, :cond_1aa

    invoke-virtual {v12}, Lcom/android/server/wm/DisplayContent;->isPrivate()Z

    move-result v3

    if-nez v3, :cond_1aa

    .line 4122
    const-string v3, "WindowManager"

    const-string v4, "Attempted to add private presentation window to a non-private display.  Aborting."

    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 4123
    const/4 v3, -0x8

    monitor-exit v44

    goto/16 :goto_15

    .line 4126
    :cond_1aa
    const/16 v19, 0x0

    .line 4127
    .local v19, "addToken":Z
    move-object/from16 v0, p0

    iget-object v3, v0, mTokenMap:Ljava/util/HashMap;

    move-object/from16 v0, p4

    iget-object v4, v0, Landroid/view/WindowManager$LayoutParams;->token:Landroid/os/IBinder;

    invoke-virtual {v3, v4}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Lcom/android/server/wm/WindowToken;

    .line 4128
    .local v6, "token":Lcom/android/server/wm/WindowToken;
    if-nez v6, :cond_35e

    .line 4129
    const/4 v3, 0x1

    move/from16 v0, v41

    if-lt v0, v3, :cond_1ed

    const/16 v3, 0x63

    move/from16 v0, v41

    if-gt v0, v3, :cond_1ed

    .line 4130
    const-string v3, "WindowManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Attempted to add application window with unknown token "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p4

    iget-object v5, v0, Landroid/view/WindowManager$LayoutParams;->token:Landroid/os/IBinder;

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, ".  Aborting."

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 4132
    const/4 v3, -0x1

    monitor-exit v44

    goto/16 :goto_15

    .line 4134
    :cond_1ed
    const/16 v3, 0x7db

    move/from16 v0, v41

    if-ne v0, v3, :cond_219

    .line 4135
    const-string v3, "WindowManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Attempted to add input method window with unknown token "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p4

    iget-object v5, v0, Landroid/view/WindowManager$LayoutParams;->token:Landroid/os/IBinder;

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, ".  Aborting."

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 4137
    const/4 v3, -0x1

    monitor-exit v44

    goto/16 :goto_15

    .line 4139
    :cond_219
    const/16 v3, 0x7ef

    move/from16 v0, v41

    if-ne v0, v3, :cond_245

    .line 4140
    const-string v3, "WindowManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Attempted to add voice interaction window with unknown token "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p4

    iget-object v5, v0, Landroid/view/WindowManager$LayoutParams;->token:Landroid/os/IBinder;

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, ".  Aborting."

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 4142
    const/4 v3, -0x1

    monitor-exit v44

    goto/16 :goto_15

    .line 4144
    :cond_245
    const/16 v3, 0x7dd

    move/from16 v0, v41

    if-ne v0, v3, :cond_271

    .line 4145
    const-string v3, "WindowManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Attempted to add wallpaper window with unknown token "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p4

    iget-object v5, v0, Landroid/view/WindowManager$LayoutParams;->token:Landroid/os/IBinder;

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, ".  Aborting."

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 4147
    const/4 v3, -0x1

    monitor-exit v44

    goto/16 :goto_15

    .line 4149
    :cond_271
    const/16 v3, 0x7e7

    move/from16 v0, v41

    if-ne v0, v3, :cond_29d

    .line 4150
    const-string v3, "WindowManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Attempted to add Dream window with unknown token "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p4

    iget-object v5, v0, Landroid/view/WindowManager$LayoutParams;->token:Landroid/os/IBinder;

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, ".  Aborting."

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 4152
    const/4 v3, -0x1

    monitor-exit v44

    goto/16 :goto_15

    .line 4154
    :cond_29d
    const/16 v3, 0x7f0

    move/from16 v0, v41

    if-ne v0, v3, :cond_2c9

    .line 4155
    const-string v3, "WindowManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Attempted to add Accessibility overlay window with unknown token "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p4

    iget-object v5, v0, Landroid/view/WindowManager$LayoutParams;->token:Landroid/os/IBinder;

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, ".  Aborting."

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 4157
    const/4 v3, -0x1

    monitor-exit v44

    goto/16 :goto_15

    .line 4159
    :cond_2c9
    new-instance v6, Lcom/android/server/wm/WindowToken;

    .end local v6    # "token":Lcom/android/server/wm/WindowToken;
    move-object/from16 v0, p4

    iget-object v3, v0, Landroid/view/WindowManager$LayoutParams;->token:Landroid/os/IBinder;

    const/4 v4, -0x1

    const/4 v5, 0x0

    move-object/from16 v0, p0

    invoke-direct {v6, v0, v3, v4, v5}, Lcom/android/server/wm/WindowToken;-><init>(Lcom/android/server/wm/WindowManagerService;Landroid/os/IBinder;IZ)V

    .line 4160
    .restart local v6    # "token":Lcom/android/server/wm/WindowToken;
    const/16 v19, 0x1

    .line 4220
    :cond_2d8
    :goto_2d8
    const/16 v37, 0x0

    .line 4221
    .local v37, "scaledSurfaces":Z
    move-object/from16 v0, p4

    iget v3, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    const/4 v4, 0x3

    if-eq v3, v4, :cond_2f5

    move-object/from16 v0, p0

    iget-object v3, v0, mScaledPids:Ljava/util/HashMap;

    move-object/from16 v0, p1

    iget v4, v0, Lcom/android/server/wm/Session;->mPid:I

    invoke-static {v4}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v4

    invoke-virtual {v3, v4}, Ljava/util/HashMap;->containsKey(Ljava/lang/Object;)Z

    move-result v3

    if-eqz v3, :cond_2f5

    .line 4224
    const/16 v37, 0x1

    .line 4228
    :cond_2f5
    new-instance v2, Lcom/android/server/wm/WindowState;

    const/4 v3, 0x0

    aget v8, v20, v3

    move-object/from16 v3, p0

    move-object/from16 v4, p1

    move-object/from16 v5, p2

    move/from16 v9, p3

    move-object/from16 v10, p4

    move/from16 v11, p5

    invoke-direct/range {v2 .. v12}, Lcom/android/server/wm/WindowState;-><init>(Lcom/android/server/wm/WindowManagerService;Lcom/android/server/wm/Session;Landroid/view/IWindow;Lcom/android/server/wm/WindowToken;Lcom/android/server/wm/WindowState;IILandroid/view/WindowManager$LayoutParams;ILcom/android/server/wm/DisplayContent;)V

    .line 4231
    .local v2, "win":Lcom/android/server/wm/WindowState;
    sget-boolean v3, DEBUG_DUALSCREEN:Z

    if-eqz v3, :cond_30d

    .line 4236
    :cond_30d
    if-eqz v37, :cond_334

    .line 4237
    iget-object v3, v2, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v4, v3, Landroid/view/WindowManager$LayoutParams;->privateFlags:I

    const/high16 v5, 0x1000000

    or-int/2addr v4, v5

    iput v4, v3, Landroid/view/WindowManager$LayoutParams;->privateFlags:I

    .line 4238
    iget-object v3, v2, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget-object v3, v3, Landroid/view/WindowManager$LayoutParams;->packageName:Ljava/lang/String;

    if-nez v3, :cond_334

    .line 4239
    iget-object v4, v2, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    move-object/from16 v0, p0

    iget-object v3, v0, mScaledPids:Ljava/util/HashMap;

    move-object/from16 v0, p1

    iget v5, v0, Lcom/android/server/wm/Session;->mPid:I

    invoke-static {v5}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v5

    invoke-virtual {v3, v5}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Ljava/lang/String;

    iput-object v3, v4, Landroid/view/WindowManager$LayoutParams;->packageName:Ljava/lang/String;

    .line 4244
    :cond_334
    iget-object v3, v2, Lcom/android/server/wm/WindowState;->mDeathRecipient:Lcom/android/server/wm/WindowState$DeathRecipient;

    if-nez v3, :cond_4f3

    .line 4247
    const-string v3, "WindowManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Adding window client "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-interface/range {p2 .. p2}, Landroid/view/IWindow;->asBinder()Landroid/os/IBinder;

    move-result-object v5

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, " that is dead, aborting."

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 4249
    const/4 v3, -0x4

    monitor-exit v44

    goto/16 :goto_15

    .line 4161
    .end local v2    # "win":Lcom/android/server/wm/WindowState;
    .end local v37    # "scaledSurfaces":Z
    :cond_35e
    const/4 v3, 0x1

    move/from16 v0, v41

    if-lt v0, v3, :cond_3c8

    const/16 v3, 0x63

    move/from16 v0, v41

    if-gt v0, v3, :cond_3c8

    .line 4162
    iget-object v0, v6, Lcom/android/server/wm/WindowToken;->appWindowToken:Lcom/android/server/wm/AppWindowToken;

    move-object/from16 v23, v0

    .line 4163
    .local v23, "atoken":Lcom/android/server/wm/AppWindowToken;
    if-nez v23, :cond_391

    .line 4164
    const-string v3, "WindowManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Attempted to add window with non-application token "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, ".  Aborting."

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 4166
    const/4 v3, -0x3

    monitor-exit v44

    goto/16 :goto_15

    .line 4167
    :cond_391
    move-object/from16 v0, v23

    iget-boolean v3, v0, Lcom/android/server/wm/AppWindowToken;->removed:Z

    if-eqz v3, :cond_3b9

    .line 4168
    const-string v3, "WindowManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Attempted to add window with exiting application token "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, ".  Aborting."

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 4170
    const/4 v3, -0x4

    monitor-exit v44

    goto/16 :goto_15

    .line 4172
    :cond_3b9
    const/4 v3, 0x3

    move/from16 v0, v41

    if-ne v0, v3, :cond_2d8

    move-object/from16 v0, v23

    iget-boolean v3, v0, Lcom/android/server/wm/AppWindowToken;->firstWindowDrawn:Z

    if-eqz v3, :cond_2d8

    .line 4176
    const/4 v3, -0x6

    monitor-exit v44

    goto/16 :goto_15

    .line 4178
    .end local v23    # "atoken":Lcom/android/server/wm/AppWindowToken;
    :cond_3c8
    const/16 v3, 0x7db

    move/from16 v0, v41

    if-ne v0, v3, :cond_3fa

    .line 4179
    iget v3, v6, Lcom/android/server/wm/WindowToken;->windowType:I

    const/16 v4, 0x7db

    if-eq v3, v4, :cond_2d8

    .line 4180
    const-string v3, "WindowManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Attempted to add input method window with bad token "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p4

    iget-object v5, v0, Landroid/view/WindowManager$LayoutParams;->token:Landroid/os/IBinder;

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, ".  Aborting."

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 4182
    const/4 v3, -0x1

    monitor-exit v44

    goto/16 :goto_15

    .line 4184
    :cond_3fa
    const/16 v3, 0x7ef

    move/from16 v0, v41

    if-ne v0, v3, :cond_42c

    .line 4185
    iget v3, v6, Lcom/android/server/wm/WindowToken;->windowType:I

    const/16 v4, 0x7ef

    if-eq v3, v4, :cond_2d8

    .line 4186
    const-string v3, "WindowManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Attempted to add voice interaction window with bad token "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p4

    iget-object v5, v0, Landroid/view/WindowManager$LayoutParams;->token:Landroid/os/IBinder;

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, ".  Aborting."

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 4188
    const/4 v3, -0x1

    monitor-exit v44

    goto/16 :goto_15

    .line 4190
    :cond_42c
    const/16 v3, 0x7dd

    move/from16 v0, v41

    if-ne v0, v3, :cond_45e

    .line 4191
    iget v3, v6, Lcom/android/server/wm/WindowToken;->windowType:I

    const/16 v4, 0x7dd

    if-eq v3, v4, :cond_2d8

    .line 4192
    const-string v3, "WindowManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Attempted to add wallpaper window with bad token "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p4

    iget-object v5, v0, Landroid/view/WindowManager$LayoutParams;->token:Landroid/os/IBinder;

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, ".  Aborting."

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 4194
    const/4 v3, -0x1

    monitor-exit v44

    goto/16 :goto_15

    .line 4196
    :cond_45e
    const/16 v3, 0x7e7

    move/from16 v0, v41

    if-ne v0, v3, :cond_490

    .line 4197
    iget v3, v6, Lcom/android/server/wm/WindowToken;->windowType:I

    const/16 v4, 0x7e7

    if-eq v3, v4, :cond_2d8

    .line 4198
    const-string v3, "WindowManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Attempted to add Dream window with bad token "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p4

    iget-object v5, v0, Landroid/view/WindowManager$LayoutParams;->token:Landroid/os/IBinder;

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, ".  Aborting."

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 4200
    const/4 v3, -0x1

    monitor-exit v44

    goto/16 :goto_15

    .line 4202
    :cond_490
    const/16 v3, 0x7f0

    move/from16 v0, v41

    if-ne v0, v3, :cond_4c2

    .line 4203
    iget v3, v6, Lcom/android/server/wm/WindowToken;->windowType:I

    const/16 v4, 0x7f0

    if-eq v3, v4, :cond_2d8

    .line 4204
    const-string v3, "WindowManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Attempted to add Accessibility overlay window with bad token "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p4

    iget-object v5, v0, Landroid/view/WindowManager$LayoutParams;->token:Landroid/os/IBinder;

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, ".  Aborting."

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 4206
    const/4 v3, -0x1

    monitor-exit v44

    goto/16 :goto_15

    .line 4208
    :cond_4c2
    iget-object v3, v6, Lcom/android/server/wm/WindowToken;->appWindowToken:Lcom/android/server/wm/AppWindowToken;

    if-eqz v3, :cond_2d8

    .line 4209
    const-string v3, "WindowManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Non-null appWindowToken for system window of type="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move/from16 v0, v41

    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 4212
    const/4 v3, 0x0

    move-object/from16 v0, p4

    iput-object v3, v0, Landroid/view/WindowManager$LayoutParams;->token:Landroid/os/IBinder;

    .line 4213
    new-instance v6, Lcom/android/server/wm/WindowToken;

    .end local v6    # "token":Lcom/android/server/wm/WindowToken;
    const/4 v3, 0x0

    const/4 v4, -0x1

    const/4 v5, 0x0

    move-object/from16 v0, p0

    invoke-direct {v6, v0, v3, v4, v5}, Lcom/android/server/wm/WindowToken;-><init>(Lcom/android/server/wm/WindowManagerService;Landroid/os/IBinder;IZ)V

    .line 4214
    .restart local v6    # "token":Lcom/android/server/wm/WindowToken;
    const/16 v19, 0x1

    goto/16 :goto_2d8

    .line 4252
    .restart local v2    # "win":Lcom/android/server/wm/WindowState;
    .restart local v37    # "scaledSurfaces":Z
    :cond_4f3
    invoke-virtual {v2}, Lcom/android/server/wm/WindowState;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    move-result-object v3

    if-nez v3, :cond_505

    .line 4253
    const-string v3, "WindowManager"

    const-string v4, "Adding window to Display that has been removed."

    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 4254
    const/16 v3, -0x9

    monitor-exit v44

    goto/16 :goto_15

    .line 4257
    :cond_505
    move-object/from16 v0, p0

    iget-object v3, v0, mPolicy:Landroid/view/WindowManagerPolicy;

    iget-object v4, v2, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    invoke-interface {v3, v4}, Landroid/view/WindowManagerPolicy;->adjustWindowParamsLw(Landroid/view/WindowManager$LayoutParams;)V

    .line 4258
    move-object/from16 v0, p0

    iget-object v3, v0, mPolicy:Landroid/view/WindowManagerPolicy;

    move-object/from16 v0, p4

    invoke-interface {v3, v0}, Landroid/view/WindowManagerPolicy;->checkShowToOwnerOnly(Landroid/view/WindowManager$LayoutParams;)Z

    move-result v3

    invoke-virtual {v2, v3}, Lcom/android/server/wm/WindowState;->setShowToOwnerOnlyLocked(Z)V

    .line 4262
    invoke-virtual {v2}, Lcom/android/server/wm/WindowState;->getCoverMode()I

    move-result v3

    const/4 v4, 0x2

    if-ne v3, v4, :cond_541

    iget-object v3, v2, Lcom/android/server/wm/WindowState;->mToken:Lcom/android/server/wm/WindowToken;

    if-eqz v3, :cond_541

    iget-object v3, v2, Lcom/android/server/wm/WindowState;->mToken:Lcom/android/server/wm/WindowToken;

    iget-object v3, v3, Lcom/android/server/wm/WindowToken;->token:Landroid/os/IBinder;

    if-eqz v3, :cond_541

    .line 4264
    move-object/from16 v0, p0

    iget-object v3, v0, mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v3}, Landroid/view/WindowManagerPolicy;->isForceHideBySViewCover()Z

    move-result v3

    if-eqz v3, :cond_558

    .line 4265
    iget-object v3, v2, Lcom/android/server/wm/WindowState;->mToken:Lcom/android/server/wm/WindowToken;

    iget-boolean v3, v3, Lcom/android/server/wm/WindowToken;->disableHideSViewCoverOnce:Z

    if-nez v3, :cond_552

    .line 4266
    iget-object v3, v2, Lcom/android/server/wm/WindowState;->mToken:Lcom/android/server/wm/WindowToken;

    const/4 v4, 0x1

    iput-boolean v4, v3, Lcom/android/server/wm/WindowToken;->willBeHideSViewCoverOnce:Z

    .line 4278
    :cond_541
    :goto_541
    move-object/from16 v0, p0

    iget-object v3, v0, mPolicy:Landroid/view/WindowManagerPolicy;

    move-object/from16 v0, p4

    invoke-interface {v3, v2, v0}, Landroid/view/WindowManagerPolicy;->prepareAddWindowLw(Landroid/view/WindowManagerPolicy$WindowState;Landroid/view/WindowManager$LayoutParams;)I

    move-result v36

    .line 4279
    if-eqz v36, :cond_563

    .line 4280
    monitor-exit v44

    move/from16 v3, v36

    goto/16 :goto_15

    .line 4268
    :cond_552
    iget-object v3, v2, Lcom/android/server/wm/WindowState;->mToken:Lcom/android/server/wm/WindowToken;

    const/4 v4, 0x0

    iput-boolean v4, v3, Lcom/android/server/wm/WindowToken;->willBeHideSViewCoverOnce:Z

    goto :goto_541

    .line 4271
    :cond_558
    iget-object v3, v2, Lcom/android/server/wm/WindowState;->mToken:Lcom/android/server/wm/WindowToken;

    const/4 v4, 0x0

    iput-boolean v4, v3, Lcom/android/server/wm/WindowToken;->willBeHideSViewCoverOnce:Z

    .line 4272
    iget-object v3, v2, Lcom/android/server/wm/WindowState;->mToken:Lcom/android/server/wm/WindowToken;

    const/4 v4, 0x1

    iput-boolean v4, v3, Lcom/android/server/wm/WindowToken;->disableHideSViewCoverOnce:Z

    goto :goto_541

    .line 4300
    :cond_563
    if-eqz p10, :cond_5b4

    move-object/from16 v0, p4

    iget v3, v0, Landroid/view/WindowManager$LayoutParams;->inputFeatures:I

    and-int/lit8 v3, v3, 0x2

    if-nez v3, :cond_5b4

    .line 4302
    invoke-virtual {v2}, Lcom/android/server/wm/WindowState;->makeInputChannelName()Ljava/lang/String;

    move-result-object v31

    .line 4303
    .local v31, "name":Ljava/lang/String;
    const-string v3, "ISSUE_DEBUG"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "InputChannelName : "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, v31

    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v3, v4}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 4304
    invoke-static/range {v31 .. v31}, Landroid/view/InputChannel;->openInputChannelPair(Ljava/lang/String;)[Landroid/view/InputChannel;

    move-result-object v26

    .line 4305
    .local v26, "inputChannels":[Landroid/view/InputChannel;
    const/4 v3, 0x0

    aget-object v3, v26, v3

    if-nez v3, :cond_59b

    .line 4306
    const-string v3, "ISSUE_DEBUG"

    const-string v4, "InputChannel[0] is NULL"

    invoke-static {v3, v4}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 4307
    :cond_59b
    const/4 v3, 0x0

    aget-object v3, v26, v3

    invoke-virtual {v2, v3}, Lcom/android/server/wm/WindowState;->setInputChannel(Landroid/view/InputChannel;)V

    .line 4308
    const/4 v3, 0x1

    aget-object v3, v26, v3

    move-object/from16 v0, p10

    invoke-virtual {v3, v0}, Landroid/view/InputChannel;->transferTo(Landroid/view/InputChannel;)V

    .line 4310
    move-object/from16 v0, p0

    iget-object v3, v0, mInputManager:Lcom/android/server/input/InputManagerService;

    iget-object v4, v2, Lcom/android/server/wm/WindowState;->mInputChannel:Landroid/view/InputChannel;

    iget-object v5, v2, Lcom/android/server/wm/WindowState;->mInputWindowHandle:Lcom/android/server/input/InputWindowHandle;

    invoke-virtual {v3, v4, v5}, Lcom/android/server/input/InputManagerService;->registerInputChannel(Landroid/view/InputChannel;Lcom/android/server/input/InputWindowHandle;)V

    .line 4315
    .end local v26    # "inputChannels":[Landroid/view/InputChannel;
    .end local v31    # "name":Ljava/lang/String;
    :cond_5b4
    const/16 v36, 0x0

    .line 4317
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v34

    .line 4319
    .local v34, "origId":J
    if-eqz v19, :cond_5c7

    .line 4320
    move-object/from16 v0, p0

    iget-object v3, v0, mTokenMap:Ljava/util/HashMap;

    move-object/from16 v0, p4

    iget-object v4, v0, Landroid/view/WindowManager$LayoutParams;->token:Landroid/os/IBinder;

    invoke-virtual {v3, v4, v6}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 4322
    :cond_5c7
    invoke-virtual {v2}, Lcom/android/server/wm/WindowState;->attach()V

    .line 4323
    move-object/from16 v0, p0

    iget-object v3, v0, mWindowMap:Ljava/util/HashMap;

    invoke-interface/range {p2 .. p2}, Landroid/view/IWindow;->asBinder()Landroid/os/IBinder;

    move-result-object v4

    invoke-virtual {v3, v4, v2}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 4324
    iget v3, v2, Lcom/android/server/wm/WindowState;->mAppOp:I

    const/4 v4, -0x1

    if-eq v3, v4, :cond_5f7

    .line 4325
    move-object/from16 v0, p0

    iget-object v3, v0, mAppOps:Landroid/app/AppOpsManager;

    iget v4, v2, Lcom/android/server/wm/WindowState;->mAppOp:I

    invoke-virtual {v2}, Lcom/android/server/wm/WindowState;->getOwningUid()I

    move-result v5

    invoke-virtual {v2}, Lcom/android/server/wm/WindowState;->getOwningPackage()Ljava/lang/String;

    move-result-object v8

    invoke-virtual {v3, v4, v5, v8}, Landroid/app/AppOpsManager;->startOpNoThrow(IILjava/lang/String;)I

    move-result v39

    .line 4327
    .local v39, "startOpResult":I
    if-eqz v39, :cond_5f7

    const/4 v3, 0x3

    move/from16 v0, v39

    if-eq v0, v3, :cond_5f7

    .line 4329
    const/4 v3, 0x0

    invoke-virtual {v2, v3}, Lcom/android/server/wm/WindowState;->setAppOpVisibilityLw(Z)V

    .line 4333
    .end local v39    # "startOpResult":I
    :cond_5f7
    const/4 v3, 0x3

    move/from16 v0, v41

    if-ne v0, v3, :cond_62c

    iget-object v3, v6, Lcom/android/server/wm/WindowToken;->appWindowToken:Lcom/android/server/wm/AppWindowToken;

    if-eqz v3, :cond_62c

    .line 4334
    iget-object v3, v6, Lcom/android/server/wm/WindowToken;->appWindowToken:Lcom/android/server/wm/AppWindowToken;

    iput-object v2, v3, Lcom/android/server/wm/AppWindowToken;->startingWindow:Lcom/android/server/wm/WindowState;

    .line 4335
    sget-boolean v3, DEBUG_STARTING_WINDOW:Z

    if-eqz v3, :cond_62c

    const-string v3, "WindowManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "addWindow: "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    iget-object v5, v6, Lcom/android/server/wm/WindowToken;->appWindowToken:Lcom/android/server/wm/AppWindowToken;

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, " startingWindow="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v3, v4}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 4339
    :cond_62c
    const/16 v3, 0x834

    move/from16 v0, v41

    if-eq v0, v3, :cond_638

    const/16 v3, 0x836

    move/from16 v0, v41

    if-ne v0, v3, :cond_642

    .line 4341
    :cond_638
    move-object/from16 v0, p0

    iget v3, v0, mWidgetWindowCount:I

    add-int/lit8 v3, v3, 0x1

    move-object/from16 v0, p0

    iput v3, v0, mWidgetWindowCount:I

    .line 4346
    :cond_642
    const/4 v3, 0x3

    move/from16 v0, v41

    if-eq v0, v3, :cond_64c

    const/4 v3, 0x1

    move/from16 v0, v41

    if-ne v0, v3, :cond_673

    :cond_64c
    iget-object v3, v6, Lcom/android/server/wm/WindowToken;->appWindowToken:Lcom/android/server/wm/AppWindowToken;

    if-eqz v3, :cond_673

    .line 4348
    sget-boolean v3, DEBUG_APP_TRANSITIONS:Z

    if-eqz v3, :cond_66e

    const-string v3, "WindowManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "addWindow: add an app window for "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    iget-object v5, v6, Lcom/android/server/wm/WindowToken;->appWindowToken:Lcom/android/server/wm/AppWindowToken;

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v3, v4}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 4350
    :cond_66e
    iget-object v3, v6, Lcom/android/server/wm/WindowToken;->appWindowToken:Lcom/android/server/wm/AppWindowToken;

    const/4 v4, 0x0

    iput-boolean v4, v3, Lcom/android/server/wm/AppWindowToken;->noWindowWhenHiddenRequested:Z

    .line 4354
    :cond_673
    const/16 v25, 0x1

    .line 4356
    .local v25, "imMayMove":Z
    const/16 v3, 0x7db

    move/from16 v0, v41

    if-ne v0, v3, :cond_7d4

    .line 4357
    const/4 v3, 0x1

    iput-boolean v3, v2, Lcom/android/server/wm/WindowState;->mGivenInsetsPending:Z

    .line 4358
    move-object/from16 v0, p0

    iput-object v2, v0, mInputMethodWindow:Lcom/android/server/wm/WindowState;

    .line 4360
    sget-boolean v3, DUALSCREEN_DEBUG_INPUT_METHOD:Z

    if-eqz v3, :cond_68f

    .line 4361
    move-object/from16 v0, p0

    iget-object v3, v0, mDualScreenInputMethodManager:Lcom/android/server/wm/DualScreenInputMethodManager;

    const-string v4, "add SIP"

    invoke-virtual {v3, v4}, Lcom/android/server/wm/DualScreenInputMethodManager;->printDebugInfo(Ljava/lang/String;)V

    .line 4364
    :cond_68f
    move-object/from16 v0, p0

    invoke-virtual {v0, v2}, addInputMethodWindowToListLocked(Lcom/android/server/wm/WindowState;)V

    .line 4365
    const/16 v25, 0x0

    .line 4449
    :cond_696
    :goto_696
    iget-object v0, v2, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    move-object/from16 v43, v0

    .line 4450
    .local v43, "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    const/4 v3, 0x1

    move-object/from16 v0, v43

    iput-boolean v3, v0, Lcom/android/server/wm/WindowStateAnimator;->mEnterAnimationPending:Z

    .line 4451
    const/4 v3, 0x1

    move-object/from16 v0, v43

    iput-boolean v3, v0, Lcom/android/server/wm/WindowStateAnimator;->mEnteringAnimation:Z

    .line 4453
    iget-boolean v3, v12, Lcom/android/server/wm/DisplayContent;->isDefaultDisplay:Z

    if-eqz v3, :cond_8a6

    .line 4454
    move-object/from16 v0, p0

    iget-object v13, v0, mPolicy:Landroid/view/WindowManagerPolicy;

    iget-object v14, v2, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    move-object/from16 v0, p0

    iget v15, v0, mRotation:I

    move-object/from16 v16, p7

    move-object/from16 v17, p8

    move-object/from16 v18, p9

    invoke-interface/range {v13 .. v18}, Landroid/view/WindowManagerPolicy;->getInsetHintLw(Landroid/view/WindowManager$LayoutParams;ILandroid/graphics/Rect;Landroid/graphics/Rect;Landroid/graphics/Rect;)V

    .line 4461
    :goto_6bb
    move-object/from16 v0, p0

    iget-boolean v3, v0, mInTouchMode:Z

    if-eqz v3, :cond_6c3

    .line 4462
    or-int/lit8 v36, v36, 0x1

    .line 4464
    :cond_6c3
    iget-object v3, v2, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    if-eqz v3, :cond_6cd

    iget-object v3, v2, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    iget-boolean v3, v3, Lcom/android/server/wm/AppWindowToken;->clientHidden:Z

    if-nez v3, :cond_6cf

    .line 4465
    :cond_6cd
    or-int/lit8 v36, v36, 0x2

    .line 4468
    :cond_6cf
    move-object/from16 v0, p0

    iget-object v3, v0, mInputMonitor:Lcom/android/server/wm/InputMonitor;

    invoke-virtual {v3}, Lcom/android/server/wm/InputMonitor;->setUpdateInputWindowsNeededLw()V

    .line 4470
    const/16 v24, 0x0

    .line 4471
    .local v24, "focusChanged":Z
    invoke-virtual {v2}, Lcom/android/server/wm/WindowState;->canReceiveKeys()Z

    move-result v3

    if-eqz v3, :cond_6ea

    .line 4472
    const/4 v3, 0x1

    const/4 v4, 0x0

    move-object/from16 v0, p0

    invoke-direct {v0, v3, v4}, updateFocusedWindowLocked(IZ)Z

    move-result v24

    .line 4474
    if-eqz v24, :cond_6ea

    .line 4475
    const/16 v25, 0x0

    .line 4481
    :cond_6ea
    const/4 v3, 0x1

    move-object/from16 v0, p0

    invoke-virtual {v0, v3}, moveMultiWindowCenterBarLocked(Z)Z

    .line 4482
    invoke-virtual {v2}, Lcom/android/server/wm/WindowState;->getMultiWindowStyleLw()Lcom/samsung/android/multiwindow/MultiWindowStyle;

    move-result-object v3

    invoke-virtual {v3}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->isSplit()Z

    move-result v3

    if-eqz v3, :cond_716

    invoke-virtual {v2}, Lcom/android/server/wm/WindowState;->getMultiWindowStyleLw()Lcom/samsung/android/multiwindow/MultiWindowStyle;

    move-result-object v3

    const/16 v4, 0x1000

    invoke-virtual {v3, v4}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->isEnabled(I)Z

    move-result v3

    if-nez v3, :cond_716

    .line 4484
    invoke-virtual {v2}, Lcom/android/server/wm/WindowState;->getStack()Lcom/android/server/wm/TaskStack;

    move-result-object v38

    .line 4485
    .local v38, "stack":Lcom/android/server/wm/TaskStack;
    if-eqz v38, :cond_716

    move-object/from16 v0, v38

    iget-boolean v3, v0, Lcom/android/server/wm/TaskStack;->mFixedBound:Z

    if-eqz v3, :cond_716

    .line 4486
    const/4 v3, 0x1

    invoke-virtual {v2, v3}, Lcom/android/server/wm/WindowState;->setWindowFlagFixedBound(Z)V

    .line 4490
    .end local v38    # "stack":Lcom/android/server/wm/TaskStack;
    :cond_716
    iget-object v3, v2, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    if-eqz v3, :cond_738

    iget-object v3, v2, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v3, v3, Landroid/view/WindowManager$LayoutParams;->multiWindowFlags:I

    and-int/lit16 v3, v3, 0x80

    if-eqz v3, :cond_738

    .line 4493
    invoke-virtual {v2}, Lcom/android/server/wm/WindowState;->getMultiWindowStyleLw()Lcom/samsung/android/multiwindow/MultiWindowStyle;

    move-result-object v40

    .line 4494
    .local v40, "style":Lcom/samsung/android/multiwindow/MultiWindowStyle;
    const/high16 v3, 0x8000000

    const/4 v4, 0x1

    move-object/from16 v0, v40

    invoke-virtual {v0, v3, v4}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->setOption(IZ)V

    .line 4495
    iget-object v3, v2, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    const/4 v4, 0x1

    move-object/from16 v0, p0

    move-object/from16 v1, v40

    invoke-virtual {v0, v3, v1, v4}, changeMultiWindowStyle(Lcom/android/server/wm/AppWindowToken;Lcom/samsung/android/multiwindow/MultiWindowStyle;Z)Z

    .line 4500
    .end local v40    # "style":Lcom/samsung/android/multiwindow/MultiWindowStyle;
    :cond_738
    if-eqz v25, :cond_740

    .line 4501
    const/4 v3, 0x0

    move-object/from16 v0, p0

    invoke-virtual {v0, v3}, moveInputMethodWindowsIfNeededLocked(Z)Z

    .line 4508
    :cond_740
    const/16 v32, 0x1

    .line 4509
    .local v32, "needAssignLayer":Z
    iget-object v3, v2, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    if-nez v3, :cond_75a

    .line 4516
    move-object/from16 v0, p0

    iget-object v0, v0, mAppTransition:Lcom/android/server/wm/AppTransition;

    move-object/from16 v22, v0

    .line 4519
    .local v22, "appTransition":Lcom/android/server/wm/AppTransition;
    invoke-virtual/range {v22 .. v22}, Lcom/android/server/wm/AppTransition;->isTransitionSet()Z

    move-result v3

    if-eqz v3, :cond_75a

    invoke-virtual/range {v22 .. v22}, Lcom/android/server/wm/AppTransition;->isIdle()Z

    move-result v3

    if-eqz v3, :cond_75a

    .line 4520
    const/16 v32, 0x0

    .line 4523
    .end local v22    # "appTransition":Lcom/android/server/wm/AppTransition;
    :cond_75a
    if-eqz v32, :cond_765

    .line 4524
    invoke-virtual {v12}, Lcom/android/server/wm/DisplayContent;->getWindowList()Lcom/android/server/wm/WindowList;

    move-result-object v3

    move-object/from16 v0, p0

    invoke-direct {v0, v3}, assignLayersLocked(Lcom/android/server/wm/WindowList;)V

    .line 4531
    :cond_765
    if-eqz v24, :cond_773

    .line 4532
    move-object/from16 v0, p0

    iget-object v3, v0, mInputMonitor:Lcom/android/server/wm/InputMonitor;

    move-object/from16 v0, p0

    iget-object v4, v0, mCurrentFocus:Lcom/android/server/wm/WindowState;

    const/4 v5, 0x0

    invoke-virtual {v3, v4, v5}, Lcom/android/server/wm/InputMonitor;->setInputFocusLw(Lcom/android/server/wm/WindowState;Z)V

    .line 4534
    :cond_773
    move-object/from16 v0, p0

    iget-object v3, v0, mInputMonitor:Lcom/android/server/wm/InputMonitor;

    const/4 v4, 0x0

    invoke-virtual {v3, v4}, Lcom/android/server/wm/InputMonitor;->updateInputWindowsLw(Z)V

    .line 4536
    sget-boolean v3, DEBUG_ADD_REMOVE:Z

    if-eqz v3, :cond_7b4

    const-string v3, "WindowManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "addWindow: New client "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-interface/range {p2 .. p2}, Landroid/view/IWindow;->asBinder()Landroid/os/IBinder;

    move-result-object v5

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, ": window="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, " Callers="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    const/4 v5, 0x5

    invoke-static {v5}, Landroid/os/Debug;->getCallers(I)Ljava/lang/String;

    move-result-object v5

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v3, v4}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 4539
    :cond_7b4
    invoke-virtual {v2}, Lcom/android/server/wm/WindowState;->isVisibleOrAdding()Z

    move-result v3

    if-eqz v3, :cond_7c7

    const/4 v3, 0x0

    move-object/from16 v0, p0

    move/from16 v1, p6

    invoke-virtual {v0, v3, v1}, updateOrientationFromAppTokensLocked(ZI)Z

    move-result v3

    if-eqz v3, :cond_7c7

    .line 4540
    const/16 v33, 0x1

    .line 4542
    :cond_7c7
    monitor-exit v44
    :try_end_7c8
    .catchall {:try_start_37 .. :try_end_7c8} :catchall_34

    .line 4544
    if-eqz v33, :cond_7cd

    .line 4545
    invoke-virtual/range {p0 .. p0}, sendNewConfiguration()V

    .line 4561
    :cond_7cd
    invoke-static/range {v34 .. v35}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    move/from16 v3, v36

    .line 4563
    goto/16 :goto_15

    .line 4366
    .end local v24    # "focusChanged":Z
    .end local v32    # "needAssignLayer":Z
    .end local v43    # "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    :cond_7d4
    const/16 v3, 0x7dc

    move/from16 v0, v41

    if-eq v0, v3, :cond_7e0

    const/16 v3, 0x8e8

    move/from16 v0, v41

    if-ne v0, v3, :cond_7fd

    .line 4367
    :cond_7e0
    :try_start_7e0
    move-object/from16 v0, p0

    iget-object v3, v0, mInputMethodDialogs:Ljava/util/ArrayList;

    invoke-virtual {v3, v2}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 4368
    const/4 v3, 0x1

    move-object/from16 v0, p0

    invoke-direct {v0, v2, v3}, addWindowToListInOrderLocked(Lcom/android/server/wm/WindowState;Z)V

    .line 4369
    const/4 v3, 0x1

    move-object/from16 v0, p0

    invoke-virtual {v0, v3}, findDesiredInputMethodWindowIndexLocked(Z)I

    move-result v3

    move-object/from16 v0, p0

    invoke-virtual {v0, v3}, moveInputMethodDialogsLocked(I)V

    .line 4370
    const/16 v25, 0x0

    goto/16 :goto_696

    .line 4372
    :cond_7fd
    const/4 v3, 0x1

    move-object/from16 v0, p0

    invoke-direct {v0, v2, v3}, addWindowToListInOrderLocked(Lcom/android/server/wm/WindowState;Z)V

    .line 4375
    move-object/from16 v0, p4

    iget v3, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    const/16 v4, 0x898

    if-ne v3, v4, :cond_851

    .line 4376
    move-object/from16 v0, p0

    iput-object v2, v0, mMultiWindowCenterBar:Lcom/android/server/wm/WindowState;

    .line 4406
    :cond_80f
    :goto_80f
    move-object/from16 v0, p0

    iget-object v0, v0, mWallpaperTarget:Lcom/android/server/wm/WindowState;

    move-object/from16 v30, v0

    .line 4407
    .local v30, "mWallpaperTarget":Lcom/android/server/wm/WindowState;
    move-object/from16 v0, p0

    iget-object v0, v0, mLowerWallpaperTarget:Lcom/android/server/wm/WindowState;

    move-object/from16 v27, v0

    .line 4408
    .local v27, "mLowerWallpaperTarget":Lcom/android/server/wm/WindowState;
    move-object/from16 v0, p0

    iget-object v0, v0, mUpperWallpaperTarget:Lcom/android/server/wm/WindowState;

    move-object/from16 v28, v0

    .line 4409
    .local v28, "mUpperWallpaperTarget":Lcom/android/server/wm/WindowState;
    move-object/from16 v0, p0

    iget-object v0, v0, mWaitingOnWallpaper:Lcom/android/server/wm/WindowState;

    move-object/from16 v29, v0

    .line 4412
    .local v29, "mWaitingOnWallpaper":Lcom/android/server/wm/WindowState;
    const/16 v3, 0x7dd

    move/from16 v0, v41

    if-ne v0, v3, :cond_86b

    .line 4418
    const-wide/16 v4, 0x0

    move-object/from16 v0, p0

    iput-wide v4, v0, mLastWallpaperTimeoutTime:J

    .line 4420
    iget v3, v12, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    or-int/lit8 v3, v3, 0x4

    iput v3, v12, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    .line 4443
    :cond_839
    :goto_839
    move-object/from16 v0, p0

    iget-object v3, v0, mInputMethodDialogs:Ljava/util/ArrayList;

    invoke-virtual {v3}, Ljava/util/ArrayList;->size()I

    move-result v3

    if-lez v3, :cond_696

    .line 4444
    const/4 v3, 0x1

    move-object/from16 v0, p0

    invoke-virtual {v0, v3}, findDesiredInputMethodWindowIndexLocked(Z)I

    move-result v3

    move-object/from16 v0, p0

    invoke-virtual {v0, v3}, moveInputMethodDialogsLocked(I)V

    goto/16 :goto_696

    .line 4377
    .end local v27    # "mLowerWallpaperTarget":Lcom/android/server/wm/WindowState;
    .end local v28    # "mUpperWallpaperTarget":Lcom/android/server/wm/WindowState;
    .end local v29    # "mWaitingOnWallpaper":Lcom/android/server/wm/WindowState;
    .end local v30    # "mWallpaperTarget":Lcom/android/server/wm/WindowState;
    :cond_851
    move-object/from16 v0, p4

    iget v3, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    const/16 v4, 0x899

    if-ne v3, v4, :cond_85e

    .line 4378
    move-object/from16 v0, p0

    iput-object v2, v0, mMultiWindowTraybarTarget:Lcom/android/server/wm/WindowState;

    goto :goto_80f

    .line 4379
    :cond_85e
    move-object/from16 v0, p4

    iget v3, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    const/16 v4, 0x8a4

    if-ne v3, v4, :cond_80f

    .line 4380
    move-object/from16 v0, p0

    iput-object v2, v0, mMultiWindowSwitchWindowTarget:Lcom/android/server/wm/WindowState;

    goto :goto_80f

    .line 4421
    .restart local v27    # "mLowerWallpaperTarget":Lcom/android/server/wm/WindowState;
    .restart local v28    # "mUpperWallpaperTarget":Lcom/android/server/wm/WindowState;
    .restart local v29    # "mWaitingOnWallpaper":Lcom/android/server/wm/WindowState;
    .restart local v30    # "mWallpaperTarget":Lcom/android/server/wm/WindowState;
    :cond_86b
    move-object/from16 v0, p4

    iget v3, v0, Landroid/view/WindowManager$LayoutParams;->flags:I

    const/high16 v4, 0x100000

    and-int/2addr v3, v4

    if-eqz v3, :cond_87b

    .line 4422
    iget v3, v12, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    or-int/lit8 v3, v3, 0x4

    iput v3, v12, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    goto :goto_839

    .line 4423
    :cond_87b
    if-eqz v30, :cond_88c

    move-object/from16 v0, v30

    iget v3, v0, Lcom/android/server/wm/WindowState;->mLayer:I

    iget v4, v2, Lcom/android/server/wm/WindowState;->mBaseLayer:I

    if-lt v3, v4, :cond_88c

    .line 4430
    iget v3, v12, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    or-int/lit8 v3, v3, 0x4

    iput v3, v12, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    goto :goto_839

    .line 4433
    :cond_88c
    move-object/from16 v0, p4

    iget v3, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    const/16 v4, 0x8ca

    if-ne v3, v4, :cond_899

    .line 4434
    move-object/from16 v0, p0

    iput-object v2, v0, mEasyOneHandWindow:Lcom/android/server/wm/WindowState;

    goto :goto_839

    .line 4438
    :cond_899
    move-object/from16 v0, p4

    iget v3, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    const/16 v4, 0x8ac

    if-ne v3, v4, :cond_839

    .line 4439
    move-object/from16 v0, p0

    iput-object v2, v0, mCocktailBar:Lcom/android/server/wm/WindowState;

    goto :goto_839

    .line 4457
    .end local v27    # "mLowerWallpaperTarget":Lcom/android/server/wm/WindowState;
    .end local v28    # "mUpperWallpaperTarget":Lcom/android/server/wm/WindowState;
    .end local v29    # "mWaitingOnWallpaper":Lcom/android/server/wm/WindowState;
    .end local v30    # "mWallpaperTarget":Lcom/android/server/wm/WindowState;
    .restart local v43    # "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    :cond_8a6
    invoke-virtual/range {p7 .. p7}, Landroid/graphics/Rect;->setEmpty()V

    .line 4458
    invoke-virtual/range {p8 .. p8}, Landroid/graphics/Rect;->setEmpty()V
    :try_end_8ac
    .catchall {:try_start_7e0 .. :try_end_8ac} :catchall_34

    goto/16 :goto_6bb
.end method

.method public addWindowChangeListener(Lcom/android/server/wm/WindowManagerService$WindowChangeListener;)V
    .registers 4
    .param p1, "listener"    # Lcom/android/server/wm/WindowManagerService$WindowChangeListener;

    .prologue
    .line 12357
    iget-object v1, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v1

    .line 12358
    :try_start_3
    iget-object v0, p0, mWindowChangeListeners:Ljava/util/ArrayList;

    invoke-virtual {v0, p1}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 12359
    monitor-exit v1

    .line 12360
    return-void

    .line 12359
    :catchall_a
    move-exception v0

    monitor-exit v1
    :try_end_c
    .catchall {:try_start_3 .. :try_end_c} :catchall_a

    throw v0
.end method

.method public addWindowToken(Landroid/os/IBinder;I)V
    .registers 4
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "type"    # I

    .prologue
    .line 6251
    const/4 v0, 0x0

    invoke-virtual {p0, p1, p2, v0}, addWindowTokenWithDisplayId(Landroid/os/IBinder;II)V

    .line 6252
    return-void
.end method

.method public addWindowTokenWithDisplayId(Landroid/os/IBinder;II)V
    .registers 10
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "type"    # I
    .param p3, "displayId"    # I

    .prologue
    .line 6257
    const-string v2, "android.permission.MANAGE_APP_TOKENS"

    const-string v3, "addWindowToken()"

    invoke-virtual {p0, v2, v3}, checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v2

    if-nez v2, :cond_12

    .line 6259
    new-instance v2, Ljava/lang/SecurityException;

    const-string v3, "Requires MANAGE_APP_TOKENS permission"

    invoke-direct {v2, v3}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v2

    .line 6262
    :cond_12
    iget-object v3, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v3

    .line 6263
    :try_start_15
    iget-object v2, p0, mTokenMap:Ljava/util/HashMap;

    invoke-virtual {v2, p1}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/wm/WindowToken;

    .line 6264
    .local v1, "wtoken":Lcom/android/server/wm/WindowToken;
    if-eqz v1, :cond_39

    .line 6265
    const-string v2, "WindowManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Attempted to add existing input method token: "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v2, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 6266
    monitor-exit v3

    .line 6286
    :goto_38
    return-void

    .line 6268
    :cond_39
    new-instance v1, Lcom/android/server/wm/WindowToken;

    .end local v1    # "wtoken":Lcom/android/server/wm/WindowToken;
    const/4 v2, 0x1

    invoke-direct {v1, p0, p1, p2, v2}, Lcom/android/server/wm/WindowToken;-><init>(Lcom/android/server/wm/WindowManagerService;Landroid/os/IBinder;IZ)V

    .line 6269
    .restart local v1    # "wtoken":Lcom/android/server/wm/WindowToken;
    iget-object v2, p0, mTokenMap:Ljava/util/HashMap;

    invoke-virtual {v2, p1, v1}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 6270
    const/16 v2, 0x7dd

    if-ne p2, v2, :cond_4d

    .line 6279
    iget-object v0, p0, mWallpaperTokens:Ljava/util/ArrayList;

    .line 6283
    .local v0, "mWallpaperTokens":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/WindowToken;>;"
    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 6285
    .end local v0    # "mWallpaperTokens":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/WindowToken;>;"
    :cond_4d
    monitor-exit v3

    goto :goto_38

    .end local v1    # "wtoken":Lcom/android/server/wm/WindowToken;
    :catchall_4f
    move-exception v2

    monitor-exit v3
    :try_end_51
    .catchall {:try_start_15 .. :try_end_51} :catchall_4f

    throw v2
.end method

.method adjustAnimationBackground(Lcom/android/server/wm/WindowStateAnimator;)I
    .registers 9
    .param p1, "winAnimator"    # Lcom/android/server/wm/WindowStateAnimator;

    .prologue
    .line 18109
    iget v2, p1, Lcom/android/server/wm/WindowStateAnimator;->mAnimLayer:I

    .line 18110
    .local v2, "layer":I
    iget-object v5, p1, Lcom/android/server/wm/WindowStateAnimator;->mWin:Lcom/android/server/wm/WindowState;

    invoke-virtual {v5}, Lcom/android/server/wm/WindowState;->getWindowList()Lcom/android/server/wm/WindowList;

    move-result-object v4

    .line 18112
    .local v4, "windows":Lcom/android/server/wm/WindowList;
    const/4 v1, 0x0

    .line 18113
    .local v1, "isSplit":Z
    iget-object v5, p1, Lcom/android/server/wm/WindowStateAnimator;->mWin:Lcom/android/server/wm/WindowState;

    invoke-virtual {v5}, Lcom/android/server/wm/WindowState;->getMultiWindowStyleLw()Lcom/samsung/android/multiwindow/MultiWindowStyle;

    move-result-object v5

    invoke-virtual {v5}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->isSplit()Z

    move-result v5

    if-eqz v5, :cond_16

    .line 18114
    const/4 v1, 0x1

    .line 18117
    :cond_16
    invoke-virtual {v4}, Lcom/android/server/wm/WindowList;->size()I

    move-result v5

    add-int/lit8 v0, v5, -0x1

    .local v0, "i":I
    :goto_1c
    if-ltz v0, :cond_3c

    .line 18118
    invoke-virtual {v4, v0}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/wm/WindowState;

    .line 18119
    .local v3, "testWin":Lcom/android/server/wm/WindowState;
    iget-boolean v5, v3, Lcom/android/server/wm/WindowState;->mIsWallpaper:Z

    if-eqz v5, :cond_3d

    invoke-virtual {v3}, Lcom/android/server/wm/WindowState;->isVisibleNow()Z

    move-result v5

    if-eqz v5, :cond_3d

    if-eqz v1, :cond_38

    if-eqz v1, :cond_3d

    iget-object v5, v3, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    iget v5, v5, Lcom/android/server/wm/WindowStateAnimator;->mAnimLayer:I

    if-ge v5, v2, :cond_3d

    .line 18123
    :cond_38
    iget-object v5, v3, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    iget v2, v5, Lcom/android/server/wm/WindowStateAnimator;->mAnimLayer:I

    .line 18134
    .end local v2    # "layer":I
    .end local v3    # "testWin":Lcom/android/server/wm/WindowState;
    :cond_3c
    return v2

    .line 18128
    .restart local v2    # "layer":I
    .restart local v3    # "testWin":Lcom/android/server/wm/WindowState;
    :cond_3d
    iget-object v5, v3, Lcom/android/server/wm/WindowState;->mAttachedWindow:Lcom/android/server/wm/WindowState;

    iget-object v6, p1, Lcom/android/server/wm/WindowStateAnimator;->mWin:Lcom/android/server/wm/WindowState;

    if-ne v5, v6, :cond_4f

    iget-object v5, v3, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    iget v5, v5, Lcom/android/server/wm/WindowStateAnimator;->mAnimLayer:I

    iget v6, p1, Lcom/android/server/wm/WindowStateAnimator;->mAnimLayer:I

    if-ge v5, v6, :cond_4f

    .line 18130
    iget-object v5, v3, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    iget v2, v5, Lcom/android/server/wm/WindowStateAnimator;->mAnimLayer:I

    .line 18117
    :cond_4f
    add-int/lit8 v0, v0, -0x1

    goto :goto_1c
.end method

.method adjustWallpaperWindowsLocked(Lcom/android/server/wm/DisplayContent;)Z
    .registers 46
    .param p1, "displayContent"    # Lcom/android/server/wm/DisplayContent;

    .prologue
    .line 3184
    invoke-virtual/range {p1 .. p1}, Lcom/android/server/wm/DisplayContent;->getDisplayId()I

    move-result v41

    if-eqz v41, :cond_8

    .line 3185
    const/4 v4, 0x0

    .line 3607
    :goto_7
    return v4

    .line 3196
    :cond_8
    invoke-virtual/range {p1 .. p1}, Lcom/android/server/wm/DisplayContent;->getDisplayId()I

    move-result v7

    .line 3208
    .local v7, "displayId":I
    move-object/from16 v0, p0

    iget-object v0, v0, mAppTransition:Lcom/android/server/wm/AppTransition;

    move-object/from16 v16, v0

    .line 3209
    .local v16, "mAppTransition":Lcom/android/server/wm/AppTransition;
    move-object/from16 v0, p0

    iget-object v0, v0, mOpeningApps:Landroid/util/ArraySet;

    move-object/from16 v18, v0

    .line 3211
    .local v18, "mOpeningApps":Landroid/util/ArraySet;, "Landroid/util/ArraySet<Lcom/android/server/wm/AppWindowToken;>;"
    move-object/from16 v0, p0

    iget-object v0, v0, mWallpaperTokens:Ljava/util/ArrayList;

    move-object/from16 v21, v0

    .line 3212
    .local v21, "mWallpaperTokens":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/WindowToken;>;"
    move-object/from16 v0, p0

    iget-object v0, v0, mWallpaperTarget:Lcom/android/server/wm/WindowState;

    move-object/from16 v20, v0

    .line 3213
    .local v20, "mWallpaperTarget":Lcom/android/server/wm/WindowState;
    move-object/from16 v0, p0

    iget-object v0, v0, mLowerWallpaperTarget:Lcom/android/server/wm/WindowState;

    move-object/from16 v17, v0

    .line 3214
    .local v17, "mLowerWallpaperTarget":Lcom/android/server/wm/WindowState;
    move-object/from16 v0, p0

    iget-object v0, v0, mUpperWallpaperTarget:Lcom/android/server/wm/WindowState;

    move-object/from16 v19, v0

    .line 3218
    .local v19, "mUpperWallpaperTarget":Lcom/android/server/wm/WindowState;
    move-object/from16 v0, p0

    iget-object v0, v0, mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    move-object/from16 v41, v0

    const/16 v42, 0x0

    move/from16 v0, v42

    move-object/from16 v1, v41

    iput-boolean v0, v1, Lcom/android/server/wm/WindowManagerService$LayoutFields;->mWallpaperMayChange:Z

    .line 3219
    const/16 v28, 0x0

    .line 3222
    .local v28, "targetChanged":Z
    invoke-virtual/range {p0 .. p0}, getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v41

    invoke-virtual/range {v41 .. v41}, Lcom/android/server/wm/DisplayContent;->getDisplayInfo()Landroid/view/DisplayInfo;

    move-result-object v8

    .line 3223
    .local v8, "displayInfo":Landroid/view/DisplayInfo;
    iget v9, v8, Landroid/view/DisplayInfo;->logicalWidth:I

    .line 3224
    .local v9, "dw":I
    iget v6, v8, Landroid/view/DisplayInfo;->logicalHeight:I

    .line 3228
    .local v6, "dh":I
    invoke-virtual/range {p0 .. p0}, getDefaultWindowListLocked()Lcom/android/server/wm/WindowList;

    move-result-object v40

    .line 3229
    .local v40, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual/range {v40 .. v40}, Lcom/android/server/wm/WindowList;->size()I

    move-result v3

    .line 3230
    .local v3, "N":I
    const/16 v35, 0x0

    .line 3231
    .local v35, "w":Lcom/android/server/wm/WindowState;
    const/4 v12, 0x0

    .line 3232
    .local v12, "foundW":Lcom/android/server/wm/WindowState;
    const/4 v11, 0x0

    .line 3233
    .local v11, "foundI":I
    const/16 v32, 0x0

    .line 3234
    .local v32, "topCurW":Lcom/android/server/wm/WindowState;
    const/16 v31, 0x0

    .line 3235
    .local v31, "topCurI":I
    const/16 v39, -0x1

    .line 3236
    .local v39, "windowDetachedI":I
    move v14, v3

    .line 3237
    .local v14, "i":I
    :cond_5f
    :goto_5f
    if-lez v14, :cond_21a

    .line 3238
    add-int/lit8 v14, v14, -0x1

    .line 3239
    move-object/from16 v0, v40

    invoke-virtual {v0, v14}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v35

    .end local v35    # "w":Lcom/android/server/wm/WindowState;
    check-cast v35, Lcom/android/server/wm/WindowState;

    .line 3240
    .restart local v35    # "w":Lcom/android/server/wm/WindowState;
    move-object/from16 v0, v35

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    move-object/from16 v41, v0

    move-object/from16 v0, v41

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    move/from16 v41, v0

    const/16 v42, 0x7dd

    move/from16 v0, v41

    move/from16 v1, v42

    if-ne v0, v1, :cond_86

    .line 3241
    if-nez v32, :cond_5f

    .line 3242
    move-object/from16 v32, v35

    .line 3243
    move/from16 v31, v14

    goto :goto_5f

    .line 3247
    :cond_86
    const/16 v32, 0x0

    .line 3248
    move-object/from16 v0, p0

    iget-object v0, v0, mAnimator:Lcom/android/server/wm/WindowAnimator;

    move-object/from16 v41, v0

    move-object/from16 v0, v41

    iget-object v0, v0, Lcom/android/server/wm/WindowAnimator;->mWindowDetachedWallpaper:Lcom/android/server/wm/WindowState;

    move-object/from16 v41, v0

    move-object/from16 v0, v35

    move-object/from16 v1, v41

    if-eq v0, v1, :cond_e6

    move-object/from16 v0, v35

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    move-object/from16 v41, v0

    if-eqz v41, :cond_e6

    .line 3251
    move-object/from16 v0, v35

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    move-object/from16 v41, v0

    move-object/from16 v0, v41

    iget-boolean v0, v0, Lcom/android/server/wm/AppWindowToken;->hidden:Z

    move/from16 v41, v0

    if-eqz v41, :cond_e6

    move-object/from16 v0, v35

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    move-object/from16 v41, v0

    move-object/from16 v0, v41

    iget-object v0, v0, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    move-object/from16 v41, v0

    move-object/from16 v0, v41

    iget-object v0, v0, Lcom/android/server/wm/AppWindowAnimator;->animation:Landroid/view/animation/Animation;

    move-object/from16 v41, v0

    if-nez v41, :cond_e6

    .line 3252
    sget-boolean v41, DEBUG_WALLPAPER:Z

    if-eqz v41, :cond_5f

    const-string v41, "WindowManager"

    new-instance v42, Ljava/lang/StringBuilder;

    invoke-direct/range {v42 .. v42}, Ljava/lang/StringBuilder;-><init>()V

    const-string v43, "Skipping hidden and not animating token: "

    invoke-virtual/range {v42 .. v43}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v42

    move-object/from16 v0, v42

    move-object/from16 v1, v35

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v42

    invoke-virtual/range {v42 .. v42}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v42

    invoke-static/range {v41 .. v42}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    goto/16 :goto_5f

    .line 3257
    :cond_e6
    sget-boolean v41, DEBUG_WALLPAPER:Z

    if-eqz v41, :cond_136

    const-string v41, "WindowManager"

    new-instance v42, Ljava/lang/StringBuilder;

    invoke-direct/range {v42 .. v42}, Ljava/lang/StringBuilder;-><init>()V

    const-string v43, "Win #"

    invoke-virtual/range {v42 .. v43}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v42

    move-object/from16 v0, v42

    invoke-virtual {v0, v14}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v42

    const-string v43, " "

    invoke-virtual/range {v42 .. v43}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v42

    move-object/from16 v0, v42

    move-object/from16 v1, v35

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v42

    const-string v43, ": isOnScreen="

    invoke-virtual/range {v42 .. v43}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v42

    invoke-virtual/range {v35 .. v35}, Lcom/android/server/wm/WindowState;->isOnScreen()Z

    move-result v43

    invoke-virtual/range {v42 .. v43}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v42

    const-string v43, " mDrawState="

    invoke-virtual/range {v42 .. v43}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v42

    move-object/from16 v0, v35

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    move-object/from16 v43, v0

    move-object/from16 v0, v43

    iget v0, v0, Lcom/android/server/wm/WindowStateAnimator;->mDrawState:I

    move/from16 v43, v0

    invoke-virtual/range {v42 .. v43}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v42

    invoke-virtual/range {v42 .. v42}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v42

    invoke-static/range {v41 .. v42}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 3262
    :cond_136
    move-object/from16 v0, v35

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    move-object/from16 v41, v0

    move-object/from16 v0, v41

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->flags:I

    move/from16 v41, v0

    const/high16 v42, 0x100000

    and-int v41, v41, v42

    if-eqz v41, :cond_1c6

    const/4 v13, 0x1

    .line 3271
    .local v13, "hasWallpaper":Z
    :goto_149
    if-eqz v13, :cond_204

    invoke-virtual/range {v35 .. v35}, Lcom/android/server/wm/WindowState;->isOnScreen()Z

    move-result v41

    if-eqz v41, :cond_204

    move-object/from16 v0, v20

    move-object/from16 v1, v35

    if-eq v0, v1, :cond_15d

    invoke-virtual/range {v35 .. v35}, Lcom/android/server/wm/WindowState;->isDrawFinishedLw()Z

    move-result v41

    if-eqz v41, :cond_204

    .line 3273
    :cond_15d
    sget-boolean v41, DEBUG_WALLPAPER:Z

    if-eqz v41, :cond_189

    const-string v41, "WindowManager"

    new-instance v42, Ljava/lang/StringBuilder;

    invoke-direct/range {v42 .. v42}, Ljava/lang/StringBuilder;-><init>()V

    const-string v43, "Found wallpaper target: #"

    invoke-virtual/range {v42 .. v43}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v42

    move-object/from16 v0, v42

    invoke-virtual {v0, v14}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v42

    const-string v43, "="

    invoke-virtual/range {v42 .. v43}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v42

    move-object/from16 v0, v42

    move-object/from16 v1, v35

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v42

    invoke-virtual/range {v42 .. v42}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v42

    invoke-static/range {v41 .. v42}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 3275
    :cond_189
    move-object/from16 v12, v35

    .line 3276
    move v11, v14

    .line 3277
    move-object/from16 v0, v35

    move-object/from16 v1, v20

    if-ne v0, v1, :cond_1c8

    move-object/from16 v0, v35

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    move-object/from16 v41, v0

    invoke-virtual/range {v41 .. v41}, Lcom/android/server/wm/WindowStateAnimator;->isAnimating()Z

    move-result v41

    if-eqz v41, :cond_1c8

    .line 3281
    sget-boolean v41, DEBUG_WALLPAPER:Z

    if-eqz v41, :cond_5f

    const-string v41, "WindowManager"

    new-instance v42, Ljava/lang/StringBuilder;

    invoke-direct/range {v42 .. v42}, Ljava/lang/StringBuilder;-><init>()V

    const-string v43, "Win "

    invoke-virtual/range {v42 .. v43}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v42

    move-object/from16 v0, v42

    move-object/from16 v1, v35

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v42

    const-string v43, ": token animating, looking behind."

    invoke-virtual/range {v42 .. v43}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v42

    invoke-virtual/range {v42 .. v42}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v42

    invoke-static/range {v41 .. v42}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    goto/16 :goto_5f

    .line 3262
    .end local v13    # "hasWallpaper":Z
    :cond_1c6
    const/4 v13, 0x0

    goto :goto_149

    .line 3287
    .restart local v13    # "hasWallpaper":Z
    :cond_1c8
    move-object/from16 v0, v35

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    move-object/from16 v41, v0

    move-object/from16 v0, v41

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    move/from16 v41, v0

    const/16 v42, 0x62

    move/from16 v0, v41

    move/from16 v1, v42

    if-ne v0, v1, :cond_21a

    .line 3288
    sget-boolean v41, DEBUG_WALLPAPER:Z

    if-eqz v41, :cond_5f

    const-string v41, "WindowManager"

    new-instance v42, Ljava/lang/StringBuilder;

    invoke-direct/range {v42 .. v42}, Ljava/lang/StringBuilder;-><init>()V

    const-string v43, "Win "

    invoke-virtual/range {v42 .. v43}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v42

    move-object/from16 v0, v42

    move-object/from16 v1, v35

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v42

    const-string v43, ": token cocktail SubWindow, looking behind."

    invoke-virtual/range {v42 .. v43}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v42

    invoke-virtual/range {v42 .. v42}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v42

    invoke-static/range {v41 .. v42}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    goto/16 :goto_5f

    .line 3295
    :cond_204
    move-object/from16 v0, p0

    iget-object v0, v0, mAnimator:Lcom/android/server/wm/WindowAnimator;

    move-object/from16 v41, v0

    move-object/from16 v0, v41

    iget-object v0, v0, Lcom/android/server/wm/WindowAnimator;->mWindowDetachedWallpaper:Lcom/android/server/wm/WindowState;

    move-object/from16 v41, v0

    move-object/from16 v0, v35

    move-object/from16 v1, v41

    if-ne v0, v1, :cond_5f

    .line 3296
    move/from16 v39, v14

    goto/16 :goto_5f

    .line 3300
    .end local v13    # "hasWallpaper":Z
    :cond_21a
    if-nez v12, :cond_24e

    if-ltz v39, :cond_24e

    .line 3301
    sget-boolean v41, DEBUG_WALLPAPER_LIGHT:Z

    if-eqz v41, :cond_24a

    const-string v41, "WindowManager"

    new-instance v42, Ljava/lang/StringBuilder;

    invoke-direct/range {v42 .. v42}, Ljava/lang/StringBuilder;-><init>()V

    const-string v43, "Found animating detached wallpaper activity: #"

    invoke-virtual/range {v42 .. v43}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v42

    move-object/from16 v0, v42

    invoke-virtual {v0, v14}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v42

    const-string v43, "="

    invoke-virtual/range {v42 .. v43}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v42

    move-object/from16 v0, v42

    move-object/from16 v1, v35

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v42

    invoke-virtual/range {v42 .. v42}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v42

    invoke-static/range {v41 .. v42}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 3303
    :cond_24a
    move-object/from16 v12, v35

    .line 3304
    move/from16 v11, v39

    .line 3307
    :cond_24e
    move-object/from16 v0, v20

    if-eq v0, v12, :cond_602

    if-eqz v17, :cond_258

    move-object/from16 v0, v17

    if-eq v0, v12, :cond_602

    .line 3309
    :cond_258
    sget-boolean v41, DEBUG_WALLPAPER_LIGHT:Z

    if-eqz v41, :cond_284

    .line 3310
    const-string v41, "WindowManager"

    new-instance v42, Ljava/lang/StringBuilder;

    invoke-direct/range {v42 .. v42}, Ljava/lang/StringBuilder;-><init>()V

    const-string v43, "New wallpaper target: "

    invoke-virtual/range {v42 .. v43}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v42

    move-object/from16 v0, v42

    invoke-virtual {v0, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v42

    const-string v43, " oldTarget: "

    invoke-virtual/range {v42 .. v43}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v42

    move-object/from16 v0, v42

    move-object/from16 v1, v20

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v42

    invoke-virtual/range {v42 .. v42}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v42

    invoke-static/range {v41 .. v42}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 3314
    :cond_284
    const/16 v17, 0x0

    .line 3315
    const/16 v19, 0x0

    .line 3317
    move-object/from16 v26, v20

    .line 3318
    .local v26, "oldW":Lcom/android/server/wm/WindowState;
    move-object/from16 v20, v12

    .line 3319
    const/16 v28, 0x1

    .line 3323
    if-eqz v12, :cond_383

    if-eqz v26, :cond_383

    .line 3324
    invoke-virtual/range {v26 .. v26}, Lcom/android/server/wm/WindowState;->isAnimatingLw()Z

    move-result v23

    .line 3325
    .local v23, "oldAnim":Z
    invoke-virtual {v12}, Lcom/android/server/wm/WindowState;->isAnimatingLw()Z

    move-result v10

    .line 3326
    .local v10, "foundAnim":Z
    sget-boolean v41, DEBUG_WALLPAPER_LIGHT:Z

    if-eqz v41, :cond_2c6

    .line 3327
    const-string v41, "WindowManager"

    new-instance v42, Ljava/lang/StringBuilder;

    invoke-direct/range {v42 .. v42}, Ljava/lang/StringBuilder;-><init>()V

    const-string v43, "New animation: "

    invoke-virtual/range {v42 .. v43}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v42

    move-object/from16 v0, v42

    invoke-virtual {v0, v10}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v42

    const-string v43, " old animation: "

    invoke-virtual/range {v42 .. v43}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v42

    move-object/from16 v0, v42

    move/from16 v1, v23

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v42

    invoke-virtual/range {v42 .. v42}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v42

    invoke-static/range {v41 .. v42}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 3330
    :cond_2c6
    if-eqz v10, :cond_383

    if-eqz v23, :cond_383

    .line 3331
    move-object/from16 v0, v40

    move-object/from16 v1, v26

    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowList;->indexOf(Ljava/lang/Object;)I

    move-result v24

    .line 3332
    .local v24, "oldI":I
    sget-boolean v41, DEBUG_WALLPAPER_LIGHT:Z

    if-eqz v41, :cond_2fe

    .line 3333
    const-string v41, "WindowManager"

    new-instance v42, Ljava/lang/StringBuilder;

    invoke-direct/range {v42 .. v42}, Ljava/lang/StringBuilder;-><init>()V

    const-string v43, "New i: "

    invoke-virtual/range {v42 .. v43}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v42

    move-object/from16 v0, v42

    invoke-virtual {v0, v11}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v42

    const-string v43, " old i: "

    invoke-virtual/range {v42 .. v43}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v42

    move-object/from16 v0, v42

    move/from16 v1, v24

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v42

    invoke-virtual/range {v42 .. v42}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v42

    invoke-static/range {v41 .. v42}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 3335
    :cond_2fe
    if-ltz v24, :cond_383

    .line 3336
    sget-boolean v41, DEBUG_WALLPAPER_LIGHT:Z

    if-eqz v41, :cond_346

    .line 3337
    const-string v41, "WindowManager"

    new-instance v42, Ljava/lang/StringBuilder;

    invoke-direct/range {v42 .. v42}, Ljava/lang/StringBuilder;-><init>()V

    const-string v43, "Animating wallpapers: old#"

    invoke-virtual/range {v42 .. v43}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v42

    move-object/from16 v0, v42

    move/from16 v1, v24

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v42

    const-string v43, "="

    invoke-virtual/range {v42 .. v43}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v42

    move-object/from16 v0, v42

    move-object/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v42

    const-string v43, "; new#"

    invoke-virtual/range {v42 .. v43}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v42

    move-object/from16 v0, v42

    invoke-virtual {v0, v11}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v42

    const-string v43, "="

    invoke-virtual/range {v42 .. v43}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v42

    move-object/from16 v0, v42

    invoke-virtual {v0, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v42

    invoke-virtual/range {v42 .. v42}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v42

    invoke-static/range {v41 .. v42}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 3343
    :cond_346
    iget-object v0, v12, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    move-object/from16 v41, v0

    if-eqz v41, :cond_5d8

    iget-object v0, v12, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    move-object/from16 v41, v0

    move-object/from16 v0, v41

    iget-boolean v0, v0, Lcom/android/server/wm/AppWindowToken;->hiddenRequested:Z

    move/from16 v41, v0

    if-eqz v41, :cond_5d8

    .line 3344
    sget-boolean v41, DEBUG_WALLPAPER_LIGHT:Z

    if-eqz v41, :cond_363

    .line 3345
    const-string v41, "WindowManager"

    const-string v42, "Old wallpaper still the target."

    invoke-static/range {v41 .. v42}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 3347
    :cond_363
    move-object/from16 v20, v26

    .line 3357
    invoke-virtual/range {v16 .. v16}, Lcom/android/server/wm/AppTransition;->isReady()Z

    move-result v41

    if-eqz v41, :cond_37f

    invoke-virtual/range {v18 .. v18}, Landroid/util/ArraySet;->size()I

    move-result v41

    const/16 v42, 0x1

    move/from16 v0, v41

    move/from16 v1, v42

    if-le v0, v1, :cond_37f

    .line 3358
    move/from16 v0, v24

    if-le v11, v0, :cond_5d2

    .line 3359
    move-object/from16 v19, v12

    .line 3360
    move-object/from16 v17, v26

    .line 3368
    :cond_37f
    :goto_37f
    move-object/from16 v12, v26

    .line 3369
    move/from16 v11, v24

    .line 3408
    .end local v10    # "foundAnim":Z
    .end local v23    # "oldAnim":Z
    .end local v24    # "oldI":I
    .end local v26    # "oldW":Lcom/android/server/wm/WindowState;
    :cond_383
    :goto_383
    if-eqz v12, :cond_625

    const/16 v34, 0x1

    .line 3409
    .local v34, "visible":Z
    :goto_387
    if-eqz v34, :cond_633

    .line 3412
    move-object/from16 v0, p0

    invoke-direct {v0, v12}, isWallpaperVisible(Lcom/android/server/wm/WindowState;)Z

    move-result v34

    .line 3413
    sget-boolean v41, DEBUG_WALLPAPER:Z

    if-eqz v41, :cond_3af

    const-string v41, "WindowManager"

    new-instance v42, Ljava/lang/StringBuilder;

    invoke-direct/range {v42 .. v42}, Ljava/lang/StringBuilder;-><init>()V

    const-string v43, "Wallpaper visibility: "

    invoke-virtual/range {v42 .. v43}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v42

    move-object/from16 v0, v42

    move/from16 v1, v34

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v42

    invoke-virtual/range {v42 .. v42}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v42

    invoke-static/range {v41 .. v42}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 3425
    :cond_3af
    if-nez v17, :cond_629

    iget-object v0, v12, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    move-object/from16 v41, v0

    if-eqz v41, :cond_629

    iget-object v0, v12, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    move-object/from16 v41, v0

    move-object/from16 v0, v41

    iget-object v0, v0, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    move-object/from16 v41, v0

    move-object/from16 v0, v41

    iget v0, v0, Lcom/android/server/wm/AppWindowAnimator;->animLayerAdjustment:I

    move/from16 v41, v0

    :goto_3c7
    move/from16 v0, v41

    move-object/from16 v1, p0

    iput v0, v1, mWallpaperAnimLayerAdjustment:I

    .line 3430
    move-object/from16 v0, p0

    iget-object v0, v0, mPolicy:Landroid/view/WindowManagerPolicy;

    move-object/from16 v41, v0

    invoke-interface/range {v41 .. v41}, Landroid/view/WindowManagerPolicy;->getMaxWallpaperLayer()I

    move-result v41

    move/from16 v0, v41

    mul-int/lit16 v0, v0, 0x2710

    move/from16 v41, v0

    move/from16 v0, v41

    add-int/lit16 v0, v0, 0x3e8

    move/from16 v22, v0

    .line 3438
    .local v22, "maxLayer":I
    :goto_3e3
    if-lez v11, :cond_443

    .line 3439
    add-int/lit8 v41, v11, -0x1

    invoke-virtual/range {v40 .. v41}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v38

    check-cast v38, Lcom/android/server/wm/WindowState;

    .line 3440
    .local v38, "wb":Lcom/android/server/wm/WindowState;
    move-object/from16 v0, v38

    iget v0, v0, Lcom/android/server/wm/WindowState;->mBaseLayer:I

    move/from16 v41, v0

    move/from16 v0, v41

    move/from16 v1, v22

    if-ge v0, v1, :cond_62d

    move-object/from16 v0, v38

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttachedWindow:Lcom/android/server/wm/WindowState;

    move-object/from16 v41, v0

    move-object/from16 v0, v41

    if-eq v0, v12, :cond_62d

    iget-object v0, v12, Lcom/android/server/wm/WindowState;->mAttachedWindow:Lcom/android/server/wm/WindowState;

    move-object/from16 v41, v0

    if-eqz v41, :cond_419

    move-object/from16 v0, v38

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttachedWindow:Lcom/android/server/wm/WindowState;

    move-object/from16 v41, v0

    iget-object v0, v12, Lcom/android/server/wm/WindowState;->mAttachedWindow:Lcom/android/server/wm/WindowState;

    move-object/from16 v42, v0

    move-object/from16 v0, v41

    move-object/from16 v1, v42

    if-eq v0, v1, :cond_62d

    :cond_419
    move-object/from16 v0, v38

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    move-object/from16 v41, v0

    move-object/from16 v0, v41

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    move/from16 v41, v0

    const/16 v42, 0x3

    move/from16 v0, v41

    move/from16 v1, v42

    if-ne v0, v1, :cond_443

    iget-object v0, v12, Lcom/android/server/wm/WindowState;->mToken:Lcom/android/server/wm/WindowToken;

    move-object/from16 v41, v0

    if-eqz v41, :cond_443

    move-object/from16 v0, v38

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mToken:Lcom/android/server/wm/WindowToken;

    move-object/from16 v41, v0

    iget-object v0, v12, Lcom/android/server/wm/WindowState;->mToken:Lcom/android/server/wm/WindowToken;

    move-object/from16 v42, v0

    move-object/from16 v0, v41

    move-object/from16 v1, v42

    if-eq v0, v1, :cond_62d

    .line 3457
    .end local v22    # "maxLayer":I
    .end local v38    # "wb":Lcom/android/server/wm/WindowState;
    :cond_443
    :goto_443
    if-nez v12, :cond_640

    if-eqz v32, :cond_640

    .line 3460
    move-object/from16 v12, v32

    .line 3461
    add-int/lit8 v11, v31, 0x1

    .line 3468
    :goto_44b
    if-eqz v34, :cond_4c9

    .line 3489
    move-object/from16 v0, v20

    iget v0, v0, Lcom/android/server/wm/WindowState;->mWallpaperX:F

    move/from16 v41, v0

    const/16 v42, 0x0

    cmpl-float v41, v41, v42

    if-ltz v41, :cond_471

    .line 3490
    move-object/from16 v0, v20

    iget v0, v0, Lcom/android/server/wm/WindowState;->mWallpaperX:F

    move/from16 v41, v0

    move/from16 v0, v41

    move-object/from16 v1, p0

    iput v0, v1, mLastWallpaperX:F

    .line 3491
    move-object/from16 v0, v20

    iget v0, v0, Lcom/android/server/wm/WindowState;->mWallpaperXStep:F

    move/from16 v41, v0

    move/from16 v0, v41

    move-object/from16 v1, p0

    iput v0, v1, mLastWallpaperXStep:F

    .line 3493
    :cond_471
    move-object/from16 v0, v20

    iget v0, v0, Lcom/android/server/wm/WindowState;->mWallpaperY:F

    move/from16 v41, v0

    const/16 v42, 0x0

    cmpl-float v41, v41, v42

    if-ltz v41, :cond_495

    .line 3494
    move-object/from16 v0, v20

    iget v0, v0, Lcom/android/server/wm/WindowState;->mWallpaperY:F

    move/from16 v41, v0

    move/from16 v0, v41

    move-object/from16 v1, p0

    iput v0, v1, mLastWallpaperY:F

    .line 3495
    move-object/from16 v0, v20

    iget v0, v0, Lcom/android/server/wm/WindowState;->mWallpaperYStep:F

    move/from16 v41, v0

    move/from16 v0, v41

    move-object/from16 v1, p0

    iput v0, v1, mLastWallpaperYStep:F

    .line 3497
    :cond_495
    move-object/from16 v0, v20

    iget v0, v0, Lcom/android/server/wm/WindowState;->mWallpaperDisplayOffsetX:I

    move/from16 v41, v0

    const/high16 v42, -0x80000000

    move/from16 v0, v41

    move/from16 v1, v42

    if-eq v0, v1, :cond_4af

    .line 3498
    move-object/from16 v0, v20

    iget v0, v0, Lcom/android/server/wm/WindowState;->mWallpaperDisplayOffsetX:I

    move/from16 v41, v0

    move/from16 v0, v41

    move-object/from16 v1, p0

    iput v0, v1, mLastWallpaperDisplayOffsetX:I

    .line 3500
    :cond_4af
    move-object/from16 v0, v20

    iget v0, v0, Lcom/android/server/wm/WindowState;->mWallpaperDisplayOffsetY:I

    move/from16 v41, v0

    const/high16 v42, -0x80000000

    move/from16 v0, v41

    move/from16 v1, v42

    if-eq v0, v1, :cond_4c9

    .line 3501
    move-object/from16 v0, v20

    iget v0, v0, Lcom/android/server/wm/WindowState;->mWallpaperDisplayOffsetY:I

    move/from16 v41, v0

    move/from16 v0, v41

    move-object/from16 v1, p0

    iput v0, v1, mLastWallpaperDisplayOffsetY:I

    .line 3508
    :cond_4c9
    const/4 v4, 0x0

    .line 3509
    .local v4, "changed":Z
    invoke-virtual/range {v21 .. v21}, Ljava/util/ArrayList;->size()I

    move-result v41

    add-int/lit8 v5, v41, -0x1

    .local v5, "curTokenNdx":I
    :goto_4d0
    if-ltz v5, :cond_72f

    .line 3510
    move-object/from16 v0, v21

    invoke-virtual {v0, v5}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v29

    check-cast v29, Lcom/android/server/wm/WindowToken;

    .line 3511
    .local v29, "token":Lcom/android/server/wm/WindowToken;
    move-object/from16 v0, v29

    iget-boolean v0, v0, Lcom/android/server/wm/WindowToken;->hidden:Z

    move/from16 v41, v0

    move/from16 v0, v41

    move/from16 v1, v34

    if-ne v0, v1, :cond_53a

    .line 3512
    sget-boolean v41, DEBUG_WALLPAPER_LIGHT:Z

    if-eqz v41, :cond_524

    const-string v42, "WindowManager"

    new-instance v41, Ljava/lang/StringBuilder;

    invoke-direct/range {v41 .. v41}, Ljava/lang/StringBuilder;-><init>()V

    const-string v43, "Wallpaper token "

    move-object/from16 v0, v41

    move-object/from16 v1, v43

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v41

    move-object/from16 v0, v41

    move-object/from16 v1, v29

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v41

    const-string v43, " hidden="

    move-object/from16 v0, v41

    move-object/from16 v1, v43

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v43

    if-nez v34, :cond_650

    const/16 v41, 0x1

    :goto_511
    move-object/from16 v0, v43

    move/from16 v1, v41

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v41

    invoke-virtual/range {v41 .. v41}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v41

    move-object/from16 v0, v42

    move-object/from16 v1, v41

    invoke-static {v0, v1}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 3514
    :cond_524
    if-nez v34, :cond_654

    const/16 v41, 0x1

    :goto_528
    move/from16 v0, v41

    move-object/from16 v1, v29

    iput-boolean v0, v1, Lcom/android/server/wm/WindowToken;->hidden:Z

    .line 3520
    invoke-virtual/range {p0 .. p0}, getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v41

    const/16 v42, 0x1

    move/from16 v0, v42

    move-object/from16 v1, v41

    iput-boolean v0, v1, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    .line 3525
    :cond_53a
    move-object/from16 v0, v29

    iget-object v0, v0, Lcom/android/server/wm/WindowToken;->windows:Lcom/android/server/wm/WindowList;

    move-object/from16 v30, v0

    .line 3526
    .local v30, "tokenWindows":Lcom/android/server/wm/WindowList;
    invoke-virtual/range {v30 .. v30}, Lcom/android/server/wm/WindowList;->size()I

    move-result v41

    add-int/lit8 v37, v41, -0x1

    .local v37, "wallpaperNdx":I
    :goto_546
    if-ltz v37, :cond_72b

    .line 3527
    move-object/from16 v0, v30

    move/from16 v1, v37

    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v36

    check-cast v36, Lcom/android/server/wm/WindowState;

    .line 3529
    .local v36, "wallpaper":Lcom/android/server/wm/WindowState;
    if-eqz v34, :cond_55f

    .line 3530
    const/16 v41, 0x0

    move-object/from16 v0, p0

    move-object/from16 v1, v36

    move/from16 v2, v41

    invoke-virtual {v0, v1, v9, v6, v2}, updateWallpaperOffsetLocked(Lcom/android/server/wm/WindowState;IIZ)Z

    .line 3534
    :cond_55f
    move-object/from16 v0, p0

    move-object/from16 v1, v36

    move/from16 v2, v34

    invoke-virtual {v0, v1, v2}, dispatchWallpaperVisibility(Lcom/android/server/wm/WindowState;Z)V

    .line 3536
    move-object/from16 v0, v36

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    move-object/from16 v41, v0

    move-object/from16 v0, v36

    iget v0, v0, Lcom/android/server/wm/WindowState;->mLayer:I

    move/from16 v42, v0

    move-object/from16 v0, p0

    iget v0, v0, mWallpaperAnimLayerAdjustment:I

    move/from16 v43, v0

    add-int v42, v42, v43

    move/from16 v0, v42

    move-object/from16 v1, v41

    iput v0, v1, Lcom/android/server/wm/WindowStateAnimator;->mAnimLayer:I

    .line 3537
    sget-boolean v41, DEBUG_LAYERS:Z

    if-nez v41, :cond_58a

    sget-boolean v41, DEBUG_WALLPAPER_LIGHT:Z

    if-eqz v41, :cond_5bc

    :cond_58a
    const-string v41, "WindowManager"

    new-instance v42, Ljava/lang/StringBuilder;

    invoke-direct/range {v42 .. v42}, Ljava/lang/StringBuilder;-><init>()V

    const-string v43, "adjustWallpaper win "

    invoke-virtual/range {v42 .. v43}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v42

    move-object/from16 v0, v42

    move-object/from16 v1, v36

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v42

    const-string v43, " anim layer: "

    invoke-virtual/range {v42 .. v43}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v42

    move-object/from16 v0, v36

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    move-object/from16 v43, v0

    move-object/from16 v0, v43

    iget v0, v0, Lcom/android/server/wm/WindowStateAnimator;->mAnimLayer:I

    move/from16 v43, v0

    invoke-virtual/range {v42 .. v43}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v42

    invoke-virtual/range {v42 .. v42}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v42

    invoke-static/range {v41 .. v42}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 3541
    :cond_5bc
    move-object/from16 v0, v36

    if-ne v0, v12, :cond_65b

    .line 3542
    add-int/lit8 v11, v11, -0x1

    .line 3543
    if-lez v11, :cond_658

    add-int/lit8 v41, v11, -0x1

    invoke-virtual/range {v40 .. v41}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v41

    check-cast v41, Lcom/android/server/wm/WindowState;

    move-object/from16 v12, v41

    .line 3526
    :goto_5ce
    add-int/lit8 v37, v37, -0x1

    goto/16 :goto_546

    .line 3362
    .end local v4    # "changed":Z
    .end local v5    # "curTokenNdx":I
    .end local v29    # "token":Lcom/android/server/wm/WindowToken;
    .end local v30    # "tokenWindows":Lcom/android/server/wm/WindowList;
    .end local v34    # "visible":Z
    .end local v36    # "wallpaper":Lcom/android/server/wm/WindowState;
    .end local v37    # "wallpaperNdx":I
    .restart local v10    # "foundAnim":Z
    .restart local v23    # "oldAnim":Z
    .restart local v24    # "oldI":I
    .restart local v26    # "oldW":Lcom/android/server/wm/WindowState;
    :cond_5d2
    move-object/from16 v19, v26

    .line 3363
    move-object/from16 v17, v12

    goto/16 :goto_37f

    .line 3374
    :cond_5d8
    move/from16 v0, v24

    if-le v11, v0, :cond_5f1

    .line 3376
    sget-boolean v41, DEBUG_WALLPAPER_LIGHT:Z

    if-eqz v41, :cond_5e7

    .line 3377
    const-string v41, "WindowManager"

    const-string v42, "Found target above old target."

    invoke-static/range {v41 .. v42}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 3379
    :cond_5e7
    move-object/from16 v19, v12

    .line 3380
    move-object/from16 v17, v26

    .line 3381
    move-object/from16 v12, v26

    .line 3382
    move/from16 v11, v24

    goto/16 :goto_383

    .line 3385
    :cond_5f1
    sget-boolean v41, DEBUG_WALLPAPER_LIGHT:Z

    if-eqz v41, :cond_5fc

    .line 3386
    const-string v41, "WindowManager"

    const-string v42, "Found target below old target."

    invoke-static/range {v41 .. v42}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 3388
    :cond_5fc
    move-object/from16 v19, v26

    .line 3389
    move-object/from16 v17, v12

    goto/16 :goto_383

    .line 3395
    .end local v10    # "foundAnim":Z
    .end local v23    # "oldAnim":Z
    .end local v24    # "oldI":I
    .end local v26    # "oldW":Lcom/android/server/wm/WindowState;
    :cond_602
    if-eqz v17, :cond_383

    .line 3397
    invoke-virtual/range {v17 .. v17}, Lcom/android/server/wm/WindowState;->isAnimatingLw()Z

    move-result v41

    if-eqz v41, :cond_610

    invoke-virtual/range {v19 .. v19}, Lcom/android/server/wm/WindowState;->isAnimatingLw()Z

    move-result v41

    if-nez v41, :cond_383

    .line 3398
    :cond_610
    sget-boolean v41, DEBUG_WALLPAPER_LIGHT:Z

    if-eqz v41, :cond_61b

    .line 3399
    const-string v41, "WindowManager"

    const-string v42, "No longer animating wallpaper targets!"

    invoke-static/range {v41 .. v42}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 3401
    :cond_61b
    const/16 v17, 0x0

    .line 3402
    const/16 v19, 0x0

    .line 3403
    move-object/from16 v20, v12

    .line 3404
    const/16 v28, 0x1

    goto/16 :goto_383

    .line 3408
    :cond_625
    const/16 v34, 0x0

    goto/16 :goto_387

    .line 3425
    .restart local v34    # "visible":Z
    :cond_629
    const/16 v41, 0x0

    goto/16 :goto_3c7

    .line 3450
    .restart local v22    # "maxLayer":I
    .restart local v38    # "wb":Lcom/android/server/wm/WindowState;
    :cond_62d
    move-object/from16 v12, v38

    .line 3451
    add-int/lit8 v11, v11, -0x1

    .line 3452
    goto/16 :goto_3e3

    .line 3454
    .end local v22    # "maxLayer":I
    .end local v38    # "wb":Lcom/android/server/wm/WindowState;
    :cond_633
    sget-boolean v41, DEBUG_WALLPAPER:Z

    if-eqz v41, :cond_443

    const-string v41, "WindowManager"

    const-string v42, "No wallpaper target"

    invoke-static/range {v41 .. v42}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    goto/16 :goto_443

    .line 3465
    :cond_640
    if-lez v11, :cond_64e

    add-int/lit8 v41, v11, -0x1

    invoke-virtual/range {v40 .. v41}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v41

    check-cast v41, Lcom/android/server/wm/WindowState;

    move-object/from16 v12, v41

    :goto_64c
    goto/16 :goto_44b

    :cond_64e
    const/4 v12, 0x0

    goto :goto_64c

    .line 3512
    .restart local v4    # "changed":Z
    .restart local v5    # "curTokenNdx":I
    .restart local v29    # "token":Lcom/android/server/wm/WindowToken;
    :cond_650
    const/16 v41, 0x0

    goto/16 :goto_511

    .line 3514
    :cond_654
    const/16 v41, 0x0

    goto/16 :goto_528

    .line 3543
    .restart local v30    # "tokenWindows":Lcom/android/server/wm/WindowList;
    .restart local v36    # "wallpaper":Lcom/android/server/wm/WindowState;
    .restart local v37    # "wallpaperNdx":I
    :cond_658
    const/4 v12, 0x0

    goto/16 :goto_5ce

    .line 3550
    :cond_65b
    move-object/from16 v0, v40

    move-object/from16 v1, v36

    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowList;->indexOf(Ljava/lang/Object;)I

    move-result v25

    .line 3551
    .local v25, "oldIndex":I
    if-ltz v25, :cond_6a8

    .line 3552
    sget-boolean v41, DEBUG_WINDOW_MOVEMENT:Z

    if-eqz v41, :cond_693

    const-string v41, "WindowManager"

    new-instance v42, Ljava/lang/StringBuilder;

    invoke-direct/range {v42 .. v42}, Ljava/lang/StringBuilder;-><init>()V

    const-string v43, "Wallpaper removing at "

    invoke-virtual/range {v42 .. v43}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v42

    move-object/from16 v0, v42

    move/from16 v1, v25

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v42

    const-string v43, ": "

    invoke-virtual/range {v42 .. v43}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v42

    move-object/from16 v0, v42

    move-object/from16 v1, v36

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v42

    invoke-virtual/range {v42 .. v42}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v42

    invoke-static/range {v41 .. v42}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 3554
    :cond_693
    move-object/from16 v0, v40

    move/from16 v1, v25

    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowList;->remove(I)Ljava/lang/Object;

    .line 3555
    const/16 v41, 0x1

    move/from16 v0, v41

    move-object/from16 v1, p0

    iput-boolean v0, v1, mWindowsChanged:Z

    .line 3556
    move/from16 v0, v25

    if-ge v0, v11, :cond_6a8

    .line 3557
    add-int/lit8 v11, v11, -0x1

    .line 3563
    :cond_6a8
    const/4 v15, 0x0

    .line 3564
    .local v15, "insertionIndex":I
    if-eqz v34, :cond_6d7

    if-eqz v12, :cond_6d7

    .line 3565
    iget-object v0, v12, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    move-object/from16 v41, v0

    move-object/from16 v0, v41

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    move/from16 v33, v0

    .line 3566
    .local v33, "type":I
    iget-object v0, v12, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    move-object/from16 v41, v0

    move-object/from16 v0, v41

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->privateFlags:I

    move/from16 v27, v0

    .line 3567
    .local v27, "privateFlags":I
    move/from16 v0, v27

    and-int/lit16 v0, v0, 0x400

    move/from16 v41, v0

    if-nez v41, :cond_6d1

    const/16 v41, 0x7ed

    move/from16 v0, v33

    move/from16 v1, v41

    if-ne v0, v1, :cond_6d7

    .line 3569
    :cond_6d1
    move-object/from16 v0, v40

    invoke-virtual {v0, v12}, Lcom/android/server/wm/WindowList;->indexOf(Ljava/lang/Object;)I

    move-result v15

    .line 3572
    .end local v27    # "privateFlags":I
    .end local v33    # "type":I
    :cond_6d7
    sget-boolean v41, DEBUG_WALLPAPER_LIGHT:Z

    if-nez v41, :cond_6e3

    sget-boolean v41, DEBUG_WINDOW_MOVEMENT:Z

    if-nez v41, :cond_6e3

    sget-boolean v41, DEBUG_ADD_REMOVE:Z

    if-eqz v41, :cond_719

    .line 3573
    :cond_6e3
    const-string v41, "WindowManager"

    new-instance v42, Ljava/lang/StringBuilder;

    invoke-direct/range {v42 .. v42}, Ljava/lang/StringBuilder;-><init>()V

    const-string v43, "Moving wallpaper "

    invoke-virtual/range {v42 .. v43}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v42

    move-object/from16 v0, v42

    move-object/from16 v1, v36

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v42

    const-string v43, " from "

    invoke-virtual/range {v42 .. v43}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v42

    move-object/from16 v0, v42

    move/from16 v1, v25

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v42

    const-string v43, " to "

    invoke-virtual/range {v42 .. v43}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v42

    move-object/from16 v0, v42

    invoke-virtual {v0, v15}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v42

    invoke-virtual/range {v42 .. v42}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v42

    invoke-static/range {v41 .. v42}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 3577
    :cond_719
    move-object/from16 v0, v40

    move-object/from16 v1, v36

    invoke-virtual {v0, v15, v1}, Lcom/android/server/wm/WindowList;->add(ILjava/lang/Object;)V

    .line 3581
    const/16 v41, 0x1

    move/from16 v0, v41

    move-object/from16 v1, p0

    iput-boolean v0, v1, mWindowsChanged:Z

    .line 3582
    const/4 v4, 0x1

    goto/16 :goto_5ce

    .line 3509
    .end local v15    # "insertionIndex":I
    .end local v25    # "oldIndex":I
    .end local v36    # "wallpaper":Lcom/android/server/wm/WindowState;
    :cond_72b
    add-int/lit8 v5, v5, -0x1

    goto/16 :goto_4d0

    .line 3587
    .end local v29    # "token":Lcom/android/server/wm/WindowToken;
    .end local v30    # "tokenWindows":Lcom/android/server/wm/WindowList;
    .end local v37    # "wallpaperNdx":I
    :cond_72f
    if-eqz v28, :cond_76d

    sget-boolean v41, DEBUG_WALLPAPER_LIGHT:Z

    if-eqz v41, :cond_76d

    const-string v41, "WindowManager"

    new-instance v42, Ljava/lang/StringBuilder;

    invoke-direct/range {v42 .. v42}, Ljava/lang/StringBuilder;-><init>()V

    const-string v43, "New wallpaper: target="

    invoke-virtual/range {v42 .. v43}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v42

    move-object/from16 v0, v42

    move-object/from16 v1, v20

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v42

    const-string v43, " lower="

    invoke-virtual/range {v42 .. v43}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v42

    move-object/from16 v0, v42

    move-object/from16 v1, v17

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v42

    const-string v43, " upper="

    invoke-virtual/range {v42 .. v43}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v42

    move-object/from16 v0, v42

    move-object/from16 v1, v19

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v42

    invoke-virtual/range {v42 .. v42}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v42

    invoke-static/range {v41 .. v42}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 3591
    :cond_76d
    if-eqz v28, :cond_7ab

    sget-boolean v41, DEBUG_WALLPAPER_LIGHT:Z

    if-eqz v41, :cond_7ab

    .line 3592
    const-string v41, "WindowManager"

    new-instance v42, Ljava/lang/StringBuilder;

    invoke-direct/range {v42 .. v42}, Ljava/lang/StringBuilder;-><init>()V

    const-string v43, "New wallpaper: target="

    invoke-virtual/range {v42 .. v43}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v42

    move-object/from16 v0, v42

    move-object/from16 v1, v20

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v42

    const-string v43, " lower="

    invoke-virtual/range {v42 .. v43}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v42

    move-object/from16 v0, v42

    move-object/from16 v1, v17

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v42

    const-string v43, " upper="

    invoke-virtual/range {v42 .. v43}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v42

    move-object/from16 v0, v42

    move-object/from16 v1, v19

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v42

    invoke-virtual/range {v42 .. v42}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v42

    invoke-static/range {v41 .. v42}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 3602
    :cond_7ab
    move-object/from16 v0, v20

    move-object/from16 v1, p0

    iput-object v0, v1, mWallpaperTarget:Lcom/android/server/wm/WindowState;

    .line 3603
    move-object/from16 v0, v17

    move-object/from16 v1, p0

    iput-object v0, v1, mLowerWallpaperTarget:Lcom/android/server/wm/WindowState;

    .line 3604
    move-object/from16 v0, v19

    move-object/from16 v1, p0

    iput-object v0, v1, mUpperWallpaperTarget:Lcom/android/server/wm/WindowState;

    goto/16 :goto_7
.end method

.method public appMinimizingStarted(Landroid/os/IBinder;)V
    .registers 7
    .param p1, "token"    # Landroid/os/IBinder;

    .prologue
    .line 21090
    iget-object v2, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v2

    .line 21091
    :try_start_3
    invoke-virtual {p0, p1}, findAppWindowToken(Landroid/os/IBinder;)Lcom/android/server/wm/AppWindowToken;

    move-result-object v0

    .line 21092
    .local v0, "wtoken":Lcom/android/server/wm/AppWindowToken;
    if-eqz v0, :cond_18

    .line 21093
    const/4 v1, 0x0

    iput-boolean v1, v0, Lcom/android/server/wm/AppWindowToken;->mMultiWindowStyleChanging:Z

    .line 21094
    iget-object v1, p0, mH:Lcom/android/server/wm/WindowManagerService$H;

    const/16 v3, 0x68

    iget-object v4, v0, Lcom/android/server/wm/AppWindowToken;->token:Landroid/os/IBinder;

    invoke-virtual {v1, v3, v4}, Lcom/android/server/wm/WindowManagerService$H;->removeMessages(ILjava/lang/Object;)V

    .line 21095
    invoke-virtual {p0}, requestTraversalLocked()V

    .line 21097
    :cond_18
    monitor-exit v2

    .line 21098
    return-void

    .line 21097
    .end local v0    # "wtoken":Lcom/android/server/wm/AppWindowToken;
    :catchall_1a
    move-exception v1

    monitor-exit v2
    :try_end_1c
    .catchall {:try_start_3 .. :try_end_1c} :catchall_1a

    throw v1
.end method

.method public assignMultiWindowScale(I)V
    .registers 5
    .param p1, "stackId"    # I

    .prologue
    .line 21514
    iget-object v2, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v2

    .line 21515
    :try_start_3
    iget-object v1, p0, mStackIdToStack:Landroid/util/SparseArray;

    invoke-virtual {v1, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/wm/TaskStack;

    .line 21516
    .local v0, "taskStack":Lcom/android/server/wm/TaskStack;
    if-eqz v0, :cond_10

    .line 21517
    invoke-direct {p0, v0}, assignMultiWindowScaleLocked(Lcom/android/server/wm/TaskStack;)V

    .line 21519
    :cond_10
    monitor-exit v2

    .line 21520
    return-void

    .line 21519
    .end local v0    # "taskStack":Lcom/android/server/wm/TaskStack;
    :catchall_12
    move-exception v1

    monitor-exit v2
    :try_end_14
    .catchall {:try_start_3 .. :try_end_14} :catchall_12

    throw v1
.end method

.method public attachStack(IIIILandroid/graphics/Rect;)V
    .registers 18
    .param p1, "stackId"    # I
    .param p2, "displayId"    # I
    .param p3, "stackType"    # I
    .param p4, "stackZone"    # I
    .param p5, "bounds"    # Landroid/graphics/Rect;

    .prologue
    .line 9250
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v8

    .line 9252
    .local v8, "origId":J
    :try_start_4
    iget-object v11, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v11
    :try_end_7
    .catchall {:try_start_4 .. :try_end_7} :catchall_71

    .line 9253
    :try_start_7
    iget-object v1, p0, mDisplayContents:Landroid/util/SparseArray;

    invoke-virtual {v1, p2}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Lcom/android/server/wm/DisplayContent;

    .line 9254
    .local v6, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-eqz v6, :cond_69

    .line 9255
    iget-object v1, p0, mStackIdToStack:Landroid/util/SparseArray;

    invoke-virtual {v1, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/wm/TaskStack;

    .line 9256
    .local v0, "stack":Lcom/android/server/wm/TaskStack;
    if-nez v0, :cond_48

    .line 9257
    sget-boolean v1, DEBUG_STACK:Z

    if-eqz v1, :cond_37

    const-string v1, "WindowManager"

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "attachStack: stackId="

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v1, v2}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 9258
    :cond_37
    new-instance v0, Lcom/android/server/wm/TaskStack;

    .end local v0    # "stack":Lcom/android/server/wm/TaskStack;
    move-object v1, p0

    move v2, p1

    move v3, p3

    move/from16 v4, p4

    move-object/from16 v5, p5

    invoke-direct/range {v0 .. v5}, Lcom/android/server/wm/TaskStack;-><init>(Lcom/android/server/wm/WindowManagerService;IIILandroid/graphics/Rect;)V

    .line 9260
    .restart local v0    # "stack":Lcom/android/server/wm/TaskStack;
    iget-object v1, p0, mStackIdToStack:Landroid/util/SparseArray;

    invoke-virtual {v1, p1, v0}, Landroid/util/SparseArray;->put(ILjava/lang/Object;)V

    .line 9262
    :cond_48
    invoke-virtual {v0, v6}, Lcom/android/server/wm/TaskStack;->attachDisplayContent(Lcom/android/server/wm/DisplayContent;)V

    .line 9263
    invoke-virtual {v6, v0}, Lcom/android/server/wm/DisplayContent;->attachStack(Lcom/android/server/wm/TaskStack;)V

    .line 9264
    invoke-virtual {p0, v6}, moveStackWindowsLocked(Lcom/android/server/wm/DisplayContent;)V

    .line 9265
    invoke-virtual {v6}, Lcom/android/server/wm/DisplayContent;->getWindowList()Lcom/android/server/wm/WindowList;

    move-result-object v10

    .line 9266
    .local v10, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual {v10}, Lcom/android/server/wm/WindowList;->size()I

    move-result v1

    add-int/lit8 v7, v1, -0x1

    .local v7, "winNdx":I
    :goto_5b
    if-ltz v7, :cond_69

    .line 9267
    invoke-virtual {v10, v7}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/wm/WindowState;

    invoke-virtual {v1}, Lcom/android/server/wm/WindowState;->reportResized()V

    .line 9266
    add-int/lit8 v7, v7, -0x1

    goto :goto_5b

    .line 9270
    .end local v0    # "stack":Lcom/android/server/wm/TaskStack;
    .end local v7    # "winNdx":I
    .end local v10    # "windows":Lcom/android/server/wm/WindowList;
    :cond_69
    monitor-exit v11
    :try_end_6a
    .catchall {:try_start_7 .. :try_end_6a} :catchall_6e

    .line 9272
    invoke-static {v8, v9}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 9274
    return-void

    .line 9270
    .end local v6    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :catchall_6e
    move-exception v1

    :try_start_6f
    monitor-exit v11
    :try_end_70
    .catchall {:try_start_6f .. :try_end_70} :catchall_6e

    :try_start_70
    throw v1
    :try_end_71
    .catchall {:try_start_70 .. :try_end_71} :catchall_71

    .line 9272
    :catchall_71
    move-exception v1

    invoke-static {v8, v9}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v1
.end method

.method public canGlobalActionsShow()Z
    .registers 2

    .prologue
    .line 10222
    invoke-static {}, Lcom/android/server/power/ShutdownThread;->canGlobalActionsShow()Z

    move-result v0

    return v0
.end method

.method public canRequestMultiWindowTransition(I)Z
    .registers 6
    .param p1, "displayId"    # I

    .prologue
    .line 21383
    iget-object v1, p0, mAnimator:Lcom/android/server/wm/WindowAnimator;

    invoke-virtual {v1, p1}, Lcom/android/server/wm/WindowAnimator;->getMultiWindowTransitionLocked(I)Lcom/android/server/wm/MultiWindowTransition;

    move-result-object v0

    .line 21384
    .local v0, "multiwindowAnimator":Lcom/android/server/wm/MultiWindowTransition;
    if-eqz v0, :cond_58

    invoke-virtual {v0}, Lcom/android/server/wm/MultiWindowTransition;->isFreezingScreen()Z

    move-result v1

    if-nez v1, :cond_1a

    invoke-virtual {v0}, Lcom/android/server/wm/MultiWindowTransition;->isTransitReady()Z

    move-result v1

    if-nez v1, :cond_1a

    invoke-virtual {v0}, Lcom/android/server/wm/MultiWindowTransition;->isTranitRunning()Z

    move-result v1

    if-eqz v1, :cond_58

    .line 21388
    :cond_1a
    sget-boolean v1, SAFE_DEBUG:Z

    if-eqz v1, :cond_56

    .line 21389
    const-string v1, "WindowManager"

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "canRequestMultiWindowTransition : isFreezingScreen="

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v0}, Lcom/android/server/wm/MultiWindowTransition;->isFreezingScreen()Z

    move-result v3

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string v3, " isTransitReady="

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v0}, Lcom/android/server/wm/MultiWindowTransition;->isTransitReady()Z

    move-result v3

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string v3, " isTranitRunning="

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v0}, Lcom/android/server/wm/MultiWindowTransition;->isTranitRunning()Z

    move-result v3

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v1, v2}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 21394
    :cond_56
    const/4 v1, 0x0

    .line 21396
    :goto_57
    return v1

    :cond_58
    const/4 v1, 0x1

    goto :goto_57
.end method

.method public cancelDragForcelyWhenScreenTurnOff(Z)V
    .registers 5
    .param p1, "forceStopDrag"    # Z

    .prologue
    .line 20805
    iget-object v1, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v1

    .line 20806
    :try_start_3
    iput-boolean p1, p0, isForceCancelDragMode:Z

    .line 20807
    iget-object v0, p0, mDragState:Lcom/android/server/wm/DragState;

    if-eqz v0, :cond_13

    .line 20808
    iget-object v0, p0, mDragState:Lcom/android/server/wm/DragState;

    const/4 v2, 0x0

    iput-boolean v2, v0, Lcom/android/server/wm/DragState;->mDragResult:Z

    .line 20809
    iget-object v0, p0, mDragState:Lcom/android/server/wm/DragState;

    invoke-virtual {v0}, Lcom/android/server/wm/DragState;->endDragLw()V

    .line 20811
    :cond_13
    monitor-exit v1

    .line 20812
    return-void

    .line 20811
    :catchall_15
    move-exception v0

    monitor-exit v1
    :try_end_17
    .catchall {:try_start_3 .. :try_end_17} :catchall_15

    throw v0
.end method

.method public cancelDualScreenTransition()V
    .registers 1

    .prologue
    .line 23099
    return-void
.end method

.method public cancelDualScreenTransitionIfNeeded(Lcom/samsung/android/dualscreen/DualScreen;)V
    .registers 2
    .param p1, "screen"    # Lcom/samsung/android/dualscreen/DualScreen;

    .prologue
    .line 23083
    return-void
.end method

.method public cancelTapOupStackMsg()V
    .registers 3

    .prologue
    .line 22685
    iget-object v0, p0, mH:Lcom/android/server/wm/WindowManagerService$H;

    const/16 v1, 0x1f

    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowManagerService$H;->removeMessages(I)V

    .line 22686
    return-void
.end method

.method public changeDisplayScale(FFFZLandroid/view/IInputFilter;)V
    .registers 14
    .param p1, "scale"    # F
    .param p2, "offsetX"    # F
    .param p3, "offsetY"    # F
    .param p4, "registerInput"    # Z
    .param p5, "filter"    # Landroid/view/IInputFilter;

    .prologue
    .line 22086
    const-string v4, "android.permission.WRITE_SECURE_SETTINGS"

    const-string v5, "changeDisplayScale()"

    invoke-virtual {p0, v4, v5}, checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v4

    if-nez v4, :cond_12

    .line 22087
    new-instance v4, Ljava/lang/SecurityException;

    const-string v5, "Requires MAGNIFY_DISPLAY permission."

    invoke-direct {v4, v5}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v4

    .line 22090
    :cond_12
    iget-object v5, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v5

    .line 22091
    :try_start_15
    sget-boolean v4, SAFE_DEBUG:Z

    if-eqz v4, :cond_46

    .line 22092
    const-string v4, "WindowManager"

    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "changeDisplayScale() scale="

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6, p1}, Ljava/lang/StringBuilder;->append(F)Ljava/lang/StringBuilder;

    move-result-object v6

    const-string/jumbo v7, "registerInput="

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6, p4}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v6

    const-string v7, ", filter="

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6, p5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-static {v4, v6}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 22095
    :cond_46
    const/4 v4, 0x0

    cmpl-float v4, p1, v4

    if-nez v4, :cond_58

    .line 22096
    iget-object v4, p0, mInputManager:Lcom/android/server/input/InputManagerService;

    const/4 v6, 0x0

    invoke-virtual {v4, v6}, Lcom/android/server/input/InputManagerService;->setInputFilter(Landroid/view/IInputFilter;)V

    .line 22097
    const/4 v4, 0x0

    iput-boolean v4, p0, mReduceScreenRunning:Z

    iput-boolean v4, p0, mReduceScreenStarted:Z

    .line 22098
    monitor-exit v5

    .line 22143
    :goto_57
    return-void

    .line 22099
    :cond_58
    const/high16 v4, 0x3f800000    # 1.0f

    cmpg-float v4, p1, v4

    if-gez v4, :cond_61

    .line 22100
    const/4 v4, 0x1

    iput-boolean v4, p0, mReduceScreenStarted:Z

    .line 22104
    :cond_61
    const/4 v4, 0x0

    invoke-virtual {p0, v4}, getAppTransitionForDisplayLocked(I)Lcom/android/server/wm/AppTransition;

    move-result-object v0

    .line 22106
    .local v0, "mAppTransition":Lcom/android/server/wm/AppTransition;
    const/4 v4, 0x0

    invoke-virtual {p0, v4}, getEasyOneHandScaleSpecLocked(I)Landroid/view/MagnificationSpec;

    move-result-object v3

    .line 22107
    .local v3, "spec":Landroid/view/MagnificationSpec;
    if-eqz v3, :cond_db

    .line 22108
    iget v4, v3, Landroid/view/MagnificationSpec;->scale:F

    cmpl-float v4, v4, p1

    if-eqz v4, :cond_8a

    const/4 v2, 0x1

    .line 22109
    .local v2, "scaleChanged":Z
    :goto_74
    iget v4, v3, Landroid/view/MagnificationSpec;->offsetX:F

    cmpl-float v4, v4, p2

    if-nez v4, :cond_80

    iget v4, v3, Landroid/view/MagnificationSpec;->offsetY:F

    cmpl-float v4, v4, p3

    if-eqz v4, :cond_8c

    :cond_80
    const/4 v1, 0x1

    .line 22111
    .local v1, "offsetChanged":Z
    :goto_81
    if-nez v2, :cond_8e

    if-nez v1, :cond_8e

    .line 22112
    monitor-exit v5

    goto :goto_57

    .line 22141
    .end local v0    # "mAppTransition":Lcom/android/server/wm/AppTransition;
    .end local v1    # "offsetChanged":Z
    .end local v2    # "scaleChanged":Z
    .end local v3    # "spec":Landroid/view/MagnificationSpec;
    :catchall_87
    move-exception v4

    monitor-exit v5
    :try_end_89
    .catchall {:try_start_15 .. :try_end_89} :catchall_87

    throw v4

    .line 22108
    .restart local v0    # "mAppTransition":Lcom/android/server/wm/AppTransition;
    .restart local v3    # "spec":Landroid/view/MagnificationSpec;
    :cond_8a
    const/4 v2, 0x0

    goto :goto_74

    .line 22109
    .restart local v2    # "scaleChanged":Z
    :cond_8c
    const/4 v1, 0x0

    goto :goto_81

    .line 22115
    .restart local v1    # "offsetChanged":Z
    :cond_8e
    const/high16 v4, 0x3f800000    # 1.0f

    cmpg-float v4, p1, v4

    if-gez v4, :cond_c5

    const/4 v4, 0x1

    :goto_95
    :try_start_95
    iput-boolean v4, p0, mReduceScreenRunning:Z

    .line 22116
    const/high16 v4, 0x3f800000    # 1.0f

    cmpg-float v4, p1, v4

    if-gez v4, :cond_c7

    move v4, p1

    :goto_9e
    iput v4, p0, mReduceScreenScale:F

    .line 22118
    const/high16 v4, 0x3f800000    # 1.0f

    cmpg-float v4, p1, v4

    if-gez v4, :cond_ca

    const/4 v4, 0x1

    :goto_a7
    invoke-virtual {v0, v4}, Lcom/android/server/wm/AppTransition;->setEasyOneHandRunning(Z)V

    .line 22120
    invoke-virtual {v3, p1, p2, p3}, Landroid/view/MagnificationSpec;->initialize(FFF)V

    .line 22121
    invoke-virtual {p0}, scheduleAnimationLocked()V

    .line 22123
    invoke-direct {p0}, needToUpdateFocusStackFrame()Z

    move-result v4

    if-eqz v4, :cond_bb

    .line 22124
    const/4 v4, 0x1

    const/4 v6, 0x0

    invoke-virtual {p0, v4, v6}, setFocusedStackFrame(ZZ)V

    .line 22127
    :cond_bb
    if-nez p5, :cond_cc

    const/high16 v4, 0x3f800000    # 1.0f

    cmpg-float v4, p1, v4

    if-gez v4, :cond_cc

    .line 22128
    monitor-exit v5

    goto :goto_57

    .line 22115
    :cond_c5
    const/4 v4, 0x0

    goto :goto_95

    .line 22116
    :cond_c7
    iget v4, p0, mReduceScreenScale:F

    goto :goto_9e

    .line 22118
    :cond_ca
    const/4 v4, 0x0

    goto :goto_a7

    .line 22133
    :cond_cc
    if-eqz v1, :cond_d4

    .line 22134
    iget-object v4, p0, mInputMonitor:Lcom/android/server/wm/InputMonitor;

    const/4 v6, 0x1

    invoke-virtual {v4, v6}, Lcom/android/server/wm/InputMonitor;->updateInputWindowsLw(Z)V

    .line 22137
    :cond_d4
    if-eqz p4, :cond_db

    .line 22138
    iget-object v4, p0, mInputManager:Lcom/android/server/input/InputManagerService;

    invoke-virtual {v4, p5}, Lcom/android/server/input/InputManagerService;->setInputFilter(Landroid/view/IInputFilter;)V

    .line 22141
    .end local v1    # "offsetChanged":Z
    .end local v2    # "scaleChanged":Z
    :cond_db
    monitor-exit v5
    :try_end_dc
    .catchall {:try_start_95 .. :try_end_dc} :catchall_87

    goto/16 :goto_57
.end method

.method public changeFullInputMethod(Z)V
    .registers 7
    .param p1, "full"    # Z

    .prologue
    .line 22594
    iget-object v3, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v3

    .line 22595
    :try_start_3
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 22597
    .local v0, "origId":J
    if-eqz p1, :cond_1b

    .line 22598
    const/4 v2, 0x1

    iput-boolean v2, p0, mFullInputMethod:Z

    .line 22603
    :goto_c
    const/4 v2, 0x1

    invoke-virtual {p0, v2}, moveInputMethodWindowsToDisplayIfNeededLocked(Z)V

    .line 22604
    iget-object v2, p0, mInputMonitor:Lcom/android/server/wm/InputMonitor;

    const/4 v4, 0x1

    invoke-virtual {v2, v4}, Lcom/android/server/wm/InputMonitor;->updateInputWindowsLw(Z)V

    .line 22606
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 22607
    monitor-exit v3

    .line 22608
    return-void

    .line 22600
    :cond_1b
    invoke-direct {p0}, turnOffInputMethodDisplayLocked()Z

    .line 22601
    const/4 v2, 0x0

    iput-boolean v2, p0, mFullInputMethod:Z

    goto :goto_c

    .line 22607
    .end local v0    # "origId":J
    :catchall_22
    move-exception v2

    monitor-exit v3
    :try_end_24
    .catchall {:try_start_3 .. :try_end_24} :catchall_22

    throw v2
.end method

.method changeMultiWindowStyle(Lcom/android/server/wm/AppWindowToken;Lcom/samsung/android/multiwindow/MultiWindowStyle;)Z
    .registers 4
    .param p1, "appToken"    # Lcom/android/server/wm/AppWindowToken;
    .param p2, "style"    # Lcom/samsung/android/multiwindow/MultiWindowStyle;

    .prologue
    .line 21994
    const/4 v0, 0x0

    invoke-virtual {p0, p1, p2, v0}, changeMultiWindowStyle(Lcom/android/server/wm/AppWindowToken;Lcom/samsung/android/multiwindow/MultiWindowStyle;Z)Z

    move-result v0

    return v0
.end method

.method changeMultiWindowStyle(Lcom/android/server/wm/AppWindowToken;Lcom/samsung/android/multiwindow/MultiWindowStyle;Z)Z
    .registers 9
    .param p1, "appToken"    # Lcom/android/server/wm/AppWindowToken;
    .param p2, "style"    # Lcom/samsung/android/multiwindow/MultiWindowStyle;
    .param p3, "force"    # Z

    .prologue
    const/4 v1, 0x0

    .line 21997
    iget-object v2, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v2

    .line 21998
    if-nez p1, :cond_8

    .line 21999
    :try_start_6
    monitor-exit v2

    .line 22015
    :goto_7
    return v1

    .line 22001
    :cond_8
    iget-object v3, p1, Lcom/android/server/wm/AppWindowToken;->appMultiWindowStyle:Lcom/samsung/android/multiwindow/MultiWindowStyle;

    if-eqz v3, :cond_1a

    if-nez p3, :cond_1f

    iget-object v3, p1, Lcom/android/server/wm/AppWindowToken;->appMultiWindowStyle:Lcom/samsung/android/multiwindow/MultiWindowStyle;

    invoke-virtual {v3}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->getType()I

    move-result v3

    invoke-virtual {p2}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->getType()I

    move-result v4

    if-ne v3, v4, :cond_1f

    .line 22003
    :cond_1a
    monitor-exit v2

    goto :goto_7

    .line 22014
    :catchall_1c
    move-exception v1

    monitor-exit v2
    :try_end_1e
    .catchall {:try_start_6 .. :try_end_1e} :catchall_1c

    throw v1

    .line 22005
    :cond_1f
    :try_start_1f
    iget-object v3, p1, Lcom/android/server/wm/AppWindowToken;->appToken:Landroid/view/IApplicationToken;

    if-nez v3, :cond_2c

    .line 22006
    const-string v3, "WindowManager"

    const-string v4, "changeMultiWindowStyle app token is null"

    invoke-static {v3, v4}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 22007
    monitor-exit v2
    :try_end_2b
    .catchall {:try_start_1f .. :try_end_2b} :catchall_1c

    goto :goto_7

    .line 22010
    :cond_2c
    :try_start_2c
    iget-object v1, p1, Lcom/android/server/wm/AppWindowToken;->appToken:Landroid/view/IApplicationToken;

    invoke-interface {v1, p2}, Landroid/view/IApplicationToken;->setMultiWindowStyle(Lcom/samsung/android/multiwindow/MultiWindowStyle;)V
    :try_end_31
    .catch Landroid/os/RemoteException; {:try_start_2c .. :try_end_31} :catch_34
    .catchall {:try_start_2c .. :try_end_31} :catchall_1c

    .line 22014
    :goto_31
    :try_start_31
    monitor-exit v2

    .line 22015
    const/4 v1, 0x1

    goto :goto_7

    .line 22011
    :catch_34
    move-exception v0

    .line 22012
    .local v0, "e":Landroid/os/RemoteException;
    invoke-virtual {v0}, Landroid/os/RemoteException;->printStackTrace()V
    :try_end_38
    .catchall {:try_start_31 .. :try_end_38} :catchall_1c

    goto :goto_31
.end method

.method checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z
    .registers 7
    .param p1, "permission"    # Ljava/lang/String;
    .param p2, "func"    # Ljava/lang/String;

    .prologue
    const/4 v1, 0x1

    .line 6214
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v2

    invoke-static {}, Landroid/os/Process;->myPid()I

    move-result v3

    if-ne v2, v3, :cond_c

    .line 6227
    :cond_b
    :goto_b
    return v1

    .line 6218
    :cond_c
    iget-object v2, p0, mContext:Landroid/content/Context;

    invoke-virtual {v2, p1}, Landroid/content/Context;->checkCallingPermission(Ljava/lang/String;)I

    move-result v2

    if-eqz v2, :cond_b

    .line 6222
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Permission Denial: "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, " from pid="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v2

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, ", uid="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v2

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, " requires "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    .line 6226
    .local v0, "msg":Ljava/lang/String;
    const-string v1, "WindowManager"

    invoke-static {v1, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 6227
    const/4 v1, 0x0

    goto :goto_b
.end method

.method checkDrawnWindowsLocked()V
    .registers 7

    .prologue
    .line 17975
    iget-object v3, p0, mWaitingForDrawn:Ljava/util/ArrayList;

    invoke-virtual {v3}, Ljava/util/ArrayList;->isEmpty()Z

    move-result v3

    if-nez v3, :cond_c

    iget-object v3, p0, mWaitingForDrawnCallback:Ljava/lang/Runnable;

    if-nez v3, :cond_d

    .line 18016
    :cond_c
    :goto_c
    return-void

    .line 17980
    :cond_d
    const/4 v1, 0x0

    .line 17982
    .local v1, "lastDrawn":Lcom/android/server/wm/WindowState;
    iget-object v3, p0, mWaitingForDrawn:Ljava/util/ArrayList;

    invoke-virtual {v3}, Ljava/util/ArrayList;->size()I

    move-result v3

    add-int/lit8 v0, v3, -0x1

    .local v0, "j":I
    :goto_16
    if-ltz v0, :cond_d0

    .line 17983
    iget-object v3, p0, mWaitingForDrawn:Ljava/util/ArrayList;

    invoke-virtual {v3, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/wm/WindowState;

    .line 17984
    .local v2, "win":Lcom/android/server/wm/WindowState;
    sget-boolean v3, DEBUG_SCREEN_ON:Z

    if-eqz v3, :cond_70

    const-string v3, "WindowManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Waiting for drawn "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, ": removed="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    iget-boolean v5, v2, Lcom/android/server/wm/WindowState;->mRemoved:Z

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, " visible="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v2}, Lcom/android/server/wm/WindowState;->isVisibleLw()Z

    move-result v5

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, " mHasSurface="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    iget-boolean v5, v2, Lcom/android/server/wm/WindowState;->mHasSurface:Z

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, " drawState="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    iget-object v5, v2, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    iget v5, v5, Lcom/android/server/wm/WindowStateAnimator;->mDrawState:I

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v3, v4}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 17988
    :cond_70
    iget-boolean v3, v2, Lcom/android/server/wm/WindowState;->mRemoved:Z

    if-nez v3, :cond_7e

    iget-boolean v3, v2, Lcom/android/server/wm/WindowState;->mHasSurface:Z

    if-eqz v3, :cond_7e

    invoke-virtual {v2}, Lcom/android/server/wm/WindowState;->isVisibleLw()Z

    move-result v3

    if-nez v3, :cond_a3

    .line 17990
    :cond_7e
    sget-boolean v3, DEBUG_SCREEN_ON:Z

    if-eqz v3, :cond_9a

    const-string v3, "WindowManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Aborted waiting for drawn: "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v3, v4}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 17991
    :cond_9a
    iget-object v3, p0, mWaitingForDrawn:Ljava/util/ArrayList;

    invoke-virtual {v3, v2}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    .line 17982
    :cond_9f
    :goto_9f
    add-int/lit8 v0, v0, -0x1

    goto/16 :goto_16

    .line 17992
    :cond_a3
    invoke-virtual {v2}, Lcom/android/server/wm/WindowState;->hasDrawnLw()Z

    move-result v3

    if-eqz v3, :cond_9f

    .line 17994
    sget-boolean v3, DEBUG_SCREEN_ON:Z

    if-eqz v3, :cond_c5

    const-string v3, "WindowManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Window drawn win="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v3, v4}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 17995
    :cond_c5
    iget-object v3, p0, mWaitingForDrawn:Ljava/util/ArrayList;

    invoke-virtual {v3, v2}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    .line 17997
    sget-boolean v3, SAFE_DEBUG:Z

    if-eqz v3, :cond_9f

    .line 17998
    move-object v1, v2

    goto :goto_9f

    .line 18003
    .end local v2    # "win":Lcom/android/server/wm/WindowState;
    :cond_d0
    iget-object v3, p0, mWaitingForDrawn:Ljava/util/ArrayList;

    invoke-virtual {v3}, Ljava/util/ArrayList;->isEmpty()Z

    move-result v3

    if-eqz v3, :cond_c

    .line 18005
    sget-boolean v3, SAFE_DEBUG:Z

    if-eqz v3, :cond_fc

    .line 18006
    if-eqz v1, :cond_fc

    .line 18007
    const-string v3, "WindowManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Last drawn win="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, ". ScreenOnListener will be invoked if it exists."

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v3, v4}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 18012
    :cond_fc
    sget-boolean v3, DEBUG_SCREEN_ON:Z

    if-eqz v3, :cond_107

    const-string v3, "WindowManager"

    const-string v4, "All windows drawn!"

    invoke-static {v3, v4}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 18013
    :cond_107
    iget-object v3, p0, mH:Lcom/android/server/wm/WindowManagerService$H;

    const/16 v4, 0x18

    invoke-virtual {v3, v4}, Lcom/android/server/wm/WindowManagerService$H;->removeMessages(I)V

    .line 18014
    iget-object v3, p0, mH:Lcom/android/server/wm/WindowManagerService$H;

    const/16 v4, 0x21

    invoke-virtual {v3, v4}, Lcom/android/server/wm/WindowManagerService$H;->sendEmptyMessage(I)Z

    goto/16 :goto_c
.end method

.method public clearForcedDisplayDensity(I)V
    .registers 9
    .param p1, "displayId"    # I

    .prologue
    .line 14654
    iget-object v1, p0, mContext:Landroid/content/Context;

    const-string v4, "android.permission.WRITE_SECURE_SETTINGS"

    invoke-virtual {v1, v4}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    move-result v1

    if-eqz v1, :cond_12

    .line 14657
    new-instance v1, Ljava/lang/SecurityException;

    const-string v4, "Must hold permission android.permission.WRITE_SECURE_SETTINGS"

    invoke-direct {v1, v4}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 14660
    :cond_12
    if-eqz p1, :cond_1c

    .line 14661
    new-instance v1, Ljava/lang/IllegalArgumentException;

    const-string v4, "Can only set the default display"

    invoke-direct {v1, v4}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 14663
    :cond_1c
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v2

    .line 14665
    .local v2, "ident":J
    :try_start_20
    iget-object v4, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v4
    :try_end_23
    .catchall {:try_start_20 .. :try_end_23} :catchall_44

    .line 14666
    :try_start_23
    invoke-virtual {p0, p1}, getDisplayContentLocked(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v0

    .line 14667
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-eqz v0, :cond_3c

    .line 14668
    iget v1, v0, Lcom/android/server/wm/DisplayContent;->mInitialDisplayDensity:I

    invoke-direct {p0, v0, v1}, setForcedDisplayDensityLocked(Lcom/android/server/wm/DisplayContent;I)V

    .line 14670
    iget-object v1, p0, mContext:Landroid/content/Context;

    invoke-virtual {v1}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v1

    const-string/jumbo v5, "display_density_forced"

    const-string v6, ""

    invoke-static {v1, v5, v6}, Landroid/provider/Settings$Global;->putString(Landroid/content/ContentResolver;Ljava/lang/String;Ljava/lang/String;)Z

    .line 14673
    :cond_3c
    monitor-exit v4
    :try_end_3d
    .catchall {:try_start_23 .. :try_end_3d} :catchall_41

    .line 14675
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 14677
    return-void

    .line 14673
    .end local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :catchall_41
    move-exception v1

    :try_start_42
    monitor-exit v4
    :try_end_43
    .catchall {:try_start_42 .. :try_end_43} :catchall_41

    :try_start_43
    throw v1
    :try_end_44
    .catchall {:try_start_43 .. :try_end_44} :catchall_44

    .line 14675
    :catchall_44
    move-exception v1

    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v1
.end method

.method public clearForcedDisplaySize(I)V
    .registers 9
    .param p1, "displayId"    # I

    .prologue
    .line 14554
    iget-object v1, p0, mContext:Landroid/content/Context;

    const-string v4, "android.permission.WRITE_SECURE_SETTINGS"

    invoke-virtual {v1, v4}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    move-result v1

    if-eqz v1, :cond_12

    .line 14557
    new-instance v1, Ljava/lang/SecurityException;

    const-string v4, "Must hold permission android.permission.WRITE_SECURE_SETTINGS"

    invoke-direct {v1, v4}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 14560
    :cond_12
    if-eqz p1, :cond_1c

    .line 14561
    new-instance v1, Ljava/lang/IllegalArgumentException;

    const-string v4, "Can only set the default display"

    invoke-direct {v1, v4}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 14563
    :cond_1c
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v2

    .line 14565
    .local v2, "ident":J
    :try_start_20
    iget-object v4, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v4
    :try_end_23
    .catchall {:try_start_20 .. :try_end_23} :catchall_46

    .line 14566
    :try_start_23
    invoke-virtual {p0, p1}, getDisplayContentLocked(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v0

    .line 14567
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-eqz v0, :cond_3e

    .line 14568
    iget v1, v0, Lcom/android/server/wm/DisplayContent;->mInitialDisplayWidth:I

    iget v5, v0, Lcom/android/server/wm/DisplayContent;->mInitialDisplayHeight:I

    invoke-direct {p0, v0, v1, v5}, setForcedDisplaySizeLocked(Lcom/android/server/wm/DisplayContent;II)V

    .line 14570
    iget-object v1, p0, mContext:Landroid/content/Context;

    invoke-virtual {v1}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v1

    const-string/jumbo v5, "display_size_forced"

    const-string v6, ""

    invoke-static {v1, v5, v6}, Landroid/provider/Settings$Global;->putString(Landroid/content/ContentResolver;Ljava/lang/String;Ljava/lang/String;)Z

    .line 14573
    :cond_3e
    monitor-exit v4
    :try_end_3f
    .catchall {:try_start_23 .. :try_end_3f} :catchall_43

    .line 14575
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 14577
    return-void

    .line 14573
    .end local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :catchall_43
    move-exception v1

    :try_start_44
    monitor-exit v4
    :try_end_45
    .catchall {:try_start_44 .. :try_end_45} :catchall_43

    :try_start_45
    throw v1
    :try_end_46
    .catchall {:try_start_45 .. :try_end_46} :catchall_46

    .line 14575
    :catchall_46
    move-exception v1

    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v1
.end method

.method clearStartingWindowTargetAppTokenLocked(Lcom/android/server/wm/AppWindowToken;)V
    .registers 6
    .param p1, "appToken"    # Lcom/android/server/wm/AppWindowToken;

    .prologue
    .line 20314
    if-eqz p1, :cond_6

    iget-object v1, p1, Lcom/android/server/wm/AppWindowToken;->mTask:Lcom/android/server/wm/Task;

    if-nez v1, :cond_7

    .line 20324
    :cond_6
    :goto_6
    return-void

    .line 20317
    :cond_7
    iget-object v0, p1, Lcom/android/server/wm/AppWindowToken;->mTask:Lcom/android/server/wm/Task;

    .line 20318
    .local v0, "task":Lcom/android/server/wm/Task;
    if-eqz v0, :cond_6

    .line 20319
    const/4 v1, 0x0

    iput-object v1, v0, Lcom/android/server/wm/Task;->mStartingWindowTargetAppToken:Lcom/android/server/wm/AppWindowToken;

    .line 20320
    sget-boolean v1, DEBUG_STARTING_WINDOW:Z

    if-eqz v1, :cond_6

    .line 20321
    const-string v1, "WindowManager"

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "clearStartingWindowTargetAppTokenLocked = "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string v3, " Caller="

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    const/4 v3, 0x2

    invoke-static {v3}, Landroid/os/Debug;->getCallers(I)Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v1, v2}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_6
.end method

.method public clearWindowContentFrameStats(Landroid/os/IBinder;)Z
    .registers 7
    .param p1, "token"    # Landroid/os/IBinder;

    .prologue
    const/4 v2, 0x0

    .line 19262
    const-string v3, "android.permission.FRAME_STATS"

    const-string v4, "clearWindowContentFrameStats()"

    invoke-virtual {p0, v3, v4}, checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v3

    if-nez v3, :cond_13

    .line 19264
    new-instance v2, Ljava/lang/SecurityException;

    const-string v3, "Requires FRAME_STATS permission"

    invoke-direct {v2, v3}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v2

    .line 19266
    :cond_13
    iget-object v3, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v3

    .line 19267
    :try_start_16
    iget-object v4, p0, mWindowMap:Ljava/util/HashMap;

    invoke-virtual {v4, p1}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/wm/WindowState;

    .line 19268
    .local v1, "windowState":Lcom/android/server/wm/WindowState;
    if-nez v1, :cond_22

    .line 19269
    monitor-exit v3

    .line 19275
    :goto_21
    return v2

    .line 19271
    :cond_22
    iget-object v4, v1, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    iget-object v0, v4, Lcom/android/server/wm/WindowStateAnimator;->mSurfaceControl:Landroid/view/SurfaceControl;

    .line 19272
    .local v0, "surfaceControl":Landroid/view/SurfaceControl;
    if-nez v0, :cond_2d

    .line 19273
    monitor-exit v3

    goto :goto_21

    .line 19276
    .end local v0    # "surfaceControl":Landroid/view/SurfaceControl;
    .end local v1    # "windowState":Lcom/android/server/wm/WindowState;
    :catchall_2a
    move-exception v2

    monitor-exit v3
    :try_end_2c
    .catchall {:try_start_16 .. :try_end_2c} :catchall_2a

    throw v2

    .line 19275
    .restart local v0    # "surfaceControl":Landroid/view/SurfaceControl;
    .restart local v1    # "windowState":Lcom/android/server/wm/WindowState;
    :cond_2d
    :try_start_2d
    invoke-virtual {v0}, Landroid/view/SurfaceControl;->clearContentFrameStats()Z

    move-result v2

    monitor-exit v3
    :try_end_32
    .catchall {:try_start_2d .. :try_end_32} :catchall_2a

    goto :goto_21
.end method

.method public closeSystemDialogs(Ljava/lang/String;)V
    .registers 10
    .param p1, "reason"    # Ljava/lang/String;

    .prologue
    .line 9973
    iget-object v7, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v7

    .line 9974
    :try_start_3
    iget-object v6, p0, mDisplayContents:Landroid/util/SparseArray;

    invoke-virtual {v6}, Landroid/util/SparseArray;->size()I

    move-result v1

    .line 9975
    .local v1, "numDisplays":I
    const/4 v0, 0x0

    .local v0, "displayNdx":I
    :goto_a
    if-ge v0, v1, :cond_34

    .line 9976
    iget-object v6, p0, mDisplayContents:Landroid/util/SparseArray;

    invoke-virtual {v6, v0}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Lcom/android/server/wm/DisplayContent;

    invoke-virtual {v6}, Lcom/android/server/wm/DisplayContent;->getWindowList()Lcom/android/server/wm/WindowList;

    move-result-object v5

    .line 9977
    .local v5, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual {v5}, Lcom/android/server/wm/WindowList;->size()I

    move-result v2

    .line 9978
    .local v2, "numWindows":I
    const/4 v4, 0x0

    .local v4, "winNdx":I
    :goto_1d
    if-ge v4, v2, :cond_31

    .line 9979
    invoke-virtual {v5, v4}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/wm/WindowState;

    .line 9980
    .local v3, "w":Lcom/android/server/wm/WindowState;
    iget-boolean v6, v3, Lcom/android/server/wm/WindowState;->mHasSurface:Z
    :try_end_27
    .catchall {:try_start_3 .. :try_end_27} :catchall_36

    if-eqz v6, :cond_2e

    .line 9982
    :try_start_29
    iget-object v6, v3, Lcom/android/server/wm/WindowState;->mClient:Landroid/view/IWindow;

    invoke-interface {v6, p1}, Landroid/view/IWindow;->closeSystemDialogs(Ljava/lang/String;)V
    :try_end_2e
    .catch Landroid/os/RemoteException; {:try_start_29 .. :try_end_2e} :catch_39
    .catchall {:try_start_29 .. :try_end_2e} :catchall_36

    .line 9978
    :cond_2e
    :goto_2e
    add-int/lit8 v4, v4, 0x1

    goto :goto_1d

    .line 9975
    .end local v3    # "w":Lcom/android/server/wm/WindowState;
    :cond_31
    add-int/lit8 v0, v0, 0x1

    goto :goto_a

    .line 9988
    .end local v2    # "numWindows":I
    .end local v4    # "winNdx":I
    .end local v5    # "windows":Lcom/android/server/wm/WindowList;
    :cond_34
    :try_start_34
    monitor-exit v7

    .line 9989
    return-void

    .line 9988
    .end local v0    # "displayNdx":I
    .end local v1    # "numDisplays":I
    :catchall_36
    move-exception v6

    monitor-exit v7
    :try_end_38
    .catchall {:try_start_34 .. :try_end_38} :catchall_36

    throw v6

    .line 9983
    .restart local v0    # "displayNdx":I
    .restart local v1    # "numDisplays":I
    .restart local v2    # "numWindows":I
    .restart local v3    # "w":Lcom/android/server/wm/WindowState;
    .restart local v4    # "winNdx":I
    .restart local v5    # "windows":Lcom/android/server/wm/WindowList;
    :catch_39
    move-exception v6

    goto :goto_2e
.end method

.method public cocktailBarVisibilityChanged(Z)V
    .registers 6
    .param p1, "visibility"    # Z

    .prologue
    .line 22298
    iget-object v1, p0, mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v1, p1}, Landroid/view/WindowManagerPolicy;->updateCocktailBarVisibility(Z)Z

    move-result v1

    if-eqz v1, :cond_3f

    .line 22299
    const/4 v0, 0x0

    .line 22300
    .local v0, "a":Landroid/view/animation/Animation;
    if-eqz p1, :cond_5e

    .line 22301
    iget v1, p0, mRotation:I

    packed-switch v1, :pswitch_data_8e

    .line 22312
    iget-object v1, p0, mContext:Landroid/content/Context;

    const v2, 0x10a0016

    invoke-static {v1, v2}, Landroid/view/animation/AnimationUtils;->loadAnimation(Landroid/content/Context;I)Landroid/view/animation/Animation;

    move-result-object v0

    .line 22332
    :goto_19
    iget-object v2, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v2

    .line 22333
    :try_start_1c
    iget-object v1, p0, mCocktailBar:Lcom/android/server/wm/WindowState;

    iget-object v1, v1, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    invoke-virtual {v1}, Lcom/android/server/wm/WindowStateAnimator;->isAnimating()Z

    move-result v1

    if-eqz v1, :cond_2d

    .line 22334
    iget-object v1, p0, mCocktailBar:Lcom/android/server/wm/WindowState;

    iget-object v1, v1, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    invoke-virtual {v1}, Lcom/android/server/wm/WindowStateAnimator;->clearAnimation()V

    .line 22336
    :cond_2d
    iget-object v1, p0, mCocktailBar:Lcom/android/server/wm/WindowState;

    iget-object v1, v1, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    invoke-virtual {v1, v0}, Lcom/android/server/wm/WindowStateAnimator;->setAnimation(Landroid/view/animation/Animation;)V

    .line 22337
    invoke-virtual {p0}, getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v1

    const/4 v3, 0x1

    iput-boolean v3, v1, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    .line 22338
    invoke-direct {p0}, performLayoutAndPlaceSurfacesLocked()V

    .line 22339
    monitor-exit v2
    :try_end_3f
    .catchall {:try_start_1c .. :try_end_3f} :catchall_8b

    .line 22342
    .end local v0    # "a":Landroid/view/animation/Animation;
    :cond_3f
    return-void

    .line 22303
    .restart local v0    # "a":Landroid/view/animation/Animation;
    :pswitch_40
    iget-object v1, p0, mContext:Landroid/content/Context;

    const v2, 0x10a0017

    invoke-static {v1, v2}, Landroid/view/animation/AnimationUtils;->loadAnimation(Landroid/content/Context;I)Landroid/view/animation/Animation;

    move-result-object v0

    .line 22304
    goto :goto_19

    .line 22306
    :pswitch_4a
    iget-object v1, p0, mContext:Landroid/content/Context;

    const v2, 0x10a0015

    invoke-static {v1, v2}, Landroid/view/animation/AnimationUtils;->loadAnimation(Landroid/content/Context;I)Landroid/view/animation/Animation;

    move-result-object v0

    .line 22307
    goto :goto_19

    .line 22309
    :pswitch_54
    iget-object v1, p0, mContext:Landroid/content/Context;

    const v2, 0x10a0014

    invoke-static {v1, v2}, Landroid/view/animation/AnimationUtils;->loadAnimation(Landroid/content/Context;I)Landroid/view/animation/Animation;

    move-result-object v0

    .line 22310
    goto :goto_19

    .line 22316
    :cond_5e
    iget v1, p0, mRotation:I

    packed-switch v1, :pswitch_data_98

    .line 22327
    iget-object v1, p0, mContext:Landroid/content/Context;

    const v2, 0x10a001a

    invoke-static {v1, v2}, Landroid/view/animation/AnimationUtils;->loadAnimation(Landroid/content/Context;I)Landroid/view/animation/Animation;

    move-result-object v0

    goto :goto_19

    .line 22318
    :pswitch_6d
    iget-object v1, p0, mContext:Landroid/content/Context;

    const v2, 0x10a001b

    invoke-static {v1, v2}, Landroid/view/animation/AnimationUtils;->loadAnimation(Landroid/content/Context;I)Landroid/view/animation/Animation;

    move-result-object v0

    .line 22319
    goto :goto_19

    .line 22321
    :pswitch_77
    iget-object v1, p0, mContext:Landroid/content/Context;

    const v2, 0x10a0019

    invoke-static {v1, v2}, Landroid/view/animation/AnimationUtils;->loadAnimation(Landroid/content/Context;I)Landroid/view/animation/Animation;

    move-result-object v0

    .line 22322
    goto :goto_19

    .line 22324
    :pswitch_81
    iget-object v1, p0, mContext:Landroid/content/Context;

    const v2, 0x10a0018

    invoke-static {v1, v2}, Landroid/view/animation/AnimationUtils;->loadAnimation(Landroid/content/Context;I)Landroid/view/animation/Animation;

    move-result-object v0

    .line 22325
    goto :goto_19

    .line 22339
    :catchall_8b
    move-exception v1

    :try_start_8c
    monitor-exit v2
    :try_end_8d
    .catchall {:try_start_8c .. :try_end_8d} :catchall_8b

    throw v1

    .line 22301
    :pswitch_data_8e
    .packed-switch 0x1
        :pswitch_40
        :pswitch_4a
        :pswitch_54
    .end packed-switch

    .line 22316
    :pswitch_data_98
    .packed-switch 0x1
        :pswitch_6d
        :pswitch_77
        :pswitch_81
    .end packed-switch
.end method

.method public computeNewConfiguration()Landroid/content/res/Configuration;
    .registers 2

    .prologue
    .line 12434
    const/4 v0, 0x0

    invoke-virtual {p0, v0}, computeNewConfiguration(I)Landroid/content/res/Configuration;

    move-result-object v0

    return-object v0
.end method

.method public computeNewConfiguration(I)Landroid/content/res/Configuration;
    .registers 4
    .param p1, "displayId"    # I

    .prologue
    .line 12443
    iget-object v1, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v1

    .line 12449
    :try_start_3
    invoke-virtual {p0}, computeNewConfigurationLocked()Landroid/content/res/Configuration;

    move-result-object v0

    monitor-exit v1

    return-object v0

    .line 12451
    :catchall_9
    move-exception v0

    monitor-exit v1
    :try_end_b
    .catchall {:try_start_3 .. :try_end_b} :catchall_9

    throw v0
.end method

.method computeNewConfigurationLocked()Landroid/content/res/Configuration;
    .registers 2

    .prologue
    .line 12456
    const/4 v0, 0x0

    invoke-virtual {p0, v0}, computeNewConfigurationLocked(I)Landroid/content/res/Configuration;

    move-result-object v0

    return-object v0
.end method

.method computeNewConfigurationLocked(I)Landroid/content/res/Configuration;
    .registers 6
    .param p1, "displayId"    # I

    .prologue
    .line 12460
    iget-boolean v1, p0, mDisplayReady:Z

    if-nez v1, :cond_6

    .line 12461
    const/4 v0, 0x0

    .line 12476
    :goto_5
    return-object v0

    .line 12463
    :cond_6
    new-instance v0, Landroid/content/res/Configuration;

    invoke-direct {v0}, Landroid/content/res/Configuration;-><init>()V

    .line 12464
    .local v0, "config":Landroid/content/res/Configuration;
    const/4 v1, 0x0

    iput v1, v0, Landroid/content/res/Configuration;->fontScale:F

    .line 12465
    iget-object v1, p0, mContext:Landroid/content/Context;

    invoke-virtual {v1}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v1

    const-string/jumbo v2, "show_button_background"

    const/4 v3, 0x0

    invoke-static {v1, v2, v3}, Landroid/provider/Settings$System;->getInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I

    move-result v1

    iput v1, v0, Landroid/content/res/Configuration;->showButtonBackground:I

    .line 12468
    iput p1, v0, Landroid/content/res/Configuration;->displayId:I

    .line 12469
    invoke-virtual {p0, v0, p1}, computeScreenConfigurationLocked(Landroid/content/res/Configuration;I)V

    goto :goto_5
.end method

.method computeScreenConfigurationLocked(Landroid/content/res/Configuration;)V
    .registers 3
    .param p1, "config"    # Landroid/content/res/Configuration;

    .prologue
    .line 12696
    const/4 v0, 0x0

    invoke-virtual {p0, p1, v0}, computeScreenConfigurationLocked(Landroid/content/res/Configuration;I)V

    .line 12697
    return-void
.end method

.method computeScreenConfigurationLocked(Landroid/content/res/Configuration;I)V
    .registers 22
    .param p1, "config"    # Landroid/content/res/Configuration;
    .param p2, "displayId"    # I

    .prologue
    .line 12704
    move-object/from16 v0, p0

    move/from16 v1, p2

    invoke-virtual {v0, v1}, updateDisplayAndOrientationLocked(I)Landroid/view/DisplayInfo;

    move-result-object v3

    .line 12710
    .local v3, "displayInfo":Landroid/view/DisplayInfo;
    if-eqz p1, :cond_199

    .line 12711
    iget v5, v3, Landroid/view/DisplayInfo;->logicalWidth:I

    .line 12712
    .local v5, "dw":I
    iget v6, v3, Landroid/view/DisplayInfo;->logicalHeight:I

    .line 12718
    .local v6, "dh":I
    move-object/from16 v0, p0

    iget v15, v0, mRotation:I

    .line 12721
    .local v15, "mRotation":I
    if-gt v5, v6, :cond_103

    const/4 v2, 0x1

    :goto_15
    move-object/from16 v0, p1

    iput v2, v0, Landroid/content/res/Configuration;->orientation:I

    .line 12723
    move-object/from16 v0, p0

    iget-object v2, v0, mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v2, v5, v6, v15}, Landroid/view/WindowManagerPolicy;->getConfigDisplayWidth(III)I

    move-result v2

    int-to-float v2, v2

    move-object/from16 v0, p0

    iget-object v7, v0, mDisplayMetrics:Landroid/util/DisplayMetrics;

    iget v7, v7, Landroid/util/DisplayMetrics;->density:F

    div-float/2addr v2, v7

    float-to-int v2, v2

    move-object/from16 v0, p1

    iput v2, v0, Landroid/content/res/Configuration;->screenWidthDp:I

    .line 12725
    move-object/from16 v0, p0

    iget-object v2, v0, mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v2, v5, v6, v15}, Landroid/view/WindowManagerPolicy;->getConfigDisplayHeight(III)I

    move-result v2

    int-to-float v2, v2

    move-object/from16 v0, p0

    iget-object v7, v0, mDisplayMetrics:Landroid/util/DisplayMetrics;

    iget v7, v7, Landroid/util/DisplayMetrics;->density:F

    div-float/2addr v2, v7

    float-to-int v2, v2

    move-object/from16 v0, p1

    iput v2, v0, Landroid/content/res/Configuration;->screenHeightDp:I

    .line 12727
    const/4 v2, 0x1

    if-eq v15, v2, :cond_49

    const/4 v2, 0x3

    if-ne v15, v2, :cond_106

    :cond_49
    const/4 v4, 0x1

    .line 12729
    .local v4, "rotated":Z
    :goto_4a
    move-object/from16 v0, p0

    iget-object v2, v0, mDisplayMetrics:Landroid/util/DisplayMetrics;

    iget v7, v2, Landroid/util/DisplayMetrics;->density:F

    move-object/from16 v2, p0

    move-object/from16 v8, p1

    invoke-direct/range {v2 .. v8}, computeSizeRangesAndScreenLayout(Landroid/view/DisplayInfo;ZIIFLandroid/content/res/Configuration;)V

    .line 12732
    move-object/from16 v0, p1

    iget v2, v0, Landroid/content/res/Configuration;->screenLayout:I

    and-int/lit16 v7, v2, -0x301

    iget v2, v3, Landroid/view/DisplayInfo;->flags:I

    and-int/lit8 v2, v2, 0x10

    if-eqz v2, :cond_109

    const/16 v2, 0x200

    :goto_65
    or-int/2addr v2, v7

    move-object/from16 v0, p1

    iput v2, v0, Landroid/content/res/Configuration;->screenLayout:I

    .line 12737
    move-object/from16 v0, p1

    iget v2, v0, Landroid/content/res/Configuration;->screenWidthDp:I

    int-to-float v2, v2

    move-object/from16 v0, p0

    iget v7, v0, mCompatibleScreenScale:F

    div-float/2addr v2, v7

    float-to-int v2, v2

    move-object/from16 v0, p1

    iput v2, v0, Landroid/content/res/Configuration;->compatScreenWidthDp:I

    .line 12738
    move-object/from16 v0, p1

    iget v2, v0, Landroid/content/res/Configuration;->screenHeightDp:I

    int-to-float v2, v2

    move-object/from16 v0, p0

    iget v7, v0, mCompatibleScreenScale:F

    div-float/2addr v2, v7

    float-to-int v2, v2

    move-object/from16 v0, p1

    iput v2, v0, Landroid/content/res/Configuration;->compatScreenHeightDp:I

    .line 12739
    move-object/from16 v0, p0

    iget-object v2, v0, mDisplayMetrics:Landroid/util/DisplayMetrics;

    move-object/from16 v0, p0

    invoke-direct {v0, v4, v2, v5, v6}, computeCompatSmallestWidth(ZLandroid/util/DisplayMetrics;II)I

    move-result v2

    move-object/from16 v0, p1

    iput v2, v0, Landroid/content/res/Configuration;->compatSmallestScreenWidthDp:I

    .line 12741
    iget v2, v3, Landroid/view/DisplayInfo;->logicalDensityDpi:I

    move-object/from16 v0, p1

    iput v2, v0, Landroid/content/res/Configuration;->densityDpi:I

    .line 12745
    const/4 v2, 0x1

    move-object/from16 v0, p1

    iput v2, v0, Landroid/content/res/Configuration;->touchscreen:I

    .line 12746
    const/4 v2, 0x1

    move-object/from16 v0, p1

    iput v2, v0, Landroid/content/res/Configuration;->keyboard:I

    .line 12747
    const/4 v2, 0x1

    move-object/from16 v0, p1

    iput v2, v0, Landroid/content/res/Configuration;->navigation:I

    .line 12749
    const/4 v13, 0x0

    .line 12750
    .local v13, "keyboardPresence":I
    const/16 v16, 0x0

    .line 12751
    .local v16, "navigationPresence":I
    move-object/from16 v0, p0

    iget-object v2, v0, mInputManager:Lcom/android/server/input/InputManagerService;

    invoke-virtual {v2}, Lcom/android/server/input/InputManagerService;->getInputDevices()[Landroid/view/InputDevice;

    move-result-object v10

    .line 12752
    .local v10, "devices":[Landroid/view/InputDevice;
    array-length v14, v10

    .line 12753
    .local v14, "len":I
    const/4 v12, 0x0

    .local v12, "i":I
    :goto_b8
    if-ge v12, v14, :cond_13c

    .line 12754
    aget-object v9, v10, v12

    .line 12755
    .local v9, "device":Landroid/view/InputDevice;
    invoke-virtual {v9}, Landroid/view/InputDevice;->isVirtual()Z

    move-result v2

    if-nez v2, :cond_100

    .line 12756
    invoke-virtual {v9}, Landroid/view/InputDevice;->getSources()I

    move-result v18

    .line 12757
    .local v18, "sources":I
    invoke-virtual {v9}, Landroid/view/InputDevice;->isExternal()Z

    move-result v2

    if-eqz v2, :cond_10d

    const/16 v17, 0x2

    .line 12761
    .local v17, "presenceFlag":I
    :goto_ce
    move-object/from16 v0, p0

    iget-boolean v2, v0, mIsTouchDevice:Z

    if-eqz v2, :cond_110

    .line 12762
    move/from16 v0, v18

    and-int/lit16 v2, v0, 0x1002

    const/16 v7, 0x1002

    if-ne v2, v7, :cond_e1

    .line 12764
    const/4 v2, 0x3

    move-object/from16 v0, p1

    iput v2, v0, Landroid/content/res/Configuration;->touchscreen:I

    .line 12770
    :cond_e1
    :goto_e1
    const v2, 0x10004

    and-int v2, v2, v18

    const v7, 0x10004

    if-ne v2, v7, :cond_116

    .line 12771
    const/4 v2, 0x3

    move-object/from16 v0, p1

    iput v2, v0, Landroid/content/res/Configuration;->navigation:I

    .line 12772
    or-int v16, v16, v17

    .line 12779
    :cond_f2
    :goto_f2
    invoke-virtual {v9}, Landroid/view/InputDevice;->getKeyboardType()I

    move-result v2

    const/4 v7, 0x2

    if-ne v2, v7, :cond_12d

    .line 12780
    const/4 v2, 0x2

    move-object/from16 v0, p1

    iput v2, v0, Landroid/content/res/Configuration;->keyboard:I

    .line 12781
    or-int v13, v13, v17

    .line 12753
    .end local v17    # "presenceFlag":I
    .end local v18    # "sources":I
    :cond_100
    :goto_100
    add-int/lit8 v12, v12, 0x1

    goto :goto_b8

    .line 12721
    .end local v4    # "rotated":Z
    .end local v9    # "device":Landroid/view/InputDevice;
    .end local v10    # "devices":[Landroid/view/InputDevice;
    .end local v12    # "i":I
    .end local v13    # "keyboardPresence":I
    .end local v14    # "len":I
    .end local v16    # "navigationPresence":I
    :cond_103
    const/4 v2, 0x2

    goto/16 :goto_15

    .line 12727
    :cond_106
    const/4 v4, 0x0

    goto/16 :goto_4a

    .line 12732
    .restart local v4    # "rotated":Z
    :cond_109
    const/16 v2, 0x100

    goto/16 :goto_65

    .line 12757
    .restart local v9    # "device":Landroid/view/InputDevice;
    .restart local v10    # "devices":[Landroid/view/InputDevice;
    .restart local v12    # "i":I
    .restart local v13    # "keyboardPresence":I
    .restart local v14    # "len":I
    .restart local v16    # "navigationPresence":I
    .restart local v18    # "sources":I
    :cond_10d
    const/16 v17, 0x1

    goto :goto_ce

    .line 12767
    .restart local v17    # "presenceFlag":I
    :cond_110
    const/4 v2, 0x1

    move-object/from16 v0, p1

    iput v2, v0, Landroid/content/res/Configuration;->touchscreen:I

    goto :goto_e1

    .line 12773
    :cond_116
    move/from16 v0, v18

    and-int/lit16 v2, v0, 0x201

    const/16 v7, 0x201

    if-ne v2, v7, :cond_f2

    move-object/from16 v0, p1

    iget v2, v0, Landroid/content/res/Configuration;->navigation:I

    const/4 v7, 0x1

    if-ne v2, v7, :cond_f2

    .line 12775
    const/4 v2, 0x2

    move-object/from16 v0, p1

    iput v2, v0, Landroid/content/res/Configuration;->navigation:I

    .line 12776
    or-int v16, v16, v17

    goto :goto_f2

    .line 12782
    :cond_12d
    invoke-virtual {v9}, Landroid/view/InputDevice;->getKeyboardType()I

    move-result v2

    const/4 v7, 0x3

    if-ne v2, v7, :cond_100

    .line 12783
    const/4 v2, 0x3

    move-object/from16 v0, p1

    iput v2, v0, Landroid/content/res/Configuration;->keyboard:I

    .line 12784
    or-int v13, v13, v17

    goto :goto_100

    .line 12789
    .end local v9    # "device":Landroid/view/InputDevice;
    .end local v17    # "presenceFlag":I
    .end local v18    # "sources":I
    :cond_13c
    move-object/from16 v0, p1

    iget v2, v0, Landroid/content/res/Configuration;->navigation:I

    const/4 v7, 0x1

    if-ne v2, v7, :cond_150

    move-object/from16 v0, p0

    iget-boolean v2, v0, mHasPermanentDpad:Z

    if-eqz v2, :cond_150

    .line 12790
    const/4 v2, 0x2

    move-object/from16 v0, p1

    iput v2, v0, Landroid/content/res/Configuration;->navigation:I

    .line 12791
    or-int/lit8 v16, v16, 0x1

    .line 12795
    :cond_150
    move-object/from16 v0, p1

    iget v2, v0, Landroid/content/res/Configuration;->keyboard:I

    const/4 v7, 0x1

    if-eq v2, v7, :cond_19a

    const/4 v11, 0x1

    .line 12796
    .local v11, "hardKeyboardAvailable":Z
    :goto_158
    move-object/from16 v0, p0

    iget-boolean v2, v0, mHardKeyboardAvailable:Z

    if-eq v11, v2, :cond_174

    .line 12797
    move-object/from16 v0, p0

    iput-boolean v11, v0, mHardKeyboardAvailable:Z

    .line 12798
    move-object/from16 v0, p0

    iget-object v2, v0, mH:Lcom/android/server/wm/WindowManagerService$H;

    const/16 v7, 0x16

    invoke-virtual {v2, v7}, Lcom/android/server/wm/WindowManagerService$H;->removeMessages(I)V

    .line 12799
    move-object/from16 v0, p0

    iget-object v2, v0, mH:Lcom/android/server/wm/WindowManagerService$H;

    const/16 v7, 0x16

    invoke-virtual {v2, v7}, Lcom/android/server/wm/WindowManagerService$H;->sendEmptyMessage(I)Z

    .line 12801
    :cond_174
    move-object/from16 v0, p0

    iget-boolean v2, v0, mShowImeWithHardKeyboard:Z

    if-eqz v2, :cond_17f

    .line 12802
    const/4 v2, 0x1

    move-object/from16 v0, p1

    iput v2, v0, Landroid/content/res/Configuration;->keyboard:I

    .line 12806
    :cond_17f
    const/4 v2, 0x1

    move-object/from16 v0, p1

    iput v2, v0, Landroid/content/res/Configuration;->keyboardHidden:I

    .line 12807
    const/4 v2, 0x1

    move-object/from16 v0, p1

    iput v2, v0, Landroid/content/res/Configuration;->hardKeyboardHidden:I

    .line 12808
    const/4 v2, 0x1

    move-object/from16 v0, p1

    iput v2, v0, Landroid/content/res/Configuration;->navigationHidden:I

    .line 12809
    move-object/from16 v0, p0

    iget-object v2, v0, mPolicy:Landroid/view/WindowManagerPolicy;

    move-object/from16 v0, p1

    move/from16 v1, v16

    invoke-interface {v2, v0, v13, v1}, Landroid/view/WindowManagerPolicy;->adjustConfigurationLw(Landroid/content/res/Configuration;II)V

    .line 12811
    .end local v4    # "rotated":Z
    .end local v5    # "dw":I
    .end local v6    # "dh":I
    .end local v10    # "devices":[Landroid/view/InputDevice;
    .end local v11    # "hardKeyboardAvailable":Z
    .end local v12    # "i":I
    .end local v13    # "keyboardPresence":I
    .end local v14    # "len":I
    .end local v15    # "mRotation":I
    .end local v16    # "navigationPresence":I
    :cond_199
    return-void

    .line 12795
    .restart local v4    # "rotated":Z
    .restart local v5    # "dw":I
    .restart local v6    # "dh":I
    .restart local v10    # "devices":[Landroid/view/InputDevice;
    .restart local v12    # "i":I
    .restart local v13    # "keyboardPresence":I
    .restart local v14    # "len":I
    .restart local v15    # "mRotation":I
    .restart local v16    # "navigationPresence":I
    :cond_19a
    const/4 v11, 0x0

    goto :goto_158
.end method

.method copyAnimToLayoutParamsLocked()Z
    .registers 6

    .prologue
    const/4 v4, 0x1

    .line 18071
    const/4 v1, 0x0

    .line 18073
    .local v1, "doRequest":Z
    iget-object v2, p0, mAnimator:Lcom/android/server/wm/WindowAnimator;

    iget v0, v2, Lcom/android/server/wm/WindowAnimator;->mBulkUpdateParams:I

    .line 18074
    .local v0, "bulkUpdateParams":I
    and-int/lit8 v2, v0, 0x1

    if-eqz v2, :cond_10

    .line 18075
    iget-object v2, p0, mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    # setter for: Lcom/android/server/wm/WindowManagerService$LayoutFields;->mUpdateRotation:Z
    invoke-static {v2, v4}, Lcom/android/server/wm/WindowManagerService$LayoutFields;->access$3102(Lcom/android/server/wm/WindowManagerService$LayoutFields;Z)Z

    .line 18076
    const/4 v1, 0x1

    .line 18078
    :cond_10
    and-int/lit8 v2, v0, 0x2

    if-eqz v2, :cond_19

    .line 18079
    iget-object v2, p0, mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    iput-boolean v4, v2, Lcom/android/server/wm/WindowManagerService$LayoutFields;->mWallpaperMayChange:Z

    .line 18080
    const/4 v1, 0x1

    .line 18082
    :cond_19
    and-int/lit8 v2, v0, 0x4

    if-eqz v2, :cond_22

    .line 18083
    iget-object v2, p0, mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    iput-boolean v4, v2, Lcom/android/server/wm/WindowManagerService$LayoutFields;->mWallpaperForceHidingChanged:Z

    .line 18084
    const/4 v1, 0x1

    .line 18086
    :cond_22
    and-int/lit8 v2, v0, 0x8

    if-nez v2, :cond_3a

    .line 18087
    iget-object v2, p0, mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    const/4 v3, 0x0

    iput-boolean v3, v2, Lcom/android/server/wm/WindowManagerService$LayoutFields;->mOrientationChangeComplete:Z

    .line 18095
    :cond_2b
    :goto_2b
    and-int/lit8 v2, v0, 0x10

    if-eqz v2, :cond_31

    .line 18096
    iput-boolean v4, p0, mTurnOnScreen:Z

    .line 18098
    :cond_31
    and-int/lit8 v2, v0, 0x20

    if-eqz v2, :cond_39

    .line 18099
    iget-object v2, p0, mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    iput-boolean v4, v2, Lcom/android/server/wm/WindowManagerService$LayoutFields;->mWallpaperActionPending:Z

    .line 18102
    :cond_39
    return v1

    .line 18089
    :cond_3a
    iget-object v2, p0, mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    iput-boolean v4, v2, Lcom/android/server/wm/WindowManagerService$LayoutFields;->mOrientationChangeComplete:Z

    .line 18090
    iget-object v2, p0, mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    iget-object v3, p0, mAnimator:Lcom/android/server/wm/WindowAnimator;

    iget-object v3, v3, Lcom/android/server/wm/WindowAnimator;->mLastWindowFreezeSource:Ljava/lang/Object;

    iput-object v3, v2, Lcom/android/server/wm/WindowManagerService$LayoutFields;->mLastWindowFreezeSource:Ljava/lang/Object;

    .line 18091
    iget v2, p0, mWindowsFreezingScreen:I

    if-eqz v2, :cond_2b

    .line 18092
    const/4 v1, 0x1

    goto :goto_2b
.end method

.method public createDisplayContentLocked(Landroid/view/Display;)V
    .registers 4
    .param p1, "display"    # Landroid/view/Display;

    .prologue
    .line 20051
    if-nez p1, :cond_b

    .line 20052
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string/jumbo v1, "getDisplayContent: display must not be null"

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 20054
    :cond_b
    invoke-virtual {p1}, Landroid/view/Display;->getDisplayId()I

    move-result v0

    invoke-virtual {p0, v0}, getDisplayContentLocked(I)Lcom/android/server/wm/DisplayContent;

    .line 20055
    return-void
.end method

.method public createMultiWindowFreezeSurface()V
    .registers 2

    .prologue
    .line 21188
    const/4 v0, 0x0

    invoke-virtual {p0, v0}, createMultiWindowFreezeSurface(I)V

    .line 21189
    return-void
.end method

.method public createMultiWindowFreezeSurface(I)V
    .registers 5
    .param p1, "displayId"    # I

    .prologue
    .line 21192
    iget-object v2, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v2

    .line 21193
    :try_start_3
    invoke-virtual {p0, p1}, getMultiWindowTransitionLocked(I)Lcom/android/server/wm/MultiWindowTransition;

    move-result-object v0

    .line 21194
    .local v0, "transition":Lcom/android/server/wm/MultiWindowTransition;
    const/4 v1, 0x1

    invoke-virtual {v0, v1}, Lcom/android/server/wm/MultiWindowTransition;->createFreezeSurface(Z)V

    .line 21195
    monitor-exit v2

    .line 21196
    return-void

    .line 21195
    .end local v0    # "transition":Lcom/android/server/wm/MultiWindowTransition;
    :catchall_d
    move-exception v1

    monitor-exit v2
    :try_end_f
    .catchall {:try_start_3 .. :try_end_f} :catchall_d

    throw v1
.end method

.method createWatermarkInTransaction()V
    .registers 12

    .prologue
    .line 19026
    iget-object v7, p0, mWatermark:Lcom/android/server/wm/Watermark;

    if-eqz v7, :cond_5

    .line 19059
    :cond_4
    :goto_4
    return-void

    .line 19030
    :cond_5
    new-instance v0, Ljava/io/File;

    const-string v7, "/system/etc/setup.conf"

    invoke-direct {v0, v7}, Ljava/io/File;-><init>(Ljava/lang/String;)V

    .line 19031
    .local v0, "file":Ljava/io/File;
    const/4 v1, 0x0

    .line 19032
    .local v1, "in":Ljava/io/FileInputStream;
    const/4 v3, 0x0

    .line 19034
    .local v3, "ind":Ljava/io/DataInputStream;
    :try_start_e
    new-instance v2, Ljava/io/FileInputStream;

    invoke-direct {v2, v0}, Ljava/io/FileInputStream;-><init>(Ljava/io/File;)V
    :try_end_13
    .catch Ljava/io/FileNotFoundException; {:try_start_e .. :try_end_13} :catch_54
    .catch Ljava/io/IOException; {:try_start_e .. :try_end_13} :catch_65
    .catchall {:try_start_e .. :try_end_13} :catchall_76

    .line 19035
    .end local v1    # "in":Ljava/io/FileInputStream;
    .local v2, "in":Ljava/io/FileInputStream;
    :try_start_13
    new-instance v4, Ljava/io/DataInputStream;

    invoke-direct {v4, v2}, Ljava/io/DataInputStream;-><init>(Ljava/io/InputStream;)V
    :try_end_18
    .catch Ljava/io/FileNotFoundException; {:try_start_13 .. :try_end_18} :catch_95
    .catch Ljava/io/IOException; {:try_start_13 .. :try_end_18} :catch_8e
    .catchall {:try_start_13 .. :try_end_18} :catchall_87

    .line 19036
    .end local v3    # "ind":Ljava/io/DataInputStream;
    .local v4, "ind":Ljava/io/DataInputStream;
    :try_start_18
    invoke-virtual {v4}, Ljava/io/DataInputStream;->readLine()Ljava/lang/String;

    move-result-object v5

    .line 19037
    .local v5, "line":Ljava/lang/String;
    if-eqz v5, :cond_3c

    .line 19038
    const-string v7, "%"

    invoke-virtual {v5, v7}, Ljava/lang/String;->split(Ljava/lang/String;)[Ljava/lang/String;

    move-result-object v6

    .line 19039
    .local v6, "toks":[Ljava/lang/String;
    if-eqz v6, :cond_3c

    array-length v7, v6

    if-lez v7, :cond_3c

    .line 19040
    new-instance v7, Lcom/android/server/wm/Watermark;

    invoke-virtual {p0}, getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v8

    invoke-virtual {v8}, Lcom/android/server/wm/DisplayContent;->getDisplay()Landroid/view/Display;

    move-result-object v8

    iget-object v9, p0, mRealDisplayMetrics:Landroid/util/DisplayMetrics;

    iget-object v10, p0, mFxSession:Landroid/view/SurfaceSession;

    invoke-direct {v7, v8, v9, v10, v6}, Lcom/android/server/wm/Watermark;-><init>(Landroid/view/Display;Landroid/util/DisplayMetrics;Landroid/view/SurfaceSession;[Ljava/lang/String;)V

    iput-object v7, p0, mWatermark:Lcom/android/server/wm/Watermark;
    :try_end_3c
    .catch Ljava/io/FileNotFoundException; {:try_start_18 .. :try_end_3c} :catch_98
    .catch Ljava/io/IOException; {:try_start_18 .. :try_end_3c} :catch_91
    .catchall {:try_start_18 .. :try_end_3c} :catchall_8a

    .line 19047
    .end local v6    # "toks":[Ljava/lang/String;
    :cond_3c
    if-eqz v4, :cond_48

    .line 19049
    :try_start_3e
    invoke-virtual {v4}, Ljava/io/DataInputStream;->close()V
    :try_end_41
    .catch Ljava/io/IOException; {:try_start_3e .. :try_end_41} :catch_44

    move-object v3, v4

    .end local v4    # "ind":Ljava/io/DataInputStream;
    .restart local v3    # "ind":Ljava/io/DataInputStream;
    move-object v1, v2

    .line 19051
    .end local v2    # "in":Ljava/io/FileInputStream;
    .restart local v1    # "in":Ljava/io/FileInputStream;
    goto :goto_4

    .line 19050
    .end local v1    # "in":Ljava/io/FileInputStream;
    .end local v3    # "ind":Ljava/io/DataInputStream;
    .restart local v2    # "in":Ljava/io/FileInputStream;
    .restart local v4    # "ind":Ljava/io/DataInputStream;
    :catch_44
    move-exception v7

    move-object v3, v4

    .end local v4    # "ind":Ljava/io/DataInputStream;
    .restart local v3    # "ind":Ljava/io/DataInputStream;
    move-object v1, v2

    .line 19051
    .end local v2    # "in":Ljava/io/FileInputStream;
    .restart local v1    # "in":Ljava/io/FileInputStream;
    goto :goto_4

    .line 19052
    .end local v1    # "in":Ljava/io/FileInputStream;
    .end local v3    # "ind":Ljava/io/DataInputStream;
    .restart local v2    # "in":Ljava/io/FileInputStream;
    .restart local v4    # "ind":Ljava/io/DataInputStream;
    :cond_48
    if-eqz v2, :cond_9c

    .line 19054
    :try_start_4a
    invoke-virtual {v2}, Ljava/io/FileInputStream;->close()V
    :try_end_4d
    .catch Ljava/io/IOException; {:try_start_4a .. :try_end_4d} :catch_50

    move-object v3, v4

    .end local v4    # "ind":Ljava/io/DataInputStream;
    .restart local v3    # "ind":Ljava/io/DataInputStream;
    move-object v1, v2

    .line 19056
    .end local v2    # "in":Ljava/io/FileInputStream;
    .restart local v1    # "in":Ljava/io/FileInputStream;
    goto :goto_4

    .line 19055
    .end local v1    # "in":Ljava/io/FileInputStream;
    .end local v3    # "ind":Ljava/io/DataInputStream;
    .restart local v2    # "in":Ljava/io/FileInputStream;
    .restart local v4    # "ind":Ljava/io/DataInputStream;
    :catch_50
    move-exception v7

    move-object v3, v4

    .end local v4    # "ind":Ljava/io/DataInputStream;
    .restart local v3    # "ind":Ljava/io/DataInputStream;
    move-object v1, v2

    .line 19056
    .end local v2    # "in":Ljava/io/FileInputStream;
    .restart local v1    # "in":Ljava/io/FileInputStream;
    goto :goto_4

    .line 19044
    .end local v5    # "line":Ljava/lang/String;
    :catch_54
    move-exception v7

    .line 19047
    :goto_55
    if-eqz v3, :cond_5d

    .line 19049
    :try_start_57
    invoke-virtual {v3}, Ljava/io/DataInputStream;->close()V
    :try_end_5a
    .catch Ljava/io/IOException; {:try_start_57 .. :try_end_5a} :catch_5b

    goto :goto_4

    .line 19050
    :catch_5b
    move-exception v7

    goto :goto_4

    .line 19052
    :cond_5d
    if-eqz v1, :cond_4

    .line 19054
    :try_start_5f
    invoke-virtual {v1}, Ljava/io/FileInputStream;->close()V
    :try_end_62
    .catch Ljava/io/IOException; {:try_start_5f .. :try_end_62} :catch_63

    goto :goto_4

    .line 19055
    :catch_63
    move-exception v7

    goto :goto_4

    .line 19045
    :catch_65
    move-exception v7

    .line 19047
    :goto_66
    if-eqz v3, :cond_6e

    .line 19049
    :try_start_68
    invoke-virtual {v3}, Ljava/io/DataInputStream;->close()V
    :try_end_6b
    .catch Ljava/io/IOException; {:try_start_68 .. :try_end_6b} :catch_6c

    goto :goto_4

    .line 19050
    :catch_6c
    move-exception v7

    goto :goto_4

    .line 19052
    :cond_6e
    if-eqz v1, :cond_4

    .line 19054
    :try_start_70
    invoke-virtual {v1}, Ljava/io/FileInputStream;->close()V
    :try_end_73
    .catch Ljava/io/IOException; {:try_start_70 .. :try_end_73} :catch_74

    goto :goto_4

    .line 19055
    :catch_74
    move-exception v7

    goto :goto_4

    .line 19047
    :catchall_76
    move-exception v7

    :goto_77
    if-eqz v3, :cond_7d

    .line 19049
    :try_start_79
    invoke-virtual {v3}, Ljava/io/DataInputStream;->close()V
    :try_end_7c
    .catch Ljava/io/IOException; {:try_start_79 .. :try_end_7c} :catch_85

    .line 19056
    :cond_7c
    :goto_7c
    throw v7

    .line 19052
    :cond_7d
    if-eqz v1, :cond_7c

    .line 19054
    :try_start_7f
    invoke-virtual {v1}, Ljava/io/FileInputStream;->close()V
    :try_end_82
    .catch Ljava/io/IOException; {:try_start_7f .. :try_end_82} :catch_83

    goto :goto_7c

    .line 19055
    :catch_83
    move-exception v8

    goto :goto_7c

    .line 19050
    :catch_85
    move-exception v8

    goto :goto_7c

    .line 19047
    .end local v1    # "in":Ljava/io/FileInputStream;
    .restart local v2    # "in":Ljava/io/FileInputStream;
    :catchall_87
    move-exception v7

    move-object v1, v2

    .end local v2    # "in":Ljava/io/FileInputStream;
    .restart local v1    # "in":Ljava/io/FileInputStream;
    goto :goto_77

    .end local v1    # "in":Ljava/io/FileInputStream;
    .end local v3    # "ind":Ljava/io/DataInputStream;
    .restart local v2    # "in":Ljava/io/FileInputStream;
    .restart local v4    # "ind":Ljava/io/DataInputStream;
    :catchall_8a
    move-exception v7

    move-object v3, v4

    .end local v4    # "ind":Ljava/io/DataInputStream;
    .restart local v3    # "ind":Ljava/io/DataInputStream;
    move-object v1, v2

    .end local v2    # "in":Ljava/io/FileInputStream;
    .restart local v1    # "in":Ljava/io/FileInputStream;
    goto :goto_77

    .line 19045
    .end local v1    # "in":Ljava/io/FileInputStream;
    .restart local v2    # "in":Ljava/io/FileInputStream;
    :catch_8e
    move-exception v7

    move-object v1, v2

    .end local v2    # "in":Ljava/io/FileInputStream;
    .restart local v1    # "in":Ljava/io/FileInputStream;
    goto :goto_66

    .end local v1    # "in":Ljava/io/FileInputStream;
    .end local v3    # "ind":Ljava/io/DataInputStream;
    .restart local v2    # "in":Ljava/io/FileInputStream;
    .restart local v4    # "ind":Ljava/io/DataInputStream;
    :catch_91
    move-exception v7

    move-object v3, v4

    .end local v4    # "ind":Ljava/io/DataInputStream;
    .restart local v3    # "ind":Ljava/io/DataInputStream;
    move-object v1, v2

    .end local v2    # "in":Ljava/io/FileInputStream;
    .restart local v1    # "in":Ljava/io/FileInputStream;
    goto :goto_66

    .line 19044
    .end local v1    # "in":Ljava/io/FileInputStream;
    .restart local v2    # "in":Ljava/io/FileInputStream;
    :catch_95
    move-exception v7

    move-object v1, v2

    .end local v2    # "in":Ljava/io/FileInputStream;
    .restart local v1    # "in":Ljava/io/FileInputStream;
    goto :goto_55

    .end local v1    # "in":Ljava/io/FileInputStream;
    .end local v3    # "ind":Ljava/io/DataInputStream;
    .restart local v2    # "in":Ljava/io/FileInputStream;
    .restart local v4    # "ind":Ljava/io/DataInputStream;
    :catch_98
    move-exception v7

    move-object v3, v4

    .end local v4    # "ind":Ljava/io/DataInputStream;
    .restart local v3    # "ind":Ljava/io/DataInputStream;
    move-object v1, v2

    .end local v2    # "in":Ljava/io/FileInputStream;
    .restart local v1    # "in":Ljava/io/FileInputStream;
    goto :goto_55

    .end local v1    # "in":Ljava/io/FileInputStream;
    .end local v3    # "ind":Ljava/io/DataInputStream;
    .restart local v2    # "in":Ljava/io/FileInputStream;
    .restart local v4    # "ind":Ljava/io/DataInputStream;
    .restart local v5    # "line":Ljava/lang/String;
    :cond_9c
    move-object v3, v4

    .end local v4    # "ind":Ljava/io/DataInputStream;
    .restart local v3    # "ind":Ljava/io/DataInputStream;
    move-object v1, v2

    .end local v2    # "in":Ljava/io/FileInputStream;
    .restart local v1    # "in":Ljava/io/FileInputStream;
    goto/16 :goto_4
.end method

.method debugLayoutRepeats(Ljava/lang/String;I)V
    .registers 6
    .param p1, "msg"    # Ljava/lang/String;
    .param p2, "pendingLayoutChanges"    # I

    .prologue
    .line 19995
    iget v0, p0, mLayoutRepeatCount:I

    const/4 v1, 0x4

    if-lt v0, v1, :cond_2b

    .line 19996
    const-string v0, "WindowManager"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Layouts looping: "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, ", mPendingLayoutChanges = 0x"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-static {p2}, Ljava/lang/Integer;->toHexString(I)Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 19999
    :cond_2b
    return-void
.end method

.method public detachStack(I)V
    .registers 6
    .param p1, "stackId"    # I

    .prologue
    .line 9282
    iget-object v3, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v3

    .line 9283
    :try_start_3
    iget-object v2, p0, mStackIdToStack:Landroid/util/SparseArray;

    invoke-virtual {v2, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/wm/TaskStack;

    .line 9284
    .local v1, "stack":Lcom/android/server/wm/TaskStack;
    if-eqz v1, :cond_21

    .line 9285
    invoke-virtual {v1}, Lcom/android/server/wm/TaskStack;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    move-result-object v0

    .line 9286
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-eqz v0, :cond_21

    .line 9287
    invoke-virtual {v1}, Lcom/android/server/wm/TaskStack;->isAnimating()Z

    move-result v2

    if-eqz v2, :cond_1e

    .line 9288
    const/4 v2, 0x1

    iput-boolean v2, v1, Lcom/android/server/wm/TaskStack;->mDeferDetach:Z

    .line 9289
    monitor-exit v3

    .line 9295
    .end local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :goto_1d
    return-void

    .line 9291
    .restart local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :cond_1e
    invoke-virtual {p0, v0, v1}, detachStackLocked(Lcom/android/server/wm/DisplayContent;Lcom/android/server/wm/TaskStack;)V

    .line 9294
    .end local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :cond_21
    monitor-exit v3

    goto :goto_1d

    .end local v1    # "stack":Lcom/android/server/wm/TaskStack;
    :catchall_23
    move-exception v2

    monitor-exit v3
    :try_end_25
    .catchall {:try_start_3 .. :try_end_25} :catchall_23

    throw v2
.end method

.method detachStackLocked(Lcom/android/server/wm/DisplayContent;Lcom/android/server/wm/TaskStack;)V
    .registers 3
    .param p1, "displayContent"    # Lcom/android/server/wm/DisplayContent;
    .param p2, "stack"    # Lcom/android/server/wm/TaskStack;

    .prologue
    .line 9277
    invoke-virtual {p1, p2}, Lcom/android/server/wm/DisplayContent;->detachStack(Lcom/android/server/wm/TaskStack;)V

    .line 9278
    invoke-virtual {p2}, Lcom/android/server/wm/TaskStack;->detachDisplay()V

    .line 9279
    return-void
.end method

.method public detectSafeMode()Z
    .registers 15

    .prologue
    const/4 v8, 0x1

    const/16 v13, -0x100

    const/4 v7, 0x0

    const/4 v12, -0x1

    .line 13025
    iget-object v9, p0, mContext:Landroid/content/Context;

    const-string/jumbo v10, "enterprise_policy"

    invoke-virtual {v9, v10}, Landroid/content/Context;->getSystemService(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Landroid/app/enterprise/EnterpriseDeviceManager;

    .line 13027
    .local v1, "edm":Landroid/app/enterprise/EnterpriseDeviceManager;
    if-eqz v1, :cond_2a

    invoke-virtual {v1}, Landroid/app/enterprise/EnterpriseDeviceManager;->getRestrictionPolicy()Landroid/app/enterprise/RestrictionPolicy;

    move-result-object v9

    if-eqz v9, :cond_2a

    invoke-virtual {v1}, Landroid/app/enterprise/EnterpriseDeviceManager;->getRestrictionPolicy()Landroid/app/enterprise/RestrictionPolicy;

    move-result-object v9

    invoke-virtual {v9}, Landroid/app/enterprise/RestrictionPolicy;->isSafeModeAllowed()Z

    move-result v9

    if-nez v9, :cond_2a

    .line 13029
    const-string v8, "WindowManager"

    const-string v9, "SAFE MODE is not allowed"

    invoke-static {v8, v9}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 13078
    :goto_29
    return v7

    .line 13034
    :cond_2a
    iget-object v9, p0, mContext:Landroid/content/Context;

    const-string/jumbo v10, "user"

    invoke-virtual {v9, v10}, Landroid/content/Context;->getSystemService(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Landroid/os/UserManager;

    .line 13035
    .local v5, "um":Landroid/os/UserManager;
    const-string/jumbo v9, "no_safe_boot"

    invoke-virtual {v5, v9}, Landroid/os/UserManager;->hasUserRestriction(Ljava/lang/String;)Z

    move-result v9

    if-eqz v9, :cond_46

    .line 13036
    const-string v8, "WindowManager"

    const-string v9, "SAFE MODE is not allowed"

    invoke-static {v8, v9}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_29

    .line 13040
    :cond_46
    iget-object v9, p0, mInputMonitor:Lcom/android/server/wm/InputMonitor;

    const-wide/16 v10, 0x3e8

    invoke-virtual {v9, v10, v11}, Lcom/android/server/wm/InputMonitor;->waitForInputDevicesReady(J)Z

    move-result v9

    if-nez v9, :cond_57

    .line 13042
    const-string v9, "WindowManager"

    const-string v10, "Devices still not ready after waiting 1000 milliseconds before attempting to detect safe mode."

    invoke-static {v9, v10}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 13047
    :cond_57
    iget-object v9, p0, mInputManager:Lcom/android/server/input/InputManagerService;

    const/16 v10, 0x52

    invoke-virtual {v9, v12, v13, v10}, Lcom/android/server/input/InputManagerService;->getKeyCodeState(III)I

    move-result v2

    .line 13049
    .local v2, "menuState":I
    iget-object v9, p0, mInputManager:Lcom/android/server/input/InputManagerService;

    const/16 v10, 0x2f

    invoke-virtual {v9, v12, v13, v10}, Lcom/android/server/input/InputManagerService;->getKeyCodeState(III)I

    move-result v3

    .line 13050
    .local v3, "sState":I
    iget-object v9, p0, mInputManager:Lcom/android/server/input/InputManagerService;

    const/16 v10, 0x201

    const/16 v11, 0x17

    invoke-virtual {v9, v12, v10, v11}, Lcom/android/server/input/InputManagerService;->getKeyCodeState(III)I

    move-result v0

    .line 13052
    .local v0, "dpadState":I
    iget-object v9, p0, mInputManager:Lcom/android/server/input/InputManagerService;

    const v10, 0x10004

    const/16 v11, 0x110

    invoke-virtual {v9, v12, v10, v11}, Lcom/android/server/input/InputManagerService;->getScanCodeState(III)I

    move-result v4

    .line 13054
    .local v4, "trackballState":I
    iget-object v9, p0, mInputManager:Lcom/android/server/input/InputManagerService;

    const/16 v10, 0x19

    invoke-virtual {v9, v12, v13, v10}, Lcom/android/server/input/InputManagerService;->getKeyCodeState(III)I

    move-result v6

    .line 13056
    .local v6, "volumeDownState":I
    if-gtz v2, :cond_8e

    if-gtz v3, :cond_8e

    if-gtz v0, :cond_8e

    if-gtz v4, :cond_8e

    if-lez v6, :cond_8f

    :cond_8e
    move v7, v8

    :cond_8f
    iput-boolean v7, p0, mSafeMode:Z

    .line 13059
    :try_start_91
    const-string/jumbo v7, "persist.sys.safemode"

    const/4 v8, 0x0

    invoke-static {v7, v8}, Landroid/os/SystemProperties;->getInt(Ljava/lang/String;I)I

    move-result v7

    if-eqz v7, :cond_f1

    .line 13060
    const/4 v7, 0x1

    iput-boolean v7, p0, mSafeMode:Z

    .line 13061
    const-string/jumbo v7, "persist.sys.safemode"

    const-string v8, ""

    invoke-static {v7, v8}, Landroid/os/SystemProperties;->set(Ljava/lang/String;Ljava/lang/String;)V
    :try_end_a6
    .catch Ljava/lang/IllegalArgumentException; {:try_start_91 .. :try_end_a6} :catch_100

    .line 13071
    :cond_a6
    :goto_a6
    iget-boolean v7, p0, mSafeMode:Z

    if-eqz v7, :cond_102

    .line 13072
    const-string v7, "WindowManager"

    new-instance v8, Ljava/lang/StringBuilder;

    invoke-direct {v8}, Ljava/lang/StringBuilder;-><init>()V

    const-string v9, "SAFE MODE ENABLED (menu="

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v8

    invoke-virtual {v8, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v8

    const-string v9, " s="

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v8

    invoke-virtual {v8, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v8

    const-string v9, " dpad="

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v8

    invoke-virtual {v8, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v8

    const-string v9, " trackball="

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v8

    invoke-virtual {v8, v4}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v8

    const-string v9, ")"

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v8

    invoke-virtual {v8}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v8

    invoke-static {v7, v8}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 13077
    :goto_e6
    iget-object v7, p0, mPolicy:Landroid/view/WindowManagerPolicy;

    iget-boolean v8, p0, mSafeMode:Z

    invoke-interface {v7, v8}, Landroid/view/WindowManagerPolicy;->setSafeMode(Z)V

    .line 13078
    iget-boolean v7, p0, mSafeMode:Z

    goto/16 :goto_29

    .line 13065
    :cond_f1
    :try_start_f1
    const-string/jumbo v7, "ro.boot_recovery"

    const/4 v8, 0x0

    invoke-static {v7, v8}, Landroid/os/SystemProperties;->getInt(Ljava/lang/String;I)I

    move-result v7

    const/4 v8, 0x3

    if-ne v7, v8, :cond_a6

    .line 13066
    const/4 v7, 0x1

    iput-boolean v7, p0, mSafeMode:Z
    :try_end_ff
    .catch Ljava/lang/IllegalArgumentException; {:try_start_f1 .. :try_end_ff} :catch_100

    goto :goto_a6

    .line 13069
    :catch_100
    move-exception v7

    goto :goto_a6

    .line 13075
    :cond_102
    const-string v7, "WindowManager"

    const-string v8, "SAFE MODE not enabled"

    invoke-static {v7, v8}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_e6
.end method

.method public dimScreen(Landroid/os/IBinder;Landroid/os/IBinder;Z)V
    .registers 8
    .param p1, "caller"    # Landroid/os/IBinder;
    .param p2, "target"    # Landroid/os/IBinder;
    .param p3, "enable"    # Z

    .prologue
    .line 22543
    iget-object v3, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v3

    .line 22544
    :try_start_3
    invoke-virtual {p0, p1}, findAppWindowToken(Landroid/os/IBinder;)Lcom/android/server/wm/AppWindowToken;

    move-result-object v0

    .line 22545
    .local v0, "callerAppWindowToken":Lcom/android/server/wm/AppWindowToken;
    invoke-virtual {p0, p2}, findAppWindowToken(Landroid/os/IBinder;)Lcom/android/server/wm/AppWindowToken;

    move-result-object v1

    .line 22546
    .local v1, "targetAppWindowToken":Lcom/android/server/wm/AppWindowToken;
    if-eqz v0, :cond_f

    .line 22547
    iput-boolean p3, v0, Lcom/android/server/wm/AppWindowToken;->requestedDimScreen:Z

    .line 22549
    :cond_f
    const/4 v2, 0x0

    invoke-virtual {p0, v0, v1, p3, v2}, dimScreenLocked(Lcom/android/server/wm/AppWindowToken;Lcom/android/server/wm/AppWindowToken;ZZ)V

    .line 22550
    monitor-exit v3

    .line 22551
    return-void

    .line 22550
    .end local v0    # "callerAppWindowToken":Lcom/android/server/wm/AppWindowToken;
    .end local v1    # "targetAppWindowToken":Lcom/android/server/wm/AppWindowToken;
    :catchall_15
    move-exception v2

    monitor-exit v3
    :try_end_17
    .catchall {:try_start_3 .. :try_end_17} :catchall_15

    throw v2
.end method

.method public dimScreenInternal(Landroid/os/IBinder;Landroid/os/IBinder;ZZ)V
    .registers 9
    .param p1, "caller"    # Landroid/os/IBinder;
    .param p2, "target"    # Landroid/os/IBinder;
    .param p3, "enable"    # Z
    .param p4, "clearAllToken"    # Z

    .prologue
    .line 22554
    iget-object v3, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v3

    .line 22555
    :try_start_3
    invoke-virtual {p0, p1}, findAppWindowToken(Landroid/os/IBinder;)Lcom/android/server/wm/AppWindowToken;

    move-result-object v0

    .line 22556
    .local v0, "callerAppWindowToken":Lcom/android/server/wm/AppWindowToken;
    invoke-virtual {p0, p2}, findAppWindowToken(Landroid/os/IBinder;)Lcom/android/server/wm/AppWindowToken;

    move-result-object v1

    .line 22557
    .local v1, "targetAppWindowToken":Lcom/android/server/wm/AppWindowToken;
    invoke-virtual {p0, v0, v1, p3, p4}, dimScreenLocked(Lcom/android/server/wm/AppWindowToken;Lcom/android/server/wm/AppWindowToken;ZZ)V

    .line 22558
    monitor-exit v3

    .line 22559
    return-void

    .line 22558
    .end local v0    # "callerAppWindowToken":Lcom/android/server/wm/AppWindowToken;
    .end local v1    # "targetAppWindowToken":Lcom/android/server/wm/AppWindowToken;
    :catchall_10
    move-exception v2

    monitor-exit v3
    :try_end_12
    .catchall {:try_start_3 .. :try_end_12} :catchall_10

    throw v2
.end method

.method public dimScreenLocked(Lcom/android/server/wm/AppWindowToken;Lcom/android/server/wm/AppWindowToken;ZZ)V
    .registers 10
    .param p1, "callerAppWindowToken"    # Lcom/android/server/wm/AppWindowToken;
    .param p2, "targetAppWindowToken"    # Lcom/android/server/wm/AppWindowToken;
    .param p3, "enable"    # Z
    .param p4, "clearAllToken"    # Z

    .prologue
    .line 22570
    if-eqz p1, :cond_28

    if-eqz p2, :cond_28

    .line 22571
    iget-object v3, p2, Lcom/android/server/wm/AppWindowToken;->allAppWindows:Lcom/android/server/wm/WindowList;

    invoke-virtual {v3}, Lcom/android/server/wm/WindowList;->size()I

    move-result v1

    .line 22572
    .local v1, "targetWindowCount":I
    if-lez v1, :cond_28

    .line 22573
    iget-object v3, p2, Lcom/android/server/wm/AppWindowToken;->allAppWindows:Lcom/android/server/wm/WindowList;

    add-int/lit8 v4, v1, -0x1

    invoke-virtual {v3, v4}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/wm/WindowState;

    .line 22574
    .local v2, "ws":Lcom/android/server/wm/WindowState;
    invoke-virtual {v2}, Lcom/android/server/wm/WindowState;->getDisplayId()I

    move-result v3

    invoke-virtual {p0, v3}, getDisplayContentLocked(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v0

    .line 22575
    .local v0, "targetDisplayContent":Lcom/android/server/wm/DisplayContent;
    if-eqz p3, :cond_29

    .line 22576
    iget-object v3, v0, Lcom/android/server/wm/DisplayContent;->mDimTokens:Ljava/util/HashMap;

    invoke-virtual {v3, p1, p2}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 22583
    :cond_25
    :goto_25
    invoke-virtual {p0}, requestTraversalLocked()V

    .line 22586
    .end local v0    # "targetDisplayContent":Lcom/android/server/wm/DisplayContent;
    .end local v1    # "targetWindowCount":I
    .end local v2    # "ws":Lcom/android/server/wm/WindowState;
    :cond_28
    return-void

    .line 22578
    .restart local v0    # "targetDisplayContent":Lcom/android/server/wm/DisplayContent;
    .restart local v1    # "targetWindowCount":I
    .restart local v2    # "ws":Lcom/android/server/wm/WindowState;
    :cond_29
    iget-object v3, v0, Lcom/android/server/wm/DisplayContent;->mDimTokens:Ljava/util/HashMap;

    invoke-virtual {v3, p1}, Ljava/util/HashMap;->containsKey(Ljava/lang/Object;)Z

    move-result v3

    if-eqz v3, :cond_25

    .line 22579
    iget-object v3, v0, Lcom/android/server/wm/DisplayContent;->mDimTokens:Ljava/util/HashMap;

    invoke-virtual {v3, p1}, Ljava/util/HashMap;->remove(Ljava/lang/Object;)Ljava/lang/Object;

    goto :goto_25
.end method

.method public disableKeyguard(Landroid/os/IBinder;Ljava/lang/String;)V
    .registers 7
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "tag"    # Ljava/lang/String;

    .prologue
    .line 9782
    iget-object v0, p0, mContext:Landroid/content/Context;

    const-string v1, "android.permission.DISABLE_KEYGUARD"

    invoke-virtual {v0, v1}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    move-result v0

    if-eqz v0, :cond_12

    .line 9784
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Requires DISABLE_KEYGUARD permission"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 9787
    :cond_12
    if-nez p1, :cond_1d

    .line 9788
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string/jumbo v1, "token == null"

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 9791
    :cond_1d
    iget-object v0, p0, mKeyguardDisableHandler:Lcom/android/server/wm/KeyguardDisableHandler;

    iget-object v1, p0, mKeyguardDisableHandler:Lcom/android/server/wm/KeyguardDisableHandler;

    const/4 v2, 0x1

    new-instance v3, Landroid/util/Pair;

    invoke-direct {v3, p1, p2}, Landroid/util/Pair;-><init>(Ljava/lang/Object;Ljava/lang/Object;)V

    invoke-virtual {v1, v2, v3}, Lcom/android/server/wm/KeyguardDisableHandler;->obtainMessage(ILjava/lang/Object;)Landroid/os/Message;

    move-result-object v1

    invoke-virtual {v0, v1}, Lcom/android/server/wm/KeyguardDisableHandler;->sendMessage(Landroid/os/Message;)Z

    .line 9793
    return-void
.end method

.method public disableSubKey(Z)V
    .registers 3
    .param p1, "disable"    # Z

    .prologue
    .line 22612
    iput-boolean p1, p0, mDisableSubKey:Z

    .line 22613
    iget-object v0, p0, mInputManager:Lcom/android/server/input/InputManagerService;

    invoke-virtual {v0, p1}, Lcom/android/server/input/InputManagerService;->sendDuplicatedKeyToFocus(Z)V

    .line 22614
    return-void
.end method

.method public dismissKeyguard()V
    .registers 3

    .prologue
    .line 9868
    iget-object v0, p0, mContext:Landroid/content/Context;

    const-string v1, "android.permission.DISABLE_KEYGUARD"

    invoke-virtual {v0, v1}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    move-result v0

    if-eqz v0, :cond_12

    .line 9870
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Requires DISABLE_KEYGUARD permission"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 9872
    :cond_12
    iget-object v1, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v1

    .line 9873
    :try_start_15
    iget-object v0, p0, mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v0}, Landroid/view/WindowManagerPolicy;->dismissKeyguardLw()V

    .line 9874
    monitor-exit v1

    .line 9875
    return-void

    .line 9874
    :catchall_1c
    move-exception v0

    monitor-exit v1
    :try_end_1e
    .catchall {:try_start_15 .. :try_end_1e} :catchall_1c

    throw v0
.end method

.method dispatchNewAnimatorScaleLocked(Lcom/android/server/wm/Session;)V
    .registers 4
    .param p1, "session"    # Lcom/android/server/wm/Session;

    .prologue
    .line 10118
    iget-object v0, p0, mH:Lcom/android/server/wm/WindowManagerService$H;

    const/16 v1, 0x22

    invoke-virtual {v0, v1, p1}, Lcom/android/server/wm/WindowManagerService$H;->obtainMessage(ILjava/lang/Object;)Landroid/os/Message;

    move-result-object v0

    invoke-virtual {v0}, Landroid/os/Message;->sendToTarget()V

    .line 10119
    return-void
.end method

.method public dispatchSmartClipRemoteRequest(IILcom/samsung/android/smartclip/SmartClipRemoteRequestInfo;Landroid/os/IBinder;)V
    .registers 10
    .param p1, "targetX"    # I
    .param p2, "targetY"    # I
    .param p3, "request"    # Lcom/samsung/android/smartclip/SmartClipRemoteRequestInfo;
    .param p4, "topToken"    # Landroid/os/IBinder;

    .prologue
    .line 20443
    if-nez p3, :cond_b

    .line 20444
    const-string v2, "WindowManager"

    const-string/jumbo v3, "dispatchSmartClipRemoteRequest : request is null!"

    invoke-static {v2, v3}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 20468
    :goto_a
    return-void

    .line 20451
    :cond_b
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v2

    iput v2, p3, Lcom/samsung/android/smartclip/SmartClipRemoteRequestInfo;->mCallerPid:I

    .line 20452
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v2

    iput v2, p3, Lcom/samsung/android/smartclip/SmartClipRemoteRequestInfo;->mCallerUid:I

    .line 20454
    int-to-float v2, p1

    int-to-float v3, p2

    invoke-direct {p0, v2, v3, p4}, findTargetWindow(FFLandroid/os/IBinder;)Lcom/android/server/wm/WindowState;

    move-result-object v1

    .line 20456
    .local v1, "target":Lcom/android/server/wm/WindowState;
    if-eqz v1, :cond_48

    .line 20458
    iget v2, v1, Lcom/android/server/wm/WindowState;->mLayer:I

    iput v2, p3, Lcom/samsung/android/smartclip/SmartClipRemoteRequestInfo;->mTargetWindowLayer:I

    .line 20460
    :try_start_23
    iget-object v2, v1, Lcom/android/server/wm/WindowState;->mClient:Landroid/view/IWindow;

    invoke-interface {v2, p3}, Landroid/view/IWindow;->dispatchSmartClipRemoteRequest(Lcom/samsung/android/smartclip/SmartClipRemoteRequestInfo;)V
    :try_end_28
    .catch Ljava/lang/Exception; {:try_start_23 .. :try_end_28} :catch_29

    goto :goto_a

    .line 20461
    :catch_29
    move-exception v0

    .line 20462
    .local v0, "e":Ljava/lang/Exception;
    const-string v2, "WindowManager"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v4, "dispatchSmartClipRemoteRequest : Failed to call IWindow.dispatchSmartClipRemoteRequest()! e="

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v0}, Ljava/lang/Exception;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_a

    .line 20465
    .end local v0    # "e":Ljava/lang/Exception;
    :cond_48
    const-string v2, "WindowManager"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v4, "dispatchSmartClipRemoteRequest : Could not find the target window! x="

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v3

    const-string v4, " y="

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_a
.end method

.method dispatchWallpaperVisibility(Lcom/android/server/wm/WindowState;Z)V
    .registers 7
    .param p1, "wallpaper"    # Lcom/android/server/wm/WindowState;
    .param p2, "visible"    # Z

    .prologue
    .line 3913
    iget-boolean v0, p1, Lcom/android/server/wm/WindowState;->mWallpaperVisible:Z

    if-eq v0, p2, :cond_4c

    iget-object v0, p0, mDeferredHideWallpaper:Lcom/android/server/wm/WindowState;

    if-eqz v0, :cond_a

    if-eqz p2, :cond_4c

    .line 3915
    :cond_a
    iput-boolean p2, p1, Lcom/android/server/wm/WindowState;->mWallpaperVisible:Z

    .line 3917
    :try_start_c
    sget-boolean v0, DEBUG_VISIBILITY:Z

    if-nez v0, :cond_14

    sget-boolean v0, DEBUG_WALLPAPER_LIGHT:Z

    if-eqz v0, :cond_47

    :cond_14
    const-string v0, "WindowManager"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Updating vis of wallpaper "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, ": "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, " from:\n"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    const/4 v2, 0x4

    const-string v3, "  "

    invoke-static {v2, v3}, Landroid/os/Debug;->getCallers(ILjava/lang/String;)Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 3920
    :cond_47
    iget-object v0, p1, Lcom/android/server/wm/WindowState;->mClient:Landroid/view/IWindow;

    invoke-interface {v0, p2}, Landroid/view/IWindow;->dispatchAppVisibility(Z)V
    :try_end_4c
    .catch Landroid/os/RemoteException; {:try_start_c .. :try_end_4c} :catch_4d

    .line 3924
    :cond_4c
    :goto_4c
    return-void

    .line 3921
    :catch_4d
    move-exception v0

    goto :goto_4c
.end method

.method public displayReady()V
    .registers 9

    .prologue
    .line 13090
    iget-object v0, p0, mDisplays:[Landroid/view/Display;

    .local v0, "arr$":[Landroid/view/Display;
    array-length v4, v0

    .local v4, "len$":I
    const/4 v3, 0x0

    .local v3, "i$":I
    :goto_4
    if-ge v3, v4, :cond_12

    aget-object v1, v0, v3

    .line 13091
    .local v1, "display":Landroid/view/Display;
    invoke-virtual {v1}, Landroid/view/Display;->getDisplayId()I

    move-result v5

    invoke-direct {p0, v5}, displayReady(I)V

    .line 13090
    add-int/lit8 v3, v3, 0x1

    goto :goto_4

    .line 13097
    .end local v1    # "display":Landroid/view/Display;
    :cond_12
    iget-object v6, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v6

    .line 13098
    :try_start_15
    invoke-virtual {p0}, getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v2

    .line 13099
    .local v2, "displayContent":Lcom/android/server/wm/DisplayContent;
    invoke-direct {p0, v2}, readForcedDisplayPropertiesLocked(Lcom/android/server/wm/DisplayContent;)V

    .line 13100
    const/4 v5, 0x1

    iput-boolean v5, p0, mDisplayReady:Z

    .line 13101
    monitor-exit v6
    :try_end_20
    .catchall {:try_start_15 .. :try_end_20} :catchall_66

    .line 13104
    :try_start_20
    iget-object v5, p0, mActivityManager:Landroid/app/IActivityManager;

    const/4 v6, 0x0

    invoke-interface {v5, v6}, Landroid/app/IActivityManager;->updateConfiguration(Landroid/content/res/Configuration;)V
    :try_end_26
    .catch Landroid/os/RemoteException; {:try_start_20 .. :try_end_26} :catch_6e

    .line 13108
    :goto_26
    iget-object v6, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v6

    .line 13109
    :try_start_29
    iget-object v5, p0, mContext:Landroid/content/Context;

    invoke-virtual {v5}, Landroid/content/Context;->getPackageManager()Landroid/content/pm/PackageManager;

    move-result-object v5

    const-string v7, "android.hardware.touchscreen"

    invoke-virtual {v5, v7}, Landroid/content/pm/PackageManager;->hasSystemFeature(Ljava/lang/String;)Z

    move-result v5

    iput-boolean v5, p0, mIsTouchDevice:Z

    .line 13121
    invoke-virtual {p0}, getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v5

    invoke-direct {p0, v5}, configureDisplayPolicyLocked(Lcom/android/server/wm/DisplayContent;)V

    .line 13123
    monitor-exit v6
    :try_end_3f
    .catchall {:try_start_29 .. :try_end_3f} :catchall_69

    .line 13126
    :try_start_3f
    iget-object v5, p0, mActivityManager:Landroid/app/IActivityManager;

    const/4 v6, 0x0

    invoke-interface {v5, v6}, Landroid/app/IActivityManager;->updateConfiguration(Landroid/content/res/Configuration;)V
    :try_end_45
    .catch Landroid/os/RemoteException; {:try_start_3f .. :try_end_45} :catch_6c

    .line 13132
    :goto_45
    invoke-static {}, Lcom/android/server/am/MultiWindowFacadeService;->self()Lcom/android/server/am/MultiWindowFacadeService;

    move-result-object v5

    invoke-virtual {v5}, Lcom/android/server/am/MultiWindowFacadeService;->initMultiWindowApplicationInfo()V

    .line 13151
    const/4 v5, 0x0

    invoke-virtual {p0, v5}, getDisplayContentLocked(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v2

    .line 13152
    if-eqz v2, :cond_65

    .line 13153
    iget-object v5, v2, Lcom/android/server/wm/DisplayContent;->mTapDetector:Lcom/android/server/wm/StackTapPointerEventListener;

    if-eqz v5, :cond_5c

    .line 13154
    iget-object v5, v2, Lcom/android/server/wm/DisplayContent;->mTapDetector:Lcom/android/server/wm/StackTapPointerEventListener;

    invoke-virtual {v5}, Lcom/android/server/wm/StackTapPointerEventListener;->init()V

    .line 13156
    :cond_5c
    iget-object v5, v2, Lcom/android/server/wm/DisplayContent;->mMultiWindowGestureDetector:Lcom/android/server/wm/MultiWindowPointerEventListener;

    if-eqz v5, :cond_65

    .line 13157
    iget-object v5, v2, Lcom/android/server/wm/DisplayContent;->mMultiWindowGestureDetector:Lcom/android/server/wm/MultiWindowPointerEventListener;

    invoke-virtual {v5}, Lcom/android/server/wm/MultiWindowPointerEventListener;->init()V

    .line 13165
    :cond_65
    return-void

    .line 13101
    .end local v2    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :catchall_66
    move-exception v5

    :try_start_67
    monitor-exit v6
    :try_end_68
    .catchall {:try_start_67 .. :try_end_68} :catchall_66

    throw v5

    .line 13123
    .restart local v2    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :catchall_69
    move-exception v5

    :try_start_6a
    monitor-exit v6
    :try_end_6b
    .catchall {:try_start_6a .. :try_end_6b} :catchall_69

    throw v5

    .line 13127
    :catch_6c
    move-exception v5

    goto :goto_45

    .line 13105
    :catch_6e
    move-exception v5

    goto :goto_26
.end method

.method public dump(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V
    .registers 11
    .param p1, "fd"    # Ljava/io/FileDescriptor;
    .param p2, "pw"    # Ljava/io/PrintWriter;
    .param p3, "args"    # [Ljava/lang/String;

    .prologue
    const/4 v0, 0x0

    .line 19836
    iget-object v1, p0, mContext:Landroid/content/Context;

    const-string v3, "android.permission.DUMP"

    invoke-virtual {v1, v3}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    move-result v1

    if-eqz v1, :cond_34

    .line 19838
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "Permission Denial: can\'t dump WindowManager from from pid="

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v0

    const-string v1, ", uid="

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19982
    :cond_33
    :goto_33
    return-void

    .line 19844
    :cond_34
    const/4 v5, 0x0

    .line 19846
    .local v5, "dumpAll":Z
    const/4 v4, 0x0

    .line 19847
    .local v4, "opti":I
    :goto_36
    array-length v1, p3

    if-ge v4, v1, :cond_4c

    .line 19848
    aget-object v6, p3, v4

    .line 19849
    .local v6, "opt":Ljava/lang/String;
    if-eqz v6, :cond_4c

    invoke-virtual {v6}, Ljava/lang/String;->length()I

    move-result v1

    if-lez v1, :cond_4c

    const/4 v1, 0x0

    invoke-virtual {v6, v1}, Ljava/lang/String;->charAt(I)C

    move-result v1

    const/16 v3, 0x2d

    if-eq v1, v3, :cond_70

    .line 19880
    .end local v6    # "opt":Ljava/lang/String;
    :cond_4c
    array-length v1, p3

    if-ge v4, v1, :cond_20c

    .line 19881
    aget-object v2, p3, v4

    .line 19882
    .local v2, "cmd":Ljava/lang/String;
    add-int/lit8 v4, v4, 0x1

    .line 19883
    const-string/jumbo v0, "lastanr"

    invoke-virtual {v0, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-nez v0, :cond_65

    const-string/jumbo v0, "l"

    invoke-virtual {v0, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_f9

    .line 19884
    :cond_65
    iget-object v1, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v1

    .line 19885
    :try_start_68
    invoke-virtual {p0, p2}, dumpLastANRLocked(Ljava/io/PrintWriter;)V

    .line 19886
    monitor-exit v1

    goto :goto_33

    :catchall_6d
    move-exception v0

    monitor-exit v1
    :try_end_6f
    .catchall {:try_start_68 .. :try_end_6f} :catchall_6d

    throw v0

    .line 19852
    .end local v2    # "cmd":Ljava/lang/String;
    .restart local v6    # "opt":Ljava/lang/String;
    :cond_70
    add-int/lit8 v4, v4, 0x1

    .line 19853
    const-string v1, "-a"

    invoke-virtual {v1, v6}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_7c

    .line 19854
    const/4 v5, 0x1

    goto :goto_36

    .line 19855
    :cond_7c
    const-string v1, "-h"

    invoke-virtual {v1, v6}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_db

    .line 19856
    const-string v0, "Window manager dump options:"

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19857
    const-string v0, "  [-a] [-h] [cmd] ..."

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19858
    const-string v0, "  cmd may be one of:"

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19859
    const-string v0, "    l[astanr]: last ANR information"

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19860
    const-string v0, "    p[policy]: policy state"

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19861
    const-string v0, "    a[animator]: animator state"

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19862
    const-string v0, "    s[essions]: active sessions"

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19863
    const-string v0, "    surfaces: active surfaces (debugging enabled only)"

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19864
    const-string v0, "    d[isplays]: active display contents"

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19865
    const-string v0, "    t[okens]: token list"

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19866
    const-string v0, "    w[indows]: window list"

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19867
    const-string v0, "  cmd may also be a NAME to dump windows.  NAME may"

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19868
    const-string v0, "    be a partial substring in a window name, a"

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19869
    const-string v0, "    Window hex object identifier, or"

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19870
    const-string v0, "    \"all\" for all windows, or"

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19871
    const-string v0, "    \"visible\" for the visible windows."

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19872
    const-string v0, "  -a: include all available server state."

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    goto/16 :goto_33

    .line 19875
    :cond_db
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Unknown argument: "

    invoke-virtual {v1, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v3, "; use -h for help"

    invoke-virtual {v1, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {p2, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    goto/16 :goto_36

    .line 19888
    .end local v6    # "opt":Ljava/lang/String;
    .restart local v2    # "cmd":Ljava/lang/String;
    :cond_f9
    const-string/jumbo v0, "policy"

    invoke-virtual {v0, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-nez v0, :cond_10b

    const-string/jumbo v0, "p"

    invoke-virtual {v0, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_118

    .line 19889
    :cond_10b
    iget-object v1, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v1

    .line 19890
    const/4 v0, 0x1

    :try_start_10f
    invoke-virtual {p0, p2, p3, v0}, dumpPolicyLocked(Ljava/io/PrintWriter;[Ljava/lang/String;Z)V

    .line 19891
    monitor-exit v1

    goto/16 :goto_33

    :catchall_115
    move-exception v0

    monitor-exit v1
    :try_end_117
    .catchall {:try_start_10f .. :try_end_117} :catchall_115

    throw v0

    .line 19893
    :cond_118
    const-string v0, "animator"

    invoke-virtual {v0, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-nez v0, :cond_128

    const-string v0, "a"

    invoke-virtual {v0, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_135

    .line 19894
    :cond_128
    iget-object v1, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v1

    .line 19895
    const/4 v0, 0x1

    :try_start_12c
    invoke-virtual {p0, p2, p3, v0}, dumpAnimatorLocked(Ljava/io/PrintWriter;[Ljava/lang/String;Z)V

    .line 19896
    monitor-exit v1

    goto/16 :goto_33

    :catchall_132
    move-exception v0

    monitor-exit v1
    :try_end_134
    .catchall {:try_start_12c .. :try_end_134} :catchall_132

    throw v0

    .line 19898
    :cond_135
    const-string/jumbo v0, "sessions"

    invoke-virtual {v0, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-nez v0, :cond_147

    const-string/jumbo v0, "s"

    invoke-virtual {v0, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_154

    .line 19899
    :cond_147
    iget-object v1, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v1

    .line 19900
    const/4 v0, 0x1

    :try_start_14b
    invoke-virtual {p0, p2, v0}, dumpSessionsLocked(Ljava/io/PrintWriter;Z)V

    .line 19901
    monitor-exit v1

    goto/16 :goto_33

    :catchall_151
    move-exception v0

    monitor-exit v1
    :try_end_153
    .catchall {:try_start_14b .. :try_end_153} :catchall_151

    throw v0

    .line 19903
    :cond_154
    const-string/jumbo v0, "surfaces"

    invoke-virtual {v0, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_16a

    .line 19904
    iget-object v1, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v1

    .line 19905
    const/4 v0, 0x0

    :try_start_161
    invoke-static {p2, v0}, Lcom/android/server/wm/WindowStateAnimator$SurfaceTrace;->dumpAllSurfaces(Ljava/io/PrintWriter;Ljava/lang/String;)V

    .line 19906
    monitor-exit v1

    goto/16 :goto_33

    :catchall_167
    move-exception v0

    monitor-exit v1
    :try_end_169
    .catchall {:try_start_161 .. :try_end_169} :catchall_167

    throw v0

    .line 19908
    :cond_16a
    const-string/jumbo v0, "displays"

    invoke-virtual {v0, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-nez v0, :cond_17c

    const-string/jumbo v0, "d"

    invoke-virtual {v0, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_189

    .line 19909
    :cond_17c
    iget-object v1, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v1

    .line 19910
    const/4 v0, 0x1

    :try_start_180
    invoke-virtual {p0, p2, v0}, dumpDisplayContentsLocked(Ljava/io/PrintWriter;Z)V

    .line 19911
    monitor-exit v1

    goto/16 :goto_33

    :catchall_186
    move-exception v0

    monitor-exit v1
    :try_end_188
    .catchall {:try_start_180 .. :try_end_188} :catchall_186

    throw v0

    .line 19913
    :cond_189
    const-string/jumbo v0, "tokens"

    invoke-virtual {v0, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-nez v0, :cond_19b

    const-string/jumbo v0, "t"

    invoke-virtual {v0, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_1a8

    .line 19914
    :cond_19b
    iget-object v1, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v1

    .line 19915
    const/4 v0, 0x1

    :try_start_19f
    invoke-virtual {p0, p2, v0}, dumpTokensLocked(Ljava/io/PrintWriter;Z)V

    .line 19916
    monitor-exit v1

    goto/16 :goto_33

    :catchall_1a5
    move-exception v0

    monitor-exit v1
    :try_end_1a7
    .catchall {:try_start_19f .. :try_end_1a7} :catchall_1a5

    throw v0

    .line 19918
    :cond_1a8
    const-string/jumbo v0, "windows"

    invoke-virtual {v0, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-nez v0, :cond_1ba

    const-string/jumbo v0, "w"

    invoke-virtual {v0, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_1c8

    .line 19919
    :cond_1ba
    iget-object v1, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v1

    .line 19920
    const/4 v0, 0x1

    const/4 v3, 0x0

    :try_start_1bf
    invoke-virtual {p0, p2, v0, v3}, dumpWindowsLocked(Ljava/io/PrintWriter;ZLjava/util/ArrayList;)V

    .line 19921
    monitor-exit v1

    goto/16 :goto_33

    :catchall_1c5
    move-exception v0

    monitor-exit v1
    :try_end_1c7
    .catchall {:try_start_1bf .. :try_end_1c7} :catchall_1c5

    throw v0

    .line 19923
    :cond_1c8
    const-string v0, "all"

    invoke-virtual {v0, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-nez v0, :cond_1d8

    const-string v0, "a"

    invoke-virtual {v0, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_1e6

    .line 19924
    :cond_1d8
    iget-object v1, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v1

    .line 19925
    const/4 v0, 0x1

    const/4 v3, 0x0

    :try_start_1dd
    invoke-virtual {p0, p2, v0, v3}, dumpWindowsLocked(Ljava/io/PrintWriter;ZLjava/util/ArrayList;)V

    .line 19926
    monitor-exit v1

    goto/16 :goto_33

    :catchall_1e3
    move-exception v0

    monitor-exit v1
    :try_end_1e5
    .catchall {:try_start_1dd .. :try_end_1e5} :catchall_1e3

    throw v0

    :cond_1e6
    move-object v0, p0

    move-object v1, p2

    move-object v3, p3

    .line 19930
    invoke-virtual/range {v0 .. v5}, dumpWindows(Ljava/io/PrintWriter;Ljava/lang/String;[Ljava/lang/String;IZ)Z

    move-result v0

    if-nez v0, :cond_33

    .line 19931
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "Bad window command, or no windows match: "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19932
    const-string v0, "Use -h for help."

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    goto/16 :goto_33

    .line 19938
    .end local v2    # "cmd":Ljava/lang/String;
    :cond_20c
    iget-object v1, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v1

    .line 19939
    :try_start_20f
    invoke-virtual {p2}, Ljava/io/PrintWriter;->println()V

    .line 19940
    if-eqz v5, :cond_219

    .line 19941
    const-string v3, "-------------------------------------------------------------------------------"

    invoke-virtual {p2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19943
    :cond_219
    invoke-virtual {p0, p2}, dumpLastANRLocked(Ljava/io/PrintWriter;)V

    .line 19944
    invoke-virtual {p2}, Ljava/io/PrintWriter;->println()V

    .line 19945
    if-eqz v5, :cond_226

    .line 19946
    const-string v3, "-------------------------------------------------------------------------------"

    invoke-virtual {p2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19948
    :cond_226
    invoke-virtual {p0, p2, p3, v5}, dumpPolicyLocked(Ljava/io/PrintWriter;[Ljava/lang/String;Z)V

    .line 19949
    invoke-virtual {p2}, Ljava/io/PrintWriter;->println()V

    .line 19950
    if-eqz v5, :cond_233

    .line 19951
    const-string v3, "-------------------------------------------------------------------------------"

    invoke-virtual {p2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19953
    :cond_233
    invoke-virtual {p0, p2, p3, v5}, dumpAnimatorLocked(Ljava/io/PrintWriter;[Ljava/lang/String;Z)V

    .line 19954
    invoke-virtual {p2}, Ljava/io/PrintWriter;->println()V

    .line 19955
    if-eqz v5, :cond_240

    .line 19956
    const-string v3, "-------------------------------------------------------------------------------"

    invoke-virtual {p2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19958
    :cond_240
    invoke-virtual {p0, p2, v5}, dumpSessionsLocked(Ljava/io/PrintWriter;Z)V

    .line 19959
    invoke-virtual {p2}, Ljava/io/PrintWriter;->println()V

    .line 19960
    if-eqz v5, :cond_24d

    .line 19961
    const-string v3, "-------------------------------------------------------------------------------"

    invoke-virtual {p2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19963
    :cond_24d
    if-eqz v5, :cond_251

    const-string v0, "-------------------------------------------------------------------------------"

    :cond_251
    invoke-static {p2, v0}, Lcom/android/server/wm/WindowStateAnimator$SurfaceTrace;->dumpAllSurfaces(Ljava/io/PrintWriter;Ljava/lang/String;)V

    .line 19966
    invoke-virtual {p2}, Ljava/io/PrintWriter;->println()V

    .line 19967
    if-eqz v5, :cond_25e

    .line 19968
    const-string v0, "-------------------------------------------------------------------------------"

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19970
    :cond_25e
    invoke-virtual {p0, p2, v5}, dumpDisplayContentsLocked(Ljava/io/PrintWriter;Z)V

    .line 19971
    invoke-virtual {p2}, Ljava/io/PrintWriter;->println()V

    .line 19972
    if-eqz v5, :cond_26b

    .line 19973
    const-string v0, "-------------------------------------------------------------------------------"

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19975
    :cond_26b
    invoke-virtual {p0, p2, v5}, dumpTokensLocked(Ljava/io/PrintWriter;Z)V

    .line 19976
    invoke-virtual {p2}, Ljava/io/PrintWriter;->println()V

    .line 19977
    if-eqz v5, :cond_278

    .line 19978
    const-string v0, "-------------------------------------------------------------------------------"

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19980
    :cond_278
    const/4 v0, 0x0

    invoke-virtual {p0, p2, v5, v0}, dumpWindowsLocked(Ljava/io/PrintWriter;ZLjava/util/ArrayList;)V

    .line 19981
    monitor-exit v1

    goto/16 :goto_33

    :catchall_27f
    move-exception v0

    monitor-exit v1
    :try_end_281
    .catchall {:try_start_20f .. :try_end_281} :catchall_27f

    throw v0
.end method

.method dumpAnimatorLocked(Ljava/io/PrintWriter;[Ljava/lang/String;Z)V
    .registers 6
    .param p1, "pw"    # Ljava/io/PrintWriter;
    .param p2, "args"    # [Ljava/lang/String;
    .param p3, "dumpAll"    # Z

    .prologue
    .line 19311
    const-string v0, "WINDOW MANAGER ANIMATOR STATE (dumpsys window animator)"

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19312
    iget-object v0, p0, mAnimator:Lcom/android/server/wm/WindowAnimator;

    const-string v1, "    "

    invoke-virtual {v0, p1, v1, p3}, Lcom/android/server/wm/WindowAnimator;->dumpLocked(Ljava/io/PrintWriter;Ljava/lang/String;Z)V

    .line 19313
    return-void
.end method

.method dumpAppTokensLocked()V
    .registers 14

    .prologue
    .line 8957
    iget-object v10, p0, mStackIdToStack:Landroid/util/SparseArray;

    invoke-virtual {v10}, Landroid/util/SparseArray;->size()I

    move-result v0

    .line 8958
    .local v0, "numStacks":I
    const/4 v4, 0x0

    .local v4, "stackNdx":I
    :goto_7
    if-ge v4, v0, :cond_9f

    .line 8959
    iget-object v10, p0, mStackIdToStack:Landroid/util/SparseArray;

    invoke-virtual {v10, v4}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/wm/TaskStack;

    .line 8960
    .local v3, "stack":Lcom/android/server/wm/TaskStack;
    const-string v10, "WindowManager"

    new-instance v11, Ljava/lang/StringBuilder;

    invoke-direct {v11}, Ljava/lang/StringBuilder;-><init>()V

    const-string v12, "  Stack #"

    invoke-virtual {v11, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v11

    iget v12, v3, Lcom/android/server/wm/TaskStack;->mStackId:I

    invoke-virtual {v11, v12}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v11

    const-string v12, " tasks from bottom to top:"

    invoke-virtual {v11, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v11

    invoke-virtual {v11}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v11

    invoke-static {v10, v11}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 8961
    invoke-virtual {v3}, Lcom/android/server/wm/TaskStack;->getTasks()Ljava/util/ArrayList;

    move-result-object v7

    .line 8962
    .local v7, "tasks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/Task;>;"
    invoke-virtual {v7}, Ljava/util/ArrayList;->size()I

    move-result v1

    .line 8963
    .local v1, "numTasks":I
    const/4 v6, 0x0

    .local v6, "taskNdx":I
    :goto_3a
    if-ge v6, v1, :cond_9b

    .line 8964
    invoke-virtual {v7, v6}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/android/server/wm/Task;

    .line 8965
    .local v5, "task":Lcom/android/server/wm/Task;
    const-string v10, "WindowManager"

    new-instance v11, Ljava/lang/StringBuilder;

    invoke-direct {v11}, Ljava/lang/StringBuilder;-><init>()V

    const-string v12, "    Task #"

    invoke-virtual {v11, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v11

    iget v12, v5, Lcom/android/server/wm/Task;->mTaskId:I

    invoke-virtual {v11, v12}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v11

    const-string v12, " activities from bottom to top:"

    invoke-virtual {v11, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v11

    invoke-virtual {v11}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v11

    invoke-static {v10, v11}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 8966
    iget-object v9, v5, Lcom/android/server/wm/Task;->mAppTokens:Lcom/android/server/wm/AppTokenList;

    .line 8967
    .local v9, "tokens":Lcom/android/server/wm/AppTokenList;
    invoke-virtual {v9}, Lcom/android/server/wm/AppTokenList;->size()I

    move-result v2

    .line 8968
    .local v2, "numTokens":I
    const/4 v8, 0x0

    .local v8, "tokenNdx":I
    :goto_69
    if-ge v8, v2, :cond_98

    .line 8969
    const-string v11, "WindowManager"

    new-instance v10, Ljava/lang/StringBuilder;

    invoke-direct {v10}, Ljava/lang/StringBuilder;-><init>()V

    const-string v12, "      activity #"

    invoke-virtual {v10, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    invoke-virtual {v10, v8}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v10

    const-string v12, ": "

    invoke-virtual {v10, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v12

    invoke-virtual {v9, v8}, Lcom/android/server/wm/AppTokenList;->get(I)Ljava/lang/Object;

    move-result-object v10

    check-cast v10, Lcom/android/server/wm/AppWindowToken;

    iget-object v10, v10, Lcom/android/server/wm/AppWindowToken;->token:Landroid/os/IBinder;

    invoke-virtual {v12, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v10

    invoke-virtual {v10}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v10

    invoke-static {v11, v10}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 8968
    add-int/lit8 v8, v8, 0x1

    goto :goto_69

    .line 8963
    :cond_98
    add-int/lit8 v6, v6, 0x1

    goto :goto_3a

    .line 8958
    .end local v2    # "numTokens":I
    .end local v5    # "task":Lcom/android/server/wm/Task;
    .end local v8    # "tokenNdx":I
    .end local v9    # "tokens":Lcom/android/server/wm/AppTokenList;
    :cond_9b
    add-int/lit8 v4, v4, 0x1

    goto/16 :goto_7

    .line 8973
    .end local v1    # "numTasks":I
    .end local v3    # "stack":Lcom/android/server/wm/TaskStack;
    .end local v6    # "taskNdx":I
    .end local v7    # "tasks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/Task;>;"
    :cond_9f
    return-void
.end method

.method dumpDisplayContentsLocked(Ljava/io/PrintWriter;Z)V
    .registers 7
    .param p1, "pw"    # Ljava/io/PrintWriter;
    .param p2, "dumpAll"    # Z

    .prologue
    .line 19402
    const-string v3, "WINDOW MANAGER DISPLAY CONTENTS (dumpsys window displays)"

    invoke-virtual {p1, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19403
    iget-boolean v3, p0, mDisplayReady:Z

    if-eqz v3, :cond_22

    .line 19404
    iget-object v3, p0, mDisplayContents:Landroid/util/SparseArray;

    invoke-virtual {v3}, Landroid/util/SparseArray;->size()I

    move-result v2

    .line 19405
    .local v2, "numDisplays":I
    const/4 v1, 0x0

    .local v1, "displayNdx":I
    :goto_10
    if-ge v1, v2, :cond_27

    .line 19406
    iget-object v3, p0, mDisplayContents:Landroid/util/SparseArray;

    invoke-virtual {v3, v1}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/wm/DisplayContent;

    .line 19407
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    const-string v3, "  "

    invoke-virtual {v0, v3, p1}, Lcom/android/server/wm/DisplayContent;->dump(Ljava/lang/String;Ljava/io/PrintWriter;)V

    .line 19405
    add-int/lit8 v1, v1, 0x1

    goto :goto_10

    .line 19410
    .end local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v1    # "displayNdx":I
    .end local v2    # "numDisplays":I
    :cond_22
    const-string v3, "  NO DISPLAY"

    invoke-virtual {p1, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19412
    :cond_27
    return-void
.end method

.method dumpLastANRLocked(Ljava/io/PrintWriter;)V
    .registers 3
    .param p1, "pw"    # Ljava/io/PrintWriter;

    .prologue
    .line 19791
    const-string v0, "WINDOW MANAGER LAST ANR (dumpsys window lastanr)"

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19792
    iget-object v0, p0, mLastANRState:Ljava/lang/String;

    if-nez v0, :cond_f

    .line 19793
    const-string v0, "  <no ANR has occurred since boot>"

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19797
    :goto_e
    return-void

    .line 19795
    :cond_f
    iget-object v0, p0, mLastANRState:Ljava/lang/String;

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    goto :goto_e
.end method

.method dumpPolicyLocked(Ljava/io/PrintWriter;[Ljava/lang/String;Z)V
    .registers 6
    .param p1, "pw"    # Ljava/io/PrintWriter;
    .param p2, "args"    # [Ljava/lang/String;
    .param p3, "dumpAll"    # Z

    .prologue
    .line 19306
    const-string v0, "WINDOW MANAGER POLICY STATE (dumpsys window policy)"

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19307
    iget-object v0, p0, mPolicy:Landroid/view/WindowManagerPolicy;

    const-string v1, "    "

    invoke-interface {v0, v1, p1, p2}, Landroid/view/WindowManagerPolicy;->dump(Ljava/lang/String;Ljava/io/PrintWriter;[Ljava/lang/String;)V

    .line 19308
    return-void
.end method

.method dumpSessionsLocked(Ljava/io/PrintWriter;Z)V
    .registers 6
    .param p1, "pw"    # Ljava/io/PrintWriter;
    .param p2, "dumpAll"    # Z

    .prologue
    .line 19393
    const-string v2, "WINDOW MANAGER SESSIONS (dumpsys window sessions)"

    invoke-virtual {p1, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19394
    const/4 v0, 0x0

    .local v0, "i":I
    :goto_6
    iget-object v2, p0, mSessions:Landroid/util/ArraySet;

    invoke-virtual {v2}, Landroid/util/ArraySet;->size()I

    move-result v2

    if-ge v0, v2, :cond_2b

    .line 19395
    iget-object v2, p0, mSessions:Landroid/util/ArraySet;

    invoke-virtual {v2, v0}, Landroid/util/ArraySet;->valueAt(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/wm/Session;

    .line 19396
    .local v1, "s":Lcom/android/server/wm/Session;
    const-string v2, "  Session "

    invoke-virtual {p1, v2}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual {p1, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/Object;)V

    const/16 v2, 0x3a

    invoke-virtual {p1, v2}, Ljava/io/PrintWriter;->println(C)V

    .line 19397
    const-string v2, "    "

    invoke-virtual {v1, p1, v2}, Lcom/android/server/wm/Session;->dump(Ljava/io/PrintWriter;Ljava/lang/String;)V

    .line 19394
    add-int/lit8 v0, v0, 0x1

    goto :goto_6

    .line 19399
    .end local v1    # "s":Lcom/android/server/wm/Session;
    :cond_2b
    return-void
.end method

.method dumpTokensLocked(Ljava/io/PrintWriter;Z)V
    .registers 9
    .param p1, "pw"    # Ljava/io/PrintWriter;
    .param p2, "dumpAll"    # Z

    .prologue
    const/16 v5, 0x20

    const/16 v4, 0x3a

    .line 19316
    const-string v3, "WINDOW MANAGER TOKENS (dumpsys window tokens)"

    invoke-virtual {p1, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19317
    iget-object v3, p0, mTokenMap:Ljava/util/HashMap;

    invoke-virtual {v3}, Ljava/util/HashMap;->isEmpty()Z

    move-result v3

    if-nez v3, :cond_43

    .line 19318
    const-string v3, "  All tokens:"

    invoke-virtual {p1, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19319
    iget-object v3, p0, mTokenMap:Ljava/util/HashMap;

    invoke-virtual {v3}, Ljava/util/HashMap;->values()Ljava/util/Collection;

    move-result-object v3

    invoke-interface {v3}, Ljava/util/Collection;->iterator()Ljava/util/Iterator;

    move-result-object v1

    .line 19320
    .local v1, "it":Ljava/util/Iterator;, "Ljava/util/Iterator<Lcom/android/server/wm/WindowToken;>;"
    :goto_20
    invoke-interface {v1}, Ljava/util/Iterator;->hasNext()Z

    move-result v3

    if-eqz v3, :cond_43

    .line 19321
    invoke-interface {v1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/wm/WindowToken;

    .line 19322
    .local v2, "token":Lcom/android/server/wm/WindowToken;
    const-string v3, "  "

    invoke-virtual {p1, v3}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual {p1, v2}, Ljava/io/PrintWriter;->print(Ljava/lang/Object;)V

    .line 19323
    if-eqz p2, :cond_3f

    .line 19324
    invoke-virtual {p1, v4}, Ljava/io/PrintWriter;->println(C)V

    .line 19325
    const-string v3, "    "

    invoke-virtual {v2, p1, v3}, Lcom/android/server/wm/WindowToken;->dump(Ljava/io/PrintWriter;Ljava/lang/String;)V

    goto :goto_20

    .line 19327
    :cond_3f
    invoke-virtual {p1}, Ljava/io/PrintWriter;->println()V

    goto :goto_20

    .line 19331
    .end local v1    # "it":Ljava/util/Iterator;, "Ljava/util/Iterator<Lcom/android/server/wm/WindowToken;>;"
    .end local v2    # "token":Lcom/android/server/wm/WindowToken;
    :cond_43
    iget-object v3, p0, mWallpaperTokens:Ljava/util/ArrayList;

    invoke-virtual {v3}, Ljava/util/ArrayList;->isEmpty()Z

    move-result v3

    if-nez v3, :cond_84

    .line 19332
    invoke-virtual {p1}, Ljava/io/PrintWriter;->println()V

    .line 19333
    const-string v3, "  Wallpaper tokens:"

    invoke-virtual {p1, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19334
    iget-object v3, p0, mWallpaperTokens:Ljava/util/ArrayList;

    invoke-virtual {v3}, Ljava/util/ArrayList;->size()I

    move-result v3

    add-int/lit8 v0, v3, -0x1

    .local v0, "i":I
    :goto_5b
    if-ltz v0, :cond_84

    .line 19335
    iget-object v3, p0, mWallpaperTokens:Ljava/util/ArrayList;

    invoke-virtual {v3, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/wm/WindowToken;

    .line 19336
    .restart local v2    # "token":Lcom/android/server/wm/WindowToken;
    const-string v3, "  Wallpaper #"

    invoke-virtual {p1, v3}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->print(I)V

    .line 19337
    invoke-virtual {p1, v5}, Ljava/io/PrintWriter;->print(C)V

    invoke-virtual {p1, v2}, Ljava/io/PrintWriter;->print(Ljava/lang/Object;)V

    .line 19338
    if-eqz p2, :cond_80

    .line 19339
    invoke-virtual {p1, v4}, Ljava/io/PrintWriter;->println(C)V

    .line 19340
    const-string v3, "    "

    invoke-virtual {v2, p1, v3}, Lcom/android/server/wm/WindowToken;->dump(Ljava/io/PrintWriter;Ljava/lang/String;)V

    .line 19334
    :goto_7d
    add-int/lit8 v0, v0, -0x1

    goto :goto_5b

    .line 19342
    :cond_80
    invoke-virtual {p1}, Ljava/io/PrintWriter;->println()V

    goto :goto_7d

    .line 19346
    .end local v0    # "i":I
    .end local v2    # "token":Lcom/android/server/wm/WindowToken;
    :cond_84
    iget-object v3, p0, mFinishedStarting:Ljava/util/ArrayList;

    invoke-virtual {v3}, Ljava/util/ArrayList;->isEmpty()Z

    move-result v3

    if-nez v3, :cond_c5

    .line 19347
    invoke-virtual {p1}, Ljava/io/PrintWriter;->println()V

    .line 19348
    const-string v3, "  Finishing start of application tokens:"

    invoke-virtual {p1, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19349
    iget-object v3, p0, mFinishedStarting:Ljava/util/ArrayList;

    invoke-virtual {v3}, Ljava/util/ArrayList;->size()I

    move-result v3

    add-int/lit8 v0, v3, -0x1

    .restart local v0    # "i":I
    :goto_9c
    if-ltz v0, :cond_c5

    .line 19350
    iget-object v3, p0, mFinishedStarting:Ljava/util/ArrayList;

    invoke-virtual {v3, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/wm/WindowToken;

    .line 19351
    .restart local v2    # "token":Lcom/android/server/wm/WindowToken;
    const-string v3, "  Finished Starting #"

    invoke-virtual {p1, v3}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->print(I)V

    .line 19352
    invoke-virtual {p1, v5}, Ljava/io/PrintWriter;->print(C)V

    invoke-virtual {p1, v2}, Ljava/io/PrintWriter;->print(Ljava/lang/Object;)V

    .line 19353
    if-eqz p2, :cond_c1

    .line 19354
    invoke-virtual {p1, v4}, Ljava/io/PrintWriter;->println(C)V

    .line 19355
    const-string v3, "    "

    invoke-virtual {v2, p1, v3}, Lcom/android/server/wm/WindowToken;->dump(Ljava/io/PrintWriter;Ljava/lang/String;)V

    .line 19349
    :goto_be
    add-int/lit8 v0, v0, -0x1

    goto :goto_9c

    .line 19357
    :cond_c1
    invoke-virtual {p1}, Ljava/io/PrintWriter;->println()V

    goto :goto_be

    .line 19378
    .end local v0    # "i":I
    .end local v2    # "token":Lcom/android/server/wm/WindowToken;
    :cond_c5
    iget-object v3, p0, mOpeningApps:Landroid/util/ArraySet;

    invoke-virtual {v3}, Landroid/util/ArraySet;->isEmpty()Z

    move-result v3

    if-eqz v3, :cond_d5

    iget-object v3, p0, mClosingApps:Landroid/util/ArraySet;

    invoke-virtual {v3}, Landroid/util/ArraySet;->isEmpty()Z

    move-result v3

    if-nez v3, :cond_fc

    .line 19379
    :cond_d5
    invoke-virtual {p1}, Ljava/io/PrintWriter;->println()V

    .line 19380
    iget-object v3, p0, mOpeningApps:Landroid/util/ArraySet;

    invoke-virtual {v3}, Landroid/util/ArraySet;->size()I

    move-result v3

    if-lez v3, :cond_ea

    .line 19381
    const-string v3, "  mOpeningApps="

    invoke-virtual {p1, v3}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-object v3, p0, mOpeningApps:Landroid/util/ArraySet;

    invoke-virtual {p1, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    .line 19383
    :cond_ea
    iget-object v3, p0, mClosingApps:Landroid/util/ArraySet;

    invoke-virtual {v3}, Landroid/util/ArraySet;->size()I

    move-result v3

    if-lez v3, :cond_fc

    .line 19384
    const-string v3, "  mClosingApps="

    invoke-virtual {p1, v3}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-object v3, p0, mClosingApps:Landroid/util/ArraySet;

    invoke-virtual {p1, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    .line 19390
    :cond_fc
    return-void
.end method

.method dumpWindows(Ljava/io/PrintWriter;Ljava/lang/String;[Ljava/lang/String;IZ)Z
    .registers 15
    .param p1, "pw"    # Ljava/io/PrintWriter;
    .param p2, "name"    # Ljava/lang/String;
    .param p3, "args"    # [Ljava/lang/String;
    .param p4, "opti"    # I
    .param p5, "dumpAll"    # Z

    .prologue
    .line 19738
    new-instance v6, Lcom/android/server/wm/WindowList;

    invoke-direct {v6}, Lcom/android/server/wm/WindowList;-><init>()V

    .line 19739
    .local v6, "windows":Lcom/android/server/wm/WindowList;
    const-string/jumbo v7, "visible"

    invoke-virtual {v7, p2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v7

    if-eqz v7, :cond_4f

    .line 19740
    iget-object v8, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v8

    .line 19741
    :try_start_11
    iget-object v7, p0, mDisplayContents:Landroid/util/SparseArray;

    invoke-virtual {v7}, Landroid/util/SparseArray;->size()I

    move-result v1

    .line 19742
    .local v1, "numDisplays":I
    const/4 v0, 0x0

    .local v0, "displayNdx":I
    :goto_18
    if-ge v0, v1, :cond_43

    .line 19743
    iget-object v7, p0, mDisplayContents:Landroid/util/SparseArray;

    invoke-virtual {v7, v0}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v7

    check-cast v7, Lcom/android/server/wm/DisplayContent;

    invoke-virtual {v7}, Lcom/android/server/wm/DisplayContent;->getWindowList()Lcom/android/server/wm/WindowList;

    move-result-object v5

    .line 19745
    .local v5, "windowList":Lcom/android/server/wm/WindowList;
    invoke-virtual {v5}, Lcom/android/server/wm/WindowList;->size()I

    move-result v7

    add-int/lit8 v4, v7, -0x1

    .local v4, "winNdx":I
    :goto_2c
    if-ltz v4, :cond_40

    .line 19746
    invoke-virtual {v5, v4}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/wm/WindowState;

    .line 19747
    .local v3, "w":Lcom/android/server/wm/WindowState;
    iget-object v7, v3, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    iget-boolean v7, v7, Lcom/android/server/wm/WindowStateAnimator;->mSurfaceShown:Z

    if-eqz v7, :cond_3d

    .line 19748
    invoke-virtual {v6, v3}, Lcom/android/server/wm/WindowList;->add(Ljava/lang/Object;)Z

    .line 19745
    :cond_3d
    add-int/lit8 v4, v4, -0x1

    goto :goto_2c

    .line 19742
    .end local v3    # "w":Lcom/android/server/wm/WindowState;
    :cond_40
    add-int/lit8 v0, v0, 0x1

    goto :goto_18

    .line 19752
    .end local v4    # "winNdx":I
    .end local v5    # "windowList":Lcom/android/server/wm/WindowList;
    :cond_43
    monitor-exit v8
    :try_end_44
    .catchall {:try_start_11 .. :try_end_44} :catchall_4c

    .line 19780
    :goto_44
    invoke-virtual {v6}, Lcom/android/server/wm/WindowList;->size()I

    move-result v7

    if-gtz v7, :cond_a7

    .line 19781
    const/4 v7, 0x0

    .line 19787
    :goto_4b
    return v7

    .line 19752
    .end local v0    # "displayNdx":I
    .end local v1    # "numDisplays":I
    :catchall_4c
    move-exception v7

    :try_start_4d
    monitor-exit v8
    :try_end_4e
    .catchall {:try_start_4d .. :try_end_4e} :catchall_4c

    throw v7

    .line 19754
    :cond_4f
    const/4 v2, 0x0

    .line 19757
    .local v2, "objectId":I
    const/16 v7, 0x10

    :try_start_52
    invoke-static {p2, v7}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;I)I
    :try_end_55
    .catch Ljava/lang/RuntimeException; {:try_start_52 .. :try_end_55} :catch_b3

    move-result v2

    .line 19758
    const/4 p2, 0x0

    .line 19761
    :goto_57
    iget-object v8, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v8

    .line 19762
    :try_start_5a
    iget-object v7, p0, mDisplayContents:Landroid/util/SparseArray;

    invoke-virtual {v7}, Landroid/util/SparseArray;->size()I

    move-result v1

    .line 19763
    .restart local v1    # "numDisplays":I
    const/4 v0, 0x0

    .restart local v0    # "displayNdx":I
    :goto_61
    if-ge v0, v1, :cond_a5

    .line 19764
    iget-object v7, p0, mDisplayContents:Landroid/util/SparseArray;

    invoke-virtual {v7, v0}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v7

    check-cast v7, Lcom/android/server/wm/DisplayContent;

    invoke-virtual {v7}, Lcom/android/server/wm/DisplayContent;->getWindowList()Lcom/android/server/wm/WindowList;

    move-result-object v5

    .line 19766
    .restart local v5    # "windowList":Lcom/android/server/wm/WindowList;
    invoke-virtual {v5}, Lcom/android/server/wm/WindowList;->size()I

    move-result v7

    add-int/lit8 v4, v7, -0x1

    .restart local v4    # "winNdx":I
    :goto_75
    if-ltz v4, :cond_a2

    .line 19767
    invoke-virtual {v5, v4}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/wm/WindowState;

    .line 19768
    .restart local v3    # "w":Lcom/android/server/wm/WindowState;
    if-eqz p2, :cond_95

    .line 19769
    iget-object v7, v3, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    invoke-virtual {v7}, Landroid/view/WindowManager$LayoutParams;->getTitle()Ljava/lang/CharSequence;

    move-result-object v7

    invoke-interface {v7}, Ljava/lang/CharSequence;->toString()Ljava/lang/String;

    move-result-object v7

    invoke-virtual {v7, p2}, Ljava/lang/String;->contains(Ljava/lang/CharSequence;)Z

    move-result v7

    if-eqz v7, :cond_92

    .line 19770
    invoke-virtual {v6, v3}, Lcom/android/server/wm/WindowList;->add(Ljava/lang/Object;)Z

    .line 19766
    :cond_92
    :goto_92
    add-int/lit8 v4, v4, -0x1

    goto :goto_75

    .line 19772
    :cond_95
    invoke-static {v3}, Ljava/lang/System;->identityHashCode(Ljava/lang/Object;)I

    move-result v7

    if-ne v7, v2, :cond_92

    .line 19773
    invoke-virtual {v6, v3}, Lcom/android/server/wm/WindowList;->add(Ljava/lang/Object;)Z

    goto :goto_92

    .line 19777
    .end local v0    # "displayNdx":I
    .end local v1    # "numDisplays":I
    .end local v3    # "w":Lcom/android/server/wm/WindowState;
    .end local v4    # "winNdx":I
    .end local v5    # "windowList":Lcom/android/server/wm/WindowList;
    :catchall_9f
    move-exception v7

    monitor-exit v8
    :try_end_a1
    .catchall {:try_start_5a .. :try_end_a1} :catchall_9f

    throw v7

    .line 19763
    .restart local v0    # "displayNdx":I
    .restart local v1    # "numDisplays":I
    .restart local v4    # "winNdx":I
    .restart local v5    # "windowList":Lcom/android/server/wm/WindowList;
    :cond_a2
    add-int/lit8 v0, v0, 0x1

    goto :goto_61

    .line 19777
    .end local v4    # "winNdx":I
    .end local v5    # "windowList":Lcom/android/server/wm/WindowList;
    :cond_a5
    :try_start_a5
    monitor-exit v8
    :try_end_a6
    .catchall {:try_start_a5 .. :try_end_a6} :catchall_9f

    goto :goto_44

    .line 19784
    .end local v2    # "objectId":I
    :cond_a7
    iget-object v8, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v8

    .line 19785
    :try_start_aa
    invoke-virtual {p0, p1, p5, v6}, dumpWindowsLocked(Ljava/io/PrintWriter;ZLjava/util/ArrayList;)V

    .line 19786
    monitor-exit v8

    .line 19787
    const/4 v7, 0x1

    goto :goto_4b

    .line 19786
    :catchall_b0
    move-exception v7

    monitor-exit v8
    :try_end_b2
    .catchall {:try_start_aa .. :try_end_b2} :catchall_b0

    throw v7

    .line 19759
    .end local v0    # "displayNdx":I
    .end local v1    # "numDisplays":I
    .restart local v2    # "objectId":I
    :catch_b3
    move-exception v7

    goto :goto_57
.end method

.method dumpWindowsLocked()V
    .registers 9

    .prologue
    .line 8976
    iget-object v5, p0, mDisplayContents:Landroid/util/SparseArray;

    invoke-virtual {v5}, Landroid/util/SparseArray;->size()I

    move-result v2

    .line 8977
    .local v2, "numDisplays":I
    const/4 v1, 0x0

    .local v1, "displayNdx":I
    :goto_7
    if-ge v1, v2, :cond_65

    .line 8978
    iget-object v5, p0, mDisplayContents:Landroid/util/SparseArray;

    invoke-virtual {v5, v1}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/wm/DisplayContent;

    .line 8979
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    const-string v5, "WindowManager"

    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, " Display #"

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v0}, Lcom/android/server/wm/DisplayContent;->getDisplayId()I

    move-result v7

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-static {v5, v6}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 8980
    invoke-virtual {v0}, Lcom/android/server/wm/DisplayContent;->getWindowList()Lcom/android/server/wm/WindowList;

    move-result-object v4

    .line 8981
    .local v4, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual {v4}, Lcom/android/server/wm/WindowList;->size()I

    move-result v5

    add-int/lit8 v3, v5, -0x1

    .local v3, "winNdx":I
    :goto_37
    if-ltz v3, :cond_62

    .line 8982
    const-string v5, "WindowManager"

    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "  #"

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v6

    const-string v7, ": "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v4, v3}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v7

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-static {v5, v6}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 8981
    add-int/lit8 v3, v3, -0x1

    goto :goto_37

    .line 8977
    :cond_62
    add-int/lit8 v1, v1, 0x1

    goto :goto_7

    .line 8985
    .end local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v3    # "winNdx":I
    .end local v4    # "windows":Lcom/android/server/wm/WindowList;
    :cond_65
    return-void
.end method

.method dumpWindowsLocked(Ljava/io/PrintWriter;ZLjava/util/ArrayList;)V
    .registers 5
    .param p1, "pw"    # Ljava/io/PrintWriter;
    .param p2, "dumpAll"    # Z
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/io/PrintWriter;",
            "Z",
            "Ljava/util/ArrayList",
            "<",
            "Lcom/android/server/wm/WindowState;",
            ">;)V"
        }
    .end annotation

    .prologue
    .line 19416
    .local p3, "windows":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/WindowState;>;"
    const-string v0, "WINDOW MANAGER WINDOWS (dumpsys window windows)"

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19417
    invoke-virtual {p0, p1, p2, p3}, dumpWindowsNoHeaderLocked(Ljava/io/PrintWriter;ZLjava/util/ArrayList;)V

    .line 19418
    return-void
.end method

.method dumpWindowsNoHeaderLocked(Ljava/io/PrintWriter;ZLjava/util/ArrayList;)V
    .registers 14
    .param p1, "pw"    # Ljava/io/PrintWriter;
    .param p2, "dumpAll"    # Z
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/io/PrintWriter;",
            "Z",
            "Ljava/util/ArrayList",
            "<",
            "Lcom/android/server/wm/WindowState;",
            ">;)V"
        }
    .end annotation

    .prologue
    .line 19422
    .local p3, "windows":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/WindowState;>;"
    iget-object v8, p0, mDisplayContents:Landroid/util/SparseArray;

    invoke-virtual {v8}, Landroid/util/SparseArray;->size()I

    move-result v3

    .line 19423
    .local v3, "numDisplays":I
    const/4 v1, 0x0

    .local v1, "displayNdx":I
    :goto_7
    if-ge v1, v3, :cond_52

    .line 19424
    iget-object v8, p0, mDisplayContents:Landroid/util/SparseArray;

    invoke-virtual {v8, v1}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v8

    check-cast v8, Lcom/android/server/wm/DisplayContent;

    invoke-virtual {v8}, Lcom/android/server/wm/DisplayContent;->getWindowList()Lcom/android/server/wm/WindowList;

    move-result-object v7

    .line 19425
    .local v7, "windowList":Lcom/android/server/wm/WindowList;
    invoke-virtual {v7}, Lcom/android/server/wm/WindowList;->size()I

    move-result v8

    add-int/lit8 v6, v8, -0x1

    .local v6, "winNdx":I
    :goto_1b
    if-ltz v6, :cond_4f

    .line 19426
    invoke-virtual {v7, v6}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/server/wm/WindowState;

    .line 19427
    .local v4, "w":Lcom/android/server/wm/WindowState;
    if-eqz p3, :cond_2b

    invoke-virtual {p3, v4}, Ljava/util/ArrayList;->contains(Ljava/lang/Object;)Z

    move-result v8

    if-eqz v8, :cond_4a

    .line 19428
    :cond_2b
    const-string v8, "  Window #"

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual {p1, v6}, Ljava/io/PrintWriter;->print(I)V

    const/16 v8, 0x20

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(C)V

    .line 19429
    invoke-virtual {p1, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/Object;)V

    const-string v8, ":"

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19430
    const-string v9, "    "

    if-nez p2, :cond_46

    if-eqz p3, :cond_4d

    :cond_46
    const/4 v8, 0x1

    :goto_47
    invoke-virtual {v4, p1, v9, v8}, Lcom/android/server/wm/WindowState;->dump(Ljava/io/PrintWriter;Ljava/lang/String;Z)V

    .line 19425
    :cond_4a
    add-int/lit8 v6, v6, -0x1

    goto :goto_1b

    .line 19430
    :cond_4d
    const/4 v8, 0x0

    goto :goto_47

    .line 19423
    .end local v4    # "w":Lcom/android/server/wm/WindowState;
    :cond_4f
    add-int/lit8 v1, v1, 0x1

    goto :goto_7

    .line 19434
    .end local v6    # "winNdx":I
    .end local v7    # "windowList":Lcom/android/server/wm/WindowList;
    :cond_52
    iget-object v8, p0, mInputMethodDialogs:Ljava/util/ArrayList;

    invoke-virtual {v8}, Ljava/util/ArrayList;->size()I

    move-result v8

    if-lez v8, :cond_8f

    .line 19435
    invoke-virtual {p1}, Ljava/io/PrintWriter;->println()V

    .line 19436
    const-string v8, "  Input method dialogs:"

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19437
    iget-object v8, p0, mInputMethodDialogs:Ljava/util/ArrayList;

    invoke-virtual {v8}, Ljava/util/ArrayList;->size()I

    move-result v8

    add-int/lit8 v2, v8, -0x1

    .local v2, "i":I
    :goto_6a
    if-ltz v2, :cond_8f

    .line 19438
    iget-object v8, p0, mInputMethodDialogs:Ljava/util/ArrayList;

    invoke-virtual {v8, v2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/server/wm/WindowState;

    .line 19439
    .restart local v4    # "w":Lcom/android/server/wm/WindowState;
    if-eqz p3, :cond_7c

    invoke-virtual {p3, v4}, Ljava/util/ArrayList;->contains(Ljava/lang/Object;)Z

    move-result v8

    if-eqz v8, :cond_8c

    .line 19440
    :cond_7c
    const-string v8, "  IM Dialog #"

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual {p1, v2}, Ljava/io/PrintWriter;->print(I)V

    const-string v8, ": "

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual {p1, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    .line 19437
    :cond_8c
    add-int/lit8 v2, v2, -0x1

    goto :goto_6a

    .line 19444
    .end local v2    # "i":I
    .end local v4    # "w":Lcom/android/server/wm/WindowState;
    :cond_8f
    iget-object v8, p0, mPendingRemove:Ljava/util/ArrayList;

    invoke-virtual {v8}, Ljava/util/ArrayList;->size()I

    move-result v8

    if-lez v8, :cond_dd

    .line 19445
    invoke-virtual {p1}, Ljava/io/PrintWriter;->println()V

    .line 19446
    const-string v8, "  Remove pending for:"

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19447
    iget-object v8, p0, mPendingRemove:Ljava/util/ArrayList;

    invoke-virtual {v8}, Ljava/util/ArrayList;->size()I

    move-result v8

    add-int/lit8 v2, v8, -0x1

    .restart local v2    # "i":I
    :goto_a7
    if-ltz v2, :cond_dd

    .line 19448
    iget-object v8, p0, mPendingRemove:Ljava/util/ArrayList;

    invoke-virtual {v8, v2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/server/wm/WindowState;

    .line 19449
    .restart local v4    # "w":Lcom/android/server/wm/WindowState;
    if-eqz p3, :cond_b9

    invoke-virtual {p3, v4}, Ljava/util/ArrayList;->contains(Ljava/lang/Object;)Z

    move-result v8

    if-eqz v8, :cond_d6

    .line 19450
    :cond_b9
    const-string v8, "  Remove #"

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual {p1, v2}, Ljava/io/PrintWriter;->print(I)V

    const/16 v8, 0x20

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(C)V

    .line 19451
    invoke-virtual {p1, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/Object;)V

    .line 19452
    if-eqz p2, :cond_d9

    .line 19453
    const-string v8, ":"

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19454
    const-string v8, "    "

    const/4 v9, 0x1

    invoke-virtual {v4, p1, v8, v9}, Lcom/android/server/wm/WindowState;->dump(Ljava/io/PrintWriter;Ljava/lang/String;Z)V

    .line 19447
    :cond_d6
    :goto_d6
    add-int/lit8 v2, v2, -0x1

    goto :goto_a7

    .line 19456
    :cond_d9
    invoke-virtual {p1}, Ljava/io/PrintWriter;->println()V

    goto :goto_d6

    .line 19461
    .end local v2    # "i":I
    .end local v4    # "w":Lcom/android/server/wm/WindowState;
    :cond_dd
    iget-object v8, p0, mForceRemoves:Ljava/util/ArrayList;

    if-eqz v8, :cond_127

    iget-object v8, p0, mForceRemoves:Ljava/util/ArrayList;

    invoke-virtual {v8}, Ljava/util/ArrayList;->size()I

    move-result v8

    if-lez v8, :cond_127

    .line 19462
    invoke-virtual {p1}, Ljava/io/PrintWriter;->println()V

    .line 19463
    const-string v8, "  Windows force removing:"

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19464
    iget-object v8, p0, mForceRemoves:Ljava/util/ArrayList;

    invoke-virtual {v8}, Ljava/util/ArrayList;->size()I

    move-result v8

    add-int/lit8 v2, v8, -0x1

    .restart local v2    # "i":I
    :goto_f9
    if-ltz v2, :cond_127

    .line 19465
    iget-object v8, p0, mForceRemoves:Ljava/util/ArrayList;

    invoke-virtual {v8, v2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/server/wm/WindowState;

    .line 19466
    .restart local v4    # "w":Lcom/android/server/wm/WindowState;
    const-string v8, "  Removing #"

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual {p1, v2}, Ljava/io/PrintWriter;->print(I)V

    const/16 v8, 0x20

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(C)V

    .line 19467
    invoke-virtual {p1, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/Object;)V

    .line 19468
    if-eqz p2, :cond_123

    .line 19469
    const-string v8, ":"

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19470
    const-string v8, "    "

    const/4 v9, 0x1

    invoke-virtual {v4, p1, v8, v9}, Lcom/android/server/wm/WindowState;->dump(Ljava/io/PrintWriter;Ljava/lang/String;Z)V

    .line 19464
    :goto_120
    add-int/lit8 v2, v2, -0x1

    goto :goto_f9

    .line 19472
    :cond_123
    invoke-virtual {p1}, Ljava/io/PrintWriter;->println()V

    goto :goto_120

    .line 19476
    .end local v2    # "i":I
    .end local v4    # "w":Lcom/android/server/wm/WindowState;
    :cond_127
    iget-object v8, p0, mDestroySurface:Ljava/util/ArrayList;

    invoke-virtual {v8}, Ljava/util/ArrayList;->size()I

    move-result v8

    if-lez v8, :cond_175

    .line 19477
    invoke-virtual {p1}, Ljava/io/PrintWriter;->println()V

    .line 19478
    const-string v8, "  Windows waiting to destroy their surface:"

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19479
    iget-object v8, p0, mDestroySurface:Ljava/util/ArrayList;

    invoke-virtual {v8}, Ljava/util/ArrayList;->size()I

    move-result v8

    add-int/lit8 v2, v8, -0x1

    .restart local v2    # "i":I
    :goto_13f
    if-ltz v2, :cond_175

    .line 19480
    iget-object v8, p0, mDestroySurface:Ljava/util/ArrayList;

    invoke-virtual {v8, v2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/server/wm/WindowState;

    .line 19481
    .restart local v4    # "w":Lcom/android/server/wm/WindowState;
    if-eqz p3, :cond_151

    invoke-virtual {p3, v4}, Ljava/util/ArrayList;->contains(Ljava/lang/Object;)Z

    move-result v8

    if-eqz v8, :cond_16e

    .line 19482
    :cond_151
    const-string v8, "  Destroy #"

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual {p1, v2}, Ljava/io/PrintWriter;->print(I)V

    const/16 v8, 0x20

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(C)V

    .line 19483
    invoke-virtual {p1, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/Object;)V

    .line 19484
    if-eqz p2, :cond_171

    .line 19485
    const-string v8, ":"

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19486
    const-string v8, "    "

    const/4 v9, 0x1

    invoke-virtual {v4, p1, v8, v9}, Lcom/android/server/wm/WindowState;->dump(Ljava/io/PrintWriter;Ljava/lang/String;Z)V

    .line 19479
    :cond_16e
    :goto_16e
    add-int/lit8 v2, v2, -0x1

    goto :goto_13f

    .line 19488
    :cond_171
    invoke-virtual {p1}, Ljava/io/PrintWriter;->println()V

    goto :goto_16e

    .line 19493
    .end local v2    # "i":I
    .end local v4    # "w":Lcom/android/server/wm/WindowState;
    :cond_175
    iget-object v8, p0, mLosingFocus:Ljava/util/ArrayList;

    invoke-virtual {v8}, Ljava/util/ArrayList;->size()I

    move-result v8

    if-lez v8, :cond_1c3

    .line 19494
    invoke-virtual {p1}, Ljava/io/PrintWriter;->println()V

    .line 19495
    const-string v8, "  Windows losing focus:"

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19496
    iget-object v8, p0, mLosingFocus:Ljava/util/ArrayList;

    invoke-virtual {v8}, Ljava/util/ArrayList;->size()I

    move-result v8

    add-int/lit8 v2, v8, -0x1

    .restart local v2    # "i":I
    :goto_18d
    if-ltz v2, :cond_1c3

    .line 19497
    iget-object v8, p0, mLosingFocus:Ljava/util/ArrayList;

    invoke-virtual {v8, v2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/server/wm/WindowState;

    .line 19498
    .restart local v4    # "w":Lcom/android/server/wm/WindowState;
    if-eqz p3, :cond_19f

    invoke-virtual {p3, v4}, Ljava/util/ArrayList;->contains(Ljava/lang/Object;)Z

    move-result v8

    if-eqz v8, :cond_1bc

    .line 19499
    :cond_19f
    const-string v8, "  Losing #"

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual {p1, v2}, Ljava/io/PrintWriter;->print(I)V

    const/16 v8, 0x20

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(C)V

    .line 19500
    invoke-virtual {p1, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/Object;)V

    .line 19501
    if-eqz p2, :cond_1bf

    .line 19502
    const-string v8, ":"

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19503
    const-string v8, "    "

    const/4 v9, 0x1

    invoke-virtual {v4, p1, v8, v9}, Lcom/android/server/wm/WindowState;->dump(Ljava/io/PrintWriter;Ljava/lang/String;Z)V

    .line 19496
    :cond_1bc
    :goto_1bc
    add-int/lit8 v2, v2, -0x1

    goto :goto_18d

    .line 19505
    :cond_1bf
    invoke-virtual {p1}, Ljava/io/PrintWriter;->println()V

    goto :goto_1bc

    .line 19510
    .end local v2    # "i":I
    .end local v4    # "w":Lcom/android/server/wm/WindowState;
    :cond_1c3
    iget-object v8, p0, mResizingWindows:Ljava/util/ArrayList;

    invoke-virtual {v8}, Ljava/util/ArrayList;->size()I

    move-result v8

    if-lez v8, :cond_211

    .line 19511
    invoke-virtual {p1}, Ljava/io/PrintWriter;->println()V

    .line 19512
    const-string v8, "  Windows waiting to resize:"

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19513
    iget-object v8, p0, mResizingWindows:Ljava/util/ArrayList;

    invoke-virtual {v8}, Ljava/util/ArrayList;->size()I

    move-result v8

    add-int/lit8 v2, v8, -0x1

    .restart local v2    # "i":I
    :goto_1db
    if-ltz v2, :cond_211

    .line 19514
    iget-object v8, p0, mResizingWindows:Ljava/util/ArrayList;

    invoke-virtual {v8, v2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/server/wm/WindowState;

    .line 19515
    .restart local v4    # "w":Lcom/android/server/wm/WindowState;
    if-eqz p3, :cond_1ed

    invoke-virtual {p3, v4}, Ljava/util/ArrayList;->contains(Ljava/lang/Object;)Z

    move-result v8

    if-eqz v8, :cond_20a

    .line 19516
    :cond_1ed
    const-string v8, "  Resizing #"

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual {p1, v2}, Ljava/io/PrintWriter;->print(I)V

    const/16 v8, 0x20

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(C)V

    .line 19517
    invoke-virtual {p1, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/Object;)V

    .line 19518
    if-eqz p2, :cond_20d

    .line 19519
    const-string v8, ":"

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19520
    const-string v8, "    "

    const/4 v9, 0x1

    invoke-virtual {v4, p1, v8, v9}, Lcom/android/server/wm/WindowState;->dump(Ljava/io/PrintWriter;Ljava/lang/String;Z)V

    .line 19513
    :cond_20a
    :goto_20a
    add-int/lit8 v2, v2, -0x1

    goto :goto_1db

    .line 19522
    :cond_20d
    invoke-virtual {p1}, Ljava/io/PrintWriter;->println()V

    goto :goto_20a

    .line 19527
    .end local v2    # "i":I
    .end local v4    # "w":Lcom/android/server/wm/WindowState;
    :cond_211
    iget-object v8, p0, mWaitingForDrawn:Ljava/util/ArrayList;

    invoke-virtual {v8}, Ljava/util/ArrayList;->size()I

    move-result v8

    if-lez v8, :cond_246

    .line 19528
    invoke-virtual {p1}, Ljava/io/PrintWriter;->println()V

    .line 19529
    const-string v8, "  Clients waiting for these windows to be drawn:"

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19530
    iget-object v8, p0, mWaitingForDrawn:Ljava/util/ArrayList;

    invoke-virtual {v8}, Ljava/util/ArrayList;->size()I

    move-result v8

    add-int/lit8 v2, v8, -0x1

    .restart local v2    # "i":I
    :goto_229
    if-ltz v2, :cond_246

    .line 19531
    iget-object v8, p0, mWaitingForDrawn:Ljava/util/ArrayList;

    invoke-virtual {v8, v2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/android/server/wm/WindowState;

    .line 19532
    .local v5, "win":Lcom/android/server/wm/WindowState;
    const-string v8, "  Waiting #"

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual {p1, v2}, Ljava/io/PrintWriter;->print(I)V

    const/16 v8, 0x20

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(C)V

    invoke-virtual {p1, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/Object;)V

    .line 19530
    add-int/lit8 v2, v2, -0x1

    goto :goto_229

    .line 19552
    .end local v2    # "i":I
    .end local v5    # "win":Lcom/android/server/wm/WindowState;
    :cond_246
    invoke-virtual {p1}, Ljava/io/PrintWriter;->println()V

    .line 19553
    const-string v8, "  mCurConfiguration="

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-object v8, p0, mCurConfiguration:Landroid/content/res/Configuration;

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    .line 19554
    const-string v8, "  mHasPermanentDpad="

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-boolean v8, p0, mHasPermanentDpad:Z

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Z)V

    .line 19555
    const-string v8, "  mCurrentFocus="

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-object v8, p0, mCurrentFocus:Lcom/android/server/wm/WindowState;

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    .line 19556
    iget-object v8, p0, mLastFocus:Lcom/android/server/wm/WindowState;

    iget-object v9, p0, mCurrentFocus:Lcom/android/server/wm/WindowState;

    if-eq v8, v9, :cond_277

    .line 19557
    const-string v8, "  mLastFocus="

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-object v8, p0, mLastFocus:Lcom/android/server/wm/WindowState;

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    .line 19559
    :cond_277
    const-string v8, "  mFocusedApp="

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-object v8, p0, mFocusedApp:Lcom/android/server/wm/AppWindowToken;

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    .line 19560
    iget-object v8, p0, mInputMethodTarget:Lcom/android/server/wm/WindowState;

    if-eqz v8, :cond_28f

    .line 19561
    const-string v8, "  mInputMethodTarget="

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-object v8, p0, mInputMethodTarget:Lcom/android/server/wm/WindowState;

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    .line 19563
    :cond_28f
    const-string v8, "  mInTouchMode="

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-boolean v8, p0, mInTouchMode:Z

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Z)V

    .line 19564
    const-string v8, " mLayoutSeq="

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v8, p0, mLayoutSeq:I

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(I)V

    .line 19565
    const-string v8, "  mLastDisplayFreezeDuration="

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 19566
    iget v8, p0, mLastDisplayFreezeDuration:I

    int-to-long v8, v8

    invoke-static {v8, v9, p1}, Landroid/util/TimeUtils;->formatDuration(JLjava/io/PrintWriter;)V

    .line 19567
    iget-object v8, p0, mLastFinishedFreezeSource:Ljava/lang/Object;

    if-eqz v8, :cond_2bc

    .line 19568
    const-string v8, " due to "

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 19569
    iget-object v8, p0, mLastFinishedFreezeSource:Ljava/lang/Object;

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/Object;)V

    .line 19571
    :cond_2bc
    invoke-virtual {p1}, Ljava/io/PrintWriter;->println()V

    .line 19572
    if-eqz p2, :cond_49d

    .line 19573
    const-string v8, "  mSystemDecorLayer="

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v8, p0, mSystemDecorLayer:I

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(I)V

    .line 19574
    const-string v8, " mScreenRect="

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-object v8, p0, mScreenRect:Landroid/graphics/Rect;

    invoke-virtual {v8}, Landroid/graphics/Rect;->toShortString()Ljava/lang/String;

    move-result-object v8

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19575
    iget v8, p0, mLastStatusBarVisibility:I

    if-eqz v8, :cond_2eb

    .line 19576
    const-string v8, "  mLastStatusBarVisibility=0x"

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 19577
    iget v8, p0, mLastStatusBarVisibility:I

    invoke-static {v8}, Ljava/lang/Integer;->toHexString(I)Ljava/lang/String;

    move-result-object v8

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19593
    :cond_2eb
    iget-object v8, p0, mInputMethodWindow:Lcom/android/server/wm/WindowState;

    if-eqz v8, :cond_2f9

    .line 19594
    const-string v8, "  mInputMethodWindow="

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-object v8, p0, mInputMethodWindow:Lcom/android/server/wm/WindowState;

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    .line 19623
    :cond_2f9
    const-string v8, "  mWallpaperTarget="

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-object v8, p0, mWallpaperTarget:Lcom/android/server/wm/WindowState;

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    .line 19624
    iget-object v8, p0, mLowerWallpaperTarget:Lcom/android/server/wm/WindowState;

    if-nez v8, :cond_30b

    iget-object v8, p0, mUpperWallpaperTarget:Lcom/android/server/wm/WindowState;

    if-eqz v8, :cond_31f

    .line 19625
    :cond_30b
    const-string v8, "  mLowerWallpaperTarget="

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-object v8, p0, mLowerWallpaperTarget:Lcom/android/server/wm/WindowState;

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    .line 19626
    const-string v8, "  mUpperWallpaperTarget="

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-object v8, p0, mUpperWallpaperTarget:Lcom/android/server/wm/WindowState;

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    .line 19628
    :cond_31f
    const-string v8, "  mLastWallpaperX="

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v8, p0, mLastWallpaperX:F

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(F)V

    .line 19629
    const-string v8, " mLastWallpaperY="

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v8, p0, mLastWallpaperY:F

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(F)V

    .line 19630
    iget v8, p0, mLastWallpaperDisplayOffsetX:I

    const/high16 v9, -0x80000000

    if-ne v8, v9, :cond_33f

    iget v8, p0, mLastWallpaperDisplayOffsetY:I

    const/high16 v9, -0x80000000

    if-eq v8, v9, :cond_353

    .line 19632
    :cond_33f
    const-string v8, "  mLastWallpaperDisplayOffsetX="

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v8, p0, mLastWallpaperDisplayOffsetX:I

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(I)V

    .line 19633
    const-string v8, " mLastWallpaperDisplayOffsetY="

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 19634
    iget v8, p0, mLastWallpaperDisplayOffsetY:I

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(I)V

    .line 19636
    :cond_353
    iget v8, p0, mInputMethodAnimLayerAdjustment:I

    if-nez v8, :cond_35b

    iget v8, p0, mWallpaperAnimLayerAdjustment:I

    if-eqz v8, :cond_36f

    .line 19638
    :cond_35b
    const-string v8, "  mInputMethodAnimLayerAdjustment="

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 19639
    iget v8, p0, mInputMethodAnimLayerAdjustment:I

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(I)V

    .line 19640
    const-string v8, "  mWallpaperAnimLayerAdjustment="

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 19641
    iget v8, p0, mWallpaperAnimLayerAdjustment:I

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(I)V

    .line 19644
    :cond_36f
    const-string v8, "  mSystemBooted="

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-boolean v8, p0, mSystemBooted:Z

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Z)V

    .line 19645
    const-string v8, " mDisplayEnabled="

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-boolean v8, p0, mDisplayEnabled:Z

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Z)V

    .line 19646
    invoke-direct {p0}, needsLayout()Z

    move-result v8

    if-eqz v8, :cond_3aa

    .line 19647
    const-string v8, "  layoutNeeded on displays="

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 19648
    const/4 v1, 0x0

    :goto_38f
    if-ge v1, v3, :cond_3a7

    .line 19649
    iget-object v8, p0, mDisplayContents:Landroid/util/SparseArray;

    invoke-virtual {v8, v1}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/wm/DisplayContent;

    .line 19650
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    iget-boolean v8, v0, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    if-eqz v8, :cond_3a4

    .line 19651
    invoke-virtual {v0}, Lcom/android/server/wm/DisplayContent;->getDisplayId()I

    move-result v8

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(I)V

    .line 19648
    :cond_3a4
    add-int/lit8 v1, v1, 0x1

    goto :goto_38f

    .line 19654
    .end local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :cond_3a7
    invoke-virtual {p1}, Ljava/io/PrintWriter;->println()V

    .line 19656
    :cond_3aa
    const-string v8, "  mTransactionSequence="

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v8, p0, mTransactionSequence:I

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(I)V

    .line 19657
    const-string v8, "  mDisplayFrozen="

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-boolean v8, p0, mDisplayFrozen:Z

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Z)V

    .line 19658
    const-string v8, " windows="

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v8, p0, mWindowsFreezingScreen:I

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(I)V

    .line 19659
    const-string v8, " client="

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-boolean v8, p0, mClientFreezingScreen:Z

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Z)V

    .line 19660
    const-string v8, " apps="

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v8, p0, mAppsFreezingScreen:I

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(I)V

    .line 19662
    const-string v8, " hasAppWindowWaitingForOrientation="

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-boolean v8, p0, mHasAppWindowForWaitingForOrientation:Z

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Z)V

    .line 19664
    const-string v8, " waitingForConfig="

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-boolean v8, p0, mWaitingForConfig:Z

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Z)V

    .line 19680
    const-string v8, "  mRotation="

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v8, p0, mRotation:I

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(I)V

    .line 19681
    const-string v8, " mAltOrientation="

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-boolean v8, p0, mAltOrientation:Z

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Z)V

    .line 19682
    const-string v8, "  mLastWindowForcedOrientation="

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v8, p0, mLastWindowForcedOrientation:I

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(I)V

    .line 19683
    const-string v8, " mForcedAppOrientation="

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v8, p0, mForcedAppOrientation:I

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(I)V

    .line 19696
    const-string v8, "  mDeferredRotationPauseCount="

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v8, p0, mDeferredRotationPauseCount:I

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(I)V

    .line 19697
    const-string v8, "  Animation settings: disabled="

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-boolean v8, p0, mAnimationsDisabled:Z

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Z)V

    .line 19698
    const-string v8, " window="

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v8, p0, mWindowAnimationScaleSetting:F

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(F)V

    .line 19699
    const-string v8, " transition="

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v8, p0, mTransitionAnimationScaleSetting:F

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(F)V

    .line 19700
    const-string v8, " animator="

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v8, p0, mAnimatorDurationScaleSetting:F

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(F)V

    .line 19701
    const-string v8, "  mTraversalScheduled="

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-boolean v8, p0, mTraversalScheduled:Z

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Z)V

    .line 19702
    const-string v8, " mSkipAppTransitionAnimation="

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-boolean v8, p0, mSkipAppTransitionAnimation:Z

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Z)V

    .line 19703
    const-string v8, "  mLayoutToAnim:"

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19704
    iget-object v8, p0, mAppTransition:Lcom/android/server/wm/AppTransition;

    const-string v9, "    "

    invoke-virtual {v8, p1, v9}, Lcom/android/server/wm/AppTransition;->dump(Ljava/io/PrintWriter;Ljava/lang/String;)V

    .line 19723
    iget-object v8, p0, mAppTransition:Lcom/android/server/wm/AppTransition;

    const-string v9, "    "

    invoke-virtual {v8, p1, v9}, Lcom/android/server/wm/AppTransition;->dump(Ljava/io/PrintWriter;Ljava/lang/String;)V

    .line 19726
    sget-boolean v8, Lcom/samsung/android/multiwindow/MultiWindowFeatures;->SELECTIVE1ORIENTATION_ENABLED:Z

    if-eqz v8, :cond_49d

    .line 19727
    const-string v8, "  mMinStackBoundForPort="

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-object v8, p0, mMinStackBoundForPort:Landroid/graphics/Rect;

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    .line 19728
    const-string v8, "  mMinStackBoundForLand="

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-object v8, p0, mMinStackBoundForLand:Landroid/graphics/Rect;

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    .line 19729
    const-string v8, "  mMaxSelectiveStackBoundForPort="

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-object v8, p0, mMaxSelectiveStackBoundForPort:Landroid/graphics/Rect;

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    .line 19730
    const-string v8, "  mMaxSelectiveStackBoundForLand="

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-object v8, p0, mMaxSelectiveStackBoundForLand:Landroid/graphics/Rect;

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    .line 19734
    :cond_49d
    return-void
.end method

.method public enableScreenAfterBoot()V
    .registers 7

    .prologue
    .line 10281
    iget-object v1, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v1

    .line 10290
    :try_start_3
    iget-boolean v0, p0, mSystemBooted:Z

    if-eqz v0, :cond_9

    .line 10291
    monitor-exit v1

    .line 10303
    :goto_8
    return-void

    .line 10293
    :cond_9
    const/4 v0, 0x1

    iput-boolean v0, p0, mSystemBooted:Z

    .line 10294
    invoke-virtual {p0}, hideBootMessagesLocked()V

    .line 10297
    iget-object v0, p0, mH:Lcom/android/server/wm/WindowManagerService$H;

    const/16 v2, 0x17

    const-wide/16 v4, 0x7530

    invoke-virtual {v0, v2, v4, v5}, Lcom/android/server/wm/WindowManagerService$H;->sendEmptyMessageDelayed(IJ)Z

    .line 10298
    monitor-exit v1
    :try_end_19
    .catchall {:try_start_3 .. :try_end_19} :catchall_22

    .line 10300
    iget-object v0, p0, mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v0}, Landroid/view/WindowManagerPolicy;->systemBooted()V

    .line 10302
    invoke-virtual {p0}, performEnableScreen()V

    goto :goto_8

    .line 10298
    :catchall_22
    move-exception v0

    :try_start_23
    monitor-exit v1
    :try_end_24
    .catchall {:try_start_23 .. :try_end_24} :catchall_22

    throw v0
.end method

.method public enableScreenIfNeeded()V
    .registers 3

    .prologue
    .line 10307
    iget-object v1, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v1

    .line 10308
    :try_start_3
    invoke-virtual {p0}, enableScreenIfNeededLocked()V

    .line 10309
    monitor-exit v1

    .line 10310
    return-void

    .line 10309
    :catchall_8
    move-exception v0

    monitor-exit v1
    :try_end_a
    .catchall {:try_start_3 .. :try_end_a} :catchall_8

    throw v0
.end method

.method enableScreenIfNeededLocked()V
    .registers 3

    .prologue
    .line 10321
    iget-boolean v0, p0, mDisplayEnabled:Z

    if-eqz v0, :cond_5

    .line 10328
    :cond_4
    :goto_4
    return-void

    .line 10324
    :cond_5
    iget-boolean v0, p0, mSystemBooted:Z

    if-nez v0, :cond_d

    iget-boolean v0, p0, mShowingBootMessages:Z

    if-eqz v0, :cond_4

    .line 10327
    :cond_d
    iget-object v0, p0, mH:Lcom/android/server/wm/WindowManagerService$H;

    const/16 v1, 0x10

    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowManagerService$H;->sendEmptyMessage(I)Z

    goto :goto_4
.end method

.method public executeAppTransition()V
    .registers 3

    .prologue
    .line 7912
    const-string v0, "android.permission.MANAGE_APP_TOKENS"

    const-string/jumbo v1, "executeAppTransition()"

    invoke-virtual {p0, v0, v1}, checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v0

    if-nez v0, :cond_13

    .line 7914
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Requires MANAGE_APP_TOKENS permission"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 7917
    :cond_13
    invoke-virtual {p0}, getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v0

    invoke-virtual {v0}, Lcom/android/server/wm/DisplayContent;->getDisplayId()I

    move-result v0

    invoke-virtual {p0, v0}, executeAppTransition(I)V

    .line 7918
    return-void
.end method

.method public executeAppTransition(I)V
    .registers 3
    .param p1, "displayId"    # I

    .prologue
    .line 7921
    const/4 v0, 0x1

    invoke-virtual {p0, p1, v0}, executeAppTransition(IZ)Z

    .line 7922
    return-void
.end method

.method public executeAppTransition(IZ)Z
    .registers 12
    .param p1, "displayId"    # I
    .param p2, "needsLayout"    # Z

    .prologue
    .line 7938
    iget-object v5, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v5

    .line 7940
    :try_start_3
    invoke-virtual {p0, p1}, getAppTransitionForDisplayLocked(I)Lcom/android/server/wm/AppTransition;

    move-result-object v1

    .line 7941
    .local v1, "mAppTransition":Lcom/android/server/wm/AppTransition;
    const/4 v0, 0x0

    .line 7943
    .local v0, "changed":Z
    sget-boolean v4, DEBUG_APP_TRANSITIONS:Z

    if-eqz v4, :cond_3a

    const-string v4, "WindowManager"

    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "Execute app transition: "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v6

    const-string v7, " displayId = "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    new-instance v7, Ljava/lang/RuntimeException;

    const-string/jumbo v8, "here"

    invoke-direct {v7, v8}, Ljava/lang/RuntimeException;-><init>(Ljava/lang/String;)V

    invoke-virtual {v7}, Ljava/lang/RuntimeException;->fillInStackTrace()Ljava/lang/Throwable;

    move-result-object v7

    invoke-static {v4, v6, v7}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 7945
    :cond_3a
    invoke-virtual {v1}, Lcom/android/server/wm/AppTransition;->isTransitionSet()Z

    move-result v4

    if-eqz v4, :cond_50

    .line 7946
    invoke-virtual {v1}, Lcom/android/server/wm/AppTransition;->setReady()V

    .line 7947
    const/4 v0, 0x1

    .line 7948
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J
    :try_end_47
    .catchall {:try_start_3 .. :try_end_47} :catchall_57

    move-result-wide v2

    .line 7950
    .local v2, "origId":J
    if-eqz p2, :cond_4d

    .line 7951
    :try_start_4a
    invoke-direct {p0}, performLayoutAndPlaceSurfacesLocked()V
    :try_end_4d
    .catchall {:try_start_4a .. :try_end_4d} :catchall_52

    .line 7954
    :cond_4d
    :try_start_4d
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 7957
    .end local v2    # "origId":J
    :cond_50
    monitor-exit v5

    return v0

    .line 7954
    .restart local v2    # "origId":J
    :catchall_52
    move-exception v4

    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v4

    .line 7958
    .end local v0    # "changed":Z
    .end local v1    # "mAppTransition":Lcom/android/server/wm/AppTransition;
    .end local v2    # "origId":J
    :catchall_57
    move-exception v4

    monitor-exit v5
    :try_end_59
    .catchall {:try_start_4d .. :try_end_59} :catchall_57

    throw v4
.end method

.method public exitKeyguardSecurely(Landroid/view/IOnKeyguardExitResult;)V
    .registers 4
    .param p1, "callback"    # Landroid/view/IOnKeyguardExitResult;

    .prologue
    .line 9815
    iget-object v0, p0, mContext:Landroid/content/Context;

    const-string v1, "android.permission.DISABLE_KEYGUARD"

    invoke-virtual {v0, v1}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    move-result v0

    if-eqz v0, :cond_12

    .line 9817
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Requires DISABLE_KEYGUARD permission"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 9820
    :cond_12
    if-nez p1, :cond_1c

    .line 9821
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string v1, "callback == null"

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 9824
    :cond_1c
    iget-object v0, p0, mPolicy:Landroid/view/WindowManagerPolicy;

    new-instance v1, Lcom/android/server/wm/WindowManagerService$7;

    invoke-direct {v1, p0, p1}, Lcom/android/server/wm/WindowManagerService$7;-><init>(Lcom/android/server/wm/WindowManagerService;Landroid/view/IOnKeyguardExitResult;)V

    invoke-interface {v0, v1}, Landroid/view/WindowManagerPolicy;->exitKeyguardSecurely(Landroid/view/WindowManagerPolicy$OnKeyguardExitResult;)V

    .line 9834
    return-void
.end method

.method public fadeOutDualScreenTransitionIfNeeded()V
    .registers 1

    .prologue
    .line 23196
    return-void
.end method

.method findAppWindowToken(Landroid/os/IBinder;)Lcom/android/server/wm/AppWindowToken;
    .registers 4
    .param p1, "token"    # Landroid/os/IBinder;

    .prologue
    .line 6241
    iget-object v1, p0, mTokenMap:Ljava/util/HashMap;

    invoke-virtual {v1, p1}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/wm/WindowToken;

    .line 6242
    .local v0, "wtoken":Lcom/android/server/wm/WindowToken;
    if-nez v0, :cond_c

    .line 6243
    const/4 v1, 0x0

    .line 6245
    :goto_b
    return-object v1

    :cond_c
    iget-object v1, v0, Lcom/android/server/wm/WindowToken;->appWindowToken:Lcom/android/server/wm/AppWindowToken;

    goto :goto_b
.end method

.method findDesiredInputMethodWindowIndexLocked(Z)I
    .registers 21
    .param p1, "willMove"    # Z

    .prologue
    .line 2461
    invoke-virtual/range {p0 .. p0}, getDefaultWindowListLocked()Lcom/android/server/wm/WindowList;

    move-result-object v16

    .line 2462
    .local v16, "windows":Lcom/android/server/wm/WindowList;
    const/4 v13, 0x0

    .line 2464
    .local v13, "w":Lcom/android/server/wm/WindowState;
    invoke-virtual/range {v16 .. v16}, Lcom/android/server/wm/WindowList;->size()I

    move-result v17

    add-int/lit8 v8, v17, -0x1

    .local v8, "i":I
    :goto_b
    if-ltz v8, :cond_80

    .line 2465
    move-object/from16 v0, v16

    invoke-virtual {v0, v8}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v15

    check-cast v15, Lcom/android/server/wm/WindowState;

    .line 2470
    .local v15, "win":Lcom/android/server/wm/WindowState;
    move-object/from16 v0, p0

    iget-boolean v0, v0, mSkipWidgetFocus:Z

    move/from16 v17, v0

    if-eqz v17, :cond_44

    iget-object v0, v15, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    move-object/from16 v17, v0

    move-object/from16 v0, v17

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    move/from16 v17, v0

    const/16 v18, 0x834

    move/from16 v0, v17

    move/from16 v1, v18

    if-eq v0, v1, :cond_41

    iget-object v0, v15, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    move-object/from16 v17, v0

    move-object/from16 v0, v17

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    move/from16 v17, v0

    const/16 v18, 0x836

    move/from16 v0, v17

    move/from16 v1, v18

    if-ne v0, v1, :cond_44

    .line 2464
    :cond_41
    add-int/lit8 v8, v8, -0x1

    goto :goto_b

    .line 2475
    :cond_44
    invoke-static {v15}, canBeImeTarget(Lcom/android/server/wm/WindowState;)Z

    move-result v17

    if-eqz v17, :cond_41

    .line 2476
    move-object v13, v15

    .line 2484
    if-nez p1, :cond_80

    iget-object v0, v13, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    move-object/from16 v17, v0

    move-object/from16 v0, v17

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    move/from16 v17, v0

    const/16 v18, 0x3

    move/from16 v0, v17

    move/from16 v1, v18

    if-ne v0, v1, :cond_80

    if-lez v8, :cond_80

    .line 2487
    add-int/lit8 v17, v8, -0x1

    invoke-virtual/range {v16 .. v17}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v14

    check-cast v14, Lcom/android/server/wm/WindowState;

    .line 2488
    .local v14, "wb":Lcom/android/server/wm/WindowState;
    iget-object v0, v14, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    move-object/from16 v17, v0

    iget-object v0, v13, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    move-object/from16 v18, v0

    move-object/from16 v0, v17

    move-object/from16 v1, v18

    if-ne v0, v1, :cond_80

    invoke-static {v14}, canBeImeTarget(Lcom/android/server/wm/WindowState;)Z

    move-result v17

    if-eqz v17, :cond_80

    .line 2489
    add-int/lit8 v8, v8, -0x1

    .line 2490
    move-object v13, v14

    .line 2507
    .end local v14    # "wb":Lcom/android/server/wm/WindowState;
    .end local v15    # "win":Lcom/android/server/wm/WindowState;
    :cond_80
    move-object/from16 v0, p0

    iget-object v4, v0, mInputMethodTarget:Lcom/android/server/wm/WindowState;

    .line 2508
    .local v4, "curTarget":Lcom/android/server/wm/WindowState;
    if-eqz v4, :cond_d1

    invoke-virtual {v4}, Lcom/android/server/wm/WindowState;->isDisplayedLw()Z

    move-result v17

    if-eqz v17, :cond_d1

    invoke-virtual {v4}, Lcom/android/server/wm/WindowState;->isClosing()Z

    move-result v17

    if-eqz v17, :cond_d1

    if-eqz v13, :cond_ba

    iget-object v0, v13, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    move-object/from16 v17, v0

    move-object/from16 v0, v17

    iget v0, v0, Lcom/android/server/wm/WindowStateAnimator;->mAnimLayer:I

    move/from16 v17, v0

    if-eqz v17, :cond_d1

    iget-object v0, v4, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    move-object/from16 v17, v0

    move-object/from16 v0, v17

    iget v0, v0, Lcom/android/server/wm/WindowStateAnimator;->mAnimLayer:I

    move/from16 v17, v0

    iget-object v0, v13, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    move-object/from16 v18, v0

    move-object/from16 v0, v18

    iget v0, v0, Lcom/android/server/wm/WindowStateAnimator;->mAnimLayer:I

    move/from16 v18, v0

    move/from16 v0, v17

    move/from16 v1, v18

    if-le v0, v1, :cond_d1

    .line 2513
    :cond_ba
    move-object/from16 v0, v16

    invoke-virtual {v0, v4}, Lcom/android/server/wm/WindowList;->indexOf(Ljava/lang/Object;)I

    move-result v17

    add-int/lit8 v11, v17, 0x1

    .line 2514
    .local v11, "targetIndex":I
    move-object/from16 v0, p0

    iget-object v0, v0, mMultiWindowCenterBar:Lcom/android/server/wm/WindowState;

    move-object/from16 v17, v0

    invoke-virtual/range {v16 .. v17}, Lcom/android/server/wm/WindowList;->indexOf(Ljava/lang/Object;)I

    move-result v3

    .line 2515
    .local v3, "centerBarIndex":I
    if-lt v3, v11, :cond_d0

    add-int/lit8 v11, v3, 0x1

    .line 2619
    .end local v3    # "centerBarIndex":I
    .end local v11    # "targetIndex":I
    :cond_d0
    :goto_d0
    return v11

    .line 2521
    :cond_d1
    if-eqz p1, :cond_185

    if-eqz v13, :cond_185

    .line 2522
    if-nez v4, :cond_127

    const/4 v12, 0x0

    .line 2523
    .local v12, "token":Lcom/android/server/wm/AppWindowToken;
    :goto_d8
    if-eqz v12, :cond_185

    .line 2529
    const/4 v7, 0x0

    .line 2530
    .local v7, "highestTarget":Lcom/android/server/wm/WindowState;
    const/4 v6, 0x0

    .line 2531
    .local v6, "highestPos":I
    iget-object v0, v12, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    move-object/from16 v17, v0

    move-object/from16 v0, v17

    iget-boolean v0, v0, Lcom/android/server/wm/AppWindowAnimator;->animating:Z

    move/from16 v17, v0

    if-nez v17, :cond_f4

    iget-object v0, v12, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    move-object/from16 v17, v0

    move-object/from16 v0, v17

    iget-object v0, v0, Lcom/android/server/wm/AppWindowAnimator;->animation:Landroid/view/animation/Animation;

    move-object/from16 v17, v0

    if-eqz v17, :cond_10c

    .line 2532
    :cond_f4
    invoke-virtual {v4}, Lcom/android/server/wm/WindowState;->getWindowList()Lcom/android/server/wm/WindowList;

    move-result-object v5

    .line 2533
    .local v5, "curWindows":Lcom/android/server/wm/WindowList;
    invoke-virtual {v5, v4}, Lcom/android/server/wm/WindowList;->indexOf(Ljava/lang/Object;)I

    move-result v10

    .line 2534
    .local v10, "pos":I
    :goto_fc
    if-ltz v10, :cond_10c

    .line 2535
    invoke-virtual {v5, v10}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v15

    check-cast v15, Lcom/android/server/wm/WindowState;

    .line 2536
    .restart local v15    # "win":Lcom/android/server/wm/WindowState;
    iget-object v0, v15, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    move-object/from16 v17, v0

    move-object/from16 v0, v17

    if-eq v0, v12, :cond_12a

    .line 2550
    .end local v5    # "curWindows":Lcom/android/server/wm/WindowList;
    .end local v10    # "pos":I
    .end local v15    # "win":Lcom/android/server/wm/WindowState;
    :cond_10c
    if-eqz v7, :cond_185

    .line 2552
    move-object/from16 v0, p0

    iget-object v9, v0, mAppTransition:Lcom/android/server/wm/AppTransition;

    .line 2562
    .local v9, "mAppTransition":Lcom/android/server/wm/AppTransition;
    invoke-virtual {v9}, Lcom/android/server/wm/AppTransition;->isTransitionSet()Z

    move-result v17

    if-eqz v17, :cond_151

    .line 2565
    const/16 v17, 0x1

    move/from16 v0, v17

    move-object/from16 v1, p0

    iput-boolean v0, v1, mInputMethodTargetWaitingAnim:Z

    .line 2566
    move-object/from16 v0, p0

    iput-object v7, v0, mInputMethodTarget:Lcom/android/server/wm/WindowState;

    .line 2567
    add-int/lit8 v11, v6, 0x1

    goto :goto_d0

    .line 2522
    .end local v6    # "highestPos":I
    .end local v7    # "highestTarget":Lcom/android/server/wm/WindowState;
    .end local v9    # "mAppTransition":Lcom/android/server/wm/AppTransition;
    .end local v12    # "token":Lcom/android/server/wm/AppWindowToken;
    :cond_127
    iget-object v12, v4, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    goto :goto_d8

    .line 2539
    .restart local v5    # "curWindows":Lcom/android/server/wm/WindowList;
    .restart local v6    # "highestPos":I
    .restart local v7    # "highestTarget":Lcom/android/server/wm/WindowState;
    .restart local v10    # "pos":I
    .restart local v12    # "token":Lcom/android/server/wm/AppWindowToken;
    .restart local v15    # "win":Lcom/android/server/wm/WindowState;
    :cond_12a
    iget-boolean v0, v15, Lcom/android/server/wm/WindowState;->mRemoved:Z

    move/from16 v17, v0

    if-nez v17, :cond_14e

    .line 2540
    if-eqz v7, :cond_14c

    iget-object v0, v15, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    move-object/from16 v17, v0

    move-object/from16 v0, v17

    iget v0, v0, Lcom/android/server/wm/WindowStateAnimator;->mAnimLayer:I

    move/from16 v17, v0

    iget-object v0, v7, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    move-object/from16 v18, v0

    move-object/from16 v0, v18

    iget v0, v0, Lcom/android/server/wm/WindowStateAnimator;->mAnimLayer:I

    move/from16 v18, v0

    move/from16 v0, v17

    move/from16 v1, v18

    if-le v0, v1, :cond_14e

    .line 2542
    :cond_14c
    move-object v7, v15

    .line 2543
    move v6, v10

    .line 2546
    :cond_14e
    add-int/lit8 v10, v10, -0x1

    .line 2547
    goto :goto_fc

    .line 2568
    .end local v5    # "curWindows":Lcom/android/server/wm/WindowList;
    .end local v10    # "pos":I
    .end local v15    # "win":Lcom/android/server/wm/WindowState;
    .restart local v9    # "mAppTransition":Lcom/android/server/wm/AppTransition;
    :cond_151
    iget-object v0, v7, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    move-object/from16 v17, v0

    invoke-virtual/range {v17 .. v17}, Lcom/android/server/wm/WindowStateAnimator;->isAnimating()Z

    move-result v17

    if-eqz v17, :cond_185

    iget-object v0, v7, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    move-object/from16 v17, v0

    move-object/from16 v0, v17

    iget v0, v0, Lcom/android/server/wm/WindowStateAnimator;->mAnimLayer:I

    move/from16 v17, v0

    iget-object v0, v13, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    move-object/from16 v18, v0

    move-object/from16 v0, v18

    iget v0, v0, Lcom/android/server/wm/WindowStateAnimator;->mAnimLayer:I

    move/from16 v18, v0

    move/from16 v0, v17

    move/from16 v1, v18

    if-le v0, v1, :cond_185

    .line 2574
    const/16 v17, 0x1

    move/from16 v0, v17

    move-object/from16 v1, p0

    iput-boolean v0, v1, mInputMethodTargetWaitingAnim:Z

    .line 2575
    move-object/from16 v0, p0

    iput-object v7, v0, mInputMethodTarget:Lcom/android/server/wm/WindowState;

    .line 2576
    add-int/lit8 v11, v6, 0x1

    goto/16 :goto_d0

    .line 2583
    .end local v6    # "highestPos":I
    .end local v7    # "highestTarget":Lcom/android/server/wm/WindowState;
    .end local v9    # "mAppTransition":Lcom/android/server/wm/AppTransition;
    .end local v12    # "token":Lcom/android/server/wm/AppWindowToken;
    :cond_185
    if-eqz v13, :cond_1fd

    .line 2584
    if-eqz p1, :cond_1b2

    .line 2587
    move-object/from16 v0, p0

    iput-object v13, v0, mInputMethodTarget:Lcom/android/server/wm/WindowState;

    .line 2588
    const/16 v17, 0x0

    move/from16 v0, v17

    move-object/from16 v1, p0

    iput-boolean v0, v1, mInputMethodTargetWaitingAnim:Z

    .line 2589
    iget-object v0, v13, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    move-object/from16 v17, v0

    if-eqz v17, :cond_1f0

    .line 2590
    iget-object v0, v13, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    move-object/from16 v17, v0

    move-object/from16 v0, v17

    iget-object v0, v0, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    move-object/from16 v17, v0

    move-object/from16 v0, v17

    iget v0, v0, Lcom/android/server/wm/AppWindowAnimator;->animLayerAdjustment:I

    move/from16 v17, v0

    move-object/from16 v0, p0

    move/from16 v1, v17

    invoke-virtual {v0, v1}, setInputMethodAnimLayerAdjustment(I)V

    .line 2599
    :cond_1b2
    :goto_1b2
    move-object/from16 v0, p0

    iget-object v0, v0, mMultiWindowCenterBar:Lcom/android/server/wm/WindowState;

    move-object/from16 v17, v0

    invoke-virtual/range {v16 .. v17}, Lcom/android/server/wm/WindowList;->indexOf(Ljava/lang/Object;)I

    move-result v17

    add-int/lit8 v18, v8, 0x1

    move/from16 v0, v17

    move/from16 v1, v18

    if-ne v0, v1, :cond_1c6

    .line 2600
    add-int/lit8 v8, v8, 0x1

    .line 2602
    :cond_1c6
    invoke-virtual/range {v16 .. v16}, Lcom/android/server/wm/WindowList;->size()I

    move-result v2

    .line 2603
    .local v2, "N":I
    :goto_1ca
    add-int/lit8 v17, v8, 0x1

    move/from16 v0, v17

    if-le v2, v0, :cond_1ec

    .line 2604
    add-int/lit8 v17, v8, 0x1

    invoke-virtual/range {v16 .. v17}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v17

    check-cast v17, Lcom/android/server/wm/WindowState;

    move-object/from16 v0, v17

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    move-object/from16 v17, v0

    move-object/from16 v0, v17

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    move/from16 v17, v0

    const/16 v18, 0x3ee

    move/from16 v0, v17

    move/from16 v1, v18

    if-eq v0, v1, :cond_1fa

    .line 2611
    :cond_1ec
    add-int/lit8 v11, v8, 0x1

    goto/16 :goto_d0

    .line 2592
    .end local v2    # "N":I
    :cond_1f0
    const/16 v17, 0x0

    move-object/from16 v0, p0

    move/from16 v1, v17

    invoke-virtual {v0, v1}, setInputMethodAnimLayerAdjustment(I)V

    goto :goto_1b2

    .line 2607
    .restart local v2    # "N":I
    :cond_1fa
    add-int/lit8 v8, v8, 0x1

    goto :goto_1ca

    .line 2613
    .end local v2    # "N":I
    :cond_1fd
    if-eqz p1, :cond_210

    .line 2616
    const/16 v17, 0x0

    move-object/from16 v0, v17

    move-object/from16 v1, p0

    iput-object v0, v1, mInputMethodTarget:Lcom/android/server/wm/WindowState;

    .line 2617
    const/16 v17, 0x0

    move-object/from16 v0, p0

    move/from16 v1, v17

    invoke-virtual {v0, v1}, setInputMethodAnimLayerAdjustment(I)V

    .line 2619
    :cond_210
    const/4 v11, -0x1

    goto/16 :goto_d0
.end method

.method public findNextFocusableFloatingStackIdFromTop()I
    .registers 6

    .prologue
    const/4 v4, 0x0

    .line 21103
    invoke-virtual {p0}, getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v3

    invoke-virtual {v3}, Lcom/android/server/wm/DisplayContent;->getStackInfos()Ljava/util/ArrayList;

    move-result-object v3

    invoke-virtual {v3, v4}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Landroid/app/ActivityManager$StackInfo;

    .line 21104
    .local v2, "topStackInfo":Landroid/app/ActivityManager$StackInfo;
    if-eqz v2, :cond_1d

    .line 21105
    iget v1, v2, Landroid/app/ActivityManager$StackInfo;->stackId:I

    .line 21106
    .local v1, "topStackId":I
    const/4 v3, 0x1

    invoke-virtual {p0, v1, v3, v4}, findNextFocusableStackInfo(IZZ)Landroid/app/ActivityManager$StackInfo;

    move-result-object v0

    .line 21107
    .local v0, "focusableStackInfo":Landroid/app/ActivityManager$StackInfo;
    if-eqz v0, :cond_1d

    .line 21108
    iget v3, v0, Landroid/app/ActivityManager$StackInfo;->stackId:I

    .line 21111
    .end local v0    # "focusableStackInfo":Landroid/app/ActivityManager$StackInfo;
    .end local v1    # "topStackId":I
    :goto_1c
    return v3

    :cond_1d
    const/4 v3, -0x1

    goto :goto_1c
.end method

.method public findNextFocusableStackInfo(IZZ)Landroid/app/ActivityManager$StackInfo;
    .registers 18
    .param p1, "stackId"    # I
    .param p2, "includeFloating"    # Z
    .param p3, "includeNormalApp"    # Z

    .prologue
    .line 21118
    iget-object v11, p0, mStackIdToStack:Landroid/util/SparseArray;

    invoke-virtual {v11, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/android/server/wm/TaskStack;

    .line 21119
    .local v5, "stack":Lcom/android/server/wm/TaskStack;
    const/4 v4, 0x0

    .line 21120
    .local v4, "nextStackInfo":Landroid/app/ActivityManager$StackInfo;
    invoke-virtual {v5}, Lcom/android/server/wm/TaskStack;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    move-result-object v11

    invoke-virtual {v11}, Lcom/android/server/wm/DisplayContent;->getStackInfos()Ljava/util/ArrayList;

    move-result-object v3

    .line 21121
    .local v3, "infos":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/app/ActivityManager$StackInfo;>;"
    invoke-virtual {v5}, Lcom/android/server/wm/TaskStack;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    move-result-object v11

    invoke-virtual {v11}, Lcom/android/server/wm/DisplayContent;->getTasks()Ljava/util/ArrayList;

    move-result-object v9

    .line 21122
    .local v9, "tasks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/Task;>;"
    const/4 v1, 0x0

    .line 21124
    .local v1, "foundCurStack":Z
    invoke-virtual {v3}, Ljava/util/ArrayList;->iterator()Ljava/util/Iterator;

    move-result-object v2

    .local v2, "i$":Ljava/util/Iterator;
    :cond_1e
    :goto_1e
    invoke-interface {v2}, Ljava/util/Iterator;->hasNext()Z

    move-result v11

    if-eqz v11, :cond_39

    invoke-interface {v2}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Landroid/app/ActivityManager$StackInfo;

    .line 21125
    .local v6, "stackInfo":Landroid/app/ActivityManager$StackInfo;
    iget v11, v6, Landroid/app/ActivityManager$StackInfo;->stackId:I

    if-ne v11, p1, :cond_30

    .line 21126
    const/4 v1, 0x1

    .line 21127
    goto :goto_1e

    .line 21129
    :cond_30
    if-eqz v1, :cond_1e

    .line 21130
    if-nez p2, :cond_3a

    iget v11, v6, Landroid/app/ActivityManager$StackInfo;->stackType:I

    const/4 v12, 0x3

    if-ne v11, v12, :cond_3a

    .line 21167
    .end local v6    # "stackInfo":Landroid/app/ActivityManager$StackInfo;
    :cond_39
    return-object v4

    .line 21134
    .restart local v6    # "stackInfo":Landroid/app/ActivityManager$StackInfo;
    :cond_3a
    if-nez p3, :cond_45

    iget v11, v6, Landroid/app/ActivityManager$StackInfo;->stackType:I

    const/4 v12, 0x2

    if-eq v11, v12, :cond_39

    iget v11, v6, Landroid/app/ActivityManager$StackInfo;->stackId:I

    if-eqz v11, :cond_39

    .line 21141
    :cond_45
    if-nez v4, :cond_1e

    .line 21142
    const/4 v7, 0x0

    .line 21144
    .local v7, "task":Lcom/android/server/wm/Task;
    invoke-virtual {v9}, Ljava/util/ArrayList;->size()I

    move-result v11

    add-int/lit8 v8, v11, -0x1

    .local v8, "taskIdx":I
    :goto_4e
    if-ltz v8, :cond_5f

    .line 21145
    invoke-virtual {v9, v8}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v10

    check-cast v10, Lcom/android/server/wm/Task;

    .line 21146
    .local v10, "tmpTask":Lcom/android/server/wm/Task;
    iget v11, v6, Landroid/app/ActivityManager$StackInfo;->stackId:I

    iget-object v12, v10, Lcom/android/server/wm/Task;->mStack:Lcom/android/server/wm/TaskStack;

    iget v12, v12, Lcom/android/server/wm/TaskStack;->mStackId:I

    if-ne v11, v12, :cond_ad

    .line 21147
    move-object v7, v10

    .line 21152
    .end local v10    # "tmpTask":Lcom/android/server/wm/Task;
    :cond_5f
    if-eqz v7, :cond_8f

    .line 21153
    iget-object v11, v7, Lcom/android/server/wm/Task;->mAppTokens:Lcom/android/server/wm/AppTokenList;

    iget-object v12, v7, Lcom/android/server/wm/Task;->mAppTokens:Lcom/android/server/wm/AppTokenList;

    invoke-virtual {v12}, Lcom/android/server/wm/AppTokenList;->size()I

    move-result v12

    add-int/lit8 v12, v12, -0x1

    invoke-virtual {v11, v12}, Lcom/android/server/wm/AppTokenList;->get(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/wm/AppWindowToken;

    .line 21155
    .local v0, "appToken":Lcom/android/server/wm/AppWindowToken;
    iget-object v11, v0, Lcom/android/server/wm/AppWindowToken;->appMultiWindowStyle:Lcom/samsung/android/multiwindow/MultiWindowStyle;

    const/4 v12, 0x4

    invoke-virtual {v11, v12}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->isEnabled(I)Z

    move-result v11

    if-nez v11, :cond_1e

    iget-object v11, v0, Lcom/android/server/wm/AppWindowToken;->appMultiWindowStyle:Lcom/samsung/android/multiwindow/MultiWindowStyle;

    const/16 v12, 0x8

    invoke-virtual {v11, v12}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->isEnabled(I)Z

    move-result v11

    if-nez v11, :cond_1e

    invoke-virtual {v0}, Lcom/android/server/wm/AppWindowToken;->isVisible()Z

    move-result v11

    if-nez v11, :cond_8f

    iget-boolean v11, v0, Lcom/android/server/wm/AppWindowToken;->hidden:Z

    const/4 v12, 0x1

    if-eq v11, v12, :cond_1e

    .line 21162
    .end local v0    # "appToken":Lcom/android/server/wm/AppWindowToken;
    :cond_8f
    move-object v4, v6

    .line 21163
    const-string v11, "WindowManager"

    new-instance v12, Ljava/lang/StringBuilder;

    invoke-direct {v12}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v13, "findNextFocusableStackInfo: recommended next stackId="

    invoke-virtual {v12, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v12

    iget v13, v4, Landroid/app/ActivityManager$StackInfo;->stackId:I

    invoke-virtual {v12, v13}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v12

    invoke-virtual {v12}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v12

    invoke-static {v11, v12}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    goto/16 :goto_1e

    .line 21144
    .restart local v10    # "tmpTask":Lcom/android/server/wm/Task;
    :cond_ad
    add-int/lit8 v8, v8, -0x1

    goto :goto_4e
.end method

.method public finishDrawingWindow(Lcom/android/server/wm/Session;Landroid/view/IWindow;)V
    .registers 10
    .param p1, "session"    # Lcom/android/server/wm/Session;
    .param p2, "client"    # Landroid/view/IWindow;

    .prologue
    .line 5897
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v2

    .line 5899
    .local v2, "origId":J
    :try_start_4
    iget-object v5, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v5
    :try_end_7
    .catchall {:try_start_4 .. :try_end_7} :catchall_3d

    .line 5900
    const/4 v4, 0x0

    :try_start_8
    invoke-virtual {p0, p1, p2, v4}, windowForClientLocked(Lcom/android/server/wm/Session;Landroid/view/IWindow;Z)Lcom/android/server/wm/WindowState;

    move-result-object v1

    .line 5901
    .local v1, "win":Lcom/android/server/wm/WindowState;
    if-eqz v1, :cond_35

    iget-object v4, v1, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    invoke-virtual {v4}, Lcom/android/server/wm/WindowStateAnimator;->finishDrawingLocked()Z

    move-result v4

    if-eqz v4, :cond_35

    .line 5902
    invoke-virtual {v1}, Lcom/android/server/wm/WindowState;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    move-result-object v0

    .line 5903
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    iget-object v4, v1, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v4, v4, Landroid/view/WindowManager$LayoutParams;->flags:I

    const/high16 v6, 0x100000

    and-int/2addr v4, v6

    if-eqz v4, :cond_2d

    .line 5909
    invoke-virtual {p0}, getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v4

    iget v6, v4, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    or-int/lit8 v6, v6, 0x4

    iput v6, v4, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    .line 5913
    :cond_2d
    if-eqz v0, :cond_32

    .line 5914
    const/4 v4, 0x1

    iput-boolean v4, v0, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    .line 5916
    :cond_32
    invoke-virtual {p0}, requestTraversalLocked()V

    .line 5918
    .end local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :cond_35
    monitor-exit v5
    :try_end_36
    .catchall {:try_start_8 .. :try_end_36} :catchall_3a

    .line 5920
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 5922
    return-void

    .line 5918
    .end local v1    # "win":Lcom/android/server/wm/WindowState;
    :catchall_3a
    move-exception v4

    :try_start_3b
    monitor-exit v5
    :try_end_3c
    .catchall {:try_start_3b .. :try_end_3c} :catchall_3a

    :try_start_3c
    throw v4
    :try_end_3d
    .catchall {:try_start_3c .. :try_end_3d} :catchall_3d

    .line 5920
    :catchall_3d
    move-exception v4

    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v4
.end method

.method public finishMultiWindowTransitionLocked(I)V
    .registers 6
    .param p1, "displayId"    # I

    .prologue
    .line 21366
    iget-object v1, p0, mH:Lcom/android/server/wm/WindowManagerService$H;

    const/16 v2, 0x65

    invoke-static {p1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v3

    invoke-virtual {v1, v2, v3}, Lcom/android/server/wm/WindowManagerService$H;->removeMessages(ILjava/lang/Object;)V

    .line 21367
    iget-object v1, p0, mAnimator:Lcom/android/server/wm/WindowAnimator;

    invoke-virtual {v1, p1}, Lcom/android/server/wm/WindowAnimator;->getMultiWindowTransitionLocked(I)Lcom/android/server/wm/MultiWindowTransition;

    move-result-object v0

    .line 21368
    .local v0, "multiwindowAnimator":Lcom/android/server/wm/MultiWindowTransition;
    if-eqz v0, :cond_23

    .line 21369
    invoke-virtual {v0}, Lcom/android/server/wm/MultiWindowTransition;->getMultiWindowTransition()I

    move-result v1

    const/16 v2, 0xa

    if-ne v1, v2, :cond_20

    .line 21370
    iget-object v1, p0, mAppTransition:Lcom/android/server/wm/AppTransition;

    invoke-virtual {v1}, Lcom/android/server/wm/AppTransition;->setReady()V

    .line 21372
    :cond_20
    invoke-virtual {v0}, Lcom/android/server/wm/MultiWindowTransition;->clearMultiWindowTransitionAnimation()V

    .line 21374
    :cond_23
    return-void
.end method

.method public forceResetEasyOneHandService()V
    .registers 12

    .prologue
    const/high16 v1, 0x3f800000    # 1.0f

    .line 22184
    iget-object v10, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v10

    .line 22185
    const/4 v0, 0x0

    :try_start_6
    invoke-virtual {p0, v0}, getEasyOneHandScaleSpecLocked(I)Landroid/view/MagnificationSpec;

    move-result-object v7

    .line 22186
    .local v7, "spec":Landroid/view/MagnificationSpec;
    if-eqz v7, :cond_52

    iget v0, v7, Landroid/view/MagnificationSpec;->scale:F
    :try_end_e
    .catchall {:try_start_6 .. :try_end_e} :catchall_54

    cmpg-float v0, v0, v1

    if-gez v0, :cond_52

    .line 22188
    const/high16 v1, 0x3f800000    # 1.0f

    const/4 v2, 0x0

    const/4 v3, 0x0

    const/4 v4, 0x1

    const/4 v5, 0x0

    move-object v0, p0

    :try_start_19
    invoke-virtual/range {v0 .. v5}, changeDisplayScale(FFFZLandroid/view/IInputFilter;)V

    .line 22189
    const/4 v0, 0x0

    iput-boolean v0, p0, mReduceScreenStarted:Z

    .line 22191
    invoke-virtual {p0}, getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v0

    invoke-virtual {v0}, Lcom/android/server/wm/DisplayContent;->getWindowList()Lcom/android/server/wm/WindowList;

    move-result-object v9

    .line 22192
    .local v9, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual {v9}, Lcom/android/server/wm/WindowList;->size()I

    move-result v0

    add-int/lit8 v6, v0, -0x1

    .local v6, "i":I
    :goto_2d
    if-ltz v6, :cond_52

    .line 22193
    invoke-virtual {v9, v6}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v8

    check-cast v8, Lcom/android/server/wm/WindowState;

    .line 22194
    .local v8, "w":Lcom/android/server/wm/WindowState;
    if-eqz v8, :cond_4e

    iget-boolean v0, v8, Lcom/android/server/wm/WindowState;->mHasSurface:Z

    if-eqz v0, :cond_4e

    .line 22195
    iget-object v0, v8, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    const/16 v1, 0x8cf

    if-eq v0, v1, :cond_4b

    iget-object v0, v8, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    const/16 v1, 0x8ca

    if-ne v0, v1, :cond_4e

    .line 22197
    :cond_4b
    invoke-virtual {p0, v8}, removeWindowLocked(Lcom/android/server/wm/WindowState;)V
    :try_end_4e
    .catch Ljava/lang/Exception; {:try_start_19 .. :try_end_4e} :catch_51
    .catchall {:try_start_19 .. :try_end_4e} :catchall_54

    .line 22192
    :cond_4e
    add-int/lit8 v6, v6, -0x1

    goto :goto_2d

    .line 22201
    .end local v6    # "i":I
    .end local v8    # "w":Lcom/android/server/wm/WindowState;
    .end local v9    # "windows":Lcom/android/server/wm/WindowList;
    :catch_51
    move-exception v0

    .line 22204
    :cond_52
    :try_start_52
    monitor-exit v10

    .line 22206
    return-void

    .line 22204
    .end local v7    # "spec":Landroid/view/MagnificationSpec;
    :catchall_54
    move-exception v0

    monitor-exit v10
    :try_end_56
    .catchall {:try_start_52 .. :try_end_56} :catchall_54

    throw v0
.end method

.method public forceStackToFullscreen(IZ)Landroid/content/res/Configuration;
    .registers 8
    .param p1, "stackId"    # I
    .param p2, "forceFullscreen"    # Z

    .prologue
    .line 9718
    iget-object v2, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v2

    .line 9719
    :try_start_3
    iget-object v1, p0, mStackIdToStack:Landroid/util/SparseArray;

    invoke-virtual {v1, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/wm/TaskStack;

    .line 9720
    .local v0, "stack":Lcom/android/server/wm/TaskStack;
    if-nez v0, :cond_30

    .line 9721
    new-instance v1, Ljava/lang/IllegalArgumentException;

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v4, "resizeStack: stackId "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v3

    const-string v4, " not found."

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-direct {v1, v3}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 9730
    .end local v0    # "stack":Lcom/android/server/wm/TaskStack;
    :catchall_2d
    move-exception v1

    monitor-exit v2
    :try_end_2f
    .catchall {:try_start_3 .. :try_end_2f} :catchall_2d

    throw v1

    .line 9724
    .restart local v0    # "stack":Lcom/android/server/wm/TaskStack;
    :cond_30
    :try_start_30
    invoke-virtual {v0, p2}, Lcom/android/server/wm/TaskStack;->forceFullscreen(Z)Z

    move-result v1

    if-eqz v1, :cond_43

    .line 9725
    invoke-virtual {v0}, Lcom/android/server/wm/TaskStack;->resizeWindows()V

    .line 9726
    invoke-virtual {v0}, Lcom/android/server/wm/TaskStack;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    move-result-object v1

    const/4 v3, 0x1

    iput-boolean v3, v1, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    .line 9727
    invoke-direct {p0}, performLayoutAndPlaceSurfacesLocked()V

    .line 9729
    :cond_43
    new-instance v1, Landroid/content/res/Configuration;

    iget-object v3, v0, Lcom/android/server/wm/TaskStack;->mOverrideConfig:Landroid/content/res/Configuration;

    invoke-direct {v1, v3}, Landroid/content/res/Configuration;-><init>(Landroid/content/res/Configuration;)V

    monitor-exit v2
    :try_end_4b
    .catchall {:try_start_30 .. :try_end_4b} :catchall_2d

    return-object v1
.end method

.method public freezeRotation(I)V
    .registers 9
    .param p1, "rotation"    # I

    .prologue
    const/4 v6, 0x0

    const/4 v5, -0x1

    .line 11193
    const-string v2, "android.permission.SET_ORIENTATION"

    const-string/jumbo v3, "freezeRotation()"

    invoke-virtual {p0, v2, v3}, checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v2

    if-nez v2, :cond_15

    .line 11195
    new-instance v2, Ljava/lang/SecurityException;

    const-string v3, "Requires SET_ORIENTATION permission"

    invoke-direct {v2, v3}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v2

    .line 11197
    :cond_15
    if-lt p1, v5, :cond_1a

    const/4 v2, 0x3

    if-le p1, v2, :cond_22

    .line 11198
    :cond_1a
    new-instance v2, Ljava/lang/IllegalArgumentException;

    const-string v3, "Rotation argument must be -1 or a valid rotation constant."

    invoke-direct {v2, v3}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v2

    .line 11210
    :cond_22
    sget-boolean v2, DEBUG_ORIENTATION:Z

    if-nez v2, :cond_2a

    sget-boolean v2, SAFE_DEBUG:Z

    if-eqz v2, :cond_52

    :cond_2a
    const-string v2, "WindowManager"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "Process "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v4

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v3

    const-string v4, " request freezeRotation: mRotation="

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    iget v4, p0, mRotation:I

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3}, Landroid/util/Log;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 11213
    :cond_52
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 11223
    .local v0, "origId":J
    :try_start_56
    iget-object v2, p0, mPolicy:Landroid/view/WindowManagerPolicy;

    const/4 v3, 0x1

    if-ne p1, v5, :cond_5d

    iget p1, p0, mRotation:I

    .end local p1    # "rotation":I
    :cond_5d
    invoke-interface {v2, v3, p1}, Landroid/view/WindowManagerPolicy;->setUserRotationMode(II)V
    :try_end_60
    .catchall {:try_start_56 .. :try_end_60} :catchall_67

    .line 11227
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 11230
    invoke-virtual {p0, v6, v6}, updateRotationUnchecked(ZZ)V

    .line 11231
    return-void

    .line 11227
    :catchall_67
    move-exception v2

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v2
.end method

.method public getAnimationScale(I)F
    .registers 3
    .param p1, "which"    # I

    .prologue
    .line 10096
    packed-switch p1, :pswitch_data_e

    .line 10101
    const/4 v0, 0x0

    :goto_4
    return v0

    .line 10097
    :pswitch_5
    iget v0, p0, mWindowAnimationScaleSetting:F

    goto :goto_4

    .line 10098
    :pswitch_8
    iget v0, p0, mTransitionAnimationScaleSetting:F

    goto :goto_4

    .line 10099
    :pswitch_b
    iget v0, p0, mAnimatorDurationScaleSetting:F

    goto :goto_4

    .line 10096
    :pswitch_data_e
    .packed-switch 0x0
        :pswitch_5
        :pswitch_8
        :pswitch_b
    .end packed-switch
.end method

.method public getAnimationScales()[F
    .registers 4

    .prologue
    .line 10106
    const/4 v0, 0x3

    new-array v0, v0, [F

    const/4 v1, 0x0

    iget v2, p0, mWindowAnimationScaleSetting:F

    aput v2, v0, v1

    const/4 v1, 0x1

    iget v2, p0, mTransitionAnimationScaleSetting:F

    aput v2, v0, v1

    const/4 v1, 0x2

    iget v2, p0, mAnimatorDurationScaleSetting:F

    aput v2, v0, v1

    return-object v0
.end method

.method public getAppDisplayId(Lcom/android/server/wm/AppWindowToken;)I
    .registers 5
    .param p1, "wtoken"    # Lcom/android/server/wm/AppWindowToken;

    .prologue
    .line 22478
    iget-object v2, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v2

    .line 22479
    :try_start_3
    invoke-virtual {p1}, Lcom/android/server/wm/AppWindowToken;->findMainWindow()Lcom/android/server/wm/WindowState;

    move-result-object v0

    .line 22480
    .local v0, "window":Lcom/android/server/wm/WindowState;
    if-eqz v0, :cond_f

    invoke-virtual {v0}, Lcom/android/server/wm/WindowState;->getDisplayId()I

    move-result v1

    :goto_d
    monitor-exit v2

    return v1

    :cond_f
    const/4 v1, 0x0

    goto :goto_d

    .line 22481
    .end local v0    # "window":Lcom/android/server/wm/WindowState;
    :catchall_11
    move-exception v1

    monitor-exit v2
    :try_end_13
    .catchall {:try_start_3 .. :try_end_13} :catchall_11

    throw v1
.end method

.method public getAppOrientation(Landroid/view/IApplicationToken;)I
    .registers 5
    .param p1, "token"    # Landroid/view/IApplicationToken;

    .prologue
    .line 7204
    iget-object v2, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v2

    .line 7205
    :try_start_3
    invoke-interface {p1}, Landroid/view/IApplicationToken;->asBinder()Landroid/os/IBinder;

    move-result-object v1

    invoke-virtual {p0, v1}, findAppWindowToken(Landroid/os/IBinder;)Lcom/android/server/wm/AppWindowToken;

    move-result-object v0

    .line 7206
    .local v0, "wtoken":Lcom/android/server/wm/AppWindowToken;
    if-nez v0, :cond_10

    .line 7207
    const/4 v1, -0x1

    monitor-exit v2

    .line 7215
    :goto_f
    return v1

    .line 7211
    :cond_10
    sget-boolean v1, Lcom/samsung/android/multiwindow/MultiWindowFeatures;->SELECTIVE1ORIENTATION_ENABLED:Z

    if-eqz v1, :cond_1d

    .line 7212
    invoke-virtual {v0}, Lcom/android/server/wm/AppWindowToken;->getPreferredOrientation()I

    move-result v1

    monitor-exit v2

    goto :goto_f

    .line 7216
    .end local v0    # "wtoken":Lcom/android/server/wm/AppWindowToken;
    :catchall_1a
    move-exception v1

    monitor-exit v2
    :try_end_1c
    .catchall {:try_start_3 .. :try_end_1c} :catchall_1a

    throw v1

    .line 7215
    .restart local v0    # "wtoken":Lcom/android/server/wm/AppWindowToken;
    :cond_1d
    :try_start_1d
    iget v1, v0, Lcom/android/server/wm/AppWindowToken;->requestedOrientation:I

    monitor-exit v2
    :try_end_20
    .catchall {:try_start_1d .. :try_end_20} :catchall_1a

    goto :goto_f
.end method

.method getAppTransitionForDisplayLocked(I)Lcom/android/server/wm/AppTransition;
    .registers 3
    .param p1, "displayId"    # I

    .prologue
    .line 22620
    iget-object v0, p0, mAppTransition:Lcom/android/server/wm/AppTransition;

    return-object v0
.end method

.method public getBaseDisplayDensity(I)I
    .registers 6
    .param p1, "displayId"    # I

    .prologue
    .line 14594
    iget-object v2, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v2

    .line 14595
    :try_start_3
    invoke-virtual {p0, p1}, getDisplayContentLocked(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v0

    .line 14596
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-eqz v0, :cond_21

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v1

    invoke-virtual {v0, v1}, Lcom/android/server/wm/DisplayContent;->hasAccess(I)Z

    move-result v1

    if-eqz v1, :cond_21

    .line 14597
    iget-object v3, v0, Lcom/android/server/wm/DisplayContent;->mDisplaySizeLock:Ljava/lang/Object;

    monitor-enter v3
    :try_end_16
    .catchall {:try_start_3 .. :try_end_16} :catchall_1e

    .line 14598
    :try_start_16
    iget v1, v0, Lcom/android/server/wm/DisplayContent;->mBaseDisplayDensity:I

    monitor-exit v3
    :try_end_19
    .catchall {:try_start_16 .. :try_end_19} :catchall_1b

    :try_start_19
    monitor-exit v2
    :try_end_1a
    .catchall {:try_start_19 .. :try_end_1a} :catchall_1e

    .line 14602
    :goto_1a
    return v1

    .line 14599
    :catchall_1b
    move-exception v1

    :try_start_1c
    monitor-exit v3
    :try_end_1d
    .catchall {:try_start_1c .. :try_end_1d} :catchall_1b

    :try_start_1d
    throw v1

    .line 14601
    .end local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :catchall_1e
    move-exception v1

    monitor-exit v2
    :try_end_20
    .catchall {:try_start_1d .. :try_end_20} :catchall_1e

    throw v1

    .restart local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :cond_21
    :try_start_21
    monitor-exit v2
    :try_end_22
    .catchall {:try_start_21 .. :try_end_22} :catchall_1e

    .line 14602
    const/4 v1, -0x1

    goto :goto_1a
.end method

.method public getBaseDisplaySize(ILandroid/graphics/Point;)V
    .registers 7
    .param p1, "displayId"    # I
    .param p2, "size"    # Landroid/graphics/Point;

    .prologue
    .line 14377
    iget-object v2, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v2

    .line 14378
    :try_start_3
    invoke-virtual {p0, p1}, getDisplayContentLocked(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v0

    .line 14379
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-eqz v0, :cond_1f

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v1

    invoke-virtual {v0, v1}, Lcom/android/server/wm/DisplayContent;->hasAccess(I)Z

    move-result v1

    if-eqz v1, :cond_1f

    .line 14380
    iget-object v3, v0, Lcom/android/server/wm/DisplayContent;->mDisplaySizeLock:Ljava/lang/Object;

    monitor-enter v3
    :try_end_16
    .catchall {:try_start_3 .. :try_end_16} :catchall_24

    .line 14381
    :try_start_16
    iget v1, v0, Lcom/android/server/wm/DisplayContent;->mBaseDisplayWidth:I

    iput v1, p2, Landroid/graphics/Point;->x:I

    .line 14382
    iget v1, v0, Lcom/android/server/wm/DisplayContent;->mBaseDisplayHeight:I

    iput v1, p2, Landroid/graphics/Point;->y:I

    .line 14383
    monitor-exit v3
    :try_end_1f
    .catchall {:try_start_16 .. :try_end_1f} :catchall_21

    .line 14385
    :cond_1f
    :try_start_1f
    monitor-exit v2
    :try_end_20
    .catchall {:try_start_1f .. :try_end_20} :catchall_24

    .line 14386
    return-void

    .line 14383
    :catchall_21
    move-exception v1

    :try_start_22
    monitor-exit v3
    :try_end_23
    .catchall {:try_start_22 .. :try_end_23} :catchall_21

    :try_start_23
    throw v1

    .line 14385
    .end local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :catchall_24
    move-exception v1

    monitor-exit v2
    :try_end_26
    .catchall {:try_start_23 .. :try_end_26} :catchall_24

    throw v1
.end method

.method public getCameraLensCoverState()I
    .registers 6

    .prologue
    const/4 v1, -0x1

    .line 10151
    iget-object v2, p0, mInputManager:Lcom/android/server/input/InputManagerService;

    const/16 v3, -0x100

    const/16 v4, 0x9

    invoke-virtual {v2, v1, v3, v4}, Lcom/android/server/input/InputManagerService;->getSwitchState(III)I

    move-result v0

    .line 10153
    .local v0, "sw":I
    if-lez v0, :cond_f

    .line 10155
    const/4 v1, 0x1

    .line 10161
    :cond_e
    :goto_e
    return v1

    .line 10156
    :cond_f
    if-nez v0, :cond_e

    .line 10158
    const/4 v1, 0x0

    goto :goto_e
.end method

.method public getCocktailBarFrame()Landroid/graphics/Rect;
    .registers 3

    .prologue
    .line 22366
    const/4 v0, 0x0

    const/4 v1, 0x0

    invoke-virtual {p0, v0, v1}, getCocktailBarFrame(Lcom/android/server/wm/WindowState;Z)Landroid/graphics/Rect;

    move-result-object v0

    return-object v0
.end method

.method getCocktailBarFrame(Lcom/android/server/wm/WindowState;Z)Landroid/graphics/Rect;
    .registers 4
    .param p1, "win"    # Lcom/android/server/wm/WindowState;
    .param p2, "policy"    # Z

    .prologue
    .line 22371
    iget-object v0, p0, mContext:Landroid/content/Context;

    invoke-static {v0}, Lcom/samsung/android/cocktailbar/CocktailBarFeatures;->isSystemBarType(Landroid/content/Context;)Z

    move-result v0

    if-eqz v0, :cond_f

    .line 22372
    iget-object v0, p0, mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v0, p1, p2}, Landroid/view/WindowManagerPolicy;->getCocktailBarFrame(Landroid/view/WindowManagerPolicy$WindowState;Z)Landroid/graphics/Rect;

    move-result-object v0

    .line 22375
    :goto_e
    return-object v0

    :cond_f
    new-instance v0, Landroid/graphics/Rect;

    invoke-direct {v0}, Landroid/graphics/Rect;-><init>()V

    goto :goto_e
.end method

.method public getCoverStateSwitch()Z
    .registers 2

    .prologue
    .line 5193
    iget-object v0, p0, mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v0}, Landroid/view/WindowManagerPolicy;->getCoverStateSwitch()Z

    move-result v0

    return v0
.end method

.method public getCurrentAnimatorScale()F
    .registers 3

    .prologue
    .line 10112
    iget-object v1, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v1

    .line 10113
    :try_start_3
    iget-boolean v0, p0, mAnimationsDisabled:Z

    if-eqz v0, :cond_a

    const/4 v0, 0x0

    :goto_8
    monitor-exit v1

    return v0

    :cond_a
    iget v0, p0, mAnimatorDurationScaleSetting:F

    goto :goto_8

    .line 10114
    :catchall_d
    move-exception v0

    monitor-exit v1
    :try_end_f
    .catchall {:try_start_3 .. :try_end_f} :catchall_d

    throw v0
.end method

.method public getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;
    .registers 2

    .prologue
    .line 20077
    const/4 v0, 0x0

    invoke-virtual {p0, v0}, getDefaultDisplayContentLocked(Z)Lcom/android/server/wm/DisplayContent;

    move-result-object v0

    return-object v0
.end method

.method public getDefaultDisplayContentLocked(Z)Lcom/android/server/wm/DisplayContent;
    .registers 3
    .param p1, "force"    # Z

    .prologue
    .line 20087
    const/4 v0, 0x0

    invoke-virtual {p0, v0}, getDisplayContentLocked(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v0

    return-object v0
.end method

.method public getDefaultDisplayInfoLocked()Landroid/view/DisplayInfo;
    .registers 2

    .prologue
    .line 20103
    const/4 v0, 0x0

    invoke-virtual {p0, v0}, getDefaultDisplayInfoLocked(Z)Landroid/view/DisplayInfo;

    move-result-object v0

    return-object v0
.end method

.method public getDefaultDisplayInfoLocked(Z)Landroid/view/DisplayInfo;
    .registers 3
    .param p1, "force"    # Z

    .prologue
    .line 20106
    invoke-virtual {p0, p1}, getDefaultDisplayContentLocked(Z)Lcom/android/server/wm/DisplayContent;

    move-result-object v0

    invoke-virtual {v0}, Lcom/android/server/wm/DisplayContent;->getDisplayInfo()Landroid/view/DisplayInfo;

    move-result-object v0

    return-object v0
.end method

.method public getDefaultOrientation()I
    .registers 4

    .prologue
    const/4 v1, 0x2

    .line 22032
    const/4 v2, 0x0

    invoke-virtual {p0, v2}, getDisplayContentLocked(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v2

    invoke-virtual {v2}, Lcom/android/server/wm/DisplayContent;->getDisplay()Landroid/view/Display;

    move-result-object v2

    invoke-virtual {v2}, Landroid/view/Display;->getRotation()I

    move-result v0

    .line 22035
    .local v0, "rotation":I
    if-eqz v0, :cond_12

    if-ne v0, v1, :cond_19

    :cond_12
    iget-object v2, p0, mCurConfiguration:Landroid/content/res/Configuration;

    iget v2, v2, Landroid/content/res/Configuration;->orientation:I

    if-ne v2, v1, :cond_19

    .line 22039
    :goto_18
    return v1

    :cond_19
    const/4 v1, 0x1

    goto :goto_18
.end method

.method public getDefaultWindowListLocked()Lcom/android/server/wm/WindowList;
    .registers 2

    .prologue
    .line 20093
    const/4 v0, 0x0

    invoke-virtual {p0, v0}, getDefaultWindowListLocked(Z)Lcom/android/server/wm/WindowList;

    move-result-object v0

    return-object v0
.end method

.method public getDefaultWindowListLocked(Z)Lcom/android/server/wm/WindowList;
    .registers 3
    .param p1, "force"    # Z

    .prologue
    .line 20096
    invoke-virtual {p0, p1}, getDefaultDisplayContentLocked(Z)Lcom/android/server/wm/DisplayContent;

    move-result-object v0

    invoke-virtual {v0}, Lcom/android/server/wm/DisplayContent;->getWindowList()Lcom/android/server/wm/WindowList;

    move-result-object v0

    return-object v0
.end method

.method public getDisplayContentLocked(I)Lcom/android/server/wm/DisplayContent;
    .registers 5
    .param p1, "displayId"    # I

    .prologue
    .line 20064
    iget-object v2, p0, mDisplayContents:Landroid/util/SparseArray;

    invoke-virtual {v2, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/wm/DisplayContent;

    .line 20065
    .local v1, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-nez v1, :cond_16

    .line 20066
    iget-object v2, p0, mDisplayManager:Landroid/hardware/display/DisplayManager;

    invoke-virtual {v2, p1}, Landroid/hardware/display/DisplayManager;->getDisplay(I)Landroid/view/Display;

    move-result-object v0

    .line 20067
    .local v0, "display":Landroid/view/Display;
    if-eqz v0, :cond_16

    .line 20068
    invoke-direct {p0, v0}, newDisplayContentLocked(Landroid/view/Display;)Lcom/android/server/wm/DisplayContent;

    move-result-object v1

    .line 20071
    .end local v0    # "display":Landroid/view/Display;
    :cond_16
    return-object v1
.end method

.method public getDssScaleFactor(I)F
    .registers 9
    .param p1, "pid"    # I

    .prologue
    const/high16 v6, 0x3f800000    # 1.0f

    .line 3985
    const/4 v1, 0x0

    .line 3986
    .local v1, "packageName":Ljava/lang/String;
    const/high16 v3, 0x3f800000    # 1.0f

    .line 3987
    .local v3, "scaleFactorf":F
    iget-object v4, p0, mScaledPids:Ljava/util/HashMap;

    invoke-static {p1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v5

    invoke-virtual {v4, v5}, Ljava/util/HashMap;->containsKey(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_33

    .line 3988
    invoke-static {v6}, Ljava/lang/Float;->valueOf(F)Ljava/lang/Float;

    move-result-object v2

    .line 3989
    .local v2, "scaleFactor":Ljava/lang/Float;
    iget-object v4, p0, mScaledPids:Ljava/util/HashMap;

    invoke-static {p1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v5

    invoke-virtual {v4, v5}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v1

    .end local v1    # "packageName":Ljava/lang/String;
    check-cast v1, Ljava/lang/String;

    .line 3990
    .restart local v1    # "packageName":Ljava/lang/String;
    invoke-static {}, Landroid/os/DssHelper;->getInstance()Landroid/os/DssHelper;

    move-result-object v0

    .line 3991
    .local v0, "mDssHelper":Landroid/os/DssHelper;
    invoke-virtual {v0, v1}, Landroid/os/DssHelper;->getScalingFactor(Ljava/lang/String;)F

    move-result v4

    invoke-static {v4}, Ljava/lang/Float;->valueOf(F)Ljava/lang/Float;

    move-result-object v2

    .line 3992
    invoke-virtual {v2}, Ljava/lang/Float;->floatValue()F

    move-result v4

    div-float v3, v6, v4

    .line 3994
    .end local v0    # "mDssHelper":Landroid/os/DssHelper;
    .end local v2    # "scaleFactor":Ljava/lang/Float;
    :cond_33
    return v3
.end method

.method getEasyOneHandScaleSpecLocked(I)Landroid/view/MagnificationSpec;
    .registers 4
    .param p1, "displayId"    # I

    .prologue
    .line 22165
    invoke-virtual {p0, p1}, getDisplayContentLocked(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v0

    .line 22166
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-eqz v0, :cond_13

    .line 22167
    iget-object v1, v0, Lcom/android/server/wm/DisplayContent;->mEasyOneHandScaleSpec:Landroid/view/MagnificationSpec;

    if-nez v1, :cond_10

    .line 22168
    invoke-static {}, Landroid/view/MagnificationSpec;->obtain()Landroid/view/MagnificationSpec;

    move-result-object v1

    iput-object v1, v0, Lcom/android/server/wm/DisplayContent;->mEasyOneHandScaleSpec:Landroid/view/MagnificationSpec;

    .line 22170
    :cond_10
    iget-object v1, v0, Lcom/android/server/wm/DisplayContent;->mEasyOneHandScaleSpec:Landroid/view/MagnificationSpec;

    .line 22173
    :goto_12
    return-object v1

    :cond_13
    const/4 v1, 0x0

    goto :goto_12
.end method

.method public getExpectedOrientation()I
    .registers 3

    .prologue
    .line 21508
    iget-object v1, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v1

    .line 21509
    :try_start_3
    invoke-virtual {p0}, getOrientationLocked()I

    move-result v0

    monitor-exit v1

    return v0

    .line 21510
    :catchall_9
    move-exception v0

    monitor-exit v1
    :try_end_b
    .catchall {:try_start_3 .. :try_end_b} :catchall_9

    throw v0
.end method

.method public getFocusedStackLayer()I
    .registers 3

    .prologue
    .line 7318
    iget-object v1, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v1

    .line 7319
    :try_start_3
    iget v0, p0, mFocusedStackLayer:I

    monitor-exit v1

    return v0

    .line 7320
    :catchall_7
    move-exception v0

    monitor-exit v1
    :try_end_9
    .catchall {:try_start_3 .. :try_end_9} :catchall_7

    throw v0
.end method

.method public getForcedAppOrientation()I
    .registers 2

    .prologue
    .line 21725
    iget v0, p0, mForcedAppOrientation:I

    return v0
.end method

.method public getGlobalSystemUiVisibility()I
    .registers 3

    .prologue
    .line 20872
    iget-object v1, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v1

    .line 20873
    :try_start_3
    iget-object v0, p0, mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v0}, Landroid/view/WindowManagerPolicy;->getGlobalSystemUiVisibility()I

    move-result v0

    monitor-exit v1

    return v0

    .line 20874
    :catchall_b
    move-exception v0

    monitor-exit v1
    :try_end_d
    .catchall {:try_start_3 .. :try_end_d} :catchall_b

    throw v0
.end method

.method getGlobalWindowListLocked()Lcom/android/server/wm/WindowList;
    .registers 27

    .prologue
    .line 14844
    move-object/from16 v0, p0

    iget-object v0, v0, mTmpGlobalWindowList:Lcom/android/server/wm/WindowList;

    move-object/from16 v23, v0

    invoke-virtual/range {v23 .. v23}, Lcom/android/server/wm/WindowList;->clear()V

    .line 14845
    move-object/from16 v0, p0

    iget-object v0, v0, mDisplayContents:Landroid/util/SparseArray;

    move-object/from16 v23, v0

    invoke-virtual/range {v23 .. v23}, Landroid/util/SparseArray;->size()I

    move-result v11

    .line 14846
    .local v11, "numDisplays":I
    const/4 v6, 0x0

    .local v6, "displayNdx":I
    :goto_14
    if-ge v6, v11, :cond_34

    .line 14847
    move-object/from16 v0, p0

    iget-object v0, v0, mDisplayContents:Landroid/util/SparseArray;

    move-object/from16 v23, v0

    move-object/from16 v0, v23

    invoke-virtual {v0, v6}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/android/server/wm/DisplayContent;

    .line 14848
    .local v5, "displayContent":Lcom/android/server/wm/DisplayContent;
    move-object/from16 v0, p0

    iget-object v0, v0, mTmpGlobalWindowList:Lcom/android/server/wm/WindowList;

    move-object/from16 v23, v0

    invoke-virtual {v5}, Lcom/android/server/wm/DisplayContent;->getWindowList()Lcom/android/server/wm/WindowList;

    move-result-object v24

    invoke-virtual/range {v23 .. v24}, Lcom/android/server/wm/WindowList;->addAll(Ljava/util/Collection;)Z

    .line 14846
    add-int/lit8 v6, v6, 0x1

    goto :goto_14

    .line 14851
    .end local v5    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :cond_34
    move-object/from16 v0, p0

    iget-object v0, v0, mTmpGlobalWindowList:Lcom/android/server/wm/WindowList;

    move-object/from16 v20, v0

    .line 14852
    .local v20, "windows":Lcom/android/server/wm/WindowList;
    move-object/from16 v0, p0

    iget-object v0, v0, mUniversalTaskHistory:Ljava/util/ArrayList;

    move-object/from16 v16, v0

    .line 14853
    .local v16, "tasks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/Task;>;"
    invoke-virtual/range {v16 .. v16}, Ljava/util/ArrayList;->size()I

    move-result v12

    .line 14854
    .local v12, "numTasks":I
    add-int/lit8 v15, v12, -0x1

    .local v15, "taskNdx":I
    :goto_46
    if-ltz v15, :cond_7d

    .line 14855
    move-object/from16 v0, v16

    invoke-virtual {v0, v15}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v23

    check-cast v23, Lcom/android/server/wm/Task;

    move-object/from16 v0, v23

    iget-object v0, v0, Lcom/android/server/wm/Task;->mAppTokens:Lcom/android/server/wm/AppTokenList;

    move-object/from16 v18, v0

    .line 14856
    .local v18, "tokens":Lcom/android/server/wm/AppTokenList;
    invoke-virtual/range {v18 .. v18}, Lcom/android/server/wm/AppTokenList;->size()I

    move-result v13

    .line 14857
    .local v13, "numTokens":I
    add-int/lit8 v17, v13, -0x1

    .local v17, "tokenNdx":I
    :goto_5c
    if-ltz v17, :cond_7a

    .line 14858
    move-object/from16 v0, v18

    move/from16 v1, v17

    invoke-virtual {v0, v1}, Lcom/android/server/wm/AppTokenList;->get(I)Ljava/lang/Object;

    move-result-object v22

    check-cast v22, Lcom/android/server/wm/AppWindowToken;

    .line 14859
    .local v22, "wtoken":Lcom/android/server/wm/AppWindowToken;
    move-object/from16 v0, p0

    iget-object v0, v0, mTmpGlobalWindowList:Lcom/android/server/wm/WindowList;

    move-object/from16 v23, v0

    move-object/from16 v0, v22

    iget-object v0, v0, Lcom/android/server/wm/AppWindowToken;->allAppWindows:Lcom/android/server/wm/WindowList;

    move-object/from16 v24, v0

    invoke-virtual/range {v23 .. v24}, Lcom/android/server/wm/WindowList;->removeAll(Ljava/util/Collection;)Z

    .line 14857
    add-int/lit8 v17, v17, -0x1

    goto :goto_5c

    .line 14854
    .end local v22    # "wtoken":Lcom/android/server/wm/AppWindowToken;
    :cond_7a
    add-int/lit8 v15, v15, -0x1

    goto :goto_46

    .line 14863
    .end local v13    # "numTokens":I
    .end local v17    # "tokenNdx":I
    .end local v18    # "tokens":Lcom/android/server/wm/AppTokenList;
    :cond_7d
    move-object/from16 v0, p0

    iget-object v0, v0, mTmpGlobalWindowList:Lcom/android/server/wm/WindowList;

    move-object/from16 v23, v0

    move-object/from16 v0, p0

    iget-object v0, v0, mWindowStateComparator:Ljava/util/Comparator;

    move-object/from16 v24, v0

    invoke-static/range {v23 .. v24}, Ljava/util/Collections;->sort(Ljava/util/List;Ljava/util/Comparator;)V

    .line 14869
    add-int/lit8 v15, v12, -0x1

    :goto_8e
    if-ltz v15, :cond_d6

    .line 14870
    move-object/from16 v0, v16

    invoke-virtual {v0, v15}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v23

    check-cast v23, Lcom/android/server/wm/Task;

    move-object/from16 v0, v23

    iget-object v0, v0, Lcom/android/server/wm/Task;->mAppTokens:Lcom/android/server/wm/AppTokenList;

    move-object/from16 v18, v0

    .line 14871
    .restart local v18    # "tokens":Lcom/android/server/wm/AppTokenList;
    invoke-virtual/range {v18 .. v18}, Lcom/android/server/wm/AppTokenList;->size()I

    move-result v13

    .line 14872
    .restart local v13    # "numTokens":I
    add-int/lit8 v17, v13, -0x1

    .restart local v17    # "tokenNdx":I
    :goto_a4
    if-ltz v17, :cond_d3

    .line 14873
    move-object/from16 v0, v18

    move/from16 v1, v17

    invoke-virtual {v0, v1}, Lcom/android/server/wm/AppTokenList;->get(I)Ljava/lang/Object;

    move-result-object v22

    check-cast v22, Lcom/android/server/wm/AppWindowToken;

    .line 14874
    .restart local v22    # "wtoken":Lcom/android/server/wm/AppWindowToken;
    move-object/from16 v0, v22

    iget-boolean v0, v0, Lcom/android/server/wm/AppWindowToken;->mIsExiting:Z

    move/from16 v23, v0

    if-nez v23, :cond_bb

    .line 14872
    :goto_b8
    add-int/lit8 v17, v17, -0x1

    goto :goto_a4

    .line 14877
    :cond_bb
    const/16 v23, 0x0

    const/16 v24, 0x0

    move-object/from16 v0, p0

    iget-object v0, v0, mTmpGlobalWindowList:Lcom/android/server/wm/WindowList;

    move-object/from16 v25, v0

    move-object/from16 v0, p0

    move-object/from16 v1, v23

    move/from16 v2, v24

    move-object/from16 v3, v22

    move-object/from16 v4, v25

    invoke-direct {v0, v1, v2, v3, v4}, reAddAppWindowsLocked(Lcom/android/server/wm/DisplayContent;ILcom/android/server/wm/WindowToken;Lcom/android/server/wm/WindowList;)I

    goto :goto_b8

    .line 14869
    .end local v22    # "wtoken":Lcom/android/server/wm/AppWindowToken;
    :cond_d3
    add-int/lit8 v15, v15, -0x1

    goto :goto_8e

    .line 14882
    .end local v13    # "numTokens":I
    .end local v17    # "tokenNdx":I
    .end local v18    # "tokens":Lcom/android/server/wm/AppTokenList;
    :cond_d6
    add-int/lit8 v15, v12, -0x1

    :goto_d8
    if-ltz v15, :cond_120

    .line 14883
    move-object/from16 v0, v16

    invoke-virtual {v0, v15}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v23

    check-cast v23, Lcom/android/server/wm/Task;

    move-object/from16 v0, v23

    iget-object v0, v0, Lcom/android/server/wm/Task;->mAppTokens:Lcom/android/server/wm/AppTokenList;

    move-object/from16 v18, v0

    .line 14884
    .restart local v18    # "tokens":Lcom/android/server/wm/AppTokenList;
    invoke-virtual/range {v18 .. v18}, Lcom/android/server/wm/AppTokenList;->size()I

    move-result v13

    .line 14885
    .restart local v13    # "numTokens":I
    add-int/lit8 v17, v13, -0x1

    .restart local v17    # "tokenNdx":I
    :goto_ee
    if-ltz v17, :cond_11d

    .line 14886
    move-object/from16 v0, v18

    move/from16 v1, v17

    invoke-virtual {v0, v1}, Lcom/android/server/wm/AppTokenList;->get(I)Ljava/lang/Object;

    move-result-object v22

    check-cast v22, Lcom/android/server/wm/AppWindowToken;

    .line 14887
    .restart local v22    # "wtoken":Lcom/android/server/wm/AppWindowToken;
    move-object/from16 v0, v22

    iget-boolean v0, v0, Lcom/android/server/wm/AppWindowToken;->mIsExiting:Z

    move/from16 v23, v0

    if-eqz v23, :cond_105

    .line 14885
    :goto_102
    add-int/lit8 v17, v17, -0x1

    goto :goto_ee

    .line 14890
    :cond_105
    const/16 v23, 0x0

    const/16 v24, 0x0

    move-object/from16 v0, p0

    iget-object v0, v0, mTmpGlobalWindowList:Lcom/android/server/wm/WindowList;

    move-object/from16 v25, v0

    move-object/from16 v0, p0

    move-object/from16 v1, v23

    move/from16 v2, v24

    move-object/from16 v3, v22

    move-object/from16 v4, v25

    invoke-direct {v0, v1, v2, v3, v4}, reAddAppWindowsLocked(Lcom/android/server/wm/DisplayContent;ILcom/android/server/wm/WindowToken;Lcom/android/server/wm/WindowList;)I

    goto :goto_102

    .line 14882
    .end local v22    # "wtoken":Lcom/android/server/wm/AppWindowToken;
    :cond_11d
    add-int/lit8 v15, v15, -0x1

    goto :goto_d8

    .line 14894
    .end local v13    # "numTokens":I
    .end local v17    # "tokenNdx":I
    .end local v18    # "tokens":Lcom/android/server/wm/AppTokenList;
    :cond_120
    move-object/from16 v0, p0

    iget-object v0, v0, mInputMethodWindow:Lcom/android/server/wm/WindowState;

    move-object/from16 v23, v0

    if-eqz v23, :cond_18b

    .line 14895
    move-object/from16 v0, p0

    iget-object v0, v0, mTmpGlobalWindowList:Lcom/android/server/wm/WindowList;

    move-object/from16 v23, v0

    move-object/from16 v0, p0

    iget-object v0, v0, mInputMethodWindow:Lcom/android/server/wm/WindowState;

    move-object/from16 v24, v0

    invoke-virtual/range {v23 .. v24}, Lcom/android/server/wm/WindowList;->remove(Ljava/lang/Object;)Z

    .line 14896
    move-object/from16 v0, p0

    iget-object v0, v0, mTmpGlobalWindowList:Lcom/android/server/wm/WindowList;

    move-object/from16 v23, v0

    move-object/from16 v0, p0

    iget-object v0, v0, mInputMethodDialogs:Ljava/util/ArrayList;

    move-object/from16 v24, v0

    invoke-virtual/range {v23 .. v24}, Lcom/android/server/wm/WindowList;->removeAll(Ljava/util/Collection;)Z

    .line 14898
    const/4 v10, 0x0

    .line 14899
    .local v10, "index":I
    move-object/from16 v0, p0

    iget-object v0, v0, mInputMethodTarget:Lcom/android/server/wm/WindowState;

    move-object/from16 v23, v0

    if-eqz v23, :cond_15f

    .line 14900
    move-object/from16 v0, p0

    iget-object v0, v0, mTmpGlobalWindowList:Lcom/android/server/wm/WindowList;

    move-object/from16 v23, v0

    move-object/from16 v0, p0

    iget-object v0, v0, mInputMethodTarget:Lcom/android/server/wm/WindowState;

    move-object/from16 v24, v0

    invoke-virtual/range {v23 .. v24}, Lcom/android/server/wm/WindowList;->indexOf(Ljava/lang/Object;)I

    move-result v10

    .line 14903
    :cond_15f
    if-ltz v10, :cond_18b

    .line 14904
    move-object/from16 v0, p0

    iget-object v0, v0, mTmpGlobalWindowList:Lcom/android/server/wm/WindowList;

    move-object/from16 v23, v0

    add-int/lit8 v10, v10, 0x1

    move-object/from16 v0, p0

    iget-object v0, v0, mInputMethodWindow:Lcom/android/server/wm/WindowState;

    move-object/from16 v24, v0

    move-object/from16 v0, v23

    move-object/from16 v1, v24

    invoke-virtual {v0, v10, v1}, Lcom/android/server/wm/WindowList;->add(ILjava/lang/Object;)V

    .line 14905
    move-object/from16 v0, p0

    iget-object v0, v0, mTmpGlobalWindowList:Lcom/android/server/wm/WindowList;

    move-object/from16 v23, v0

    add-int/lit8 v10, v10, 0x1

    move-object/from16 v0, p0

    iget-object v0, v0, mInputMethodDialogs:Ljava/util/ArrayList;

    move-object/from16 v24, v0

    move-object/from16 v0, v23

    move-object/from16 v1, v24

    invoke-virtual {v0, v10, v1}, Lcom/android/server/wm/WindowList;->addAll(ILjava/util/Collection;)Z

    .line 14909
    .end local v10    # "index":I
    :cond_18b
    move-object/from16 v0, p0

    iget-object v0, v0, mSortedWisArray:Ljava/util/ArrayList;

    move-object/from16 v23, v0

    invoke-virtual/range {v23 .. v23}, Ljava/util/ArrayList;->clear()V

    .line 14910
    move-object/from16 v0, p0

    iget-object v0, v0, mSortedWisArray:Ljava/util/ArrayList;

    move-object/from16 v23, v0

    move-object/from16 v0, p0

    iget-object v0, v0, mWallpaperInnerStates:Lcom/samsung/android/multidisplay/common/FallbackArrayList;

    move-object/from16 v24, v0

    invoke-virtual/range {v23 .. v24}, Ljava/util/ArrayList;->addAll(Ljava/util/Collection;)Z

    .line 14911
    move-object/from16 v0, p0

    iget-object v0, v0, mSortedWisArray:Ljava/util/ArrayList;

    move-object/from16 v23, v0

    move-object/from16 v0, p0

    iget-object v0, v0, mWisComparator:Ljava/util/Comparator;

    move-object/from16 v24, v0

    invoke-static/range {v23 .. v24}, Ljava/util/Collections;->sort(Ljava/util/List;Ljava/util/Comparator;)V

    .line 14913
    move-object/from16 v0, p0

    iget-object v0, v0, mSortedWisArray:Ljava/util/ArrayList;

    move-object/from16 v23, v0

    invoke-virtual/range {v23 .. v23}, Ljava/util/ArrayList;->iterator()Ljava/util/Iterator;

    move-result-object v8

    :cond_1bc
    invoke-interface {v8}, Ljava/util/Iterator;->hasNext()Z

    move-result v23

    if-eqz v23, :cond_31f

    invoke-interface {v8}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v21

    check-cast v21, Lcom/android/server/wm/WindowManagerService$WallpaperInnerState;

    .line 14914
    .local v21, "wis":Lcom/android/server/wm/WindowManagerService$WallpaperInnerState;
    move-object/from16 v0, v21

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService$WallpaperInnerState;->mWallpaperTokens:Ljava/util/ArrayList;

    move-object/from16 v23, v0

    invoke-virtual/range {v23 .. v23}, Ljava/util/ArrayList;->iterator()Ljava/util/Iterator;

    move-result-object v9

    .local v9, "i$":Ljava/util/Iterator;
    :goto_1d2
    invoke-interface {v9}, Ljava/util/Iterator;->hasNext()Z

    move-result v23

    if-eqz v23, :cond_1ee

    invoke-interface {v9}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v22

    check-cast v22, Lcom/android/server/wm/WindowToken;

    .line 14915
    .local v22, "wtoken":Lcom/android/server/wm/WindowToken;
    move-object/from16 v0, p0

    iget-object v0, v0, mTmpGlobalWindowList:Lcom/android/server/wm/WindowList;

    move-object/from16 v23, v0

    move-object/from16 v0, v22

    iget-object v0, v0, Lcom/android/server/wm/WindowToken;->windows:Lcom/android/server/wm/WindowList;

    move-object/from16 v24, v0

    invoke-virtual/range {v23 .. v24}, Lcom/android/server/wm/WindowList;->removeAll(Ljava/util/Collection;)Z

    goto :goto_1d2

    .line 14917
    .end local v22    # "wtoken":Lcom/android/server/wm/WindowToken;
    :cond_1ee
    const/4 v14, 0x0

    .line 14918
    .local v14, "targetIndex":I
    const/4 v7, 0x0

    .line 14920
    .local v7, "i":I
    move-object/from16 v0, v21

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService$WallpaperInnerState;->mWallpaperTarget:Lcom/android/server/wm/WindowState;

    move-object/from16 v23, v0

    if-eqz v23, :cond_279

    move-object/from16 v0, p0

    iget-object v0, v0, mTmpGlobalWindowList:Lcom/android/server/wm/WindowList;

    move-object/from16 v23, v0

    move-object/from16 v0, v21

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService$WallpaperInnerState;->mWallpaperTarget:Lcom/android/server/wm/WindowState;

    move-object/from16 v24, v0

    invoke-virtual/range {v23 .. v24}, Lcom/android/server/wm/WindowList;->contains(Ljava/lang/Object;)Z

    move-result v23

    if-eqz v23, :cond_279

    .line 14921
    move-object/from16 v0, p0

    iget-object v0, v0, mTmpGlobalWindowList:Lcom/android/server/wm/WindowList;

    move-object/from16 v23, v0

    move-object/from16 v0, v21

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService$WallpaperInnerState;->mWallpaperTarget:Lcom/android/server/wm/WindowState;

    move-object/from16 v24, v0

    invoke-virtual/range {v23 .. v24}, Lcom/android/server/wm/WindowList;->indexOf(Ljava/lang/Object;)I

    move-result v14

    .line 14924
    move-object/from16 v0, v21

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService$WallpaperInnerState;->mWallpaperTarget:Lcom/android/server/wm/WindowState;

    move-object/from16 v23, v0

    move-object/from16 v0, v23

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    move-object/from16 v23, v0

    if-eqz v23, :cond_2b2

    .line 14926
    move-object/from16 v0, p0

    iget-object v0, v0, mFocusOfDisplay:Lcom/samsung/android/multidisplay/common/FallbackArrayList;

    move-object/from16 v23, v0

    const/16 v24, 0x2

    invoke-virtual/range {v23 .. v24}, Lcom/samsung/android/multidisplay/common/FallbackArrayList;->get(I)Ljava/lang/Object;

    move-result-object v23

    if-eqz v23, :cond_279

    .line 14927
    add-int/lit8 v7, v14, -0x1

    :goto_238
    if-ltz v7, :cond_279

    .line 14928
    move-object/from16 v0, p0

    iget-object v0, v0, mTmpGlobalWindowList:Lcom/android/server/wm/WindowList;

    move-object/from16 v23, v0

    move-object/from16 v0, v23

    invoke-virtual {v0, v7}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v19

    check-cast v19, Lcom/android/server/wm/WindowState;

    .line 14929
    .local v19, "w":Lcom/android/server/wm/WindowState;
    invoke-virtual/range {v19 .. v19}, Lcom/android/server/wm/WindowState;->getDisplayId()I

    move-result v23

    move-object/from16 v0, v21

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService$WallpaperInnerState;->mWallpaperTarget:Lcom/android/server/wm/WindowState;

    move-object/from16 v24, v0

    invoke-virtual/range {v24 .. v24}, Lcom/android/server/wm/WindowState;->getDisplayId()I

    move-result v24

    move/from16 v0, v23

    move/from16 v1, v24

    if-eq v0, v1, :cond_25f

    .line 14927
    :cond_25c
    add-int/lit8 v7, v7, -0x1

    goto :goto_238

    .line 14932
    :cond_25f
    move-object/from16 v0, v19

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    move-object/from16 v23, v0

    move-object/from16 v0, v21

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService$WallpaperInnerState;->mWallpaperTarget:Lcom/android/server/wm/WindowState;

    move-object/from16 v24, v0

    move-object/from16 v0, v24

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    move-object/from16 v24, v0

    move-object/from16 v0, v23

    move-object/from16 v1, v24

    if-eq v0, v1, :cond_25c

    .line 14933
    add-int/lit8 v7, v7, 0x1

    .line 14954
    .end local v19    # "w":Lcom/android/server/wm/WindowState;
    :cond_279
    :goto_279
    if-gez v7, :cond_27c

    .line 14955
    const/4 v7, 0x0

    .line 14957
    :cond_27c
    move-object/from16 v0, v21

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService$WallpaperInnerState;->mWallpaperTokens:Ljava/util/ArrayList;

    move-object/from16 v23, v0

    invoke-virtual/range {v23 .. v23}, Ljava/util/ArrayList;->iterator()Ljava/util/Iterator;

    move-result-object v9

    :goto_286
    invoke-interface {v9}, Ljava/util/Iterator;->hasNext()Z

    move-result v23

    if-eqz v23, :cond_1bc

    invoke-interface {v9}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v22

    check-cast v22, Lcom/android/server/wm/WindowToken;

    .line 14958
    .restart local v22    # "wtoken":Lcom/android/server/wm/WindowToken;
    move-object/from16 v0, p0

    iget-object v0, v0, mTmpGlobalWindowList:Lcom/android/server/wm/WindowList;

    move-object/from16 v23, v0

    move-object/from16 v0, v22

    iget-object v0, v0, Lcom/android/server/wm/WindowToken;->windows:Lcom/android/server/wm/WindowList;

    move-object/from16 v24, v0

    move-object/from16 v0, v23

    move-object/from16 v1, v24

    invoke-virtual {v0, v7, v1}, Lcom/android/server/wm/WindowList;->addAll(ILjava/util/Collection;)Z

    .line 14959
    move-object/from16 v0, v22

    iget-object v0, v0, Lcom/android/server/wm/WindowToken;->windows:Lcom/android/server/wm/WindowList;

    move-object/from16 v23, v0

    invoke-virtual/range {v23 .. v23}, Lcom/android/server/wm/WindowList;->size()I

    move-result v23

    add-int v7, v7, v23

    .line 14960
    goto :goto_286

    .line 14939
    .end local v22    # "wtoken":Lcom/android/server/wm/WindowToken;
    :cond_2b2
    add-int/lit8 v7, v14, -0x1

    :goto_2b4
    if-ltz v7, :cond_279

    .line 14940
    move-object/from16 v0, p0

    iget-object v0, v0, mTmpGlobalWindowList:Lcom/android/server/wm/WindowList;

    move-object/from16 v23, v0

    move-object/from16 v0, v23

    invoke-virtual {v0, v7}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v19

    check-cast v19, Lcom/android/server/wm/WindowState;

    .line 14941
    .restart local v19    # "w":Lcom/android/server/wm/WindowState;
    invoke-virtual/range {v19 .. v19}, Lcom/android/server/wm/WindowState;->getDisplayId()I

    move-result v23

    move-object/from16 v0, v21

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService$WallpaperInnerState;->mWallpaperTarget:Lcom/android/server/wm/WindowState;

    move-object/from16 v24, v0

    invoke-virtual/range {v24 .. v24}, Lcom/android/server/wm/WindowState;->getDisplayId()I

    move-result v24

    move/from16 v0, v23

    move/from16 v1, v24

    if-eq v0, v1, :cond_2db

    .line 14939
    :cond_2d8
    add-int/lit8 v7, v7, -0x1

    goto :goto_2b4

    .line 14944
    :cond_2db
    move-object/from16 v0, v19

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    move-object/from16 v23, v0

    move-object/from16 v0, v21

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService$WallpaperInnerState;->mWallpaperTarget:Lcom/android/server/wm/WindowState;

    move-object/from16 v24, v0

    move-object/from16 v0, v24

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    move-object/from16 v24, v0

    move-object/from16 v0, v23

    move-object/from16 v1, v24

    if-ne v0, v1, :cond_31b

    move-object/from16 v0, v19

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    move-object/from16 v23, v0

    move-object/from16 v0, v23

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->privateFlags:I

    move/from16 v23, v0

    move/from16 v0, v23

    and-int/lit16 v0, v0, 0x400

    move/from16 v23, v0

    if-eqz v23, :cond_31b

    move-object/from16 v0, v19

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    move-object/from16 v23, v0

    move-object/from16 v0, v23

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    move/from16 v23, v0

    const/16 v24, 0x7ed

    move/from16 v0, v23

    move/from16 v1, v24

    if-eq v0, v1, :cond_2d8

    .line 14947
    :cond_31b
    add-int/lit8 v7, v7, 0x1

    .line 14948
    goto/16 :goto_279

    .line 14962
    .end local v7    # "i":I
    .end local v9    # "i$":Ljava/util/Iterator;
    .end local v14    # "targetIndex":I
    .end local v19    # "w":Lcom/android/server/wm/WindowState;
    .end local v21    # "wis":Lcom/android/server/wm/WindowManagerService$WallpaperInnerState;
    :cond_31f
    move-object/from16 v0, p0

    iget-object v0, v0, mTmpGlobalWindowList:Lcom/android/server/wm/WindowList;

    move-object/from16 v23, v0

    return-object v23
.end method

.method public getInitialDisplayDensity(I)I
    .registers 6
    .param p1, "displayId"    # I

    .prologue
    .line 14581
    iget-object v2, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v2

    .line 14582
    :try_start_3
    invoke-virtual {p0, p1}, getDisplayContentLocked(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v0

    .line 14583
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-eqz v0, :cond_21

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v1

    invoke-virtual {v0, v1}, Lcom/android/server/wm/DisplayContent;->hasAccess(I)Z

    move-result v1

    if-eqz v1, :cond_21

    .line 14584
    iget-object v3, v0, Lcom/android/server/wm/DisplayContent;->mDisplaySizeLock:Ljava/lang/Object;

    monitor-enter v3
    :try_end_16
    .catchall {:try_start_3 .. :try_end_16} :catchall_1e

    .line 14585
    :try_start_16
    iget v1, v0, Lcom/android/server/wm/DisplayContent;->mInitialDisplayDensity:I

    monitor-exit v3
    :try_end_19
    .catchall {:try_start_16 .. :try_end_19} :catchall_1b

    :try_start_19
    monitor-exit v2
    :try_end_1a
    .catchall {:try_start_19 .. :try_end_1a} :catchall_1e

    .line 14589
    :goto_1a
    return v1

    .line 14586
    :catchall_1b
    move-exception v1

    :try_start_1c
    monitor-exit v3
    :try_end_1d
    .catchall {:try_start_1c .. :try_end_1d} :catchall_1b

    :try_start_1d
    throw v1

    .line 14588
    .end local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :catchall_1e
    move-exception v1

    monitor-exit v2
    :try_end_20
    .catchall {:try_start_1d .. :try_end_20} :catchall_1e

    throw v1

    .restart local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :cond_21
    :try_start_21
    monitor-exit v2
    :try_end_22
    .catchall {:try_start_21 .. :try_end_22} :catchall_1e

    .line 14589
    const/4 v1, -0x1

    goto :goto_1a
.end method

.method public getInitialDisplaySize(ILandroid/graphics/Point;)V
    .registers 7
    .param p1, "displayId"    # I
    .param p2, "size"    # Landroid/graphics/Point;

    .prologue
    .line 14364
    iget-object v2, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v2

    .line 14365
    :try_start_3
    invoke-virtual {p0, p1}, getDisplayContentLocked(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v0

    .line 14366
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-eqz v0, :cond_1f

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v1

    invoke-virtual {v0, v1}, Lcom/android/server/wm/DisplayContent;->hasAccess(I)Z

    move-result v1

    if-eqz v1, :cond_1f

    .line 14367
    iget-object v3, v0, Lcom/android/server/wm/DisplayContent;->mDisplaySizeLock:Ljava/lang/Object;

    monitor-enter v3
    :try_end_16
    .catchall {:try_start_3 .. :try_end_16} :catchall_24

    .line 14368
    :try_start_16
    iget v1, v0, Lcom/android/server/wm/DisplayContent;->mInitialDisplayWidth:I

    iput v1, p2, Landroid/graphics/Point;->x:I

    .line 14369
    iget v1, v0, Lcom/android/server/wm/DisplayContent;->mInitialDisplayHeight:I

    iput v1, p2, Landroid/graphics/Point;->y:I

    .line 14370
    monitor-exit v3
    :try_end_1f
    .catchall {:try_start_16 .. :try_end_1f} :catchall_21

    .line 14372
    :cond_1f
    :try_start_1f
    monitor-exit v2
    :try_end_20
    .catchall {:try_start_1f .. :try_end_20} :catchall_24

    .line 14373
    return-void

    .line 14370
    :catchall_21
    move-exception v1

    :try_start_22
    monitor-exit v3
    :try_end_23
    .catchall {:try_start_22 .. :try_end_23} :catchall_21

    :try_start_23
    throw v1

    .line 14372
    .end local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :catchall_24
    move-exception v1

    monitor-exit v2
    :try_end_26
    .catchall {:try_start_23 .. :try_end_26} :catchall_24

    throw v1
.end method

.method public getInputMethodTargetWindowDisplayId()I
    .registers 5

    .prologue
    .line 22461
    iget-object v1, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v1

    .line 22462
    :try_start_3
    sget-boolean v0, SAFE_DEBUG:Z

    if-eqz v0, :cond_61

    .line 22463
    const-string v0, "WindowManager"

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Dual-WMS, mInputMethodWindow=="

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    iget-object v3, p0, mInputMethodWindow:Lcom/android/server/wm/WindowState;

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v0, v2}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 22464
    const-string v0, "WindowManager"

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Dual-WMS, mInputMethodTarget=="

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    iget-object v3, p0, mInputMethodTarget:Lcom/android/server/wm/WindowState;

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v0, v2}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 22465
    const-string v0, "WindowManager"

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Dual-WMS, mCurrentFocus=="

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    iget-object v3, p0, mCurrentFocus:Lcom/android/server/wm/WindowState;

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string v3, ",  mLastFocus=="

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    iget-object v3, p0, mLastFocus:Lcom/android/server/wm/WindowState;

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v0, v2}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 22468
    :cond_61
    iget-object v0, p0, mInputMethodTarget:Lcom/android/server/wm/WindowState;

    if-eqz v0, :cond_6d

    .line 22469
    iget-object v0, p0, mInputMethodTarget:Lcom/android/server/wm/WindowState;

    invoke-virtual {v0}, Lcom/android/server/wm/WindowState;->getDisplayId()I

    move-result v0

    monitor-exit v1

    .line 22473
    :goto_6c
    return v0

    .line 22470
    :cond_6d
    iget-object v0, p0, mCurrentFocus:Lcom/android/server/wm/WindowState;

    if-eqz v0, :cond_7c

    .line 22471
    iget-object v0, p0, mCurrentFocus:Lcom/android/server/wm/WindowState;

    invoke-virtual {v0}, Lcom/android/server/wm/WindowState;->getDisplayId()I

    move-result v0

    monitor-exit v1

    goto :goto_6c

    .line 22474
    :catchall_79
    move-exception v0

    monitor-exit v1
    :try_end_7b
    .catchall {:try_start_3 .. :try_end_7b} :catchall_79

    throw v0

    .line 22473
    :cond_7c
    const/4 v0, -0x1

    :try_start_7d
    monitor-exit v1
    :try_end_7e
    .catchall {:try_start_7d .. :try_end_7e} :catchall_79

    goto :goto_6c
.end method

.method public getInputMethodWindowVisibleHeight()I
    .registers 3

    .prologue
    .line 19236
    iget-object v1, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v1

    .line 19237
    :try_start_3
    iget-object v0, p0, mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v0}, Landroid/view/WindowManagerPolicy;->getInputMethodWindowVisibleHeightLw()I

    move-result v0

    monitor-exit v1

    return v0

    .line 19238
    :catchall_b
    move-exception v0

    monitor-exit v1
    :try_end_d
    .catchall {:try_start_3 .. :try_end_d} :catchall_b

    throw v0
.end method

.method public getInputMonitor()Lcom/android/server/wm/InputMonitor;
    .registers 2

    .prologue
    .line 1843
    iget-object v0, p0, mInputMonitor:Lcom/android/server/wm/InputMonitor;

    return-object v0
.end method

.method public getKeyguardPreviewLayoutResId(Ljava/lang/String;)I
    .registers 3
    .param p1, "pkgName"    # Ljava/lang/String;

    .prologue
    .line 22415
    iget-object v0, p0, mCustomStartingWindowManager:Lcom/android/server/wm/CustomStartingWindowManager;

    if-eqz v0, :cond_b

    .line 22416
    iget-object v0, p0, mCustomStartingWindowManager:Lcom/android/server/wm/CustomStartingWindowManager;

    invoke-virtual {v0, p1}, Lcom/android/server/wm/CustomStartingWindowManager;->getKeyguardPreviewLayoutResId(Ljava/lang/String;)I

    move-result v0

    .line 22418
    :goto_a
    return v0

    :cond_b
    const/4 v0, 0x0

    goto :goto_a
.end method

.method public getLidState()I
    .registers 6

    .prologue
    const/4 v1, 0x0

    const/4 v2, -0x1

    .line 10134
    iget-object v3, p0, mInputManager:Lcom/android/server/input/InputManagerService;

    const/16 v4, -0x100

    invoke-virtual {v3, v2, v4, v1}, Lcom/android/server/input/InputManagerService;->getSwitchState(III)I

    move-result v0

    .line 10136
    .local v0, "sw":I
    if-lez v0, :cond_d

    .line 10144
    :goto_c
    return v1

    .line 10139
    :cond_d
    if-nez v0, :cond_11

    .line 10141
    const/4 v1, 0x1

    goto :goto_c

    :cond_11
    move v1, v2

    .line 10144
    goto :goto_c
.end method

.method public getMainWindowAttributesLocked(Landroid/view/IApplicationToken;)Landroid/view/WindowManager$LayoutParams;
    .registers 6
    .param p1, "token"    # Landroid/view/IApplicationToken;

    .prologue
    const/4 v2, 0x0

    .line 21951
    if-nez p1, :cond_4

    .line 21959
    :cond_3
    :goto_3
    return-object v2

    .line 21954
    :cond_4
    invoke-interface {p1}, Landroid/view/IApplicationToken;->asBinder()Landroid/os/IBinder;

    move-result-object v3

    invoke-virtual {p0, v3}, findAppWindowToken(Landroid/os/IBinder;)Lcom/android/server/wm/AppWindowToken;

    move-result-object v1

    .line 21955
    .local v1, "wtoken":Lcom/android/server/wm/AppWindowToken;
    if-eqz v1, :cond_3

    .line 21958
    invoke-virtual {v1}, Lcom/android/server/wm/AppWindowToken;->findMainWindow()Lcom/android/server/wm/WindowState;

    move-result-object v0

    .line 21959
    .local v0, "win":Lcom/android/server/wm/WindowState;
    if-eqz v0, :cond_3

    iget-object v2, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    goto :goto_3
.end method

.method protected getMultiWindowTransitionLocked(I)Lcom/android/server/wm/MultiWindowTransition;
    .registers 6
    .param p1, "displayId"    # I

    .prologue
    .line 21176
    invoke-virtual {p0, p1}, getDisplayContentLocked(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v0

    .line 21178
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    iget-object v2, p0, mAnimator:Lcom/android/server/wm/WindowAnimator;

    invoke-virtual {v2, p1}, Lcom/android/server/wm/WindowAnimator;->getMultiWindowTransitionLocked(I)Lcom/android/server/wm/MultiWindowTransition;

    move-result-object v1

    .line 21179
    .local v1, "transition":Lcom/android/server/wm/MultiWindowTransition;
    if-nez v1, :cond_1a

    .line 21180
    new-instance v1, Lcom/android/server/wm/MultiWindowTransition;

    .end local v1    # "transition":Lcom/android/server/wm/MultiWindowTransition;
    iget-object v2, p0, mContext:Landroid/content/Context;

    iget-object v3, p0, mFxSession:Landroid/view/SurfaceSession;

    invoke-direct {v1, v2, v0, v3, p0}, Lcom/android/server/wm/MultiWindowTransition;-><init>(Landroid/content/Context;Lcom/android/server/wm/DisplayContent;Landroid/view/SurfaceSession;Lcom/android/server/wm/WindowManagerService;)V

    .line 21181
    .restart local v1    # "transition":Lcom/android/server/wm/MultiWindowTransition;
    iget-object v2, p0, mAnimator:Lcom/android/server/wm/WindowAnimator;

    invoke-virtual {v2, p1, v1}, Lcom/android/server/wm/WindowAnimator;->setMultiWindowTransitionLocked(ILcom/android/server/wm/MultiWindowTransition;)V

    .line 21183
    :cond_1a
    return-object v1
.end method

.method public getOrientationFromDisplayLocked(I)I
    .registers 7
    .param p1, "displayId"    # I

    .prologue
    .line 12816
    invoke-virtual {p0, p1}, getDisplayContentLocked(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v1

    .line 12817
    .local v1, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-eqz v1, :cond_14

    .line 12818
    invoke-virtual {v1}, Lcom/android/server/wm/DisplayContent;->getDisplayInfo()Landroid/view/DisplayInfo;

    move-result-object v2

    .line 12819
    .local v2, "displayInfo":Landroid/view/DisplayInfo;
    iget v4, v2, Landroid/view/DisplayInfo;->logicalWidth:I

    .line 12820
    .local v4, "dw":I
    iget v0, v2, Landroid/view/DisplayInfo;->logicalHeight:I

    .line 12821
    .local v0, "dh":I
    if-gt v4, v0, :cond_12

    const/4 v3, 0x1

    .line 12824
    .end local v0    # "dh":I
    .end local v2    # "displayInfo":Landroid/view/DisplayInfo;
    .end local v4    # "dw":I
    :goto_11
    return v3

    .line 12821
    .restart local v0    # "dh":I
    .restart local v2    # "displayInfo":Landroid/view/DisplayInfo;
    .restart local v4    # "dw":I
    :cond_12
    const/4 v3, 0x2

    goto :goto_11

    .line 12824
    .end local v0    # "dh":I
    .end local v2    # "displayInfo":Landroid/view/DisplayInfo;
    .end local v4    # "dw":I
    :cond_14
    const/4 v3, 0x0

    goto :goto_11
.end method

.method public getOrientationLocked()I
    .registers 2

    .prologue
    .line 6579
    const/4 v0, 0x0

    invoke-virtual {p0, v0}, getOrientationLocked(I)I

    move-result v0

    return v0
.end method

.method public getOrientationLocked(I)I
    .registers 28
    .param p1, "displayId"    # I

    .prologue
    .line 6588
    move-object/from16 v0, p0

    iget-boolean v9, v0, mDisplayFrozen:Z

    .line 6592
    .local v9, "mDisplayFrozen":Z
    if-eqz v9, :cond_6e

    .line 6599
    move-object/from16 v0, p0

    iget v0, v0, mLastWindowForcedOrientation:I

    move/from16 v23, v0

    const/16 v24, -0x1

    move/from16 v0, v23

    move/from16 v1, v24

    if-eq v0, v1, :cond_3b

    .line 6605
    sget-boolean v23, DEBUG_ORIENTATION:Z

    if-eqz v23, :cond_36

    const-string v23, "WindowManager"

    new-instance v24, Ljava/lang/StringBuilder;

    invoke-direct/range {v24 .. v24}, Ljava/lang/StringBuilder;-><init>()V

    const-string v25, "Display is frozen, return "

    invoke-virtual/range {v24 .. v25}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v24

    move-object/from16 v0, p0

    iget v0, v0, mLastWindowForcedOrientation:I

    move/from16 v25, v0

    invoke-virtual/range {v24 .. v25}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v24

    invoke-virtual/range {v24 .. v24}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v24

    invoke-static/range {v23 .. v24}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 6607
    :cond_36
    move-object/from16 v0, p0

    iget v10, v0, mLastWindowForcedOrientation:I

    .line 6930
    :cond_3a
    :goto_3a
    return v10

    .line 6608
    :cond_3b
    move-object/from16 v0, p0

    iget-object v0, v0, mPolicy:Landroid/view/WindowManagerPolicy;

    move-object/from16 v23, v0

    invoke-interface/range {v23 .. v23}, Landroid/view/WindowManagerPolicy;->isKeyguardLocked()Z

    move-result v23

    if-eqz v23, :cond_1c3

    .line 6609
    sget-boolean v23, DEBUG_ORIENTATION:Z

    if-eqz v23, :cond_69

    const-string v23, "WindowManager"

    new-instance v24, Ljava/lang/StringBuilder;

    invoke-direct/range {v24 .. v24}, Ljava/lang/StringBuilder;-><init>()V

    const-string v25, "Display is frozen and screen is locked, return "

    invoke-virtual/range {v24 .. v25}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v24

    move-object/from16 v0, p0

    iget v0, v0, mForcedAppOrientation:I

    move/from16 v25, v0

    invoke-virtual/range {v24 .. v25}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v24

    invoke-virtual/range {v24 .. v24}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v24

    invoke-static/range {v23 .. v24}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 6611
    :cond_69
    move-object/from16 v0, p0

    iget v10, v0, mForcedAppOrientation:I

    goto :goto_3a

    .line 6621
    :cond_6e
    invoke-virtual/range {p0 .. p0}, getDefaultWindowListLocked()Lcom/android/server/wm/WindowList;

    move-result-object v22

    .line 6623
    .local v22, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual/range {v22 .. v22}, Lcom/android/server/wm/WindowList;->size()I

    move-result v23

    add-int/lit8 v12, v23, -0x1

    .local v12, "pos":I
    :goto_78
    if-ltz v12, :cond_8a

    .line 6624
    move-object/from16 v0, v22

    invoke-virtual {v0, v12}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v20

    check-cast v20, Lcom/android/server/wm/WindowState;

    .line 6625
    .local v20, "win":Lcom/android/server/wm/WindowState;
    move-object/from16 v0, v20

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    move-object/from16 v23, v0

    if-eqz v23, :cond_ea

    .line 6668
    .end local v20    # "win":Lcom/android/server/wm/WindowState;
    :cond_8a
    const/16 v23, -0x1

    move/from16 v0, v23

    move-object/from16 v1, p0

    iput v0, v1, mLastWindowForcedOrientation:I

    .line 6670
    move-object/from16 v0, p0

    iget-object v0, v0, mPolicy:Landroid/view/WindowManagerPolicy;

    move-object/from16 v23, v0

    invoke-interface/range {v23 .. v23}, Landroid/view/WindowManagerPolicy;->isKeyguardLocked()Z

    move-result v23

    if-eqz v23, :cond_1c3

    .line 6674
    const/16 v21, 0x0

    .line 6680
    .local v21, "winShowWhenLocked":Lcom/android/server/wm/WindowState;
    move-object/from16 v0, p0

    iget-object v0, v0, mPolicy:Landroid/view/WindowManagerPolicy;

    move-object/from16 v23, v0

    invoke-interface/range {v23 .. v23}, Landroid/view/WindowManagerPolicy;->getWinShowWhenLockedLw()Landroid/view/WindowManagerPolicy$WindowState;

    move-result-object v21

    .end local v21    # "winShowWhenLocked":Lcom/android/server/wm/WindowState;
    check-cast v21, Lcom/android/server/wm/WindowState;

    .line 6682
    .restart local v21    # "winShowWhenLocked":Lcom/android/server/wm/WindowState;
    if-nez v21, :cond_1ac

    const/4 v2, 0x0

    .line 6684
    .local v2, "appShowWhenLocked":Lcom/android/server/wm/AppWindowToken;
    :goto_af
    if-eqz v2, :cond_1b2

    .line 6685
    iget v13, v2, Lcom/android/server/wm/AppWindowToken;->requestedOrientation:I

    .line 6686
    .local v13, "req":I
    const/16 v23, 0x3

    move/from16 v0, v23

    if-ne v13, v0, :cond_bd

    .line 6687
    move-object/from16 v0, p0

    iget v13, v0, mLastKeyguardForcedOrientation:I

    .line 6689
    :cond_bd
    sget-boolean v23, DEBUG_ORIENTATION:Z

    if-eqz v23, :cond_e7

    const-string v23, "WindowManager"

    new-instance v24, Ljava/lang/StringBuilder;

    invoke-direct/range {v24 .. v24}, Ljava/lang/StringBuilder;-><init>()V

    const-string v25, "Done at "

    invoke-virtual/range {v24 .. v25}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v24

    move-object/from16 v0, v24

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v24

    const-string v25, " -- show when locked, return "

    invoke-virtual/range {v24 .. v25}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v24

    move-object/from16 v0, v24

    invoke-virtual {v0, v13}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v24

    invoke-virtual/range {v24 .. v24}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v24

    invoke-static/range {v23 .. v24}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    :cond_e7
    move v10, v13

    .line 6691
    goto/16 :goto_3a

    .line 6630
    .end local v2    # "appShowWhenLocked":Lcom/android/server/wm/AppWindowToken;
    .end local v13    # "req":I
    .end local v21    # "winShowWhenLocked":Lcom/android/server/wm/WindowState;
    .restart local v20    # "win":Lcom/android/server/wm/WindowState;
    :cond_ea
    invoke-virtual/range {v20 .. v20}, Lcom/android/server/wm/WindowState;->isVisibleLw()Z

    move-result v23

    if-eqz v23, :cond_f8

    move-object/from16 v0, v20

    iget-boolean v0, v0, Lcom/android/server/wm/WindowState;->mPolicyVisibilityAfterAnim:Z

    move/from16 v23, v0

    if-nez v23, :cond_fc

    .line 6623
    :cond_f8
    :goto_f8
    add-int/lit8 v12, v12, -0x1

    goto/16 :goto_78

    .line 6633
    :cond_fc
    move-object/from16 v0, v20

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    move-object/from16 v23, v0

    move-object/from16 v0, v23

    iget v13, v0, Landroid/view/WindowManager$LayoutParams;->screenOrientation:I

    .line 6634
    .restart local v13    # "req":I
    const/16 v23, -0x1

    move/from16 v0, v23

    if-eq v13, v0, :cond_f8

    const/16 v23, 0x3

    move/from16 v0, v23

    if-eq v13, v0, :cond_f8

    .line 6641
    move-object/from16 v0, v20

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    move-object/from16 v23, v0

    move-object/from16 v0, v23

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    move/from16 v23, v0

    const/16 v24, 0x8ad

    move/from16 v0, v23

    move/from16 v1, v24

    if-ne v0, v1, :cond_169

    .line 6642
    move-object/from16 v0, p0

    iget-object v0, v0, mCocktailBar:Lcom/android/server/wm/WindowState;

    move-object/from16 v23, v0

    if-eqz v23, :cond_169

    move-object/from16 v0, p0

    iget-object v0, v0, mCocktailBar:Lcom/android/server/wm/WindowState;

    move-object/from16 v23, v0

    move-object/from16 v0, v23

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mToken:Lcom/android/server/wm/WindowToken;

    move-object/from16 v23, v0

    move-object/from16 v0, v23

    iget-boolean v0, v0, Lcom/android/server/wm/WindowToken;->willBeHideBlockMain:Z

    move/from16 v23, v0

    if-eqz v23, :cond_169

    .line 6643
    sget-boolean v23, SAFE_DEBUG:Z

    if-eqz v23, :cond_f8

    const-string v23, "WindowManager"

    new-instance v24, Ljava/lang/StringBuilder;

    invoke-direct/range {v24 .. v24}, Ljava/lang/StringBuilder;-><init>()V

    move-object/from16 v0, v24

    move-object/from16 v1, v20

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v24

    const-string v25, " ignore forcing orientation to "

    invoke-virtual/range {v24 .. v25}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v24

    move-object/from16 v0, v24

    invoke-virtual {v0, v13}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v24

    invoke-virtual/range {v24 .. v24}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v24

    invoke-static/range {v23 .. v24}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_f8

    .line 6650
    :cond_169
    sget-boolean v23, DEBUG_ORIENTATION:Z

    if-eqz v23, :cond_18f

    const-string v23, "WindowManager"

    new-instance v24, Ljava/lang/StringBuilder;

    invoke-direct/range {v24 .. v24}, Ljava/lang/StringBuilder;-><init>()V

    move-object/from16 v0, v24

    move-object/from16 v1, v20

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v24

    const-string v25, " forcing orientation to "

    invoke-virtual/range {v24 .. v25}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v24

    move-object/from16 v0, v24

    invoke-virtual {v0, v13}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v24

    invoke-virtual/range {v24 .. v24}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v24

    invoke-static/range {v23 .. v24}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 6651
    :cond_18f
    move-object/from16 v0, p0

    iget-object v0, v0, mPolicy:Landroid/view/WindowManagerPolicy;

    move-object/from16 v23, v0

    move-object/from16 v0, v20

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    move-object/from16 v24, v0

    invoke-interface/range {v23 .. v24}, Landroid/view/WindowManagerPolicy;->isKeyguardHostWindow(Landroid/view/WindowManager$LayoutParams;)Z

    move-result v23

    if-eqz v23, :cond_1a5

    .line 6652
    move-object/from16 v0, p0

    iput v13, v0, mLastKeyguardForcedOrientation:I

    .line 6660
    :cond_1a5
    move-object/from16 v0, p0

    iput v13, v0, mLastWindowForcedOrientation:I

    move v10, v13

    goto/16 :goto_3a

    .line 6682
    .end local v13    # "req":I
    .end local v20    # "win":Lcom/android/server/wm/WindowState;
    .restart local v21    # "winShowWhenLocked":Lcom/android/server/wm/WindowState;
    :cond_1ac
    move-object/from16 v0, v21

    iget-object v2, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    goto/16 :goto_af

    .line 6693
    .restart local v2    # "appShowWhenLocked":Lcom/android/server/wm/AppWindowToken;
    :cond_1b2
    sget-boolean v23, DEBUG_ORIENTATION:Z

    if-eqz v23, :cond_1bd

    const-string v23, "WindowManager"

    const-string v24, "No one is requesting an orientation when the screen is locked"

    invoke-static/range {v23 .. v24}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 6700
    :cond_1bd
    move-object/from16 v0, p0

    iget v10, v0, mLastKeyguardForcedOrientation:I

    goto/16 :goto_3a

    .line 6706
    .end local v2    # "appShowWhenLocked":Lcom/android/server/wm/AppWindowToken;
    .end local v12    # "pos":I
    .end local v21    # "winShowWhenLocked":Lcom/android/server/wm/WindowState;
    .end local v22    # "windows":Lcom/android/server/wm/WindowList;
    :cond_1c3
    const/4 v8, -0x1

    .line 6707
    .local v8, "lastOrientation":I
    const/4 v5, 0x0

    .line 6708
    .local v5, "findingBehind":Z
    const/4 v7, 0x0

    .line 6710
    .local v7, "lastFullscreen":Z
    const/4 v10, -0x1

    .line 6714
    .local v10, "mwOrientation":I
    const/4 v4, 0x0

    .line 6724
    .local v4, "displayContent":Lcom/android/server/wm/DisplayContent;
    invoke-virtual/range {p0 .. p0}, getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v4

    .line 6728
    invoke-virtual {v4}, Lcom/android/server/wm/DisplayContent;->getTasks()Ljava/util/ArrayList;

    move-result-object v16

    .line 6731
    .local v16, "tasks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/Task;>;"
    invoke-virtual/range {v16 .. v16}, Ljava/util/ArrayList;->size()I

    move-result v23

    add-int/lit8 v15, v23, -0x1

    .local v15, "taskNdx":I
    :goto_1d6
    if-ltz v15, :cond_5a0

    .line 6732
    move-object/from16 v0, v16

    invoke-virtual {v0, v15}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v23

    check-cast v23, Lcom/android/server/wm/Task;

    move-object/from16 v0, v23

    iget-object v0, v0, Lcom/android/server/wm/Task;->mAppTokens:Lcom/android/server/wm/AppTokenList;

    move-object/from16 v18, v0

    .line 6733
    .local v18, "tokens":Lcom/android/server/wm/AppTokenList;
    invoke-virtual/range {v18 .. v18}, Lcom/android/server/wm/AppTokenList;->size()I

    move-result v23

    add-int/lit8 v6, v23, -0x1

    .line 6734
    .local v6, "firstToken":I
    move/from16 v17, v6

    .local v17, "tokenNdx":I
    :goto_1ee
    if-ltz v17, :cond_59c

    .line 6735
    move-object/from16 v0, v18

    move/from16 v1, v17

    invoke-virtual {v0, v1}, Lcom/android/server/wm/AppTokenList;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/wm/AppWindowToken;

    .line 6742
    .local v3, "atoken":Lcom/android/server/wm/AppWindowToken;
    sget-boolean v23, DEBUG_DUALSCREEN:Z

    if-eqz v23, :cond_25f

    .line 6743
    sget-boolean v23, DEBUG_APP_ORIENTATION:Z

    if-eqz v23, :cond_22a

    const-string v23, "WindowManager"

    new-instance v24, Ljava/lang/StringBuilder;

    invoke-direct/range {v24 .. v24}, Ljava/lang/StringBuilder;-><init>()V

    const-string v25, "Checking app orientation: "

    invoke-virtual/range {v24 .. v25}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v24

    move-object/from16 v0, v24

    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v24

    const-string v25, " policyOppositeDisplayOrientation="

    invoke-virtual/range {v24 .. v25}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v24

    iget v0, v3, Lcom/android/server/wm/AppWindowToken;->policyOppositeDisplayOrientation:I

    move/from16 v25, v0

    invoke-virtual/range {v24 .. v25}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v24

    invoke-virtual/range {v24 .. v24}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v24

    invoke-static/range {v23 .. v24}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 6752
    :cond_22a
    :goto_22a
    if-nez v5, :cond_27e

    iget-boolean v0, v3, Lcom/android/server/wm/AppWindowToken;->hidden:Z

    move/from16 v23, v0

    if-nez v23, :cond_27e

    iget-boolean v0, v3, Lcom/android/server/wm/AppWindowToken;->hiddenRequested:Z

    move/from16 v23, v0

    if-eqz v23, :cond_27e

    .line 6754
    sget-boolean v23, DEBUG_ORIENTATION:Z

    if-eqz v23, :cond_25c

    const-string v23, "WindowManager"

    new-instance v24, Ljava/lang/StringBuilder;

    invoke-direct/range {v24 .. v24}, Ljava/lang/StringBuilder;-><init>()V

    const-string v25, "Skipping "

    invoke-virtual/range {v24 .. v25}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v24

    move-object/from16 v0, v24

    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v24

    const-string v25, " -- going to hide"

    invoke-virtual/range {v24 .. v25}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v24

    invoke-virtual/range {v24 .. v24}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v24

    invoke-static/range {v23 .. v24}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 6734
    :cond_25c
    :goto_25c
    add-int/lit8 v17, v17, -0x1

    goto :goto_1ee

    .line 6747
    :cond_25f
    sget-boolean v23, DEBUG_APP_ORIENTATION:Z

    if-eqz v23, :cond_22a

    const-string v23, "WindowManager"

    new-instance v24, Ljava/lang/StringBuilder;

    invoke-direct/range {v24 .. v24}, Ljava/lang/StringBuilder;-><init>()V

    const-string v25, "Checking app orientation: "

    invoke-virtual/range {v24 .. v25}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v24

    move-object/from16 v0, v24

    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v24

    invoke-virtual/range {v24 .. v24}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v24

    invoke-static/range {v23 .. v24}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_22a

    .line 6759
    :cond_27e
    move/from16 v0, v17

    if-ne v0, v6, :cond_2b7

    .line 6765
    const/16 v23, 0x3

    move/from16 v0, v23

    if-eq v8, v0, :cond_2b7

    if-eqz v7, :cond_2b7

    .line 6767
    sget-boolean v23, DEBUG_ORIENTATION:Z

    if-eqz v23, :cond_2b4

    const-string v23, "WindowManager"

    new-instance v24, Ljava/lang/StringBuilder;

    invoke-direct/range {v24 .. v24}, Ljava/lang/StringBuilder;-><init>()V

    const-string v25, "Done at "

    invoke-virtual/range {v24 .. v25}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v24

    move-object/from16 v0, v24

    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v24

    const-string v25, " -- end of group, return "

    invoke-virtual/range {v24 .. v25}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v24

    move-object/from16 v0, v24

    invoke-virtual {v0, v8}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v24

    invoke-virtual/range {v24 .. v24}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v24

    invoke-static/range {v23 .. v24}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    :cond_2b4
    move v10, v8

    .line 6769
    goto/16 :goto_3a

    .line 6774
    :cond_2b7
    iget-boolean v0, v3, Lcom/android/server/wm/AppWindowToken;->hiddenRequested:Z

    move/from16 v23, v0

    if-nez v23, :cond_2c3

    iget-boolean v0, v3, Lcom/android/server/wm/AppWindowToken;->willBeHidden:Z

    move/from16 v23, v0

    if-eqz v23, :cond_2e9

    .line 6775
    :cond_2c3
    sget-boolean v23, DEBUG_ORIENTATION:Z

    if-eqz v23, :cond_25c

    const-string v23, "WindowManager"

    new-instance v24, Ljava/lang/StringBuilder;

    invoke-direct/range {v24 .. v24}, Ljava/lang/StringBuilder;-><init>()V

    const-string v25, "Skipping "

    invoke-virtual/range {v24 .. v25}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v24

    move-object/from16 v0, v24

    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v24

    const-string v25, " -- hidden on top"

    invoke-virtual/range {v24 .. v25}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v24

    invoke-virtual/range {v24 .. v24}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v24

    invoke-static/range {v23 .. v24}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    goto/16 :goto_25c

    .line 6781
    :cond_2e9
    iget v14, v3, Lcom/android/server/wm/AppWindowToken;->requestedOrientation:I

    .line 6792
    .local v14, "requestedOrientation":I
    move-object/from16 v0, p0

    iget-object v0, v0, mPolicy:Landroid/view/WindowManagerPolicy;

    move-object/from16 v23, v0

    invoke-interface/range {v23 .. v23}, Landroid/view/WindowManagerPolicy;->getCoverStateSwitch()Z

    move-result v23

    const/16 v24, 0x1

    move/from16 v0, v23

    move/from16 v1, v24

    if-eq v0, v1, :cond_333

    invoke-virtual {v3}, Lcom/android/server/wm/AppWindowToken;->findMainWindow()Lcom/android/server/wm/WindowState;

    move-result-object v23

    if-eqz v23, :cond_333

    invoke-virtual {v3}, Lcom/android/server/wm/AppWindowToken;->findMainWindow()Lcom/android/server/wm/WindowState;

    move-result-object v23

    invoke-virtual/range {v23 .. v23}, Lcom/android/server/wm/WindowState;->getCoverMode()I

    move-result v23

    if-nez v23, :cond_333

    .line 6795
    sget-boolean v23, DEBUG_ORIENTATION:Z

    if-eqz v23, :cond_25c

    const-string v23, "WindowManager"

    new-instance v24, Ljava/lang/StringBuilder;

    invoke-direct/range {v24 .. v24}, Ljava/lang/StringBuilder;-><init>()V

    const-string v25, "Skipping "

    invoke-virtual/range {v24 .. v25}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v24

    move-object/from16 v0, v24

    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v24

    const-string v25, " -- hide by Cover"

    invoke-virtual/range {v24 .. v25}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v24

    invoke-virtual/range {v24 .. v24}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v24

    invoke-static/range {v23 .. v24}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    goto/16 :goto_25c

    .line 6803
    :cond_333
    iget-object v0, v3, Lcom/android/server/wm/AppWindowToken;->appMultiWindowStyle:Lcom/samsung/android/multiwindow/MultiWindowStyle;

    move-object/from16 v23, v0

    invoke-virtual/range {v23 .. v23}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->isCascade()Z

    move-result v23

    if-eqz v23, :cond_416

    .line 6804
    sget-boolean v23, Lcom/samsung/android/multiwindow/MultiWindowFeatures;->SELECTIVE1ORIENTATION_ENABLED:Z

    if-eqz v23, :cond_3af

    iget-object v0, v3, Lcom/android/server/wm/AppWindowToken;->appMultiWindowStyle:Lcom/samsung/android/multiwindow/MultiWindowStyle;

    move-object/from16 v23, v0

    const/high16 v24, 0x200000

    invoke-virtual/range {v23 .. v24}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->isEnabled(I)Z

    move-result v23

    if-nez v23, :cond_3af

    .line 6806
    sget-boolean v23, DEBUG_MULTIWINDOW_ORIENTATION:Z

    if-eqz v23, :cond_378

    .line 6807
    const-string v23, "WindowManager"

    new-instance v24, Ljava/lang/StringBuilder;

    invoke-direct/range {v24 .. v24}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v25, "isSupportSelective1Orientation "

    invoke-virtual/range {v24 .. v25}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v24

    move-object/from16 v0, v24

    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v24

    const-string v25, ", so update override config as "

    invoke-virtual/range {v24 .. v25}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v24

    move-object/from16 v0, v24

    invoke-virtual {v0, v14}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v24

    invoke-virtual/range {v24 .. v24}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v24

    invoke-static/range {v23 .. v24}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 6808
    :cond_378
    iget-object v0, v3, Lcom/android/server/wm/AppWindowToken;->mTask:Lcom/android/server/wm/Task;

    move-object/from16 v23, v0

    if-eqz v23, :cond_25c

    iget-object v0, v3, Lcom/android/server/wm/AppWindowToken;->mTask:Lcom/android/server/wm/Task;

    move-object/from16 v23, v0

    move-object/from16 v0, v23

    iget-object v0, v0, Lcom/android/server/wm/Task;->mStack:Lcom/android/server/wm/TaskStack;

    move-object/from16 v23, v0

    if-eqz v23, :cond_25c

    .line 6809
    iget-object v0, v3, Lcom/android/server/wm/AppWindowToken;->mTask:Lcom/android/server/wm/Task;

    move-object/from16 v23, v0

    move-object/from16 v0, v23

    iget-object v0, v0, Lcom/android/server/wm/Task;->mStack:Lcom/android/server/wm/TaskStack;

    move-object/from16 v23, v0

    invoke-virtual/range {v23 .. v23}, Lcom/android/server/wm/TaskStack;->getTopOpaqueAppToken()Lcom/android/server/wm/AppWindowToken;

    move-result-object v19

    .line 6810
    .local v19, "topOpaqueAppToken":Lcom/android/server/wm/AppWindowToken;
    if-eqz v19, :cond_39e

    move-object/from16 v0, v19

    if-ne v0, v3, :cond_25c

    .line 6811
    :cond_39e
    iget-object v0, v3, Lcom/android/server/wm/AppWindowToken;->mTask:Lcom/android/server/wm/Task;

    move-object/from16 v23, v0

    move-object/from16 v0, v23

    iget-object v0, v0, Lcom/android/server/wm/Task;->mStack:Lcom/android/server/wm/TaskStack;

    move-object/from16 v23, v0

    move-object/from16 v0, v23

    invoke-virtual {v0, v3}, Lcom/android/server/wm/TaskStack;->updateOverrideConfiguration(Lcom/android/server/wm/AppWindowToken;)V

    goto/16 :goto_25c

    .line 6815
    .end local v19    # "topOpaqueAppToken":Lcom/android/server/wm/AppWindowToken;
    :cond_3af
    iget-object v0, v3, Lcom/android/server/wm/AppWindowToken;->appMultiWindowStyle:Lcom/samsung/android/multiwindow/MultiWindowStyle;

    move-object/from16 v23, v0

    move-object/from16 v0, p0

    move-object/from16 v1, v23

    invoke-virtual {v0, v14, v1}, shouldHandleOrientation(ILcom/samsung/android/multiwindow/MultiWindowStyle;)Z

    move-result v23

    if-eqz v23, :cond_3f0

    .line 6816
    const/16 v23, -0x1

    move/from16 v0, v23

    if-ne v10, v0, :cond_25c

    .line 6817
    move v10, v14

    .line 6818
    sget-boolean v23, DEBUG_MULTIWINDOW_ORIENTATION:Z

    if-eqz v23, :cond_25c

    .line 6819
    const-string v23, "WindowManager"

    new-instance v24, Ljava/lang/StringBuilder;

    invoke-direct/range {v24 .. v24}, Ljava/lang/StringBuilder;-><init>()V

    const-string v25, "Found cascade at "

    invoke-virtual/range {v24 .. v25}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v24

    move-object/from16 v0, v24

    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v24

    const-string v25, " -- explicitly set, keep "

    invoke-virtual/range {v24 .. v25}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v24

    move-object/from16 v0, v24

    invoke-virtual {v0, v10}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v24

    invoke-virtual/range {v24 .. v24}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v24

    invoke-static/range {v23 .. v24}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    goto/16 :goto_25c

    .line 6823
    :cond_3f0
    sget-boolean v23, DEBUG_MULTIWINDOW_ORIENTATION:Z

    if-eqz v23, :cond_25c

    .line 6824
    const-string v23, "WindowManager"

    new-instance v24, Ljava/lang/StringBuilder;

    invoke-direct/range {v24 .. v24}, Ljava/lang/StringBuilder;-><init>()V

    const-string v25, "Skipping "

    invoke-virtual/range {v24 .. v25}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v24

    move-object/from16 v0, v24

    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v24

    const-string v25, " -- TYPE_CASCADE"

    invoke-virtual/range {v24 .. v25}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v24

    invoke-virtual/range {v24 .. v24}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v24

    invoke-static/range {v23 .. v24}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    goto/16 :goto_25c

    .line 6827
    :cond_416
    iget-object v0, v3, Lcom/android/server/wm/AppWindowToken;->appMultiWindowStyle:Lcom/samsung/android/multiwindow/MultiWindowStyle;

    move-object/from16 v23, v0

    invoke-virtual/range {v23 .. v23}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->isSplit()Z

    move-result v23

    if-eqz v23, :cond_458

    iget-object v0, v3, Lcom/android/server/wm/AppWindowToken;->appMultiWindowStyle:Lcom/samsung/android/multiwindow/MultiWindowStyle;

    move-object/from16 v23, v0

    const/high16 v24, 0x200000

    invoke-virtual/range {v23 .. v24}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->isEnabled(I)Z

    move-result v23

    if-nez v23, :cond_458

    .line 6829
    sget-boolean v23, DEBUG_MULTIWINDOW_ORIENTATION:Z

    if-eqz v23, :cond_3a

    .line 6830
    const-string v23, "WindowManager"

    new-instance v24, Ljava/lang/StringBuilder;

    invoke-direct/range {v24 .. v24}, Ljava/lang/StringBuilder;-><init>()V

    const-string v25, "Dont at "

    invoke-virtual/range {v24 .. v25}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v24

    move-object/from16 v0, v24

    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v24

    const-string v25, "-- split screen, return "

    invoke-virtual/range {v24 .. v25}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v24

    move-object/from16 v0, v24

    invoke-virtual {v0, v10}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v24

    invoke-virtual/range {v24 .. v24}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v24

    invoke-static/range {v23 .. v24}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    goto/16 :goto_3a

    .line 6832
    :cond_458
    sget-boolean v23, Lcom/samsung/android/multiwindow/MultiWindowFeatures;->SELECTIVE1ORIENTATION_ENABLED:Z

    if-eqz v23, :cond_4ab

    iget-object v0, v3, Lcom/android/server/wm/AppWindowToken;->appMultiWindowStyle:Lcom/samsung/android/multiwindow/MultiWindowStyle;

    move-object/from16 v23, v0

    invoke-virtual/range {v23 .. v23}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->isNormal()Z

    move-result v23

    if-eqz v23, :cond_4ab

    iget-object v0, v3, Lcom/android/server/wm/AppWindowToken;->mTask:Lcom/android/server/wm/Task;

    move-object/from16 v23, v0

    if-eqz v23, :cond_4ab

    iget-object v0, v3, Lcom/android/server/wm/AppWindowToken;->mTask:Lcom/android/server/wm/Task;

    move-object/from16 v23, v0

    move-object/from16 v0, v23

    iget-object v0, v0, Lcom/android/server/wm/Task;->mStack:Lcom/android/server/wm/TaskStack;

    move-object/from16 v23, v0

    if-eqz v23, :cond_4ab

    iget-object v0, v3, Lcom/android/server/wm/AppWindowToken;->mTask:Lcom/android/server/wm/Task;

    move-object/from16 v23, v0

    move-object/from16 v0, v23

    iget-object v0, v0, Lcom/android/server/wm/Task;->mStack:Lcom/android/server/wm/TaskStack;

    move-object/from16 v23, v0

    invoke-virtual/range {v23 .. v23}, Lcom/android/server/wm/TaskStack;->isFloatingStack()Z

    move-result v23

    if-eqz v23, :cond_4ab

    .line 6836
    iget-object v0, v3, Lcom/android/server/wm/AppWindowToken;->mTask:Lcom/android/server/wm/Task;

    move-object/from16 v23, v0

    move-object/from16 v0, v23

    iget-object v0, v0, Lcom/android/server/wm/Task;->mStack:Lcom/android/server/wm/TaskStack;

    move-object/from16 v23, v0

    invoke-virtual/range {v23 .. v23}, Lcom/android/server/wm/TaskStack;->getTopOpaqueAppToken()Lcom/android/server/wm/AppWindowToken;

    move-result-object v19

    .line 6837
    .restart local v19    # "topOpaqueAppToken":Lcom/android/server/wm/AppWindowToken;
    if-eqz v19, :cond_49c

    move-object/from16 v0, v19

    if-ne v0, v3, :cond_4ab

    .line 6838
    :cond_49c
    iget-object v0, v3, Lcom/android/server/wm/AppWindowToken;->mTask:Lcom/android/server/wm/Task;

    move-object/from16 v23, v0

    move-object/from16 v0, v23

    iget-object v0, v0, Lcom/android/server/wm/Task;->mStack:Lcom/android/server/wm/TaskStack;

    move-object/from16 v23, v0

    move-object/from16 v0, v23

    invoke-virtual {v0, v3}, Lcom/android/server/wm/TaskStack;->updateOverrideConfiguration(Lcom/android/server/wm/AppWindowToken;)V

    .line 6844
    .end local v19    # "topOpaqueAppToken":Lcom/android/server/wm/AppWindowToken;
    :cond_4ab
    if-nez v17, :cond_4ae

    .line 6847
    move v8, v14

    .line 6855
    :cond_4ae
    move v11, v14

    .line 6863
    .local v11, "or":I
    iget-boolean v7, v3, Lcom/android/server/wm/AppWindowToken;->appFullscreen:Z

    .line 6864
    if-eqz v7, :cond_53c

    const/16 v23, 0x3

    move/from16 v0, v23

    if-eq v11, v0, :cond_53c

    .line 6866
    const/16 v23, -0x1

    move/from16 v0, v23

    if-eq v10, v0, :cond_50f

    const/16 v23, -0x1

    move/from16 v0, v23

    if-eq v11, v0, :cond_4d7

    const/16 v23, 0xa

    move/from16 v0, v23

    if-eq v11, v0, :cond_4d7

    const/16 v23, 0x4

    move/from16 v0, v23

    if-eq v11, v0, :cond_4d7

    const/16 v23, 0x2

    move/from16 v0, v23

    if-ne v11, v0, :cond_50f

    .line 6872
    :cond_4d7
    sget-boolean v23, DEBUG_MULTIWINDOW_ORIENTATION:Z

    if-eqz v23, :cond_3a

    const-string v23, "WindowManager"

    new-instance v24, Ljava/lang/StringBuilder;

    invoke-direct/range {v24 .. v24}, Ljava/lang/StringBuilder;-><init>()V

    const-string v25, "Done at "

    invoke-virtual/range {v24 .. v25}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v24

    move-object/from16 v0, v24

    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v24

    const-string v25, " -- full screen, return "

    invoke-virtual/range {v24 .. v25}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v24

    move-object/from16 v0, v24

    invoke-virtual {v0, v11}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v24

    const-string v25, "\n -- mwOrientation="

    invoke-virtual/range {v24 .. v25}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v24

    move-object/from16 v0, v24

    invoke-virtual {v0, v10}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v24

    invoke-virtual/range {v24 .. v24}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v24

    invoke-static/range {v23 .. v24}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    goto/16 :goto_3a

    .line 6877
    :cond_50f
    sget-boolean v23, DEBUG_ORIENTATION:Z

    if-eqz v23, :cond_539

    const-string v23, "WindowManager"

    new-instance v24, Ljava/lang/StringBuilder;

    invoke-direct/range {v24 .. v24}, Ljava/lang/StringBuilder;-><init>()V

    const-string v25, "Done at "

    invoke-virtual/range {v24 .. v25}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v24

    move-object/from16 v0, v24

    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v24

    const-string v25, " -- full screen, return "

    invoke-virtual/range {v24 .. v25}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v24

    move-object/from16 v0, v24

    invoke-virtual {v0, v11}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v24

    invoke-virtual/range {v24 .. v24}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v24

    invoke-static/range {v23 .. v24}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    :cond_539
    move v10, v11

    .line 6879
    goto/16 :goto_3a

    .line 6882
    :cond_53c
    const/16 v23, -0x1

    move/from16 v0, v23

    if-eq v11, v0, :cond_58d

    const/16 v23, 0x3

    move/from16 v0, v23

    if-eq v11, v0, :cond_58d

    .line 6886
    const/16 v23, -0x1

    move/from16 v0, v23

    if-eq v10, v0, :cond_560

    const/16 v23, 0xa

    move/from16 v0, v23

    if-eq v11, v0, :cond_3a

    const/16 v23, 0x4

    move/from16 v0, v23

    if-eq v11, v0, :cond_3a

    const/16 v23, 0x2

    move/from16 v0, v23

    if-eq v11, v0, :cond_3a

    .line 6894
    :cond_560
    sget-boolean v23, DEBUG_ORIENTATION:Z

    if-eqz v23, :cond_58a

    const-string v23, "WindowManager"

    new-instance v24, Ljava/lang/StringBuilder;

    invoke-direct/range {v24 .. v24}, Ljava/lang/StringBuilder;-><init>()V

    const-string v25, "Done at "

    invoke-virtual/range {v24 .. v25}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v24

    move-object/from16 v0, v24

    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v24

    const-string v25, " -- explicitly set, return "

    invoke-virtual/range {v24 .. v25}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v24

    move-object/from16 v0, v24

    invoke-virtual {v0, v11}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v24

    invoke-virtual/range {v24 .. v24}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v24

    invoke-static/range {v23 .. v24}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    :cond_58a
    move v10, v11

    .line 6896
    goto/16 :goto_3a

    .line 6898
    :cond_58d
    const/16 v23, 0x3

    move/from16 v0, v23

    if-ne v11, v0, :cond_599

    const/16 v23, 0x1

    :goto_595
    or-int v5, v5, v23

    goto/16 :goto_25c

    :cond_599
    const/16 v23, 0x0

    goto :goto_595

    .line 6731
    .end local v3    # "atoken":Lcom/android/server/wm/AppWindowToken;
    .end local v11    # "or":I
    .end local v14    # "requestedOrientation":I
    :cond_59c
    add-int/lit8 v15, v15, -0x1

    goto/16 :goto_1d6

    .line 6925
    .end local v6    # "firstToken":I
    .end local v17    # "tokenNdx":I
    .end local v18    # "tokens":Lcom/android/server/wm/AppTokenList;
    :cond_5a0
    sget-boolean v23, DEBUG_ORIENTATION:Z

    if-eqz v23, :cond_5c2

    const-string v23, "WindowManager"

    new-instance v24, Ljava/lang/StringBuilder;

    invoke-direct/range {v24 .. v24}, Ljava/lang/StringBuilder;-><init>()V

    const-string v25, "No app is requesting an orientation, return "

    invoke-virtual/range {v24 .. v25}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v24

    move-object/from16 v0, p0

    iget v0, v0, mForcedAppOrientation:I

    move/from16 v25, v0

    invoke-virtual/range {v24 .. v25}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v24

    invoke-virtual/range {v24 .. v24}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v24

    invoke-static/range {v23 .. v24}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 6930
    :cond_5c2
    move-object/from16 v0, p0

    iget v10, v0, mForcedAppOrientation:I

    goto/16 :goto_3a
.end method

.method public getPenState()I
    .registers 8

    .prologue
    const/4 v2, -0x1

    .line 10170
    :try_start_1
    iget-object v3, p0, mInputManager:Lcom/android/server/input/InputManagerService;

    const/4 v4, -0x1

    const/16 v5, -0x100

    const/16 v6, 0x13

    invoke-virtual {v3, v4, v5, v6}, Lcom/android/server/input/InputManagerService;->getSwitchState(III)I
    :try_end_b
    .catch Ljava/lang/Exception; {:try_start_1 .. :try_end_b} :catch_14

    move-result v1

    .line 10172
    .local v1, "sw":I
    if-lez v1, :cond_10

    .line 10174
    const/4 v2, 0x0

    .line 10184
    .end local v1    # "sw":I
    :cond_f
    :goto_f
    return v2

    .line 10175
    .restart local v1    # "sw":I
    :cond_10
    if-nez v1, :cond_f

    .line 10177
    const/4 v2, 0x1

    goto :goto_f

    .line 10182
    .end local v1    # "sw":I
    :catch_14
    move-exception v0

    .line 10183
    .local v0, "e":Ljava/lang/Exception;
    const-string v3, "WindowManager"

    const-string/jumbo v4, "getPenState(). Can\'t get PenState!"

    invoke-static {v3, v4}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_f
.end method

.method public getPendingAppTransition()I
    .registers 2

    .prologue
    .line 7773
    const/4 v0, 0x0

    invoke-virtual {p0, v0}, getPendingAppTransition(I)I

    move-result v0

    return v0
.end method

.method public getPendingAppTransition(I)I
    .registers 3
    .param p1, "displayId"    # I

    .prologue
    .line 7781
    iget-object v0, p0, mAppTransition:Lcom/android/server/wm/AppTransition;

    invoke-virtual {v0}, Lcom/android/server/wm/AppTransition;->getAppTransition()I

    move-result v0

    return v0
.end method

.method getPersonaManagerLocked()Lcom/android/server/pm/PersonaManagerService;
    .registers 3

    .prologue
    .line 18365
    iget-object v1, p0, mPersonaManager:Lcom/android/server/pm/PersonaManagerService;

    if-nez v1, :cond_13

    .line 18366
    const-string/jumbo v1, "persona"

    invoke-static {v1}, Landroid/os/ServiceManager;->getService(Ljava/lang/String;)Landroid/os/IBinder;

    move-result-object v0

    .line 18367
    .local v0, "b":Landroid/os/IBinder;
    invoke-static {v0}, Landroid/os/IPersonaManager$Stub;->asInterface(Landroid/os/IBinder;)Landroid/os/IPersonaManager;

    move-result-object v1

    check-cast v1, Lcom/android/server/pm/PersonaManagerService;

    iput-object v1, p0, mPersonaManager:Lcom/android/server/pm/PersonaManagerService;

    .line 18369
    .end local v0    # "b":Landroid/os/IBinder;
    :cond_13
    iget-object v1, p0, mPersonaManager:Lcom/android/server/pm/PersonaManagerService;

    return-object v1
.end method

.method public getPreferredOptionsPanelGravity()I
    .registers 9

    .prologue
    const v4, 0x800053

    const/16 v3, 0x55

    const/16 v2, 0x51

    .line 11973
    iget-object v5, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v5

    .line 11974
    :try_start_a
    invoke-virtual {p0}, getRotation()I

    move-result v1

    .line 11977
    .local v1, "rotation":I
    invoke-virtual {p0}, getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v0

    .line 11978
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    iget v6, v0, Lcom/android/server/wm/DisplayContent;->mInitialDisplayWidth:I

    iget v7, v0, Lcom/android/server/wm/DisplayContent;->mInitialDisplayHeight:I

    if-ge v6, v7, :cond_28

    .line 11980
    packed-switch v1, :pswitch_data_36

    .line 11983
    monitor-exit v5

    .line 12003
    :goto_1c
    return v2

    .line 11985
    :pswitch_1d
    monitor-exit v5

    move v2, v3

    goto :goto_1c

    .line 11987
    :pswitch_20
    monitor-exit v5

    goto :goto_1c

    .line 12005
    .end local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v1    # "rotation":I
    :catchall_22
    move-exception v2

    monitor-exit v5
    :try_end_24
    .catchall {:try_start_a .. :try_end_24} :catchall_22

    throw v2

    .line 11989
    .restart local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .restart local v1    # "rotation":I
    :pswitch_25
    :try_start_25
    monitor-exit v5

    move v2, v4

    goto :goto_1c

    .line 11994
    :cond_28
    packed-switch v1, :pswitch_data_40

    .line 11997
    monitor-exit v5

    move v2, v3

    goto :goto_1c

    .line 11999
    :pswitch_2e
    monitor-exit v5

    goto :goto_1c

    .line 12001
    :pswitch_30
    monitor-exit v5

    move v2, v4

    goto :goto_1c

    .line 12003
    :pswitch_33
    monitor-exit v5
    :try_end_34
    .catchall {:try_start_25 .. :try_end_34} :catchall_22

    goto :goto_1c

    .line 11980
    nop

    :pswitch_data_36
    .packed-switch 0x1
        :pswitch_1d
        :pswitch_20
        :pswitch_25
    .end packed-switch

    .line 11994
    :pswitch_data_40
    .packed-switch 0x1
        :pswitch_2e
        :pswitch_30
        :pswitch_33
    .end packed-switch
.end method

.method public getPreferredOptionsPanelGravityTablet()I
    .registers 9

    .prologue
    const v4, 0x800053

    const/16 v3, 0x55

    const/16 v2, 0x51

    .line 12027
    iget-object v5, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v5

    .line 12028
    :try_start_a
    invoke-virtual {p0}, getRotation()I

    move-result v1

    .line 12031
    .local v1, "rotation":I
    invoke-virtual {p0}, getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v0

    .line 12032
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    iget v6, v0, Lcom/android/server/wm/DisplayContent;->mInitialDisplayWidth:I

    iget v7, v0, Lcom/android/server/wm/DisplayContent;->mInitialDisplayHeight:I

    if-ge v6, v7, :cond_28

    .line 12034
    packed-switch v1, :pswitch_data_36

    .line 12037
    monitor-exit v5

    .line 12056
    :goto_1c
    return v2

    .line 12039
    :pswitch_1d
    monitor-exit v5

    move v2, v3

    goto :goto_1c

    .line 12041
    :pswitch_20
    monitor-exit v5

    goto :goto_1c

    .line 12059
    .end local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v1    # "rotation":I
    :catchall_22
    move-exception v2

    monitor-exit v5
    :try_end_24
    .catchall {:try_start_a .. :try_end_24} :catchall_22

    throw v2

    .line 12043
    .restart local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .restart local v1    # "rotation":I
    :pswitch_25
    :try_start_25
    monitor-exit v5

    move v2, v4

    goto :goto_1c

    .line 12047
    :cond_28
    packed-switch v1, :pswitch_data_40

    .line 12050
    monitor-exit v5

    goto :goto_1c

    .line 12052
    :pswitch_2d
    monitor-exit v5

    move v2, v3

    goto :goto_1c

    .line 12054
    :pswitch_30
    monitor-exit v5

    goto :goto_1c

    .line 12056
    :pswitch_32
    monitor-exit v5
    :try_end_33
    .catchall {:try_start_25 .. :try_end_33} :catchall_22

    move v2, v4

    goto :goto_1c

    .line 12034
    nop

    :pswitch_data_36
    .packed-switch 0x1
        :pswitch_1d
        :pswitch_20
        :pswitch_25
    .end packed-switch

    .line 12047
    :pswitch_data_40
    .packed-switch 0x1
        :pswitch_2d
        :pswitch_30
        :pswitch_32
    .end packed-switch
.end method

.method public getRotation()I
    .registers 2

    .prologue
    .line 11878
    const/4 v0, 0x0

    invoke-virtual {p0, v0}, getRotation(I)I

    move-result v0

    return v0
.end method

.method public getRotation(I)I
    .registers 3
    .param p1, "nDisplayId"    # I

    .prologue
    .line 11888
    iget v0, p0, mRotation:I

    return v0
.end method

.method public getStackBound(I)Landroid/graphics/Rect;
    .registers 6
    .param p1, "stackId"    # I

    .prologue
    .line 21450
    iget-object v3, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v3

    .line 21451
    :try_start_3
    iget-object v2, p0, mStackIdToStack:Landroid/util/SparseArray;

    invoke-virtual {v2, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/wm/TaskStack;

    .line 21452
    .local v1, "taskStack":Lcom/android/server/wm/TaskStack;
    if-eqz v1, :cond_17

    .line 21453
    new-instance v0, Landroid/graphics/Rect;

    invoke-direct {v0}, Landroid/graphics/Rect;-><init>()V

    .line 21454
    .local v0, "bounds":Landroid/graphics/Rect;
    invoke-virtual {v1, v0}, Lcom/android/server/wm/TaskStack;->getBounds(Landroid/graphics/Rect;)V

    .line 21455
    monitor-exit v3

    .line 21458
    .end local v0    # "bounds":Landroid/graphics/Rect;
    :goto_16
    return-object v0

    .line 21457
    :cond_17
    monitor-exit v3

    .line 21458
    const/4 v0, 0x0

    goto :goto_16

    .line 21457
    .end local v1    # "taskStack":Lcom/android/server/wm/TaskStack;
    :catchall_1a
    move-exception v2

    monitor-exit v3
    :try_end_1c
    .catchall {:try_start_3 .. :try_end_1c} :catchall_1a

    throw v2
.end method

.method public getStackBounds(ILandroid/graphics/Rect;)V
    .registers 6
    .param p1, "stackId"    # I
    .param p2, "bounds"    # Landroid/graphics/Rect;

    .prologue
    .line 9685
    iget-object v2, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v2

    .line 9686
    :try_start_3
    iget-object v1, p0, mStackIdToStack:Landroid/util/SparseArray;

    invoke-virtual {v1, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/wm/TaskStack;

    .line 9687
    .local v0, "stack":Lcom/android/server/wm/TaskStack;
    if-eqz v0, :cond_12

    .line 9688
    invoke-virtual {v0, p2}, Lcom/android/server/wm/TaskStack;->getBounds(Landroid/graphics/Rect;)V

    .line 9689
    monitor-exit v2

    .line 9693
    :goto_11
    return-void

    .line 9691
    :cond_12
    monitor-exit v2
    :try_end_13
    .catchall {:try_start_3 .. :try_end_13} :catchall_17

    .line 9692
    invoke-virtual {p2}, Landroid/graphics/Rect;->setEmpty()V

    goto :goto_11

    .line 9691
    .end local v0    # "stack":Lcom/android/server/wm/TaskStack;
    :catchall_17
    move-exception v1

    :try_start_18
    monitor-exit v2
    :try_end_19
    .catchall {:try_start_18 .. :try_end_19} :catchall_17

    throw v1
.end method

.method public getStackId(I)I
    .registers 5
    .param p1, "stackId"    # I

    .prologue
    .line 21729
    iget-object v2, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v2

    .line 21730
    :try_start_3
    iget-object v1, p0, mStackIdToStack:Landroid/util/SparseArray;

    invoke-virtual {v1, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/wm/TaskStack;

    .line 21731
    .local v0, "stack":Lcom/android/server/wm/TaskStack;
    if-eqz v0, :cond_11

    .line 21732
    iget v1, v0, Lcom/android/server/wm/TaskStack;->mStackId:I

    monitor-exit v2

    .line 21735
    :goto_10
    return v1

    .line 21734
    :cond_11
    monitor-exit v2

    .line 21735
    const/4 v1, 0x0

    goto :goto_10

    .line 21734
    .end local v0    # "stack":Lcom/android/server/wm/TaskStack;
    :catchall_14
    move-exception v1

    monitor-exit v2
    :try_end_16
    .catchall {:try_start_3 .. :try_end_16} :catchall_14

    throw v1
.end method

.method public getStackIdWithBounds(Landroid/graphics/Rect;)I
    .registers 7
    .param p1, "bounds"    # Landroid/graphics/Rect;

    .prologue
    .line 9698
    new-instance v2, Landroid/graphics/Rect;

    invoke-direct {v2}, Landroid/graphics/Rect;-><init>()V

    .line 9699
    .local v2, "stackBounds":Landroid/graphics/Rect;
    iget-object v4, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v4

    .line 9700
    :try_start_8
    iget-object v3, p0, mStackIdToStack:Landroid/util/SparseArray;

    invoke-virtual {v3}, Landroid/util/SparseArray;->size()I

    move-result v3

    add-int/lit8 v0, v3, -0x1

    .local v0, "i":I
    :goto_10
    if-ltz v0, :cond_2e

    .line 9701
    iget-object v3, p0, mStackIdToStack:Landroid/util/SparseArray;

    invoke-virtual {v3, v0}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/wm/TaskStack;

    .line 9702
    .local v1, "stack":Lcom/android/server/wm/TaskStack;
    iget v3, v1, Lcom/android/server/wm/TaskStack;->mStackId:I

    if-eqz v3, :cond_2b

    .line 9703
    invoke-virtual {v1, v2}, Lcom/android/server/wm/TaskStack;->getBounds(Landroid/graphics/Rect;)V

    .line 9704
    invoke-virtual {v2, p1}, Landroid/graphics/Rect;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-eqz v3, :cond_2b

    .line 9705
    iget v3, v1, Lcom/android/server/wm/TaskStack;->mStackId:I

    monitor-exit v4

    .line 9710
    .end local v1    # "stack":Lcom/android/server/wm/TaskStack;
    :goto_2a
    return v3

    .line 9700
    .restart local v1    # "stack":Lcom/android/server/wm/TaskStack;
    :cond_2b
    add-int/lit8 v0, v0, -0x1

    goto :goto_10

    .line 9709
    .end local v1    # "stack":Lcom/android/server/wm/TaskStack;
    :cond_2e
    monitor-exit v4

    .line 9710
    const/4 v3, -0x1

    goto :goto_2a

    .line 9709
    .end local v0    # "i":I
    :catchall_31
    move-exception v3

    monitor-exit v4
    :try_end_33
    .catchall {:try_start_8 .. :try_end_33} :catchall_31

    throw v3
.end method

.method public getStackOriginalBound(ILandroid/os/IBinder;)Landroid/graphics/Rect;
    .registers 6
    .param p1, "stackId"    # I
    .param p2, "activityToken"    # Landroid/os/IBinder;

    .prologue
    .line 21485
    iget-object v2, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v2

    .line 21486
    :try_start_3
    iget-object v1, p0, mStackIdToStack:Landroid/util/SparseArray;

    invoke-virtual {v1, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/wm/TaskStack;

    .line 21487
    .local v0, "taskStack":Lcom/android/server/wm/TaskStack;
    if-eqz v0, :cond_13

    .line 21488
    invoke-virtual {v0, p2}, Lcom/android/server/wm/TaskStack;->getStackOriginalBound(Landroid/os/IBinder;)Landroid/graphics/Rect;

    move-result-object v1

    monitor-exit v2

    .line 21491
    :goto_12
    return-object v1

    .line 21490
    :cond_13
    monitor-exit v2

    .line 21491
    const/4 v1, 0x0

    goto :goto_12

    .line 21490
    .end local v0    # "taskStack":Lcom/android/server/wm/TaskStack;
    :catchall_16
    move-exception v1

    monitor-exit v2
    :try_end_18
    .catchall {:try_start_3 .. :try_end_18} :catchall_16

    throw v1
.end method

.method public getStackPosition(ILandroid/os/IBinder;)Landroid/graphics/Point;
    .registers 9
    .param p1, "stackId"    # I
    .param p2, "activityToken"    # Landroid/os/IBinder;

    .prologue
    .line 21469
    iget-object v3, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v3

    .line 21470
    :try_start_3
    iget-object v2, p0, mStackIdToStack:Landroid/util/SparseArray;

    invoke-virtual {v2, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/wm/TaskStack;

    .line 21471
    .local v1, "taskStack":Lcom/android/server/wm/TaskStack;
    if-eqz v1, :cond_20

    .line 21472
    new-instance v0, Landroid/graphics/Rect;

    invoke-direct {v0}, Landroid/graphics/Rect;-><init>()V

    .line 21473
    .local v0, "bounds":Landroid/graphics/Rect;
    invoke-virtual {v1, v0}, Lcom/android/server/wm/TaskStack;->getShownBounds(Landroid/graphics/Rect;)V

    .line 21474
    new-instance v2, Landroid/graphics/Point;

    iget v4, v0, Landroid/graphics/Rect;->left:I

    iget v5, v0, Landroid/graphics/Rect;->top:I

    invoke-direct {v2, v4, v5}, Landroid/graphics/Point;-><init>(II)V

    monitor-exit v3

    .line 21477
    .end local v0    # "bounds":Landroid/graphics/Rect;
    :goto_1f
    return-object v2

    .line 21476
    :cond_20
    monitor-exit v3

    .line 21477
    const/4 v2, 0x0

    goto :goto_1f

    .line 21476
    .end local v1    # "taskStack":Lcom/android/server/wm/TaskStack;
    :catchall_23
    move-exception v2

    monitor-exit v3
    :try_end_25
    .catchall {:try_start_3 .. :try_end_25} :catchall_23

    throw v2
.end method

.method getTokenWindowsOnDisplay(Lcom/android/server/wm/WindowToken;Lcom/android/server/wm/DisplayContent;)Lcom/android/server/wm/WindowList;
    .registers 8
    .param p1, "token"    # Lcom/android/server/wm/WindowToken;
    .param p2, "displayContent"    # Lcom/android/server/wm/DisplayContent;

    .prologue
    .line 1912
    new-instance v3, Lcom/android/server/wm/WindowList;

    invoke-direct {v3}, Lcom/android/server/wm/WindowList;-><init>()V

    .line 1913
    .local v3, "windowList":Lcom/android/server/wm/WindowList;
    iget-object v4, p1, Lcom/android/server/wm/WindowToken;->windows:Lcom/android/server/wm/WindowList;

    invoke-virtual {v4}, Lcom/android/server/wm/WindowList;->size()I

    move-result v0

    .line 1914
    .local v0, "count":I
    const/4 v1, 0x0

    .local v1, "i":I
    :goto_c
    if-ge v1, v0, :cond_22

    .line 1915
    iget-object v4, p1, Lcom/android/server/wm/WindowToken;->windows:Lcom/android/server/wm/WindowList;

    invoke-virtual {v4, v1}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/wm/WindowState;

    .line 1916
    .local v2, "win":Lcom/android/server/wm/WindowState;
    invoke-virtual {v2}, Lcom/android/server/wm/WindowState;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    move-result-object v4

    if-ne v4, p2, :cond_1f

    .line 1917
    invoke-virtual {v3, v2}, Lcom/android/server/wm/WindowList;->add(Ljava/lang/Object;)Z

    .line 1914
    :cond_1f
    add-int/lit8 v1, v1, 0x1

    goto :goto_c

    .line 1920
    .end local v2    # "win":Lcom/android/server/wm/WindowState;
    :cond_22
    return-object v3
.end method

.method getTopAppWindowTokenInUniversalTaskHistoryLocked()Lcom/android/server/wm/AppWindowToken;
    .registers 10

    .prologue
    .line 14966
    iget-object v3, p0, mUniversalTaskHistory:Ljava/util/ArrayList;

    .line 14968
    .local v3, "tasks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/Task;>;"
    invoke-virtual {v3}, Ljava/util/ArrayList;->size()I

    move-result v6

    add-int/lit8 v2, v6, -0x1

    .local v2, "taskNdx":I
    :goto_8
    if-ltz v2, :cond_51

    .line 14969
    invoke-virtual {v3, v2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Lcom/android/server/wm/Task;

    iget-object v5, v6, Lcom/android/server/wm/Task;->mAppTokens:Lcom/android/server/wm/AppTokenList;

    .line 14970
    .local v5, "tokens":Lcom/android/server/wm/AppTokenList;
    invoke-virtual {v5}, Lcom/android/server/wm/AppTokenList;->size()I

    move-result v6

    add-int/lit8 v1, v6, -0x1

    .line 14971
    .local v1, "firstToken":I
    move v4, v1

    .local v4, "tokenNdx":I
    :goto_19
    if-ltz v4, :cond_4e

    .line 14972
    invoke-virtual {v5, v4}, Lcom/android/server/wm/AppTokenList;->get(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/wm/AppWindowToken;

    .line 14976
    .local v0, "atoken":Lcom/android/server/wm/AppWindowToken;
    iget-boolean v6, v0, Lcom/android/server/wm/AppWindowToken;->hidden:Z

    if-nez v6, :cond_52

    iget-boolean v6, v0, Lcom/android/server/wm/AppWindowToken;->hiddenRequested:Z

    if-eqz v6, :cond_52

    .line 14977
    sget-boolean v6, DEBUG_ORIENTATION:Z

    if-eqz v6, :cond_4b

    const-string v6, "WindowManager"

    new-instance v7, Ljava/lang/StringBuilder;

    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    const-string v8, "Skipping "

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v7

    const-string v8, " -- going to hide"

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v7

    invoke-static {v6, v7}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 14971
    :cond_4b
    add-int/lit8 v4, v4, -0x1

    goto :goto_19

    .line 14968
    .end local v0    # "atoken":Lcom/android/server/wm/AppWindowToken;
    :cond_4e
    add-int/lit8 v2, v2, -0x1

    goto :goto_8

    .line 14984
    .end local v1    # "firstToken":I
    .end local v4    # "tokenNdx":I
    .end local v5    # "tokens":Lcom/android/server/wm/AppTokenList;
    :cond_51
    const/4 v0, 0x0

    :cond_52
    return-object v0
.end method

.method public getTransitionAnimationScaleLocked()F
    .registers 2

    .prologue
    .line 10091
    iget-boolean v0, p0, mAnimationsDisabled:Z

    if-eqz v0, :cond_6

    const/4 v0, 0x0

    :goto_5
    return v0

    :cond_6
    iget v0, p0, mTransitionAnimationScaleSetting:F

    goto :goto_5
.end method

.method public getWindowAnimationScaleLocked()F
    .registers 2

    .prologue
    .line 10087
    iget-boolean v0, p0, mAnimationsDisabled:Z

    if-eqz v0, :cond_6

    const/4 v0, 0x0

    :goto_5
    return v0

    :cond_6
    iget v0, p0, mWindowAnimationScaleSetting:F

    goto :goto_5
.end method

.method public getWindowContentFrame(Lcom/android/server/wm/Session;Landroid/view/IWindow;Landroid/graphics/Rect;)V
    .registers 13
    .param p1, "session"    # Lcom/android/server/wm/Session;
    .param p2, "client"    # Landroid/view/IWindow;
    .param p3, "outContentFrame"    # Landroid/graphics/Rect;

    .prologue
    const/4 v8, 0x2

    .line 20841
    iget-object v6, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v6

    .line 20842
    const/4 v5, 0x0

    :try_start_5
    invoke-virtual {p0, p1, p2, v5}, windowForClientLocked(Lcom/android/server/wm/Session;Landroid/view/IWindow;Z)Lcom/android/server/wm/WindowState;

    move-result-object v4

    .line 20843
    .local v4, "win":Lcom/android/server/wm/WindowState;
    if-nez v4, :cond_10

    .line 20844
    invoke-virtual {p3}, Landroid/graphics/Rect;->setEmpty()V

    .line 20845
    monitor-exit v6

    .line 20869
    :goto_f
    return-void

    .line 20847
    :cond_10
    iget-object v5, v4, Lcom/android/server/wm/WindowState;->mContentFrame:Landroid/graphics/Rect;

    invoke-virtual {p3, v5}, Landroid/graphics/Rect;->set(Landroid/graphics/Rect;)V

    .line 20849
    invoke-virtual {v4}, Lcom/android/server/wm/WindowState;->getMultiWindowStyleLw()Lcom/samsung/android/multiwindow/MultiWindowStyle;

    move-result-object v5

    invoke-virtual {v5}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->getType()I

    move-result v5

    if-ne v5, v8, :cond_62

    .line 20850
    iget-object v5, v4, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    if-eqz v5, :cond_67

    invoke-virtual {v4}, Lcom/android/server/wm/WindowState;->getStack()Lcom/android/server/wm/TaskStack;

    move-result-object v2

    .line 20851
    .local v2, "stack":Lcom/android/server/wm/TaskStack;
    :goto_27
    if-eqz v2, :cond_62

    .line 20852
    new-instance v0, Landroid/graphics/Rect;

    invoke-direct {v0}, Landroid/graphics/Rect;-><init>()V

    .line 20853
    .local v0, "bounds":Landroid/graphics/Rect;
    invoke-virtual {v2, v0}, Lcom/android/server/wm/TaskStack;->getBounds(Landroid/graphics/Rect;)V

    .line 20854
    iget v5, v0, Landroid/graphics/Rect;->left:I

    neg-int v5, v5

    iget v7, v0, Landroid/graphics/Rect;->top:I

    neg-int v7, v7

    invoke-virtual {p3, v5, v7}, Landroid/graphics/Rect;->offset(II)V

    .line 20855
    iget-object v5, v4, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v5, v5, Landroid/view/WindowManager$LayoutParams;->type:I

    const/16 v7, 0x62

    if-ne v5, v7, :cond_62

    .line 20856
    invoke-virtual {p0}, getRotation()I

    move-result v5

    if-eqz v5, :cond_4e

    invoke-virtual {p0}, getRotation()I

    move-result v5

    if-ne v5, v8, :cond_69

    .line 20857
    :cond_4e
    iget v5, p3, Landroid/graphics/Rect;->right:I

    iget v7, p3, Landroid/graphics/Rect;->left:I

    sub-int v3, v5, v7

    .line 20858
    .local v3, "width":I
    iget v5, p3, Landroid/graphics/Rect;->left:I

    int-to-float v5, v5

    iget v7, v4, Lcom/android/server/wm/WindowState;->mHScale:F

    div-float/2addr v5, v7

    float-to-int v5, v5

    iput v5, p3, Landroid/graphics/Rect;->left:I

    .line 20859
    iget v5, p3, Landroid/graphics/Rect;->left:I

    add-int/2addr v5, v3

    iput v5, p3, Landroid/graphics/Rect;->right:I

    .line 20868
    .end local v0    # "bounds":Landroid/graphics/Rect;
    .end local v2    # "stack":Lcom/android/server/wm/TaskStack;
    .end local v3    # "width":I
    :cond_62
    :goto_62
    monitor-exit v6

    goto :goto_f

    .end local v4    # "win":Lcom/android/server/wm/WindowState;
    :catchall_64
    move-exception v5

    monitor-exit v6
    :try_end_66
    .catchall {:try_start_5 .. :try_end_66} :catchall_64

    throw v5

    .line 20850
    .restart local v4    # "win":Lcom/android/server/wm/WindowState;
    :cond_67
    const/4 v2, 0x0

    goto :goto_27

    .line 20861
    .restart local v0    # "bounds":Landroid/graphics/Rect;
    .restart local v2    # "stack":Lcom/android/server/wm/TaskStack;
    :cond_69
    :try_start_69
    iget v5, p3, Landroid/graphics/Rect;->bottom:I

    iget v7, p3, Landroid/graphics/Rect;->top:I

    sub-int v1, v5, v7

    .line 20862
    .local v1, "height":I
    iget v5, p3, Landroid/graphics/Rect;->top:I

    int-to-float v5, v5

    iget v7, v4, Lcom/android/server/wm/WindowState;->mVScale:F

    div-float/2addr v5, v7

    float-to-int v5, v5

    iput v5, p3, Landroid/graphics/Rect;->top:I

    .line 20863
    iget v5, p3, Landroid/graphics/Rect;->top:I

    add-int/2addr v5, v1

    iput v5, p3, Landroid/graphics/Rect;->bottom:I
    :try_end_7d
    .catchall {:try_start_69 .. :try_end_7d} :catchall_64

    goto :goto_62
.end method

.method public getWindowContentFrameStats(Landroid/os/IBinder;)Landroid/view/WindowContentFrameStats;
    .registers 8
    .param p1, "token"    # Landroid/os/IBinder;

    .prologue
    const/4 v3, 0x0

    .line 19281
    const-string v4, "android.permission.FRAME_STATS"

    const-string/jumbo v5, "getWindowContentFrameStats()"

    invoke-virtual {p0, v4, v5}, checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v4

    if-nez v4, :cond_14

    .line 19283
    new-instance v3, Ljava/lang/SecurityException;

    const-string v4, "Requires FRAME_STATS permission"

    invoke-direct {v3, v4}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v3

    .line 19285
    :cond_14
    iget-object v4, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v4

    .line 19286
    :try_start_17
    iget-object v5, p0, mWindowMap:Ljava/util/HashMap;

    invoke-virtual {v5, p1}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/wm/WindowState;

    .line 19287
    .local v2, "windowState":Lcom/android/server/wm/WindowState;
    if-nez v2, :cond_24

    .line 19288
    monitor-exit v4

    move-object v0, v3

    .line 19301
    :goto_23
    return-object v0

    .line 19290
    :cond_24
    iget-object v5, v2, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    iget-object v1, v5, Lcom/android/server/wm/WindowStateAnimator;->mSurfaceControl:Landroid/view/SurfaceControl;

    .line 19291
    .local v1, "surfaceControl":Landroid/view/SurfaceControl;
    if-nez v1, :cond_2d

    .line 19292
    monitor-exit v4

    move-object v0, v3

    goto :goto_23

    .line 19294
    :cond_2d
    iget-object v5, p0, mTempWindowRenderStats:Landroid/view/WindowContentFrameStats;

    if-nez v5, :cond_38

    .line 19295
    new-instance v5, Landroid/view/WindowContentFrameStats;

    invoke-direct {v5}, Landroid/view/WindowContentFrameStats;-><init>()V

    iput-object v5, p0, mTempWindowRenderStats:Landroid/view/WindowContentFrameStats;

    .line 19297
    :cond_38
    iget-object v0, p0, mTempWindowRenderStats:Landroid/view/WindowContentFrameStats;

    .line 19298
    .local v0, "stats":Landroid/view/WindowContentFrameStats;
    invoke-virtual {v1, v0}, Landroid/view/SurfaceControl;->getContentFrameStats(Landroid/view/WindowContentFrameStats;)Z

    move-result v5

    if-nez v5, :cond_43

    .line 19299
    monitor-exit v4

    move-object v0, v3

    goto :goto_23

    .line 19301
    :cond_43
    monitor-exit v4

    goto :goto_23

    .line 19302
    .end local v0    # "stats":Landroid/view/WindowContentFrameStats;
    .end local v1    # "surfaceControl":Landroid/view/SurfaceControl;
    .end local v2    # "windowState":Lcom/android/server/wm/WindowState;
    :catchall_45
    move-exception v3

    monitor-exit v4
    :try_end_47
    .catchall {:try_start_17 .. :try_end_47} :catchall_45

    throw v3
.end method

.method public getWindowDisplayFrame(Lcom/android/server/wm/Session;Landroid/view/IWindow;Landroid/graphics/Rect;)V
    .registers 7
    .param p1, "session"    # Lcom/android/server/wm/Session;
    .param p2, "client"    # Landroid/view/IWindow;
    .param p3, "outDisplayFrame"    # Landroid/graphics/Rect;

    .prologue
    .line 5041
    iget-object v2, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v2

    .line 5042
    const/4 v1, 0x0

    :try_start_4
    invoke-virtual {p0, p1, p2, v1}, windowForClientLocked(Lcom/android/server/wm/Session;Landroid/view/IWindow;Z)Lcom/android/server/wm/WindowState;

    move-result-object v0

    .line 5043
    .local v0, "win":Lcom/android/server/wm/WindowState;
    if-nez v0, :cond_f

    .line 5044
    invoke-virtual {p3}, Landroid/graphics/Rect;->setEmpty()V

    .line 5045
    monitor-exit v2

    .line 5055
    :goto_e
    return-void

    .line 5048
    :cond_f
    invoke-virtual {v0}, Lcom/android/server/wm/WindowState;->getMultiWindowStyleLw()Lcom/samsung/android/multiwindow/MultiWindowStyle;

    move-result-object v1

    invoke-virtual {v1}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->isNormal()Z

    move-result v1

    if-nez v1, :cond_33

    invoke-virtual {v0}, Lcom/android/server/wm/WindowState;->getMultiWindowStyleLw()Lcom/samsung/android/multiwindow/MultiWindowStyle;

    move-result-object v1

    invoke-virtual {v1}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->isSplit()Z

    move-result v1

    if-eqz v1, :cond_29

    invoke-virtual {v0}, Lcom/android/server/wm/WindowState;->isFloating()Z

    move-result v1

    if-nez v1, :cond_33

    .line 5050
    :cond_29
    iget-object v1, v0, Lcom/android/server/wm/WindowState;->mContainingFrame:Landroid/graphics/Rect;

    invoke-virtual {p3, v1}, Landroid/graphics/Rect;->set(Landroid/graphics/Rect;)V

    .line 5054
    :goto_2e
    monitor-exit v2

    goto :goto_e

    .end local v0    # "win":Lcom/android/server/wm/WindowState;
    :catchall_30
    move-exception v1

    monitor-exit v2
    :try_end_32
    .catchall {:try_start_4 .. :try_end_32} :catchall_30

    throw v1

    .line 5053
    .restart local v0    # "win":Lcom/android/server/wm/WindowState;
    :cond_33
    :try_start_33
    iget-object v1, v0, Lcom/android/server/wm/WindowState;->mDisplayFrame:Landroid/graphics/Rect;

    invoke-virtual {p3, v1}, Landroid/graphics/Rect;->set(Landroid/graphics/Rect;)V
    :try_end_38
    .catchall {:try_start_33 .. :try_end_38} :catchall_30

    goto :goto_2e
.end method

.method public getWindowId(Landroid/os/IBinder;)Landroid/view/IWindowId;
    .registers 5
    .param p1, "token"    # Landroid/os/IBinder;

    .prologue
    .line 5176
    iget-object v2, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v2

    .line 5177
    :try_start_3
    iget-object v1, p0, mWindowMap:Ljava/util/HashMap;

    invoke-virtual {v1, p1}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/wm/WindowState;

    .line 5178
    .local v0, "window":Lcom/android/server/wm/WindowState;
    if-eqz v0, :cond_11

    iget-object v1, v0, Lcom/android/server/wm/WindowState;->mWindowId:Landroid/view/IWindowId;

    :goto_f
    monitor-exit v2

    return-object v1

    :cond_11
    const/4 v1, 0x0

    goto :goto_f

    .line 5179
    .end local v0    # "window":Lcom/android/server/wm/WindowState;
    :catchall_13
    move-exception v1

    monitor-exit v2
    :try_end_15
    .catchall {:try_start_3 .. :try_end_15} :catchall_13

    throw v1
.end method

.method public getWindowListLocked(I)Lcom/android/server/wm/WindowList;
    .registers 4
    .param p1, "displayId"    # I

    .prologue
    .line 20125
    invoke-virtual {p0, p1}, getDisplayContentLocked(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v0

    .line 20126
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-eqz v0, :cond_b

    invoke-virtual {v0}, Lcom/android/server/wm/DisplayContent;->getWindowList()Lcom/android/server/wm/WindowList;

    move-result-object v1

    :goto_a
    return-object v1

    :cond_b
    const/4 v1, 0x0

    goto :goto_a
.end method

.method public getWindowListLocked(Landroid/view/Display;)Lcom/android/server/wm/WindowList;
    .registers 3
    .param p1, "display"    # Landroid/view/Display;

    .prologue
    .line 20116
    invoke-virtual {p1}, Landroid/view/Display;->getDisplayId()I

    move-result v0

    invoke-virtual {p0, v0}, getWindowListLocked(I)Lcom/android/server/wm/WindowList;

    move-result-object v0

    return-object v0
.end method

.method public getWindowManagerLock()Ljava/lang/Object;
    .registers 2

    .prologue
    .line 20187
    iget-object v0, p0, mWindowMap:Ljava/util/HashMap;

    return-object v0
.end method

.method public handleAppTransitionReadyLocked(Lcom/android/server/wm/WindowList;)I
    .registers 3
    .param p1, "windows"    # Lcom/android/server/wm/WindowList;

    .prologue
    .line 15790
    const/4 v0, 0x0

    invoke-virtual {p0, p1, v0}, handleAppTransitionReadyLocked(Lcom/android/server/wm/WindowList;I)I

    move-result v0

    return v0
.end method

.method public handleAppTransitionReadyLocked(Lcom/android/server/wm/WindowList;I)I
    .registers 83
    .param p1, "windows"    # Lcom/android/server/wm/WindowList;
    .param p2, "displayId"    # I

    .prologue
    .line 15826
    move-object/from16 v0, p0

    iget-boolean v0, v0, mStartingIconInTransition:Z

    move/from16 v57, v0

    .line 15827
    .local v57, "mStartingIconInTransition":Z
    move-object/from16 v0, p0

    iget-boolean v0, v0, mSkipAppTransitionAnimation:Z

    move/from16 v56, v0

    .line 15828
    .local v56, "mSkipAppTransitionAnimation":Z
    move-object/from16 v0, p0

    iget-object v0, v0, mAppTransition:Lcom/android/server/wm/AppTransition;

    move-object/from16 v51, v0

    .line 15829
    .local v51, "mAppTransition":Lcom/android/server/wm/AppTransition;
    move-object/from16 v0, p0

    iget-object v0, v0, mOpeningApps:Landroid/util/ArraySet;

    move-object/from16 v55, v0

    .line 15830
    .local v55, "mOpeningApps":Landroid/util/ArraySet;, "Landroid/util/ArraySet<Lcom/android/server/wm/AppWindowToken;>;"
    move-object/from16 v0, p0

    iget-object v0, v0, mClosingApps:Landroid/util/ArraySet;

    move-object/from16 v52, v0

    .line 15832
    .local v52, "mClosingApps":Landroid/util/ArraySet;, "Landroid/util/ArraySet<Lcom/android/server/wm/AppWindowToken;>;"
    move-object/from16 v0, p0

    iget-object v0, v0, mWallpaperTokens:Ljava/util/ArrayList;

    move-object/from16 v60, v0

    .line 15833
    .local v60, "mWallpaperTokens":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/WindowToken;>;"
    move-object/from16 v0, p0

    iget-object v0, v0, mWallpaperTarget:Lcom/android/server/wm/WindowState;

    move-object/from16 v59, v0

    .line 15834
    .local v59, "mWallpaperTarget":Lcom/android/server/wm/WindowState;
    move-object/from16 v0, p0

    iget-object v0, v0, mLowerWallpaperTarget:Lcom/android/server/wm/WindowState;

    move-object/from16 v54, v0

    .line 15835
    .local v54, "mLowerWallpaperTarget":Lcom/android/server/wm/WindowState;
    move-object/from16 v0, p0

    iget-object v0, v0, mUpperWallpaperTarget:Lcom/android/server/wm/WindowState;

    move-object/from16 v58, v0

    .line 15836
    .local v58, "mUpperWallpaperTarget":Lcom/android/server/wm/WindowState;
    move-object/from16 v0, p0

    iget-boolean v0, v0, mDisplayFrozen:Z

    move/from16 v53, v0

    .line 15839
    .local v53, "mDisplayFrozen":Z
    const/16 v30, 0x0

    .line 15841
    .local v30, "changes":I
    move-object/from16 v29, v55

    .line 15845
    .local v29, "candidateOpeningApps":Landroid/util/ArraySet;, "Landroid/util/ArraySet<Lcom/android/server/wm/AppWindowToken;>;"
    invoke-virtual/range {v29 .. v29}, Landroid/util/ArraySet;->size()I

    move-result v24

    .line 15847
    .local v24, "appsCount":I
    const/16 v46, 0x1

    .line 15848
    .local v46, "goodToGo":Z
    sget-boolean v4, DEBUG_APP_TRANSITIONS:Z

    if-eqz v4, :cond_84

    const-string v4, "WindowManager"

    new-instance v7, Ljava/lang/StringBuilder;

    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    const-string v9, "Checking "

    invoke-virtual {v7, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    move/from16 v0, v24

    invoke-virtual {v7, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v7

    const-string v9, " opening apps (frozen="

    invoke-virtual {v7, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    move/from16 v0, v53

    invoke-virtual {v7, v0}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v7

    const-string v9, " timeout="

    invoke-virtual {v7, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual/range {v51 .. v51}, Lcom/android/server/wm/AppTransition;->isTimeout()Z

    move-result v9

    invoke-virtual {v7, v9}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v7

    const-string v9, ")..."

    invoke-virtual {v7, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v7

    invoke-static {v4, v7}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 15853
    :cond_84
    sget-boolean v4, Lcom/android/server/wm/DualScreenTransition;->DEBUG_VERBOSE:Z

    if-eqz v4, :cond_111

    .line 15854
    const/16 v42, 0x0

    .local v42, "displayNdx":I
    :goto_8a
    const/4 v4, 0x4

    move/from16 v0, v42

    if-ge v0, v4, :cond_111

    .line 15855
    move-object/from16 v0, p0

    iget-object v4, v0, mOpeningAppsForDisplay:Lcom/samsung/android/multidisplay/common/FallbackArrayList;

    move/from16 v0, v42

    invoke-virtual {v4, v0}, Lcom/samsung/android/multidisplay/common/FallbackArrayList;->get(I)Ljava/lang/Object;

    move-result-object v62

    check-cast v62, Landroid/util/ArraySet;

    .line 15856
    .local v62, "oApps":Landroid/util/ArraySet;, "Landroid/util/ArraySet<Lcom/android/server/wm/AppWindowToken;>;"
    move-object/from16 v0, p0

    iget-object v4, v0, mClosingAppsForDisplay:Lcom/samsung/android/multidisplay/common/FallbackArrayList;

    move/from16 v0, v42

    invoke-virtual {v4, v0}, Lcom/samsung/android/multidisplay/common/FallbackArrayList;->get(I)Ljava/lang/Object;

    move-result-object v28

    check-cast v28, Landroid/util/ArraySet;

    .line 15857
    .local v28, "cApps":Landroid/util/ArraySet;, "Landroid/util/ArraySet<Lcom/android/server/wm/AppWindowToken;>;"
    const/16 v47, 0x0

    .local v47, "i":I
    :goto_a9
    invoke-virtual/range {v62 .. v62}, Landroid/util/ArraySet;->size()I

    move-result v4

    move/from16 v0, v47

    if-ge v0, v4, :cond_da

    .line 15858
    move-object/from16 v0, v62

    move/from16 v1, v47

    invoke-virtual {v0, v1}, Landroid/util/ArraySet;->valueAt(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/android/server/wm/AppWindowToken;

    .line 15859
    .local v5, "wtoken":Lcom/android/server/wm/AppWindowToken;
    sget-boolean v4, DEBUG_APP_TRANSITIONS:Z

    if-eqz v4, :cond_d7

    const-string v4, "WindowManager"

    new-instance v7, Ljava/lang/StringBuilder;

    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    const-string v9, "[DualScreenTransition] Check current opening app="

    invoke-virtual {v7, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v7

    invoke-static {v4, v7}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 15857
    :cond_d7
    add-int/lit8 v47, v47, 0x1

    goto :goto_a9

    .line 15862
    .end local v5    # "wtoken":Lcom/android/server/wm/AppWindowToken;
    :cond_da
    const/16 v47, 0x0

    :goto_dc
    invoke-virtual/range {v28 .. v28}, Landroid/util/ArraySet;->size()I

    move-result v4

    move/from16 v0, v47

    if-ge v0, v4, :cond_10d

    .line 15863
    move-object/from16 v0, v28

    move/from16 v1, v47

    invoke-virtual {v0, v1}, Landroid/util/ArraySet;->valueAt(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/android/server/wm/AppWindowToken;

    .line 15864
    .restart local v5    # "wtoken":Lcom/android/server/wm/AppWindowToken;
    sget-boolean v4, DEBUG_APP_TRANSITIONS:Z

    if-eqz v4, :cond_10a

    const-string v4, "WindowManager"

    new-instance v7, Ljava/lang/StringBuilder;

    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    const-string v9, "[DualScreenTransition] Check current closing app="

    invoke-virtual {v7, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v7

    invoke-static {v4, v7}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 15862
    :cond_10a
    add-int/lit8 v47, v47, 0x1

    goto :goto_dc

    .line 15854
    .end local v5    # "wtoken":Lcom/android/server/wm/AppWindowToken;
    :cond_10d
    add-int/lit8 v42, v42, 0x1

    goto/16 :goto_8a

    .line 15870
    .end local v28    # "cApps":Landroid/util/ArraySet;, "Landroid/util/ArraySet<Lcom/android/server/wm/AppWindowToken;>;"
    .end local v42    # "displayNdx":I
    .end local v47    # "i":I
    .end local v62    # "oApps":Landroid/util/ArraySet;, "Landroid/util/ArraySet<Lcom/android/server/wm/AppWindowToken;>;"
    :cond_111
    invoke-virtual/range {v51 .. v51}, Lcom/android/server/wm/AppTransition;->isTimeout()Z

    move-result v4

    if-nez v4, :cond_263

    .line 15871
    const/16 v47, 0x0

    .restart local v47    # "i":I
    :goto_119
    move/from16 v0, v47

    move/from16 v1, v24

    if-ge v0, v1, :cond_1b6

    if-eqz v46, :cond_1b6

    .line 15872
    move-object/from16 v0, v29

    move/from16 v1, v47

    invoke-virtual {v0, v1}, Landroid/util/ArraySet;->valueAt(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/android/server/wm/AppWindowToken;

    .line 15873
    .restart local v5    # "wtoken":Lcom/android/server/wm/AppWindowToken;
    sget-boolean v4, DEBUG_APP_TRANSITIONS:Z

    if-eqz v4, :cond_16b

    const-string v4, "WindowManager"

    new-instance v7, Ljava/lang/StringBuilder;

    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    const-string v9, "Check opening app="

    invoke-virtual {v7, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v7

    const-string v9, ": allDrawn="

    invoke-virtual {v7, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    iget-boolean v9, v5, Lcom/android/server/wm/AppWindowToken;->allDrawn:Z

    invoke-virtual {v7, v9}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v7

    const-string v9, " startingDisplayed="

    invoke-virtual {v7, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    iget-boolean v9, v5, Lcom/android/server/wm/AppWindowToken;->startingDisplayed:Z

    invoke-virtual {v7, v9}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v7

    const-string v9, " startingMoved="

    invoke-virtual {v7, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    iget-boolean v9, v5, Lcom/android/server/wm/AppWindowToken;->startingMoved:Z

    invoke-virtual {v7, v9}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v7

    invoke-static {v4, v7}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 15878
    :cond_16b
    const/4 v4, 0x1

    move/from16 v0, v24

    if-eq v0, v4, :cond_174

    iget-boolean v4, v5, Lcom/android/server/wm/AppWindowToken;->noDisplay:Z

    if-nez v4, :cond_1af

    :cond_174
    iget-boolean v4, v5, Lcom/android/server/wm/AppWindowToken;->allDrawn:Z

    if-nez v4, :cond_1af

    iget-boolean v4, v5, Lcom/android/server/wm/AppWindowToken;->startingDisplayed:Z

    if-nez v4, :cond_1af

    iget-boolean v4, v5, Lcom/android/server/wm/AppWindowToken;->startingMoved:Z

    if-nez v4, :cond_1af

    .line 15881
    invoke-virtual/range {v29 .. v29}, Landroid/util/ArraySet;->size()I

    move-result v4

    const/4 v7, 0x1

    if-le v4, v7, :cond_1b3

    invoke-virtual {v5}, Lcom/android/server/wm/AppWindowToken;->findMainWindow()Lcom/android/server/wm/WindowState;

    move-result-object v4

    if-nez v4, :cond_1b3

    iget-boolean v4, v5, Lcom/android/server/wm/AppWindowToken;->noWindowWhenHiddenRequested:Z

    if-eqz v4, :cond_1b3

    .line 15883
    const-string v4, "WindowManager"

    new-instance v7, Ljava/lang/StringBuilder;

    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    const-string v9, "Ignore "

    invoke-virtual {v7, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v7

    const-string v9, " for app transition which has no main window"

    invoke-virtual {v7, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v7

    invoke-static {v4, v7}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 15871
    :cond_1af
    :goto_1af
    add-int/lit8 v47, v47, 0x1

    goto/16 :goto_119

    .line 15887
    :cond_1b3
    const/16 v46, 0x0

    goto :goto_1af

    .line 15938
    .end local v5    # "wtoken":Lcom/android/server/wm/AppWindowToken;
    :cond_1b6
    if-eqz v46, :cond_263

    move-object/from16 v0, p0

    move-object/from16 v1, v59

    invoke-direct {v0, v1}, isWallpaperVisible(Lcom/android/server/wm/WindowState;)Z

    move-result v4

    if-eqz v4, :cond_263

    .line 15939
    const/16 v76, 0x1

    .line 15940
    .local v76, "wallpaperGoodToGo":Z
    invoke-virtual/range {v60 .. v60}, Ljava/util/ArrayList;->size()I

    move-result v4

    add-int/lit8 v36, v4, -0x1

    .line 15941
    .local v36, "curTokenIndex":I
    :goto_1ca
    if-ltz v36, :cond_253

    if-eqz v76, :cond_253

    .line 15942
    move-object/from16 v0, v60

    move/from16 v1, v36

    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v69

    check-cast v69, Lcom/android/server/wm/WindowToken;

    .line 15943
    .local v69, "token":Lcom/android/server/wm/WindowToken;
    move-object/from16 v0, v69

    iget-object v4, v0, Lcom/android/server/wm/WindowToken;->windows:Lcom/android/server/wm/WindowList;

    invoke-virtual {v4}, Lcom/android/server/wm/WindowList;->size()I

    move-result v4

    add-int/lit8 v37, v4, -0x1

    .local v37, "curWallpaperIndex":I
    :goto_1e2
    if-ltz v37, :cond_24c

    .line 15945
    move-object/from16 v0, v69

    iget-object v4, v0, Lcom/android/server/wm/WindowToken;->windows:Lcom/android/server/wm/WindowList;

    move/from16 v0, v37

    invoke-virtual {v4, v0}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v75

    check-cast v75, Lcom/android/server/wm/WindowState;

    .line 15946
    .local v75, "wallpaper":Lcom/android/server/wm/WindowState;
    move-object/from16 v0, v75

    iget-boolean v4, v0, Lcom/android/server/wm/WindowState;->mWallpaperVisible:Z

    if-eqz v4, :cond_250

    invoke-virtual/range {v75 .. v75}, Lcom/android/server/wm/WindowState;->isDrawnLw()Z

    move-result v4

    if-nez v4, :cond_250

    .line 15948
    const/16 v76, 0x0

    .line 15949
    move-object/from16 v0, p0

    iget v4, v0, mWallpaperDrawState:I

    const/4 v7, 0x2

    if-eq v4, v7, :cond_207

    .line 15951
    const/16 v46, 0x0

    .line 15953
    :cond_207
    move-object/from16 v0, p0

    iget v4, v0, mWallpaperDrawState:I

    if-nez v4, :cond_228

    .line 15954
    const/4 v4, 0x1

    move-object/from16 v0, p0

    iput v4, v0, mWallpaperDrawState:I

    .line 15955
    move-object/from16 v0, p0

    iget-object v4, v0, mH:Lcom/android/server/wm/WindowManagerService$H;

    const/16 v7, 0x27

    invoke-virtual {v4, v7}, Lcom/android/server/wm/WindowManagerService$H;->removeMessages(I)V

    .line 15956
    move-object/from16 v0, p0

    iget-object v4, v0, mH:Lcom/android/server/wm/WindowManagerService$H;

    const/16 v7, 0x27

    const-wide/16 v16, 0x1f4

    move-wide/from16 v0, v16

    invoke-virtual {v4, v7, v0, v1}, Lcom/android/server/wm/WindowManagerService$H;->sendEmptyMessageDelayed(IJ)Z

    .line 15959
    :cond_228
    sget-boolean v4, DEBUG_APP_TRANSITIONS:Z

    if-nez v4, :cond_230

    sget-boolean v4, DEBUG_WALLPAPER:Z

    if-eqz v4, :cond_24c

    :cond_230
    const-string v4, "WindowManager"

    new-instance v7, Ljava/lang/StringBuilder;

    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    const-string v9, "Wallpaper should be visible but has not been drawn yet. mWallpaperDrawState="

    invoke-virtual {v7, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    move-object/from16 v0, p0

    iget v9, v0, mWallpaperDrawState:I

    invoke-virtual {v7, v9}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v7

    invoke-static {v4, v7}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 15941
    .end local v75    # "wallpaper":Lcom/android/server/wm/WindowState;
    :cond_24c
    add-int/lit8 v36, v36, -0x1

    goto/16 :goto_1ca

    .line 15944
    .restart local v75    # "wallpaper":Lcom/android/server/wm/WindowState;
    :cond_250
    add-int/lit8 v37, v37, -0x1

    goto :goto_1e2

    .line 15966
    .end local v37    # "curWallpaperIndex":I
    .end local v69    # "token":Lcom/android/server/wm/WindowToken;
    .end local v75    # "wallpaper":Lcom/android/server/wm/WindowState;
    :cond_253
    if-eqz v76, :cond_263

    .line 15967
    const/4 v4, 0x0

    move-object/from16 v0, p0

    iput v4, v0, mWallpaperDrawState:I

    .line 15968
    move-object/from16 v0, p0

    iget-object v4, v0, mH:Lcom/android/server/wm/WindowManagerService$H;

    const/16 v7, 0x27

    invoke-virtual {v4, v7}, Lcom/android/server/wm/WindowManagerService$H;->removeMessages(I)V

    .line 15999
    .end local v36    # "curTokenIndex":I
    .end local v47    # "i":I
    .end local v76    # "wallpaperGoodToGo":Z
    :cond_263
    if-eqz v46, :cond_957

    .line 16001
    sget-boolean v4, Lcom/android/server/wm/DualScreenTransition;->DEBUG:Z

    if-eqz v4, :cond_37a

    .line 16002
    const-string v4, "WindowManager"

    new-instance v7, Ljava/lang/StringBuilder;

    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    const-string v9, "**** GOOD TO GO [d"

    invoke-virtual {v7, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    move/from16 v0, p2

    invoke-virtual {v7, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v7

    const-string v9, "]"

    invoke-virtual {v7, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v7

    new-instance v9, Ljava/lang/RuntimeException;

    invoke-direct {v9}, Ljava/lang/RuntimeException;-><init>()V

    invoke-static {v4, v7, v9}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 16007
    :cond_28e
    :goto_28e
    invoke-virtual/range {v51 .. v51}, Lcom/android/server/wm/AppTransition;->getAppTransition()I

    move-result v8

    .line 16008
    .local v8, "transit":I
    if-eqz v56, :cond_295

    .line 16009
    const/4 v8, -0x1

    .line 16011
    :cond_295
    const/16 v56, 0x0

    .line 16012
    move-object/from16 v0, p0

    iget-object v4, v0, mNoAnimationNotifyOnTransitionFinished:Ljava/util/List;

    invoke-interface {v4}, Ljava/util/List;->clear()V

    .line 16019
    move-object/from16 v0, p0

    iget-object v4, v0, mH:Lcom/android/server/wm/WindowManagerService$H;

    const/16 v7, 0xd

    invoke-virtual {v4, v7}, Lcom/android/server/wm/WindowManagerService$H;->removeMessages(I)V

    .line 16024
    const/4 v4, 0x0

    move-object/from16 v0, p0

    iput-object v4, v0, mMovingTask:Lcom/android/server/wm/Task;

    .line 16030
    move-object/from16 v0, p0

    move/from16 v1, p2

    invoke-virtual {v0, v1}, getDisplayContentLocked(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v4

    move-object/from16 v0, p0

    invoke-direct {v0, v4}, rebuildAppWindowListLocked(Lcom/android/server/wm/DisplayContent;)V

    .line 16037
    if-eqz v59, :cond_387

    move-object/from16 v0, v59

    iget-object v4, v0, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    invoke-virtual {v4}, Lcom/android/server/wm/WindowStateAnimator;->isAnimating()Z

    move-result v4

    if-eqz v4, :cond_387

    move-object/from16 v0, v59

    iget-object v4, v0, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    invoke-virtual {v4}, Lcom/android/server/wm/WindowStateAnimator;->isDummyAnimation()Z

    move-result v4

    if-nez v4, :cond_387

    invoke-virtual/range {v59 .. v59}, Lcom/android/server/wm/WindowState;->getDisplayId()I

    move-result v4

    move/from16 v0, p2

    if-ne v4, v0, :cond_387

    const/16 v63, 0x0

    .line 16043
    .local v63, "oldWallpaper":Lcom/android/server/wm/WindowState;
    :goto_2d9
    move-object/from16 v0, p0

    iget-object v4, v0, mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    const/4 v7, 0x0

    iput-boolean v7, v4, Lcom/android/server/wm/WindowManagerService$LayoutFields;->mWallpaperMayChange:Z

    .line 16047
    const/4 v6, 0x0

    .line 16048
    .local v6, "animLp":Landroid/view/WindowManager$LayoutParams;
    const/16 v26, -0x1

    .line 16049
    .local v26, "bestAnimLayer":I
    const/16 v45, 0x0

    .line 16050
    .local v45, "fullscreenAnim":Z
    const/4 v10, 0x0

    .line 16052
    .local v10, "voiceInteraction":Z
    sget-boolean v4, DEBUG_APP_TRANSITIONS:Z

    if-eqz v4, :cond_328

    const-string v4, "WindowManager"

    new-instance v7, Ljava/lang/StringBuilder;

    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    const-string v9, "New wallpaper target="

    invoke-virtual {v7, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    move-object/from16 v0, v59

    invoke-virtual {v7, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v7

    const-string v9, ", oldWallpaper="

    invoke-virtual {v7, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    move-object/from16 v0, v63

    invoke-virtual {v7, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v7

    const-string v9, ", lower target="

    invoke-virtual {v7, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    move-object/from16 v0, v54

    invoke-virtual {v7, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v7

    const-string v9, ", upper target="

    invoke-virtual {v7, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    move-object/from16 v0, v58

    invoke-virtual {v7, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v7

    invoke-static {v4, v7}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 16058
    :cond_328
    const/16 v66, 0x0

    .line 16059
    .local v66, "openingAppHasWallpaper":Z
    const/16 v33, 0x0

    .line 16062
    .local v33, "closingAppHasWallpaper":Z
    if-nez v54, :cond_38b

    .line 16063
    const/16 v74, 0x0

    .local v74, "upperWallpaperAppToken":Lcom/android/server/wm/AppWindowToken;
    move-object/from16 v50, v74

    .line 16079
    :goto_332
    invoke-virtual/range {v52 .. v52}, Landroid/util/ArraySet;->size()I

    move-result v34

    .line 16080
    .local v34, "closingAppsCount":I
    invoke-virtual/range {v55 .. v55}, Landroid/util/ArraySet;->size()I

    move-result v4

    add-int v24, v34, v4

    .line 16081
    const/16 v47, 0x0

    .restart local v47    # "i":I
    :goto_33e
    move/from16 v0, v47

    move/from16 v1, v24

    if-ge v0, v1, :cond_3c8

    .line 16083
    move/from16 v0, v47

    move/from16 v1, v34

    if-ge v0, v1, :cond_398

    .line 16084
    move-object/from16 v0, v52

    move/from16 v1, v47

    invoke-virtual {v0, v1}, Landroid/util/ArraySet;->valueAt(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/android/server/wm/AppWindowToken;

    .line 16085
    .restart local v5    # "wtoken":Lcom/android/server/wm/AppWindowToken;
    move-object/from16 v0, v50

    if-eq v5, v0, :cond_35c

    move-object/from16 v0, v74

    if-ne v5, v0, :cond_35e

    .line 16086
    :cond_35c
    const/16 v33, 0x1

    .line 16095
    :cond_35e
    :goto_35e
    iget-boolean v4, v5, Lcom/android/server/wm/AppWindowToken;->voiceInteraction:Z

    or-int/2addr v10, v4

    .line 16097
    iget-boolean v4, v5, Lcom/android/server/wm/AppWindowToken;->appFullscreen:Z

    if-eqz v4, :cond_3ad

    .line 16098
    invoke-virtual {v5}, Lcom/android/server/wm/AppWindowToken;->findMainWindow()Lcom/android/server/wm/WindowState;

    move-result-object v79

    .line 16099
    .local v79, "ws":Lcom/android/server/wm/WindowState;
    if-eqz v79, :cond_377

    .line 16100
    move-object/from16 v0, v79

    iget-object v6, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    .line 16101
    move-object/from16 v0, v79

    iget v0, v0, Lcom/android/server/wm/WindowState;->mLayer:I

    move/from16 v26, v0

    .line 16102
    const/16 v45, 0x1

    .line 16081
    .end local v79    # "ws":Lcom/android/server/wm/WindowState;
    :cond_377
    :goto_377
    add-int/lit8 v47, v47, 0x1

    goto :goto_33e

    .line 16005
    .end local v5    # "wtoken":Lcom/android/server/wm/AppWindowToken;
    .end local v6    # "animLp":Landroid/view/WindowManager$LayoutParams;
    .end local v8    # "transit":I
    .end local v10    # "voiceInteraction":Z
    .end local v26    # "bestAnimLayer":I
    .end local v33    # "closingAppHasWallpaper":Z
    .end local v34    # "closingAppsCount":I
    .end local v45    # "fullscreenAnim":Z
    .end local v47    # "i":I
    .end local v63    # "oldWallpaper":Lcom/android/server/wm/WindowState;
    .end local v66    # "openingAppHasWallpaper":Z
    .end local v74    # "upperWallpaperAppToken":Lcom/android/server/wm/AppWindowToken;
    :cond_37a
    sget-boolean v4, DEBUG_APP_TRANSITIONS:Z

    if-eqz v4, :cond_28e

    const-string v4, "WindowManager"

    const-string v7, "**** GOOD TO GO"

    invoke-static {v4, v7}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    goto/16 :goto_28e

    .restart local v8    # "transit":I
    :cond_387
    move-object/from16 v63, v59

    .line 16037
    goto/16 :goto_2d9

    .line 16065
    .restart local v6    # "animLp":Landroid/view/WindowManager$LayoutParams;
    .restart local v10    # "voiceInteraction":Z
    .restart local v26    # "bestAnimLayer":I
    .restart local v33    # "closingAppHasWallpaper":Z
    .restart local v45    # "fullscreenAnim":Z
    .restart local v63    # "oldWallpaper":Lcom/android/server/wm/WindowState;
    .restart local v66    # "openingAppHasWallpaper":Z
    :cond_38b
    move-object/from16 v0, v54

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    move-object/from16 v50, v0

    .line 16066
    .local v50, "lowerWallpaperAppToken":Lcom/android/server/wm/AppWindowToken;
    move-object/from16 v0, v58

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    move-object/from16 v74, v0

    .restart local v74    # "upperWallpaperAppToken":Lcom/android/server/wm/AppWindowToken;
    goto :goto_332

    .line 16089
    .end local v50    # "lowerWallpaperAppToken":Lcom/android/server/wm/AppWindowToken;
    .restart local v34    # "closingAppsCount":I
    .restart local v47    # "i":I
    :cond_398
    sub-int v4, v47, v34

    move-object/from16 v0, v55

    invoke-virtual {v0, v4}, Landroid/util/ArraySet;->valueAt(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/android/server/wm/AppWindowToken;

    .line 16090
    .restart local v5    # "wtoken":Lcom/android/server/wm/AppWindowToken;
    move-object/from16 v0, v50

    if-eq v5, v0, :cond_3aa

    move-object/from16 v0, v74

    if-ne v5, v0, :cond_35e

    .line 16091
    :cond_3aa
    const/16 v66, 0x1

    goto :goto_35e

    .line 16104
    :cond_3ad
    if-nez v45, :cond_377

    .line 16105
    invoke-virtual {v5}, Lcom/android/server/wm/AppWindowToken;->findMainWindow()Lcom/android/server/wm/WindowState;

    move-result-object v79

    .line 16106
    .restart local v79    # "ws":Lcom/android/server/wm/WindowState;
    if-eqz v79, :cond_377

    .line 16107
    move-object/from16 v0, v79

    iget v4, v0, Lcom/android/server/wm/WindowState;->mLayer:I

    move/from16 v0, v26

    if-le v4, v0, :cond_377

    .line 16108
    move-object/from16 v0, v79

    iget-object v6, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    .line 16109
    move-object/from16 v0, v79

    iget v0, v0, Lcom/android/server/wm/WindowState;->mLayer:I

    move/from16 v26, v0

    goto :goto_377

    .line 16145
    .end local v5    # "wtoken":Lcom/android/server/wm/AppWindowToken;
    .end local v79    # "ws":Lcom/android/server/wm/WindowState;
    :cond_3c8
    const/4 v4, 0x0

    move-object/from16 v0, p0

    iput-boolean v4, v0, mAnimateWallpaperWithTarget:Z

    .line 16147
    if-eqz v33, :cond_49d

    if-eqz v66, :cond_49d

    .line 16148
    sget-boolean v4, DEBUG_APP_TRANSITIONS:Z

    if-eqz v4, :cond_3dc

    const-string v4, "WindowManager"

    const-string v7, "Wallpaper animation!"

    invoke-static {v4, v7}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 16149
    :cond_3dc
    packed-switch v8, :pswitch_data_9c2

    .line 16161
    :goto_3df
    sget-boolean v4, DEBUG_APP_TRANSITIONS:Z

    if-eqz v4, :cond_3ff

    const-string v4, "WindowManager"

    new-instance v7, Ljava/lang/StringBuilder;

    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    const-string v9, "New transit: "

    invoke-virtual {v7, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-static {v8}, Lcom/android/server/wm/AppTransition;->appTransitionToString(I)Ljava/lang/String;

    move-result-object v9

    invoke-virtual {v7, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v7

    invoke-static {v4, v7}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 16219
    :cond_3ff
    :goto_3ff
    move-object/from16 v0, p0

    iget-object v4, v0, mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v4}, Landroid/view/WindowManagerPolicy;->allowAppAnimationsLw()Z

    move-result v4

    if-nez v4, :cond_415

    .line 16220
    sget-boolean v4, DEBUG_APP_TRANSITIONS:Z

    if-eqz v4, :cond_414

    const-string v4, "WindowManager"

    const-string v7, "Animations disallowed by keyguard or dream."

    invoke-static {v4, v7}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 16222
    :cond_414
    const/4 v6, 0x0

    .line 16225
    :cond_415
    const/16 v72, 0x0

    .line 16226
    .local v72, "topOpeningApp":Lcom/android/server/wm/AppWindowToken;
    const/16 v70, 0x0

    .line 16227
    .local v70, "topClosingApp":Lcom/android/server/wm/AppWindowToken;
    const/16 v73, 0x0

    .line 16228
    .local v73, "topOpeningLayer":I
    const/16 v71, 0x0

    .line 16231
    .local v71, "topClosingLayer":I
    const/4 v13, 0x0

    .line 16232
    .local v13, "appAnimLp":Landroid/view/WindowManager$LayoutParams;
    move-object/from16 v0, p0

    iget-object v4, v0, mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v4}, Landroid/view/WindowManagerPolicy;->getAppsShowWhenLockedLw()Ljava/util/ArrayList;

    move-result-object v25

    .line 16236
    .local v25, "appsShowWhenLocked":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/view/IApplicationToken;>;"
    const/16 v4, 0x11

    if-ne v8, v4, :cond_576

    .line 16238
    invoke-virtual/range {p0 .. p0}, getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v4

    move-object/from16 v0, p0

    invoke-direct {v0, v4}, findFocusedWindowLocked(Lcom/android/server/wm/DisplayContent;)Lcom/android/server/wm/WindowState;

    move-result-object v77

    .line 16240
    .local v77, "win":Lcom/android/server/wm/WindowState;
    if-eqz v77, :cond_576

    .line 16241
    move-object/from16 v0, v77

    iget-object v5, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    .line 16242
    .restart local v5    # "wtoken":Lcom/android/server/wm/AppWindowToken;
    iget-object v0, v5, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    move-object/from16 v23, v0

    .line 16243
    .local v23, "appAnimator":Lcom/android/server/wm/AppWindowAnimator;
    sget-boolean v4, DEBUG_APP_TRANSITIONS:Z

    if-eqz v4, :cond_45a

    const-string v4, "WindowManager"

    new-instance v7, Ljava/lang/StringBuilder;

    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    const-string v9, "Now animating app in place "

    invoke-virtual {v7, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v7

    invoke-static {v4, v7}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 16244
    :cond_45a
    invoke-virtual/range {v23 .. v23}, Lcom/android/server/wm/AppWindowAnimator;->clearThumbnail()V

    .line 16245
    const/4 v4, 0x0

    move-object/from16 v0, v23

    iput-object v4, v0, Lcom/android/server/wm/AppWindowAnimator;->animation:Landroid/view/animation/Animation;

    .line 16246
    move-object/from16 v0, p0

    invoke-virtual {v0, v5, v8}, updateTokenInPlaceLocked(Lcom/android/server/wm/AppWindowToken;I)V

    .line 16247
    invoke-virtual {v5}, Lcom/android/server/wm/AppWindowToken;->updateReportedVisibilityLocked()V

    .line 16249
    move-object/from16 v0, v23

    iget-object v4, v0, Lcom/android/server/wm/AppWindowAnimator;->mAllAppWinAnimators:Ljava/util/ArrayList;

    invoke-virtual {v4}, Ljava/util/ArrayList;->clear()V

    .line 16250
    iget-object v4, v5, Lcom/android/server/wm/AppWindowToken;->allAppWindows:Lcom/android/server/wm/WindowList;

    invoke-virtual {v4}, Lcom/android/server/wm/WindowList;->size()I

    move-result v21

    .line 16251
    .local v21, "N":I
    const/16 v48, 0x0

    .local v48, "j":I
    :goto_479
    move/from16 v0, v48

    move/from16 v1, v21

    if-ge v0, v1, :cond_55c

    .line 16252
    move-object/from16 v0, v23

    iget-object v7, v0, Lcom/android/server/wm/AppWindowAnimator;->mAllAppWinAnimators:Ljava/util/ArrayList;

    iget-object v4, v5, Lcom/android/server/wm/AppWindowToken;->allAppWindows:Lcom/android/server/wm/WindowList;

    move/from16 v0, v48

    invoke-virtual {v4, v0}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/server/wm/WindowState;

    iget-object v4, v4, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    invoke-virtual {v7, v4}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 16251
    add-int/lit8 v48, v48, 0x1

    goto :goto_479

    .line 16153
    .end local v5    # "wtoken":Lcom/android/server/wm/AppWindowToken;
    .end local v13    # "appAnimLp":Landroid/view/WindowManager$LayoutParams;
    .end local v21    # "N":I
    .end local v23    # "appAnimator":Lcom/android/server/wm/AppWindowAnimator;
    .end local v25    # "appsShowWhenLocked":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/view/IApplicationToken;>;"
    .end local v48    # "j":I
    .end local v70    # "topClosingApp":Lcom/android/server/wm/AppWindowToken;
    .end local v71    # "topClosingLayer":I
    .end local v72    # "topOpeningApp":Lcom/android/server/wm/AppWindowToken;
    .end local v73    # "topOpeningLayer":I
    .end local v77    # "win":Lcom/android/server/wm/WindowState;
    :pswitch_495
    const/16 v8, 0xe

    .line 16154
    goto/16 :goto_3df

    .line 16158
    :pswitch_499
    const/16 v8, 0xf

    goto/16 :goto_3df

    .line 16163
    :cond_49d
    if-eqz v63, :cond_4c1

    invoke-virtual/range {v55 .. v55}, Landroid/util/ArraySet;->isEmpty()Z

    move-result v4

    if-nez v4, :cond_4c1

    const/16 v4, 0x65

    if-eq v8, v4, :cond_4c1

    const/16 v4, 0x66

    if-eq v8, v4, :cond_4c1

    const/16 v4, 0x12c

    if-eq v8, v4, :cond_4c1

    const/16 v4, 0x12d

    if-eq v8, v4, :cond_4c1

    move-object/from16 v0, v63

    iget-object v4, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    move-object/from16 v0, v55

    invoke-virtual {v0, v4}, Landroid/util/ArraySet;->contains(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_531

    .line 16182
    :cond_4c1
    if-eqz v59, :cond_555

    invoke-virtual/range {v59 .. v59}, Lcom/android/server/wm/WindowState;->isVisibleLw()Z

    move-result v4

    if-nez v4, :cond_4cf

    move-object/from16 v0, v59

    iget-boolean v4, v0, Lcom/android/server/wm/WindowState;->mExiting:Z

    if-eqz v4, :cond_555

    :cond_4cf
    const/16 v4, 0x64

    if-eq v8, v4, :cond_555

    const/16 v4, 0x65

    if-eq v8, v4, :cond_555

    const/16 v4, 0x66

    if-eq v8, v4, :cond_555

    const/16 v4, 0x12c

    if-eq v8, v4, :cond_555

    const/16 v4, 0x12d

    if-eq v8, v4, :cond_555

    .line 16195
    const/16 v8, 0xd

    .line 16196
    sget-boolean v4, DEBUG_APP_TRANSITIONS:Z

    if-eqz v4, :cond_501

    const-string v4, "WindowManager"

    new-instance v7, Ljava/lang/StringBuilder;

    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    const-string v9, "New transit into wallpaper: "

    invoke-virtual {v7, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v7

    invoke-static {v4, v7}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 16199
    :cond_501
    sget-boolean v4, SAFE_DEBUG:Z

    if-eqz v4, :cond_3ff

    move-object/from16 v0, v59

    iget-boolean v4, v0, Lcom/android/server/wm/WindowState;->mExiting:Z

    if-eqz v4, :cond_3ff

    .line 16200
    const-string v4, "WindowManager"

    new-instance v7, Ljava/lang/StringBuilder;

    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    const-string v9, "New transit into wallpaper: "

    invoke-virtual {v7, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v7

    const-string v9, " because of "

    invoke-virtual {v7, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    move-object/from16 v0, v59

    invoke-virtual {v7, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v7

    invoke-static {v4, v7}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    goto/16 :goto_3ff

    .line 16178
    :cond_531
    const/16 v8, 0xc

    .line 16179
    sget-boolean v4, DEBUG_APP_TRANSITIONS:Z

    if-eqz v4, :cond_3ff

    const-string v4, "WindowManager"

    new-instance v7, Ljava/lang/StringBuilder;

    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    const-string v9, "New transit away from wallpaper: "

    invoke-virtual {v7, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-static {v8}, Lcom/android/server/wm/AppTransition;->appTransitionToString(I)Ljava/lang/String;

    move-result-object v9

    invoke-virtual {v7, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v7

    invoke-static {v4, v7}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    goto/16 :goto_3ff

    .line 16211
    :cond_555
    const/4 v4, 0x1

    move-object/from16 v0, p0

    iput-boolean v4, v0, mAnimateWallpaperWithTarget:Z

    goto/16 :goto_3ff

    .line 16254
    .restart local v5    # "wtoken":Lcom/android/server/wm/AppWindowToken;
    .restart local v13    # "appAnimLp":Landroid/view/WindowManager$LayoutParams;
    .restart local v21    # "N":I
    .restart local v23    # "appAnimator":Lcom/android/server/wm/AppWindowAnimator;
    .restart local v25    # "appsShowWhenLocked":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/view/IApplicationToken;>;"
    .restart local v48    # "j":I
    .restart local v70    # "topClosingApp":Lcom/android/server/wm/AppWindowToken;
    .restart local v71    # "topClosingLayer":I
    .restart local v72    # "topOpeningApp":Lcom/android/server/wm/AppWindowToken;
    .restart local v73    # "topOpeningLayer":I
    .restart local v77    # "win":Lcom/android/server/wm/WindowState;
    :cond_55c
    move-object/from16 v0, p0

    iget-object v4, v0, mAnimator:Lcom/android/server/wm/WindowAnimator;

    iget-boolean v7, v4, Lcom/android/server/wm/WindowAnimator;->mAppWindowAnimating:Z

    invoke-virtual/range {v23 .. v23}, Lcom/android/server/wm/AppWindowAnimator;->isAnimating()Z

    move-result v9

    or-int/2addr v7, v9

    iput-boolean v7, v4, Lcom/android/server/wm/WindowAnimator;->mAppWindowAnimating:Z

    .line 16255
    move-object/from16 v0, p0

    iget-object v4, v0, mAnimator:Lcom/android/server/wm/WindowAnimator;

    iget-boolean v7, v4, Lcom/android/server/wm/WindowAnimator;->mAnimating:Z

    invoke-virtual/range {v23 .. v23}, Lcom/android/server/wm/AppWindowAnimator;->showAllWindowsLocked()Z

    move-result v9

    or-int/2addr v7, v9

    iput-boolean v7, v4, Lcom/android/server/wm/WindowAnimator;->mAnimating:Z

    .line 16259
    .end local v5    # "wtoken":Lcom/android/server/wm/AppWindowToken;
    .end local v21    # "N":I
    .end local v23    # "appAnimator":Lcom/android/server/wm/AppWindowAnimator;
    .end local v48    # "j":I
    .end local v77    # "win":Lcom/android/server/wm/WindowState;
    :cond_576
    invoke-virtual/range {v55 .. v55}, Landroid/util/ArraySet;->size()I

    move-result v24

    .line 16260
    const/16 v47, 0x0

    :goto_57c
    move/from16 v0, v47

    move/from16 v1, v24

    if-ge v0, v1, :cond_687

    .line 16261
    move-object/from16 v0, v55

    move/from16 v1, v47

    invoke-virtual {v0, v1}, Landroid/util/ArraySet;->valueAt(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/android/server/wm/AppWindowToken;

    .line 16262
    .restart local v5    # "wtoken":Lcom/android/server/wm/AppWindowToken;
    iget-object v0, v5, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    move-object/from16 v23, v0

    .line 16263
    .restart local v23    # "appAnimator":Lcom/android/server/wm/AppWindowAnimator;
    sget-boolean v4, DEBUG_APP_TRANSITIONS:Z

    if-eqz v4, :cond_5ac

    const-string v4, "WindowManager"

    new-instance v7, Ljava/lang/StringBuilder;

    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    const-string v9, "Now opening app"

    invoke-virtual {v7, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v7

    invoke-static {v4, v7}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 16265
    :cond_5ac
    move-object/from16 v0, v23

    iget-boolean v4, v0, Lcom/android/server/wm/AppWindowAnimator;->usingTransferredAnimation:Z

    if-nez v4, :cond_5bf

    .line 16266
    invoke-virtual/range {v23 .. v23}, Lcom/android/server/wm/AppWindowAnimator;->clearThumbnail()V

    .line 16267
    const/4 v4, 0x0

    move-object/from16 v0, v23

    iput-object v4, v0, Lcom/android/server/wm/AppWindowAnimator;->animation:Landroid/view/animation/Animation;

    .line 16271
    const/4 v4, 0x0

    move-object/from16 v0, v23

    iput v4, v0, Lcom/android/server/wm/AppWindowAnimator;->animLayerAdjustment:I

    .line 16278
    :cond_5bf
    invoke-virtual/range {v25 .. v25}, Ljava/util/ArrayList;->size()I

    move-result v4

    if-lez v4, :cond_5cf

    iget-object v4, v5, Lcom/android/server/wm/AppWindowToken;->appToken:Landroid/view/IApplicationToken;

    move-object/from16 v0, v25

    invoke-virtual {v0, v4}, Ljava/util/ArrayList;->contains(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_62c

    :cond_5cf
    move-object v13, v6

    .line 16281
    :goto_5d0
    const/4 v4, 0x0

    iput-boolean v4, v5, Lcom/android/server/wm/AppWindowToken;->inPendingTransaction:Z

    .line 16282
    const/4 v7, 0x1

    const/4 v9, 0x0

    move-object/from16 v4, p0

    invoke-virtual/range {v4 .. v10}, setTokenVisibilityLocked(Lcom/android/server/wm/AppWindowToken;Landroid/view/WindowManager$LayoutParams;ZIZZ)Z

    move-result v4

    if-nez v4, :cond_5e6

    .line 16287
    move-object/from16 v0, p0

    iget-object v4, v0, mNoAnimationNotifyOnTransitionFinished:Ljava/util/List;

    iget-object v7, v5, Lcom/android/server/wm/AppWindowToken;->token:Landroid/os/IBinder;

    invoke-interface {v4, v7}, Ljava/util/List;->add(Ljava/lang/Object;)Z

    .line 16289
    :cond_5e6
    invoke-virtual {v5}, Lcom/android/server/wm/AppWindowToken;->updateReportedVisibilityLocked()V

    .line 16290
    const/4 v4, 0x0

    iput-boolean v4, v5, Lcom/android/server/wm/AppWindowToken;->waitingToShow:Z

    .line 16299
    if-nez v6, :cond_601

    invoke-virtual/range {p0 .. p0}, isKeyguardLocked()Z

    move-result v4

    if-eqz v4, :cond_601

    iget-object v4, v5, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    iget-object v4, v4, Lcom/android/server/wm/AppWindowAnimator;->animation:Landroid/view/animation/Animation;

    sget-object v7, Lcom/android/server/wm/AppWindowAnimator;->sDummyAnimation:Landroid/view/animation/Animation;

    if-ne v4, v7, :cond_601

    .line 16302
    iget-object v4, v5, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    const/4 v7, 0x0

    iput-object v7, v4, Lcom/android/server/wm/AppWindowAnimator;->animation:Landroid/view/animation/Animation;

    .line 16306
    :cond_601
    move-object/from16 v0, v23

    iget-object v4, v0, Lcom/android/server/wm/AppWindowAnimator;->mAllAppWinAnimators:Ljava/util/ArrayList;

    invoke-virtual {v4}, Ljava/util/ArrayList;->clear()V

    .line 16307
    iget-object v4, v5, Lcom/android/server/wm/AppWindowToken;->allAppWindows:Lcom/android/server/wm/WindowList;

    invoke-virtual {v4}, Lcom/android/server/wm/WindowList;->size()I

    move-result v78

    .line 16308
    .local v78, "windowsCount":I
    const/16 v48, 0x0

    .restart local v48    # "j":I
    :goto_610
    move/from16 v0, v48

    move/from16 v1, v78

    if-ge v0, v1, :cond_62e

    .line 16309
    move-object/from16 v0, v23

    iget-object v7, v0, Lcom/android/server/wm/AppWindowAnimator;->mAllAppWinAnimators:Ljava/util/ArrayList;

    iget-object v4, v5, Lcom/android/server/wm/AppWindowToken;->allAppWindows:Lcom/android/server/wm/WindowList;

    move/from16 v0, v48

    invoke-virtual {v4, v0}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/server/wm/WindowState;

    iget-object v4, v4, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    invoke-virtual {v7, v4}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 16308
    add-int/lit8 v48, v48, 0x1

    goto :goto_610

    .line 16278
    .end local v48    # "j":I
    .end local v78    # "windowsCount":I
    :cond_62c
    const/4 v13, 0x0

    goto :goto_5d0

    .line 16311
    .restart local v48    # "j":I
    .restart local v78    # "windowsCount":I
    :cond_62e
    move-object/from16 v0, p0

    iget-object v4, v0, mAnimator:Lcom/android/server/wm/WindowAnimator;

    iget-boolean v7, v4, Lcom/android/server/wm/WindowAnimator;->mAnimating:Z

    invoke-virtual/range {v23 .. v23}, Lcom/android/server/wm/AppWindowAnimator;->showAllWindowsLocked()Z

    move-result v9

    or-int/2addr v7, v9

    iput-boolean v7, v4, Lcom/android/server/wm/WindowAnimator;->mAnimating:Z

    .line 16312
    move-object/from16 v0, p0

    iget-object v4, v0, mAnimator:Lcom/android/server/wm/WindowAnimator;

    iget-boolean v7, v4, Lcom/android/server/wm/WindowAnimator;->mAppWindowAnimating:Z

    invoke-virtual/range {v23 .. v23}, Lcom/android/server/wm/AppWindowAnimator;->isAnimating()Z

    move-result v9

    or-int/2addr v7, v9

    iput-boolean v7, v4, Lcom/android/server/wm/WindowAnimator;->mAppWindowAnimating:Z

    .line 16314
    if-eqz v13, :cond_683

    .line 16315
    const/16 v49, -0x1

    .line 16316
    .local v49, "layer":I
    const/16 v48, 0x0

    :goto_64e
    iget-object v4, v5, Lcom/android/server/wm/AppWindowToken;->windows:Lcom/android/server/wm/WindowList;

    invoke-virtual {v4}, Lcom/android/server/wm/WindowList;->size()I

    move-result v4

    move/from16 v0, v48

    if-ge v0, v4, :cond_677

    .line 16317
    iget-object v4, v5, Lcom/android/server/wm/AppWindowToken;->windows:Lcom/android/server/wm/WindowList;

    move/from16 v0, v48

    invoke-virtual {v4, v0}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v77

    check-cast v77, Lcom/android/server/wm/WindowState;

    .line 16318
    .restart local v77    # "win":Lcom/android/server/wm/WindowState;
    move-object/from16 v0, v77

    iget-object v4, v0, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    iget v4, v4, Lcom/android/server/wm/WindowStateAnimator;->mAnimLayer:I

    move/from16 v0, v49

    if-le v4, v0, :cond_674

    .line 16319
    move-object/from16 v0, v77

    iget-object v4, v0, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    iget v0, v4, Lcom/android/server/wm/WindowStateAnimator;->mAnimLayer:I

    move/from16 v49, v0

    .line 16316
    :cond_674
    add-int/lit8 v48, v48, 0x1

    goto :goto_64e

    .line 16322
    .end local v77    # "win":Lcom/android/server/wm/WindowState;
    :cond_677
    if-eqz v72, :cond_67f

    move/from16 v0, v49

    move/from16 v1, v73

    if-le v0, v1, :cond_683

    .line 16323
    :cond_67f
    move-object/from16 v72, v5

    .line 16324
    move/from16 v73, v49

    .line 16260
    .end local v49    # "layer":I
    :cond_683
    add-int/lit8 v47, v47, 0x1

    goto/16 :goto_57c

    .line 16328
    .end local v5    # "wtoken":Lcom/android/server/wm/AppWindowToken;
    .end local v23    # "appAnimator":Lcom/android/server/wm/AppWindowAnimator;
    .end local v48    # "j":I
    .end local v78    # "windowsCount":I
    :cond_687
    invoke-virtual/range {v52 .. v52}, Landroid/util/ArraySet;->size()I

    move-result v24

    .line 16329
    const/16 v47, 0x0

    :goto_68d
    move/from16 v0, v47

    move/from16 v1, v24

    if-ge v0, v1, :cond_74f

    .line 16330
    move-object/from16 v0, v52

    move/from16 v1, v47

    invoke-virtual {v0, v1}, Landroid/util/ArraySet;->valueAt(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/android/server/wm/AppWindowToken;

    .line 16331
    .restart local v5    # "wtoken":Lcom/android/server/wm/AppWindowToken;
    iget-object v0, v5, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    move-object/from16 v23, v0

    .line 16332
    .restart local v23    # "appAnimator":Lcom/android/server/wm/AppWindowAnimator;
    sget-boolean v4, DEBUG_APP_TRANSITIONS:Z

    if-eqz v4, :cond_6bd

    const-string v4, "WindowManager"

    new-instance v7, Ljava/lang/StringBuilder;

    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    const-string v9, "Now closing app "

    invoke-virtual {v7, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v7

    invoke-static {v4, v7}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 16333
    :cond_6bd
    invoke-virtual/range {v23 .. v23}, Lcom/android/server/wm/AppWindowAnimator;->clearThumbnail()V

    .line 16334
    const/4 v4, 0x0

    move-object/from16 v0, v23

    iput-object v4, v0, Lcom/android/server/wm/AppWindowAnimator;->animation:Landroid/view/animation/Animation;

    .line 16337
    invoke-virtual/range {v25 .. v25}, Ljava/util/ArrayList;->size()I

    move-result v4

    if-lez v4, :cond_6d5

    iget-object v4, v5, Lcom/android/server/wm/AppWindowToken;->appToken:Landroid/view/IApplicationToken;

    move-object/from16 v0, v25

    invoke-virtual {v0, v4}, Ljava/util/ArrayList;->contains(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_73d

    :cond_6d5
    move-object v13, v6

    .line 16340
    :goto_6d6
    const/4 v4, 0x0

    iput-boolean v4, v5, Lcom/android/server/wm/AppWindowToken;->inPendingTransaction:Z

    .line 16341
    const/4 v14, 0x0

    const/16 v16, 0x0

    iget-boolean v0, v5, Lcom/android/server/wm/AppWindowToken;->startingMoved:Z

    move/from16 v18, v0

    move-object/from16 v11, p0

    move-object v12, v5

    move v15, v8

    move/from16 v17, v10

    invoke-virtual/range {v11 .. v18}, setTokenVisibilityLocked(Lcom/android/server/wm/AppWindowToken;Landroid/view/WindowManager$LayoutParams;ZIZZZ)Z

    .line 16342
    invoke-virtual {v5}, Lcom/android/server/wm/AppWindowToken;->updateReportedVisibilityLocked()V

    .line 16346
    const/4 v4, 0x1

    iput-boolean v4, v5, Lcom/android/server/wm/AppWindowToken;->allDrawn:Z

    .line 16347
    const/4 v4, 0x0

    iput-boolean v4, v5, Lcom/android/server/wm/AppWindowToken;->deferClearAllDrawn:Z

    .line 16350
    iget-object v4, v5, Lcom/android/server/wm/AppWindowToken;->startingWindow:Lcom/android/server/wm/WindowState;

    if-eqz v4, :cond_701

    iget-object v4, v5, Lcom/android/server/wm/AppWindowToken;->startingWindow:Lcom/android/server/wm/WindowState;

    iget-boolean v4, v4, Lcom/android/server/wm/WindowState;->mExiting:Z

    if-nez v4, :cond_701

    .line 16351
    move-object/from16 v0, p0

    invoke-virtual {v0, v5}, scheduleRemoveStartingWindowLocked(Lcom/android/server/wm/AppWindowToken;)V

    .line 16353
    :cond_701
    move-object/from16 v0, p0

    iget-object v4, v0, mAnimator:Lcom/android/server/wm/WindowAnimator;

    iget-boolean v7, v4, Lcom/android/server/wm/WindowAnimator;->mAppWindowAnimating:Z

    invoke-virtual/range {v23 .. v23}, Lcom/android/server/wm/AppWindowAnimator;->isAnimating()Z

    move-result v9

    or-int/2addr v7, v9

    iput-boolean v7, v4, Lcom/android/server/wm/WindowAnimator;->mAppWindowAnimating:Z

    .line 16355
    if-eqz v13, :cond_74b

    .line 16356
    const/16 v49, -0x1

    .line 16357
    .restart local v49    # "layer":I
    const/16 v48, 0x0

    .restart local v48    # "j":I
    :goto_714
    iget-object v4, v5, Lcom/android/server/wm/AppWindowToken;->windows:Lcom/android/server/wm/WindowList;

    invoke-virtual {v4}, Lcom/android/server/wm/WindowList;->size()I

    move-result v4

    move/from16 v0, v48

    if-ge v0, v4, :cond_73f

    .line 16358
    iget-object v4, v5, Lcom/android/server/wm/AppWindowToken;->windows:Lcom/android/server/wm/WindowList;

    move/from16 v0, v48

    invoke-virtual {v4, v0}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v77

    check-cast v77, Lcom/android/server/wm/WindowState;

    .line 16359
    .restart local v77    # "win":Lcom/android/server/wm/WindowState;
    move-object/from16 v0, v77

    iget-object v4, v0, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    iget v4, v4, Lcom/android/server/wm/WindowStateAnimator;->mAnimLayer:I

    move/from16 v0, v49

    if-le v4, v0, :cond_73a

    .line 16360
    move-object/from16 v0, v77

    iget-object v4, v0, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    iget v0, v4, Lcom/android/server/wm/WindowStateAnimator;->mAnimLayer:I

    move/from16 v49, v0

    .line 16357
    :cond_73a
    add-int/lit8 v48, v48, 0x1

    goto :goto_714

    .line 16337
    .end local v48    # "j":I
    .end local v49    # "layer":I
    .end local v77    # "win":Lcom/android/server/wm/WindowState;
    :cond_73d
    const/4 v13, 0x0

    goto :goto_6d6

    .line 16363
    .restart local v48    # "j":I
    .restart local v49    # "layer":I
    :cond_73f
    if-eqz v70, :cond_747

    move/from16 v0, v49

    move/from16 v1, v71

    if-le v0, v1, :cond_74b

    .line 16364
    :cond_747
    move-object/from16 v70, v5

    .line 16365
    move/from16 v71, v49

    .line 16329
    .end local v48    # "j":I
    .end local v49    # "layer":I
    :cond_74b
    add-int/lit8 v47, v47, 0x1

    goto/16 :goto_68d

    .line 16371
    .end local v5    # "wtoken":Lcom/android/server/wm/AppWindowToken;
    .end local v23    # "appAnimator":Lcom/android/server/wm/AppWindowAnimator;
    :cond_74f
    const/16 v4, 0x9

    if-ne v8, v4, :cond_7a4

    .line 16372
    invoke-virtual/range {v55 .. v55}, Landroid/util/ArraySet;->size()I

    move-result v67

    .line 16373
    .local v67, "openingCount":I
    invoke-virtual/range {v52 .. v52}, Landroid/util/ArraySet;->size()I

    move-result v35

    .line 16374
    .local v35, "closingCount":I
    if-lez v67, :cond_7a4

    if-lez v35, :cond_7a4

    .line 16375
    const/4 v4, 0x0

    move-object/from16 v0, v55

    invoke-virtual {v0, v4}, Landroid/util/ArraySet;->valueAt(I)Ljava/lang/Object;

    move-result-object v64

    check-cast v64, Lcom/android/server/wm/AppWindowToken;

    .line 16376
    .local v64, "openAppWindwtoken":Lcom/android/server/wm/AppWindowToken;
    const/4 v4, 0x0

    move-object/from16 v0, v52

    invoke-virtual {v0, v4}, Landroid/util/ArraySet;->valueAt(I)Ljava/lang/Object;

    move-result-object v31

    check-cast v31, Lcom/android/server/wm/AppWindowToken;

    .line 16377
    .local v31, "closeAppWindwtoken":Lcom/android/server/wm/AppWindowToken;
    move-object/from16 v0, v64

    iget-object v4, v0, Lcom/android/server/wm/AppWindowToken;->appMultiWindowStyle:Lcom/samsung/android/multiwindow/MultiWindowStyle;

    invoke-virtual {v4}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->isSplit()Z

    move-result v4

    if-eqz v4, :cond_7a4

    move-object/from16 v0, v31

    iget-object v4, v0, Lcom/android/server/wm/AppWindowToken;->appMultiWindowStyle:Lcom/samsung/android/multiwindow/MultiWindowStyle;

    invoke-virtual {v4}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->isNormal()Z

    move-result v4

    if-eqz v4, :cond_7a4

    .line 16379
    const/4 v4, 0x1

    move-object/from16 v0, p0

    iput-boolean v4, v0, mIsForceHideCenterbarTransitionRunning:Z

    .line 16380
    move-object/from16 v0, p0

    iget-object v7, v0, mPolicy:Landroid/view/WindowManagerPolicy;

    move-object/from16 v0, p0

    iget-boolean v4, v0, mForceHideCenterbar:Z

    if-nez v4, :cond_7a0

    move-object/from16 v0, p0

    iget-boolean v4, v0, mIsRecentsMultiWindowRunning:Z

    if-nez v4, :cond_7a0

    move-object/from16 v0, p0

    iget-boolean v4, v0, mIsForceHideCenterbarTransitionRunning:Z

    if-eqz v4, :cond_958

    :cond_7a0
    const/4 v4, 0x1

    :goto_7a1
    invoke-interface {v7, v4}, Landroid/view/WindowManagerPolicy;->forceHideCenterBar(Z)V

    .line 16386
    .end local v31    # "closeAppWindwtoken":Lcom/android/server/wm/AppWindowToken;
    .end local v35    # "closingCount":I
    .end local v64    # "openAppWindwtoken":Lcom/android/server/wm/AppWindowToken;
    .end local v67    # "openingCount":I
    :cond_7a4
    if-nez v72, :cond_95b

    const/16 v65, 0x0

    .line 16388
    .local v65, "openingAppAnimator":Lcom/android/server/wm/AppWindowAnimator;
    :goto_7a8
    if-nez v70, :cond_963

    const/16 v32, 0x0

    .line 16390
    .local v32, "closingAppAnimator":Lcom/android/server/wm/AppWindowAnimator;
    :goto_7ac
    invoke-virtual/range {v51 .. v51}, Lcom/android/server/wm/AppTransition;->getNextAppTransitionThumbnail()Landroid/graphics/Bitmap;

    move-result-object v61

    .line 16392
    .local v61, "nextAppTransitionThumbnail":Landroid/graphics/Bitmap;
    invoke-virtual/range {v51 .. v51}, Lcom/android/server/wm/AppTransition;->isNextThumbnailTransitionAspectScaled()Z

    move-result v4

    if-eqz v4, :cond_7c5

    invoke-virtual/range {v51 .. v51}, Lcom/android/server/wm/AppTransition;->isAlphaAnimationAppliedInsteadOfScaleAnimation()Z

    move-result v4

    if-eqz v4, :cond_7c5

    .line 16394
    const-string v4, "WindowManager"

    const-string v7, "Skip thumbnail animation, altered to alpha"

    invoke-static {v4, v7}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 16395
    const/16 v61, 0x0

    .line 16398
    :cond_7c5
    if-eqz v61, :cond_8dc

    if-eqz v65, :cond_8dc

    move-object/from16 v0, v65

    iget-object v4, v0, Lcom/android/server/wm/AppWindowAnimator;->animation:Landroid/view/animation/Animation;

    if-eqz v4, :cond_8dc

    invoke-virtual/range {v61 .. v61}, Landroid/graphics/Bitmap;->getConfig()Landroid/graphics/Bitmap$Config;

    move-result-object v4

    sget-object v7, Landroid/graphics/Bitmap$Config;->ALPHA_8:Landroid/graphics/Bitmap$Config;

    if-eq v4, v7, :cond_8dc

    .line 16403
    new-instance v38, Landroid/graphics/Rect;

    const/4 v4, 0x0

    const/4 v7, 0x0

    invoke-virtual/range {v61 .. v61}, Landroid/graphics/Bitmap;->getWidth()I

    move-result v9

    invoke-virtual/range {v61 .. v61}, Landroid/graphics/Bitmap;->getHeight()I

    move-result v11

    move-object/from16 v0, v38

    invoke-direct {v0, v4, v7, v9, v11}, Landroid/graphics/Rect;-><init>(IIII)V

    .line 16406
    .local v38, "dirty":Landroid/graphics/Rect;
    const/16 v68, 0x0

    .line 16408
    .local v68, "spec":Landroid/view/MagnificationSpec;
    const/4 v4, 0x0

    move-object/from16 v0, p0

    invoke-virtual {v0, v4}, getEasyOneHandScaleSpecLocked(I)Landroid/view/MagnificationSpec;

    move-result-object v68

    .line 16409
    if-eqz v68, :cond_806

    move-object/from16 v0, v68

    iget v4, v0, Landroid/view/MagnificationSpec;->scale:F

    const/high16 v7, 0x3f800000    # 1.0f

    cmpg-float v4, v4, v7

    if-gez v4, :cond_806

    .line 16410
    move-object/from16 v0, v68

    iget v4, v0, Landroid/view/MagnificationSpec;->scale:F

    move-object/from16 v0, v38

    invoke-virtual {v0, v4}, Landroid/graphics/Rect;->scale(F)V

    .line 16416
    :cond_806
    :try_start_806
    invoke-virtual/range {p0 .. p0}, getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v40

    .line 16417
    .local v40, "displayContent":Lcom/android/server/wm/DisplayContent;
    invoke-virtual/range {v40 .. v40}, Lcom/android/server/wm/DisplayContent;->getDisplay()Landroid/view/Display;

    move-result-object v39

    .line 16418
    .local v39, "display":Landroid/view/Display;
    invoke-virtual/range {v40 .. v40}, Lcom/android/server/wm/DisplayContent;->getDisplayInfo()Landroid/view/DisplayInfo;

    move-result-object v41

    .line 16421
    .local v41, "displayInfo":Landroid/view/DisplayInfo;
    new-instance v14, Landroid/view/SurfaceControl;

    move-object/from16 v0, p0

    iget-object v15, v0, mFxSession:Landroid/view/SurfaceSession;

    const-string/jumbo v16, "thumbnail anim"

    invoke-virtual/range {v38 .. v38}, Landroid/graphics/Rect;->width()I

    move-result v17

    invoke-virtual/range {v38 .. v38}, Landroid/graphics/Rect;->height()I

    move-result v18

    const/16 v19, -0x3

    const/16 v20, 0x4

    invoke-direct/range {v14 .. v20}, Landroid/view/SurfaceControl;-><init>(Landroid/view/SurfaceSession;Ljava/lang/String;IIII)V

    .line 16424
    .local v14, "surfaceControl":Landroid/view/SurfaceControl;
    invoke-virtual/range {v39 .. v39}, Landroid/view/Display;->getLayerStack()I

    move-result v4

    invoke-virtual {v14, v4}, Landroid/view/SurfaceControl;->setLayerStack(I)V

    .line 16430
    new-instance v43, Landroid/view/Surface;

    invoke-direct/range {v43 .. v43}, Landroid/view/Surface;-><init>()V

    .line 16431
    .local v43, "drawSurface":Landroid/view/Surface;
    move-object/from16 v0, v43

    invoke-virtual {v0, v14}, Landroid/view/Surface;->copyFrom(Landroid/view/SurfaceControl;)V

    .line 16432
    move-object/from16 v0, v43

    move-object/from16 v1, v38

    invoke-virtual {v0, v1}, Landroid/view/Surface;->lockCanvas(Landroid/graphics/Rect;)Landroid/graphics/Canvas;

    move-result-object v27

    .line 16433
    .local v27, "c":Landroid/graphics/Canvas;
    const/4 v4, 0x0

    const/4 v7, 0x0

    const/4 v9, 0x0

    move-object/from16 v0, v27

    move-object/from16 v1, v61

    invoke-virtual {v0, v1, v4, v7, v9}, Landroid/graphics/Canvas;->drawBitmap(Landroid/graphics/Bitmap;FFLandroid/graphics/Paint;)V

    .line 16434
    move-object/from16 v0, v43

    move-object/from16 v1, v27

    invoke-virtual {v0, v1}, Landroid/view/Surface;->unlockCanvasAndPost(Landroid/graphics/Canvas;)V

    .line 16435
    invoke-virtual/range {v43 .. v43}, Landroid/view/Surface;->release()V

    .line 16439
    invoke-virtual/range {v51 .. v51}, Lcom/android/server/wm/AppTransition;->isNextThumbnailTransitionAspectScaled()Z

    move-result v4

    if-eqz v4, :cond_96e

    .line 16444
    move-object/from16 v0, v41

    iget v4, v0, Landroid/view/DisplayInfo;->appWidth:I

    move-object/from16 v0, v41

    iget v7, v0, Landroid/view/DisplayInfo;->appHeight:I

    move-object/from16 v0, v41

    iget v9, v0, Landroid/view/DisplayInfo;->logicalWidth:I

    move-object/from16 v0, v51

    invoke-virtual {v0, v4, v7, v9, v8}, Lcom/android/server/wm/AppTransition;->createThumbnailAspectScaleAnimationLocked(IIII)Landroid/view/animation/Animation;

    move-result-object v22

    .line 16447
    .local v22, "anim":Landroid/view/animation/Animation;
    move/from16 v0, v73

    move/from16 v1, v71

    invoke-static {v0, v1}, Ljava/lang/Math;->max(II)I

    move-result v4

    move-object/from16 v0, v65

    iput v4, v0, Lcom/android/server/wm/AppWindowAnimator;->thumbnailForceAboveLayer:I

    .line 16449
    invoke-virtual/range {v51 .. v51}, Lcom/android/server/wm/AppTransition;->isNextThumbnailTransitionScaleUp()Z

    move-result v4

    if-nez v4, :cond_96b

    const/4 v4, 0x1

    :goto_882
    move-object/from16 v0, v65

    iput-boolean v4, v0, Lcom/android/server/wm/AppWindowAnimator;->deferThumbnailDestruction:Z

    .line 16455
    :goto_886
    const-wide/16 v16, 0x2710

    move-object/from16 v0, v22

    move-wide/from16 v1, v16

    invoke-virtual {v0, v1, v2}, Landroid/view/animation/Animation;->restrictDuration(J)V

    .line 16456
    invoke-virtual/range {p0 .. p0}, getTransitionAnimationScaleLocked()F

    move-result v4

    move-object/from16 v0, v22

    invoke-virtual {v0, v4}, Landroid/view/animation/Animation;->scaleCurrentDuration(F)V

    .line 16458
    move-object/from16 v0, v65

    iput-object v14, v0, Lcom/android/server/wm/AppWindowAnimator;->thumbnail:Landroid/view/SurfaceControl;

    .line 16459
    move/from16 v0, v73

    move-object/from16 v1, v65

    iput v0, v1, Lcom/android/server/wm/AppWindowAnimator;->thumbnailLayer:I

    .line 16460
    move-object/from16 v0, v22

    move-object/from16 v1, v65

    iput-object v0, v1, Lcom/android/server/wm/AppWindowAnimator;->thumbnailAnimation:Landroid/view/animation/Animation;

    .line 16462
    if-eqz v68, :cond_97e

    move-object/from16 v0, v68

    iget v4, v0, Landroid/view/MagnificationSpec;->scale:F

    const/high16 v7, 0x3f800000    # 1.0f

    cmpg-float v4, v4, v7

    if-gez v4, :cond_97e

    .line 16465
    move-object/from16 v0, v68

    iget v4, v0, Landroid/view/MagnificationSpec;->offsetX:F

    invoke-virtual/range {v51 .. v51}, Lcom/android/server/wm/AppTransition;->getStartingX()I

    move-result v7

    int-to-float v7, v7

    move-object/from16 v0, v68

    iget v9, v0, Landroid/view/MagnificationSpec;->scale:F

    mul-float/2addr v7, v9

    add-float/2addr v4, v7

    float-to-int v4, v4

    move-object/from16 v0, v65

    iput v4, v0, Lcom/android/server/wm/AppWindowAnimator;->thumbnailX:I

    .line 16466
    move-object/from16 v0, v68

    iget v4, v0, Landroid/view/MagnificationSpec;->offsetY:F

    invoke-virtual/range {v51 .. v51}, Lcom/android/server/wm/AppTransition;->getStartingY()I

    move-result v7

    int-to-float v7, v7

    move-object/from16 v0, v68

    iget v9, v0, Landroid/view/MagnificationSpec;->scale:F

    mul-float/2addr v7, v9

    add-float/2addr v4, v7

    float-to-int v4, v4

    move-object/from16 v0, v65

    iput v4, v0, Lcom/android/server/wm/AppWindowAnimator;->thumbnailY:I
    :try_end_8dc
    .catch Landroid/view/Surface$OutOfResourcesException; {:try_start_806 .. :try_end_8dc} :catch_990

    .line 16479
    .end local v14    # "surfaceControl":Landroid/view/SurfaceControl;
    .end local v22    # "anim":Landroid/view/animation/Animation;
    .end local v27    # "c":Landroid/graphics/Canvas;
    .end local v38    # "dirty":Landroid/graphics/Rect;
    .end local v39    # "display":Landroid/view/Display;
    .end local v40    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v41    # "displayInfo":Landroid/view/DisplayInfo;
    .end local v43    # "drawSurface":Landroid/view/Surface;
    .end local v68    # "spec":Landroid/view/MagnificationSpec;
    :cond_8dc
    :goto_8dc
    move-object/from16 v0, v51

    move-object/from16 v1, v65

    move-object/from16 v2, v32

    invoke-virtual {v0, v1, v2}, Lcom/android/server/wm/AppTransition;->goodToGo(Lcom/android/server/wm/AppWindowAnimator;Lcom/android/server/wm/AppWindowAnimator;)V

    .line 16480
    invoke-virtual/range {v51 .. v51}, Lcom/android/server/wm/AppTransition;->postAnimationCallback()V

    .line 16482
    sget-boolean v4, Lcom/android/server/wm/DualScreenTransition;->DEBUG:Z

    if-eqz v4, :cond_913

    .line 16483
    const-string v4, "WindowManager"

    new-instance v7, Ljava/lang/StringBuilder;

    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v9, "handleAppTransitionReadyLocked[d"

    invoke-virtual {v7, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    move/from16 v0, p2

    invoke-virtual {v7, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v7

    const-string v9, "]"

    invoke-virtual {v7, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    const-string v9, " call postAnimationCallback()"

    invoke-virtual {v7, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v7

    invoke-static {v4, v7}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 16493
    :cond_913
    invoke-virtual/range {v51 .. v51}, Lcom/android/server/wm/AppTransition;->clear()V

    .line 16495
    invoke-virtual/range {v55 .. v55}, Landroid/util/ArraySet;->clear()V

    .line 16496
    invoke-virtual/range {v52 .. v52}, Landroid/util/ArraySet;->clear()V

    .line 16500
    const/4 v4, 0x1

    move-object/from16 v0, p0

    invoke-virtual {v0, v4}, moveMultiWindowCenterBarLocked(Z)Z

    .line 16506
    or-int/lit8 v30, v30, 0x3

    .line 16510
    move-object/from16 v0, p0

    move/from16 v1, p2

    invoke-virtual {v0, v1}, getDisplayContentLocked(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v4

    const/4 v7, 0x1

    iput-boolean v7, v4, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    .line 16519
    move-object/from16 v0, p0

    move/from16 v1, p2

    invoke-virtual {v0, v1}, getDisplayContentLocked(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v4

    invoke-virtual {v4}, Lcom/android/server/wm/DisplayContent;->getWindowList()Lcom/android/server/wm/WindowList;

    move-result-object v4

    move-object/from16 v0, p1

    if-ne v0, v4, :cond_94b

    const/4 v4, 0x1

    move-object/from16 v0, p0

    invoke-virtual {v0, v4}, moveInputMethodWindowsIfNeededLocked(Z)Z

    move-result v4

    if-nez v4, :cond_94b

    .line 16523
    invoke-direct/range {p0 .. p1}, assignLayersLocked(Lcom/android/server/wm/WindowList;)V

    .line 16525
    :cond_94b
    const/4 v4, 0x2

    const/4 v7, 0x1

    move-object/from16 v0, p0

    invoke-direct {v0, v4, v7}, updateFocusedWindowLocked(IZ)Z

    .line 16526
    const/4 v4, 0x0

    move-object/from16 v0, p0

    iput-boolean v4, v0, mFocusMayChange:Z

    .line 16530
    .end local v6    # "animLp":Landroid/view/WindowManager$LayoutParams;
    .end local v8    # "transit":I
    .end local v10    # "voiceInteraction":Z
    .end local v13    # "appAnimLp":Landroid/view/WindowManager$LayoutParams;
    .end local v25    # "appsShowWhenLocked":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/view/IApplicationToken;>;"
    .end local v26    # "bestAnimLayer":I
    .end local v32    # "closingAppAnimator":Lcom/android/server/wm/AppWindowAnimator;
    .end local v33    # "closingAppHasWallpaper":Z
    .end local v34    # "closingAppsCount":I
    .end local v45    # "fullscreenAnim":Z
    .end local v47    # "i":I
    .end local v61    # "nextAppTransitionThumbnail":Landroid/graphics/Bitmap;
    .end local v63    # "oldWallpaper":Lcom/android/server/wm/WindowState;
    .end local v65    # "openingAppAnimator":Lcom/android/server/wm/AppWindowAnimator;
    .end local v66    # "openingAppHasWallpaper":Z
    .end local v70    # "topClosingApp":Lcom/android/server/wm/AppWindowToken;
    .end local v71    # "topClosingLayer":I
    .end local v72    # "topOpeningApp":Lcom/android/server/wm/AppWindowToken;
    .end local v73    # "topOpeningLayer":I
    .end local v74    # "upperWallpaperAppToken":Lcom/android/server/wm/AppWindowToken;
    :cond_957
    return v30

    .line 16380
    .restart local v6    # "animLp":Landroid/view/WindowManager$LayoutParams;
    .restart local v8    # "transit":I
    .restart local v10    # "voiceInteraction":Z
    .restart local v13    # "appAnimLp":Landroid/view/WindowManager$LayoutParams;
    .restart local v25    # "appsShowWhenLocked":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/view/IApplicationToken;>;"
    .restart local v26    # "bestAnimLayer":I
    .restart local v31    # "closeAppWindwtoken":Lcom/android/server/wm/AppWindowToken;
    .restart local v33    # "closingAppHasWallpaper":Z
    .restart local v34    # "closingAppsCount":I
    .restart local v35    # "closingCount":I
    .restart local v45    # "fullscreenAnim":Z
    .restart local v47    # "i":I
    .restart local v63    # "oldWallpaper":Lcom/android/server/wm/WindowState;
    .restart local v64    # "openAppWindwtoken":Lcom/android/server/wm/AppWindowToken;
    .restart local v66    # "openingAppHasWallpaper":Z
    .restart local v67    # "openingCount":I
    .restart local v70    # "topClosingApp":Lcom/android/server/wm/AppWindowToken;
    .restart local v71    # "topClosingLayer":I
    .restart local v72    # "topOpeningApp":Lcom/android/server/wm/AppWindowToken;
    .restart local v73    # "topOpeningLayer":I
    .restart local v74    # "upperWallpaperAppToken":Lcom/android/server/wm/AppWindowToken;
    :cond_958
    const/4 v4, 0x0

    goto/16 :goto_7a1

    .line 16386
    .end local v31    # "closeAppWindwtoken":Lcom/android/server/wm/AppWindowToken;
    .end local v35    # "closingCount":I
    .end local v64    # "openAppWindwtoken":Lcom/android/server/wm/AppWindowToken;
    .end local v67    # "openingCount":I
    :cond_95b
    move-object/from16 v0, v72

    iget-object v0, v0, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    move-object/from16 v65, v0

    goto/16 :goto_7a8

    .line 16388
    .restart local v65    # "openingAppAnimator":Lcom/android/server/wm/AppWindowAnimator;
    :cond_963
    move-object/from16 v0, v70

    iget-object v0, v0, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    move-object/from16 v32, v0

    goto/16 :goto_7ac

    .line 16449
    .restart local v14    # "surfaceControl":Landroid/view/SurfaceControl;
    .restart local v22    # "anim":Landroid/view/animation/Animation;
    .restart local v27    # "c":Landroid/graphics/Canvas;
    .restart local v32    # "closingAppAnimator":Lcom/android/server/wm/AppWindowAnimator;
    .restart local v38    # "dirty":Landroid/graphics/Rect;
    .restart local v39    # "display":Landroid/view/Display;
    .restart local v40    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .restart local v41    # "displayInfo":Landroid/view/DisplayInfo;
    .restart local v43    # "drawSurface":Landroid/view/Surface;
    .restart local v61    # "nextAppTransitionThumbnail":Landroid/graphics/Bitmap;
    .restart local v68    # "spec":Landroid/view/MagnificationSpec;
    :cond_96b
    const/4 v4, 0x0

    goto/16 :goto_882

    .line 16452
    .end local v22    # "anim":Landroid/view/animation/Animation;
    :cond_96e
    :try_start_96e
    move-object/from16 v0, v41

    iget v4, v0, Landroid/view/DisplayInfo;->appWidth:I

    move-object/from16 v0, v41

    iget v7, v0, Landroid/view/DisplayInfo;->appHeight:I

    move-object/from16 v0, v51

    invoke-virtual {v0, v4, v7, v8}, Lcom/android/server/wm/AppTransition;->createThumbnailScaleAnimationLocked(III)Landroid/view/animation/Animation;

    move-result-object v22

    .restart local v22    # "anim":Landroid/view/animation/Animation;
    goto/16 :goto_886

    .line 16469
    :cond_97e
    invoke-virtual/range {v51 .. v51}, Lcom/android/server/wm/AppTransition;->getStartingX()I

    move-result v4

    move-object/from16 v0, v65

    iput v4, v0, Lcom/android/server/wm/AppWindowAnimator;->thumbnailX:I

    .line 16470
    invoke-virtual/range {v51 .. v51}, Lcom/android/server/wm/AppTransition;->getStartingY()I

    move-result v4

    move-object/from16 v0, v65

    iput v4, v0, Lcom/android/server/wm/AppWindowAnimator;->thumbnailY:I
    :try_end_98e
    .catch Landroid/view/Surface$OutOfResourcesException; {:try_start_96e .. :try_end_98e} :catch_990

    goto/16 :goto_8dc

    .line 16472
    .end local v14    # "surfaceControl":Landroid/view/SurfaceControl;
    .end local v22    # "anim":Landroid/view/animation/Animation;
    .end local v27    # "c":Landroid/graphics/Canvas;
    .end local v39    # "display":Landroid/view/Display;
    .end local v40    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v41    # "displayInfo":Landroid/view/DisplayInfo;
    .end local v43    # "drawSurface":Landroid/view/Surface;
    :catch_990
    move-exception v44

    .line 16473
    .local v44, "e":Landroid/view/Surface$OutOfResourcesException;
    const-string v4, "WindowManager"

    new-instance v7, Ljava/lang/StringBuilder;

    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    const-string v9, "Can\'t allocate thumbnail/Canvas surface w="

    invoke-virtual {v7, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual/range {v38 .. v38}, Landroid/graphics/Rect;->width()I

    move-result v9

    invoke-virtual {v7, v9}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v7

    const-string v9, " h="

    invoke-virtual {v7, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual/range {v38 .. v38}, Landroid/graphics/Rect;->height()I

    move-result v9

    invoke-virtual {v7, v9}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v7

    move-object/from16 v0, v44

    invoke-static {v4, v7, v0}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 16475
    invoke-virtual/range {v65 .. v65}, Lcom/android/server/wm/AppWindowAnimator;->clearThumbnail()V

    goto/16 :goto_8dc

    .line 16149
    :pswitch_data_9c2
    .packed-switch 0x6
        :pswitch_495
        :pswitch_499
        :pswitch_495
        :pswitch_499
        :pswitch_495
        :pswitch_499
    .end packed-switch
.end method

.method public handleDisplayAdded(I)V
    .registers 5
    .param p1, "displayId"    # I

    .prologue
    .line 20134
    iget-object v2, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v2

    .line 20135
    :try_start_3
    iget-object v1, p0, mDisplayManager:Landroid/hardware/display/DisplayManager;

    invoke-virtual {v1, p1}, Landroid/hardware/display/DisplayManager;->getDisplay(I)Landroid/view/Display;

    move-result-object v0

    .line 20136
    .local v0, "display":Landroid/view/Display;
    if-eqz v0, :cond_11

    .line 20137
    invoke-virtual {p0, v0}, createDisplayContentLocked(Landroid/view/Display;)V

    .line 20138
    invoke-direct {p0, p1}, displayReady(I)V

    .line 20140
    :cond_11
    invoke-virtual {p0}, requestTraversalLocked()V

    .line 20141
    monitor-exit v2

    .line 20142
    return-void

    .line 20141
    .end local v0    # "display":Landroid/view/Display;
    :catchall_16
    move-exception v1

    monitor-exit v2
    :try_end_18
    .catchall {:try_start_3 .. :try_end_18} :catchall_16

    throw v1
.end method

.method public hasLastDrawnFocusedStackFrameId()Z
    .registers 2

    .prologue
    .line 20836
    iget v0, p0, mLastDrawnFoucsedStackFrameId:I

    if-lez v0, :cond_6

    const/4 v0, 0x1

    :goto_5
    return v0

    :cond_6
    const/4 v0, 0x0

    goto :goto_5
.end method

.method public hasMultipleShowingInstances(Landroid/os/IBinder;)Z
    .registers 9
    .param p1, "imClientBinder"    # Landroid/os/IBinder;

    .prologue
    .line 23490
    iget-object v5, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v5

    .line 23491
    :try_start_3
    invoke-virtual {p0}, getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v4

    invoke-virtual {v4}, Lcom/android/server/wm/DisplayContent;->getWindowList()Lcom/android/server/wm/WindowList;

    move-result-object v3

    .line 23492
    .local v3, "windows":Lcom/android/server/wm/WindowList;
    const/4 v0, 0x0

    .line 23493
    .local v0, "foundWindow":Lcom/android/server/wm/WindowState;
    const/4 v1, 0x0

    .local v1, "i":I
    :goto_d
    invoke-virtual {v3}, Lcom/android/server/wm/WindowList;->size()I

    move-result v4

    if-ge v1, v4, :cond_62

    .line 23494
    invoke-virtual {v3, v1}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/wm/WindowState;

    .line 23495
    .local v2, "w":Lcom/android/server/wm/WindowState;
    invoke-virtual {v2}, Lcom/android/server/wm/WindowState;->getMultiWindowStyleLw()Lcom/samsung/android/multiwindow/MultiWindowStyle;

    move-result-object v4

    invoke-virtual {v4}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->isNormal()Z

    move-result v4

    if-nez v4, :cond_5f

    iget-object v4, v2, Lcom/android/server/wm/WindowState;->mSession:Lcom/android/server/wm/Session;

    iget-object v4, v4, Lcom/android/server/wm/Session;->mClient:Lcom/android/internal/view/IInputMethodClient;

    invoke-interface {v4}, Lcom/android/internal/view/IInputMethodClient;->asBinder()Landroid/os/IBinder;

    move-result-object v4

    if-ne v4, p1, :cond_5f

    .line 23497
    if-eqz v0, :cond_58

    .line 23498
    iget-object v4, v0, Lcom/android/server/wm/WindowState;->mClient:Landroid/view/IWindow;

    invoke-interface {v4}, Landroid/view/IWindow;->asBinder()Landroid/os/IBinder;

    move-result-object v4

    iget-object v6, v2, Lcom/android/server/wm/WindowState;->mClient:Landroid/view/IWindow;

    invoke-interface {v6}, Landroid/view/IWindow;->asBinder()Landroid/os/IBinder;

    move-result-object v6

    if-eq v4, v6, :cond_5f

    invoke-virtual {v0}, Lcom/android/server/wm/WindowState;->getMultiWindowStyleLw()Lcom/samsung/android/multiwindow/MultiWindowStyle;

    move-result-object v4

    invoke-virtual {v4}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->getZone()I

    move-result v4

    invoke-virtual {v2}, Lcom/android/server/wm/WindowState;->getMultiWindowStyleLw()Lcom/samsung/android/multiwindow/MultiWindowStyle;

    move-result-object v6

    invoke-virtual {v6}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->getZone()I

    move-result v6

    if-eq v4, v6, :cond_5f

    invoke-virtual {v2}, Lcom/android/server/wm/WindowState;->isVisibleLw()Z

    move-result v4

    if-eqz v4, :cond_5f

    .line 23501
    const/4 v4, 0x1

    monitor-exit v5

    .line 23512
    .end local v2    # "w":Lcom/android/server/wm/WindowState;
    :goto_57
    return v4

    .line 23505
    .restart local v2    # "w":Lcom/android/server/wm/WindowState;
    :cond_58
    invoke-virtual {v2}, Lcom/android/server/wm/WindowState;->isVisibleLw()Z

    move-result v4

    if-eqz v4, :cond_5f

    .line 23506
    move-object v0, v2

    .line 23493
    :cond_5f
    add-int/lit8 v1, v1, 0x1

    goto :goto_d

    .line 23511
    .end local v2    # "w":Lcom/android/server/wm/WindowState;
    :cond_62
    monitor-exit v5

    .line 23512
    const/4 v4, 0x0

    goto :goto_57

    .line 23511
    .end local v0    # "foundWindow":Lcom/android/server/wm/WindowState;
    .end local v1    # "i":I
    .end local v3    # "windows":Lcom/android/server/wm/WindowList;
    :catchall_65
    move-exception v4

    monitor-exit v5
    :try_end_67
    .catchall {:try_start_3 .. :try_end_67} :catchall_65

    throw v4
.end method

.method public hasNavigationBar()Z
    .registers 2

    .prologue
    .line 19243
    iget-object v0, p0, mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v0}, Landroid/view/WindowManagerPolicy;->hasNavigationBar()Z

    move-result v0

    return v0
.end method

.method hasWallpaperTargetVisible()Z
    .registers 4

    .prologue
    .line 16537
    iget-object v2, p0, mWallpaperInnerStates:Lcom/samsung/android/multidisplay/common/FallbackArrayList;

    invoke-virtual {v2}, Lcom/samsung/android/multidisplay/common/FallbackArrayList;->iterator()Ljava/util/Iterator;

    move-result-object v0

    .local v0, "i$":Ljava/util/Iterator;
    :cond_6
    invoke-interface {v0}, Ljava/util/Iterator;->hasNext()Z

    move-result v2

    if-eqz v2, :cond_26

    invoke-interface {v0}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/wm/WindowManagerService$WallpaperInnerState;

    .line 16538
    .local v1, "wis":Lcom/android/server/wm/WindowManagerService$WallpaperInnerState;
    iget-object v2, v1, Lcom/android/server/wm/WindowManagerService$WallpaperInnerState;->mWallpaperTarget:Lcom/android/server/wm/WindowState;

    if-eqz v2, :cond_6

    iget-object v2, v1, Lcom/android/server/wm/WindowManagerService$WallpaperInnerState;->mWallpaperTarget:Lcom/android/server/wm/WindowState;

    invoke-virtual {v2}, Lcom/android/server/wm/WindowState;->isVisibleLw()Z

    move-result v2

    if-nez v2, :cond_24

    iget-object v2, v1, Lcom/android/server/wm/WindowManagerService$WallpaperInnerState;->mWallpaperTarget:Lcom/android/server/wm/WindowState;

    iget-boolean v2, v2, Lcom/android/server/wm/WindowState;->mExiting:Z

    if-eqz v2, :cond_6

    .line 16539
    :cond_24
    const/4 v2, 0x1

    .line 16542
    .end local v1    # "wis":Lcom/android/server/wm/WindowManagerService$WallpaperInnerState;
    :goto_25
    return v2

    :cond_26
    const/4 v2, 0x0

    goto :goto_25
.end method

.method public hideBootMessagesLocked()V
    .registers 2

    .prologue
    .line 10569
    iget-boolean v0, p0, mShowingBootMessages:Z

    if-eqz v0, :cond_c

    .line 10570
    const/4 v0, 0x0

    iput-boolean v0, p0, mShowingBootMessages:Z

    .line 10571
    iget-object v0, p0, mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v0}, Landroid/view/WindowManagerPolicy;->hideBootMessages()V

    .line 10573
    :cond_c
    return-void
.end method

.method hideWallpapersLocked(Lcom/android/server/wm/WindowState;)V
    .registers 19
    .param p1, "winGoingAway"    # Lcom/android/server/wm/WindowState;

    .prologue
    .line 3136
    const/4 v12, 0x0

    .line 3141
    .local v12, "wis":Lcom/android/server/wm/WindowManagerService$WallpaperInnerState;
    move-object/from16 v0, p0

    iget-object v8, v0, mWallpaperTarget:Lcom/android/server/wm/WindowState;

    .line 3142
    .local v8, "wallpaperTarget":Lcom/android/server/wm/WindowState;
    move-object/from16 v0, p0

    iget-object v5, v0, mLowerWallpaperTarget:Lcom/android/server/wm/WindowState;

    .line 3143
    .local v5, "lowerWallpaperTarget":Lcom/android/server/wm/WindowState;
    move-object/from16 v0, p0

    iget-object v9, v0, mWallpaperTokens:Ljava/util/ArrayList;

    .line 3146
    .local v9, "wallpaperTokens":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/WindowToken;>;"
    move-object/from16 v0, p0

    iget-object v13, v0, mWallpaperTarget:Lcom/android/server/wm/WindowState;

    if-eqz v13, :cond_33

    .line 3147
    move-object/from16 v0, p0

    iget-object v13, v0, mWallpaperTarget:Lcom/android/server/wm/WindowState;

    move-object/from16 v0, p1

    if-ne v13, v0, :cond_21

    move-object/from16 v0, p0

    iget-object v13, v0, mLowerWallpaperTarget:Lcom/android/server/wm/WindowState;

    if-eqz v13, :cond_22

    .line 3179
    :cond_21
    :goto_21
    return-void

    .line 3150
    :cond_22
    move-object/from16 v0, p0

    iget-object v13, v0, mAppTransition:Lcom/android/server/wm/AppTransition;

    invoke-virtual {v13}, Lcom/android/server/wm/AppTransition;->isRunning()Z

    move-result v13

    if-eqz v13, :cond_33

    .line 3153
    move-object/from16 v0, p1

    move-object/from16 v1, p0

    iput-object v0, v1, mDeferredHideWallpaper:Lcom/android/server/wm/WindowState;

    goto :goto_21

    .line 3158
    :cond_33
    move-object/from16 v0, p0

    iget-object v13, v0, mDeferredHideWallpaper:Lcom/android/server/wm/WindowState;

    move-object/from16 v0, p1

    if-ne v13, v0, :cond_84

    const/4 v10, 0x1

    .line 3159
    .local v10, "wasDeferred":Z
    :goto_3c
    move-object/from16 v0, p0

    iget-object v13, v0, mWallpaperTokens:Ljava/util/ArrayList;

    invoke-virtual {v13}, Ljava/util/ArrayList;->size()I

    move-result v13

    add-int/lit8 v3, v13, -0x1

    .local v3, "i":I
    :goto_46
    if-ltz v3, :cond_21

    .line 3160
    move-object/from16 v0, p0

    iget-object v13, v0, mWallpaperTokens:Ljava/util/ArrayList;

    invoke-virtual {v13, v3}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Lcom/android/server/wm/WindowToken;

    .line 3161
    .local v6, "token":Lcom/android/server/wm/WindowToken;
    iget-object v13, v6, Lcom/android/server/wm/WindowToken;->windows:Lcom/android/server/wm/WindowList;

    invoke-virtual {v13}, Lcom/android/server/wm/WindowList;->size()I

    move-result v13

    add-int/lit8 v4, v13, -0x1

    .local v4, "j":I
    :goto_5a
    if-ltz v4, :cond_86

    .line 3162
    iget-object v13, v6, Lcom/android/server/wm/WindowToken;->windows:Lcom/android/server/wm/WindowList;

    invoke-virtual {v13, v4}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v7

    check-cast v7, Lcom/android/server/wm/WindowState;

    .line 3163
    .local v7, "wallpaper":Lcom/android/server/wm/WindowState;
    iget-object v11, v7, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    .line 3164
    .local v11, "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    iget-boolean v13, v11, Lcom/android/server/wm/WindowStateAnimator;->mLastHidden:Z

    if-eqz v13, :cond_6c

    if-eqz v10, :cond_81

    .line 3165
    :cond_6c
    invoke-virtual {v11}, Lcom/android/server/wm/WindowStateAnimator;->hide()V

    .line 3166
    const/4 v13, 0x0

    move-object/from16 v0, p0

    invoke-virtual {v0, v7, v13}, dispatchWallpaperVisibility(Lcom/android/server/wm/WindowState;Z)V

    .line 3167
    invoke-virtual {v7}, Lcom/android/server/wm/WindowState;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    move-result-object v2

    .line 3168
    .local v2, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-eqz v2, :cond_81

    .line 3169
    iget v13, v2, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    or-int/lit8 v13, v13, 0x4

    iput v13, v2, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    .line 3161
    .end local v2    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :cond_81
    add-int/lit8 v4, v4, -0x1

    goto :goto_5a

    .line 3158
    .end local v3    # "i":I
    .end local v4    # "j":I
    .end local v6    # "token":Lcom/android/server/wm/WindowToken;
    .end local v7    # "wallpaper":Lcom/android/server/wm/WindowState;
    .end local v10    # "wasDeferred":Z
    .end local v11    # "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    :cond_84
    const/4 v10, 0x0

    goto :goto_3c

    .line 3174
    .restart local v3    # "i":I
    .restart local v4    # "j":I
    .restart local v6    # "token":Lcom/android/server/wm/WindowToken;
    .restart local v10    # "wasDeferred":Z
    :cond_86
    sget-boolean v13, DEBUG_WALLPAPER_LIGHT:Z

    if-eqz v13, :cond_df

    iget-boolean v13, v6, Lcom/android/server/wm/WindowToken;->hidden:Z

    if-nez v13, :cond_df

    const-string v13, "WindowManager"

    new-instance v14, Ljava/lang/StringBuilder;

    invoke-direct {v14}, Ljava/lang/StringBuilder;-><init>()V

    const-string v15, "Hiding wallpaper "

    invoke-virtual {v14, v15}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v14

    invoke-virtual {v14, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v14

    const-string v15, " from "

    invoke-virtual {v14, v15}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v14

    move-object/from16 v0, p1

    invoke-virtual {v14, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v14

    const-string v15, " target="

    invoke-virtual {v14, v15}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v14

    move-object/from16 v0, p0

    iget-object v15, v0, mWallpaperTarget:Lcom/android/server/wm/WindowState;

    invoke-virtual {v14, v15}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v14

    const-string v15, " lower="

    invoke-virtual {v14, v15}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v14

    move-object/from16 v0, p0

    iget-object v15, v0, mLowerWallpaperTarget:Lcom/android/server/wm/WindowState;

    invoke-virtual {v14, v15}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v14

    const-string v15, "\n"

    invoke-virtual {v14, v15}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v14

    const/4 v15, 0x5

    const-string v16, "  "

    invoke-static/range {v15 .. v16}, Landroid/os/Debug;->getCallers(ILjava/lang/String;)Ljava/lang/String;

    move-result-object v15

    invoke-virtual {v14, v15}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v14

    invoke-virtual {v14}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v14

    invoke-static {v13, v14}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 3177
    :cond_df
    const/4 v13, 0x1

    iput-boolean v13, v6, Lcom/android/server/wm/WindowToken;->hidden:Z

    .line 3159
    add-int/lit8 v3, v3, -0x1

    goto/16 :goto_46
.end method

.method public inKeyguardRestrictedInputMode()Z
    .registers 2

    .prologue
    .line 9838
    iget-object v0, p0, mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v0}, Landroid/view/WindowManagerPolicy;->inKeyguardRestrictedKeyInputMode()Z

    move-result v0

    return v0
.end method

.method public inputMethodClientHasFocus(Lcom/android/internal/view/IInputMethodClient;)Z
    .registers 12
    .param p1, "client"    # Lcom/android/internal/view/IInputMethodClient;

    .prologue
    const/4 v4, 0x1

    const/4 v5, 0x0

    .line 14289
    iget-object v6, p0, mKeyguardWaitingForActivityDrawnLock:Ljava/lang/Object;

    monitor-enter v6

    .line 14290
    :try_start_5
    iget-boolean v7, p0, mKeyguardWaitingForActivityDrawn:Z

    if-eqz v7, :cond_15

    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v7

    invoke-static {}, Landroid/os/Process;->myPid()I

    move-result v8

    if-ne v7, v8, :cond_15

    .line 14291
    monitor-exit v6

    .line 14359
    :goto_14
    return v4

    .line 14293
    :cond_15
    monitor-exit v6
    :try_end_16
    .catchall {:try_start_5 .. :try_end_16} :catchall_38

    .line 14295
    iget-object v6, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v6

    .line 14298
    :try_start_19
    iget-object v7, p0, mCurrentFocus:Lcom/android/server/wm/WindowState;

    if-eqz v7, :cond_3b

    iget-object v7, p0, mCurrentFocus:Lcom/android/server/wm/WindowState;

    invoke-virtual {v7}, Lcom/android/server/wm/WindowState;->getMultiWindowStyleLw()Lcom/samsung/android/multiwindow/MultiWindowStyle;

    move-result-object v7

    invoke-virtual {v7}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->isCascade()Z

    move-result v7

    if-eqz v7, :cond_3b

    iget-object v7, p0, mCurrentFocus:Lcom/android/server/wm/WindowState;

    iget-object v7, v7, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v7, v7, Landroid/view/WindowManager$LayoutParams;->flags:I

    invoke-static {v7}, Landroid/view/WindowManager$LayoutParams;->mayUseInputMethod(I)Z

    move-result v7

    if-nez v7, :cond_3b

    .line 14300
    monitor-exit v6
    :try_end_36
    .catchall {:try_start_19 .. :try_end_36} :catchall_a2

    move v4, v5

    goto :goto_14

    .line 14293
    :catchall_38
    move-exception v4

    :try_start_39
    monitor-exit v6
    :try_end_3a
    .catchall {:try_start_39 .. :try_end_3a} :catchall_38

    throw v4

    .line 14306
    :cond_3b
    const/4 v7, 0x0

    :try_start_3c
    invoke-virtual {p0, v7}, findDesiredInputMethodWindowIndexLocked(Z)I

    move-result v1

    .line 14307
    .local v1, "idx":I
    if-lez v1, :cond_a8

    .line 14309
    invoke-virtual {p0}, getDefaultWindowListLocked()Lcom/android/server/wm/WindowList;

    move-result-object v7

    add-int/lit8 v8, v1, -0x1

    invoke-virtual {v7, v8}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/wm/WindowState;

    .line 14315
    .local v2, "imFocus":Lcom/android/server/wm/WindowState;
    if-eqz v2, :cond_a8

    .line 14318
    iget-object v7, v2, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v7, v7, Landroid/view/WindowManager$LayoutParams;->type:I

    const/4 v8, 0x3

    if-ne v7, v8, :cond_8b

    iget-object v7, v2, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    if-eqz v7, :cond_8b

    .line 14322
    const/4 v0, 0x0

    .local v0, "i":I
    :goto_5c
    iget-object v7, v2, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    iget-object v7, v7, Lcom/android/server/wm/AppWindowToken;->windows:Lcom/android/server/wm/WindowList;

    invoke-virtual {v7}, Lcom/android/server/wm/WindowList;->size()I

    move-result v7

    if-ge v0, v7, :cond_8b

    .line 14323
    iget-object v7, v2, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    iget-object v7, v7, Lcom/android/server/wm/AppWindowToken;->windows:Lcom/android/server/wm/WindowList;

    invoke-virtual {v7, v0}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/wm/WindowState;

    .line 14324
    .local v3, "w":Lcom/android/server/wm/WindowState;
    if-eq v3, v2, :cond_a5

    .line 14325
    const-string v7, "WindowManager"

    new-instance v8, Ljava/lang/StringBuilder;

    invoke-direct {v8}, Ljava/lang/StringBuilder;-><init>()V

    const-string v9, "Switching to real app window: "

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v8

    invoke-virtual {v8, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v8

    invoke-virtual {v8}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v8

    invoke-static {v7, v8}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 14326
    move-object v2, v3

    .line 14339
    .end local v0    # "i":I
    .end local v3    # "w":Lcom/android/server/wm/WindowState;
    :cond_8b
    iget-object v7, v2, Lcom/android/server/wm/WindowState;->mSession:Lcom/android/server/wm/Session;

    iget-object v7, v7, Lcom/android/server/wm/Session;->mClient:Lcom/android/internal/view/IInputMethodClient;

    if-eqz v7, :cond_a8

    iget-object v7, v2, Lcom/android/server/wm/WindowState;->mSession:Lcom/android/server/wm/Session;

    iget-object v7, v7, Lcom/android/server/wm/Session;->mClient:Lcom/android/internal/view/IInputMethodClient;

    invoke-interface {v7}, Lcom/android/internal/view/IInputMethodClient;->asBinder()Landroid/os/IBinder;

    move-result-object v7

    invoke-interface {p1}, Lcom/android/internal/view/IInputMethodClient;->asBinder()Landroid/os/IBinder;

    move-result-object v8

    if-ne v7, v8, :cond_a8

    .line 14341
    monitor-exit v6

    goto/16 :goto_14

    .line 14358
    .end local v1    # "idx":I
    .end local v2    # "imFocus":Lcom/android/server/wm/WindowState;
    :catchall_a2
    move-exception v4

    monitor-exit v6
    :try_end_a4
    .catchall {:try_start_3c .. :try_end_a4} :catchall_a2

    throw v4

    .line 14322
    .restart local v0    # "i":I
    .restart local v1    # "idx":I
    .restart local v2    # "imFocus":Lcom/android/server/wm/WindowState;
    .restart local v3    # "w":Lcom/android/server/wm/WindowState;
    :cond_a5
    add-int/lit8 v0, v0, 0x1

    goto :goto_5c

    .line 14354
    .end local v0    # "i":I
    .end local v2    # "imFocus":Lcom/android/server/wm/WindowState;
    .end local v3    # "w":Lcom/android/server/wm/WindowState;
    :cond_a8
    :try_start_a8
    iget-object v7, p0, mCurrentFocus:Lcom/android/server/wm/WindowState;

    if-eqz v7, :cond_c7

    iget-object v7, p0, mCurrentFocus:Lcom/android/server/wm/WindowState;

    iget-object v7, v7, Lcom/android/server/wm/WindowState;->mSession:Lcom/android/server/wm/Session;

    iget-object v7, v7, Lcom/android/server/wm/Session;->mClient:Lcom/android/internal/view/IInputMethodClient;

    if-eqz v7, :cond_c7

    iget-object v7, p0, mCurrentFocus:Lcom/android/server/wm/WindowState;

    iget-object v7, v7, Lcom/android/server/wm/WindowState;->mSession:Lcom/android/server/wm/Session;

    iget-object v7, v7, Lcom/android/server/wm/Session;->mClient:Lcom/android/internal/view/IInputMethodClient;

    invoke-interface {v7}, Lcom/android/internal/view/IInputMethodClient;->asBinder()Landroid/os/IBinder;

    move-result-object v7

    invoke-interface {p1}, Lcom/android/internal/view/IInputMethodClient;->asBinder()Landroid/os/IBinder;

    move-result-object v8

    if-ne v7, v8, :cond_c7

    .line 14356
    monitor-exit v6

    goto/16 :goto_14

    .line 14358
    :cond_c7
    monitor-exit v6
    :try_end_c8
    .catchall {:try_start_a8 .. :try_end_c8} :catchall_a2

    move v4, v5

    .line 14359
    goto/16 :goto_14
.end method

.method public isAppTransitAnimAllowed(I)Z
    .registers 4
    .param p1, "displayId"    # I

    .prologue
    .line 23173
    iget-object v1, p0, mAnimator:Lcom/android/server/wm/WindowAnimator;

    invoke-virtual {v1}, Lcom/android/server/wm/WindowAnimator;->getDualScreenTransitionLocked()Lcom/android/server/wm/DualScreenTransition;

    move-result-object v0

    .line 23174
    .local v0, "dualScreenTransition":Lcom/android/server/wm/DualScreenTransition;
    if-eqz v0, :cond_d

    .line 23175
    invoke-virtual {v0, p1}, Lcom/android/server/wm/DualScreenTransition;->isAppTransitAnimAllowed(I)Z

    move-result v1

    .line 23177
    :goto_c
    return v1

    :cond_d
    const/4 v1, 0x1

    goto :goto_c
.end method

.method public isCarModeBarVisible()Z
    .registers 3

    .prologue
    .line 20213
    iget-object v1, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v1

    .line 20214
    :try_start_3
    iget-object v0, p0, mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v0}, Landroid/view/WindowManagerPolicy;->isCarModeBarVisible()Z

    move-result v0

    monitor-exit v1

    return v0

    .line 20215
    :catchall_b
    move-exception v0

    monitor-exit v1
    :try_end_d
    .catchall {:try_start_3 .. :try_end_d} :catchall_b

    throw v0
.end method

.method public isCascadeRunning()Z
    .registers 2

    .prologue
    .line 20392
    iget-boolean v0, p0, mIsCascadeAppRunniung:Z

    return v0
.end method

.method isCurrentProfileLocked(I)Z
    .registers 5
    .param p1, "userId"    # I

    .prologue
    const/4 v1, 0x1

    .line 10273
    iget v2, p0, mCurrentUserId:I

    if-ne p1, v2, :cond_6

    .line 10277
    :cond_5
    :goto_5
    return v1

    .line 10274
    :cond_6
    const/4 v0, 0x0

    .local v0, "i":I
    :goto_7
    iget-object v2, p0, mCurrentProfileIds:[I

    array-length v2, v2

    if-ge v0, v2, :cond_15

    .line 10275
    iget-object v2, p0, mCurrentProfileIds:[I

    aget v2, v2, v0

    if-eq v2, p1, :cond_5

    .line 10274
    add-int/lit8 v0, v0, 0x1

    goto :goto_7

    .line 10277
    :cond_15
    const/4 v1, 0x0

    goto :goto_5
.end method

.method public isDrawnAppWindow(I)Z
    .registers 10
    .param p1, "displayId"    # I

    .prologue
    const/4 v4, 0x1

    .line 22431
    iget-object v5, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v5

    .line 22432
    :try_start_4
    invoke-virtual {p0, p1}, getWindowListLocked(I)Lcom/android/server/wm/WindowList;

    move-result-object v2

    .line 22433
    .local v2, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual {v2}, Lcom/android/server/wm/WindowList;->size()I

    move-result v0

    .line 22434
    .local v0, "N":I
    const/4 v1, 0x0

    .local v1, "i":I
    :goto_d
    if-ge v1, v0, :cond_42

    .line 22435
    invoke-virtual {v2, v1}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/wm/WindowState;

    .line 22436
    .local v3, "ws":Lcom/android/server/wm/WindowState;
    iget-object v6, v3, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    if-eqz v6, :cond_23

    .line 22437
    invoke-virtual {v3}, Lcom/android/server/wm/WindowState;->getMultiWindowStyleLw()Lcom/samsung/android/multiwindow/MultiWindowStyle;

    move-result-object v6

    invoke-virtual {v6}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->isCascade()Z

    move-result v6

    if-eqz v6, :cond_26

    .line 22434
    :cond_23
    add-int/lit8 v1, v1, 0x1

    goto :goto_d

    .line 22440
    :cond_26
    iget-object v6, v3, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v6, v6, Landroid/view/WindowManager$LayoutParams;->type:I

    const/4 v7, 0x2

    if-eq v6, v7, :cond_3a

    iget-object v6, v3, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v6, v6, Landroid/view/WindowManager$LayoutParams;->type:I

    if-eq v6, v4, :cond_3a

    iget-object v6, v3, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v6, v6, Landroid/view/WindowManager$LayoutParams;->type:I

    const/4 v7, 0x3

    if-ne v6, v7, :cond_23

    :cond_3a
    invoke-virtual {v3}, Lcom/android/server/wm/WindowState;->isDrawFinishedLw()Z

    move-result v6

    if-eqz v6, :cond_23

    .line 22444
    monitor-exit v5

    .line 22448
    .end local v3    # "ws":Lcom/android/server/wm/WindowState;
    :goto_41
    return v4

    :cond_42
    const/4 v4, 0x0

    monitor-exit v5

    goto :goto_41

    .line 22449
    .end local v0    # "N":I
    .end local v1    # "i":I
    .end local v2    # "windows":Lcom/android/server/wm/WindowList;
    :catchall_45
    move-exception v4

    monitor-exit v5
    :try_end_47
    .catchall {:try_start_4 .. :try_end_47} :catchall_45

    throw v4
.end method

.method public isForceHideCascade()Z
    .registers 2

    .prologue
    .line 23486
    iget-object v0, p0, mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v0}, Landroid/view/WindowManagerPolicy;->isForceHideCascade()Z

    move-result v0

    return v0
.end method

.method public isFullInputMethod()Z
    .registers 3

    .prologue
    const/4 v0, 0x1

    .line 22589
    iget-boolean v1, p0, mFullInputMethod:Z

    if-eqz v1, :cond_e

    iget-object v1, p0, mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v1, v0}, Landroid/view/WindowManagerPolicy;->isScreenOn(I)Z

    move-result v1

    if-eqz v1, :cond_e

    :goto_d
    return v0

    :cond_e
    const/4 v0, 0x0

    goto :goto_d
.end method

.method public isHMTconnected()Z
    .registers 3

    .prologue
    .line 22288
    const-string/jumbo v0, "sys.hmt.connected"

    const/4 v1, 0x0

    invoke-static {v0, v1}, Landroid/os/SystemProperties;->getBoolean(Ljava/lang/String;Z)Z

    move-result v0

    return v0
.end method

.method public isHardKeyboardAvailable()Z
    .registers 3

    .prologue
    .line 12829
    iget-object v1, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v1

    .line 12830
    :try_start_3
    iget-boolean v0, p0, mHardKeyboardAvailable:Z

    monitor-exit v1

    return v0

    .line 12831
    :catchall_7
    move-exception v0

    monitor-exit v1
    :try_end_9
    .catchall {:try_start_3 .. :try_end_9} :catchall_7

    throw v0
.end method

.method public isKeyguardLocked()Z
    .registers 2

    .prologue
    .line 9853
    iget-object v0, p0, mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v0}, Landroid/view/WindowManagerPolicy;->isKeyguardLocked()Z

    move-result v0

    return v0
.end method

.method public isKeyguardSecure()Z
    .registers 4

    .prologue
    .line 9858
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 9860
    .local v0, "origId":J
    :try_start_4
    iget-object v2, p0, mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v2}, Landroid/view/WindowManagerPolicy;->isKeyguardSecure()Z
    :try_end_9
    .catchall {:try_start_4 .. :try_end_9} :catchall_e

    move-result v2

    .line 9862
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    return v2

    :catchall_e
    move-exception v2

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v2
.end method

.method public isKeyguardShowingAndNotOccluded()Z
    .registers 2

    .prologue
    .line 9843
    iget-object v0, p0, mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v0}, Landroid/view/WindowManagerPolicy;->isKeyguardShowingAndNotOccluded()Z

    move-result v0

    return v0
.end method

.method public isKeyguardShowingAndOccluded()Z
    .registers 2

    .prologue
    .line 9848
    iget-object v0, p0, mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v0}, Landroid/view/WindowManagerPolicy;->isKeyguardShowingAndOccluded()Z

    move-result v0

    return v0
.end method

.method public isMetaKeyEventRequested(Landroid/content/ComponentName;)Z
    .registers 3
    .param p1, "componentName"    # Landroid/content/ComponentName;

    .prologue
    .line 20241
    iget-object v0, p0, mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v0, p1}, Landroid/view/WindowManagerPolicy;->isMetaKeyEventRequested(Landroid/content/ComponentName;)Z

    move-result v0

    return v0
.end method

.method public isNavigationBarVisible()Z
    .registers 3

    .prologue
    .line 20205
    iget-object v1, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v1

    .line 20206
    :try_start_3
    iget-object v0, p0, mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v0}, Landroid/view/WindowManagerPolicy;->isNavigationBarVisible()Z

    move-result v0

    monitor-exit v1

    return v0

    .line 20207
    :catchall_b
    move-exception v0

    monitor-exit v1
    :try_end_d
    .catchall {:try_start_3 .. :try_end_d} :catchall_b

    throw v0
.end method

.method isOldWallpapeTargetNullOrVisible(Landroid/util/ArraySet;)Z
    .registers 8
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Landroid/util/ArraySet",
            "<",
            "Lcom/android/server/wm/AppWindowToken;",
            ">;)Z"
        }
    .end annotation

    .prologue
    .local p1, "candidateOpeningApps":Landroid/util/ArraySet;, "Landroid/util/ArraySet<Lcom/android/server/wm/AppWindowToken;>;"
    const/4 v4, 0x1

    .line 16546
    const/4 v2, 0x0

    .line 16547
    .local v2, "oldWallpaper":Lcom/android/server/wm/WindowState;
    const/4 v0, 0x0

    .line 16548
    .local v0, "foundCount":I
    iget-object v5, p0, mWallpaperInnerStates:Lcom/samsung/android/multidisplay/common/FallbackArrayList;

    invoke-virtual {v5}, Lcom/samsung/android/multidisplay/common/FallbackArrayList;->iterator()Ljava/util/Iterator;

    move-result-object v1

    .local v1, "i$":Ljava/util/Iterator;
    :cond_9
    invoke-interface {v1}, Ljava/util/Iterator;->hasNext()Z

    move-result v5

    if-eqz v5, :cond_24

    invoke-interface {v1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/wm/WindowManagerService$WallpaperInnerState;

    .line 16549
    .local v3, "wis":Lcom/android/server/wm/WindowManagerService$WallpaperInnerState;
    iget-object v2, v3, Lcom/android/server/wm/WindowManagerService$WallpaperInnerState;->mOldWallpaperTarget:Lcom/android/server/wm/WindowState;

    .line 16550
    if-eqz v2, :cond_9

    .line 16551
    add-int/lit8 v0, v0, 0x1

    .line 16552
    iget-object v5, v2, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    invoke-virtual {p1, v5}, Landroid/util/ArraySet;->contains(Ljava/lang/Object;)Z

    move-result v5

    if-eqz v5, :cond_9

    .line 16562
    .end local v3    # "wis":Lcom/android/server/wm/WindowManagerService$WallpaperInnerState;
    :cond_23
    :goto_23
    return v4

    .line 16558
    :cond_24
    if-eqz v0, :cond_23

    .line 16562
    const/4 v4, 0x0

    goto :goto_23
.end method

.method public isRotationFrozen()Z
    .registers 3

    .prologue
    const/4 v0, 0x1

    .line 11894
    iget-object v1, p0, mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v1}, Landroid/view/WindowManagerPolicy;->getUserRotationMode()I

    move-result v1

    if-ne v1, v0, :cond_a

    :goto_9
    return v0

    :cond_a
    const/4 v0, 0x0

    goto :goto_9
.end method

.method public isSafeModeEnabled()Z
    .registers 2

    .prologue
    .line 19257
    iget-boolean v0, p0, mSafeMode:Z

    return v0
.end method

.method public isScaledPid(I)Z
    .registers 4
    .param p1, "pid"    # I

    .prologue
    .line 3979
    iget-object v0, p0, mScaledPids:Ljava/util/HashMap;

    invoke-static {p1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v1

    invoke-virtual {v0, v1}, Ljava/util/HashMap;->containsKey(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_e

    .line 3980
    const/4 v0, 0x1

    .line 3981
    :goto_d
    return v0

    :cond_e
    const/4 v0, 0x0

    goto :goto_d
.end method

.method isScreenCaptureDisabledLocked(I)Z
    .registers 4
    .param p1, "userId"    # I

    .prologue
    .line 4571
    iget-object v1, p0, mScreenCaptureDisabled:Landroid/util/SparseArray;

    invoke-virtual {v1, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Ljava/lang/Boolean;

    .line 4572
    .local v0, "disabled":Ljava/lang/Boolean;
    if-nez v0, :cond_c

    .line 4573
    const/4 v1, 0x0

    .line 4575
    :goto_b
    return v1

    :cond_c
    invoke-virtual {v0}, Ljava/lang/Boolean;->booleanValue()Z

    move-result v1

    goto :goto_b
.end method

.method public isScreenOn(I)Z
    .registers 3
    .param p1, "displayId"    # I

    .prologue
    .line 23068
    iget-object v0, p0, mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v0, p1}, Landroid/view/WindowManagerPolicy;->isScreenOn(I)Z

    move-result v0

    return v0
.end method

.method public isScreenRotationAnimAllowed(I)Z
    .registers 8
    .param p1, "displayId"    # I

    .prologue
    .line 23143
    sget-boolean v3, Lcom/android/server/wm/DualScreenTransition;->DEBUG:Z

    if-eqz v3, :cond_22

    .line 23144
    const-string v3, "WindowManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v5, "isScreenRotationAllowed() callers="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    const/4 v5, 0x2

    invoke-static {v5}, Landroid/os/Debug;->getCallers(I)Ljava/lang/String;

    move-result-object v5

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v3, v4}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 23146
    :cond_22
    const/4 v2, 0x1

    .line 23147
    .local v2, "rotationAnimAllowed":Z
    invoke-virtual {p0, p1}, getAppTransitionForDisplayLocked(I)Lcom/android/server/wm/AppTransition;

    move-result-object v0

    .line 23148
    .local v0, "appTransition":Lcom/android/server/wm/AppTransition;
    iget-object v3, p0, mAnimator:Lcom/android/server/wm/WindowAnimator;

    invoke-virtual {v3}, Lcom/android/server/wm/WindowAnimator;->getDualScreenTransitionLocked()Lcom/android/server/wm/DualScreenTransition;

    move-result-object v1

    .line 23149
    .local v1, "dualScreenTransition":Lcom/android/server/wm/DualScreenTransition;
    if-eqz v1, :cond_3e

    .line 23150
    const/16 v3, 0x64

    invoke-virtual {v1, v3}, Lcom/android/server/wm/DualScreenTransition;->isTransitionEqual(I)Z

    move-result v3

    if-eqz v3, :cond_6c

    .line 23152
    invoke-virtual {v1}, Lcom/android/server/wm/DualScreenTransition;->isFullViewMoveTransition()Z

    move-result v3

    if-eqz v3, :cond_6a

    .line 23153
    const/4 v2, 0x1

    .line 23164
    :cond_3e
    :goto_3e
    sget-boolean v3, Lcom/android/server/wm/DualScreenTransition;->DEBUG:Z

    if-eqz v3, :cond_69

    .line 23165
    const-string v4, "WindowManager"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v5, "isScreenRotationAllowed() : screen rotation is"

    invoke-virtual {v3, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    if-eqz v2, :cond_88

    const-string v3, " "

    :goto_54
    invoke-virtual {v5, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    const-string v5, "allowed for d"

    invoke-virtual {v3, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v4, v3}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 23169
    :cond_69
    return v2

    .line 23155
    :cond_6a
    const/4 v2, 0x0

    goto :goto_3e

    .line 23157
    :cond_6c
    const/16 v3, 0xc8

    invoke-virtual {v1, v3}, Lcom/android/server/wm/DualScreenTransition;->isTransitionEqual(I)Z

    move-result v3

    if-nez v3, :cond_7c

    const/16 v3, 0x12c

    invoke-virtual {v1, v3}, Lcom/android/server/wm/DualScreenTransition;->isTransitionEqual(I)Z

    move-result v3

    if-eqz v3, :cond_3e

    .line 23159
    :cond_7c
    invoke-virtual {v0}, Lcom/android/server/wm/AppTransition;->getAppTransition()I

    move-result v3

    invoke-static {v3}, Lcom/android/server/wm/AppTransition;->isDualScreenAppTransition(I)Z

    move-result v3

    if-eqz v3, :cond_3e

    .line 23160
    const/4 v2, 0x0

    goto :goto_3e

    .line 23165
    :cond_88
    const-string v3, " not "

    goto :goto_54
.end method

.method public isSharedDeviceKeyguardLocked()Z
    .registers 6

    .prologue
    const/4 v2, 0x0

    .line 20785
    iget-object v3, p0, mContext:Landroid/content/Context;

    const-string/jumbo v4, "enterprise_policy"

    invoke-virtual {v3, v4}, Landroid/content/Context;->getSystemService(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Landroid/app/enterprise/EnterpriseDeviceManager;

    .line 20786
    .local v0, "edm":Landroid/app/enterprise/EnterpriseDeviceManager;
    if-eqz v0, :cond_3a

    invoke-virtual {v0}, Landroid/app/enterprise/EnterpriseDeviceManager;->getEnterpriseSharedDevicePolicy()Lcom/sec/enterprise/knox/shareddevice/EnterpriseSharedDevicePolicy;

    move-result-object v3

    if-eqz v3, :cond_3a

    .line 20787
    invoke-virtual {v0}, Landroid/app/enterprise/EnterpriseDeviceManager;->getEnterpriseSharedDevicePolicy()Lcom/sec/enterprise/knox/shareddevice/EnterpriseSharedDevicePolicy;

    move-result-object v3

    invoke-virtual {v3}, Lcom/sec/enterprise/knox/shareddevice/EnterpriseSharedDevicePolicy;->isSharedDeviceEnabled()Z

    move-result v1

    .line 20788
    .local v1, "isSharedDevice":Z
    invoke-virtual {p0}, getPersonaManagerLocked()Lcom/android/server/pm/PersonaManagerService;

    move-result-object v3

    if-eqz v3, :cond_3a

    if-eqz v1, :cond_3a

    .line 20789
    invoke-virtual {p0}, getPersonaManagerLocked()Lcom/android/server/pm/PersonaManagerService;

    move-result-object v3

    invoke-static {}, Landroid/os/UserHandle;->myUserId()I

    move-result v4

    invoke-virtual {v3, v4}, Lcom/android/server/pm/PersonaManagerService;->getKeyguardShowState(I)Z

    move-result v3

    if-eqz v3, :cond_3a

    .line 20790
    const-string v2, "WindowManager"

    const-string v3, "MultiWindow changing is blocked by Shared device"

    invoke-static {v2, v3}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 20791
    const/4 v2, 0x1

    .line 20797
    .end local v1    # "isSharedDevice":Z
    :cond_3a
    return v2
.end method

.method public isStatusBarVisible()Z
    .registers 3

    .prologue
    .line 20198
    iget-object v1, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v1

    .line 20199
    :try_start_3
    iget-object v0, p0, mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v0}, Landroid/view/WindowManagerPolicy;->isStatusBarVisible()Z

    move-result v0

    monitor-exit v1

    return v0

    .line 20200
    :catchall_b
    move-exception v0

    monitor-exit v1
    :try_end_d
    .catchall {:try_start_3 .. :try_end_d} :catchall_b

    throw v0
.end method

.method public isSystemKeyEventRequested(ILandroid/content/ComponentName;)Z
    .registers 4
    .param p1, "keyCode"    # I
    .param p2, "componentName"    # Landroid/content/ComponentName;

    .prologue
    .line 20231
    iget-object v0, p0, mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v0, p1, p2}, Landroid/view/WindowManagerPolicy;->isSystemKeyEventRequested(ILandroid/content/ComponentName;)Z

    move-result v0

    return v0
.end method

.method public isViewServerRunning()Z
    .registers 4

    .prologue
    const/4 v0, 0x0

    .line 12144
    invoke-direct {p0}, isSystemSecure()Z

    move-result v1

    if-eqz v1, :cond_8

    .line 12152
    :cond_7
    :goto_7
    return v0

    .line 12148
    :cond_8
    const-string v1, "android.permission.DUMP"

    const-string/jumbo v2, "isViewServerRunning"

    invoke-virtual {p0, v1, v2}, checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v1

    if-eqz v1, :cond_7

    .line 12152
    iget-object v1, p0, mViewServer:Lcom/android/server/wm/ViewServer;

    if-eqz v1, :cond_7

    iget-object v1, p0, mViewServer:Lcom/android/server/wm/ViewServer;

    invoke-virtual {v1}, Lcom/android/server/wm/ViewServer;->isRunning()Z

    move-result v1

    if-eqz v1, :cond_7

    const/4 v0, 0x1

    goto :goto_7
.end method

.method public keyguardGoingAway(ZZ)V
    .registers 6
    .param p1, "disableWindowAnimations"    # Z
    .param p2, "keyguardGoingToNotificationShade"    # Z

    .prologue
    .line 9880
    iget-object v0, p0, mContext:Landroid/content/Context;

    const-string v1, "android.permission.DISABLE_KEYGUARD"

    invoke-virtual {v0, v1}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    move-result v0

    if-eqz v0, :cond_12

    .line 9882
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Requires DISABLE_KEYGUARD permission"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 9884
    :cond_12
    sget-boolean v0, DEBUG_KEYGUARD:Z

    if-eqz v0, :cond_39

    const-string v0, "WindowManager"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v2, "keyguardGoingAway: disableWinAnim="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, " kgToNotifShade="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 9886
    :cond_39
    iget-object v1, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v1

    .line 9887
    :try_start_3c
    iget-object v0, p0, mAnimator:Lcom/android/server/wm/WindowAnimator;

    const/4 v2, 0x1

    iput-boolean v2, v0, Lcom/android/server/wm/WindowAnimator;->mKeyguardGoingAway:Z

    .line 9888
    iget-object v0, p0, mAnimator:Lcom/android/server/wm/WindowAnimator;

    iput-boolean p2, v0, Lcom/android/server/wm/WindowAnimator;->mKeyguardGoingAwayToNotificationShade:Z

    .line 9889
    iget-object v0, p0, mAnimator:Lcom/android/server/wm/WindowAnimator;

    iput-boolean p1, v0, Lcom/android/server/wm/WindowAnimator;->mKeyguardGoingAwayDisableWindowAnimations:Z

    .line 9890
    invoke-virtual {p0}, requestTraversalLocked()V

    .line 9891
    monitor-exit v1

    .line 9892
    return-void

    .line 9891
    :catchall_4e
    move-exception v0

    monitor-exit v1
    :try_end_50
    .catchall {:try_start_3c .. :try_end_50} :catchall_4e

    throw v0
.end method

.method public keyguardWaitingForActivityDrawn()V
    .registers 3

    .prologue
    .line 9895
    sget-boolean v0, DEBUG_KEYGUARD:Z

    if-eqz v0, :cond_c

    const-string v0, "WindowManager"

    const-string/jumbo v1, "keyguardWaitingForActivityDrawn"

    invoke-static {v0, v1}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 9898
    :cond_c
    iget-object v1, p0, mKeyguardWaitingForActivityDrawnLock:Ljava/lang/Object;

    monitor-enter v1

    .line 9899
    const/4 v0, 0x1

    :try_start_10
    iput-boolean v0, p0, mKeyguardWaitingForActivityDrawn:Z

    .line 9900
    monitor-exit v1

    .line 9902
    return-void

    .line 9900
    :catchall_14
    move-exception v0

    monitor-exit v1
    :try_end_16
    .catchall {:try_start_10 .. :try_end_16} :catchall_14

    throw v0
.end method

.method public lockNow(Landroid/os/Bundle;)V
    .registers 3
    .param p1, "options"    # Landroid/os/Bundle;

    .prologue
    .line 19248
    iget-object v0, p0, mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v0, p1}, Landroid/view/WindowManagerPolicy;->lockNow(Landroid/os/Bundle;)V

    .line 19249
    return-void
.end method

.method logWindowList(Lcom/android/server/wm/WindowList;Ljava/lang/String;)V
    .registers 7
    .param p1, "windows"    # Lcom/android/server/wm/WindowList;
    .param p2, "prefix"    # Ljava/lang/String;

    .prologue
    .line 2728
    invoke-virtual {p1}, Lcom/android/server/wm/WindowList;->size()I

    move-result v0

    .line 2729
    .local v0, "N":I
    :goto_4
    if-lez v0, :cond_33

    .line 2730
    add-int/lit8 v0, v0, -0x1

    .line 2731
    const-string v1, "WindowManager"

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v2, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string v3, "#"

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string v3, ": "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {p1, v0}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v3

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v1, v2}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_4

    .line 2733
    :cond_33
    return-void
.end method

.method makeWindowFreezingScreenIfNeededLocked(Lcom/android/server/wm/WindowState;)V
    .registers 8
    .param p1, "w"    # Lcom/android/server/wm/WindowState;

    .prologue
    const/16 v5, 0xb

    const/4 v4, 0x1

    const/4 v3, 0x0

    .line 15767
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->getDisplayId()I

    move-result v0

    invoke-virtual {p0, v0}, okToDisplay(I)Z

    move-result v0

    if-nez v0, :cond_49

    iget v0, p0, mWindowsFreezingScreen:I

    const/4 v1, 0x2

    if-eq v0, v1, :cond_49

    .line 15768
    sget-boolean v0, DEBUG_ORIENTATION:Z

    if-eqz v0, :cond_2f

    const-string v0, "WindowManager"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Changing surface while display frozen: "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 15769
    :cond_2f
    iput-boolean v4, p1, Lcom/android/server/wm/WindowState;->mOrientationChanging:Z

    .line 15770
    iput v3, p1, Lcom/android/server/wm/WindowState;->mLastFreezeDuration:I

    .line 15771
    iget-object v0, p0, mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    iput-boolean v3, v0, Lcom/android/server/wm/WindowManagerService$LayoutFields;->mOrientationChangeComplete:Z

    .line 15772
    iget v0, p0, mWindowsFreezingScreen:I

    if-nez v0, :cond_49

    .line 15773
    iput v4, p0, mWindowsFreezingScreen:I

    .line 15776
    iget-object v0, p0, mH:Lcom/android/server/wm/WindowManagerService$H;

    invoke-virtual {v0, v5}, Lcom/android/server/wm/WindowManagerService$H;->removeMessages(I)V

    .line 15777
    iget-object v0, p0, mH:Lcom/android/server/wm/WindowManagerService$H;

    const-wide/16 v2, 0x7d0

    invoke-virtual {v0, v5, v2, v3}, Lcom/android/server/wm/WindowManagerService$H;->sendEmptyMessageDelayed(IJ)Z

    .line 15781
    :cond_49
    return-void
.end method

.method public makingFinishing(Landroid/os/IBinder;)V
    .registers 7
    .param p1, "token"    # Landroid/os/IBinder;

    .prologue
    .line 23517
    iget-object v2, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v2

    .line 23518
    :try_start_3
    invoke-virtual {p0, p1}, findAppWindowToken(Landroid/os/IBinder;)Lcom/android/server/wm/AppWindowToken;

    move-result-object v0

    .line 23519
    .local v0, "wtoken":Lcom/android/server/wm/AppWindowToken;
    if-nez v0, :cond_23

    .line 23520
    const-string v1, "WindowManager"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "Attempted to set the finishing of non-existing app token: "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v1, v3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 23521
    monitor-exit v2

    .line 23526
    :goto_22
    return-void

    .line 23524
    :cond_23
    const/4 v1, 0x1

    iput-boolean v1, v0, Lcom/android/server/wm/AppWindowToken;->finishing:Z

    .line 23525
    monitor-exit v2

    goto :goto_22

    .end local v0    # "wtoken":Lcom/android/server/wm/AppWindowToken;
    :catchall_28
    move-exception v1

    monitor-exit v2
    :try_end_2a
    .catchall {:try_start_3 .. :try_end_2a} :catchall_28

    throw v1
.end method

.method public monitor()V
    .registers 3

    .prologue
    .line 19987
    iget-object v1, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v1

    :try_start_3
    monitor-exit v1

    .line 19988
    return-void

    .line 19987
    :catchall_5
    move-exception v0

    monitor-exit v1
    :try_end_7
    .catchall {:try_start_3 .. :try_end_7} :catchall_5

    throw v0
.end method

.method public monitorInput(Ljava/lang/String;)Landroid/view/InputChannel;
    .registers 3
    .param p1, "inputChannelName"    # Ljava/lang/String;

    .prologue
    .line 10193
    iget-object v0, p0, mInputManager:Lcom/android/server/input/InputManagerService;

    invoke-virtual {v0, p1}, Lcom/android/server/input/InputManagerService;->monitorInput(Ljava/lang/String;)Landroid/view/InputChannel;

    move-result-object v0

    return-object v0
.end method

.method moveInputMethodDialogsLocked(I)V
    .registers 11
    .param p1, "pos"    # I

    .prologue
    .line 2736
    iget-object v1, p0, mInputMethodDialogs:Ljava/util/ArrayList;

    .line 2739
    .local v1, "dialogs":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/WindowState;>;"
    const/4 v6, 0x0

    .line 2740
    .local v6, "windows":Lcom/android/server/wm/WindowList;
    const/4 v4, 0x0

    .line 2754
    .local v4, "targetDisplay":Lcom/android/server/wm/DisplayContent;
    invoke-virtual {p0}, getDefaultWindowListLocked()Lcom/android/server/wm/WindowList;

    move-result-object v6

    .line 2756
    invoke-virtual {v1}, Ljava/util/ArrayList;->size()I

    move-result v0

    .line 2758
    .local v0, "N":I
    const/4 v2, 0x0

    .local v2, "i":I
    :goto_d
    if-ge v2, v0, :cond_1c

    .line 2759
    invoke-virtual {v1, v2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v8

    check-cast v8, Lcom/android/server/wm/WindowState;

    invoke-direct {p0, p1, v8, v6}, tmpRemoveWindowLocked(ILcom/android/server/wm/WindowState;Lcom/android/server/wm/WindowList;)I

    move-result p1

    .line 2758
    add-int/lit8 v2, v2, 0x1

    goto :goto_d

    .line 2766
    :cond_1c
    if-ltz p1, :cond_4b

    .line 2767
    iget-object v8, p0, mInputMethodTarget:Lcom/android/server/wm/WindowState;

    iget-object v3, v8, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    .line 2769
    .local v3, "targetAppToken":Lcom/android/server/wm/AppWindowToken;
    iget-object v8, p0, mInputMethodWindow:Lcom/android/server/wm/WindowState;

    if-eqz v8, :cond_39

    .line 2770
    :goto_26
    invoke-virtual {v6}, Lcom/android/server/wm/WindowList;->size()I

    move-result v8

    if-ge p1, v8, :cond_39

    .line 2771
    invoke-virtual {v6, p1}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v7

    check-cast v7, Lcom/android/server/wm/WindowState;

    .line 2772
    .local v7, "wp":Lcom/android/server/wm/WindowState;
    iget-object v8, p0, mInputMethodWindow:Lcom/android/server/wm/WindowState;

    if-ne v7, v8, :cond_39

    .line 2773
    add-int/lit8 p1, p1, 0x1

    .line 2774
    goto :goto_26

    .line 2780
    .end local v7    # "wp":Lcom/android/server/wm/WindowState;
    :cond_39
    const/4 v2, 0x0

    :goto_3a
    if-ge v2, v0, :cond_5d

    .line 2781
    invoke-virtual {v1, v2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/android/server/wm/WindowState;

    .line 2782
    .local v5, "win":Lcom/android/server/wm/WindowState;
    iput-object v3, v5, Lcom/android/server/wm/WindowState;->mTargetAppToken:Lcom/android/server/wm/AppWindowToken;

    .line 2788
    invoke-direct {p0, p1, v5}, reAddWindowLocked(ILcom/android/server/wm/WindowState;)I

    move-result p1

    .line 2780
    add-int/lit8 v2, v2, 0x1

    goto :goto_3a

    .line 2796
    .end local v3    # "targetAppToken":Lcom/android/server/wm/AppWindowToken;
    .end local v5    # "win":Lcom/android/server/wm/WindowState;
    :cond_4b
    const/4 v2, 0x0

    :goto_4c
    if-ge v2, v0, :cond_5d

    .line 2797
    invoke-virtual {v1, v2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/android/server/wm/WindowState;

    .line 2798
    .restart local v5    # "win":Lcom/android/server/wm/WindowState;
    const/4 v8, 0x0

    iput-object v8, v5, Lcom/android/server/wm/WindowState;->mTargetAppToken:Lcom/android/server/wm/AppWindowToken;

    .line 2799
    invoke-direct {p0, v5}, reAddWindowToListInOrderLocked(Lcom/android/server/wm/WindowState;)V

    .line 2796
    add-int/lit8 v2, v2, 0x1

    goto :goto_4c

    .line 2805
    .end local v5    # "win":Lcom/android/server/wm/WindowState;
    :cond_5d
    return-void
.end method

.method moveInputMethodWindowsIfNeededLocked(Z)Z
    .registers 17
    .param p1, "needAssignLayers"    # Z

    .prologue
    .line 2808
    iget-object v7, p0, mInputMethodWindow:Lcom/android/server/wm/WindowState;

    .line 2809
    .local v7, "imWin":Lcom/android/server/wm/WindowState;
    iget-object v13, p0, mInputMethodDialogs:Ljava/util/ArrayList;

    invoke-virtual {v13}, Ljava/util/ArrayList;->size()I

    move-result v0

    .line 2810
    .local v0, "DN":I
    if-nez v7, :cond_e

    if-nez v0, :cond_e

    .line 2816
    const/4 v13, 0x0

    .line 2985
    :goto_d
    return v13

    .line 2820
    :cond_e
    invoke-virtual {p0}, getDefaultWindowListLocked()Lcom/android/server/wm/WindowList;

    move-result-object v12

    .line 2823
    .local v12, "windows":Lcom/android/server/wm/WindowList;
    const/4 v8, 0x0

    .line 2824
    .local v8, "lastIMETargetOrientation":I
    const/4 v9, -0x1

    .line 2834
    .local v9, "lastInputMethodTargetDisplay":I
    const/4 v13, 0x1

    invoke-virtual {p0, v13}, findDesiredInputMethodWindowIndexLocked(Z)I

    move-result v6

    .line 2835
    .local v6, "imPos":I
    const/4 v10, 0x0

    .line 2836
    .local v10, "movedToAnotherDisplay":Z
    const/4 v3, 0x0

    .line 2846
    .local v3, "changedInputMethodTargetDisplay":Z
    sget-boolean v13, DUALSCREEN_DEBUG_INPUT_METHOD:Z

    if-eqz v13, :cond_27

    .line 2847
    iget-object v13, p0, mDualScreenInputMethodManager:Lcom/android/server/wm/DualScreenInputMethodManager;

    const-string/jumbo v14, "move input method"

    invoke-virtual {v13, v14}, Lcom/android/server/wm/DualScreenInputMethodManager;->printDebugInfo(Ljava/lang/String;)V

    .line 2865
    :cond_27
    if-ltz v6, :cond_ae

    .line 2871
    invoke-virtual {v12}, Lcom/android/server/wm/WindowList;->size()I

    move-result v1

    .line 2872
    .local v1, "N":I
    if-ge v6, v1, :cond_79

    invoke-virtual {v12, v6}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v13

    check-cast v13, Lcom/android/server/wm/WindowState;

    move-object v5, v13

    .line 2877
    .local v5, "firstImWin":Lcom/android/server/wm/WindowState;
    :goto_36
    if-eqz v7, :cond_7b

    move-object v2, v7

    .line 2879
    .local v2, "baseImWin":Lcom/android/server/wm/WindowState;
    :goto_39
    iget-object v13, v2, Lcom/android/server/wm/WindowState;->mChildWindows:Lcom/android/server/wm/WindowList;

    invoke-virtual {v13}, Lcom/android/server/wm/WindowList;->size()I

    move-result v13

    if-lez v13, :cond_4f

    .line 2880
    iget-object v13, v2, Lcom/android/server/wm/WindowState;->mChildWindows:Lcom/android/server/wm/WindowList;

    const/4 v14, 0x0

    invoke-virtual {v13, v14}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/server/wm/WindowState;

    .line 2881
    .local v4, "cw":Lcom/android/server/wm/WindowState;
    iget v13, v4, Lcom/android/server/wm/WindowState;->mSubLayer:I

    if-gez v13, :cond_4f

    move-object v2, v4

    .line 2884
    .end local v4    # "cw":Lcom/android/server/wm/WindowState;
    :cond_4f
    if-ne v5, v2, :cond_8c

    .line 2888
    add-int/lit8 v11, v6, 0x1

    .line 2889
    .local v11, "pos":I
    :goto_53
    if-ge v11, v1, :cond_5f

    .line 2890
    invoke-virtual {v12, v11}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v13

    check-cast v13, Lcom/android/server/wm/WindowState;

    iget-boolean v13, v13, Lcom/android/server/wm/WindowState;->mIsImWindow:Z

    if-nez v13, :cond_86

    .line 2895
    :cond_5f
    add-int/lit8 v11, v11, 0x1

    .line 2897
    :goto_61
    if-ge v11, v1, :cond_6d

    .line 2898
    invoke-virtual {v12, v11}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v13

    check-cast v13, Lcom/android/server/wm/WindowState;

    iget-boolean v13, v13, Lcom/android/server/wm/WindowState;->mIsImWindow:Z

    if-eqz v13, :cond_89

    .line 2903
    :cond_6d
    if-lt v11, v1, :cond_8c

    .line 2906
    if-eqz v7, :cond_77

    .line 2907
    iget-object v13, p0, mInputMethodTarget:Lcom/android/server/wm/WindowState;

    iget-object v13, v13, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    iput-object v13, v7, Lcom/android/server/wm/WindowState;->mTargetAppToken:Lcom/android/server/wm/AppWindowToken;

    .line 2909
    :cond_77
    const/4 v13, 0x0

    goto :goto_d

    .line 2872
    .end local v2    # "baseImWin":Lcom/android/server/wm/WindowState;
    .end local v5    # "firstImWin":Lcom/android/server/wm/WindowState;
    .end local v11    # "pos":I
    :cond_79
    const/4 v5, 0x0

    goto :goto_36

    .line 2877
    .restart local v5    # "firstImWin":Lcom/android/server/wm/WindowState;
    :cond_7b
    iget-object v13, p0, mInputMethodDialogs:Ljava/util/ArrayList;

    const/4 v14, 0x0

    invoke-virtual {v13, v14}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v13

    check-cast v13, Lcom/android/server/wm/WindowState;

    move-object v2, v13

    goto :goto_39

    .line 2893
    .restart local v2    # "baseImWin":Lcom/android/server/wm/WindowState;
    .restart local v11    # "pos":I
    :cond_86
    add-int/lit8 v11, v11, 0x1

    goto :goto_53

    .line 2901
    :cond_89
    add-int/lit8 v11, v11, 0x1

    goto :goto_61

    .line 2913
    .end local v11    # "pos":I
    :cond_8c
    if-eqz v7, :cond_aa

    .line 2918
    invoke-direct {p0, v6, v7, v12}, tmpRemoveWindowLocked(ILcom/android/server/wm/WindowState;Lcom/android/server/wm/WindowList;)I

    move-result v6

    .line 2923
    iget-object v13, p0, mInputMethodTarget:Lcom/android/server/wm/WindowState;

    iget-object v13, v13, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    iput-object v13, v7, Lcom/android/server/wm/WindowState;->mTargetAppToken:Lcom/android/server/wm/AppWindowToken;

    .line 2929
    invoke-direct {p0, v6, v7}, reAddWindowLocked(ILcom/android/server/wm/WindowState;)I

    .line 2934
    if-lez v0, :cond_a2

    add-int/lit8 v13, v6, 0x1

    invoke-virtual {p0, v13}, moveInputMethodDialogsLocked(I)V

    .line 2959
    .end local v1    # "N":I
    .end local v2    # "baseImWin":Lcom/android/server/wm/WindowState;
    .end local v5    # "firstImWin":Lcom/android/server/wm/WindowState;
    :cond_a2
    :goto_a2
    if-eqz p1, :cond_a7

    .line 2960
    invoke-direct {p0, v12}, assignLayersLocked(Lcom/android/server/wm/WindowList;)V

    .line 2985
    :cond_a7
    const/4 v13, 0x1

    goto/16 :goto_d

    .line 2936
    .restart local v1    # "N":I
    .restart local v2    # "baseImWin":Lcom/android/server/wm/WindowState;
    .restart local v5    # "firstImWin":Lcom/android/server/wm/WindowState;
    :cond_aa
    invoke-virtual {p0, v6}, moveInputMethodDialogsLocked(I)V

    goto :goto_a2

    .line 2943
    .end local v1    # "N":I
    .end local v2    # "baseImWin":Lcom/android/server/wm/WindowState;
    .end local v5    # "firstImWin":Lcom/android/server/wm/WindowState;
    :cond_ae
    if-eqz v7, :cond_c1

    .line 2945
    const/4 v13, 0x0

    invoke-direct {p0, v13, v7}, tmpRemoveWindowLocked(ILcom/android/server/wm/WindowState;)I

    .line 2946
    const/4 v13, 0x0

    iput-object v13, v7, Lcom/android/server/wm/WindowState;->mTargetAppToken:Lcom/android/server/wm/AppWindowToken;

    .line 2947
    invoke-direct {p0, v7}, reAddWindowToListInOrderLocked(Lcom/android/server/wm/WindowState;)V

    .line 2952
    if-lez v0, :cond_a2

    const/4 v13, -0x1

    invoke-virtual {p0, v13}, moveInputMethodDialogsLocked(I)V

    goto :goto_a2

    .line 2954
    :cond_c1
    const/4 v13, -0x1

    invoke-virtual {p0, v13}, moveInputMethodDialogsLocked(I)V

    goto :goto_a2
.end method

.method public moveInputMethodWindowsToDisplayIfNeeded(ZZ)V
    .registers 7
    .param p1, "show"    # Z
    .param p2, "inputShown"    # Z

    .prologue
    .line 2999
    iget-object v1, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v1

    .line 3000
    :try_start_3
    iput-boolean p2, p0, mInputShown:Z

    .line 3002
    sget-boolean v0, DUALSCREEN_DEBUG_INPUT_METHOD:Z

    if-eqz v0, :cond_23

    .line 3003
    iget-object v0, p0, mDualScreenInputMethodManager:Lcom/android/server/wm/DualScreenInputMethodManager;

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "WMS : mInputShown="

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    iget-boolean v3, p0, mInputShown:Z

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v0, v2}, Lcom/android/server/wm/DualScreenInputMethodManager;->printDebugInfo(Ljava/lang/String;)V

    .line 3005
    :cond_23
    invoke-virtual {p0, p1}, moveInputMethodWindowsToDisplayIfNeededLocked(Z)V

    .line 3006
    monitor-exit v1

    .line 3007
    return-void

    .line 3006
    :catchall_28
    move-exception v0

    monitor-exit v1
    :try_end_2a
    .catchall {:try_start_3 .. :try_end_2a} :catchall_28

    throw v0
.end method

.method public moveInputMethodWindowsToDisplayIfNeededLocked(Z)V
    .registers 2
    .param p1, "show"    # Z

    .prologue
    .line 3022
    return-void
.end method

.method moveMultiWindowCenterBarLocked(Z)Z
    .registers 28
    .param p1, "needAssignLayers"    # Z

    .prologue
    .line 21759
    move-object/from16 v0, p0

    iget-object v4, v0, mMultiWindowCenterBar:Lcom/android/server/wm/WindowState;

    .line 21760
    .local v4, "centerBarWin":Lcom/android/server/wm/WindowState;
    if-nez v4, :cond_9

    .line 21761
    const/16 v21, 0x0

    .line 21947
    :goto_8
    return v21

    .line 21763
    :cond_9
    new-instance v3, Landroid/graphics/Rect;

    invoke-virtual {v4}, Lcom/android/server/wm/WindowState;->getFrameLw()Landroid/graphics/Rect;

    move-result-object v21

    move-object/from16 v0, v21

    invoke-direct {v3, v0}, Landroid/graphics/Rect;-><init>(Landroid/graphics/Rect;)V

    .line 21764
    .local v3, "centerBarRect":Landroid/graphics/Rect;
    const/16 v21, 0x5

    const/16 v22, 0x5

    move/from16 v0, v21

    move/from16 v1, v22

    invoke-virtual {v3, v0, v1}, Landroid/graphics/Rect;->inset(II)V

    .line 21766
    const/4 v8, -0x1

    .line 21767
    .local v8, "controlBarPos":I
    const/4 v15, 0x0

    .line 21770
    .local v15, "targetControlBarWin":Lcom/android/server/wm/WindowState;
    invoke-virtual/range {p0 .. p0}, getDefaultWindowListLocked()Lcom/android/server/wm/WindowList;

    move-result-object v19

    .line 21771
    .local v19, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual {v4}, Lcom/android/server/wm/WindowState;->getFrameLw()Landroid/graphics/Rect;

    move-result-object v21

    invoke-virtual/range {v21 .. v21}, Landroid/graphics/Rect;->centerX()I

    move-result v5

    .line 21772
    .local v5, "centerbarCenterX":I
    invoke-virtual {v4}, Lcom/android/server/wm/WindowState;->getFrameLw()Landroid/graphics/Rect;

    move-result-object v21

    invoke-virtual/range {v21 .. v21}, Landroid/graphics/Rect;->centerY()I

    move-result v6

    .line 21774
    .local v6, "centerbarCenterY":I
    invoke-virtual/range {v19 .. v19}, Lcom/android/server/wm/WindowList;->size()I

    move-result v21

    add-int/lit8 v10, v21, -0x1

    .local v10, "i":I
    :goto_3b
    if-ltz v10, :cond_21f

    .line 21775
    move-object/from16 v0, v19

    invoke-virtual {v0, v10}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v17

    check-cast v17, Lcom/android/server/wm/WindowState;

    .line 21776
    .local v17, "w":Lcom/android/server/wm/WindowState;
    invoke-virtual/range {v17 .. v17}, Lcom/android/server/wm/WindowState;->getMultiWindowStyleLw()Lcom/samsung/android/multiwindow/MultiWindowStyle;

    move-result-object v12

    .line 21777
    .local v12, "multiWindowStyle":Lcom/samsung/android/multiwindow/MultiWindowStyle;
    invoke-virtual {v12}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->getType()I

    move-result v21

    const/16 v22, 0x2

    move/from16 v0, v21

    move/from16 v1, v22

    if-ne v0, v1, :cond_58

    .line 21774
    :cond_55
    :goto_55
    add-int/lit8 v10, v10, -0x1

    goto :goto_3b

    .line 21780
    :cond_58
    move-object/from16 v0, p0

    iget-object v2, v0, mInputMethodWindow:Lcom/android/server/wm/WindowState;

    .line 21781
    .local v2, "baseImWin":Lcom/android/server/wm/WindowState;
    if-nez v2, :cond_95

    move-object/from16 v0, p0

    iget-object v0, v0, mInputMethodDialogs:Ljava/util/ArrayList;

    move-object/from16 v21, v0

    invoke-virtual/range {v21 .. v21}, Ljava/util/ArrayList;->size()I

    move-result v21

    if-lez v21, :cond_95

    .line 21782
    move-object/from16 v0, p0

    iget-object v0, v0, mInputMethodDialogs:Ljava/util/ArrayList;

    move-object/from16 v21, v0

    const/16 v22, 0x0

    invoke-virtual/range {v21 .. v22}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v2

    .end local v2    # "baseImWin":Lcom/android/server/wm/WindowState;
    check-cast v2, Lcom/android/server/wm/WindowState;

    .line 21783
    .restart local v2    # "baseImWin":Lcom/android/server/wm/WindowState;
    iget-object v0, v2, Lcom/android/server/wm/WindowState;->mChildWindows:Lcom/android/server/wm/WindowList;

    move-object/from16 v21, v0

    invoke-virtual/range {v21 .. v21}, Lcom/android/server/wm/WindowList;->size()I

    move-result v21

    if-lez v21, :cond_95

    .line 21784
    iget-object v0, v2, Lcom/android/server/wm/WindowState;->mChildWindows:Lcom/android/server/wm/WindowList;

    move-object/from16 v21, v0

    const/16 v22, 0x0

    invoke-virtual/range {v21 .. v22}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v9

    check-cast v9, Lcom/android/server/wm/WindowState;

    .line 21785
    .local v9, "cw":Lcom/android/server/wm/WindowState;
    iget v0, v9, Lcom/android/server/wm/WindowState;->mSubLayer:I

    move/from16 v21, v0

    if-gez v21, :cond_95

    move-object v2, v9

    .line 21788
    .end local v9    # "cw":Lcom/android/server/wm/WindowState;
    :cond_95
    if-eqz v2, :cond_ab

    invoke-virtual {v2}, Lcom/android/server/wm/WindowState;->isVisibleLw()Z

    move-result v21

    if-eqz v21, :cond_ab

    invoke-virtual/range {v17 .. v17}, Lcom/android/server/wm/WindowState;->getSurfaceLayer()I

    move-result v21

    invoke-virtual {v2}, Lcom/android/server/wm/WindowState;->getSurfaceLayer()I

    move-result v22

    move/from16 v0, v21

    move/from16 v1, v22

    if-gt v0, v1, :cond_55

    .line 21793
    :cond_ab
    move-object/from16 v0, p0

    iget-object v0, v0, mCurrentFocus:Lcom/android/server/wm/WindowState;

    move-object/from16 v21, v0

    if-eqz v21, :cond_109

    move-object/from16 v0, p0

    iget-object v0, v0, mCurrentFocus:Lcom/android/server/wm/WindowState;

    move-object/from16 v21, v0

    invoke-virtual/range {v21 .. v21}, Lcom/android/server/wm/WindowState;->getMultiWindowStyleLw()Lcom/samsung/android/multiwindow/MultiWindowStyle;

    move-result-object v21

    invoke-virtual/range {v21 .. v21}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->getType()I

    move-result v21

    const/16 v22, 0x2

    move/from16 v0, v21

    move/from16 v1, v22

    if-eq v0, v1, :cond_109

    move-object/from16 v0, p0

    iget-object v0, v0, mCurrentFocus:Lcom/android/server/wm/WindowState;

    move-object/from16 v21, v0

    move-object/from16 v0, v21

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    move-object/from16 v21, v0

    if-eqz v21, :cond_109

    move-object/from16 v0, p0

    iget-object v0, v0, mCurrentFocus:Lcom/android/server/wm/WindowState;

    move-object/from16 v21, v0

    move-object/from16 v0, v21

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    move-object/from16 v21, v0

    move-object/from16 v0, v21

    iget-boolean v0, v0, Lcom/android/server/wm/AppWindowToken;->appFullscreen:Z

    move/from16 v21, v0

    if-eqz v21, :cond_109

    move-object/from16 v0, p0

    iget-object v0, v0, mCurrentFocus:Lcom/android/server/wm/WindowState;

    move-object/from16 v21, v0

    move-object/from16 v0, v21

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    move-object/from16 v21, v0

    move-object/from16 v0, v17

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    move-object/from16 v22, v0

    move-object/from16 v0, v21

    move-object/from16 v1, v22

    if-eq v0, v1, :cond_109

    invoke-virtual/range {v17 .. v17}, Lcom/android/server/wm/WindowState;->isDisplayedLw()Z

    move-result v21

    if-eqz v21, :cond_55

    .line 21801
    :cond_109
    invoke-virtual/range {v17 .. v17}, Lcom/android/server/wm/WindowState;->isFloating()Z

    move-result v21

    if-eqz v21, :cond_15f

    move-object/from16 v0, v17

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    move-object/from16 v21, v0

    move-object/from16 v0, v21

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    move/from16 v21, v0

    const/16 v22, 0x2

    move/from16 v0, v21

    move/from16 v1, v22

    if-eq v0, v1, :cond_15f

    move-object/from16 v0, v17

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    move-object/from16 v21, v0

    move-object/from16 v0, v21

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    move/from16 v21, v0

    const/16 v22, 0x1

    move/from16 v0, v21

    move/from16 v1, v22

    if-eq v0, v1, :cond_15f

    move-object/from16 v0, v17

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    move-object/from16 v21, v0

    if-eqz v21, :cond_15f

    move-object/from16 v0, v17

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    move-object/from16 v21, v0

    move-object/from16 v0, v21

    iget-boolean v0, v0, Lcom/android/server/wm/AppWindowToken;->appFullscreen:Z

    move/from16 v21, v0

    if-nez v21, :cond_15f

    .line 21805
    move-object/from16 v0, p0

    iget-object v0, v0, mMultiWindowCenterBar:Lcom/android/server/wm/WindowState;

    move-object/from16 v21, v0

    move-object/from16 v0, v21

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mChildWindows:Lcom/android/server/wm/WindowList;

    move-object/from16 v21, v0

    invoke-virtual/range {v21 .. v21}, Lcom/android/server/wm/WindowList;->size()I

    move-result v21

    if-eqz v21, :cond_55

    .line 21809
    :cond_15f
    invoke-virtual/range {v17 .. v17}, Lcom/android/server/wm/WindowState;->getMultiWindowStyleLw()Lcom/samsung/android/multiwindow/MultiWindowStyle;

    move-result-object v21

    const/high16 v22, 0x200000

    invoke-virtual/range {v21 .. v22}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->isEnabled(I)Z

    move-result v21

    if-nez v21, :cond_55

    .line 21813
    invoke-virtual/range {v17 .. v17}, Lcom/android/server/wm/WindowState;->getFrameLw()Landroid/graphics/Rect;

    move-result-object v18

    .line 21814
    .local v18, "windowFrame":Landroid/graphics/Rect;
    move-object/from16 v0, v17

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    move-object/from16 v21, v0

    move-object/from16 v0, v21

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    move/from16 v21, v0

    const/16 v22, 0x1

    move/from16 v0, v21

    move/from16 v1, v22

    if-eq v0, v1, :cond_197

    move-object/from16 v0, v17

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    move-object/from16 v21, v0

    move-object/from16 v0, v21

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    move/from16 v21, v0

    const/16 v22, 0x3

    move/from16 v0, v21

    move/from16 v1, v22

    if-ne v0, v1, :cond_22b

    :cond_197
    invoke-virtual/range {v17 .. v17}, Lcom/android/server/wm/WindowState;->isDisplayedLw()Z

    move-result v21

    if-eqz v21, :cond_22b

    move-object/from16 v0, v17

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    move-object/from16 v21, v0

    move-object/from16 v0, v21

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->flags:I

    move/from16 v21, v0

    and-int/lit8 v21, v21, 0x4

    if-nez v21, :cond_22b

    move-object/from16 v0, v17

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    move-object/from16 v21, v0

    if-eqz v21, :cond_1c3

    move-object/from16 v0, v17

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    move-object/from16 v21, v0

    move-object/from16 v0, v21

    iget-boolean v0, v0, Lcom/android/server/wm/AppWindowToken;->appFullscreen:Z

    move/from16 v21, v0

    if-nez v21, :cond_219

    :cond_1c3
    const/16 v21, 0x20

    move/from16 v0, v21

    invoke-virtual {v12, v0}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->isEnabled(I)Z

    move-result v21

    if-nez v21, :cond_219

    move-object/from16 v0, v18

    iget v0, v0, Landroid/graphics/Rect;->left:I

    move/from16 v21, v0

    move-object/from16 v0, v18

    iget v0, v0, Landroid/graphics/Rect;->right:I

    move/from16 v22, v0

    move/from16 v0, v21

    move/from16 v1, v22

    if-ge v0, v1, :cond_219

    move-object/from16 v0, v18

    iget v0, v0, Landroid/graphics/Rect;->top:I

    move/from16 v21, v0

    move-object/from16 v0, v18

    iget v0, v0, Landroid/graphics/Rect;->bottom:I

    move/from16 v22, v0

    move/from16 v0, v21

    move/from16 v1, v22

    if-ge v0, v1, :cond_219

    move-object/from16 v0, v18

    iget v0, v0, Landroid/graphics/Rect;->left:I

    move/from16 v21, v0

    move/from16 v0, v21

    if-le v5, v0, :cond_219

    move-object/from16 v0, v18

    iget v0, v0, Landroid/graphics/Rect;->right:I

    move/from16 v21, v0

    move/from16 v0, v21

    if-ge v5, v0, :cond_219

    move-object/from16 v0, v18

    iget v0, v0, Landroid/graphics/Rect;->top:I

    move/from16 v21, v0

    move/from16 v0, v21

    if-le v6, v0, :cond_219

    move-object/from16 v0, v18

    iget v0, v0, Landroid/graphics/Rect;->bottom:I

    move/from16 v21, v0

    move/from16 v0, v21

    if-lt v6, v0, :cond_22b

    .line 21823
    :cond_219
    const/16 v21, -0x1

    move/from16 v0, v21

    if-eq v8, v0, :cond_225

    .line 21928
    .end local v2    # "baseImWin":Lcom/android/server/wm/WindowState;
    .end local v12    # "multiWindowStyle":Lcom/samsung/android/multiwindow/MultiWindowStyle;
    .end local v17    # "w":Lcom/android/server/wm/WindowState;
    .end local v18    # "windowFrame":Landroid/graphics/Rect;
    :cond_21f
    :goto_21f
    if-nez v15, :cond_672

    .line 21929
    const/16 v21, 0x0

    goto/16 :goto_8

    .line 21826
    .restart local v2    # "baseImWin":Lcom/android/server/wm/WindowState;
    .restart local v12    # "multiWindowStyle":Lcom/samsung/android/multiwindow/MultiWindowStyle;
    .restart local v17    # "w":Lcom/android/server/wm/WindowState;
    .restart local v18    # "windowFrame":Landroid/graphics/Rect;
    :cond_225
    move-object/from16 v15, v17

    .line 21827
    add-int/lit8 v8, v10, 0x1

    goto/16 :goto_55

    .line 21828
    :cond_22b
    move-object/from16 v0, v17

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    move-object/from16 v21, v0

    move-object/from16 v0, v21

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    move/from16 v21, v0

    const/16 v22, 0x2

    move/from16 v0, v21

    move/from16 v1, v22

    if-eq v0, v1, :cond_253

    move-object/from16 v0, v17

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    move-object/from16 v21, v0

    move-object/from16 v0, v21

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    move/from16 v21, v0

    const/16 v22, 0x1

    move/from16 v0, v21

    move/from16 v1, v22

    if-ne v0, v1, :cond_431

    :cond_253
    invoke-virtual/range {v17 .. v17}, Lcom/android/server/wm/WindowState;->isVisibleLw()Z

    move-result v21

    if-eqz v21, :cond_431

    .line 21831
    move-object/from16 v0, v17

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    move-object/from16 v21, v0

    move-object/from16 v0, v21

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->flags:I

    move/from16 v21, v0

    and-int/lit8 v21, v21, 0x6

    if-eqz v21, :cond_279

    invoke-virtual/range {v17 .. v17}, Lcom/android/server/wm/WindowState;->getStackBounds()Landroid/graphics/Rect;

    move-result-object v21

    move-object/from16 v0, v17

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mFrame:Landroid/graphics/Rect;

    move-object/from16 v22, v0

    invoke-virtual/range {v21 .. v22}, Landroid/graphics/Rect;->equals(Ljava/lang/Object;)Z

    move-result v21

    if-eqz v21, :cond_2ad

    :cond_279
    move-object/from16 v0, v17

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    move-object/from16 v21, v0

    move-object/from16 v0, v21

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->width:I

    move/from16 v21, v0

    const/16 v22, -0x1

    move/from16 v0, v21

    move/from16 v1, v22

    if-ne v0, v1, :cond_2ad

    move-object/from16 v0, v17

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    move-object/from16 v21, v0

    move-object/from16 v0, v21

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->height:I

    move/from16 v21, v0

    const/16 v22, -0x1

    move/from16 v0, v21

    move/from16 v1, v22

    if-ne v0, v1, :cond_2ad

    .line 21835
    const/16 v21, -0x1

    move/from16 v0, v21

    if-ne v8, v0, :cond_21f

    .line 21838
    move-object/from16 v15, v17

    .line 21839
    add-int/lit8 v8, v10, 0x1

    .line 21840
    goto/16 :goto_21f

    .line 21841
    :cond_2ad
    const/16 v21, -0x1

    move/from16 v0, v21

    if-eq v8, v0, :cond_329

    move-object/from16 v0, v17

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    move-object/from16 v21, v0

    move-object/from16 v0, v21

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->gravity:I

    move/from16 v21, v0

    const/16 v22, 0x11

    move/from16 v0, v21

    move/from16 v1, v22

    if-ne v0, v1, :cond_329

    move-object/from16 v0, v17

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    move-object/from16 v21, v0

    move-object/from16 v0, v21

    iget-boolean v0, v0, Lcom/android/server/wm/WindowStateAnimator;->mHasTransformation:Z

    move/from16 v21, v0

    if-eqz v21, :cond_329

    move-object/from16 v0, v17

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    move-object/from16 v21, v0

    move-object/from16 v0, v21

    iget v0, v0, Lcom/android/server/wm/WindowStateAnimator;->mLastAlpha:F

    move/from16 v21, v0

    move/from16 v0, v21

    float-to-double v0, v0

    move-wide/from16 v22, v0

    const-wide/16 v24, 0x0

    cmpl-double v21, v22, v24

    if-eqz v21, :cond_329

    .line 21843
    move-object/from16 v0, v17

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    move-object/from16 v21, v0

    if-eqz v21, :cond_21f

    if-eqz v15, :cond_21f

    iget-object v0, v15, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    move-object/from16 v21, v0

    if-eqz v21, :cond_21f

    .line 21844
    move-object/from16 v0, v17

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    move-object/from16 v21, v0

    move-object/from16 v0, v21

    iget-object v0, v0, Lcom/android/server/wm/AppWindowToken;->mTask:Lcom/android/server/wm/Task;

    move-object/from16 v21, v0

    move-object/from16 v0, v21

    iget v0, v0, Lcom/android/server/wm/Task;->mTaskId:I

    move/from16 v21, v0

    iget-object v0, v15, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    move-object/from16 v22, v0

    move-object/from16 v0, v22

    iget-object v0, v0, Lcom/android/server/wm/AppWindowToken;->mTask:Lcom/android/server/wm/Task;

    move-object/from16 v22, v0

    move-object/from16 v0, v22

    iget v0, v0, Lcom/android/server/wm/Task;->mTaskId:I

    move/from16 v22, v0

    move/from16 v0, v21

    move/from16 v1, v22

    if-ne v0, v1, :cond_21f

    .line 21845
    move-object/from16 v15, v17

    .line 21846
    move v8, v10

    goto/16 :goto_21f

    .line 21850
    :cond_329
    move-object/from16 v0, v17

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    move-object/from16 v21, v0

    move-object/from16 v0, v21

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->width:I

    move/from16 v21, v0

    const/16 v22, -0x2

    move/from16 v0, v21

    move/from16 v1, v22

    if-ne v0, v1, :cond_351

    move-object/from16 v0, v17

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    move-object/from16 v21, v0

    move-object/from16 v0, v21

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->height:I

    move/from16 v21, v0

    const/16 v22, -0x2

    move/from16 v0, v21

    move/from16 v1, v22

    if-eq v0, v1, :cond_3cd

    :cond_351
    move-object/from16 v0, v17

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    move-object/from16 v21, v0

    move-object/from16 v0, v21

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->x:I

    move/from16 v21, v0

    if-eqz v21, :cond_55

    move-object/from16 v0, v17

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    move-object/from16 v21, v0

    move-object/from16 v0, v21

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->y:I

    move/from16 v21, v0

    if-eqz v21, :cond_55

    move-object/from16 v0, v17

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    move-object/from16 v21, v0

    move-object/from16 v0, v21

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->width:I

    move/from16 v21, v0

    if-lez v21, :cond_55

    move-object/from16 v0, v17

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    move-object/from16 v21, v0

    move-object/from16 v0, v21

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->width:I

    move/from16 v21, v0

    move-object/from16 v0, v17

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mDisplayContent:Lcom/android/server/wm/DisplayContent;

    move-object/from16 v22, v0

    invoke-virtual/range {v22 .. v22}, Lcom/android/server/wm/DisplayContent;->getDisplayInfo()Landroid/view/DisplayInfo;

    move-result-object v22

    move-object/from16 v0, v22

    iget v0, v0, Landroid/view/DisplayInfo;->appWidth:I

    move/from16 v22, v0

    move/from16 v0, v21

    move/from16 v1, v22

    if-ge v0, v1, :cond_55

    move-object/from16 v0, v17

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    move-object/from16 v21, v0

    move-object/from16 v0, v21

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->height:I

    move/from16 v21, v0

    if-lez v21, :cond_55

    move-object/from16 v0, v17

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    move-object/from16 v21, v0

    move-object/from16 v0, v21

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->height:I

    move/from16 v21, v0

    move-object/from16 v0, v17

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mDisplayContent:Lcom/android/server/wm/DisplayContent;

    move-object/from16 v22, v0

    invoke-virtual/range {v22 .. v22}, Lcom/android/server/wm/DisplayContent;->getDisplayInfo()Landroid/view/DisplayInfo;

    move-result-object v22

    move-object/from16 v0, v22

    iget v0, v0, Landroid/view/DisplayInfo;->appHeight:I

    move/from16 v22, v0

    move/from16 v0, v21

    move/from16 v1, v22

    if-ge v0, v1, :cond_55

    .line 21855
    :cond_3cd
    invoke-virtual/range {v17 .. v17}, Lcom/android/server/wm/WindowState;->getFrameLw()Landroid/graphics/Rect;

    move-result-object v21

    invoke-virtual {v4}, Lcom/android/server/wm/WindowState;->getFrameLw()Landroid/graphics/Rect;

    move-result-object v22

    invoke-virtual/range {v22 .. v22}, Landroid/graphics/Rect;->centerX()I

    move-result v22

    invoke-virtual {v4}, Lcom/android/server/wm/WindowState;->getFrameLw()Landroid/graphics/Rect;

    move-result-object v23

    invoke-virtual/range {v23 .. v23}, Landroid/graphics/Rect;->centerY()I

    move-result v23

    invoke-virtual/range {v21 .. v23}, Landroid/graphics/Rect;->contains(II)Z

    move-result v21

    if-nez v21, :cond_3fb

    .line 21856
    move-object/from16 v0, p0

    move-object/from16 v1, v17

    invoke-direct {v0, v1}, isContainsCenterBarIncludeChild(Lcom/android/server/wm/WindowState;)Z

    move-result v21

    if-nez v21, :cond_3fb

    .line 21857
    const/16 v21, -0x1

    move/from16 v0, v21

    if-ne v8, v0, :cond_21f

    .line 21860
    move-object/from16 v15, v17

    .line 21861
    add-int/lit8 v8, v10, 0x1

    .line 21864
    :cond_3fb
    const/16 v21, -0x1

    move/from16 v0, v21

    if-ne v8, v0, :cond_55

    .line 21865
    iget-object v0, v4, Lcom/android/server/wm/WindowState;->mChildWindows:Lcom/android/server/wm/WindowList;

    move-object/from16 v21, v0

    invoke-virtual/range {v21 .. v21}, Lcom/android/server/wm/WindowList;->size()I

    move-result v13

    .line 21866
    .local v13, "nc":I
    if-lez v13, :cond_55

    .line 21867
    iget-object v0, v4, Lcom/android/server/wm/WindowState;->mChildWindows:Lcom/android/server/wm/WindowList;

    move-object/from16 v21, v0

    add-int/lit8 v22, v13, -0x1

    invoke-virtual/range {v21 .. v22}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v7

    check-cast v7, Lcom/android/server/wm/WindowState;

    .line 21868
    .local v7, "childOfCenterBarWin":Lcom/android/server/wm/WindowState;
    invoke-virtual {v7}, Lcom/android/server/wm/WindowState;->isVisibleOrAdding()Z

    move-result v21

    if-eqz v21, :cond_55

    invoke-virtual/range {v17 .. v17}, Lcom/android/server/wm/WindowState;->getFrameLw()Landroid/graphics/Rect;

    move-result-object v21

    invoke-virtual {v7}, Lcom/android/server/wm/WindowState;->getFrameLw()Landroid/graphics/Rect;

    move-result-object v22

    invoke-virtual/range {v21 .. v22}, Landroid/graphics/Rect;->contains(Landroid/graphics/Rect;)Z

    move-result v21

    if-nez v21, :cond_55

    .line 21870
    move-object/from16 v15, v17

    .line 21871
    add-int/lit8 v8, v10, 0x1

    .line 21872
    goto/16 :goto_21f

    .line 21877
    .end local v7    # "childOfCenterBarWin":Lcom/android/server/wm/WindowState;
    .end local v13    # "nc":I
    :cond_431
    move-object/from16 v0, v17

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    move-object/from16 v21, v0

    move-object/from16 v0, v21

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    move/from16 v21, v0

    const/16 v22, 0x8a4

    move/from16 v0, v21

    move/from16 v1, v22

    if-ne v0, v1, :cond_469

    move-object/from16 v0, v17

    iget v0, v0, Lcom/android/server/wm/WindowState;->mViewVisibility:I

    move/from16 v21, v0

    if-nez v21, :cond_469

    move-object/from16 v0, v17

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    move-object/from16 v21, v0

    move-object/from16 v0, v21

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->flags:I

    move/from16 v21, v0

    and-int/lit8 v21, v21, 0x18

    if-nez v21, :cond_469

    .line 21880
    const/16 v21, -0x1

    move/from16 v0, v21

    if-ne v8, v0, :cond_21f

    .line 21883
    move-object/from16 v15, v17

    .line 21884
    add-int/lit8 v8, v10, 0x1

    .line 21885
    goto/16 :goto_21f

    .line 21886
    :cond_469
    move-object/from16 v0, v17

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    move-object/from16 v21, v0

    move-object/from16 v0, v21

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    move/from16 v21, v0

    const/16 v22, 0x3e9

    move/from16 v0, v21

    move/from16 v1, v22

    if-eq v0, v1, :cond_491

    move-object/from16 v0, v17

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    move-object/from16 v21, v0

    move-object/from16 v0, v21

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    move/from16 v21, v0

    const/16 v22, 0x3e8

    move/from16 v0, v21

    move/from16 v1, v22

    if-ne v0, v1, :cond_587

    :cond_491
    invoke-virtual/range {v17 .. v17}, Lcom/android/server/wm/WindowState;->isVisibleLw()Z

    move-result v21

    if-eqz v21, :cond_587

    move-object/from16 v0, v17

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttachedWindow:Lcom/android/server/wm/WindowState;

    move-object/from16 v21, v0

    if-eqz v21, :cond_587

    move-object/from16 v0, v17

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttachedWindow:Lcom/android/server/wm/WindowState;

    move-object/from16 v21, v0

    invoke-virtual/range {v21 .. v21}, Lcom/android/server/wm/WindowState;->getMultiWindowStyleLw()Lcom/samsung/android/multiwindow/MultiWindowStyle;

    move-result-object v21

    invoke-virtual/range {v21 .. v21}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->getType()I

    move-result v21

    const/16 v22, 0x1

    move/from16 v0, v21

    move/from16 v1, v22

    if-ne v0, v1, :cond_587

    move-object/from16 v0, v17

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mFrame:Landroid/graphics/Rect;

    move-object/from16 v21, v0

    invoke-virtual/range {v21 .. v21}, Landroid/graphics/Rect;->isEmpty()Z

    move-result v21

    if-nez v21, :cond_587

    move-object/from16 v0, v17

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttachedWindow:Lcom/android/server/wm/WindowState;

    move-object/from16 v21, v0

    move-object/from16 v0, v21

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mFrame:Landroid/graphics/Rect;

    move-object/from16 v21, v0

    move-object/from16 v0, v17

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mFrame:Landroid/graphics/Rect;

    move-object/from16 v22, v0

    invoke-virtual/range {v21 .. v22}, Landroid/graphics/Rect;->contains(Landroid/graphics/Rect;)Z

    move-result v21

    if-eqz v21, :cond_587

    move-object/from16 v0, v17

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttachedWindow:Lcom/android/server/wm/WindowState;

    move-object/from16 v21, v0

    move-object/from16 v0, v21

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    move-object/from16 v21, v0

    move-object/from16 v0, v21

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->width:I

    move/from16 v21, v0

    if-lez v21, :cond_587

    move-object/from16 v0, v17

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttachedWindow:Lcom/android/server/wm/WindowState;

    move-object/from16 v21, v0

    move-object/from16 v0, v21

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    move-object/from16 v21, v0

    move-object/from16 v0, v21

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->height:I

    move/from16 v21, v0

    if-lez v21, :cond_587

    move-object/from16 v0, v17

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttachedWindow:Lcom/android/server/wm/WindowState;

    move-object/from16 v21, v0

    move-object/from16 v0, v21

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    move-object/from16 v21, v0

    move-object/from16 v0, v21

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    move/from16 v21, v0

    const/16 v22, 0x2

    move/from16 v0, v21

    move/from16 v1, v22

    if-eq v0, v1, :cond_587

    invoke-virtual/range {v17 .. v17}, Lcom/android/server/wm/WindowState;->getFrameLw()Landroid/graphics/Rect;

    move-result-object v21

    move-object/from16 v0, v21

    invoke-static {v0, v3}, Landroid/graphics/Rect;->intersects(Landroid/graphics/Rect;Landroid/graphics/Rect;)Z

    move-result v21

    if-eqz v21, :cond_587

    move-object/from16 v0, v17

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttachedWindow:Lcom/android/server/wm/WindowState;

    move-object/from16 v21, v0

    invoke-virtual/range {v21 .. v21}, Lcom/android/server/wm/WindowState;->isVisibleLw()Z

    move-result v21

    if-eqz v21, :cond_57b

    move-object/from16 v0, v17

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttachedWindow:Lcom/android/server/wm/WindowState;

    move-object/from16 v21, v0

    move-object/from16 v0, p0

    iget-object v0, v0, mScreenRect:Landroid/graphics/Rect;

    move-object/from16 v22, v0

    invoke-virtual/range {v22 .. v22}, Landroid/graphics/Rect;->width()I

    move-result v22

    move-object/from16 v0, p0

    iget-object v0, v0, mScreenRect:Landroid/graphics/Rect;

    move-object/from16 v23, v0

    invoke-virtual/range {v23 .. v23}, Landroid/graphics/Rect;->height()I

    move-result v23

    invoke-virtual/range {v21 .. v23}, Lcom/android/server/wm/WindowState;->isFullscreen(II)Z

    move-result v21

    if-nez v21, :cond_57b

    move-object/from16 v0, v17

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttachedWindow:Lcom/android/server/wm/WindowState;

    move-object/from16 v21, v0

    invoke-virtual/range {v21 .. v21}, Lcom/android/server/wm/WindowState;->getFrameLw()Landroid/graphics/Rect;

    move-result-object v21

    invoke-virtual/range {v17 .. v17}, Lcom/android/server/wm/WindowState;->getFrameLw()Landroid/graphics/Rect;

    move-result-object v22

    invoke-virtual/range {v21 .. v22}, Landroid/graphics/Rect;->contains(Landroid/graphics/Rect;)Z

    move-result v21

    if-eqz v21, :cond_57b

    move-object/from16 v0, v17

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttachedWindow:Lcom/android/server/wm/WindowState;

    move-object/from16 v21, v0

    invoke-virtual/range {v21 .. v21}, Lcom/android/server/wm/WindowState;->getFrameLw()Landroid/graphics/Rect;

    move-result-object v21

    invoke-virtual {v4}, Lcom/android/server/wm/WindowState;->getFrameLw()Landroid/graphics/Rect;

    move-result-object v22

    invoke-virtual/range {v21 .. v22}, Landroid/graphics/Rect;->contains(Landroid/graphics/Rect;)Z

    move-result v21

    if-nez v21, :cond_587

    .line 21898
    :cond_57b
    const/16 v21, -0x1

    move/from16 v0, v21

    if-ne v8, v0, :cond_21f

    .line 21901
    move-object/from16 v15, v17

    .line 21902
    add-int/lit8 v8, v10, 0x1

    .line 21903
    goto/16 :goto_21f

    .line 21904
    :cond_587
    invoke-virtual/range {v17 .. v17}, Lcom/android/server/wm/WindowState;->isVisibleLw()Z

    move-result v21

    if-eqz v21, :cond_55

    move-object/from16 v0, v17

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    move-object/from16 v21, v0

    move-object/from16 v0, v21

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    move/from16 v21, v0

    const/16 v22, 0x3e9

    move/from16 v0, v21

    move/from16 v1, v22

    if-eq v0, v1, :cond_5b5

    move-object/from16 v0, v17

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    move-object/from16 v21, v0

    move-object/from16 v0, v21

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    move/from16 v21, v0

    const/16 v22, 0x3e8

    move/from16 v0, v21

    move/from16 v1, v22

    if-ne v0, v1, :cond_55

    :cond_5b5
    move-object/from16 v0, v17

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttachedWindow:Lcom/android/server/wm/WindowState;

    move-object/from16 v21, v0

    if-eqz v21, :cond_55

    move-object/from16 v0, v17

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttachedWindow:Lcom/android/server/wm/WindowState;

    move-object/from16 v21, v0

    invoke-virtual/range {v21 .. v21}, Lcom/android/server/wm/WindowState;->getMultiWindowStyleLw()Lcom/samsung/android/multiwindow/MultiWindowStyle;

    move-result-object v21

    invoke-virtual/range {v21 .. v21}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->getType()I

    move-result v21

    const/16 v22, 0x1

    move/from16 v0, v21

    move/from16 v1, v22

    if-ne v0, v1, :cond_55

    move-object/from16 v0, v17

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttachedWindow:Lcom/android/server/wm/WindowState;

    move-object/from16 v21, v0

    move-object/from16 v0, v21

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    move-object/from16 v21, v0

    move-object/from16 v0, v21

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->width:I

    move/from16 v21, v0

    const/16 v22, -0x1

    move/from16 v0, v21

    move/from16 v1, v22

    if-ne v0, v1, :cond_55

    move-object/from16 v0, v17

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttachedWindow:Lcom/android/server/wm/WindowState;

    move-object/from16 v21, v0

    move-object/from16 v0, v21

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    move-object/from16 v21, v0

    move-object/from16 v0, v21

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->height:I

    move/from16 v21, v0

    const/16 v22, -0x1

    move/from16 v0, v21

    move/from16 v1, v22

    if-ne v0, v1, :cond_55

    move-object/from16 v0, v17

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mFrame:Landroid/graphics/Rect;

    move-object/from16 v21, v0

    invoke-virtual/range {v21 .. v21}, Landroid/graphics/Rect;->isEmpty()Z

    move-result v21

    if-nez v21, :cond_55

    move-object/from16 v0, v17

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttachedWindow:Lcom/android/server/wm/WindowState;

    move-object/from16 v21, v0

    move-object/from16 v0, v21

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mFrame:Landroid/graphics/Rect;

    move-object/from16 v21, v0

    move-object/from16 v0, v17

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mFrame:Landroid/graphics/Rect;

    move-object/from16 v22, v0

    invoke-virtual/range {v21 .. v22}, Landroid/graphics/Rect;->contains(Landroid/graphics/Rect;)Z

    move-result v21

    if-eqz v21, :cond_55

    .line 21912
    const/16 v21, -0x1

    move/from16 v0, v21

    if-ne v8, v0, :cond_21f

    .line 21915
    const/16 v16, 0x1

    .line 21916
    .local v16, "updateCenterbarOrder":Z
    move-object/from16 v0, v17

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttachedWindow:Lcom/android/server/wm/WindowState;

    move-object/from16 v21, v0

    move-object/from16 v0, v21

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mChildWindows:Lcom/android/server/wm/WindowList;

    move-object/from16 v21, v0

    invoke-virtual/range {v21 .. v21}, Lcom/android/server/wm/WindowList;->iterator()Ljava/util/Iterator;

    move-result-object v11

    .local v11, "i$":Ljava/util/Iterator;
    :cond_643
    :goto_643
    invoke-interface {v11}, Ljava/util/Iterator;->hasNext()Z

    move-result v21

    if-eqz v21, :cond_66a

    invoke-interface {v11}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v20

    check-cast v20, Lcom/android/server/wm/WindowState;

    .line 21917
    .local v20, "ws":Lcom/android/server/wm/WindowState;
    move-object/from16 v0, v17

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttachedWindow:Lcom/android/server/wm/WindowState;

    move-object/from16 v21, v0

    move-object/from16 v0, v21

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mFrame:Landroid/graphics/Rect;

    move-object/from16 v21, v0

    move-object/from16 v0, v20

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mFrame:Landroid/graphics/Rect;

    move-object/from16 v22, v0

    invoke-virtual/range {v21 .. v22}, Landroid/graphics/Rect;->contains(Landroid/graphics/Rect;)Z

    move-result v21

    if-nez v21, :cond_643

    .line 21918
    const/16 v16, 0x0

    goto :goto_643

    .line 21921
    .end local v20    # "ws":Lcom/android/server/wm/WindowState;
    :cond_66a
    if-eqz v16, :cond_21f

    .line 21922
    move-object/from16 v15, v17

    .line 21923
    add-int/lit8 v8, v10, 0x1

    goto/16 :goto_21f

    .line 21931
    .end local v2    # "baseImWin":Lcom/android/server/wm/WindowState;
    .end local v11    # "i$":Ljava/util/Iterator;
    .end local v12    # "multiWindowStyle":Lcom/samsung/android/multiwindow/MultiWindowStyle;
    .end local v16    # "updateCenterbarOrder":Z
    .end local v17    # "w":Lcom/android/server/wm/WindowState;
    .end local v18    # "windowFrame":Landroid/graphics/Rect;
    :cond_672
    move-object/from16 v0, v19

    invoke-virtual {v0, v4}, Lcom/android/server/wm/WindowList;->indexOf(Ljava/lang/Object;)I

    move-result v14

    .line 21932
    .local v14, "pos":I
    if-ne v14, v8, :cond_680

    if-nez p1, :cond_680

    .line 21933
    const/16 v21, 0x0

    goto/16 :goto_8

    .line 21936
    :cond_680
    iget-object v0, v15, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    move-object/from16 v21, v0

    move-object/from16 v0, v21

    iput-object v0, v4, Lcom/android/server/wm/WindowState;->mTargetAppToken:Lcom/android/server/wm/AppWindowToken;

    .line 21937
    move-object/from16 v0, p0

    invoke-direct {v0, v8, v4}, tmpRemoveWindowLocked(ILcom/android/server/wm/WindowState;)I

    move-result v8

    .line 21938
    move-object/from16 v0, p0

    invoke-direct {v0, v8, v4}, reAddWindowLocked(ILcom/android/server/wm/WindowState;)I

    .line 21939
    move-object/from16 v0, p0

    iget-object v0, v0, mMultiWindowSwitchWindowTarget:Lcom/android/server/wm/WindowState;

    move-object/from16 v21, v0

    if-eqz v21, :cond_6c6

    .line 21940
    move-object/from16 v0, p0

    iget-object v0, v0, mMultiWindowSwitchWindowTarget:Lcom/android/server/wm/WindowState;

    move-object/from16 v21, v0

    iget-object v0, v15, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    move-object/from16 v22, v0

    move-object/from16 v0, v22

    move-object/from16 v1, v21

    iput-object v0, v1, Lcom/android/server/wm/WindowState;->mTargetAppToken:Lcom/android/server/wm/AppWindowToken;

    .line 21941
    move-object/from16 v0, p0

    iget-object v0, v0, mMultiWindowSwitchWindowTarget:Lcom/android/server/wm/WindowState;

    move-object/from16 v21, v0

    move-object/from16 v0, p0

    move-object/from16 v1, v21

    invoke-direct {v0, v8, v1}, tmpRemoveWindowLocked(ILcom/android/server/wm/WindowState;)I

    move-result v8

    .line 21942
    move-object/from16 v0, p0

    iget-object v0, v0, mMultiWindowSwitchWindowTarget:Lcom/android/server/wm/WindowState;

    move-object/from16 v21, v0

    move-object/from16 v0, p0

    move-object/from16 v1, v21

    invoke-direct {v0, v8, v1}, reAddWindowLocked(ILcom/android/server/wm/WindowState;)I

    .line 21944
    :cond_6c6
    if-eqz p1, :cond_6d5

    invoke-virtual {v4}, Lcom/android/server/wm/WindowState;->isVisibleLw()Z

    move-result v21

    if-eqz v21, :cond_6d5

    .line 21945
    move-object/from16 v0, p0

    move-object/from16 v1, v19

    invoke-direct {v0, v1}, assignLayersLocked(Lcom/android/server/wm/WindowList;)V

    .line 21947
    :cond_6d5
    const/16 v21, 0x1

    goto/16 :goto_8
.end method

.method moveStackWindowsLocked(Lcom/android/server/wm/DisplayContent;)V
    .registers 4
    .param p1, "displayContent"    # Lcom/android/server/wm/DisplayContent;

    .prologue
    .line 9058
    const/4 v0, 0x1

    const/4 v1, 0x0

    invoke-virtual {p0, p1, v0, v1}, moveStackWindowsLocked(Lcom/android/server/wm/DisplayContent;ZZ)V

    .line 9059
    return-void
.end method

.method moveStackWindowsLocked(Lcom/android/server/wm/DisplayContent;ZZ)V
    .registers 16
    .param p1, "displayContent"    # Lcom/android/server/wm/DisplayContent;
    .param p2, "layoutNeeded"    # Z
    .param p3, "fromTapStack"    # Z

    .prologue
    const/4 v11, 0x1

    const/4 v10, 0x0

    .line 9068
    invoke-virtual {p1}, Lcom/android/server/wm/DisplayContent;->getWindowList()Lcom/android/server/wm/WindowList;

    move-result-object v8

    .line 9069
    .local v8, "windows":Lcom/android/server/wm/WindowList;
    iget-object v9, p0, mTmpWindows:Ljava/util/ArrayList;

    invoke-virtual {v9, v8}, Ljava/util/ArrayList;->addAll(Ljava/util/Collection;)Z

    .line 9071
    invoke-direct {p0, p1}, rebuildAppWindowListLocked(Lcom/android/server/wm/DisplayContent;)V

    .line 9074
    iget-object v9, p0, mTmpWindows:Ljava/util/ArrayList;

    invoke-virtual {v9}, Ljava/util/ArrayList;->size()I

    move-result v3

    .line 9075
    .local v3, "tmpSize":I
    invoke-virtual {v8}, Lcom/android/server/wm/WindowList;->size()I

    move-result v7

    .line 9076
    .local v7, "winSize":I
    const/4 v1, 0x0

    .local v1, "tmpNdx":I
    const/4 v5, 0x0

    .line 9077
    .local v5, "winNdx":I
    :goto_1a
    if-ge v1, v3, :cond_4e

    if-ge v5, v7, :cond_4e

    .line 9081
    :goto_1e
    iget-object v9, p0, mTmpWindows:Ljava/util/ArrayList;

    add-int/lit8 v2, v1, 0x1

    .end local v1    # "tmpNdx":I
    .local v2, "tmpNdx":I
    invoke-virtual {v9, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/wm/WindowState;

    .line 9082
    .local v0, "tmp":Lcom/android/server/wm/WindowState;
    if-ge v2, v3, :cond_34

    iget-object v9, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    if-eqz v9, :cond_34

    iget-object v9, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    iget-boolean v9, v9, Lcom/android/server/wm/AppWindowToken;->mIsExiting:Z

    if-nez v9, :cond_7f

    .line 9086
    :cond_34
    :goto_34
    add-int/lit8 v6, v5, 0x1

    .end local v5    # "winNdx":I
    .local v6, "winNdx":I
    invoke-virtual {v8, v5}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/server/wm/WindowState;

    .line 9087
    .local v4, "win":Lcom/android/server/wm/WindowState;
    if-ge v6, v7, :cond_48

    iget-object v9, v4, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    if-eqz v9, :cond_48

    iget-object v9, v4, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    iget-boolean v9, v9, Lcom/android/server/wm/AppWindowToken;->mIsExiting:Z

    if-nez v9, :cond_7d

    .line 9089
    :cond_48
    if-eq v0, v4, :cond_7a

    .line 9091
    iput-boolean v11, p1, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    move v5, v6

    .end local v6    # "winNdx":I
    .restart local v5    # "winNdx":I
    move v1, v2

    .line 9095
    .end local v0    # "tmp":Lcom/android/server/wm/WindowState;
    .end local v2    # "tmpNdx":I
    .end local v4    # "win":Lcom/android/server/wm/WindowState;
    .restart local v1    # "tmpNdx":I
    :cond_4e
    if-eq v1, v5, :cond_52

    .line 9097
    iput-boolean v11, p1, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    .line 9099
    :cond_52
    iget-object v9, p0, mTmpWindows:Ljava/util/ArrayList;

    invoke-virtual {v9}, Ljava/util/ArrayList;->clear()V

    .line 9101
    const/4 v9, 0x3

    invoke-direct {p0, v9, v10}, updateFocusedWindowLocked(IZ)Z

    move-result v9

    if-nez v9, :cond_6a

    .line 9105
    invoke-virtual {p0, v10}, moveInputMethodWindowsIfNeededLocked(Z)Z

    .line 9108
    if-eqz p2, :cond_6a

    .line 9109
    invoke-virtual {p1}, Lcom/android/server/wm/DisplayContent;->getWindowList()Lcom/android/server/wm/WindowList;

    move-result-object v9

    invoke-direct {p0, v9}, assignLayersLocked(Lcom/android/server/wm/WindowList;)V

    .line 9113
    :cond_6a
    iget-object v9, p0, mInputMonitor:Lcom/android/server/wm/InputMonitor;

    invoke-virtual {v9}, Lcom/android/server/wm/InputMonitor;->setUpdateInputWindowsNeededLw()V

    .line 9116
    if-eqz p2, :cond_74

    .line 9117
    invoke-direct {p0}, performLayoutAndPlaceSurfacesLocked()V

    .line 9123
    :cond_74
    iget-object v9, p0, mInputMonitor:Lcom/android/server/wm/InputMonitor;

    invoke-virtual {v9, v10}, Lcom/android/server/wm/InputMonitor;->updateInputWindowsLw(Z)V

    .line 9126
    return-void

    .end local v1    # "tmpNdx":I
    .end local v5    # "winNdx":I
    .restart local v0    # "tmp":Lcom/android/server/wm/WindowState;
    .restart local v2    # "tmpNdx":I
    .restart local v4    # "win":Lcom/android/server/wm/WindowState;
    .restart local v6    # "winNdx":I
    :cond_7a
    move v5, v6

    .end local v6    # "winNdx":I
    .restart local v5    # "winNdx":I
    move v1, v2

    .line 9094
    .end local v2    # "tmpNdx":I
    .restart local v1    # "tmpNdx":I
    goto :goto_1a

    .end local v1    # "tmpNdx":I
    .end local v5    # "winNdx":I
    .restart local v2    # "tmpNdx":I
    .restart local v6    # "winNdx":I
    :cond_7d
    move v5, v6

    .end local v6    # "winNdx":I
    .restart local v5    # "winNdx":I
    goto :goto_34

    .end local v4    # "win":Lcom/android/server/wm/WindowState;
    :cond_7f
    move v1, v2

    .end local v2    # "tmpNdx":I
    .restart local v1    # "tmpNdx":I
    goto :goto_1e
.end method

.method public moveTaskToBottom(I)V
    .registers 11
    .param p1, "taskId"    # I

    .prologue
    .line 9212
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v2

    .line 9214
    .local v2, "origId":J
    :try_start_4
    iget-object v6, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v6
    :try_end_7
    .catchall {:try_start_4 .. :try_end_7} :catchall_58

    .line 9215
    :try_start_7
    iget-object v5, p0, mTaskIdToTask:Landroid/util/SparseArray;

    invoke-virtual {v5, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/server/wm/Task;

    .line 9216
    .local v4, "task":Lcom/android/server/wm/Task;
    if-nez v4, :cond_35

    .line 9217
    const-string v5, "WindowManager"

    new-instance v7, Ljava/lang/StringBuilder;

    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v8, "moveTaskToBottom: taskId="

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v7

    const-string v8, " not found in mTaskIdToTask"

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v7

    invoke-static {v5, v7}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 9219
    monitor-exit v6
    :try_end_31
    .catchall {:try_start_7 .. :try_end_31} :catchall_55

    .line 9239
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 9241
    :goto_34
    return-void

    .line 9221
    :cond_35
    :try_start_35
    iget-object v1, v4, Lcom/android/server/wm/Task;->mStack:Lcom/android/server/wm/TaskStack;

    .line 9222
    .local v1, "stack":Lcom/android/server/wm/TaskStack;
    invoke-virtual {v1, v4}, Lcom/android/server/wm/TaskStack;->moveTaskToBottom(Lcom/android/server/wm/Task;)V

    .line 9224
    iget-object v0, p0, mAppTransition:Lcom/android/server/wm/AppTransition;

    .line 9229
    .local v0, "mAppTransition":Lcom/android/server/wm/AppTransition;
    invoke-virtual {v0}, Lcom/android/server/wm/AppTransition;->isTransitionSet()Z

    move-result v5

    if-eqz v5, :cond_4b

    .line 9230
    const/4 v5, 0x1

    invoke-virtual {v4, v5}, Lcom/android/server/wm/Task;->setSendingToBottom(Z)V

    .line 9237
    :goto_46
    monitor-exit v6
    :try_end_47
    .catchall {:try_start_35 .. :try_end_47} :catchall_55

    .line 9239
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    goto :goto_34

    .line 9234
    :cond_4b
    :try_start_4b
    invoke-virtual {v1}, Lcom/android/server/wm/TaskStack;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    move-result-object v5

    const/4 v7, 0x1

    const/4 v8, 0x0

    invoke-virtual {p0, v5, v7, v8}, moveStackWindowsLocked(Lcom/android/server/wm/DisplayContent;ZZ)V

    goto :goto_46

    .line 9237
    .end local v0    # "mAppTransition":Lcom/android/server/wm/AppTransition;
    .end local v1    # "stack":Lcom/android/server/wm/TaskStack;
    .end local v4    # "task":Lcom/android/server/wm/Task;
    :catchall_55
    move-exception v5

    monitor-exit v6
    :try_end_57
    .catchall {:try_start_4b .. :try_end_57} :catchall_55

    :try_start_57
    throw v5
    :try_end_58
    .catchall {:try_start_57 .. :try_end_58} :catchall_58

    .line 9239
    :catchall_58
    move-exception v5

    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v5
.end method

.method public moveTaskToDisplay(III)V
    .registers 31
    .param p1, "taskId"    # I
    .param p2, "prevDisplayId"    # I
    .param p3, "targetDisplayId"    # I

    .prologue
    .line 9396
    move-object/from16 v0, p0

    iget-object v0, v0, mWindowMap:Ljava/util/HashMap;

    move-object/from16 v24, v0

    monitor-enter v24

    .line 9397
    :try_start_7
    const-string v23, "WindowManager"

    new-instance v25, Ljava/lang/StringBuilder;

    invoke-direct/range {v25 .. v25}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v26, "moveTaskToDisplay() : taskId="

    invoke-virtual/range {v25 .. v26}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v25

    move-object/from16 v0, v25

    move/from16 v1, p1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v25

    const-string v26, " display("

    invoke-virtual/range {v25 .. v26}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v25

    move-object/from16 v0, v25

    move/from16 v1, p2

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v25

    const-string v26, "=>"

    invoke-virtual/range {v25 .. v26}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v25

    move-object/from16 v0, v25

    move/from16 v1, p3

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v25

    const-string v26, ") caller="

    invoke-virtual/range {v25 .. v26}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v25

    const/16 v26, 0x4

    invoke-static/range {v26 .. v26}, Landroid/os/Debug;->getCallers(I)Ljava/lang/String;

    move-result-object v26

    invoke-virtual/range {v25 .. v26}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v25

    invoke-virtual/range {v25 .. v25}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v25

    move-object/from16 v0, v23

    move-object/from16 v1, v25

    invoke-static {v0, v1}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 9399
    move-object/from16 v0, p0

    iget-object v0, v0, mTaskIdToTask:Landroid/util/SparseArray;

    move-object/from16 v23, v0

    move-object/from16 v0, v23

    move/from16 v1, p1

    invoke-virtual {v0, v1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v16

    check-cast v16, Lcom/android/server/wm/Task;

    .line 9400
    .local v16, "task":Lcom/android/server/wm/Task;
    if-nez v16, :cond_68

    .line 9401
    monitor-exit v24

    .line 9490
    :goto_67
    return-void

    .line 9403
    :cond_68
    move-object/from16 v0, p0

    move/from16 v1, p2

    invoke-virtual {v0, v1}, getDisplayContentLocked(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v14

    .line 9404
    .local v14, "prevDisplayContent":Lcom/android/server/wm/DisplayContent;
    move-object/from16 v0, p0

    move/from16 v1, p3

    invoke-virtual {v0, v1}, getDisplayContentLocked(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v15

    .line 9406
    .local v15, "targetDisplayContent":Lcom/android/server/wm/DisplayContent;
    const/4 v10, 0x0

    .line 9407
    .local v10, "keepStartingWindowToCurrentDisplay":Z
    move/from16 v0, p2

    move/from16 v1, p3

    if-eq v0, v1, :cond_88

    const/16 v23, 0x2

    move/from16 v0, p3

    move/from16 v1, v23

    if-ne v0, v1, :cond_88

    .line 9408
    const/4 v10, 0x1

    .line 9413
    :cond_88
    move-object/from16 v0, v16

    iget-object v0, v0, Lcom/android/server/wm/Task;->mAppTokens:Lcom/android/server/wm/AppTokenList;

    move-object/from16 v17, v0

    .line 9414
    .local v17, "tokenListOfTask":Lcom/android/server/wm/AppTokenList;
    invoke-virtual/range {v17 .. v17}, Lcom/android/server/wm/AppTokenList;->size()I

    move-result v23

    add-int/lit8 v18, v23, -0x1

    .local v18, "tokenNdx":I
    :goto_94
    if-ltz v18, :cond_147

    .line 9415
    invoke-virtual/range {v17 .. v18}, Lcom/android/server/wm/AppTokenList;->get(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/android/server/wm/AppWindowToken;

    .line 9416
    .local v5, "appToken":Lcom/android/server/wm/AppWindowToken;
    invoke-virtual {v5}, Lcom/android/server/wm/AppWindowToken;->getDisplayId()I

    move-result v23

    move-object/from16 v0, p0

    move/from16 v1, v23

    invoke-virtual {v0, v1}, getDisplayContentLocked(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v7

    .line 9418
    .local v7, "displayOfToken":Lcom/android/server/wm/DisplayContent;
    iget-object v0, v5, Lcom/android/server/wm/AppWindowToken;->windows:Lcom/android/server/wm/WindowList;

    move-object/from16 v21, v0

    .line 9419
    .local v21, "windowsOfToken":Lcom/android/server/wm/WindowList;
    invoke-virtual/range {v21 .. v21}, Lcom/android/server/wm/WindowList;->size()I

    move-result v4

    .line 9420
    .local v4, "NW":I
    if-lez v4, :cond_ba

    .line 9421
    const/16 v23, 0x1

    move/from16 v0, v23

    move-object/from16 v1, p0

    iput-boolean v0, v1, mWindowsChanged:Z

    .line 9423
    :cond_ba
    const/4 v8, 0x0

    .local v8, "i":I
    :goto_bb
    if-ge v8, v4, :cond_143

    .line 9424
    move-object/from16 v0, v21

    invoke-virtual {v0, v8}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v20

    check-cast v20, Lcom/android/server/wm/WindowState;

    .line 9433
    .local v20, "win":Lcom/android/server/wm/WindowState;
    sget-boolean v23, DEBUG_WINDOW_MOVEMENT:Z

    if-eqz v23, :cond_e9

    const-string v23, "WindowManager"

    new-instance v25, Ljava/lang/StringBuilder;

    invoke-direct/range {v25 .. v25}, Ljava/lang/StringBuilder;-><init>()V

    const-string v26, "Tmp removing app window "

    invoke-virtual/range {v25 .. v26}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v25

    move-object/from16 v0, v25

    move-object/from16 v1, v20

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v25

    invoke-virtual/range {v25 .. v25}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v25

    move-object/from16 v0, v23

    move-object/from16 v1, v25

    invoke-static {v0, v1}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 9434
    :cond_e9
    invoke-virtual/range {v20 .. v20}, Lcom/android/server/wm/WindowState;->getWindowList()Lcom/android/server/wm/WindowList;

    move-result-object v23

    move-object/from16 v0, v23

    move-object/from16 v1, v20

    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowList;->remove(Ljava/lang/Object;)Z

    .line 9435
    move-object/from16 v0, v20

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mChildWindows:Lcom/android/server/wm/WindowList;

    move-object/from16 v23, v0

    invoke-virtual/range {v23 .. v23}, Lcom/android/server/wm/WindowList;->size()I

    move-result v9

    .line 9436
    .local v9, "j":I
    :goto_fe
    if-lez v9, :cond_13f

    .line 9437
    add-int/lit8 v9, v9, -0x1

    .line 9438
    move-object/from16 v0, v20

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mChildWindows:Lcom/android/server/wm/WindowList;

    move-object/from16 v23, v0

    move-object/from16 v0, v23

    invoke-virtual {v0, v9}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Lcom/android/server/wm/WindowState;

    .line 9439
    .local v6, "cwin":Lcom/android/server/wm/WindowState;
    sget-boolean v23, DEBUG_WINDOW_MOVEMENT:Z

    if-eqz v23, :cond_132

    const-string v23, "WindowManager"

    new-instance v25, Ljava/lang/StringBuilder;

    invoke-direct/range {v25 .. v25}, Ljava/lang/StringBuilder;-><init>()V

    const-string v26, "Tmp removing child window "

    invoke-virtual/range {v25 .. v26}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v25

    move-object/from16 v0, v25

    invoke-virtual {v0, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v25

    invoke-virtual/range {v25 .. v25}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v25

    move-object/from16 v0, v23

    move-object/from16 v1, v25

    invoke-static {v0, v1}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 9441
    :cond_132
    invoke-virtual {v6}, Lcom/android/server/wm/WindowState;->getWindowList()Lcom/android/server/wm/WindowList;

    move-result-object v23

    move-object/from16 v0, v23

    invoke-virtual {v0, v6}, Lcom/android/server/wm/WindowList;->remove(Ljava/lang/Object;)Z

    goto :goto_fe

    .line 9488
    .end local v4    # "NW":I
    .end local v5    # "appToken":Lcom/android/server/wm/AppWindowToken;
    .end local v6    # "cwin":Lcom/android/server/wm/WindowState;
    .end local v7    # "displayOfToken":Lcom/android/server/wm/DisplayContent;
    .end local v8    # "i":I
    .end local v9    # "j":I
    .end local v10    # "keepStartingWindowToCurrentDisplay":Z
    .end local v14    # "prevDisplayContent":Lcom/android/server/wm/DisplayContent;
    .end local v15    # "targetDisplayContent":Lcom/android/server/wm/DisplayContent;
    .end local v16    # "task":Lcom/android/server/wm/Task;
    .end local v17    # "tokenListOfTask":Lcom/android/server/wm/AppTokenList;
    .end local v18    # "tokenNdx":I
    .end local v20    # "win":Lcom/android/server/wm/WindowState;
    .end local v21    # "windowsOfToken":Lcom/android/server/wm/WindowList;
    :catchall_13c
    move-exception v23

    monitor-exit v24
    :try_end_13e
    .catchall {:try_start_7 .. :try_end_13e} :catchall_13c

    throw v23

    .line 9423
    .restart local v4    # "NW":I
    .restart local v5    # "appToken":Lcom/android/server/wm/AppWindowToken;
    .restart local v7    # "displayOfToken":Lcom/android/server/wm/DisplayContent;
    .restart local v8    # "i":I
    .restart local v9    # "j":I
    .restart local v10    # "keepStartingWindowToCurrentDisplay":Z
    .restart local v14    # "prevDisplayContent":Lcom/android/server/wm/DisplayContent;
    .restart local v15    # "targetDisplayContent":Lcom/android/server/wm/DisplayContent;
    .restart local v16    # "task":Lcom/android/server/wm/Task;
    .restart local v17    # "tokenListOfTask":Lcom/android/server/wm/AppTokenList;
    .restart local v18    # "tokenNdx":I
    .restart local v20    # "win":Lcom/android/server/wm/WindowState;
    .restart local v21    # "windowsOfToken":Lcom/android/server/wm/WindowList;
    :cond_13f
    add-int/lit8 v8, v8, 0x1

    goto/16 :goto_bb

    .line 9414
    .end local v9    # "j":I
    .end local v20    # "win":Lcom/android/server/wm/WindowState;
    :cond_143
    add-int/lit8 v18, v18, -0x1

    goto/16 :goto_94

    .line 9448
    .end local v4    # "NW":I
    .end local v5    # "appToken":Lcom/android/server/wm/AppWindowToken;
    .end local v7    # "displayOfToken":Lcom/android/server/wm/DisplayContent;
    .end local v8    # "i":I
    .end local v21    # "windowsOfToken":Lcom/android/server/wm/WindowList;
    :cond_147
    :try_start_147
    move-object/from16 v0, v16

    iget-object v0, v0, Lcom/android/server/wm/Task;->mAppTokens:Lcom/android/server/wm/AppTokenList;

    move-object/from16 v19, v0

    .line 9449
    .local v19, "tokens":Lcom/android/server/wm/AppTokenList;
    invoke-virtual/range {v19 .. v19}, Lcom/android/server/wm/AppTokenList;->size()I

    move-result v12

    .line 9450
    .local v12, "numTokens":I
    const/16 v23, 0x0

    move-object/from16 v0, v19

    move/from16 v1, v23

    invoke-virtual {v0, v1}, Lcom/android/server/wm/AppTokenList;->get(I)Ljava/lang/Object;

    move-result-object v23

    check-cast v23, Lcom/android/server/wm/AppWindowToken;

    move-object/from16 v0, v16

    iget v0, v0, Lcom/android/server/wm/Task;->mTaskId:I

    move/from16 v25, v0

    move-object/from16 v0, p0

    move-object/from16 v1, v23

    move/from16 v2, p3

    move/from16 v3, v25

    invoke-direct {v0, v1, v2, v3}, findAppWindowInsertionPointLocked(Lcom/android/server/wm/AppWindowToken;II)I

    move-result v13

    .line 9451
    .local v13, "pos":I
    const/16 v18, 0x0

    :goto_171
    move/from16 v0, v18

    if-ge v0, v12, :cond_1ce

    .line 9452
    move-object/from16 v0, v19

    move/from16 v1, v18

    invoke-virtual {v0, v1}, Lcom/android/server/wm/AppTokenList;->get(I)Ljava/lang/Object;

    move-result-object v22

    check-cast v22, Lcom/android/server/wm/AppWindowToken;

    .line 9453
    .local v22, "wtoken":Lcom/android/server/wm/AppWindowToken;
    invoke-virtual/range {v22 .. v22}, Lcom/android/server/wm/AppWindowToken;->isVisible()Z

    move-result v23

    if-eqz v23, :cond_18d

    .line 9454
    const/16 v23, 0x1

    move/from16 v0, v23

    move-object/from16 v1, v22

    iput-boolean v0, v1, Lcom/android/server/wm/AppWindowToken;->forceApplyAnimation:Z

    .line 9456
    :cond_18d
    move-object/from16 v0, v22

    iget-object v0, v0, Lcom/android/server/wm/AppWindowToken;->windows:Lcom/android/server/wm/WindowList;

    move-object/from16 v23, v0

    invoke-virtual/range {v23 .. v23}, Lcom/android/server/wm/WindowList;->size()I

    move-result v4

    .line 9457
    .restart local v4    # "NW":I
    const/4 v8, 0x0

    .restart local v8    # "i":I
    :goto_198
    if-ge v8, v4, :cond_1c4

    .line 9458
    move-object/from16 v0, v22

    iget-object v0, v0, Lcom/android/server/wm/AppWindowToken;->windows:Lcom/android/server/wm/WindowList;

    move-object/from16 v23, v0

    move-object/from16 v0, v23

    invoke-virtual {v0, v8}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v20

    check-cast v20, Lcom/android/server/wm/WindowState;

    .line 9466
    .restart local v20    # "win":Lcom/android/server/wm/WindowState;
    move-object/from16 v0, v20

    invoke-virtual {v0, v15}, Lcom/android/server/wm/WindowState;->moveToDisplayLocked(Lcom/android/server/wm/DisplayContent;)Z

    .line 9467
    move-object/from16 v0, p0

    move-object/from16 v1, v20

    invoke-direct {v0, v13, v1}, reAddWindowLocked(ILcom/android/server/wm/WindowState;)I

    move-result v11

    .line 9468
    .local v11, "newPos":I
    move v13, v11

    .line 9470
    invoke-virtual {v14}, Lcom/android/server/wm/DisplayContent;->getWindowList()Lcom/android/server/wm/WindowList;

    move-result-object v23

    move-object/from16 v0, v23

    move-object/from16 v1, v20

    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowList;->remove(Ljava/lang/Object;)Z

    .line 9457
    add-int/lit8 v8, v8, 0x1

    goto :goto_198

    .line 9483
    .end local v11    # "newPos":I
    .end local v20    # "win":Lcom/android/server/wm/WindowState;
    :cond_1c4
    move-object/from16 v0, v22

    move/from16 v1, p3

    invoke-virtual {v0, v1}, Lcom/android/server/wm/AppWindowToken;->setDisplayId(I)V

    .line 9451
    add-int/lit8 v18, v18, 0x1

    goto :goto_171

    .line 9485
    .end local v4    # "NW":I
    .end local v8    # "i":I
    .end local v22    # "wtoken":Lcom/android/server/wm/AppWindowToken;
    :cond_1ce
    move-object/from16 v0, p0

    move/from16 v1, p3

    invoke-virtual {v0, v1}, setFocusedDevice(I)V

    .line 9486
    invoke-virtual {v14}, Lcom/android/server/wm/DisplayContent;->getWindowList()Lcom/android/server/wm/WindowList;

    move-result-object v23

    move-object/from16 v0, p0

    move-object/from16 v1, v23

    invoke-direct {v0, v1}, assignLayersLocked(Lcom/android/server/wm/WindowList;)V

    .line 9487
    invoke-virtual {v15}, Lcom/android/server/wm/DisplayContent;->getWindowList()Lcom/android/server/wm/WindowList;

    move-result-object v23

    move-object/from16 v0, p0

    move-object/from16 v1, v23

    invoke-direct {v0, v1}, assignLayersLocked(Lcom/android/server/wm/WindowList;)V

    .line 9488
    monitor-exit v24
    :try_end_1ec
    .catchall {:try_start_147 .. :try_end_1ec} :catchall_13c

    goto/16 :goto_67
.end method

.method public moveTaskToStack(IIZI)V
    .registers 19
    .param p1, "taskId"    # I
    .param p2, "stackId"    # I
    .param p3, "toTop"    # Z
    .param p4, "taskScreenZone"    # I

    .prologue
    .line 9590
    iget-object v11, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v11

    .line 9591
    :try_start_3
    sget-boolean v10, DEBUG_STACK:Z

    if-eqz v10, :cond_3b

    const-string v12, "WindowManager"

    new-instance v10, Ljava/lang/StringBuilder;

    invoke-direct {v10}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v13, "moveTaskToStack: moving taskId="

    invoke-virtual {v10, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    invoke-virtual {v10, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v10

    const-string v13, " to stackId="

    invoke-virtual {v10, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    move/from16 v0, p2

    invoke-virtual {v10, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v10

    const-string v13, " at "

    invoke-virtual {v10, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v13

    if-eqz p3, :cond_64

    const-string/jumbo v10, "top"

    :goto_30
    invoke-virtual {v13, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    invoke-virtual {v10}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v10

    invoke-static {v12, v10}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 9593
    :cond_3b
    iget-object v10, p0, mTaskIdToTask:Landroid/util/SparseArray;

    invoke-virtual {v10, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v9

    check-cast v9, Lcom/android/server/wm/Task;

    .line 9594
    .local v9, "task":Lcom/android/server/wm/Task;
    if-nez v9, :cond_67

    .line 9595
    sget-boolean v10, DEBUG_STACK:Z

    if-eqz v10, :cond_62

    const-string v10, "WindowManager"

    new-instance v12, Ljava/lang/StringBuilder;

    invoke-direct {v12}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v13, "moveTaskToStack: could not find taskId="

    invoke-virtual {v12, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v12

    invoke-virtual {v12, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v12

    invoke-virtual {v12}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v12

    invoke-static {v10, v12}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 9596
    :cond_62
    monitor-exit v11

    .line 9644
    :goto_63
    return-void

    .line 9591
    .end local v9    # "task":Lcom/android/server/wm/Task;
    :cond_64
    const-string v10, "bottom"

    goto :goto_30

    .line 9598
    .restart local v9    # "task":Lcom/android/server/wm/Task;
    :cond_67
    iget-object v10, p0, mStackIdToStack:Landroid/util/SparseArray;

    move/from16 v0, p2

    invoke-virtual {v10, v0}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v7

    check-cast v7, Lcom/android/server/wm/TaskStack;

    .line 9599
    .local v7, "stack":Lcom/android/server/wm/TaskStack;
    if-nez v7, :cond_97

    .line 9600
    sget-boolean v10, DEBUG_STACK:Z

    if-eqz v10, :cond_92

    const-string v10, "WindowManager"

    new-instance v12, Ljava/lang/StringBuilder;

    invoke-direct {v12}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v13, "moveTaskToStack: could not find stackId="

    invoke-virtual {v12, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v12

    move/from16 v0, p2

    invoke-virtual {v12, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v12

    invoke-virtual {v12}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v12

    invoke-static {v10, v12}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 9601
    :cond_92
    monitor-exit v11

    goto :goto_63

    .line 9643
    .end local v7    # "stack":Lcom/android/server/wm/TaskStack;
    .end local v9    # "task":Lcom/android/server/wm/Task;
    :catchall_94
    move-exception v10

    monitor-exit v11
    :try_end_96
    .catchall {:try_start_3 .. :try_end_96} :catchall_94

    throw v10

    .line 9605
    .restart local v7    # "stack":Lcom/android/server/wm/TaskStack;
    .restart local v9    # "task":Lcom/android/server/wm/Task;
    :cond_97
    const/4 v5, 0x0

    .line 9606
    .local v5, "prevStack":Lcom/android/server/wm/TaskStack;
    const/4 v6, -0x1

    .line 9607
    .local v6, "prevStackDisplayId":I
    const/4 v8, -0x1

    .line 9608
    .local v8, "targetStackDisplayId":I
    const/4 v3, 0x0

    .line 9609
    .local v3, "needRebuild":Z
    const/4 v2, 0x0

    .line 9611
    .local v2, "hasAnotherDisplayTokens":Z
    :try_start_9c
    iget-object v5, v9, Lcom/android/server/wm/Task;->mStack:Lcom/android/server/wm/TaskStack;

    .line 9612
    if-eqz v5, :cond_a8

    .line 9613
    invoke-virtual {v5}, Lcom/android/server/wm/TaskStack;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    move-result-object v10

    invoke-virtual {v10}, Lcom/android/server/wm/DisplayContent;->getDisplayId()I

    move-result v6

    .line 9615
    :cond_a8
    invoke-virtual {v7}, Lcom/android/server/wm/TaskStack;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    move-result-object v10

    invoke-virtual {v10}, Lcom/android/server/wm/DisplayContent;->getDisplayId()I

    move-result v8

    .line 9625
    move/from16 v0, p3

    invoke-virtual {v9, v7, v0}, Lcom/android/server/wm/Task;->moveTaskToStack(Lcom/android/server/wm/TaskStack;Z)V

    .line 9628
    const/4 v4, 0x1

    .line 9630
    .local v4, "needToPerformLayout":Z
    if-ltz v6, :cond_c2

    if-ltz v8, :cond_c2

    if-ne v6, v8, :cond_be

    if-eqz v2, :cond_c2

    .line 9632
    :cond_be
    invoke-virtual {p0, p1, v6, v8}, moveTaskToDisplay(III)V

    .line 9633
    const/4 v4, 0x0

    .line 9638
    :cond_c2
    invoke-virtual {v7}, Lcom/android/server/wm/TaskStack;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    move-result-object v1

    .line 9639
    .local v1, "displayContent":Lcom/android/server/wm/DisplayContent;
    const/4 v10, 0x1

    iput-boolean v10, v1, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    .line 9641
    invoke-direct {p0}, performLayoutAndPlaceSurfacesLocked()V

    .line 9643
    monitor-exit v11
    :try_end_cd
    .catchall {:try_start_9c .. :try_end_cd} :catchall_94

    goto :goto_63
.end method

.method public moveTaskToTop(I)V
    .registers 3
    .param p1, "taskId"    # I

    .prologue
    .line 9130
    const/4 v0, 0x0

    invoke-virtual {p0, p1, v0}, moveTaskToTop(IZ)V

    .line 9131
    return-void
.end method

.method public moveTaskToTop(IZ)V
    .registers 20
    .param p1, "taskId"    # I
    .param p2, "tapOutSide"    # Z

    .prologue
    .line 9135
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v10

    .line 9137
    .local v10, "origId":J
    :try_start_4
    move-object/from16 v0, p0

    iget-object v14, v0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v14
    :try_end_9
    .catchall {:try_start_4 .. :try_end_9} :catchall_b3

    .line 9138
    :try_start_9
    move-object/from16 v0, p0

    iget-object v13, v0, mTaskIdToTask:Landroid/util/SparseArray;

    move/from16 v0, p1

    invoke-virtual {v13, v0}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v12

    check-cast v12, Lcom/android/server/wm/Task;

    .line 9139
    .local v12, "task":Lcom/android/server/wm/Task;
    if-nez v12, :cond_1c

    .line 9141
    monitor-exit v14
    :try_end_18
    .catchall {:try_start_9 .. :try_end_18} :catchall_b0

    .line 9207
    invoke-static {v10, v11}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 9209
    :goto_1b
    return-void

    .line 9147
    :cond_1c
    const/4 v13, 0x1

    :try_start_1d
    move-object/from16 v0, p0

    iput-boolean v13, v0, mSkipWidgetFocus:Z

    .line 9150
    iget-object v9, v12, Lcom/android/server/wm/Task;->mStack:Lcom/android/server/wm/TaskStack;

    .line 9151
    .local v9, "stack":Lcom/android/server/wm/TaskStack;
    invoke-virtual {v12}, Lcom/android/server/wm/Task;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    move-result-object v2

    .line 9152
    .local v2, "displayContent":Lcom/android/server/wm/DisplayContent;
    const/4 v13, 0x1

    invoke-virtual {v2, v9, v13}, Lcom/android/server/wm/DisplayContent;->moveStack(Lcom/android/server/wm/TaskStack;Z)V

    .line 9153
    iget-boolean v13, v2, Lcom/android/server/wm/DisplayContent;->isDefaultDisplay:Z

    if-eqz v13, :cond_39

    .line 9154
    invoke-virtual {v2}, Lcom/android/server/wm/DisplayContent;->getHomeStack()Lcom/android/server/wm/TaskStack;

    move-result-object v3

    .line 9155
    .local v3, "homeStack":Lcom/android/server/wm/TaskStack;
    if-eq v3, v9, :cond_39

    .line 9158
    const/4 v13, 0x0

    invoke-virtual {v2, v3, v13}, Lcom/android/server/wm/DisplayContent;->moveStack(Lcom/android/server/wm/TaskStack;Z)V

    .line 9161
    .end local v3    # "homeStack":Lcom/android/server/wm/TaskStack;
    :cond_39
    invoke-virtual {v9, v12}, Lcom/android/server/wm/TaskStack;->moveTaskToTop(Lcom/android/server/wm/Task;)V

    .line 9163
    move-object/from16 v0, p0

    iget-object v7, v0, mAppTransition:Lcom/android/server/wm/AppTransition;

    .line 9175
    .local v7, "mAppTransition":Lcom/android/server/wm/AppTransition;
    invoke-virtual {v7}, Lcom/android/server/wm/AppTransition;->isTransitionSet()Z

    move-result v6

    .line 9177
    .local v6, "isTransitionSet":Z
    const/4 v4, 0x0

    .line 9179
    .local v4, "isDualScreenTransitionSet":Z
    const/4 v5, 0x0

    .line 9181
    .local v5, "isMultiWindowTransitionSet":Z
    move-object/from16 v0, p0

    iget-object v13, v0, mAnimator:Lcom/android/server/wm/WindowAnimator;

    invoke-virtual {v12}, Lcom/android/server/wm/Task;->getDisplayId()I

    move-result v15

    invoke-virtual {v13, v15}, Lcom/android/server/wm/WindowAnimator;->getMultiWindowTransitionLocked(I)Lcom/android/server/wm/MultiWindowTransition;

    move-result-object v8

    .line 9183
    .local v8, "multiWindowTransition":Lcom/android/server/wm/MultiWindowTransition;
    if-eqz v8, :cond_90

    invoke-virtual {v8}, Lcom/android/server/wm/MultiWindowTransition;->isTransitionSet()Z

    move-result v13

    if-eqz v13, :cond_90

    .line 9184
    sget-boolean v13, DEBUG_MULTIWINDOW:Z

    if-eqz v13, :cond_8f

    sget-boolean v13, SAFE_DEBUG:Z

    if-eqz v13, :cond_8f

    .line 9185
    const-string v13, "WindowManager"

    new-instance v15, Ljava/lang/StringBuilder;

    invoke-direct {v15}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v16, "moveTaskToTop() multiwindowTransition is set transit="

    invoke-virtual/range {v15 .. v16}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v15

    invoke-virtual {v8}, Lcom/android/server/wm/MultiWindowTransition;->getMultiWindowTransition()I

    move-result v16

    invoke-virtual/range {v15 .. v16}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v15

    const-string v16, ", caller="

    invoke-virtual/range {v15 .. v16}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v15

    const/16 v16, 0x4

    invoke-static/range {v16 .. v16}, Landroid/os/Debug;->getCallers(I)Ljava/lang/String;

    move-result-object v16

    invoke-virtual/range {v15 .. v16}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v15

    invoke-virtual {v15}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v15

    invoke-static {v13, v15}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 9187
    :cond_8f
    const/4 v5, 0x1

    .line 9191
    :cond_90
    if-eqz v6, :cond_96

    .line 9192
    const/4 v13, 0x0

    invoke-virtual {v12, v13}, Lcom/android/server/wm/Task;->setSendingToBottom(Z)V

    .line 9195
    :cond_96
    if-nez v6, :cond_9c

    if-nez v4, :cond_9c

    if-eqz v5, :cond_9e

    :cond_9c
    if-eqz p2, :cond_aa

    .line 9196
    :cond_9e
    invoke-virtual {v9}, Lcom/android/server/wm/TaskStack;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    move-result-object v13

    const/4 v15, 0x1

    move-object/from16 v0, p0

    move/from16 v1, p2

    invoke-virtual {v0, v13, v15, v1}, moveStackWindowsLocked(Lcom/android/server/wm/DisplayContent;ZZ)V

    .line 9205
    :cond_aa
    monitor-exit v14
    :try_end_ab
    .catchall {:try_start_1d .. :try_end_ab} :catchall_b0

    .line 9207
    invoke-static {v10, v11}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    goto/16 :goto_1b

    .line 9205
    .end local v2    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v4    # "isDualScreenTransitionSet":Z
    .end local v5    # "isMultiWindowTransitionSet":Z
    .end local v6    # "isTransitionSet":Z
    .end local v7    # "mAppTransition":Lcom/android/server/wm/AppTransition;
    .end local v8    # "multiWindowTransition":Lcom/android/server/wm/MultiWindowTransition;
    .end local v9    # "stack":Lcom/android/server/wm/TaskStack;
    .end local v12    # "task":Lcom/android/server/wm/Task;
    :catchall_b0
    move-exception v13

    :try_start_b1
    monitor-exit v14
    :try_end_b2
    .catchall {:try_start_b1 .. :try_end_b2} :catchall_b0

    :try_start_b2
    throw v13
    :try_end_b3
    .catchall {:try_start_b2 .. :try_end_b3} :catchall_b3

    .line 9207
    :catchall_b3
    move-exception v13

    invoke-static {v10, v11}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v13
.end method

.method public multiwindowSettingChanged(Z)V
    .registers 3
    .param p1, "value"    # Z

    .prologue
    .line 21704
    :try_start_0
    iget-object v0, p0, mActivityManager:Landroid/app/IActivityManager;

    invoke-interface {v0, p1}, Landroid/app/IActivityManager;->multiWindowSettingChanged(Z)V
    :try_end_5
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_5} :catch_6

    .line 21707
    :goto_5
    return-void

    .line 21705
    :catch_6
    move-exception v0

    goto :goto_5
.end method

.method public needHideTrayBar()Z
    .registers 2

    .prologue
    .line 21465
    iget-object v0, p0, mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v0}, Landroid/view/WindowManagerPolicy;->needHideTrayBar()Z

    move-result v0

    return v0
.end method

.method public notifyActivityDrawnForKeyguard()V
    .registers 5

    .prologue
    .line 9906
    const/4 v0, 0x0

    .line 9907
    .local v0, "shouldNotifyActivityDrawn":Z
    iget-object v2, p0, mKeyguardWaitingForActivityDrawnLock:Ljava/lang/Object;

    monitor-enter v2

    .line 9908
    :try_start_4
    iget-boolean v1, p0, mKeyguardWaitingForActivityDrawn:Z

    if-eqz v1, :cond_c

    .line 9909
    const/4 v1, 0x0

    iput-boolean v1, p0, mKeyguardWaitingForActivityDrawn:Z

    .line 9910
    const/4 v0, 0x1

    .line 9912
    :cond_c
    monitor-exit v2
    :try_end_d
    .catchall {:try_start_4 .. :try_end_d} :catchall_4a

    .line 9914
    sget-boolean v1, DEBUG_KEYGUARD:Z

    if-eqz v1, :cond_3b

    const-string v1, "WindowManager"

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v3, "notifyActivityDrawnForKeyguard: waiting="

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    iget-boolean v3, p0, mKeyguardWaitingForActivityDrawn:Z

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string v3, " Callers="

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    const/4 v3, 0x5

    invoke-static {v3}, Landroid/os/Debug;->getCallers(I)Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v1, v2}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 9916
    :cond_3b
    iget-object v2, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v2

    .line 9917
    if-eqz v0, :cond_48

    .line 9918
    :try_start_40
    iget-object v1, p0, mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v1}, Landroid/view/WindowManagerPolicy;->notifyActivityDrawnForKeyguardLw()V

    .line 9919
    const/4 v1, 0x0

    iput-boolean v1, p0, mKeyguardWaitingForActivityDrawn:Z

    .line 9921
    :cond_48
    monitor-exit v2
    :try_end_49
    .catchall {:try_start_40 .. :try_end_49} :catchall_4d

    .line 9923
    return-void

    .line 9912
    :catchall_4a
    move-exception v1

    :try_start_4b
    monitor-exit v2
    :try_end_4c
    .catchall {:try_start_4b .. :try_end_4c} :catchall_4a

    throw v1

    .line 9921
    :catchall_4d
    move-exception v1

    :try_start_4e
    monitor-exit v2
    :try_end_4f
    .catchall {:try_start_4e .. :try_end_4f} :catchall_4d

    throw v1
.end method

.method public notifyDisplayAdded(I)V
    .registers 5
    .param p1, "displayId"    # I

    .prologue
    .line 22071
    iget-object v1, p0, mDisplayContents:Landroid/util/SparseArray;

    const/4 v2, 0x4

    invoke-virtual {v1, v2}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/wm/DisplayContent;

    .line 22072
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-eqz v0, :cond_10

    .line 22073
    iget-object v1, p0, mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v1, p1}, Landroid/view/WindowManagerPolicy;->notifyDisplayAdded(I)V

    .line 22075
    :cond_10
    return-void
.end method

.method notifyHardKeyboardStatusChange()V
    .registers 5

    .prologue
    .line 12871
    iget-object v3, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v3

    .line 12872
    :try_start_3
    iget-object v1, p0, mHardKeyboardStatusChangeListener:Lcom/android/server/wm/WindowManagerService$OnHardKeyboardStatusChangeListener;

    .line 12873
    .local v1, "listener":Lcom/android/server/wm/WindowManagerService$OnHardKeyboardStatusChangeListener;
    iget-boolean v0, p0, mHardKeyboardAvailable:Z

    .line 12874
    .local v0, "available":Z
    monitor-exit v3
    :try_end_8
    .catchall {:try_start_3 .. :try_end_8} :catchall_e

    .line 12875
    if-eqz v1, :cond_d

    .line 12876
    invoke-interface {v1, v0}, Lcom/android/server/wm/WindowManagerService$OnHardKeyboardStatusChangeListener;->onHardKeyboardStatusChange(Z)V

    .line 12878
    :cond_d
    return-void

    .line 12874
    .end local v0    # "available":Z
    .end local v1    # "listener":Lcom/android/server/wm/WindowManagerService$OnHardKeyboardStatusChangeListener;
    :catchall_e
    move-exception v2

    :try_start_f
    monitor-exit v3
    :try_end_10
    .catchall {:try_start_f .. :try_end_10} :catchall_e

    throw v2
.end method

.method public notifyMultiWindowStateChanged(Lcom/android/server/wm/WindowState;I)V
    .registers 10
    .param p1, "win"    # Lcom/android/server/wm/WindowState;
    .param p2, "state"    # I

    .prologue
    .line 22044
    iget-object v5, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v5

    .line 22045
    if-eqz p1, :cond_35

    :try_start_5
    iget-object v4, p1, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    if-eqz v4, :cond_35

    .line 22046
    iget-object v4, p1, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    iget-object v2, v4, Lcom/android/server/wm/AppWindowToken;->allAppWindows:Lcom/android/server/wm/WindowList;

    .line 22047
    .local v2, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual {v2}, Lcom/android/server/wm/WindowList;->size()I

    move-result v0

    .line 22048
    .local v0, "N":I
    const/4 v1, 0x0

    .local v1, "i":I
    :goto_12
    if-ge v1, v0, :cond_35

    .line 22049
    invoke-virtual {v2, v1}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/wm/WindowState;
    :try_end_1a
    .catchall {:try_start_5 .. :try_end_1a} :catchall_37

    .line 22051
    .local v3, "ws":Lcom/android/server/wm/WindowState;
    :try_start_1a
    iget-object v4, v3, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v4, v4, Landroid/view/WindowManager$LayoutParams;->type:I

    const/16 v6, 0x3ee

    if-eq v4, v6, :cond_2a

    iget-object v4, v3, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v4, v4, Landroid/view/WindowManager$LayoutParams;->type:I

    const/16 v6, 0x3ef

    if-ne v4, v6, :cond_2d

    .line 22048
    :cond_2a
    :goto_2a
    add-int/lit8 v1, v1, 0x1

    goto :goto_12

    .line 22060
    :cond_2d
    iget-object v4, v3, Lcom/android/server/wm/WindowState;->mClient:Landroid/view/IWindow;

    invoke-interface {v4, p2}, Landroid/view/IWindow;->dispatchMultiWindowStateChanged(I)V
    :try_end_32
    .catch Landroid/os/RemoteException; {:try_start_1a .. :try_end_32} :catch_33
    .catchall {:try_start_1a .. :try_end_32} :catchall_37

    goto :goto_2a

    .line 22061
    :catch_33
    move-exception v4

    goto :goto_2a

    .line 22065
    .end local v0    # "N":I
    .end local v1    # "i":I
    .end local v2    # "windows":Lcom/android/server/wm/WindowList;
    .end local v3    # "ws":Lcom/android/server/wm/WindowState;
    :cond_35
    :try_start_35
    monitor-exit v5

    .line 22066
    return-void

    .line 22065
    :catchall_37
    move-exception v4

    monitor-exit v5
    :try_end_39
    .catchall {:try_start_35 .. :try_end_39} :catchall_37

    throw v4
.end method

.method public notifySystemUiVisibility(I)V
    .registers 12
    .param p1, "visibility"    # I

    .prologue
    .line 21678
    iget-object v6, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v6

    .line 21680
    :try_start_3
    invoke-virtual {p0}, getDefaultWindowListLocked()Lcom/android/server/wm/WindowList;

    move-result-object v2

    .line 21681
    .local v2, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual {v2}, Lcom/android/server/wm/WindowList;->size()I

    move-result v0

    .line 21682
    .local v0, "N":I
    const/4 v1, 0x0

    .local v1, "i":I
    :goto_c
    if-ge v1, v0, :cond_39

    .line 21683
    invoke-virtual {v2, v1}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/wm/WindowState;

    .line 21684
    .local v3, "ws":Lcom/android/server/wm/WindowState;
    invoke-virtual {v3}, Lcom/android/server/wm/WindowState;->getMultiWindowStyleLw()Lcom/samsung/android/multiwindow/MultiWindowStyle;

    move-result-object v5

    invoke-virtual {v5}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->getZone()I
    :try_end_1b
    .catchall {:try_start_3 .. :try_end_1b} :catchall_3b

    move-result v4

    .line 21687
    .local v4, "zoneInfo":I
    :try_start_1c
    iget-object v5, v3, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v5, v5, Landroid/view/WindowManager$LayoutParams;->multiWindowFlags:I

    and-int/lit8 v5, v5, 0x4

    if-eqz v5, :cond_36

    .line 21688
    if-nez v4, :cond_2e

    iget-object v5, v3, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v5, v5, Landroid/view/WindowManager$LayoutParams;->type:I

    const/16 v7, 0x899

    if-ne v5, v7, :cond_36

    .line 21690
    :cond_2e
    iget-object v5, v3, Lcom/android/server/wm/WindowState;->mClient:Landroid/view/IWindow;

    const/4 v7, 0x0

    const/4 v8, 0x0

    const/4 v9, 0x0

    invoke-interface {v5, v7, p1, v8, v9}, Landroid/view/IWindow;->dispatchSystemUiVisibilityChanged(IIII)V
    :try_end_36
    .catch Landroid/os/RemoteException; {:try_start_1c .. :try_end_36} :catch_3e
    .catchall {:try_start_1c .. :try_end_36} :catchall_3b

    .line 21682
    :cond_36
    :goto_36
    add-int/lit8 v1, v1, 0x1

    goto :goto_c

    .line 21697
    .end local v3    # "ws":Lcom/android/server/wm/WindowState;
    .end local v4    # "zoneInfo":I
    :cond_39
    :try_start_39
    monitor-exit v6

    .line 21698
    return-void

    .line 21697
    .end local v0    # "N":I
    .end local v1    # "i":I
    .end local v2    # "windows":Lcom/android/server/wm/WindowList;
    :catchall_3b
    move-exception v5

    monitor-exit v6
    :try_end_3d
    .catchall {:try_start_39 .. :try_end_3d} :catchall_3b

    throw v5

    .line 21693
    .restart local v0    # "N":I
    .restart local v1    # "i":I
    .restart local v2    # "windows":Lcom/android/server/wm/WindowList;
    .restart local v3    # "ws":Lcom/android/server/wm/WindowState;
    .restart local v4    # "zoneInfo":I
    :catch_3e
    move-exception v5

    goto :goto_36
.end method

.method okToDisplay()Z
    .registers 2

    .prologue
    .line 6232
    const/4 v0, 0x0

    invoke-virtual {p0, v0}, okToDisplay(I)Z

    move-result v0

    return v0
.end method

.method okToDisplay(I)Z
    .registers 3
    .param p1, "displayId"    # I

    .prologue
    .line 6236
    iget-boolean v0, p0, mDisplayFrozen:Z

    if-nez v0, :cond_12

    iget-boolean v0, p0, mDisplayEnabled:Z

    if-eqz v0, :cond_12

    iget-object v0, p0, mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v0, p1}, Landroid/view/WindowManagerPolicy;->isScreenOn(I)Z

    move-result v0

    if-eqz v0, :cond_12

    const/4 v0, 0x1

    :goto_11
    return v0

    :cond_12
    const/4 v0, 0x0

    goto :goto_11
.end method

.method public onDisplayAdded(I)V
    .registers 6
    .param p1, "displayId"    # I

    .prologue
    .line 20130
    iget-object v0, p0, mH:Lcom/android/server/wm/WindowManagerService$H;

    iget-object v1, p0, mH:Lcom/android/server/wm/WindowManagerService$H;

    const/16 v2, 0x1b

    const/4 v3, 0x0

    invoke-virtual {v1, v2, p1, v3}, Lcom/android/server/wm/WindowManagerService$H;->obtainMessage(III)Landroid/os/Message;

    move-result-object v1

    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowManagerService$H;->sendMessage(Landroid/os/Message;)Z

    .line 20131
    return-void
.end method

.method public onDisplayChanged(I)V
    .registers 6
    .param p1, "displayId"    # I

    .prologue
    .line 20174
    iget-object v0, p0, mH:Lcom/android/server/wm/WindowManagerService$H;

    iget-object v1, p0, mH:Lcom/android/server/wm/WindowManagerService$H;

    const/16 v2, 0x1d

    const/4 v3, 0x0

    invoke-virtual {v1, v2, p1, v3}, Lcom/android/server/wm/WindowManagerService$H;->obtainMessage(III)Landroid/os/Message;

    move-result-object v1

    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowManagerService$H;->sendMessage(Landroid/os/Message;)Z

    .line 20175
    return-void
.end method

.method public onDisplayRemoved(I)V
    .registers 6
    .param p1, "displayId"    # I

    .prologue
    .line 20145
    iget-object v0, p0, mH:Lcom/android/server/wm/WindowManagerService$H;

    iget-object v1, p0, mH:Lcom/android/server/wm/WindowManagerService$H;

    const/16 v2, 0x1c

    const/4 v3, 0x0

    invoke-virtual {v1, v2, p1, v3}, Lcom/android/server/wm/WindowManagerService$H;->obtainMessage(III)Landroid/os/Message;

    move-result-object v1

    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowManagerService$H;->sendMessage(Landroid/os/Message;)Z

    .line 20146
    return-void
.end method

.method public onFixedScreenModeChanged(I)V
    .registers 3
    .param p1, "fixedTaskId"    # I

    .prologue
    .line 3100
    iget-object v0, p0, mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v0, p1}, Landroid/view/WindowManagerPolicy;->onFixedScreenModeChanged(I)V

    .line 3101
    return-void
.end method

.method public onLockTaskModeChanged(I)V
    .registers 3
    .param p1, "lockTaskModeState"    # I

    .prologue
    .line 20297
    iget-object v0, p0, mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v0, p1}, Landroid/view/WindowManagerPolicy;->onLockTaskModeChanged(I)V

    .line 20298
    return-void
.end method

.method public onRectangleOnScreenRequested(Landroid/os/IBinder;Landroid/graphics/Rect;)V
    .registers 6
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "rectangle"    # Landroid/graphics/Rect;

    .prologue
    .line 5154
    iget-object v2, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v2

    .line 5164
    :try_start_3
    iget-object v1, p0, mAccessibilityController:Lcom/android/server/wm/AccessibilityController;

    if-eqz v1, :cond_1c

    .line 5165
    iget-object v1, p0, mWindowMap:Ljava/util/HashMap;

    invoke-virtual {v1, p1}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/wm/WindowState;

    .line 5167
    .local v0, "window":Lcom/android/server/wm/WindowState;
    if-eqz v0, :cond_1c

    invoke-virtual {v0}, Lcom/android/server/wm/WindowState;->getDisplayId()I

    move-result v1

    if-nez v1, :cond_1c

    .line 5168
    iget-object v1, p0, mAccessibilityController:Lcom/android/server/wm/AccessibilityController;

    invoke-virtual {v1, p2}, Lcom/android/server/wm/AccessibilityController;->onRectangleOnScreenRequestedLocked(Landroid/graphics/Rect;)V

    .line 5172
    .end local v0    # "window":Lcom/android/server/wm/WindowState;
    :cond_1c
    monitor-exit v2

    .line 5173
    return-void

    .line 5172
    :catchall_1e
    move-exception v1

    monitor-exit v2
    :try_end_20
    .catchall {:try_start_3 .. :try_end_20} :catchall_1e

    throw v1
.end method

.method public onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
    .registers 8
    .param p1, "code"    # I
    .param p2, "data"    # Landroid/os/Parcel;
    .param p3, "reply"    # Landroid/os/Parcel;
    .param p4, "flags"    # I
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Landroid/os/RemoteException;
        }
    .end annotation

    .prologue
    .line 1850
    :try_start_0
    invoke-super {p0, p1, p2, p3, p4}, Landroid/view/IWindowManager$Stub;->onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
    :try_end_3
    .catch Ljava/lang/RuntimeException; {:try_start_0 .. :try_end_3} :catch_5

    move-result v1

    return v1

    .line 1851
    :catch_5
    move-exception v0

    .line 1854
    .local v0, "e":Ljava/lang/RuntimeException;
    instance-of v1, v0, Ljava/lang/SecurityException;

    if-nez v1, :cond_11

    .line 1855
    const-string v1, "WindowManager"

    const-string v2, "Window Manager Crash"

    invoke-static {v1, v2, v0}, Landroid/util/Slog;->wtf(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 1857
    :cond_11
    throw v0
.end method

.method public openSession(Landroid/view/IWindowSessionCallback;Lcom/android/internal/view/IInputMethodClient;Lcom/android/internal/view/IInputContext;)Landroid/view/IWindowSession;
    .registers 7
    .param p1, "callback"    # Landroid/view/IWindowSessionCallback;
    .param p2, "client"    # Lcom/android/internal/view/IInputMethodClient;
    .param p3, "inputContext"    # Lcom/android/internal/view/IInputContext;

    .prologue
    .line 14280
    if-nez p2, :cond_b

    new-instance v1, Ljava/lang/IllegalArgumentException;

    const-string/jumbo v2, "null client"

    invoke-direct {v1, v2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 14281
    :cond_b
    if-nez p3, :cond_16

    new-instance v1, Ljava/lang/IllegalArgumentException;

    const-string/jumbo v2, "null inputContext"

    invoke-direct {v1, v2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 14282
    :cond_16
    new-instance v0, Lcom/android/server/wm/Session;

    invoke-direct {v0, p0, p1, p2, p3}, Lcom/android/server/wm/Session;-><init>(Lcom/android/server/wm/WindowManagerService;Landroid/view/IWindowSessionCallback;Lcom/android/internal/view/IInputMethodClient;Lcom/android/internal/view/IInputContext;)V

    .line 14283
    .local v0, "session":Lcom/android/server/wm/Session;
    return-object v0
.end method

.method public outOfMemoryWindow(Lcom/android/server/wm/Session;Landroid/view/IWindow;)Z
    .registers 10
    .param p1, "session"    # Lcom/android/server/wm/Session;
    .param p2, "client"    # Landroid/view/IWindow;

    .prologue
    const/4 v3, 0x0

    .line 5881
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 5884
    .local v0, "origId":J
    :try_start_5
    iget-object v4, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v4
    :try_end_8
    .catchall {:try_start_5 .. :try_end_8} :catchall_26

    .line 5885
    const/4 v5, 0x0

    :try_start_9
    invoke-virtual {p0, p1, p2, v5}, windowForClientLocked(Lcom/android/server/wm/Session;Landroid/view/IWindow;Z)Lcom/android/server/wm/WindowState;

    move-result-object v2

    .line 5886
    .local v2, "win":Lcom/android/server/wm/WindowState;
    if-nez v2, :cond_14

    .line 5887
    monitor-exit v4
    :try_end_10
    .catchall {:try_start_9 .. :try_end_10} :catchall_23

    .line 5892
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    :goto_13
    return v3

    .line 5889
    :cond_14
    :try_start_14
    iget-object v3, v2, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    const-string/jumbo v5, "from-client"

    const/4 v6, 0x0

    invoke-virtual {p0, v3, v5, v6}, reclaimSomeSurfaceMemoryLocked(Lcom/android/server/wm/WindowStateAnimator;Ljava/lang/String;Z)Z

    move-result v3

    monitor-exit v4
    :try_end_1f
    .catchall {:try_start_14 .. :try_end_1f} :catchall_23

    .line 5892
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    goto :goto_13

    .line 5890
    .end local v2    # "win":Lcom/android/server/wm/WindowState;
    :catchall_23
    move-exception v3

    :try_start_24
    monitor-exit v4
    :try_end_25
    .catchall {:try_start_24 .. :try_end_25} :catchall_23

    :try_start_25
    throw v3
    :try_end_26
    .catchall {:try_start_25 .. :try_end_26} :catchall_26

    .line 5892
    :catchall_26
    move-exception v3

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v3
.end method

.method public overrideNextAppTransition(Landroid/os/IBinder;II)V
    .registers 14
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "requestedTransit"    # I
    .param p3, "displayId"    # I

    .prologue
    const/4 v8, 0x1

    .line 22503
    iget-object v7, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v7

    .line 22505
    :try_start_4
    invoke-direct {p0, p3}, usesOppositeOrientation(I)Z

    move-result v6

    if-eqz v6, :cond_1a

    if-ne p2, v8, :cond_1a

    .line 22506
    sget-boolean v6, Lcom/android/server/wm/DualScreenTransition;->DEBUG:Z

    if-eqz v6, :cond_18

    const-string v6, "WindowManager"

    const-string/jumbo v8, "overrideNextAppTransition is ignored. because applicaiton uses requestOppositeDisplayOrientation API."

    invoke-static {v6, v8}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 22508
    :cond_18
    monitor-exit v7

    .line 22539
    :goto_19
    return-void

    .line 22511
    :cond_1a
    invoke-virtual {p0, p1}, findAppWindowToken(Landroid/os/IBinder;)Lcom/android/server/wm/AppWindowToken;

    move-result-object v1

    .line 22512
    .local v1, "atoken":Lcom/android/server/wm/AppWindowToken;
    if-eqz v1, :cond_3f

    .line 22513
    iget-object v6, v1, Lcom/android/server/wm/AppWindowToken;->allAppWindows:Lcom/android/server/wm/WindowList;

    invoke-virtual {v6}, Lcom/android/server/wm/WindowList;->iterator()Ljava/util/Iterator;

    move-result-object v2

    .local v2, "i$":Ljava/util/Iterator;
    :cond_26
    invoke-interface {v2}, Ljava/util/Iterator;->hasNext()Z

    move-result v6

    if-eqz v6, :cond_3f

    invoke-interface {v2}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/android/server/wm/WindowState;

    .line 22514
    .local v5, "w":Lcom/android/server/wm/WindowState;
    iget-object v6, v5, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v6, v6, Landroid/view/WindowManager$LayoutParams;->samsungFlags:I

    and-int/lit8 v6, v6, 0xc

    if-eqz v6, :cond_26

    .line 22516
    monitor-exit v7

    goto :goto_19

    .line 22538
    .end local v1    # "atoken":Lcom/android/server/wm/AppWindowToken;
    .end local v2    # "i$":Ljava/util/Iterator;
    .end local v5    # "w":Lcom/android/server/wm/WindowState;
    :catchall_3c
    move-exception v6

    monitor-exit v7
    :try_end_3e
    .catchall {:try_start_4 .. :try_end_3e} :catchall_3c

    throw v6

    .line 22521
    .restart local v1    # "atoken":Lcom/android/server/wm/AppWindowToken;
    :cond_3f
    const/4 v4, -0x1

    .line 22522
    .local v4, "transitType":I
    if-ne p2, v8, :cond_48

    .line 22523
    const/16 v4, 0x9

    .line 22527
    :cond_44
    :goto_44
    if-gez v4, :cond_4e

    .line 22528
    :try_start_46
    monitor-exit v7

    goto :goto_19

    .line 22524
    :cond_48
    const/4 v6, 0x2

    if-ne p2, v6, :cond_44

    .line 22525
    const/16 v4, 0xa

    goto :goto_44

    .line 22530
    :cond_4e
    invoke-virtual {p0, p1}, findAppWindowToken(Landroid/os/IBinder;)Lcom/android/server/wm/AppWindowToken;

    move-result-object v3

    .line 22531
    .local v3, "requester":Lcom/android/server/wm/AppWindowToken;
    invoke-virtual {p0, p3}, getAppTransitionForDisplayLocked(I)Lcom/android/server/wm/AppTransition;

    move-result-object v0

    .line 22532
    .local v0, "appTransition":Lcom/android/server/wm/AppTransition;
    sget-boolean v6, Lcom/android/server/wm/DualScreenTransition;->DEBUG:Z

    if-eqz v6, :cond_9f

    const-string v6, "WindowManager"

    new-instance v8, Ljava/lang/StringBuilder;

    invoke-direct {v8}, Ljava/lang/StringBuilder;-><init>()V

    const-string v9, "Override app transition [d"

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v8

    invoke-virtual {v8, p3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v8

    const-string v9, "] : transitType="

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v8

    invoke-virtual {v8, v4}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v8

    const-string v9, " "

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v8

    invoke-virtual {v8, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v8

    const-string v9, " requester="

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v8

    invoke-virtual {v8, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v8

    const-string v9, " Callers="

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v8

    const/4 v9, 0x3

    invoke-static {v9}, Landroid/os/Debug;->getCallers(I)Ljava/lang/String;

    move-result-object v9

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v8

    invoke-virtual {v8}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v8

    invoke-static {v6, v8}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 22537
    :cond_9f
    invoke-virtual {v0, v4, v3}, Lcom/android/server/wm/AppTransition;->overrideNextAppTransition(ILcom/android/server/wm/AppWindowToken;)V

    .line 22538
    monitor-exit v7
    :try_end_a3
    .catchall {:try_start_46 .. :try_end_a3} :catchall_3c

    goto/16 :goto_19
.end method

.method public overridePendingAppTransition(Ljava/lang/String;IILandroid/os/IRemoteCallback;)V
    .registers 11
    .param p1, "packageName"    # Ljava/lang/String;
    .param p2, "enterAnim"    # I
    .param p3, "exitAnim"    # I
    .param p4, "startedCallback"    # Landroid/os/IRemoteCallback;

    .prologue
    .line 7788
    invoke-virtual {p0}, getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v0

    invoke-virtual {v0}, Lcom/android/server/wm/DisplayContent;->getDisplayId()I

    move-result v5

    move-object v0, p0

    move-object v1, p1

    move v2, p2

    move v3, p3

    move-object v4, p4

    invoke-virtual/range {v0 .. v5}, overridePendingAppTransition(Ljava/lang/String;IILandroid/os/IRemoteCallback;I)V

    .line 7790
    return-void
.end method

.method public overridePendingAppTransition(Ljava/lang/String;IILandroid/os/IRemoteCallback;I)V
    .registers 9
    .param p1, "packageName"    # Ljava/lang/String;
    .param p2, "enterAnim"    # I
    .param p3, "exitAnim"    # I
    .param p4, "startedCallback"    # Landroid/os/IRemoteCallback;
    .param p5, "displayId"    # I

    .prologue
    .line 7795
    iget-object v2, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v2

    .line 7797
    :try_start_3
    invoke-virtual {p0, p5}, getAppTransitionForDisplayLocked(I)Lcom/android/server/wm/AppTransition;

    move-result-object v0

    .line 7799
    .local v0, "mAppTransition":Lcom/android/server/wm/AppTransition;
    invoke-virtual {v0, p1, p2, p3, p4}, Lcom/android/server/wm/AppTransition;->overridePendingAppTransition(Ljava/lang/String;IILandroid/os/IRemoteCallback;)V

    .line 7801
    monitor-exit v2

    .line 7802
    return-void

    .line 7801
    .end local v0    # "mAppTransition":Lcom/android/server/wm/AppTransition;
    :catchall_c
    move-exception v1

    monitor-exit v2
    :try_end_e
    .catchall {:try_start_3 .. :try_end_e} :catchall_c

    throw v1
.end method

.method public overridePendingAppTransitionAspectScaledThumb(Landroid/graphics/Bitmap;IIIILandroid/os/IRemoteCallback;Landroid/os/IRemoteCallback;Z)V
    .registers 19
    .param p1, "srcThumb"    # Landroid/graphics/Bitmap;
    .param p2, "startX"    # I
    .param p3, "startY"    # I
    .param p4, "targetWidth"    # I
    .param p5, "targetHeight"    # I
    .param p6, "startedCallback"    # Landroid/os/IRemoteCallback;
    .param p7, "transitCallback"    # Landroid/os/IRemoteCallback;
    .param p8, "scaleUp"    # Z

    .prologue
    .line 7873
    invoke-virtual {p0}, getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v0

    invoke-virtual {v0}, Lcom/android/server/wm/DisplayContent;->getDisplayId()I

    move-result v9

    move-object v0, p0

    move-object v1, p1

    move v2, p2

    move v3, p3

    move v4, p4

    move v5, p5

    move-object/from16 v6, p6

    move-object/from16 v7, p7

    move/from16 v8, p8

    invoke-virtual/range {v0 .. v9}, overridePendingAppTransitionAspectScaledThumb(Landroid/graphics/Bitmap;IIIILandroid/os/IRemoteCallback;Landroid/os/IRemoteCallback;ZI)V

    .line 7877
    return-void
.end method

.method public overridePendingAppTransitionAspectScaledThumb(Landroid/graphics/Bitmap;IIIILandroid/os/IRemoteCallback;Landroid/os/IRemoteCallback;ZI)V
    .registers 21
    .param p1, "srcThumb"    # Landroid/graphics/Bitmap;
    .param p2, "startX"    # I
    .param p3, "startY"    # I
    .param p4, "targetWidth"    # I
    .param p5, "targetHeight"    # I
    .param p6, "startedCallback"    # Landroid/os/IRemoteCallback;
    .param p7, "transitCallback"    # Landroid/os/IRemoteCallback;
    .param p8, "scaleUp"    # Z
    .param p9, "displayId"    # I

    .prologue
    .line 7884
    iget-object v10, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v10

    .line 7886
    :try_start_3
    move/from16 v0, p9

    invoke-virtual {p0, v0}, getAppTransitionForDisplayLocked(I)Lcom/android/server/wm/AppTransition;

    move-result-object v1

    .local v1, "mAppTransition":Lcom/android/server/wm/AppTransition;
    move-object v2, p1

    move v3, p2

    move v4, p3

    move v5, p4

    move/from16 v6, p5

    move-object/from16 v7, p6

    move-object/from16 v8, p7

    move/from16 v9, p8

    .line 7888
    invoke-virtual/range {v1 .. v9}, Lcom/android/server/wm/AppTransition;->overridePendingAppTransitionAspectScaledThumb(Landroid/graphics/Bitmap;IIIILandroid/os/IRemoteCallback;Landroid/os/IRemoteCallback;Z)V

    .line 7891
    monitor-exit v10

    .line 7892
    return-void

    .line 7891
    .end local v1    # "mAppTransition":Lcom/android/server/wm/AppTransition;
    :catchall_1a
    move-exception v2

    monitor-exit v10
    :try_end_1c
    .catchall {:try_start_3 .. :try_end_1c} :catchall_1a

    throw v2
.end method

.method public overridePendingAppTransitionClipReveal(IIII)V
    .registers 7
    .param p1, "startX"    # I
    .param p2, "startY"    # I
    .param p3, "startWidth"    # I
    .param p4, "startHeight"    # I

    .prologue
    .line 7826
    iget-object v1, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v1

    .line 7827
    :try_start_3
    iget-object v0, p0, mAppTransition:Lcom/android/server/wm/AppTransition;

    invoke-virtual {v0, p1, p2, p3, p4}, Lcom/android/server/wm/AppTransition;->overridePendingAppTransitionClipReveal(IIII)V

    .line 7829
    monitor-exit v1

    .line 7830
    return-void

    .line 7829
    :catchall_a
    move-exception v0

    monitor-exit v1
    :try_end_c
    .catchall {:try_start_3 .. :try_end_c} :catchall_a

    throw v0
.end method

.method public overridePendingAppTransitionCustomScaleUp(IIII)V
    .registers 7
    .param p1, "startX"    # I
    .param p2, "startY"    # I
    .param p3, "startWidth"    # I
    .param p4, "startHeight"    # I

    .prologue
    .line 7835
    iget-object v1, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v1

    .line 7836
    :try_start_3
    iget-object v0, p0, mAppTransition:Lcom/android/server/wm/AppTransition;

    invoke-virtual {v0, p1, p2, p3, p4}, Lcom/android/server/wm/AppTransition;->overridePendingAppTransitionCustomScaleUp(IIII)V

    .line 7838
    monitor-exit v1

    .line 7839
    return-void

    .line 7838
    :catchall_a
    move-exception v0

    monitor-exit v1
    :try_end_c
    .catchall {:try_start_3 .. :try_end_c} :catchall_a

    throw v0
.end method

.method public overridePendingAppTransitionInPlace(Ljava/lang/String;I)V
    .registers 5
    .param p1, "packageName"    # Ljava/lang/String;
    .param p2, "anim"    # I

    .prologue
    .line 7896
    iget-object v1, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v1

    .line 7897
    :try_start_3
    invoke-virtual {p0}, getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v0

    invoke-virtual {v0}, Lcom/android/server/wm/DisplayContent;->getDisplayId()I

    move-result v0

    invoke-virtual {p0, p1, p2, v0}, overridePendingAppTransitionInPlace(Ljava/lang/String;II)V

    .line 7898
    monitor-exit v1

    .line 7899
    return-void

    .line 7898
    :catchall_10
    move-exception v0

    monitor-exit v1
    :try_end_12
    .catchall {:try_start_3 .. :try_end_12} :catchall_10

    throw v0
.end method

.method public overridePendingAppTransitionInPlace(Ljava/lang/String;II)V
    .registers 7
    .param p1, "packageName"    # Ljava/lang/String;
    .param p2, "anim"    # I
    .param p3, "displayId"    # I

    .prologue
    .line 7902
    iget-object v2, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v2

    .line 7904
    :try_start_3
    invoke-virtual {p0, p3}, getAppTransitionForDisplayLocked(I)Lcom/android/server/wm/AppTransition;

    move-result-object v0

    .line 7906
    .local v0, "mAppTransition":Lcom/android/server/wm/AppTransition;
    invoke-virtual {v0, p1, p2}, Lcom/android/server/wm/AppTransition;->overrideInPlaceAppTransition(Ljava/lang/String;I)V

    .line 7907
    monitor-exit v2

    .line 7908
    return-void

    .line 7907
    .end local v0    # "mAppTransition":Lcom/android/server/wm/AppTransition;
    :catchall_c
    move-exception v1

    monitor-exit v2
    :try_end_e
    .catchall {:try_start_3 .. :try_end_e} :catchall_c

    throw v1
.end method

.method public overridePendingAppTransitionScaleUp(IIII)V
    .registers 11
    .param p1, "startX"    # I
    .param p2, "startY"    # I
    .param p3, "startWidth"    # I
    .param p4, "startHeight"    # I

    .prologue
    .line 7808
    invoke-virtual {p0}, getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v0

    invoke-virtual {v0}, Lcom/android/server/wm/DisplayContent;->getDisplayId()I

    move-result v5

    move-object v0, p0

    move v1, p1

    move v2, p2

    move v3, p3

    move v4, p4

    invoke-virtual/range {v0 .. v5}, overridePendingAppTransitionScaleUp(IIIII)V

    .line 7809
    return-void
.end method

.method public overridePendingAppTransitionScaleUp(IIIII)V
    .registers 9
    .param p1, "startX"    # I
    .param p2, "startY"    # I
    .param p3, "startWidth"    # I
    .param p4, "startHeight"    # I
    .param p5, "displayId"    # I

    .prologue
    .line 7814
    iget-object v2, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v2

    .line 7816
    :try_start_3
    invoke-virtual {p0, p5}, getAppTransitionForDisplayLocked(I)Lcom/android/server/wm/AppTransition;

    move-result-object v0

    .line 7818
    .local v0, "mAppTransition":Lcom/android/server/wm/AppTransition;
    invoke-virtual {v0, p1, p2, p3, p4}, Lcom/android/server/wm/AppTransition;->overridePendingAppTransitionScaleUp(IIII)V

    .line 7820
    monitor-exit v2

    .line 7821
    return-void

    .line 7820
    .end local v0    # "mAppTransition":Lcom/android/server/wm/AppTransition;
    :catchall_c
    move-exception v1

    monitor-exit v2
    :try_end_e
    .catchall {:try_start_3 .. :try_end_e} :catchall_c

    throw v1
.end method

.method public overridePendingAppTransitionScaleUp(Lcom/samsung/android/dualscreen/DualScreen;I)V
    .registers 5
    .param p1, "screen"    # Lcom/samsung/android/dualscreen/DualScreen;
    .param p2, "transit"    # I

    .prologue
    .line 22796
    invoke-virtual {p1}, Lcom/samsung/android/dualscreen/DualScreen;->getDisplayId()I

    move-result v0

    .line 22797
    .local v0, "displayId":I
    invoke-virtual {p0, v0}, getAppTransitionForDisplayLocked(I)Lcom/android/server/wm/AppTransition;

    move-result-object v1

    .line 22799
    .local v1, "mAppTransition":Lcom/android/server/wm/AppTransition;
    return-void
.end method

.method public overridePendingAppTransitionThumb(Landroid/graphics/Bitmap;IILandroid/os/IRemoteCallback;Landroid/os/IRemoteCallback;Z)V
    .registers 15
    .param p1, "srcThumb"    # Landroid/graphics/Bitmap;
    .param p2, "startX"    # I
    .param p3, "startY"    # I
    .param p4, "startedCallback"    # Landroid/os/IRemoteCallback;
    .param p5, "transitCallback"    # Landroid/os/IRemoteCallback;
    .param p6, "scaleUp"    # Z

    .prologue
    .line 7848
    invoke-virtual {p0}, getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v0

    invoke-virtual {v0}, Lcom/android/server/wm/DisplayContent;->getDisplayId()I

    move-result v7

    move-object v0, p0

    move-object v1, p1

    move v2, p2

    move v3, p3

    move-object v4, p4

    move-object v5, p5

    move v6, p6

    invoke-virtual/range {v0 .. v7}, overridePendingAppTransitionThumb(Landroid/graphics/Bitmap;IILandroid/os/IRemoteCallback;Landroid/os/IRemoteCallback;ZI)V

    .line 7851
    return-void
.end method

.method public overridePendingAppTransitionThumb(Landroid/graphics/Bitmap;IILandroid/os/IRemoteCallback;Landroid/os/IRemoteCallback;ZI)V
    .registers 16
    .param p1, "srcThumb"    # Landroid/graphics/Bitmap;
    .param p2, "startX"    # I
    .param p3, "startY"    # I
    .param p4, "startedCallback"    # Landroid/os/IRemoteCallback;
    .param p5, "transitCallback"    # Landroid/os/IRemoteCallback;
    .param p6, "scaleUp"    # Z
    .param p7, "displayId"    # I

    .prologue
    .line 7858
    iget-object v7, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v7

    .line 7860
    :try_start_3
    invoke-virtual {p0, p7}, getAppTransitionForDisplayLocked(I)Lcom/android/server/wm/AppTransition;

    move-result-object v0

    .local v0, "mAppTransition":Lcom/android/server/wm/AppTransition;
    move-object v1, p1

    move v2, p2

    move v3, p3

    move-object v4, p4

    move-object v5, p5

    move v6, p6

    .line 7862
    invoke-virtual/range {v0 .. v6}, Lcom/android/server/wm/AppTransition;->overridePendingAppTransitionThumb(Landroid/graphics/Bitmap;IILandroid/os/IRemoteCallback;Landroid/os/IRemoteCallback;Z)V

    .line 7864
    monitor-exit v7

    .line 7865
    return-void

    .line 7864
    .end local v0    # "mAppTransition":Lcom/android/server/wm/AppTransition;
    :catchall_12
    move-exception v1

    monitor-exit v7
    :try_end_14
    .catchall {:try_start_3 .. :try_end_14} :catchall_12

    throw v1
.end method

.method public overridePendingAppTransitionTranslate()V
    .registers 4

    .prologue
    .line 22349
    iget-object v2, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v2

    .line 22351
    const/4 v1, 0x0

    :try_start_4
    invoke-virtual {p0, v1}, getAppTransitionForDisplayLocked(I)Lcom/android/server/wm/AppTransition;

    move-result-object v0

    .line 22353
    .local v0, "mAppTransition":Lcom/android/server/wm/AppTransition;
    iget-object v1, p0, mContext:Landroid/content/Context;

    invoke-static {v1}, Lcom/samsung/android/cocktailbar/CocktailBarFeatures;->isSystemBarType(Landroid/content/Context;)Z

    move-result v1

    if-eqz v1, :cond_13

    .line 22354
    invoke-virtual {v0}, Lcom/android/server/wm/AppTransition;->overridePendingAppTransitionTranslate()V

    .line 22356
    :cond_13
    monitor-exit v2

    .line 22359
    return-void

    .line 22356
    .end local v0    # "mAppTransition":Lcom/android/server/wm/AppTransition;
    :catchall_15
    move-exception v1

    monitor-exit v2
    :try_end_17
    .catchall {:try_start_4 .. :try_end_17} :catchall_15

    throw v1
.end method

.method public pauseKeyDispatching(Landroid/os/IBinder;)V
    .registers 5
    .param p1, "_token"    # Landroid/os/IBinder;

    .prologue
    .line 12970
    const-string v1, "android.permission.MANAGE_APP_TOKENS"

    const-string/jumbo v2, "pauseKeyDispatching()"

    invoke-virtual {p0, v1, v2}, checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v1

    if-nez v1, :cond_13

    .line 12972
    new-instance v1, Ljava/lang/SecurityException;

    const-string v2, "Requires MANAGE_APP_TOKENS permission"

    invoke-direct {v1, v2}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 12975
    :cond_13
    iget-object v2, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v2

    .line 12976
    :try_start_16
    iget-object v1, p0, mTokenMap:Ljava/util/HashMap;

    invoke-virtual {v1, p1}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/wm/WindowToken;

    .line 12977
    .local v0, "token":Lcom/android/server/wm/WindowToken;
    if-eqz v0, :cond_25

    .line 12978
    iget-object v1, p0, mInputMonitor:Lcom/android/server/wm/InputMonitor;

    invoke-virtual {v1, v0}, Lcom/android/server/wm/InputMonitor;->pauseDispatchingLw(Lcom/android/server/wm/WindowToken;)V

    .line 12980
    :cond_25
    monitor-exit v2

    .line 12981
    return-void

    .line 12980
    .end local v0    # "token":Lcom/android/server/wm/WindowToken;
    :catchall_27
    move-exception v1

    monitor-exit v2
    :try_end_29
    .catchall {:try_start_16 .. :try_end_29} :catchall_27

    throw v1
.end method

.method pauseRotationLocked()V
    .registers 2

    .prologue
    .line 11288
    iget v0, p0, mDeferredRotationPauseCount:I

    add-int/lit8 v0, v0, 0x1

    iput v0, p0, mDeferredRotationPauseCount:I

    .line 11289
    return-void
.end method

.method public performBootTimeout()V
    .registers 4

    .prologue
    .line 10331
    iget-object v1, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v1

    .line 10332
    :try_start_3
    iget-boolean v0, p0, mDisplayEnabled:Z

    if-eqz v0, :cond_9

    .line 10333
    monitor-exit v1

    .line 10339
    :goto_8
    return-void

    .line 10335
    :cond_9
    const-string v0, "WindowManager"

    const-string v2, "***** BOOT TIMEOUT: forcing display enabled"

    invoke-static {v0, v2}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 10336
    const/4 v0, 0x1

    iput-boolean v0, p0, mForceDisplayEnabled:Z

    .line 10337
    monitor-exit v1
    :try_end_14
    .catchall {:try_start_3 .. :try_end_14} :catchall_18

    .line 10338
    invoke-virtual {p0}, performEnableScreen()V

    goto :goto_8

    .line 10337
    :catchall_18
    move-exception v0

    :try_start_19
    monitor-exit v1
    :try_end_1a
    .catchall {:try_start_19 .. :try_end_1a} :catchall_18

    throw v0
.end method

.method public performDeferredDestroyWindow(Lcom/android/server/wm/Session;Landroid/view/IWindow;)V
    .registers 8
    .param p1, "session"    # Lcom/android/server/wm/Session;
    .param p2, "client"    # Landroid/view/IWindow;

    .prologue
    .line 5865
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 5868
    .local v0, "origId":J
    :try_start_4
    iget-object v4, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v4
    :try_end_7
    .catchall {:try_start_4 .. :try_end_7} :catchall_20

    .line 5869
    const/4 v3, 0x0

    :try_start_8
    invoke-virtual {p0, p1, p2, v3}, windowForClientLocked(Lcom/android/server/wm/Session;Landroid/view/IWindow;Z)Lcom/android/server/wm/WindowState;

    move-result-object v2

    .line 5870
    .local v2, "win":Lcom/android/server/wm/WindowState;
    if-nez v2, :cond_13

    .line 5871
    monitor-exit v4
    :try_end_f
    .catchall {:try_start_8 .. :try_end_f} :catchall_1d

    .line 5876
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 5878
    :goto_12
    return-void

    .line 5873
    :cond_13
    :try_start_13
    iget-object v3, v2, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    invoke-virtual {v3}, Lcom/android/server/wm/WindowStateAnimator;->destroyDeferredSurfaceLocked()V

    .line 5874
    monitor-exit v4
    :try_end_19
    .catchall {:try_start_13 .. :try_end_19} :catchall_1d

    .line 5876
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    goto :goto_12

    .line 5874
    .end local v2    # "win":Lcom/android/server/wm/WindowState;
    :catchall_1d
    move-exception v3

    :try_start_1e
    monitor-exit v4
    :try_end_1f
    .catchall {:try_start_1e .. :try_end_1f} :catchall_1d

    :try_start_1f
    throw v3
    :try_end_20
    .catchall {:try_start_1f .. :try_end_20} :catchall_20

    .line 5876
    :catchall_20
    move-exception v3

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v3
.end method

.method public performEnableScreen()V
    .registers 10

    .prologue
    const/4 v8, 0x0

    .line 10428
    iget-object v4, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v4

    .line 10435
    :try_start_4
    iget-boolean v3, p0, mDisplayEnabled:Z

    if-eqz v3, :cond_a

    .line 10436
    monitor-exit v4

    .line 10506
    :goto_9
    return-void

    .line 10438
    :cond_a
    iget-boolean v3, p0, mSystemBooted:Z

    if-nez v3, :cond_17

    iget-boolean v3, p0, mShowingBootMessages:Z

    if-nez v3, :cond_17

    .line 10439
    monitor-exit v4

    goto :goto_9

    .line 10481
    :catchall_14
    move-exception v3

    monitor-exit v4
    :try_end_16
    .catchall {:try_start_4 .. :try_end_16} :catchall_14

    throw v3

    .line 10443
    :cond_17
    :try_start_17
    iget-boolean v3, p0, mForceDisplayEnabled:Z

    if-nez v3, :cond_23

    invoke-direct {p0}, checkWaitingForWindowsLocked()Z

    move-result v3

    if-eqz v3, :cond_23

    .line 10444
    monitor-exit v4

    goto :goto_9

    .line 10447
    :cond_23
    iget-boolean v3, p0, mBootAnimationStopped:Z
    :try_end_25
    .catchall {:try_start_17 .. :try_end_25} :catchall_14

    if-nez v3, :cond_44

    .line 10450
    :try_start_27
    const-string v3, "SurfaceFlinger"

    invoke-static {v3}, Landroid/os/ServiceManager;->getService(Ljava/lang/String;)Landroid/os/IBinder;

    move-result-object v2

    .line 10451
    .local v2, "surfaceFlinger":Landroid/os/IBinder;
    if-eqz v2, :cond_41

    .line 10453
    invoke-static {}, Landroid/os/Parcel;->obtain()Landroid/os/Parcel;

    move-result-object v0

    .line 10454
    .local v0, "data":Landroid/os/Parcel;
    const-string v3, "android.ui.ISurfaceComposer"

    invoke-virtual {v0, v3}, Landroid/os/Parcel;->writeInterfaceToken(Ljava/lang/String;)V

    .line 10455
    const/4 v3, 0x1

    const/4 v5, 0x0

    const/4 v6, 0x0

    invoke-interface {v2, v3, v0, v5, v6}, Landroid/os/IBinder;->transact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z

    .line 10457
    invoke-virtual {v0}, Landroid/os/Parcel;->recycle()V
    :try_end_41
    .catch Landroid/os/RemoteException; {:try_start_27 .. :try_end_41} :catch_50
    .catchall {:try_start_27 .. :try_end_41} :catchall_14

    .line 10462
    .end local v0    # "data":Landroid/os/Parcel;
    .end local v2    # "surfaceFlinger":Landroid/os/IBinder;
    :cond_41
    :goto_41
    const/4 v3, 0x1

    :try_start_42
    iput-boolean v3, p0, mBootAnimationStopped:Z

    .line 10465
    :cond_44
    iget-boolean v3, p0, mForceDisplayEnabled:Z

    if-nez v3, :cond_59

    invoke-direct {p0}, checkBootAnimationCompleteLocked()Z

    move-result v3

    if-nez v3, :cond_59

    .line 10467
    monitor-exit v4

    goto :goto_9

    .line 10459
    :catch_50
    move-exception v1

    .line 10460
    .local v1, "ex":Landroid/os/RemoteException;
    const-string v3, "WindowManager"

    const-string v5, "Boot completed: SurfaceFlinger is dead!"

    invoke-static {v3, v5}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_41

    .line 10470
    .end local v1    # "ex":Landroid/os/RemoteException;
    :cond_59
    const/4 v3, 0x1

    iput-boolean v3, p0, mDisplayEnabled:Z

    .line 10471
    sget-boolean v3, DEBUG_SCREEN_ON:Z

    if-nez v3, :cond_a8

    .line 10474
    :goto_60
    const-string v3, "WindowManager"

    const-string v5, "!@Boot: Enabling Screen!"

    invoke-static {v3, v5}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 10475
    const/16 v3, 0x791f

    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v6

    invoke-static {v3, v6, v7}, Landroid/util/EventLog;->writeEvent(IJ)I

    .line 10480
    iget-object v3, p0, mInputMonitor:Lcom/android/server/wm/InputMonitor;

    iget-boolean v5, p0, mEventDispatchingEnabled:Z

    invoke-virtual {v3, v5}, Lcom/android/server/wm/InputMonitor;->setEventDispatchingLw(Z)V

    .line 10481
    monitor-exit v4
    :try_end_78
    .catchall {:try_start_42 .. :try_end_78} :catchall_14

    .line 10484
    const-string/jumbo v3, "persist.sys.quickboot_ongoing"

    invoke-static {v3, v8}, Landroid/os/SystemProperties;->getBoolean(Ljava/lang/String;Z)Z

    move-result v3

    if-eqz v3, :cond_84

    .line 10485
    invoke-direct {p0}, checkQuickBootException()V

    .line 10488
    :cond_84
    :try_start_84
    iget-object v3, p0, mActivityManager:Landroid/app/IActivityManager;

    invoke-interface {v3}, Landroid/app/IActivityManager;->bootAnimationComplete()V
    :try_end_89
    .catch Landroid/os/RemoteException; {:try_start_84 .. :try_end_89} :catch_b0

    .line 10493
    :goto_89
    const-string/jumbo v3, "persist.sys.quickboot_ongoing"

    invoke-static {v3, v8}, Landroid/os/SystemProperties;->getBoolean(Ljava/lang/String;Z)Z

    move-result v3

    if-eqz v3, :cond_95

    .line 10494
    invoke-direct {p0}, checkQuickBootException()V

    .line 10496
    :cond_95
    iget-object v3, p0, mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v3}, Landroid/view/WindowManagerPolicy;->enableScreenAfterBoot()V

    .line 10499
    invoke-virtual {p0, v8, v8}, updateRotationUnchecked(ZZ)V

    .line 10503
    new-instance v3, Lcom/android/server/wm/CustomStartingWindowManager;

    iget-object v4, p0, mContext:Landroid/content/Context;

    invoke-direct {v3, v4}, Lcom/android/server/wm/CustomStartingWindowManager;-><init>(Landroid/content/Context;)V

    iput-object v3, p0, mCustomStartingWindowManager:Lcom/android/server/wm/CustomStartingWindowManager;

    goto/16 :goto_9

    .line 10471
    :cond_a8
    :try_start_a8
    const-string v3, "WindowManager"

    const-string v5, "******************** ENABLING SCREEN!"

    invoke-static {v3, v5}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_af
    .catchall {:try_start_a8 .. :try_end_af} :catchall_14

    goto :goto_60

    .line 10489
    :catch_b0
    move-exception v3

    goto :goto_89
.end method

.method public performLayoutForAppTransition()V
    .registers 5

    .prologue
    .line 7925
    iget-object v3, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v3

    .line 7926
    :try_start_3
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J
    :try_end_6
    .catchall {:try_start_3 .. :try_end_6} :catchall_14

    move-result-wide v0

    .line 7928
    .local v0, "origId":J
    :try_start_7
    invoke-direct {p0}, performLayoutAndPlaceSurfacesLocked()V
    :try_end_a
    .catchall {:try_start_7 .. :try_end_a} :catchall_f

    .line 7930
    :try_start_a
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 7932
    monitor-exit v3

    .line 7933
    return-void

    .line 7930
    :catchall_f
    move-exception v2

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v2

    .line 7932
    .end local v0    # "origId":J
    :catchall_14
    move-exception v2

    monitor-exit v3
    :try_end_16
    .catchall {:try_start_a .. :try_end_16} :catchall_14

    throw v2
.end method

.method public pokeDrawLock(Lcom/android/server/wm/Session;Landroid/os/IBinder;)V
    .registers 9
    .param p1, "session"    # Lcom/android/server/wm/Session;
    .param p2, "token"    # Landroid/os/IBinder;

    .prologue
    .line 5183
    iget-object v2, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v2

    .line 5184
    const/4 v1, 0x0

    :try_start_4
    invoke-virtual {p0, p1, p2, v1}, windowForClientLocked(Lcom/android/server/wm/Session;Landroid/os/IBinder;Z)Lcom/android/server/wm/WindowState;

    move-result-object v0

    .line 5185
    .local v0, "window":Lcom/android/server/wm/WindowState;
    if-eqz v0, :cond_f

    .line 5186
    iget-wide v4, p0, mDrawLockTimeoutMillis:J

    invoke-virtual {v0, v4, v5}, Lcom/android/server/wm/WindowState;->pokeDrawLockLw(J)V

    .line 5188
    :cond_f
    monitor-exit v2

    .line 5189
    return-void

    .line 5188
    .end local v0    # "window":Lcom/android/server/wm/WindowState;
    :catchall_11
    move-exception v1

    monitor-exit v2
    :try_end_13
    .catchall {:try_start_4 .. :try_end_13} :catchall_11

    throw v1
.end method

.method public postDelayedResize(Lcom/android/server/wm/WindowState;)V
    .registers 6
    .param p1, "win"    # Lcom/android/server/wm/WindowState;

    .prologue
    .line 23442
    iget-object v0, p0, mH:Lcom/android/server/wm/WindowManagerService$H;

    new-instance v1, Lcom/android/server/wm/WindowManagerService$13;

    invoke-direct {v1, p0, p1}, Lcom/android/server/wm/WindowManagerService$13;-><init>(Lcom/android/server/wm/WindowManagerService;Lcom/android/server/wm/WindowState;)V

    const-wide/16 v2, 0x96

    invoke-virtual {v0, v1, v2, v3}, Lcom/android/server/wm/WindowManagerService$H;->postDelayed(Ljava/lang/Runnable;J)Z

    .line 23478
    return-void
.end method

.method public prepareAppTransition(IZ)V
    .registers 4
    .param p1, "transit"    # I
    .param p2, "alwaysKeepCurrent"    # Z

    .prologue
    .line 7641
    invoke-virtual {p0}, getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v0

    invoke-virtual {v0}, Lcom/android/server/wm/DisplayContent;->getDisplayId()I

    move-result v0

    invoke-virtual {p0, p1, p2, v0}, prepareAppTransition(IZI)V

    .line 7642
    return-void
.end method

.method public prepareAppTransition(IZI)V
    .registers 14
    .param p1, "transit"    # I
    .param p2, "alwaysKeepCurrent"    # Z
    .param p3, "displayId"    # I

    .prologue
    .line 7646
    const-string v5, "android.permission.MANAGE_APP_TOKENS"

    const-string/jumbo v6, "prepareAppTransition()"

    invoke-virtual {p0, v5, v6}, checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v5

    if-nez v5, :cond_13

    .line 7648
    new-instance v5, Ljava/lang/SecurityException;

    const-string v6, "Requires MANAGE_APP_TOKENS permission"

    invoke-direct {v5, v6}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v5

    .line 7651
    :cond_13
    iget-object v6, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v6

    .line 7653
    :try_start_16
    invoke-virtual {p0, p3}, getAppTransitionForDisplayLocked(I)Lcom/android/server/wm/AppTransition;

    move-result-object v3

    .line 7654
    .local v3, "mAppTransition":Lcom/android/server/wm/AppTransition;
    const/4 v1, 0x0

    .line 7658
    .local v1, "dualScreenTransition":Lcom/android/server/wm/DualScreenTransition;
    sget-boolean v5, Lcom/android/server/wm/DualScreenTransition;->DEBUG:Z

    if-eqz v5, :cond_e6

    .line 7659
    const-string v5, "WindowManager"

    new-instance v7, Ljava/lang/StringBuilder;

    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    const-string v8, "Prepare app transition [d"

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7, p3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v7

    const-string v8, "] : transit="

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v7

    const-string v8, " "

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v7

    const-string v8, " dualScreenTransition="

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v7

    const-string v8, " alwaysKeepCurrent="

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7, p2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v7

    const-string v8, " Callers="

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    const/4 v8, 0x3

    invoke-static {v8}, Landroid/os/Debug;->getCallers(I)Ljava/lang/String;

    move-result-object v8

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v7

    invoke-static {v5, v7}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 7675
    :cond_6e
    :goto_6e
    iget-object v5, p0, mAnimator:Lcom/android/server/wm/WindowAnimator;

    const/4 v7, 0x0

    invoke-virtual {v5, v7}, Lcom/android/server/wm/WindowAnimator;->getMultiWindowTransitionLocked(I)Lcom/android/server/wm/MultiWindowTransition;

    move-result-object v0

    .line 7677
    .local v0, "anim":Lcom/android/server/wm/MultiWindowTransition;
    const/4 v2, 0x0

    .line 7694
    .local v2, "isDualScreenTransition":Z
    if-eqz v0, :cond_12e

    invoke-virtual {v0}, Lcom/android/server/wm/MultiWindowTransition;->isAnimating()Z

    move-result v5

    if-nez v5, :cond_84

    invoke-virtual {v0}, Lcom/android/server/wm/MultiWindowTransition;->isTransitionSet()Z

    move-result v5

    if-eqz v5, :cond_12e

    .line 7695
    :cond_84
    invoke-virtual {v0}, Lcom/android/server/wm/MultiWindowTransition;->getMultiWindowTransition()I

    move-result v4

    .line 7696
    .local v4, "mwTransit":I
    const/16 v5, 0xa

    if-eq v4, v5, :cond_12a

    .line 7697
    sget-boolean v5, DEBUG_MULTIWINDOW:Z

    if-eqz v5, :cond_ae

    .line 7698
    const-string v5, "WindowManager"

    new-instance v7, Ljava/lang/StringBuilder;

    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    const-string v8, "Prepare app transition: transit="

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v7

    const-string v8, " is changed to TRANSIT_MULTIWINDOW_NONE because of MultiWindowTransition is animating"

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v7

    invoke-static {v5, v7}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 7701
    :cond_ae
    const/16 v5, 0x64

    invoke-virtual {v3, v5}, Lcom/android/server/wm/AppTransition;->setAppTransition(I)V

    .line 7744
    .end local v4    # "mwTransit":I
    :cond_b3
    :goto_b3
    iget-object v5, p0, mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v5}, Landroid/view/WindowManagerPolicy;->isForceHideBySViewCover()Z

    move-result v5

    if-eqz v5, :cond_bf

    .line 7745
    const/4 v5, 0x0

    invoke-virtual {v3, v5}, Lcom/android/server/wm/AppTransition;->setAppTransition(I)V

    .line 7750
    :cond_bf
    invoke-virtual {p0, p3}, okToDisplay(I)Z

    move-result v5

    if-eqz v5, :cond_ce

    invoke-virtual {v3}, Lcom/android/server/wm/AppTransition;->prepare()Z

    move-result v5

    if-eqz v5, :cond_ce

    .line 7751
    const/4 v5, 0x0

    iput-boolean v5, p0, mSkipAppTransitionAnimation:Z

    .line 7753
    :cond_ce
    invoke-virtual {v3}, Lcom/android/server/wm/AppTransition;->isTransitionSet()Z

    move-result v5

    if-eqz v5, :cond_e4

    .line 7761
    iget-object v5, p0, mH:Lcom/android/server/wm/WindowManagerService$H;

    const/16 v7, 0xd

    invoke-virtual {v5, v7}, Lcom/android/server/wm/WindowManagerService$H;->removeMessages(I)V

    .line 7762
    iget-object v5, p0, mH:Lcom/android/server/wm/WindowManagerService$H;

    const/16 v7, 0xd

    const-wide/16 v8, 0x1388

    invoke-virtual {v5, v7, v8, v9}, Lcom/android/server/wm/WindowManagerService$H;->sendEmptyMessageDelayed(IJ)Z

    .line 7767
    :cond_e4
    monitor-exit v6

    .line 7768
    return-void

    .line 7666
    .end local v0    # "anim":Lcom/android/server/wm/MultiWindowTransition;
    .end local v2    # "isDualScreenTransition":Z
    :cond_e6
    sget-boolean v5, DEBUG_APP_TRANSITIONS:Z

    if-eqz v5, :cond_6e

    const-string v5, "WindowManager"

    new-instance v7, Ljava/lang/StringBuilder;

    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    const-string v8, "Prepare app transition: transit="

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v7

    const-string v8, " "

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v7

    const-string v8, " alwaysKeepCurrent="

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7, p2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v7

    const-string v8, " Callers="

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    const/4 v8, 0x3

    invoke-static {v8}, Landroid/os/Debug;->getCallers(I)Ljava/lang/String;

    move-result-object v8

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v7

    invoke-static {v5, v7}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    goto/16 :goto_6e

    .line 7767
    .end local v1    # "dualScreenTransition":Lcom/android/server/wm/DualScreenTransition;
    .end local v3    # "mAppTransition":Lcom/android/server/wm/AppTransition;
    :catchall_127
    move-exception v5

    monitor-exit v6
    :try_end_129
    .catchall {:try_start_16 .. :try_end_129} :catchall_127

    throw v5

    .line 7703
    .restart local v0    # "anim":Lcom/android/server/wm/MultiWindowTransition;
    .restart local v1    # "dualScreenTransition":Lcom/android/server/wm/DualScreenTransition;
    .restart local v2    # "isDualScreenTransition":Z
    .restart local v3    # "mAppTransition":Lcom/android/server/wm/AppTransition;
    .restart local v4    # "mwTransit":I
    :cond_12a
    :try_start_12a
    invoke-virtual {v3, p1}, Lcom/android/server/wm/AppTransition;->setAppTransition(I)V

    goto :goto_b3

    .line 7705
    .end local v4    # "mwTransit":I
    :cond_12e
    invoke-virtual {v3}, Lcom/android/server/wm/AppTransition;->isTransitionSet()Z

    move-result v5

    if-eqz v5, :cond_13a

    invoke-virtual {v3}, Lcom/android/server/wm/AppTransition;->isTransitionNone()Z

    move-result v5

    if-eqz v5, :cond_13f

    .line 7706
    :cond_13a
    invoke-virtual {v3, p1}, Lcom/android/server/wm/AppTransition;->setAppTransition(I)V

    goto/16 :goto_b3

    .line 7707
    :cond_13f
    if-nez p2, :cond_b3

    .line 7708
    const/16 v5, 0x8

    if-ne p1, v5, :cond_152

    const/16 v5, 0x9

    invoke-virtual {v3, v5}, Lcom/android/server/wm/AppTransition;->isTransitionEqual(I)Z

    move-result v5

    if-eqz v5, :cond_152

    .line 7711
    invoke-virtual {v3, p1}, Lcom/android/server/wm/AppTransition;->setAppTransition(I)V

    goto/16 :goto_b3

    .line 7712
    :cond_152
    const/4 v5, 0x6

    if-ne p1, v5, :cond_161

    const/4 v5, 0x7

    invoke-virtual {v3, v5}, Lcom/android/server/wm/AppTransition;->isTransitionEqual(I)Z

    move-result v5

    if-eqz v5, :cond_161

    .line 7715
    invoke-virtual {v3, p1}, Lcom/android/server/wm/AppTransition;->setAppTransition(I)V

    goto/16 :goto_b3

    .line 7716
    :cond_161
    const/16 v5, 0x65

    if-ne p1, v5, :cond_b3

    const/16 v5, 0x66

    invoke-virtual {v3, v5}, Lcom/android/server/wm/AppTransition;->isTransitionEqual(I)Z

    move-result v5

    if-eqz v5, :cond_b3

    .line 7719
    invoke-virtual {v3, p1}, Lcom/android/server/wm/AppTransition;->setAppTransition(I)V
    :try_end_170
    .catchall {:try_start_12a .. :try_end_170} :catchall_127

    goto/16 :goto_b3
.end method

.method prepareDragSurface(Landroid/view/IWindow;Landroid/view/SurfaceSession;IIILandroid/view/Surface;)Landroid/os/IBinder;
    .registers 28
    .param p1, "window"    # Landroid/view/IWindow;
    .param p2, "session"    # Landroid/view/SurfaceSession;
    .param p3, "flags"    # I
    .param p4, "width"    # I
    .param p5, "height"    # I
    .param p6, "outSurface"    # Landroid/view/Surface;

    .prologue
    .line 12892
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v9

    .line 12893
    .local v9, "callerPid":I
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v16

    .line 12894
    .local v16, "origId":J
    const/16 v19, 0x0

    .line 12897
    .local v19, "token":Landroid/os/IBinder;
    :try_start_a
    move-object/from16 v0, p0

    iget-object v0, v0, mWindowMap:Ljava/util/HashMap;

    move-object/from16 v20, v0

    monitor-enter v20
    :try_end_11
    .catchall {:try_start_a .. :try_end_11} :catchall_114

    .line 12901
    :try_start_11
    move-object/from16 v0, p0

    iget-object v3, v0, mDragState:Lcom/android/server/wm/DragState;

    if-nez v3, :cond_c6

    move-object/from16 v0, p0

    iget-boolean v3, v0, isForceCancelDragMode:Z

    if-nez v3, :cond_c6

    .line 12903
    invoke-virtual/range {p0 .. p0}, getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v11

    .line 12904
    .local v11, "displayContent":Lcom/android/server/wm/DisplayContent;
    invoke-virtual {v11}, Lcom/android/server/wm/DisplayContent;->getDisplay()Landroid/view/Display;

    move-result-object v10

    .line 12905
    .local v10, "display":Landroid/view/Display;
    new-instance v2, Landroid/view/SurfaceControl;

    const-string/jumbo v4, "drag surface"

    const/4 v7, -0x3

    const/4 v8, 0x4

    move-object/from16 v3, p2

    move/from16 v5, p4

    move/from16 v6, p5

    invoke-direct/range {v2 .. v8}, Landroid/view/SurfaceControl;-><init>(Landroid/view/SurfaceSession;Ljava/lang/String;IIII)V

    .line 12907
    .local v2, "surface":Landroid/view/SurfaceControl;
    invoke-virtual {v10}, Landroid/view/Display;->getLayerStack()I

    move-result v3

    invoke-virtual {v2, v3}, Landroid/view/SurfaceControl;->setLayerStack(I)V

    .line 12913
    move-object/from16 v0, p0

    iget-boolean v3, v0, mReduceScreenRunning:Z

    if-eqz v3, :cond_7b

    .line 12914
    const/4 v3, 0x0

    move-object/from16 v0, p0

    invoke-virtual {v0, v3}, getEasyOneHandScaleSpecLocked(I)Landroid/view/MagnificationSpec;

    move-result-object v18

    .line 12915
    .local v18, "spec":Landroid/view/MagnificationSpec;
    if-eqz v18, :cond_7b

    move-object/from16 v0, v18

    iget v3, v0, Landroid/view/MagnificationSpec;->scale:F

    const/high16 v4, 0x3f800000    # 1.0f

    cmpg-float v3, v3, v4

    if-gez v3, :cond_7b

    .line 12916
    new-instance v14, Landroid/graphics/Matrix;

    invoke-direct {v14}, Landroid/graphics/Matrix;-><init>()V

    .line 12917
    .local v14, "matrix":Landroid/graphics/Matrix;
    move-object/from16 v0, v18

    iget v3, v0, Landroid/view/MagnificationSpec;->scale:F

    move-object/from16 v0, v18

    iget v4, v0, Landroid/view/MagnificationSpec;->scale:F

    invoke-virtual {v14, v3, v4}, Landroid/graphics/Matrix;->postScale(FF)Z

    .line 12918
    const/16 v3, 0x9

    new-array v13, v3, [F

    .line 12919
    .local v13, "mTmpFloats":[F
    invoke-virtual {v14, v13}, Landroid/graphics/Matrix;->getValues([F)V

    .line 12920
    const/4 v3, 0x0

    aget v3, v13, v3

    const/4 v4, 0x3

    aget v4, v13, v4

    const/4 v6, 0x1

    aget v6, v13, v6

    const/4 v7, 0x4

    aget v7, v13, v7

    invoke-virtual {v2, v3, v4, v6, v7}, Landroid/view/SurfaceControl;->setMatrix(FFFF)V

    .line 12926
    .end local v13    # "mTmpFloats":[F
    .end local v14    # "matrix":Landroid/graphics/Matrix;
    .end local v18    # "spec":Landroid/view/MagnificationSpec;
    :cond_7b
    move-object/from16 v0, p6

    invoke-virtual {v0, v2}, Landroid/view/Surface;->copyFrom(Landroid/view/SurfaceControl;)V

    .line 12927
    invoke-interface/range {p1 .. p1}, Landroid/view/IWindow;->asBinder()Landroid/os/IBinder;

    move-result-object v8

    .line 12928
    .local v8, "winBinder":Landroid/os/IBinder;
    new-instance v5, Landroid/os/Binder;

    invoke-direct {v5}, Landroid/os/Binder;-><init>()V
    :try_end_89
    .catch Landroid/view/Surface$OutOfResourcesException; {:try_start_11 .. :try_end_89} :catch_d0
    .catchall {:try_start_11 .. :try_end_89} :catchall_118

    .line 12932
    .end local v19    # "token":Landroid/os/IBinder;
    .local v5, "token":Landroid/os/IBinder;
    :try_start_89
    new-instance v3, Lcom/android/server/wm/DragState;

    const/4 v7, 0x1

    move-object/from16 v4, p0

    move-object v6, v2

    invoke-direct/range {v3 .. v8}, Lcom/android/server/wm/DragState;-><init>(Lcom/android/server/wm/WindowManagerService;Landroid/os/IBinder;Landroid/view/SurfaceControl;ILandroid/os/IBinder;)V

    move-object/from16 v0, p0

    iput-object v3, v0, mDragState:Lcom/android/server/wm/DragState;

    .line 12937
    move-object/from16 v0, p0

    iget-object v3, v0, mDragState:Lcom/android/server/wm/DragState;

    new-instance v19, Landroid/os/Binder;

    invoke-direct/range {v19 .. v19}, Landroid/os/Binder;-><init>()V

    move-object/from16 v0, v19

    iput-object v0, v3, Lcom/android/server/wm/DragState;->mToken:Landroid/os/IBinder;
    :try_end_a3
    .catch Landroid/view/Surface$OutOfResourcesException; {:try_start_89 .. :try_end_a3} :catch_11c
    .catchall {:try_start_89 .. :try_end_a3} :catchall_10c

    .line 12940
    .end local v5    # "token":Landroid/os/IBinder;
    .restart local v19    # "token":Landroid/os/IBinder;
    :try_start_a3
    move-object/from16 v0, p0

    iget-object v3, v0, mH:Lcom/android/server/wm/WindowManagerService$H;

    const/16 v4, 0x14

    invoke-virtual {v3, v4, v8}, Lcom/android/server/wm/WindowManagerService$H;->removeMessages(ILjava/lang/Object;)V

    .line 12941
    move-object/from16 v0, p0

    iget-object v3, v0, mH:Lcom/android/server/wm/WindowManagerService$H;

    const/16 v4, 0x14

    invoke-virtual {v3, v4, v8}, Lcom/android/server/wm/WindowManagerService$H;->obtainMessage(ILjava/lang/Object;)Landroid/os/Message;

    move-result-object v15

    .line 12942
    .local v15, "msg":Landroid/os/Message;
    move-object/from16 v0, p0

    iget-object v3, v0, mH:Lcom/android/server/wm/WindowManagerService$H;

    const-wide/16 v6, 0x1388

    invoke-virtual {v3, v15, v6, v7}, Lcom/android/server/wm/WindowManagerService$H;->sendMessageDelayed(Landroid/os/Message;J)Z
    :try_end_bf
    .catch Landroid/view/Surface$OutOfResourcesException; {:try_start_a3 .. :try_end_bf} :catch_d0
    .catchall {:try_start_a3 .. :try_end_bf} :catchall_118

    move-object/from16 v5, v19

    .line 12953
    .end local v2    # "surface":Landroid/view/SurfaceControl;
    .end local v8    # "winBinder":Landroid/os/IBinder;
    .end local v10    # "display":Landroid/view/Display;
    .end local v11    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v15    # "msg":Landroid/os/Message;
    .end local v19    # "token":Landroid/os/IBinder;
    .restart local v5    # "token":Landroid/os/IBinder;
    :cond_c1
    :goto_c1
    :try_start_c1
    monitor-exit v20
    :try_end_c2
    .catchall {:try_start_c1 .. :try_end_c2} :catchall_10c

    .line 12955
    invoke-static/range {v16 .. v17}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 12958
    return-object v5

    .line 12944
    .end local v5    # "token":Landroid/os/IBinder;
    .restart local v19    # "token":Landroid/os/IBinder;
    :cond_c6
    :try_start_c6
    const-string v3, "WindowManager"

    const-string v4, "Drag already in progress"

    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_cd
    .catch Landroid/view/Surface$OutOfResourcesException; {:try_start_c6 .. :try_end_cd} :catch_d0
    .catchall {:try_start_c6 .. :try_end_cd} :catchall_118

    move-object/from16 v5, v19

    .end local v19    # "token":Landroid/os/IBinder;
    .restart local v5    # "token":Landroid/os/IBinder;
    goto :goto_c1

    .line 12946
    .end local v5    # "token":Landroid/os/IBinder;
    .restart local v19    # "token":Landroid/os/IBinder;
    :catch_d0
    move-exception v12

    move-object/from16 v5, v19

    .line 12947
    .end local v19    # "token":Landroid/os/IBinder;
    .restart local v5    # "token":Landroid/os/IBinder;
    .local v12, "e":Landroid/view/Surface$OutOfResourcesException;
    :goto_d3
    :try_start_d3
    const-string v3, "WindowManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v6, "Can\'t allocate drag surface w="

    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move/from16 v0, p4

    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v6, " h="

    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move/from16 v0, p5

    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v3, v4, v12}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 12948
    move-object/from16 v0, p0

    iget-object v3, v0, mDragState:Lcom/android/server/wm/DragState;

    if-eqz v3, :cond_c1

    .line 12949
    move-object/from16 v0, p0

    iget-object v3, v0, mDragState:Lcom/android/server/wm/DragState;

    invoke-virtual {v3}, Lcom/android/server/wm/DragState;->reset()V

    .line 12950
    const/4 v3, 0x0

    move-object/from16 v0, p0

    iput-object v3, v0, mDragState:Lcom/android/server/wm/DragState;

    goto :goto_c1

    .line 12953
    .end local v12    # "e":Landroid/view/Surface$OutOfResourcesException;
    :catchall_10c
    move-exception v3

    :goto_10d
    monitor-exit v20
    :try_end_10e
    .catchall {:try_start_d3 .. :try_end_10e} :catchall_10c

    :try_start_10e
    throw v3
    :try_end_10f
    .catchall {:try_start_10e .. :try_end_10f} :catchall_10f

    .line 12955
    :catchall_10f
    move-exception v3

    :goto_110
    invoke-static/range {v16 .. v17}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v3

    .end local v5    # "token":Landroid/os/IBinder;
    .restart local v19    # "token":Landroid/os/IBinder;
    :catchall_114
    move-exception v3

    move-object/from16 v5, v19

    .end local v19    # "token":Landroid/os/IBinder;
    .restart local v5    # "token":Landroid/os/IBinder;
    goto :goto_110

    .line 12953
    .end local v5    # "token":Landroid/os/IBinder;
    .restart local v19    # "token":Landroid/os/IBinder;
    :catchall_118
    move-exception v3

    move-object/from16 v5, v19

    .end local v19    # "token":Landroid/os/IBinder;
    .restart local v5    # "token":Landroid/os/IBinder;
    goto :goto_10d

    .line 12946
    .restart local v2    # "surface":Landroid/view/SurfaceControl;
    .restart local v8    # "winBinder":Landroid/os/IBinder;
    .restart local v10    # "display":Landroid/view/Display;
    .restart local v11    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :catch_11c
    move-exception v12

    goto :goto_d3
.end method

.method public prepareDualScreenAppTransition(II)V
    .registers 3
    .param p1, "transit"    # I
    .param p2, "displayId"    # I

    .prologue
    .line 22806
    return-void
.end method

.method public prepareDualScreenDisplayScaleTransition(Landroid/view/IApplicationToken;Lcom/samsung/android/dualscreen/DualScreen;)V
    .registers 3
    .param p1, "token"    # Landroid/view/IApplicationToken;
    .param p2, "targetDisplay"    # Lcom/samsung/android/dualscreen/DualScreen;

    .prologue
    .line 22971
    return-void
.end method

.method public prepareDualScreenTaskMoveTransition(Landroid/view/IApplicationToken;Lcom/samsung/android/dualscreen/DualScreen;Lcom/samsung/android/dualscreen/DualScreen;)V
    .registers 4
    .param p1, "token"    # Landroid/view/IApplicationToken;
    .param p2, "fromScreen"    # Lcom/samsung/android/dualscreen/DualScreen;
    .param p3, "toScreen"    # Lcom/samsung/android/dualscreen/DualScreen;

    .prologue
    .line 22901
    return-void
.end method

.method public prepareMultiWindowTransition(Ljava/util/ArrayList;I)V
    .registers 4
    .param p2, "transit"    # I
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/util/ArrayList",
            "<",
            "Landroid/os/IBinder;",
            ">;I)V"
        }
    .end annotation

    .prologue
    .line 21206
    .local p1, "tokens":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/os/IBinder;>;"
    const/4 v0, 0x0

    invoke-virtual {p0, p1, p2, v0}, prepareMultiWindowTransition(Ljava/util/ArrayList;II)V

    .line 21207
    return-void
.end method

.method public prepareMultiWindowTransition(Ljava/util/ArrayList;II)V
    .registers 10
    .param p2, "transit"    # I
    .param p3, "displayId"    # I
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/util/ArrayList",
            "<",
            "Landroid/os/IBinder;",
            ">;II)V"
        }
    .end annotation

    .prologue
    .line 21211
    .local p1, "tokens":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/os/IBinder;>;"
    iget-object v5, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v5

    .line 21212
    if-eqz p1, :cond_2b

    .line 21213
    const/4 v3, 0x0

    .line 21214
    .local v3, "wtoken":Lcom/android/server/wm/AppWindowToken;
    :try_start_6
    new-instance v1, Ljava/util/ArrayList;

    invoke-direct {v1}, Ljava/util/ArrayList;-><init>()V

    .line 21215
    .local v1, "targetTokens":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/AppWindowToken;>;"
    invoke-virtual {p1}, Ljava/util/ArrayList;->iterator()Ljava/util/Iterator;

    move-result-object v0

    .local v0, "i$":Ljava/util/Iterator;
    :cond_f
    :goto_f
    invoke-interface {v0}, Ljava/util/Iterator;->hasNext()Z

    move-result v4

    if-eqz v4, :cond_28

    invoke-interface {v0}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Landroid/os/IBinder;

    .line 21216
    .local v2, "token":Landroid/os/IBinder;
    invoke-virtual {p0, v2}, findAppWindowToken(Landroid/os/IBinder;)Lcom/android/server/wm/AppWindowToken;

    move-result-object v3

    .line 21217
    if-eqz v3, :cond_f

    .line 21218
    invoke-virtual {v1, v3}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    goto :goto_f

    .line 21223
    .end local v0    # "i$":Ljava/util/Iterator;
    .end local v1    # "targetTokens":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/AppWindowToken;>;"
    .end local v2    # "token":Landroid/os/IBinder;
    .end local v3    # "wtoken":Lcom/android/server/wm/AppWindowToken;
    :catchall_25
    move-exception v4

    monitor-exit v5
    :try_end_27
    .catchall {:try_start_6 .. :try_end_27} :catchall_25

    throw v4

    .line 21221
    .restart local v0    # "i$":Ljava/util/Iterator;
    .restart local v1    # "targetTokens":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/AppWindowToken;>;"
    .restart local v3    # "wtoken":Lcom/android/server/wm/AppWindowToken;
    :cond_28
    :try_start_28
    invoke-direct {p0, v1, p2, p3}, prepareMultiWindowTransitionLocked(Ljava/util/ArrayList;II)V

    .line 21223
    .end local v0    # "i$":Ljava/util/Iterator;
    .end local v1    # "targetTokens":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/AppWindowToken;>;"
    .end local v3    # "wtoken":Lcom/android/server/wm/AppWindowToken;
    :cond_2b
    monitor-exit v5
    :try_end_2c
    .catchall {:try_start_28 .. :try_end_2c} :catchall_25

    .line 21224
    return-void
.end method

.method public reboot(Z)V
    .registers 4
    .param p1, "confirm"    # Z

    .prologue
    .line 10217
    iget-object v0, p0, mContext:Landroid/content/Context;

    const-string v1, "GlobalActions restart"

    invoke-static {v0, v1, p1}, Lcom/android/server/power/ShutdownThread;->reboot(Landroid/content/Context;Ljava/lang/String;Z)V

    .line 10218
    return-void
.end method

.method public rebootSafeMode(Z)V
    .registers 3
    .param p1, "confirm"    # Z

    .prologue
    .line 10211
    iget-object v0, p0, mContext:Landroid/content/Context;

    invoke-static {v0, p1}, Lcom/android/server/power/ShutdownThread;->rebootSafeMode(Landroid/content/Context;Z)V

    .line 10212
    return-void
.end method

.method final rebuildAppWindowListLocked()V
    .registers 2

    .prologue
    .line 14818
    invoke-virtual {p0}, getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v0

    invoke-direct {p0, v0}, rebuildAppWindowListLocked(Lcom/android/server/wm/DisplayContent;)V

    .line 14822
    return-void
.end method

.method reclaimSomeSurfaceMemoryLocked(Lcom/android/server/wm/WindowStateAnimator;Ljava/lang/String;Z)Z
    .registers 27
    .param p1, "winAnimator"    # Lcom/android/server/wm/WindowStateAnimator;
    .param p2, "operation"    # Ljava/lang/String;
    .param p3, "secure"    # Z

    .prologue
    .line 18139
    move-object/from16 v0, p1

    iget-object v14, v0, Lcom/android/server/wm/WindowStateAnimator;->mSurfaceControl:Landroid/view/SurfaceControl;

    .line 18140
    .local v14, "surface":Landroid/view/SurfaceControl;
    const/4 v9, 0x0

    .line 18141
    .local v9, "leakedSurface":Z
    const/4 v8, 0x0

    .line 18143
    .local v8, "killedApps":Z
    const/16 v19, 0x7918

    const/16 v20, 0x3

    move/from16 v0, v20

    new-array v0, v0, [Ljava/lang/Object;

    move-object/from16 v20, v0

    const/16 v21, 0x0

    move-object/from16 v0, p1

    iget-object v0, v0, Lcom/android/server/wm/WindowStateAnimator;->mWin:Lcom/android/server/wm/WindowState;

    move-object/from16 v22, v0

    invoke-virtual/range {v22 .. v22}, Lcom/android/server/wm/WindowState;->toString()Ljava/lang/String;

    move-result-object v22

    aput-object v22, v20, v21

    const/16 v21, 0x1

    move-object/from16 v0, p1

    iget-object v0, v0, Lcom/android/server/wm/WindowStateAnimator;->mSession:Lcom/android/server/wm/Session;

    move-object/from16 v22, v0

    move-object/from16 v0, v22

    iget v0, v0, Lcom/android/server/wm/Session;->mPid:I

    move/from16 v22, v0

    invoke-static/range {v22 .. v22}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v22

    aput-object v22, v20, v21

    const/16 v21, 0x2

    aput-object p2, v20, v21

    invoke-static/range {v19 .. v20}, Landroid/util/EventLog;->writeEvent(I[Ljava/lang/Object;)I

    .line 18146
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v4

    .line 18152
    .local v4, "callingIdentity":J
    :try_start_3d
    const-string v19, "WindowManager"

    const-string v20, "Out of memory for surface!  Looking for leaks..."

    invoke-static/range {v19 .. v20}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 18153
    move-object/from16 v0, p0

    iget-object v0, v0, mDisplayContents:Landroid/util/SparseArray;

    move-object/from16 v19, v0

    invoke-virtual/range {v19 .. v19}, Landroid/util/SparseArray;->size()I

    move-result v10

    .line 18154
    .local v10, "numDisplays":I
    const/4 v6, 0x0

    .local v6, "displayNdx":I
    :goto_4f
    if-ge v6, v10, :cond_1a6

    .line 18155
    move-object/from16 v0, p0

    iget-object v0, v0, mDisplayContents:Landroid/util/SparseArray;

    move-object/from16 v19, v0

    move-object/from16 v0, v19

    invoke-virtual {v0, v6}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v19

    check-cast v19, Lcom/android/server/wm/DisplayContent;

    invoke-virtual/range {v19 .. v19}, Lcom/android/server/wm/DisplayContent;->getWindowList()Lcom/android/server/wm/WindowList;

    move-result-object v16

    .line 18156
    .local v16, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual/range {v16 .. v16}, Lcom/android/server/wm/WindowList;->size()I

    move-result v11

    .line 18157
    .local v11, "numWindows":I
    const/4 v15, 0x0

    .local v15, "winNdx":I
    :goto_68
    if-ge v15, v11, :cond_1a2

    .line 18158
    move-object/from16 v0, v16

    invoke-virtual {v0, v15}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v17

    check-cast v17, Lcom/android/server/wm/WindowState;

    .line 18159
    .local v17, "ws":Lcom/android/server/wm/WindowState;
    move-object/from16 v0, v17

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    move-object/from16 v18, v0

    .line 18160
    .local v18, "wsa":Lcom/android/server/wm/WindowStateAnimator;
    move-object/from16 v0, v18

    iget-object v0, v0, Lcom/android/server/wm/WindowStateAnimator;->mSurfaceControl:Landroid/view/SurfaceControl;

    move-object/from16 v19, v0

    if-eqz v19, :cond_129

    .line 18161
    move-object/from16 v0, p0

    iget-object v0, v0, mSessions:Landroid/util/ArraySet;

    move-object/from16 v19, v0

    move-object/from16 v0, v18

    iget-object v0, v0, Lcom/android/server/wm/WindowStateAnimator;->mSession:Lcom/android/server/wm/Session;

    move-object/from16 v20, v0

    invoke-virtual/range {v19 .. v20}, Landroid/util/ArraySet;->contains(Ljava/lang/Object;)Z

    move-result v19

    if-nez v19, :cond_12d

    .line 18162
    const-string v19, "WindowManager"

    new-instance v20, Ljava/lang/StringBuilder;

    invoke-direct/range {v20 .. v20}, Ljava/lang/StringBuilder;-><init>()V

    const-string v21, "LEAKED SURFACE (session doesn\'t exist): "

    invoke-virtual/range {v20 .. v21}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v20

    move-object/from16 v0, v20

    move-object/from16 v1, v17

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v20

    const-string v21, " surface="

    invoke-virtual/range {v20 .. v21}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v20

    move-object/from16 v0, v18

    iget-object v0, v0, Lcom/android/server/wm/WindowStateAnimator;->mSurfaceControl:Landroid/view/SurfaceControl;

    move-object/from16 v21, v0

    invoke-virtual/range {v20 .. v21}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v20

    const-string v21, " token="

    invoke-virtual/range {v20 .. v21}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v20

    move-object/from16 v0, v17

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mToken:Lcom/android/server/wm/WindowToken;

    move-object/from16 v21, v0

    invoke-virtual/range {v20 .. v21}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v20

    const-string v21, " pid="

    invoke-virtual/range {v20 .. v21}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v20

    move-object/from16 v0, v17

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mSession:Lcom/android/server/wm/Session;

    move-object/from16 v21, v0

    move-object/from16 v0, v21

    iget v0, v0, Lcom/android/server/wm/Session;->mPid:I

    move/from16 v21, v0

    invoke-virtual/range {v20 .. v21}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v20

    const-string v21, " uid="

    invoke-virtual/range {v20 .. v21}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v20

    move-object/from16 v0, v17

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mSession:Lcom/android/server/wm/Session;

    move-object/from16 v21, v0

    move-object/from16 v0, v21

    iget v0, v0, Lcom/android/server/wm/Session;->mUid:I

    move/from16 v21, v0

    invoke-virtual/range {v20 .. v21}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v20

    invoke-virtual/range {v20 .. v20}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v20

    invoke-static/range {v19 .. v20}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 18168
    move-object/from16 v0, v18

    iget-object v0, v0, Lcom/android/server/wm/WindowStateAnimator;->mSurfaceControl:Landroid/view/SurfaceControl;

    move-object/from16 v19, v0

    invoke-virtual/range {v19 .. v19}, Landroid/view/SurfaceControl;->destroy()V

    .line 18169
    const/16 v19, 0x0

    move/from16 v0, v19

    move-object/from16 v1, v18

    iput-boolean v0, v1, Lcom/android/server/wm/WindowStateAnimator;->mSurfaceShown:Z

    .line 18170
    const/16 v19, 0x0

    move-object/from16 v0, v19

    move-object/from16 v1, v18

    iput-object v0, v1, Lcom/android/server/wm/WindowStateAnimator;->mSurfaceControl:Landroid/view/SurfaceControl;

    .line 18171
    const/16 v19, 0x0

    move/from16 v0, v19

    move-object/from16 v1, v17

    iput-boolean v0, v1, Lcom/android/server/wm/WindowState;->mHasSurface:Z

    .line 18172
    move-object/from16 v0, p0

    iget-object v0, v0, mForceRemoves:Ljava/util/ArrayList;

    move-object/from16 v19, v0

    move-object/from16 v0, v19

    move-object/from16 v1, v17

    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 18173
    const/4 v9, 0x1

    .line 18157
    :cond_129
    :goto_129
    add-int/lit8 v15, v15, 0x1

    goto/16 :goto_68

    .line 18174
    :cond_12d
    move-object/from16 v0, v17

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    move-object/from16 v19, v0

    if-eqz v19, :cond_129

    move-object/from16 v0, v17

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    move-object/from16 v19, v0

    move-object/from16 v0, v19

    iget-boolean v0, v0, Lcom/android/server/wm/AppWindowToken;->clientHidden:Z

    move/from16 v19, v0

    if-eqz v19, :cond_129

    .line 18175
    const-string v19, "WindowManager"

    new-instance v20, Ljava/lang/StringBuilder;

    invoke-direct/range {v20 .. v20}, Ljava/lang/StringBuilder;-><init>()V

    const-string v21, "LEAKED SURFACE (app token hidden): "

    invoke-virtual/range {v20 .. v21}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v20

    move-object/from16 v0, v20

    move-object/from16 v1, v17

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v20

    const-string v21, " surface="

    invoke-virtual/range {v20 .. v21}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v20

    move-object/from16 v0, v18

    iget-object v0, v0, Lcom/android/server/wm/WindowStateAnimator;->mSurfaceControl:Landroid/view/SurfaceControl;

    move-object/from16 v21, v0

    invoke-virtual/range {v20 .. v21}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v20

    const-string v21, " token="

    invoke-virtual/range {v20 .. v21}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v20

    move-object/from16 v0, v17

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    move-object/from16 v21, v0

    invoke-virtual/range {v20 .. v21}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v20

    invoke-virtual/range {v20 .. v20}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v20

    invoke-static/range {v19 .. v20}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 18179
    move-object/from16 v0, v18

    iget-object v0, v0, Lcom/android/server/wm/WindowStateAnimator;->mSurfaceControl:Landroid/view/SurfaceControl;

    move-object/from16 v19, v0

    invoke-virtual/range {v19 .. v19}, Landroid/view/SurfaceControl;->destroy()V

    .line 18180
    const/16 v19, 0x0

    move/from16 v0, v19

    move-object/from16 v1, v18

    iput-boolean v0, v1, Lcom/android/server/wm/WindowStateAnimator;->mSurfaceShown:Z

    .line 18181
    const/16 v19, 0x0

    move-object/from16 v0, v19

    move-object/from16 v1, v18

    iput-object v0, v1, Lcom/android/server/wm/WindowStateAnimator;->mSurfaceControl:Landroid/view/SurfaceControl;

    .line 18182
    const/16 v19, 0x0

    move/from16 v0, v19

    move-object/from16 v1, v17

    iput-boolean v0, v1, Lcom/android/server/wm/WindowState;->mHasSurface:Z

    .line 18183
    const/4 v9, 0x1

    goto :goto_129

    .line 18154
    .end local v17    # "ws":Lcom/android/server/wm/WindowState;
    .end local v18    # "wsa":Lcom/android/server/wm/WindowStateAnimator;
    :cond_1a2
    add-int/lit8 v6, v6, 0x1

    goto/16 :goto_4f

    .line 18189
    .end local v11    # "numWindows":I
    .end local v15    # "winNdx":I
    .end local v16    # "windows":Lcom/android/server/wm/WindowList;
    :cond_1a6
    if-nez v9, :cond_256

    .line 18190
    const-string v19, "WindowManager"

    const-string v20, "No leaked surfaces; killing applicatons!"

    invoke-static/range {v19 .. v20}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 18191
    new-instance v12, Landroid/util/SparseIntArray;

    invoke-direct {v12}, Landroid/util/SparseIntArray;-><init>()V

    .line 18192
    .local v12, "pidCandidates":Landroid/util/SparseIntArray;
    const/4 v6, 0x0

    :goto_1b5
    if-ge v6, v10, :cond_256

    .line 18193
    move-object/from16 v0, p0

    iget-object v0, v0, mDisplayContents:Landroid/util/SparseArray;

    move-object/from16 v19, v0

    move-object/from16 v0, v19

    invoke-virtual {v0, v6}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v19

    check-cast v19, Lcom/android/server/wm/DisplayContent;

    invoke-virtual/range {v19 .. v19}, Lcom/android/server/wm/DisplayContent;->getWindowList()Lcom/android/server/wm/WindowList;

    move-result-object v16

    .line 18194
    .restart local v16    # "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual/range {v16 .. v16}, Lcom/android/server/wm/WindowList;->size()I

    move-result v11

    .line 18195
    .restart local v11    # "numWindows":I
    const/4 v15, 0x0

    .restart local v15    # "winNdx":I
    :goto_1ce
    if-ge v15, v11, :cond_21e

    .line 18196
    move-object/from16 v0, v16

    invoke-virtual {v0, v15}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v17

    check-cast v17, Lcom/android/server/wm/WindowState;

    .line 18197
    .restart local v17    # "ws":Lcom/android/server/wm/WindowState;
    move-object/from16 v0, p0

    iget-object v0, v0, mForceRemoves:Ljava/util/ArrayList;

    move-object/from16 v19, v0

    move-object/from16 v0, v19

    move-object/from16 v1, v17

    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->contains(Ljava/lang/Object;)Z

    move-result v19

    if-eqz v19, :cond_1eb

    .line 18195
    :cond_1e8
    :goto_1e8
    add-int/lit8 v15, v15, 0x1

    goto :goto_1ce

    .line 18200
    :cond_1eb
    move-object/from16 v0, v17

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    move-object/from16 v18, v0

    .line 18201
    .restart local v18    # "wsa":Lcom/android/server/wm/WindowStateAnimator;
    move-object/from16 v0, v18

    iget-object v0, v0, Lcom/android/server/wm/WindowStateAnimator;->mSurfaceControl:Landroid/view/SurfaceControl;

    move-object/from16 v19, v0

    if-eqz v19, :cond_1e8

    .line 18202
    move-object/from16 v0, v18

    iget-object v0, v0, Lcom/android/server/wm/WindowStateAnimator;->mSession:Lcom/android/server/wm/Session;

    move-object/from16 v19, v0

    move-object/from16 v0, v19

    iget v0, v0, Lcom/android/server/wm/Session;->mPid:I

    move/from16 v19, v0

    move-object/from16 v0, v18

    iget-object v0, v0, Lcom/android/server/wm/WindowStateAnimator;->mSession:Lcom/android/server/wm/Session;

    move-object/from16 v20, v0

    move-object/from16 v0, v20

    iget v0, v0, Lcom/android/server/wm/Session;->mPid:I

    move/from16 v20, v0

    move/from16 v0, v19

    move/from16 v1, v20

    invoke-virtual {v12, v0, v1}, Landroid/util/SparseIntArray;->append(II)V
    :try_end_218
    .catchall {:try_start_3d .. :try_end_218} :catchall_219

    goto :goto_1e8

    .line 18245
    .end local v6    # "displayNdx":I
    .end local v10    # "numDisplays":I
    .end local v11    # "numWindows":I
    .end local v12    # "pidCandidates":Landroid/util/SparseIntArray;
    .end local v15    # "winNdx":I
    .end local v16    # "windows":Lcom/android/server/wm/WindowList;
    .end local v17    # "ws":Lcom/android/server/wm/WindowState;
    .end local v18    # "wsa":Lcom/android/server/wm/WindowStateAnimator;
    :catchall_219
    move-exception v19

    invoke-static {v4, v5}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v19

    .line 18205
    .restart local v6    # "displayNdx":I
    .restart local v10    # "numDisplays":I
    .restart local v11    # "numWindows":I
    .restart local v12    # "pidCandidates":Landroid/util/SparseIntArray;
    .restart local v15    # "winNdx":I
    .restart local v16    # "windows":Lcom/android/server/wm/WindowList;
    :cond_21e
    :try_start_21e
    invoke-virtual {v12}, Landroid/util/SparseIntArray;->size()I

    move-result v19

    if-lez v19, :cond_252

    .line 18206
    invoke-virtual {v12}, Landroid/util/SparseIntArray;->size()I

    move-result v19

    move/from16 v0, v19

    new-array v13, v0, [I

    .line 18207
    .local v13, "pids":[I
    const/4 v7, 0x0

    .local v7, "i":I
    :goto_22d
    array-length v0, v13

    move/from16 v19, v0

    move/from16 v0, v19

    if-ge v7, v0, :cond_23d

    .line 18208
    invoke-virtual {v12, v7}, Landroid/util/SparseIntArray;->keyAt(I)I

    move-result v19

    aput v19, v13, v7
    :try_end_23a
    .catchall {:try_start_21e .. :try_end_23a} :catchall_219

    .line 18207
    add-int/lit8 v7, v7, 0x1

    goto :goto_22d

    .line 18211
    :cond_23d
    :try_start_23d
    move-object/from16 v0, p0

    iget-object v0, v0, mActivityManager:Landroid/app/IActivityManager;

    move-object/from16 v19, v0

    const-string v20, "Free memory"

    move-object/from16 v0, v19

    move-object/from16 v1, v20

    move/from16 v2, p3

    invoke-interface {v0, v13, v1, v2}, Landroid/app/IActivityManager;->killPids([ILjava/lang/String;Z)Z
    :try_end_24e
    .catch Landroid/os/RemoteException; {:try_start_23d .. :try_end_24e} :catch_2be
    .catchall {:try_start_23d .. :try_end_24e} :catchall_219

    move-result v19

    if-eqz v19, :cond_252

    .line 18212
    const/4 v8, 0x1

    .line 18192
    .end local v7    # "i":I
    .end local v13    # "pids":[I
    :cond_252
    :goto_252
    add-int/lit8 v6, v6, 0x1

    goto/16 :goto_1b5

    .line 18221
    .end local v11    # "numWindows":I
    .end local v12    # "pidCandidates":Landroid/util/SparseIntArray;
    .end local v15    # "winNdx":I
    .end local v16    # "windows":Lcom/android/server/wm/WindowList;
    :cond_256
    const/16 v19, 0x1

    :try_start_258
    move-object/from16 v0, p0

    move/from16 v1, v19

    invoke-virtual {v0, v1}, moveMultiWindowCenterBarLocked(Z)Z

    .line 18225
    if-nez v9, :cond_263

    if-eqz v8, :cond_2af

    .line 18228
    :cond_263
    const-string v19, "WindowManager"

    const-string v20, "Looks like we have reclaimed some memory, clearing surface for retry."

    invoke-static/range {v19 .. v20}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 18229
    if-eqz v14, :cond_2a0

    .line 18232
    invoke-virtual {v14}, Landroid/view/SurfaceControl;->destroy()V

    .line 18233
    const/16 v19, 0x0

    move/from16 v0, v19

    move-object/from16 v1, p1

    iput-boolean v0, v1, Lcom/android/server/wm/WindowStateAnimator;->mSurfaceShown:Z

    .line 18234
    const/16 v19, 0x0

    move-object/from16 v0, v19

    move-object/from16 v1, p1

    iput-object v0, v1, Lcom/android/server/wm/WindowStateAnimator;->mSurfaceControl:Landroid/view/SurfaceControl;

    .line 18235
    move-object/from16 v0, p1

    iget-object v0, v0, Lcom/android/server/wm/WindowStateAnimator;->mWin:Lcom/android/server/wm/WindowState;

    move-object/from16 v19, v0

    const/16 v20, 0x0

    move/from16 v0, v20

    move-object/from16 v1, v19

    iput-boolean v0, v1, Lcom/android/server/wm/WindowState;->mHasSurface:Z

    .line 18236
    move-object/from16 v0, p1

    iget-object v0, v0, Lcom/android/server/wm/WindowStateAnimator;->mWin:Lcom/android/server/wm/WindowState;

    move-object/from16 v19, v0

    move-object/from16 v0, v19

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    move-object/from16 v19, v0

    move-object/from16 v0, p0

    move-object/from16 v1, v19

    invoke-virtual {v0, v1}, scheduleRemoveStartingWindowLocked(Lcom/android/server/wm/AppWindowToken;)V
    :try_end_2a0
    .catchall {:try_start_258 .. :try_end_2a0} :catchall_219

    .line 18240
    :cond_2a0
    :try_start_2a0
    move-object/from16 v0, p1

    iget-object v0, v0, Lcom/android/server/wm/WindowStateAnimator;->mWin:Lcom/android/server/wm/WindowState;

    move-object/from16 v19, v0

    move-object/from16 v0, v19

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mClient:Landroid/view/IWindow;

    move-object/from16 v19, v0

    invoke-interface/range {v19 .. v19}, Landroid/view/IWindow;->dispatchGetNewSurface()V
    :try_end_2af
    .catch Landroid/os/RemoteException; {:try_start_2a0 .. :try_end_2af} :catch_2bc
    .catchall {:try_start_2a0 .. :try_end_2af} :catchall_219

    .line 18245
    :cond_2af
    :goto_2af
    invoke-static {v4, v5}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 18248
    if-nez v9, :cond_2b6

    if-eqz v8, :cond_2b9

    :cond_2b6
    const/16 v19, 0x1

    :goto_2b8
    return v19

    :cond_2b9
    const/16 v19, 0x0

    goto :goto_2b8

    .line 18241
    :catch_2bc
    move-exception v19

    goto :goto_2af

    .line 18214
    .restart local v7    # "i":I
    .restart local v11    # "numWindows":I
    .restart local v12    # "pidCandidates":Landroid/util/SparseIntArray;
    .restart local v13    # "pids":[I
    .restart local v15    # "winNdx":I
    .restart local v16    # "windows":Lcom/android/server/wm/WindowList;
    :catch_2be
    move-exception v19

    goto :goto_252
.end method

.method public reenableKeyguard(Landroid/os/IBinder;)V
    .registers 5
    .param p1, "token"    # Landroid/os/IBinder;

    .prologue
    .line 9797
    iget-object v0, p0, mContext:Landroid/content/Context;

    const-string v1, "android.permission.DISABLE_KEYGUARD"

    invoke-virtual {v0, v1}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    move-result v0

    if-eqz v0, :cond_12

    .line 9799
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Requires DISABLE_KEYGUARD permission"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 9802
    :cond_12
    if-nez p1, :cond_1d

    .line 9803
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string/jumbo v1, "token == null"

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 9806
    :cond_1d
    iget-object v0, p0, mKeyguardDisableHandler:Lcom/android/server/wm/KeyguardDisableHandler;

    iget-object v1, p0, mKeyguardDisableHandler:Lcom/android/server/wm/KeyguardDisableHandler;

    const/4 v2, 0x2

    invoke-virtual {v1, v2, p1}, Lcom/android/server/wm/KeyguardDisableHandler;->obtainMessage(ILjava/lang/Object;)Landroid/os/Message;

    move-result-object v1

    invoke-virtual {v0, v1}, Lcom/android/server/wm/KeyguardDisableHandler;->sendMessage(Landroid/os/Message;)Z

    .line 9808
    return-void
.end method

.method public reevaluateStatusBarVisibility()V
    .registers 2

    .prologue
    .line 19151
    const/4 v0, 0x0

    invoke-virtual {p0, v0}, reevaluateStatusBarVisibility(I)V

    .line 19152
    return-void
.end method

.method public reevaluateStatusBarVisibility(I)V
    .registers 6
    .param p1, "displayId"    # I

    .prologue
    .line 19157
    iget-object v2, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v2

    .line 19164
    :try_start_3
    iget-object v1, p0, mPolicy:Landroid/view/WindowManagerPolicy;

    iget v3, p0, mLastStatusBarVisibility:I

    invoke-interface {v1, v3}, Landroid/view/WindowManagerPolicy;->adjustSystemUiVisibilityLw(I)I

    move-result v0

    .line 19165
    .local v0, "visibility":I
    invoke-virtual {p0, v0}, updateStatusBarVisibilityLocked(I)V

    .line 19169
    invoke-direct {p0}, performLayoutAndPlaceSurfacesLocked()V

    .line 19170
    monitor-exit v2

    .line 19171
    return-void

    .line 19170
    .end local v0    # "visibility":I
    :catchall_13
    move-exception v1

    monitor-exit v2
    :try_end_15
    .catchall {:try_start_3 .. :try_end_15} :catchall_13

    throw v1
.end method

.method public registerEasyOneHandWatcher(Landroid/sec/easyonehand/IEasyOneHandWatcher;)V
    .registers 7
    .param p1, "watcher"    # Landroid/sec/easyonehand/IEasyOneHandWatcher;

    .prologue
    .line 22216
    invoke-interface {p1}, Landroid/sec/easyonehand/IEasyOneHandWatcher;->asBinder()Landroid/os/IBinder;

    move-result-object v0

    .line 22218
    .local v0, "watcherBinder":Landroid/os/IBinder;
    iget-object v2, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v2

    .line 22220
    :try_start_7
    iget-object v1, p0, mEasyOneHandDR:Lcom/android/server/wm/WindowManagerService$EasyOneHandDeathRecipient;

    if-nez v1, :cond_13

    .line 22221
    new-instance v1, Lcom/android/server/wm/WindowManagerService$EasyOneHandDeathRecipient;

    const/4 v3, 0x0

    invoke-direct {v1, p0, v3}, Lcom/android/server/wm/WindowManagerService$EasyOneHandDeathRecipient;-><init>(Lcom/android/server/wm/WindowManagerService;Lcom/android/server/wm/WindowManagerService$1;)V

    iput-object v1, p0, mEasyOneHandDR:Lcom/android/server/wm/WindowManagerService$EasyOneHandDeathRecipient;

    .line 22224
    :cond_13
    iget-object v1, p0, mEasyOneHandWatcher:Landroid/sec/easyonehand/IEasyOneHandWatcher;

    if-nez v1, :cond_23

    .line 22225
    invoke-interface {p1}, Landroid/sec/easyonehand/IEasyOneHandWatcher;->asBinder()Landroid/os/IBinder;

    move-result-object v1

    iget-object v3, p0, mEasyOneHandDR:Lcom/android/server/wm/WindowManagerService$EasyOneHandDeathRecipient;

    const/4 v4, 0x0

    invoke-interface {v1, v3, v4}, Landroid/os/IBinder;->linkToDeath(Landroid/os/IBinder$DeathRecipient;I)V

    .line 22226
    iput-object p1, p0, mEasyOneHandWatcher:Landroid/sec/easyonehand/IEasyOneHandWatcher;
    :try_end_23
    .catch Landroid/os/RemoteException; {:try_start_7 .. :try_end_23} :catch_28
    .catchall {:try_start_7 .. :try_end_23} :catchall_25

    .line 22231
    :cond_23
    :goto_23
    :try_start_23
    monitor-exit v2

    .line 22233
    return-void

    .line 22231
    :catchall_25
    move-exception v1

    monitor-exit v2
    :try_end_27
    .catchall {:try_start_23 .. :try_end_27} :catchall_25

    throw v1

    .line 22228
    :catch_28
    move-exception v1

    goto :goto_23
.end method

.method public registerPointerEventListener(Landroid/view/WindowManagerPolicy$PointerEventListener;)V
    .registers 3
    .param p1, "listener"    # Landroid/view/WindowManagerPolicy$PointerEventListener;

    .prologue
    .line 10123
    iget-object v0, p0, mPointerEventDispatcher:Lcom/android/server/wm/PointerEventDispatcher;

    invoke-virtual {v0, p1}, Lcom/android/server/wm/PointerEventDispatcher;->registerInputEventListener(Landroid/view/WindowManagerPolicy$PointerEventListener;)V

    .line 10124
    return-void
.end method

.method public relayoutWindow(Lcom/android/server/wm/Session;Landroid/view/IWindow;ILandroid/view/WindowManager$LayoutParams;IIIILandroid/graphics/Rect;Landroid/graphics/Rect;Landroid/graphics/Rect;Landroid/graphics/Rect;Landroid/graphics/Rect;Landroid/graphics/Rect;Landroid/content/res/Configuration;Landroid/view/Surface;Landroid/graphics/PointF;Landroid/graphics/Rect;)I
    .registers 87
    .param p1, "session"    # Lcom/android/server/wm/Session;
    .param p2, "client"    # Landroid/view/IWindow;
    .param p3, "seq"    # I
    .param p4, "attrs"    # Landroid/view/WindowManager$LayoutParams;
    .param p5, "requestedWidth"    # I
    .param p6, "requestedHeight"    # I
    .param p7, "viewVisibility"    # I
    .param p8, "flags"    # I
    .param p9, "outFrame"    # Landroid/graphics/Rect;
    .param p10, "outOverscanInsets"    # Landroid/graphics/Rect;
    .param p11, "outContentInsets"    # Landroid/graphics/Rect;
    .param p12, "outVisibleInsets"    # Landroid/graphics/Rect;
    .param p13, "outStableInsets"    # Landroid/graphics/Rect;
    .param p14, "outOutsets"    # Landroid/graphics/Rect;
    .param p15, "outConfig"    # Landroid/content/res/Configuration;
    .param p16, "outSurface"    # Landroid/view/Surface;
    .param p17, "outScale"    # Landroid/graphics/PointF;
    .param p18, "outCocktailBar"    # Landroid/graphics/Rect;

    .prologue
    .line 5204
    const/16 v54, 0x0

    .line 5207
    .local v54, "toBeDisplayed":Z
    const/16 v47, 0x0

    .line 5209
    .local v47, "surfaceChanged":Z
    move-object/from16 v0, p0

    iget-object v0, v0, mContext:Landroid/content/Context;

    move-object/from16 v61, v0

    const-string v62, "android.permission.STATUS_BAR"

    invoke-virtual/range {v61 .. v62}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    move-result v61

    if-nez v61, :cond_33

    const/16 v20, 0x1

    .line 5213
    .local v20, "hasStatusBarPermission":Z
    :goto_14
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v38

    .line 5215
    .local v38, "origId":J
    move-object/from16 v0, p0

    iget-object v0, v0, mWindowMap:Ljava/util/HashMap;

    move-object/from16 v62, v0

    monitor-enter v62

    .line 5216
    const/16 v61, 0x0

    :try_start_21
    move-object/from16 v0, p0

    move-object/from16 v1, p1

    move-object/from16 v2, p2

    move/from16 v3, v61

    invoke-virtual {v0, v1, v2, v3}, windowForClientLocked(Lcom/android/server/wm/Session;Landroid/view/IWindow;Z)Lcom/android/server/wm/WindowState;

    move-result-object v58

    .line 5217
    .local v58, "win":Lcom/android/server/wm/WindowState;
    if-nez v58, :cond_36

    .line 5218
    const/16 v61, 0x0

    monitor-exit v62

    .line 5859
    :goto_32
    return v61

    .line 5209
    .end local v20    # "hasStatusBarPermission":Z
    .end local v38    # "origId":J
    .end local v58    # "win":Lcom/android/server/wm/WindowState;
    :cond_33
    const/16 v20, 0x0

    goto :goto_14

    .line 5221
    .restart local v20    # "hasStatusBarPermission":Z
    .restart local v38    # "origId":J
    .restart local v58    # "win":Lcom/android/server/wm/WindowState;
    :cond_36
    sget-boolean v61, DUALSCREEN_DEBUG_INPUT_METHOD:Z

    if-eqz v61, :cond_6d

    .line 5222
    move-object/from16 v0, p0

    iget-object v0, v0, mDualScreenInputMethodManager:Lcom/android/server/wm/DualScreenInputMethodManager;

    move-object/from16 v61, v0

    new-instance v63, Ljava/lang/StringBuilder;

    invoke-direct/range {v63 .. v63}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v64, "relayout win="

    invoke-virtual/range {v63 .. v64}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v63

    move-object/from16 v0, v63

    move-object/from16 v1, v58

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v63

    const-string v64, " viewVisibility="

    invoke-virtual/range {v63 .. v64}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v63

    move-object/from16 v0, v63

    move/from16 v1, p7

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v63

    invoke-virtual/range {v63 .. v63}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v63

    move-object/from16 v0, v61

    move-object/from16 v1, v63

    invoke-virtual {v0, v1}, Lcom/android/server/wm/DualScreenInputMethodManager;->printDebugInfo(Ljava/lang/String;)V

    .line 5225
    :cond_6d
    move-object/from16 v0, v58

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    move-object/from16 v59, v0

    .line 5226
    .local v59, "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    const/16 v61, 0x8

    move/from16 v0, p7

    move/from16 v1, v61

    if-eq v0, v1, :cond_a7

    move-object/from16 v0, v58

    iget v0, v0, Lcom/android/server/wm/WindowState;->mRequestedWidth:I

    move/from16 v61, v0

    move/from16 v0, v61

    move/from16 v1, p5

    if-ne v0, v1, :cond_93

    move-object/from16 v0, v58

    iget v0, v0, Lcom/android/server/wm/WindowState;->mRequestedHeight:I

    move/from16 v61, v0

    move/from16 v0, v61

    move/from16 v1, p6

    if-eq v0, v1, :cond_a7

    .line 5228
    :cond_93
    const/16 v61, 0x1

    move/from16 v0, v61

    move-object/from16 v1, v58

    iput-boolean v0, v1, Lcom/android/server/wm/WindowState;->mLayoutNeeded:Z

    .line 5229
    move/from16 v0, p5

    move-object/from16 v1, v58

    iput v0, v1, Lcom/android/server/wm/WindowState;->mRequestedWidth:I

    .line 5230
    move/from16 v0, p6

    move-object/from16 v1, v58

    iput v0, v1, Lcom/android/server/wm/WindowState;->mRequestedHeight:I

    .line 5233
    :cond_a7
    if-eqz p4, :cond_b6

    .line 5239
    move-object/from16 v0, p0

    iget-object v0, v0, mPolicy:Landroid/view/WindowManagerPolicy;

    move-object/from16 v61, v0

    move-object/from16 v0, v61

    move-object/from16 v1, p4

    invoke-interface {v0, v1}, Landroid/view/WindowManagerPolicy;->adjustWindowParamsLw(Landroid/view/WindowManager$LayoutParams;)V

    .line 5244
    :cond_b6
    const/16 v49, 0x0

    .line 5245
    .local v49, "systemUiVisibility":I
    if-eqz p4, :cond_d5

    .line 5246
    move-object/from16 v0, p4

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->systemUiVisibility:I

    move/from16 v61, v0

    move-object/from16 v0, p4

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->subtreeSystemUiVisibility:I

    move/from16 v63, v0

    or-int v49, v61, v63

    .line 5247
    const/high16 v61, 0x3ff0000

    and-int v61, v61, v49

    if-eqz v61, :cond_d5

    .line 5248
    if-nez v20, :cond_d5

    .line 5249
    const v61, -0x3ff0001

    and-int v49, v49, v61

    .line 5254
    :cond_d5
    if-eqz p4, :cond_e9

    move-object/from16 v0, v58

    iget v0, v0, Lcom/android/server/wm/WindowState;->mSeq:I

    move/from16 v61, v0

    move/from16 v0, p3

    move/from16 v1, v61

    if-ne v0, v1, :cond_e9

    .line 5255
    move/from16 v0, v49

    move-object/from16 v1, v58

    iput v0, v1, Lcom/android/server/wm/WindowState;->mSystemUiVisibility:I

    .line 5258
    :cond_e9
    and-int/lit8 v61, p8, 0x2

    if-eqz v61, :cond_123

    const/16 v61, 0x1

    :goto_ef
    move/from16 v0, v61

    move-object/from16 v1, v59

    iput-boolean v0, v1, Lcom/android/server/wm/WindowStateAnimator;->mSurfaceDestroyDeferred:Z

    .line 5261
    const/4 v10, 0x0

    .line 5262
    .local v10, "attrChanges":I
    const/16 v17, 0x0

    .line 5264
    .local v17, "flagChanges":I
    const/16 v60, 0x0

    .line 5267
    .local v60, "winSurfaceScaled":I
    if-eqz p4, :cond_215

    .line 5268
    move-object/from16 v0, v58

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    move-object/from16 v61, v0

    move-object/from16 v0, v61

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    move/from16 v61, v0

    move-object/from16 v0, p4

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    move/from16 v63, v0

    move/from16 v0, v61

    move/from16 v1, v63

    if-eq v0, v1, :cond_126

    .line 5269
    new-instance v61, Ljava/lang/IllegalArgumentException;

    const-string v63, "Window type can not be changed after the window is added."

    move-object/from16 v0, v61

    move-object/from16 v1, v63

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v61

    .line 5851
    .end local v10    # "attrChanges":I
    .end local v17    # "flagChanges":I
    .end local v49    # "systemUiVisibility":I
    .end local v58    # "win":Lcom/android/server/wm/WindowState;
    .end local v59    # "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    .end local v60    # "winSurfaceScaled":I
    :catchall_120
    move-exception v61

    monitor-exit v62
    :try_end_122
    .catchall {:try_start_21 .. :try_end_122} :catchall_120

    throw v61

    .line 5258
    .restart local v49    # "systemUiVisibility":I
    .restart local v58    # "win":Lcom/android/server/wm/WindowState;
    .restart local v59    # "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    :cond_123
    const/16 v61, 0x0

    goto :goto_ef

    .line 5273
    .restart local v10    # "attrChanges":I
    .restart local v17    # "flagChanges":I
    .restart local v60    # "winSurfaceScaled":I
    :cond_126
    :try_start_126
    move-object/from16 v0, v58

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    move-object/from16 v61, v0

    move-object/from16 v0, v61

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->privateFlags:I

    move/from16 v61, v0

    const/high16 v63, 0x1000000

    and-int v60, v61, v63

    .line 5275
    move-object/from16 v0, v58

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    move-object/from16 v61, v0

    move-object/from16 v0, v61

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->flags:I

    move/from16 v63, v0

    move-object/from16 v0, p4

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->flags:I

    move/from16 v64, v0

    xor-int v17, v63, v64

    move/from16 v0, v17

    move-object/from16 v1, v61

    iput v0, v1, Landroid/view/WindowManager$LayoutParams;->flags:I

    .line 5278
    move-object/from16 v0, p4

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    move/from16 v61, v0

    const/16 v63, 0x7d0

    move/from16 v0, v61

    move/from16 v1, v63

    if-ne v0, v1, :cond_18f

    move-object/from16 v0, v58

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    move-object/from16 v61, v0

    move-object/from16 v0, v61

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->privateFlags:I

    move/from16 v61, v0

    move/from16 v0, v61

    and-int/lit16 v0, v0, 0x400

    move/from16 v61, v0

    if-eqz v61, :cond_18f

    move-object/from16 v0, p4

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->privateFlags:I

    move/from16 v61, v0

    move/from16 v0, v61

    and-int/lit16 v0, v0, 0x400

    move/from16 v61, v0

    if-nez v61, :cond_18f

    .line 5281
    move-object/from16 v0, p0

    iget-object v0, v0, mPolicy:Landroid/view/WindowManagerPolicy;

    move-object/from16 v61, v0

    const/16 v63, 0x1

    move-object/from16 v0, v61

    move/from16 v1, v63

    invoke-interface {v0, v1}, Landroid/view/WindowManagerPolicy;->requestDefaultKeyguardRotationAnimation(Z)V

    .line 5285
    :cond_18f
    move-object/from16 v0, v58

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    move-object/from16 v61, v0

    move-object/from16 v0, v61

    move-object/from16 v1, p4

    invoke-virtual {v0, v1}, Landroid/view/WindowManager$LayoutParams;->copyFrom(Landroid/view/WindowManager$LayoutParams;)I

    move-result v10

    .line 5286
    and-int/lit16 v0, v10, 0x4001

    move/from16 v61, v0

    if-eqz v61, :cond_1ab

    .line 5288
    const/16 v61, 0x1

    move/from16 v0, v61

    move-object/from16 v1, v58

    iput-boolean v0, v1, Lcom/android/server/wm/WindowState;->mLayoutNeeded:Z

    .line 5292
    :cond_1ab
    move-object/from16 v0, v58

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    move-object/from16 v61, v0

    if-eqz v61, :cond_215

    .line 5293
    invoke-virtual/range {v58 .. v58}, Lcom/android/server/wm/WindowState;->getMultiWindowStyleLw()Lcom/samsung/android/multiwindow/MultiWindowStyle;

    move-result-object v32

    .line 5294
    .local v32, "mwStyle":Lcom/samsung/android/multiwindow/MultiWindowStyle;
    const/high16 v61, 0x8000000

    move-object/from16 v0, v32

    move/from16 v1, v61

    invoke-virtual {v0, v1}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->isEnabled(I)Z

    move-result v12

    .line 5295
    .local v12, "currDisalbeFloating":Z
    const/16 v33, 0x0

    .line 5296
    .local v33, "nextDisalbeFloating":Z
    move-object/from16 v0, v58

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    move-object/from16 v61, v0

    move-object/from16 v0, v61

    iget-object v0, v0, Lcom/android/server/wm/AppWindowToken;->allAppWindows:Lcom/android/server/wm/WindowList;

    move-object/from16 v61, v0

    invoke-virtual/range {v61 .. v61}, Lcom/android/server/wm/WindowList;->iterator()Ljava/util/Iterator;

    move-result-object v22

    .local v22, "i$":Ljava/util/Iterator;
    :cond_1d3
    invoke-interface/range {v22 .. v22}, Ljava/util/Iterator;->hasNext()Z

    move-result v61

    if-eqz v61, :cond_1f3

    invoke-interface/range {v22 .. v22}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v8

    check-cast v8, Lcom/android/server/wm/WindowState;

    .line 5297
    .local v8, "appWin":Lcom/android/server/wm/WindowState;
    iget-object v0, v8, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    move-object/from16 v61, v0

    move-object/from16 v0, v61

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->multiWindowFlags:I

    move/from16 v61, v0

    move/from16 v0, v61

    and-int/lit16 v0, v0, 0x80

    move/from16 v61, v0

    if-eqz v61, :cond_1d3

    .line 5299
    const/16 v33, 0x1

    .line 5303
    .end local v8    # "appWin":Lcom/android/server/wm/WindowState;
    :cond_1f3
    move/from16 v0, v33

    if-eq v12, v0, :cond_215

    .line 5305
    const/high16 v61, 0x8000000

    move-object/from16 v0, v32

    move/from16 v1, v61

    move/from16 v2, v33

    invoke-virtual {v0, v1, v2}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->setOption(IZ)V

    .line 5306
    move-object/from16 v0, v58

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    move-object/from16 v61, v0

    const/16 v63, 0x1

    move-object/from16 v0, p0

    move-object/from16 v1, v61

    move-object/from16 v2, v32

    move/from16 v3, v63

    invoke-virtual {v0, v1, v2, v3}, changeMultiWindowStyle(Lcom/android/server/wm/AppWindowToken;Lcom/samsung/android/multiwindow/MultiWindowStyle;Z)Z

    .line 5314
    .end local v12    # "currDisalbeFloating":Z
    .end local v22    # "i$":Ljava/util/Iterator;
    .end local v32    # "mwStyle":Lcom/samsung/android/multiwindow/MultiWindowStyle;
    .end local v33    # "nextDisalbeFloating":Z
    :cond_215
    move-object/from16 v0, v58

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    move-object/from16 v61, v0

    move-object/from16 v0, v61

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->privateFlags:I

    move/from16 v63, v0

    or-int v63, v63, v60

    move/from16 v0, v63

    move-object/from16 v1, v61

    iput v0, v1, Landroid/view/WindowManager$LayoutParams;->privateFlags:I

    .line 5317
    sget-boolean v61, DEBUG_LAYOUT:Z

    if-nez v61, :cond_231

    sget-boolean v61, SAFE_DEBUG:Z

    if-eqz v61, :cond_28c

    :cond_231
    const-string v61, "WindowManager"

    new-instance v63, Ljava/lang/StringBuilder;

    invoke-direct/range {v63 .. v63}, Ljava/lang/StringBuilder;-><init>()V

    const-string v64, "Relayout "

    invoke-virtual/range {v63 .. v64}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v63

    move-object/from16 v0, v63

    move-object/from16 v1, v58

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v63

    const-string v64, ": viewVisibility="

    invoke-virtual/range {v63 .. v64}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v63

    move-object/from16 v0, v63

    move/from16 v1, p7

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v63

    const-string v64, " req="

    invoke-virtual/range {v63 .. v64}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v63

    move-object/from16 v0, v63

    move/from16 v1, p5

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v63

    const-string/jumbo v64, "x"

    invoke-virtual/range {v63 .. v64}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v63

    move-object/from16 v0, v63

    move/from16 v1, p6

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v63

    const-string v64, " "

    invoke-virtual/range {v63 .. v64}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v63

    move-object/from16 v0, v58

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    move-object/from16 v64, v0

    invoke-virtual/range {v63 .. v64}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v63

    invoke-virtual/range {v63 .. v63}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v63

    move-object/from16 v0, v61

    move-object/from16 v1, v63

    invoke-static {v0, v1}, Landroid/util/Log;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 5320
    :cond_28c
    move-object/from16 v0, v58

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    move-object/from16 v61, v0

    move-object/from16 v0, v61

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->privateFlags:I

    move/from16 v61, v0

    move/from16 v0, v61

    and-int/lit16 v0, v0, 0x80

    move/from16 v61, v0

    if-eqz v61, :cond_a90

    const/16 v61, 0x1

    :goto_2a2
    move/from16 v0, v61

    move-object/from16 v1, v58

    iput-boolean v0, v1, Lcom/android/server/wm/WindowState;->mEnforceSizeCompat:Z

    .line 5323
    and-int/lit16 v0, v10, 0x80

    move/from16 v61, v0

    if-eqz v61, :cond_2ba

    .line 5324
    move-object/from16 v0, p4

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->alpha:F

    move/from16 v61, v0

    move/from16 v0, v61

    move-object/from16 v1, v59

    iput v0, v1, Lcom/android/server/wm/WindowStateAnimator;->mAlpha:F

    .line 5327
    :cond_2ba
    move-object/from16 v0, v58

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    move-object/from16 v61, v0

    move-object/from16 v0, v61

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->flags:I

    move/from16 v61, v0

    move/from16 v0, v61

    and-int/lit16 v0, v0, 0x4000

    move/from16 v61, v0

    if-eqz v61, :cond_a94

    const/16 v44, 0x1

    .line 5331
    .local v44, "scaledWindow":Z
    :goto_2d0
    const/16 v35, 0x0

    .line 5332
    .local v35, "optionScale":Z
    const/high16 v56, 0x3f800000    # 1.0f

    .line 5333
    .local v56, "vScale":F
    const/high16 v19, 0x3f800000    # 1.0f

    .line 5335
    .local v19, "hScale":F
    invoke-virtual/range {v58 .. v58}, Lcom/android/server/wm/WindowState;->getMultiWindowStyleLw()Lcom/samsung/android/multiwindow/MultiWindowStyle;

    move-result-object v31

    .line 5336
    .local v31, "multiWindowStyle":Lcom/samsung/android/multiwindow/MultiWindowStyle;
    const/16 v61, 0x800

    move-object/from16 v0, v31

    move/from16 v1, v61

    invoke-virtual {v0, v1}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->isEnabled(I)Z

    move-result v61

    if-eqz v61, :cond_a98

    const/16 v61, 0x4

    move-object/from16 v0, v31

    move/from16 v1, v61

    invoke-virtual {v0, v1}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->isEnabled(I)Z

    move-result v61

    if-nez v61, :cond_a98

    const/16 v35, 0x1

    .line 5340
    :goto_2f4
    move/from16 v0, v17

    and-int/lit16 v0, v0, 0x202

    move/from16 v61, v0

    if-eqz v61, :cond_325

    invoke-virtual/range {v31 .. v31}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->isSplit()Z

    move-result v61

    if-eqz v61, :cond_325

    const/16 v61, 0x1000

    move-object/from16 v0, v31

    move/from16 v1, v61

    invoke-virtual {v0, v1}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->isEnabled(I)Z

    move-result v61

    if-nez v61, :cond_325

    .line 5343
    invoke-virtual/range {v58 .. v58}, Lcom/android/server/wm/WindowState;->getStack()Lcom/android/server/wm/TaskStack;

    move-result-object v51

    .line 5344
    .local v51, "taskStack":Lcom/android/server/wm/TaskStack;
    if-eqz v51, :cond_325

    move-object/from16 v0, v51

    iget-boolean v0, v0, Lcom/android/server/wm/TaskStack;->mFixedBound:Z

    move/from16 v61, v0

    if-eqz v61, :cond_325

    .line 5345
    const/16 v61, 0x1

    move-object/from16 v0, v58

    move/from16 v1, v61

    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowState;->setWindowFlagFixedBound(Z)V

    .line 5349
    .end local v51    # "taskStack":Lcom/android/server/wm/TaskStack;
    :cond_325
    if-eqz v35, :cond_ade

    move-object/from16 v0, v58

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    move-object/from16 v61, v0

    move-object/from16 v0, v61

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->multiWindowFlags:I

    move/from16 v61, v0

    and-int/lit8 v61, v61, 0x8

    if-nez v61, :cond_ade

    .line 5350
    move-object/from16 v0, v58

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    move-object/from16 v61, v0

    if-eqz v61, :cond_a9c

    move-object/from16 v0, v58

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    move-object/from16 v61, v0

    move-object/from16 v0, v61

    iget-object v0, v0, Lcom/android/server/wm/AppWindowToken;->mTask:Lcom/android/server/wm/Task;

    move-object/from16 v50, v0

    .line 5351
    .local v50, "task":Lcom/android/server/wm/Task;
    :goto_34b
    if-eqz v50, :cond_aa0

    move-object/from16 v0, v50

    iget-object v0, v0, Lcom/android/server/wm/Task;->mStack:Lcom/android/server/wm/TaskStack;

    move-object/from16 v61, v0

    if-eqz v61, :cond_aa0

    move-object/from16 v0, v50

    iget-object v0, v0, Lcom/android/server/wm/Task;->mStack:Lcom/android/server/wm/TaskStack;

    move-object/from16 v61, v0

    invoke-virtual/range {v61 .. v61}, Lcom/android/server/wm/TaskStack;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    move-result-object v14

    .line 5354
    .local v14, "displayContent":Lcom/android/server/wm/DisplayContent;
    :goto_35f
    if-eqz v14, :cond_493

    invoke-virtual/range {v31 .. v31}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->getType()I

    move-result v61

    const/16 v63, 0x2

    move/from16 v0, v61

    move/from16 v1, v63

    if-ne v0, v1, :cond_493

    .line 5362
    move-object/from16 v0, p0

    iget-object v0, v0, mCurConfiguration:Landroid/content/res/Configuration;

    move-object/from16 v61, v0

    move-object/from16 v0, v61

    iget v0, v0, Landroid/content/res/Configuration;->orientation:I

    move/from16 v36, v0

    .line 5365
    .local v36, "orientation":I
    sget-boolean v61, Lcom/samsung/android/multiwindow/MultiWindowFeatures;->SELECTIVE1ORIENTATION_ENABLED:Z

    if-eqz v61, :cond_aa3

    move-object/from16 v0, v58

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    move-object/from16 v61, v0

    if-eqz v61, :cond_aa3

    move-object/from16 v0, v58

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    move-object/from16 v61, v0

    invoke-virtual/range {v61 .. v61}, Lcom/android/server/wm/AppWindowToken;->isSelectiveOrientationStateLocked()Z

    move-result v61

    if-eqz v61, :cond_aa3

    .line 5367
    invoke-virtual {v14}, Lcom/android/server/wm/DisplayContent;->getReverseDisplayInfo()Landroid/view/DisplayInfo;

    move-result-object v15

    .line 5372
    .local v15, "displayInfo":Landroid/view/DisplayInfo;
    :goto_395
    move-object/from16 v0, p0

    iget-object v0, v0, mPolicy:Landroid/view/WindowManagerPolicy;

    move-object/from16 v63, v0

    move-object/from16 v0, v58

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttachedWindow:Lcom/android/server/wm/WindowState;

    move-object/from16 v61, v0

    if-nez v61, :cond_aa9

    move-object/from16 v61, v58

    :goto_3a5
    move-object/from16 v0, v63

    move-object/from16 v1, v61

    invoke-interface {v0, v1}, Landroid/view/WindowManagerPolicy;->getFloatingWindowPadding(Landroid/view/WindowManagerPolicy$WindowState;)Landroid/graphics/Rect;

    move-result-object v40

    .line 5373
    .local v40, "padding":Landroid/graphics/Rect;
    iget v7, v15, Landroid/view/DisplayInfo;->appWidth:I

    .line 5374
    .local v7, "appWidth":I
    iget v6, v15, Landroid/view/DisplayInfo;->appHeight:I

    .line 5378
    .local v6, "appHeight":I
    move-object/from16 v0, p0

    iget-object v0, v0, mContext:Landroid/content/Context;

    move-object/from16 v61, v0

    invoke-static/range {v61 .. v61}, Lcom/samsung/android/cocktailbar/CocktailBarFeatures;->isSystemBarType(Landroid/content/Context;)Z

    move-result v61

    if-eqz v61, :cond_3dd

    .line 5379
    invoke-virtual/range {v58 .. v58}, Lcom/android/server/wm/WindowState;->getMainWindow()Lcom/android/server/wm/WindowState;

    move-result-object v61

    if-eqz v61, :cond_3dd

    invoke-virtual/range {v58 .. v58}, Lcom/android/server/wm/WindowState;->getMainWindow()Lcom/android/server/wm/WindowState;

    move-result-object v61

    move-object/from16 v0, v61

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    move-object/from16 v61, v0

    move-object/from16 v0, v61

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->samsungFlags:I

    move/from16 v61, v0

    const/high16 v63, 0x20000000

    and-int v61, v61, v63

    if-eqz v61, :cond_3dd

    .line 5381
    iget v7, v15, Landroid/view/DisplayInfo;->alphaScreenAppWidth:I

    .line 5382
    iget v6, v15, Landroid/view/DisplayInfo;->alphaScreenAppHeight:I

    .line 5388
    :cond_3dd
    new-instance v46, Landroid/graphics/Rect;

    invoke-direct/range {v46 .. v46}, Landroid/graphics/Rect;-><init>()V

    .line 5389
    .local v46, "stackBound":Landroid/graphics/Rect;
    invoke-virtual/range {v58 .. v58}, Lcom/android/server/wm/WindowState;->getStack()Lcom/android/server/wm/TaskStack;

    move-result-object v51

    .line 5390
    .restart local v51    # "taskStack":Lcom/android/server/wm/TaskStack;
    if-eqz v51, :cond_ab1

    .line 5391
    move-object/from16 v0, v51

    move-object/from16 v1, v46

    invoke-virtual {v0, v1}, Lcom/android/server/wm/TaskStack;->getStackOriginalBound(Landroid/graphics/Rect;)V

    .line 5397
    :goto_3ef
    move-object/from16 v0, p0

    iget-object v0, v0, mContext:Landroid/content/Context;

    move-object/from16 v61, v0

    invoke-static/range {v61 .. v61}, Lcom/samsung/android/multiwindow/MultiWindowFeatures;->isSupportStyleTransition(Landroid/content/Context;)Z

    move-result v26

    .line 5399
    .local v26, "isFixedRatio":Z
    invoke-virtual/range {v46 .. v46}, Landroid/graphics/Rect;->width()I

    move-result v53

    .line 5400
    .local v53, "tempWidth":I
    invoke-virtual/range {v46 .. v46}, Landroid/graphics/Rect;->height()I

    move-result v52

    .line 5401
    .local v52, "tempHeight":I
    sget-boolean v61, Lcom/samsung/android/multiwindow/MultiWindowFeatures;->SELECTIVE1ORIENTATION_ENABLED:Z

    if-eqz v61, :cond_443

    if-eqz v26, :cond_443

    .line 5404
    iget v0, v15, Landroid/view/DisplayInfo;->appWidth:I

    move/from16 v61, v0

    iget v0, v15, Landroid/view/DisplayInfo;->appHeight:I

    move/from16 v63, v0

    move/from16 v0, v61

    move/from16 v1, v63

    if-le v0, v1, :cond_aba

    invoke-virtual/range {v46 .. v46}, Landroid/graphics/Rect;->height()I

    move-result v61

    invoke-virtual/range {v46 .. v46}, Landroid/graphics/Rect;->width()I

    move-result v63

    move/from16 v0, v61

    move/from16 v1, v63

    invoke-static {v0, v1}, Ljava/lang/Math;->max(II)I

    move-result v53

    .line 5407
    :goto_425
    iget v0, v15, Landroid/view/DisplayInfo;->appWidth:I

    move/from16 v61, v0

    iget v0, v15, Landroid/view/DisplayInfo;->appHeight:I

    move/from16 v63, v0

    move/from16 v0, v61

    move/from16 v1, v63

    if-ge v0, v1, :cond_acc

    invoke-virtual/range {v46 .. v46}, Landroid/graphics/Rect;->height()I

    move-result v61

    invoke-virtual/range {v46 .. v46}, Landroid/graphics/Rect;->width()I

    move-result v63

    move/from16 v0, v61

    move/from16 v1, v63

    invoke-static {v0, v1}, Ljava/lang/Math;->max(II)I

    move-result v52

    .line 5413
    :cond_443
    :goto_443
    move/from16 v0, v53

    int-to-float v0, v0

    move/from16 v61, v0

    move-object/from16 v0, v40

    iget v0, v0, Landroid/graphics/Rect;->left:I

    move/from16 v63, v0

    add-int v63, v63, v7

    move-object/from16 v0, v40

    iget v0, v0, Landroid/graphics/Rect;->right:I

    move/from16 v64, v0

    add-int v63, v63, v64

    move/from16 v0, v63

    int-to-float v0, v0

    move/from16 v63, v0

    div-float v19, v61, v63

    .line 5414
    move/from16 v0, v52

    int-to-float v0, v0

    move/from16 v61, v0

    move-object/from16 v0, v40

    iget v0, v0, Landroid/graphics/Rect;->top:I

    move/from16 v63, v0

    add-int v63, v63, v6

    move-object/from16 v0, v40

    iget v0, v0, Landroid/graphics/Rect;->bottom:I

    move/from16 v64, v0

    add-int v63, v63, v64

    move/from16 v0, v63

    int-to-float v0, v0

    move/from16 v63, v0

    div-float v56, v61, v63

    .line 5416
    const/16 v61, 0x0

    cmpl-float v61, v19, v61

    if-eqz v61, :cond_487

    .line 5417
    move/from16 v0, v19

    move-object/from16 v1, v58

    iput v0, v1, Lcom/android/server/wm/WindowState;->mFloatingAppHScale:F

    .line 5419
    :cond_487
    const/16 v61, 0x0

    cmpl-float v61, v56, v61

    if-eqz v61, :cond_493

    .line 5420
    move/from16 v0, v56

    move-object/from16 v1, v58

    iput v0, v1, Lcom/android/server/wm/WindowState;->mFloatingAppVScale:F

    .line 5429
    .end local v6    # "appHeight":I
    .end local v7    # "appWidth":I
    .end local v14    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v15    # "displayInfo":Landroid/view/DisplayInfo;
    .end local v26    # "isFixedRatio":Z
    .end local v36    # "orientation":I
    .end local v40    # "padding":Landroid/graphics/Rect;
    .end local v46    # "stackBound":Landroid/graphics/Rect;
    .end local v50    # "task":Lcom/android/server/wm/Task;
    .end local v51    # "taskStack":Lcom/android/server/wm/TaskStack;
    .end local v52    # "tempHeight":I
    .end local v53    # "tempWidth":I
    :cond_493
    :goto_493
    if-eqz v44, :cond_b0a

    if-eqz p4, :cond_b0a

    .line 5432
    move-object/from16 v0, p4

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->width:I

    move/from16 v61, v0

    move/from16 v0, v61

    move/from16 v1, p5

    if-eq v0, v1, :cond_b02

    move-object/from16 v0, p4

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->width:I

    move/from16 v61, v0

    move/from16 v0, v61

    int-to-float v0, v0

    move/from16 v61, v0

    move/from16 v0, p5

    int-to-float v0, v0

    move/from16 v63, v0

    div-float v61, v61, v63

    :goto_4b5
    move/from16 v0, v61

    move-object/from16 v1, v58

    iput v0, v1, Lcom/android/server/wm/WindowState;->mHScale:F

    .line 5434
    move-object/from16 v0, p4

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->height:I

    move/from16 v61, v0

    move/from16 v0, v61

    move/from16 v1, p6

    if-eq v0, v1, :cond_b06

    move-object/from16 v0, p4

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->height:I

    move/from16 v61, v0

    move/from16 v0, v61

    int-to-float v0, v0

    move/from16 v61, v0

    move/from16 v0, p6

    int-to-float v0, v0

    move/from16 v63, v0

    div-float v61, v61, v63

    :goto_4d9
    move/from16 v0, v61

    move-object/from16 v1, v58

    iput v0, v1, Lcom/android/server/wm/WindowState;->mVScale:F

    .line 5450
    :cond_4df
    :goto_4df
    if-eqz v35, :cond_543

    .line 5451
    if-eqz v44, :cond_b2e

    .line 5452
    move-object/from16 v0, v58

    iget v0, v0, Lcom/android/server/wm/WindowState;->mHScale:F

    move/from16 v61, v0

    mul-float v61, v61, v19

    move/from16 v0, v61

    move-object/from16 v1, v58

    iput v0, v1, Lcom/android/server/wm/WindowState;->mHScale:F

    .line 5453
    move-object/from16 v0, v58

    iget v0, v0, Lcom/android/server/wm/WindowState;->mVScale:F

    move/from16 v61, v0

    mul-float v61, v61, v56

    move/from16 v0, v61

    move-object/from16 v1, v58

    iput v0, v1, Lcom/android/server/wm/WindowState;->mVScale:F

    .line 5458
    :goto_4ff
    sget-boolean v61, DEBUG_MULTIWINDOW_SCALE:Z

    if-eqz v61, :cond_543

    .line 5459
    const-string v61, "WindowManager"

    new-instance v63, Ljava/lang/StringBuilder;

    invoke-direct/range {v63 .. v63}, Ljava/lang/StringBuilder;-><init>()V

    const-string v64, "Relayout "

    invoke-virtual/range {v63 .. v64}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v63

    move-object/from16 v0, v63

    move-object/from16 v1, v58

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v63

    const-string v64, ": mHScale="

    invoke-virtual/range {v63 .. v64}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v63

    move-object/from16 v0, v58

    iget v0, v0, Lcom/android/server/wm/WindowState;->mHScale:F

    move/from16 v64, v0

    invoke-virtual/range {v63 .. v64}, Ljava/lang/StringBuilder;->append(F)Ljava/lang/StringBuilder;

    move-result-object v63

    const-string v64, ", mVScale="

    invoke-virtual/range {v63 .. v64}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v63

    move-object/from16 v0, v58

    iget v0, v0, Lcom/android/server/wm/WindowState;->mVScale:F

    move/from16 v64, v0

    invoke-virtual/range {v63 .. v64}, Ljava/lang/StringBuilder;->append(F)Ljava/lang/StringBuilder;

    move-result-object v63

    invoke-virtual/range {v63 .. v63}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v63

    move-object/from16 v0, v61

    move-object/from16 v1, v63

    invoke-static {v0, v1}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 5463
    :cond_543
    if-nez v44, :cond_55d

    .line 5464
    move-object/from16 v0, v58

    iget v0, v0, Lcom/android/server/wm/WindowState;->mHScale:F

    move/from16 v61, v0

    move/from16 v0, v61

    move-object/from16 v1, p17

    iput v0, v1, Landroid/graphics/PointF;->x:F

    .line 5465
    move-object/from16 v0, v58

    iget v0, v0, Lcom/android/server/wm/WindowState;->mVScale:F

    move/from16 v61, v0

    move/from16 v0, v61

    move-object/from16 v1, p17

    iput v0, v1, Landroid/graphics/PointF;->y:F

    .line 5472
    :cond_55d
    move-object/from16 v0, v58

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    move-object/from16 v61, v0

    move-object/from16 v0, v61

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->privateFlags:I

    move/from16 v61, v0

    const/high16 v63, 0x1000000

    and-int v61, v61, v63

    if-eqz v61, :cond_5f8

    .line 5473
    invoke-static {}, Landroid/os/DssHelper;->getInstance()Landroid/os/DssHelper;

    move-result-object v28

    .line 5474
    .local v28, "mDssHelper":Landroid/os/DssHelper;
    invoke-virtual/range {v58 .. v58}, Lcom/android/server/wm/WindowState;->getAttrs()Landroid/view/WindowManager$LayoutParams;

    move-result-object v61

    move-object/from16 v0, v61

    iget-object v0, v0, Landroid/view/WindowManager$LayoutParams;->packageName:Ljava/lang/String;

    move-object/from16 v61, v0

    const-string v63, "/"

    move-object/from16 v0, v61

    move-object/from16 v1, v63

    invoke-virtual {v0, v1}, Ljava/lang/String;->split(Ljava/lang/String;)[Ljava/lang/String;

    move-result-object v37

    .line 5476
    .local v37, "packageName":[Ljava/lang/String;
    const/16 v42, 0x0

    .line 5477
    .local v42, "runDss":Z
    const/16 v61, 0x0

    aget-object v61, v37, v61

    move-object/from16 v0, v28

    move-object/from16 v1, v61

    invoke-virtual {v0, v1}, Landroid/os/DssHelper;->isAdss(Ljava/lang/String;)Z

    move-result v61

    if-eqz v61, :cond_b83

    .line 5478
    const/16 v61, 0x1

    move/from16 v0, v61

    move-object/from16 v1, v58

    iput-boolean v0, v1, Lcom/android/server/wm/WindowState;->mIsAdss:Z

    .line 5479
    move-object/from16 v0, v58

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    move-object/from16 v61, v0

    invoke-virtual/range {v61 .. v61}, Landroid/view/WindowManager$LayoutParams;->getTitle()Ljava/lang/CharSequence;

    move-result-object v61

    if-eqz v61, :cond_b3c

    move-object/from16 v0, v58

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    move-object/from16 v61, v0

    invoke-virtual/range {v61 .. v61}, Landroid/view/WindowManager$LayoutParams;->getTitle()Ljava/lang/CharSequence;

    move-result-object v61

    const-string v63, "SurfaceView"

    move-object/from16 v0, v61

    move-object/from16 v1, v63

    invoke-virtual {v0, v1}, Ljava/lang/Object;->equals(Ljava/lang/Object;)Z

    move-result v61

    if-eqz v61, :cond_b3c

    .line 5480
    const/16 v42, 0x1

    .line 5494
    :cond_5c3
    :goto_5c3
    if-eqz v42, :cond_5f8

    .line 5495
    const/16 v61, 0x0

    aget-object v61, v37, v61

    move-object/from16 v0, v28

    move-object/from16 v1, v61

    invoke-virtual {v0, v1}, Landroid/os/DssHelper;->getScalingFactor(Ljava/lang/String;)F

    move-result v41

    .line 5496
    .local v41, "resolutionFactorf":F
    move-object/from16 v0, v58

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    move-object/from16 v61, v0

    move-object/from16 v0, v61

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    move/from16 v61, v0

    const/16 v63, 0x7d5

    move/from16 v0, v61

    move/from16 v1, v63

    if-ne v0, v1, :cond_b8f

    move-object/from16 v0, v58

    iget v0, v0, Lcom/android/server/wm/WindowState;->mDssScale:F

    move/from16 v61, v0

    move/from16 v0, v61

    float-to-double v0, v0

    move-wide/from16 v64, v0

    const-wide/high16 v66, 0x3ff0000000000000L    # 1.0

    cmpl-double v61, v64, v66

    if-eqz v61, :cond_b8f

    .line 5497
    const/high16 v41, 0x3f800000    # 1.0f

    .line 5507
    .end local v28    # "mDssHelper":Landroid/os/DssHelper;
    .end local v37    # "packageName":[Ljava/lang/String;
    .end local v41    # "resolutionFactorf":F
    .end local v42    # "runDss":Z
    :cond_5f8
    :goto_5f8
    const v61, 0x20008

    and-int v61, v61, v17

    if-eqz v61, :cond_bbf

    const/16 v23, 0x1

    .line 5509
    .local v23, "imMayMove":Z
    :goto_601
    invoke-virtual/range {v58 .. v58}, Lcom/android/server/wm/WindowState;->isDefaultDisplay()Z

    move-result v25

    .line 5510
    .local v25, "isDefaultDisplay":Z
    if-eqz v25, :cond_bc3

    move-object/from16 v0, v58

    iget v0, v0, Lcom/android/server/wm/WindowState;->mViewVisibility:I

    move/from16 v61, v0

    move/from16 v0, v61

    move/from16 v1, p7

    if-ne v0, v1, :cond_61f

    and-int/lit8 v61, v17, 0x8

    if-nez v61, :cond_61f

    move-object/from16 v0, v58

    iget-boolean v0, v0, Lcom/android/server/wm/WindowState;->mRelayoutCalled:Z

    move/from16 v61, v0

    if-nez v61, :cond_bc3

    :cond_61f
    const/16 v18, 0x1

    .line 5514
    .local v18, "focusMayChange":Z
    :goto_621
    move-object/from16 v0, v58

    iget v0, v0, Lcom/android/server/wm/WindowState;->mViewVisibility:I

    move/from16 v61, v0

    move/from16 v0, v61

    move/from16 v1, p7

    if-eq v0, v1, :cond_bc7

    move-object/from16 v0, v58

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    move-object/from16 v61, v0

    move-object/from16 v0, v61

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->flags:I

    move/from16 v61, v0

    const/high16 v63, 0x100000

    and-int v61, v61, v63

    if-eqz v61, :cond_bc7

    const/16 v57, 0x1

    .line 5516
    .local v57, "wallpaperMayMove":Z
    :goto_641
    const/high16 v61, 0x100000

    and-int v61, v61, v17

    if-eqz v61, :cond_bcb

    const/16 v61, 0x1

    :goto_649
    or-int v57, v57, v61

    .line 5518
    const/16 v61, 0x1

    move/from16 v0, v61

    move-object/from16 v1, v58

    iput-boolean v0, v1, Lcom/android/server/wm/WindowState;->mRelayoutCalled:Z

    .line 5519
    move-object/from16 v0, v58

    iget v0, v0, Lcom/android/server/wm/WindowState;->mViewVisibility:I

    move/from16 v34, v0

    .line 5520
    .local v34, "oldVisibility":I
    move/from16 v0, p7

    move-object/from16 v1, v58

    iput v0, v1, Lcom/android/server/wm/WindowState;->mViewVisibility:I

    .line 5521
    sget-boolean v61, DEBUG_VISIBILITY:Z

    if-eqz v61, :cond_6a9

    .line 5522
    new-instance v45, Ljava/lang/RuntimeException;

    invoke-direct/range {v45 .. v45}, Ljava/lang/RuntimeException;-><init>()V

    .line 5523
    .local v45, "stack":Ljava/lang/RuntimeException;
    invoke-virtual/range {v45 .. v45}, Ljava/lang/RuntimeException;->fillInStackTrace()Ljava/lang/Throwable;

    .line 5524
    const-string v61, "WindowManager"

    new-instance v63, Ljava/lang/StringBuilder;

    invoke-direct/range {v63 .. v63}, Ljava/lang/StringBuilder;-><init>()V

    const-string v64, "Relayout "

    invoke-virtual/range {v63 .. v64}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v63

    move-object/from16 v0, v63

    move-object/from16 v1, v58

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v63

    const-string v64, ": oldVis="

    invoke-virtual/range {v63 .. v64}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v63

    move-object/from16 v0, v63

    move/from16 v1, v34

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v63

    const-string v64, " newVis="

    invoke-virtual/range {v63 .. v64}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v63

    move-object/from16 v0, v63

    move/from16 v1, p7

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v63

    invoke-virtual/range {v63 .. v63}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v63

    move-object/from16 v0, v61

    move-object/from16 v1, v63

    move-object/from16 v2, v45

    invoke-static {v0, v1, v2}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 5527
    .end local v45    # "stack":Ljava/lang/RuntimeException;
    :cond_6a9
    if-nez p7, :cond_c68

    move-object/from16 v0, v58

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    move-object/from16 v61, v0

    if-eqz v61, :cond_6c1

    move-object/from16 v0, v58

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    move-object/from16 v61, v0

    move-object/from16 v0, v61

    iget-boolean v0, v0, Lcom/android/server/wm/AppWindowToken;->clientHidden:Z

    move/from16 v61, v0

    if-nez v61, :cond_c68

    .line 5529
    :cond_6c1
    invoke-virtual/range {v58 .. v58}, Lcom/android/server/wm/WindowState;->isVisibleLw()Z

    move-result v61

    if-nez v61, :cond_bcf

    const/16 v54, 0x1

    .line 5530
    :goto_6c9
    move-object/from16 v0, v58

    iget-boolean v0, v0, Lcom/android/server/wm/WindowState;->mExiting:Z

    move/from16 v61, v0

    if-eqz v61, :cond_6dc

    .line 5531
    invoke-virtual/range {v59 .. v59}, Lcom/android/server/wm/WindowStateAnimator;->cancelExitAnimationForNextAnimationLocked()V

    .line 5532
    const/16 v61, 0x0

    move/from16 v0, v61

    move-object/from16 v1, v58

    iput-boolean v0, v1, Lcom/android/server/wm/WindowState;->mExiting:Z

    .line 5534
    :cond_6dc
    move-object/from16 v0, v58

    iget-boolean v0, v0, Lcom/android/server/wm/WindowState;->mDestroying:Z

    move/from16 v61, v0

    if-eqz v61, :cond_6f9

    .line 5535
    const/16 v61, 0x0

    move/from16 v0, v61

    move-object/from16 v1, v58

    iput-boolean v0, v1, Lcom/android/server/wm/WindowState;->mDestroying:Z

    .line 5536
    move-object/from16 v0, p0

    iget-object v0, v0, mDestroySurface:Ljava/util/ArrayList;

    move-object/from16 v61, v0

    move-object/from16 v0, v61

    move-object/from16 v1, v58

    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    .line 5538
    :cond_6f9
    const/16 v61, 0x8

    move/from16 v0, v34

    move/from16 v1, v61

    if-ne v0, v1, :cond_709

    .line 5539
    const/16 v61, 0x1

    move/from16 v0, v61

    move-object/from16 v1, v59

    iput-boolean v0, v1, Lcom/android/server/wm/WindowStateAnimator;->mEnterAnimationPending:Z

    .line 5541
    :cond_709
    const/16 v61, 0x1

    move/from16 v0, v61

    move-object/from16 v1, v59

    iput-boolean v0, v1, Lcom/android/server/wm/WindowStateAnimator;->mEnteringAnimation:Z

    .line 5542
    if-eqz v54, :cond_7f0

    .line 5543
    move-object/from16 v0, v58

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    move-object/from16 v61, v0

    move-object/from16 v0, v61

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->softInputMode:I

    move/from16 v61, v0

    move/from16 v0, v61

    and-int/lit16 v0, v0, 0xf0

    move/from16 v61, v0

    const/16 v63, 0x10

    move/from16 v0, v61

    move/from16 v1, v63

    if-ne v0, v1, :cond_735

    .line 5545
    const/16 v61, 0x1

    move/from16 v0, v61

    move-object/from16 v1, v58

    iput-boolean v0, v1, Lcom/android/server/wm/WindowState;->mLayoutNeeded:Z

    .line 5547
    :cond_735
    invoke-virtual/range {v58 .. v58}, Lcom/android/server/wm/WindowState;->isDrawnLw()Z

    move-result v61

    if-eqz v61, :cond_74c

    invoke-virtual/range {v58 .. v58}, Lcom/android/server/wm/WindowState;->getDisplayId()I

    move-result v61

    move-object/from16 v0, p0

    move/from16 v1, v61

    invoke-virtual {v0, v1}, okToDisplay(I)Z

    move-result v61

    if-eqz v61, :cond_74c

    .line 5548
    invoke-virtual/range {v59 .. v59}, Lcom/android/server/wm/WindowStateAnimator;->applyEnterAnimationLocked()V

    .line 5550
    :cond_74c
    move-object/from16 v0, v58

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    move-object/from16 v61, v0

    move-object/from16 v0, v61

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->flags:I

    move/from16 v61, v0

    const/high16 v63, 0x200000

    and-int v61, v61, v63

    if-eqz v61, :cond_78a

    .line 5552
    sget-boolean v61, DEBUG_VISIBILITY:Z

    if-eqz v61, :cond_782

    const-string v61, "WindowManager"

    new-instance v63, Ljava/lang/StringBuilder;

    invoke-direct/range {v63 .. v63}, Ljava/lang/StringBuilder;-><init>()V

    const-string v64, "Relayout window turning screen on: "

    invoke-virtual/range {v63 .. v64}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v63

    move-object/from16 v0, v63

    move-object/from16 v1, v58

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v63

    invoke-virtual/range {v63 .. v63}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v63

    move-object/from16 v0, v61

    move-object/from16 v1, v63

    invoke-static {v0, v1}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 5554
    :cond_782
    const/16 v61, 0x1

    move/from16 v0, v61

    move-object/from16 v1, v58

    iput-boolean v0, v1, Lcom/android/server/wm/WindowState;->mTurnOnScreen:Z

    .line 5556
    :cond_78a
    invoke-virtual/range {v58 .. v58}, Lcom/android/server/wm/WindowState;->isConfigChanged()Z

    move-result v61

    if-eqz v61, :cond_7f0

    .line 5565
    sget-boolean v61, DEBUG_CONFIGURATION:Z

    if-eqz v61, :cond_7c4

    const-string v61, "WindowManager"

    new-instance v63, Ljava/lang/StringBuilder;

    invoke-direct/range {v63 .. v63}, Ljava/lang/StringBuilder;-><init>()V

    const-string v64, "Window "

    invoke-virtual/range {v63 .. v64}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v63

    move-object/from16 v0, v63

    move-object/from16 v1, v58

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v63

    const-string v64, " visible with new config: "

    invoke-virtual/range {v63 .. v64}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v63

    move-object/from16 v0, p0

    iget-object v0, v0, mCurConfiguration:Landroid/content/res/Configuration;

    move-object/from16 v64, v0

    invoke-virtual/range {v63 .. v64}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v63

    invoke-virtual/range {v63 .. v63}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v63

    move-object/from16 v0, v61

    move-object/from16 v1, v63

    invoke-static {v0, v1}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 5567
    :cond_7c4
    move-object/from16 v0, p0

    iget-object v0, v0, mCurConfiguration:Landroid/content/res/Configuration;

    move-object/from16 v61, v0

    move-object/from16 v0, p15

    move-object/from16 v1, v61

    invoke-virtual {v0, v1}, Landroid/content/res/Configuration;->setTo(Landroid/content/res/Configuration;)V

    .line 5569
    invoke-virtual/range {v58 .. v58}, Lcom/android/server/wm/WindowState;->getMultiWindowStyleLw()Lcom/samsung/android/multiwindow/MultiWindowStyle;

    move-result-object v61

    invoke-virtual/range {v61 .. v61}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->isCascade()Z

    move-result v61

    if-eqz v61, :cond_7f0

    .line 5570
    new-instance v61, Landroid/content/res/Configuration;

    move-object/from16 v0, p0

    iget-object v0, v0, mCurConfiguration:Landroid/content/res/Configuration;

    move-object/from16 v63, v0

    move-object/from16 v0, v61

    move-object/from16 v1, v63

    invoke-direct {v0, v1}, Landroid/content/res/Configuration;-><init>(Landroid/content/res/Configuration;)V

    move-object/from16 v0, v61

    move-object/from16 v1, v58

    iput-object v0, v1, Lcom/android/server/wm/WindowState;->mLastRelayoutConfiguration:Landroid/content/res/Configuration;

    .line 5576
    :cond_7f0
    and-int/lit8 v61, v10, 0x8

    if-eqz v61, :cond_801

    .line 5579
    invoke-virtual/range {v59 .. v59}, Lcom/android/server/wm/WindowStateAnimator;->tryChangeFormatInPlaceLocked()Z

    move-result v61

    if-nez v61, :cond_801

    .line 5580
    invoke-virtual/range {v59 .. v59}, Lcom/android/server/wm/WindowStateAnimator;->destroySurfaceLocked()V
    :try_end_7fd
    .catchall {:try_start_126 .. :try_end_7fd} :catchall_120

    .line 5581
    const/16 v54, 0x1

    .line 5582
    const/16 v47, 0x1

    .line 5586
    :cond_801
    :try_start_801
    move-object/from16 v0, v58

    iget-boolean v0, v0, Lcom/android/server/wm/WindowState;->mHasSurface:Z

    move/from16 v61, v0

    if-nez v61, :cond_bd3

    .line 5587
    const/16 v47, 0x1

    .line 5595
    :cond_80b
    :goto_80b
    invoke-virtual/range {v59 .. v59}, Lcom/android/server/wm/WindowStateAnimator;->createSurfaceLocked()Landroid/view/SurfaceControl;

    move-result-object v48

    .line 5596
    .local v48, "surfaceControl":Landroid/view/SurfaceControl;
    if-eqz v48, :cond_c63

    .line 5597
    move-object/from16 v0, p16

    move-object/from16 v1, v48

    invoke-virtual {v0, v1}, Landroid/view/Surface;->copyFrom(Landroid/view/SurfaceControl;)V
    :try_end_818
    .catch Ljava/lang/Exception; {:try_start_801 .. :try_end_818} :catch_c0c
    .catchall {:try_start_801 .. :try_end_818} :catchall_120

    .line 5614
    :goto_818
    if-eqz v54, :cond_81c

    .line 5615
    move/from16 v18, v25

    .line 5617
    :cond_81c
    :try_start_81c
    move-object/from16 v0, v58

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    move-object/from16 v61, v0

    move-object/from16 v0, v61

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    move/from16 v61, v0

    const/16 v63, 0x7db

    move/from16 v0, v61

    move/from16 v1, v63

    if-ne v0, v1, :cond_840

    move-object/from16 v0, p0

    iget-object v0, v0, mInputMethodWindow:Lcom/android/server/wm/WindowState;

    move-object/from16 v61, v0

    if-nez v61, :cond_840

    .line 5619
    move-object/from16 v0, v58

    move-object/from16 v1, p0

    iput-object v0, v1, mInputMethodWindow:Lcom/android/server/wm/WindowState;

    .line 5620
    const/16 v23, 0x1

    .line 5630
    :cond_840
    move-object/from16 v0, v58

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    move-object/from16 v61, v0

    move-object/from16 v0, v61

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    move/from16 v61, v0

    const/16 v63, 0x1

    move/from16 v0, v61

    move/from16 v1, v63

    if-ne v0, v1, :cond_8a3

    move-object/from16 v0, v58

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    move-object/from16 v61, v0

    if-eqz v61, :cond_8a3

    move-object/from16 v0, v58

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    move-object/from16 v61, v0

    move-object/from16 v0, v61

    iget-object v0, v0, Lcom/android/server/wm/AppWindowToken;->startingWindow:Lcom/android/server/wm/WindowState;

    move-object/from16 v61, v0

    if-eqz v61, :cond_8a3

    .line 5636
    const v30, 0x480001

    .line 5640
    .local v30, "mask":I
    move-object/from16 v0, v58

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    move-object/from16 v61, v0

    move-object/from16 v0, v61

    iget-object v0, v0, Lcom/android/server/wm/AppWindowToken;->startingWindow:Lcom/android/server/wm/WindowState;

    move-object/from16 v61, v0

    move-object/from16 v0, v61

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    move-object/from16 v43, v0

    .line 5641
    .local v43, "sa":Landroid/view/WindowManager$LayoutParams;
    move-object/from16 v0, v43

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->flags:I

    move/from16 v61, v0

    const v63, -0x480002

    and-int v61, v61, v63

    move-object/from16 v0, v58

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    move-object/from16 v63, v0

    move-object/from16 v0, v63

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->flags:I

    move/from16 v63, v0

    const v64, 0x480001

    and-int v63, v63, v64

    or-int v61, v61, v63

    move/from16 v0, v61

    move-object/from16 v1, v43

    iput v0, v1, Landroid/view/WindowManager$LayoutParams;->flags:I

    .line 5644
    .end local v30    # "mask":I
    .end local v43    # "sa":Landroid/view/WindowManager$LayoutParams;
    :cond_8a3
    invoke-virtual/range {v58 .. v58}, Lcom/android/server/wm/WindowState;->getStack()Lcom/android/server/wm/TaskStack;

    move-result-object v45

    .line 5645
    .local v45, "stack":Lcom/android/server/wm/TaskStack;
    move-object/from16 v0, p0

    iget-object v0, v0, mTaskIdToTask:Landroid/util/SparseArray;

    move-object/from16 v61, v0

    invoke-virtual/range {v58 .. v58}, Lcom/android/server/wm/WindowState;->getGroupId()I

    move-result v63

    move-object/from16 v0, v61

    move/from16 v1, v63

    invoke-virtual {v0, v1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v50

    check-cast v50, Lcom/android/server/wm/Task;

    .line 5646
    .restart local v50    # "task":Lcom/android/server/wm/Task;
    if-eqz v50, :cond_8da

    if-eqz v45, :cond_8da

    move-object/from16 v0, v45

    iget-boolean v0, v0, Lcom/android/server/wm/TaskStack;->mPostFixedBound:Z

    move/from16 v61, v0

    if-eqz v61, :cond_8da

    .line 5647
    const/16 v61, 0x1

    move-object/from16 v0, v45

    move/from16 v1, v61

    move-object/from16 v2, v50

    invoke-virtual {v0, v1, v2}, Lcom/android/server/wm/TaskStack;->setWindowFlagFixedBoundInner(ZLcom/android/server/wm/Task;)V

    .line 5648
    const/16 v61, 0x0

    move/from16 v0, v61

    move-object/from16 v1, v45

    iput-boolean v0, v1, Lcom/android/server/wm/TaskStack;->mPostFixedBound:Z

    .line 5758
    .end local v45    # "stack":Lcom/android/server/wm/TaskStack;
    .end local v48    # "surfaceControl":Landroid/view/SurfaceControl;
    .end local v50    # "task":Lcom/android/server/wm/Task;
    :cond_8da
    :goto_8da
    const/4 v9, 0x0

    .line 5760
    .local v9, "assignLayers":Z
    const/16 v61, 0x0

    move-object/from16 v0, p0

    move/from16 v1, v61

    invoke-virtual {v0, v1}, moveMultiWindowCenterBarLocked(Z)Z

    move-result v61

    if-eqz v61, :cond_8e8

    .line 5761
    const/4 v9, 0x1

    .line 5766
    :cond_8e8
    if-eqz v18, :cond_8fc

    .line 5768
    const/16 v61, 0x3

    const/16 v63, 0x0

    move-object/from16 v0, p0

    move/from16 v1, v61

    move/from16 v2, v63

    invoke-direct {v0, v1, v2}, updateFocusedWindowLocked(IZ)Z

    move-result v61

    if-eqz v61, :cond_8fc

    .line 5770
    const/16 v23, 0x0

    .line 5777
    :cond_8fc
    if-eqz v23, :cond_917

    const/16 v61, 0x0

    move-object/from16 v0, p0

    move/from16 v1, v61

    invoke-virtual {v0, v1}, moveInputMethodWindowsIfNeededLocked(Z)Z

    move-result v61

    if-nez v61, :cond_90c

    if-eqz v54, :cond_917

    .line 5783
    :cond_90c
    invoke-virtual/range {v58 .. v58}, Lcom/android/server/wm/WindowState;->getWindowList()Lcom/android/server/wm/WindowList;

    move-result-object v61

    move-object/from16 v0, p0

    move-object/from16 v1, v61

    invoke-direct {v0, v1}, assignLayersLocked(Lcom/android/server/wm/WindowList;)V

    .line 5786
    :cond_917
    if-eqz v57, :cond_92b

    .line 5793
    invoke-virtual/range {p0 .. p0}, getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v61

    move-object/from16 v0, v61

    iget v0, v0, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    move/from16 v63, v0

    or-int/lit8 v63, v63, 0x4

    move/from16 v0, v63

    move-object/from16 v1, v61

    iput v0, v1, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    .line 5798
    :cond_92b
    invoke-virtual/range {v58 .. v58}, Lcom/android/server/wm/WindowState;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    move-result-object v14

    .line 5799
    .restart local v14    # "displayContent":Lcom/android/server/wm/DisplayContent;
    if-eqz v14, :cond_937

    .line 5800
    const/16 v61, 0x1

    move/from16 v0, v61

    iput-boolean v0, v14, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    .line 5802
    :cond_937
    and-int/lit8 v61, p8, 0x1

    if-eqz v61, :cond_de5

    const/16 v61, 0x1

    :goto_93d
    move/from16 v0, v61

    move-object/from16 v1, v58

    iput-boolean v0, v1, Lcom/android/server/wm/WindowState;->mGivenInsetsPending:Z

    .line 5805
    if-eqz v9, :cond_950

    .line 5806
    invoke-virtual/range {v58 .. v58}, Lcom/android/server/wm/WindowState;->getWindowList()Lcom/android/server/wm/WindowList;

    move-result-object v61

    move-object/from16 v0, p0

    move-object/from16 v1, v61

    invoke-direct {v0, v1}, assignLayersLocked(Lcom/android/server/wm/WindowList;)V

    .line 5810
    :cond_950
    const/16 v63, 0x0

    if-nez v14, :cond_de9

    const/16 v61, 0x0

    :goto_956
    move-object/from16 v0, p0

    move/from16 v1, v63

    move/from16 v2, v61

    invoke-virtual {v0, v1, v2}, updateOrientationFromAppTokensLocked(ZI)Z

    move-result v11

    .line 5812
    .local v11, "configChanged":Z
    invoke-direct/range {p0 .. p0}, performLayoutAndPlaceSurfacesLocked()V

    .line 5813
    if-eqz v54, :cond_988

    move-object/from16 v0, v58

    iget-boolean v0, v0, Lcom/android/server/wm/WindowState;->mIsWallpaper:Z

    move/from16 v61, v0

    if-eqz v61, :cond_988

    .line 5814
    invoke-virtual/range {p0 .. p0}, getDefaultDisplayInfoLocked()Landroid/view/DisplayInfo;

    move-result-object v15

    .line 5815
    .restart local v15    # "displayInfo":Landroid/view/DisplayInfo;
    iget v0, v15, Landroid/view/DisplayInfo;->logicalWidth:I

    move/from16 v61, v0

    iget v0, v15, Landroid/view/DisplayInfo;->logicalHeight:I

    move/from16 v63, v0

    const/16 v64, 0x0

    move-object/from16 v0, p0

    move-object/from16 v1, v58

    move/from16 v2, v61

    move/from16 v3, v63

    move/from16 v4, v64

    invoke-virtual {v0, v1, v2, v3, v4}, updateWallpaperOffsetLocked(Lcom/android/server/wm/WindowState;IIZ)Z

    .line 5818
    .end local v15    # "displayInfo":Landroid/view/DisplayInfo;
    :cond_988
    move-object/from16 v0, v58

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    move-object/from16 v61, v0

    if-eqz v61, :cond_999

    .line 5819
    move-object/from16 v0, v58

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    move-object/from16 v61, v0

    invoke-virtual/range {v61 .. v61}, Lcom/android/server/wm/AppWindowToken;->updateReportedVisibilityLocked()V

    .line 5821
    :cond_999
    move-object/from16 v0, v58

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mCompatFrame:Landroid/graphics/Rect;

    move-object/from16 v61, v0

    move-object/from16 v0, p9

    move-object/from16 v1, v61

    invoke-virtual {v0, v1}, Landroid/graphics/Rect;->set(Landroid/graphics/Rect;)V

    .line 5822
    move-object/from16 v0, v58

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mOverscanInsets:Landroid/graphics/Rect;

    move-object/from16 v61, v0

    move-object/from16 v0, p10

    move-object/from16 v1, v61

    invoke-virtual {v0, v1}, Landroid/graphics/Rect;->set(Landroid/graphics/Rect;)V

    .line 5823
    move-object/from16 v0, v58

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mContentInsets:Landroid/graphics/Rect;

    move-object/from16 v61, v0

    move-object/from16 v0, p11

    move-object/from16 v1, v61

    invoke-virtual {v0, v1}, Landroid/graphics/Rect;->set(Landroid/graphics/Rect;)V

    .line 5824
    move-object/from16 v0, v58

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mVisibleInsets:Landroid/graphics/Rect;

    move-object/from16 v61, v0

    move-object/from16 v0, p12

    move-object/from16 v1, v61

    invoke-virtual {v0, v1}, Landroid/graphics/Rect;->set(Landroid/graphics/Rect;)V

    .line 5825
    move-object/from16 v0, v58

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mStableInsets:Landroid/graphics/Rect;

    move-object/from16 v61, v0

    move-object/from16 v0, p13

    move-object/from16 v1, v61

    invoke-virtual {v0, v1}, Landroid/graphics/Rect;->set(Landroid/graphics/Rect;)V

    .line 5826
    move-object/from16 v0, v58

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mOutsets:Landroid/graphics/Rect;

    move-object/from16 v61, v0

    move-object/from16 v0, p14

    move-object/from16 v1, v61

    invoke-virtual {v0, v1}, Landroid/graphics/Rect;->set(Landroid/graphics/Rect;)V

    .line 5830
    const/16 v61, 0x0

    move-object/from16 v0, p0

    move-object/from16 v1, v58

    move/from16 v2, v61

    invoke-virtual {v0, v1, v2}, getCocktailBarFrame(Lcom/android/server/wm/WindowState;Z)Landroid/graphics/Rect;

    move-result-object v61

    move-object/from16 v0, p18

    move-object/from16 v1, v61

    invoke-virtual {v0, v1}, Landroid/graphics/Rect;->set(Landroid/graphics/Rect;)V

    .line 5841
    sget-boolean v61, DEBUG_FOCUS:Z

    if-eqz v61, :cond_a2c

    const-string v61, "WindowManager"

    new-instance v63, Ljava/lang/StringBuilder;

    invoke-direct/range {v63 .. v63}, Ljava/lang/StringBuilder;-><init>()V

    const-string v64, "Relayout of "

    invoke-virtual/range {v63 .. v64}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v63

    move-object/from16 v0, v63

    move-object/from16 v1, v58

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v63

    const-string v64, ": focusMayChange="

    invoke-virtual/range {v63 .. v64}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v63

    move-object/from16 v0, v63

    move/from16 v1, v18

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v63

    invoke-virtual/range {v63 .. v63}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v63

    move-object/from16 v0, v61

    move-object/from16 v1, v63

    invoke-static {v0, v1}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 5844
    :cond_a2c
    move-object/from16 v0, p0

    iget-boolean v0, v0, mInTouchMode:Z

    move/from16 v24, v0

    .line 5846
    .local v24, "inTouchMode":Z
    move-object/from16 v0, p0

    iget-object v0, v0, mInputMonitor:Lcom/android/server/wm/InputMonitor;

    move-object/from16 v61, v0

    const/16 v63, 0x1

    move-object/from16 v0, v61

    move/from16 v1, v63

    invoke-virtual {v0, v1}, Lcom/android/server/wm/InputMonitor;->updateInputWindowsLw(Z)V

    .line 5848
    sget-boolean v61, DEBUG_LAYOUT:Z

    if-eqz v61, :cond_a73

    .line 5849
    const-string v61, "WindowManager"

    new-instance v63, Ljava/lang/StringBuilder;

    invoke-direct/range {v63 .. v63}, Ljava/lang/StringBuilder;-><init>()V

    const-string v64, "Relayout complete "

    invoke-virtual/range {v63 .. v64}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v63

    move-object/from16 v0, v63

    move-object/from16 v1, v58

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v63

    const-string v64, ": outFrame="

    invoke-virtual/range {v63 .. v64}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v63

    invoke-virtual/range {p9 .. p9}, Landroid/graphics/Rect;->toShortString()Ljava/lang/String;

    move-result-object v64

    invoke-virtual/range {v63 .. v64}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v63

    invoke-virtual/range {v63 .. v63}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v63

    move-object/from16 v0, v61

    move-object/from16 v1, v63

    invoke-static {v0, v1}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 5851
    :cond_a73
    monitor-exit v62
    :try_end_a74
    .catchall {:try_start_81c .. :try_end_a74} :catchall_120

    .line 5853
    if-eqz v11, :cond_a79

    .line 5854
    invoke-virtual/range {p0 .. p0}, sendNewConfiguration()V

    .line 5857
    :cond_a79
    invoke-static/range {v38 .. v39}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 5859
    if-eqz v24, :cond_def

    const/16 v61, 0x1

    move/from16 v62, v61

    :goto_a82
    if-eqz v54, :cond_df5

    const/16 v61, 0x2

    :goto_a86
    or-int v62, v62, v61

    if-eqz v47, :cond_df9

    const/16 v61, 0x4

    :goto_a8c
    or-int v61, v61, v62

    goto/16 :goto_32

    .line 5320
    .end local v9    # "assignLayers":Z
    .end local v11    # "configChanged":Z
    .end local v14    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v18    # "focusMayChange":Z
    .end local v19    # "hScale":F
    .end local v23    # "imMayMove":Z
    .end local v24    # "inTouchMode":Z
    .end local v25    # "isDefaultDisplay":Z
    .end local v31    # "multiWindowStyle":Lcom/samsung/android/multiwindow/MultiWindowStyle;
    .end local v34    # "oldVisibility":I
    .end local v35    # "optionScale":Z
    .end local v44    # "scaledWindow":Z
    .end local v56    # "vScale":F
    .end local v57    # "wallpaperMayMove":Z
    :cond_a90
    const/16 v61, 0x0

    goto/16 :goto_2a2

    .line 5327
    :cond_a94
    const/16 v44, 0x0

    goto/16 :goto_2d0

    .line 5336
    .restart local v19    # "hScale":F
    .restart local v31    # "multiWindowStyle":Lcom/samsung/android/multiwindow/MultiWindowStyle;
    .restart local v35    # "optionScale":Z
    .restart local v44    # "scaledWindow":Z
    .restart local v56    # "vScale":F
    :cond_a98
    const/16 v35, 0x0

    goto/16 :goto_2f4

    .line 5350
    :cond_a9c
    const/16 v50, 0x0

    goto/16 :goto_34b

    .line 5351
    .restart local v50    # "task":Lcom/android/server/wm/Task;
    :cond_aa0
    const/4 v14, 0x0

    goto/16 :goto_35f

    .line 5369
    .restart local v14    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .restart local v36    # "orientation":I
    :cond_aa3
    :try_start_aa3
    invoke-virtual {v14}, Lcom/android/server/wm/DisplayContent;->getDisplayInfo()Landroid/view/DisplayInfo;

    move-result-object v15

    .restart local v15    # "displayInfo":Landroid/view/DisplayInfo;
    goto/16 :goto_395

    .line 5372
    :cond_aa9
    move-object/from16 v0, v58

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttachedWindow:Lcom/android/server/wm/WindowState;

    move-object/from16 v61, v0

    goto/16 :goto_3a5

    .line 5393
    .restart local v6    # "appHeight":I
    .restart local v7    # "appWidth":I
    .restart local v40    # "padding":Landroid/graphics/Rect;
    .restart local v46    # "stackBound":Landroid/graphics/Rect;
    .restart local v51    # "taskStack":Lcom/android/server/wm/TaskStack;
    :cond_ab1
    move-object/from16 v0, v58

    move-object/from16 v1, v46

    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowState;->getStackBounds(Landroid/graphics/Rect;)V

    goto/16 :goto_3ef

    .line 5404
    .restart local v26    # "isFixedRatio":Z
    .restart local v52    # "tempHeight":I
    .restart local v53    # "tempWidth":I
    :cond_aba
    invoke-virtual/range {v46 .. v46}, Landroid/graphics/Rect;->height()I

    move-result v61

    invoke-virtual/range {v46 .. v46}, Landroid/graphics/Rect;->width()I

    move-result v63

    move/from16 v0, v61

    move/from16 v1, v63

    invoke-static {v0, v1}, Ljava/lang/Math;->min(II)I

    move-result v53

    goto/16 :goto_425

    .line 5407
    :cond_acc
    invoke-virtual/range {v46 .. v46}, Landroid/graphics/Rect;->height()I

    move-result v61

    invoke-virtual/range {v46 .. v46}, Landroid/graphics/Rect;->width()I

    move-result v63

    move/from16 v0, v61

    move/from16 v1, v63

    invoke-static {v0, v1}, Ljava/lang/Math;->min(II)I

    move-result v52

    goto/16 :goto_443

    .line 5423
    .end local v6    # "appHeight":I
    .end local v7    # "appWidth":I
    .end local v14    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v15    # "displayInfo":Landroid/view/DisplayInfo;
    .end local v26    # "isFixedRatio":Z
    .end local v36    # "orientation":I
    .end local v40    # "padding":Landroid/graphics/Rect;
    .end local v46    # "stackBound":Landroid/graphics/Rect;
    .end local v50    # "task":Lcom/android/server/wm/Task;
    .end local v51    # "taskStack":Lcom/android/server/wm/TaskStack;
    .end local v52    # "tempHeight":I
    .end local v53    # "tempWidth":I
    :cond_ade
    move-object/from16 v0, v58

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    move-object/from16 v61, v0

    move-object/from16 v0, v61

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    move/from16 v61, v0

    const/16 v63, 0x7d5

    move/from16 v0, v61

    move/from16 v1, v63

    if-eq v0, v1, :cond_493

    .line 5424
    const/high16 v61, 0x3f800000    # 1.0f

    move/from16 v0, v61

    move-object/from16 v1, v58

    iput v0, v1, Lcom/android/server/wm/WindowState;->mFloatingAppVScale:F

    move/from16 v0, v61

    move-object/from16 v1, v58

    iput v0, v1, Lcom/android/server/wm/WindowState;->mFloatingAppHScale:F

    goto/16 :goto_493

    .line 5432
    :cond_b02
    const/high16 v61, 0x3f800000    # 1.0f

    goto/16 :goto_4b5

    .line 5434
    :cond_b06
    const/high16 v61, 0x3f800000    # 1.0f

    goto/16 :goto_4d9

    .line 5439
    :cond_b0a
    move-object/from16 v0, v58

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    move-object/from16 v61, v0

    move-object/from16 v0, v61

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    move/from16 v61, v0

    const/16 v63, 0x7d5

    move/from16 v0, v61

    move/from16 v1, v63

    if-eq v0, v1, :cond_4df

    .line 5440
    const/high16 v61, 0x3f800000    # 1.0f

    move/from16 v0, v61

    move-object/from16 v1, v58

    iput v0, v1, Lcom/android/server/wm/WindowState;->mVScale:F

    move/from16 v0, v61

    move-object/from16 v1, v58

    iput v0, v1, Lcom/android/server/wm/WindowState;->mHScale:F

    goto/16 :goto_4df

    .line 5455
    :cond_b2e
    move/from16 v0, v19

    move-object/from16 v1, v58

    iput v0, v1, Lcom/android/server/wm/WindowState;->mHScale:F

    .line 5456
    move/from16 v0, v56

    move-object/from16 v1, v58

    iput v0, v1, Lcom/android/server/wm/WindowState;->mVScale:F

    goto/16 :goto_4ff

    .line 5482
    .restart local v28    # "mDssHelper":Landroid/os/DssHelper;
    .restart local v37    # "packageName":[Ljava/lang/String;
    .restart local v42    # "runDss":Z
    :cond_b3c
    const/16 v21, 0x0

    .local v21, "i":I
    :goto_b3e
    move-object/from16 v0, v58

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mChildWindows:Lcom/android/server/wm/WindowList;

    move-object/from16 v61, v0

    invoke-virtual/range {v61 .. v61}, Lcom/android/server/wm/WindowList;->size()I

    move-result v61

    move/from16 v0, v21

    move/from16 v1, v61

    if-ge v0, v1, :cond_5c3

    .line 5483
    move-object/from16 v0, v58

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mChildWindows:Lcom/android/server/wm/WindowList;

    move-object/from16 v61, v0

    move-object/from16 v0, v61

    move/from16 v1, v21

    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v13

    check-cast v13, Lcom/android/server/wm/WindowState;

    .line 5484
    .local v13, "cwin":Lcom/android/server/wm/WindowState;
    iget-object v0, v13, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    move-object/from16 v61, v0

    invoke-virtual/range {v61 .. v61}, Landroid/view/WindowManager$LayoutParams;->getTitle()Ljava/lang/CharSequence;

    move-result-object v61

    if-eqz v61, :cond_b80

    iget-object v0, v13, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    move-object/from16 v61, v0

    invoke-virtual/range {v61 .. v61}, Landroid/view/WindowManager$LayoutParams;->getTitle()Ljava/lang/CharSequence;

    move-result-object v61

    const-string v63, "SurfaceView"

    move-object/from16 v0, v61

    move-object/from16 v1, v63

    invoke-virtual {v0, v1}, Ljava/lang/Object;->equals(Ljava/lang/Object;)Z

    move-result v61

    if-eqz v61, :cond_b80

    .line 5485
    const/16 v42, 0x1

    .line 5486
    goto/16 :goto_5c3

    .line 5482
    :cond_b80
    add-int/lit8 v21, v21, 0x1

    goto :goto_b3e

    .line 5491
    .end local v13    # "cwin":Lcom/android/server/wm/WindowState;
    .end local v21    # "i":I
    :cond_b83
    const/16 v61, 0x0

    move/from16 v0, v61

    move-object/from16 v1, v58

    iput-boolean v0, v1, Lcom/android/server/wm/WindowState;->mIsAdss:Z

    .line 5492
    const/16 v42, 0x1

    goto/16 :goto_5c3

    .line 5499
    .restart local v41    # "resolutionFactorf":F
    :cond_b8f
    move-object/from16 v0, v58

    iget v0, v0, Lcom/android/server/wm/WindowState;->mHScale:F

    move/from16 v61, v0

    const/high16 v63, 0x3f800000    # 1.0f

    div-float v63, v63, v41

    mul-float v61, v61, v63

    move/from16 v0, v61

    move-object/from16 v1, v58

    iput v0, v1, Lcom/android/server/wm/WindowState;->mHScale:F

    .line 5500
    move-object/from16 v0, v58

    iget v0, v0, Lcom/android/server/wm/WindowState;->mVScale:F

    move/from16 v61, v0

    const/high16 v63, 0x3f800000    # 1.0f

    div-float v63, v63, v41

    mul-float v61, v61, v63

    move/from16 v0, v61

    move-object/from16 v1, v58

    iput v0, v1, Lcom/android/server/wm/WindowState;->mVScale:F

    .line 5501
    const/high16 v61, 0x3f800000    # 1.0f

    div-float v61, v61, v41

    move/from16 v0, v61

    move-object/from16 v1, v58

    iput v0, v1, Lcom/android/server/wm/WindowState;->mDssScale:F
    :try_end_bbd
    .catchall {:try_start_aa3 .. :try_end_bbd} :catchall_120

    goto/16 :goto_5f8

    .line 5507
    .end local v28    # "mDssHelper":Landroid/os/DssHelper;
    .end local v37    # "packageName":[Ljava/lang/String;
    .end local v41    # "resolutionFactorf":F
    .end local v42    # "runDss":Z
    :cond_bbf
    const/16 v23, 0x0

    goto/16 :goto_601

    .line 5510
    .restart local v23    # "imMayMove":Z
    .restart local v25    # "isDefaultDisplay":Z
    :cond_bc3
    const/16 v18, 0x0

    goto/16 :goto_621

    .line 5514
    .restart local v18    # "focusMayChange":Z
    :cond_bc7
    const/16 v57, 0x0

    goto/16 :goto_641

    .line 5516
    .restart local v57    # "wallpaperMayMove":Z
    :cond_bcb
    const/16 v61, 0x0

    goto/16 :goto_649

    .line 5529
    .restart local v34    # "oldVisibility":I
    :cond_bcf
    const/16 v54, 0x0

    goto/16 :goto_6c9

    .line 5590
    :cond_bd3
    :try_start_bd3
    move-object/from16 v0, v58

    iget v0, v0, Lcom/android/server/wm/WindowState;->mOwnerUid:I

    move/from16 v61, v0

    invoke-static/range {v61 .. v61}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v61

    move-object/from16 v0, p0

    move/from16 v1, v61

    invoke-virtual {v0, v1}, isScreenCaptureDisabledLocked(I)Z

    move-result v61

    if-nez v61, :cond_80b

    .line 5591
    move-object/from16 v0, v58

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    move-object/from16 v63, v0

    move-object/from16 v0, v58

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    move-object/from16 v61, v0

    move-object/from16 v0, v61

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->flags:I

    move/from16 v61, v0

    move/from16 v0, v61

    and-int/lit16 v0, v0, 0x2000

    move/from16 v61, v0

    if-eqz v61, :cond_c60

    const/16 v61, 0x1

    :goto_c03
    move-object/from16 v0, v63

    move/from16 v1, v61

    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowStateAnimator;->setSecureLocked(Z)V
    :try_end_c0a
    .catch Ljava/lang/Exception; {:try_start_bd3 .. :try_end_c0a} :catch_c0c
    .catchall {:try_start_bd3 .. :try_end_c0a} :catchall_120

    goto/16 :goto_80b

    .line 5605
    :catch_c0c
    move-exception v16

    .line 5606
    .local v16, "e":Ljava/lang/Exception;
    :try_start_c0d
    move-object/from16 v0, p0

    iget-object v0, v0, mInputMonitor:Lcom/android/server/wm/InputMonitor;

    move-object/from16 v61, v0

    const/16 v63, 0x1

    move-object/from16 v0, v61

    move/from16 v1, v63

    invoke-virtual {v0, v1}, Lcom/android/server/wm/InputMonitor;->updateInputWindowsLw(Z)V

    .line 5608
    const-string v61, "WindowManager"

    new-instance v63, Ljava/lang/StringBuilder;

    invoke-direct/range {v63 .. v63}, Ljava/lang/StringBuilder;-><init>()V

    const-string v64, "Exception thrown when creating surface for client "

    invoke-virtual/range {v63 .. v64}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v63

    move-object/from16 v0, v63

    move-object/from16 v1, p2

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v63

    const-string v64, " ("

    invoke-virtual/range {v63 .. v64}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v63

    move-object/from16 v0, v58

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    move-object/from16 v64, v0

    invoke-virtual/range {v64 .. v64}, Landroid/view/WindowManager$LayoutParams;->getTitle()Ljava/lang/CharSequence;

    move-result-object v64

    invoke-virtual/range {v63 .. v64}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v63

    const-string v64, ")"

    invoke-virtual/range {v63 .. v64}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v63

    invoke-virtual/range {v63 .. v63}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v63

    move-object/from16 v0, v61

    move-object/from16 v1, v63

    move-object/from16 v2, v16

    invoke-static {v0, v1, v2}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 5611
    invoke-static/range {v38 .. v39}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 5612
    const/16 v61, 0x0

    monitor-exit v62
    :try_end_c5e
    .catchall {:try_start_c0d .. :try_end_c5e} :catchall_120

    goto/16 :goto_32

    .line 5591
    .end local v16    # "e":Ljava/lang/Exception;
    :cond_c60
    const/16 v61, 0x0

    goto :goto_c03

    .line 5603
    .restart local v48    # "surfaceControl":Landroid/view/SurfaceControl;
    :cond_c63
    :try_start_c63
    invoke-virtual/range {p16 .. p16}, Landroid/view/Surface;->release()V
    :try_end_c66
    .catch Ljava/lang/Exception; {:try_start_c63 .. :try_end_c66} :catch_c0c
    .catchall {:try_start_c63 .. :try_end_c66} :catchall_120

    goto/16 :goto_818

    .line 5652
    .end local v48    # "surfaceControl":Landroid/view/SurfaceControl;
    :cond_c68
    const/16 v61, 0x0

    :try_start_c6a
    move/from16 v0, v61

    move-object/from16 v1, v59

    iput-boolean v0, v1, Lcom/android/server/wm/WindowStateAnimator;->mEnterAnimationPending:Z

    .line 5653
    const/16 v61, 0x0

    move/from16 v0, v61

    move-object/from16 v1, v59

    iput-boolean v0, v1, Lcom/android/server/wm/WindowStateAnimator;->mEnteringAnimation:Z

    .line 5654
    move-object/from16 v0, v59

    iget-object v0, v0, Lcom/android/server/wm/WindowStateAnimator;->mSurfaceControl:Landroid/view/SurfaceControl;

    move-object/from16 v61, v0

    if-eqz v61, :cond_d1d

    .line 5655
    sget-boolean v61, DEBUG_VISIBILITY:Z

    if-nez v61, :cond_c88

    sget-boolean v61, SAFE_DEBUG:Z

    if-eqz v61, :cond_cb8

    :cond_c88
    const-string v61, "WindowManager"

    new-instance v63, Ljava/lang/StringBuilder;

    invoke-direct/range {v63 .. v63}, Ljava/lang/StringBuilder;-><init>()V

    const-string v64, "Relayout invis "

    invoke-virtual/range {v63 .. v64}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v63

    move-object/from16 v0, v63

    move-object/from16 v1, v58

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v63

    const-string v64, ": mExiting="

    invoke-virtual/range {v63 .. v64}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v63

    move-object/from16 v0, v58

    iget-boolean v0, v0, Lcom/android/server/wm/WindowState;->mExiting:Z

    move/from16 v64, v0

    invoke-virtual/range {v63 .. v64}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v63

    invoke-virtual/range {v63 .. v63}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v63

    move-object/from16 v0, v61

    move-object/from16 v1, v63

    invoke-static {v0, v1}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 5659
    :cond_cb8
    move-object/from16 v0, v58

    iget-boolean v0, v0, Lcom/android/server/wm/WindowState;->mExiting:Z

    move/from16 v61, v0

    if-nez v61, :cond_d1d

    .line 5660
    const/16 v47, 0x1

    .line 5663
    const/16 v55, 0x2

    .line 5665
    .local v55, "transit":I
    const/16 v27, 0x0

    .line 5667
    .local v27, "isVisible":Z
    move-object/from16 v0, v58

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    move-object/from16 v61, v0

    move-object/from16 v0, v61

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    move/from16 v61, v0

    const/16 v63, 0x3

    move/from16 v0, v61

    move/from16 v1, v63

    if-ne v0, v1, :cond_d52

    .line 5668
    const/16 v55, 0x5

    .line 5670
    invoke-virtual/range {v58 .. v58}, Lcom/android/server/wm/WindowState;->isWinVisibleLw()Z

    move-result v27

    .line 5689
    :goto_ce0
    move-object/from16 v0, p0

    iget-object v0, v0, mWallpaperTarget:Lcom/android/server/wm/WindowState;

    move-object/from16 v29, v0

    .line 5693
    .local v29, "mWallpaperTarget":Lcom/android/server/wm/WindowState;
    if-eqz v27, :cond_d57

    const/16 v61, 0x0

    move-object/from16 v0, v59

    move/from16 v1, v55

    move/from16 v2, v61

    invoke-virtual {v0, v1, v2}, Lcom/android/server/wm/WindowStateAnimator;->applyAnimationLocked(IZ)Z

    move-result v61

    if-eqz v61, :cond_d57

    .line 5695
    move/from16 v18, v25

    .line 5696
    const/16 v61, 0x1

    move/from16 v0, v61

    move-object/from16 v1, v58

    iput-boolean v0, v1, Lcom/android/server/wm/WindowState;->mExiting:Z

    .line 5727
    :goto_d00
    move-object/from16 v0, p0

    iget-object v0, v0, mAccessibilityController:Lcom/android/server/wm/AccessibilityController;

    move-object/from16 v61, v0

    if-eqz v61, :cond_d1d

    invoke-virtual/range {v58 .. v58}, Lcom/android/server/wm/WindowState;->getDisplayId()I

    move-result v61

    if-nez v61, :cond_d1d

    .line 5729
    move-object/from16 v0, p0

    iget-object v0, v0, mAccessibilityController:Lcom/android/server/wm/AccessibilityController;

    move-object/from16 v61, v0

    move-object/from16 v0, v61

    move-object/from16 v1, v58

    move/from16 v2, v55

    invoke-virtual {v0, v1, v2}, Lcom/android/server/wm/AccessibilityController;->onWindowTransitionLocked(Lcom/android/server/wm/WindowState;I)V

    .line 5736
    .end local v27    # "isVisible":Z
    .end local v29    # "mWallpaperTarget":Lcom/android/server/wm/WindowState;
    .end local v55    # "transit":I
    :cond_d1d
    move-object/from16 v0, v58

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    move-object/from16 v61, v0

    move-object/from16 v0, v61

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->samsungFlags:I

    move/from16 v61, v0

    move/from16 v0, v61

    and-int/lit16 v0, v0, 0x1000

    move/from16 v61, v0

    if-eqz v61, :cond_dbc

    move-object/from16 v0, v59

    iget-boolean v0, v0, Lcom/android/server/wm/WindowStateAnimator;->mSurfaceDestroyDeferred:Z

    move/from16 v61, v0

    if-eqz v61, :cond_dbc

    .line 5738
    move-object/from16 v0, v59

    iget-object v0, v0, Lcom/android/server/wm/WindowStateAnimator;->mSurfaceControl:Landroid/view/SurfaceControl;

    move-object/from16 v48, v0

    .line 5739
    .restart local v48    # "surfaceControl":Landroid/view/SurfaceControl;
    if-nez v48, :cond_d47

    .line 5740
    move-object/from16 v0, v59

    iget-object v0, v0, Lcom/android/server/wm/WindowStateAnimator;->mPendingDestroySurface:Landroid/view/SurfaceControl;

    move-object/from16 v48, v0

    .line 5742
    :cond_d47
    if-eqz v48, :cond_db7

    .line 5743
    move-object/from16 v0, p16

    move-object/from16 v1, v48

    invoke-virtual {v0, v1}, Landroid/view/Surface;->copyFrom(Landroid/view/SurfaceControl;)V

    goto/16 :goto_8da

    .line 5679
    .end local v48    # "surfaceControl":Landroid/view/SurfaceControl;
    .restart local v27    # "isVisible":Z
    .restart local v55    # "transit":I
    :cond_d52
    invoke-virtual/range {v58 .. v58}, Lcom/android/server/wm/WindowState;->isVisibleLw()Z

    move-result v27

    goto :goto_ce0

    .line 5697
    .restart local v29    # "mWallpaperTarget":Lcom/android/server/wm/WindowState;
    :cond_d57
    move-object/from16 v0, v58

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    move-object/from16 v61, v0

    invoke-virtual/range {v61 .. v61}, Lcom/android/server/wm/WindowStateAnimator;->isAnimating()Z

    move-result v61

    if-eqz v61, :cond_d6c

    .line 5700
    const/16 v61, 0x1

    move/from16 v0, v61

    move-object/from16 v1, v58

    iput-boolean v0, v1, Lcom/android/server/wm/WindowState;->mExiting:Z

    goto :goto_d00

    .line 5701
    :cond_d6c
    move-object/from16 v0, v58

    move-object/from16 v1, v29

    if-ne v0, v1, :cond_d8a

    .line 5705
    const/16 v61, 0x1

    move/from16 v0, v61

    move-object/from16 v1, v58

    iput-boolean v0, v1, Lcom/android/server/wm/WindowState;->mExiting:Z

    .line 5706
    move-object/from16 v0, v58

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    move-object/from16 v61, v0

    const/16 v63, 0x1

    move/from16 v0, v63

    move-object/from16 v1, v61

    iput-boolean v0, v1, Lcom/android/server/wm/WindowStateAnimator;->mAnimating:Z

    goto/16 :goto_d00

    .line 5708
    :cond_d8a
    move-object/from16 v0, p0

    iget-object v0, v0, mInputMethodWindow:Lcom/android/server/wm/WindowState;

    move-object/from16 v61, v0

    move-object/from16 v0, v61

    move-object/from16 v1, v58

    if-ne v0, v1, :cond_db2

    .line 5709
    const/16 v61, 0x0

    move-object/from16 v0, v61

    move-object/from16 v1, p0

    iput-object v0, v1, mInputMethodWindow:Lcom/android/server/wm/WindowState;

    .line 5711
    sget-boolean v61, DUALSCREEN_DEBUG_INPUT_METHOD:Z

    if-eqz v61, :cond_db2

    .line 5712
    move-object/from16 v0, p0

    iget-object v0, v0, mDualScreenInputMethodManager:Lcom/android/server/wm/DualScreenInputMethodManager;

    move-object/from16 v61, v0

    const-string/jumbo v63, "relayout SIP hides"

    move-object/from16 v0, v61

    move-object/from16 v1, v63

    invoke-virtual {v0, v1}, Lcom/android/server/wm/DualScreenInputMethodManager;->printDebugInfo(Ljava/lang/String;)V

    .line 5716
    :cond_db2
    invoke-virtual/range {v59 .. v59}, Lcom/android/server/wm/WindowStateAnimator;->destroySurfaceLocked()V

    goto/16 :goto_d00

    .line 5748
    .end local v27    # "isVisible":Z
    .end local v29    # "mWallpaperTarget":Lcom/android/server/wm/WindowState;
    .end local v55    # "transit":I
    .restart local v48    # "surfaceControl":Landroid/view/SurfaceControl;
    :cond_db7
    invoke-virtual/range {p16 .. p16}, Landroid/view/Surface;->release()V

    goto/16 :goto_8da

    .line 5752
    .end local v48    # "surfaceControl":Landroid/view/SurfaceControl;
    :cond_dbc
    invoke-virtual/range {p16 .. p16}, Landroid/view/Surface;->release()V

    .line 5753
    sget-boolean v61, DEBUG_VISIBILITY:Z

    if-eqz v61, :cond_8da

    const-string v61, "WindowManager"

    new-instance v63, Ljava/lang/StringBuilder;

    invoke-direct/range {v63 .. v63}, Ljava/lang/StringBuilder;-><init>()V

    const-string v64, "Releasing surface in: "

    invoke-virtual/range {v63 .. v64}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v63

    move-object/from16 v0, v63

    move-object/from16 v1, v58

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v63

    invoke-virtual/range {v63 .. v63}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v63

    move-object/from16 v0, v61

    move-object/from16 v1, v63

    invoke-static {v0, v1}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    goto/16 :goto_8da

    .line 5802
    .restart local v9    # "assignLayers":Z
    .restart local v14    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :cond_de5
    const/16 v61, 0x0

    goto/16 :goto_93d

    .line 5810
    :cond_de9
    invoke-virtual {v14}, Lcom/android/server/wm/DisplayContent;->getDisplayId()I
    :try_end_dec
    .catchall {:try_start_c6a .. :try_end_dec} :catchall_120

    move-result v61

    goto/16 :goto_956

    .line 5859
    .restart local v11    # "configChanged":Z
    .restart local v24    # "inTouchMode":Z
    :cond_def
    const/16 v61, 0x0

    move/from16 v62, v61

    goto/16 :goto_a82

    :cond_df5
    const/16 v61, 0x0

    goto/16 :goto_a86

    :cond_df9
    const/16 v61, 0x0

    goto/16 :goto_a8c
.end method

.method public removeAdaptiveEvent(Ljava/lang/String;)V
    .registers 3
    .param p1, "requestClass"    # Ljava/lang/String;

    .prologue
    .line 9943
    iget-object v0, p0, mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v0, p1}, Landroid/view/WindowManagerPolicy;->removeAdaptiveEvent(Ljava/lang/String;)V

    .line 9944
    return-void
.end method

.method public removeAppBackWindow()Z
    .registers 6

    .prologue
    const/16 v4, 0xcb

    const/4 v0, 0x1

    .line 23214
    iget-object v1, p0, mBackWindowView:Landroid/view/View;

    if-eqz v1, :cond_1f

    .line 23215
    iget-object v1, p0, mH:Lcom/android/server/wm/WindowManagerService$H;

    invoke-virtual {v1, v4}, Lcom/android/server/wm/WindowManagerService$H;->hasMessages(I)Z

    move-result v1

    if-eqz v1, :cond_10

    .line 23223
    :goto_f
    return v0

    .line 23219
    :cond_10
    iget-object v1, p0, mH:Lcom/android/server/wm/WindowManagerService$H;

    const/16 v2, 0xcc

    invoke-virtual {v1, v2}, Lcom/android/server/wm/WindowManagerService$H;->removeMessages(I)V

    .line 23220
    iget-object v1, p0, mH:Lcom/android/server/wm/WindowManagerService$H;

    const-wide/16 v2, 0x1f4

    invoke-virtual {v1, v4, v2, v3}, Lcom/android/server/wm/WindowManagerService$H;->sendEmptyMessageDelayed(IJ)Z

    goto :goto_f

    .line 23223
    :cond_1f
    const/4 v0, 0x0

    goto :goto_f
.end method

.method public removeAppStartingWindow(Landroid/os/IBinder;)V
    .registers 5
    .param p1, "token"    # Landroid/os/IBinder;

    .prologue
    .line 8253
    iget-object v2, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v2

    .line 8254
    :try_start_3
    iget-object v1, p0, mTokenMap:Ljava/util/HashMap;

    invoke-virtual {v1, p1}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/wm/WindowToken;

    iget-object v0, v1, Lcom/android/server/wm/WindowToken;->appWindowToken:Lcom/android/server/wm/AppWindowToken;

    .line 8255
    .local v0, "wtoken":Lcom/android/server/wm/AppWindowToken;
    iget-object v1, v0, Lcom/android/server/wm/AppWindowToken;->startingWindow:Lcom/android/server/wm/WindowState;

    if-eqz v1, :cond_14

    .line 8256
    invoke-virtual {p0, v0}, scheduleRemoveStartingWindowLocked(Lcom/android/server/wm/AppWindowToken;)V

    .line 8258
    :cond_14
    monitor-exit v2

    .line 8259
    return-void

    .line 8258
    .end local v0    # "wtoken":Lcom/android/server/wm/AppWindowToken;
    :catchall_16
    move-exception v1

    monitor-exit v2
    :try_end_18
    .catchall {:try_start_3 .. :try_end_18} :catchall_16

    throw v1
.end method

.method public removeAppToken(Landroid/os/IBinder;)V
    .registers 21
    .param p1, "token"    # Landroid/os/IBinder;

    .prologue
    .line 8833
    const-string v2, "android.permission.MANAGE_APP_TOKENS"

    const-string/jumbo v4, "removeAppToken()"

    move-object/from16 v0, p0

    invoke-virtual {v0, v2, v4}, checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v2

    if-nez v2, :cond_15

    .line 8835
    new-instance v2, Ljava/lang/SecurityException;

    const-string v4, "Requires MANAGE_APP_TOKENS permission"

    invoke-direct {v2, v4}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v2

    .line 8838
    :cond_15
    const/4 v3, 0x0

    .line 8839
    .local v3, "wtoken":Lcom/android/server/wm/AppWindowToken;
    const/16 v17, 0x0

    .line 8840
    .local v17, "startingToken":Lcom/android/server/wm/AppWindowToken;
    const/4 v10, 0x0

    .line 8842
    .local v10, "delayed":Z
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v14

    .line 8843
    .local v14, "origId":J
    move-object/from16 v0, p0

    iget-object v0, v0, mWindowMap:Ljava/util/HashMap;

    move-object/from16 v18, v0

    monitor-enter v18

    .line 8844
    :try_start_24
    move-object/from16 v0, p0

    iget-object v2, v0, mTokenMap:Ljava/util/HashMap;

    move-object/from16 v0, p1

    invoke-virtual {v2, v0}, Ljava/util/HashMap;->remove(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v9

    check-cast v9, Lcom/android/server/wm/WindowToken;

    .line 8845
    .local v9, "basewtoken":Lcom/android/server/wm/WindowToken;
    if-eqz v9, :cond_1a7

    iget-object v3, v9, Lcom/android/server/wm/WindowToken;->appWindowToken:Lcom/android/server/wm/AppWindowToken;

    if-eqz v3, :cond_1a7

    .line 8872
    move-object/from16 v0, p0

    iget-object v11, v0, mAppTransition:Lcom/android/server/wm/AppTransition;

    .line 8873
    .local v11, "mAppTransition":Lcom/android/server/wm/AppTransition;
    move-object/from16 v0, p0

    iget-object v13, v0, mOpeningApps:Landroid/util/ArraySet;

    .line 8874
    .local v13, "mOpeningApps":Landroid/util/ArraySet;, "Landroid/util/ArraySet<Lcom/android/server/wm/AppWindowToken;>;"
    move-object/from16 v0, p0

    iget-object v12, v0, mClosingApps:Landroid/util/ArraySet;

    .line 8877
    .local v12, "mClosingApps":Landroid/util/ArraySet;, "Landroid/util/ArraySet<Lcom/android/server/wm/AppWindowToken;>;"
    sget-boolean v2, DEBUG_APP_TRANSITIONS:Z

    if-eqz v2, :cond_5e

    const-string v2, "WindowManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Removing app token: "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v2, v4}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 8878
    :cond_5e
    const/4 v4, 0x0

    const/4 v5, 0x0

    const/4 v6, -0x1

    const/4 v7, 0x1

    iget-boolean v8, v3, Lcom/android/server/wm/AppWindowToken;->voiceInteraction:Z

    move-object/from16 v2, p0

    invoke-virtual/range {v2 .. v8}, setTokenVisibilityLocked(Lcom/android/server/wm/AppWindowToken;Landroid/view/WindowManager$LayoutParams;ZIZZ)Z

    move-result v10

    .line 8880
    const/4 v2, 0x0

    iput-boolean v2, v3, Lcom/android/server/wm/AppWindowToken;->inPendingTransaction:Z

    .line 8881
    invoke-virtual {v13, v3}, Landroid/util/ArraySet;->remove(Ljava/lang/Object;)Z

    .line 8882
    const/4 v2, 0x0

    iput-boolean v2, v3, Lcom/android/server/wm/AppWindowToken;->waitingToShow:Z

    .line 8883
    invoke-virtual {v12, v3}, Landroid/util/ArraySet;->contains(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_18a

    .line 8884
    const/4 v10, 0x1

    .line 8889
    :cond_7a
    :goto_7a
    sget-boolean v2, DEBUG_APP_TRANSITIONS:Z

    if-eqz v2, :cond_bc

    const-string v2, "WindowManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Removing app "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, " delayed="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4, v10}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, " animation="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    iget-object v5, v3, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    iget-object v5, v5, Lcom/android/server/wm/AppWindowAnimator;->animation:Landroid/view/animation/Animation;

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, " animating="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    iget-object v5, v3, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    iget-boolean v5, v5, Lcom/android/server/wm/AppWindowAnimator;->animating:Z

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v2, v4}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 8893
    :cond_bc
    sget-boolean v2, DEBUG_ADD_REMOVE:Z

    if-nez v2, :cond_c4

    sget-boolean v2, DEBUG_TOKEN_MOVEMENT:Z

    if-eqz v2, :cond_f6

    :cond_c4
    const-string v2, "WindowManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v5, "removeAppToken: "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, " delayed="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4, v10}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, " Callers="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    const/4 v5, 0x4

    invoke-static {v5}, Landroid/os/Debug;->getCallers(I)Ljava/lang/String;

    move-result-object v5

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v2, v4}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 8895
    :cond_f6
    iget-object v2, v3, Lcom/android/server/wm/AppWindowToken;->mTask:Lcom/android/server/wm/Task;

    iget-object v0, v2, Lcom/android/server/wm/Task;->mStack:Lcom/android/server/wm/TaskStack;

    move-object/from16 v16, v0

    .line 8896
    .local v16, "stack":Lcom/android/server/wm/TaskStack;
    if-eqz v10, :cond_196

    iget-object v2, v3, Lcom/android/server/wm/AppWindowToken;->allAppWindows:Lcom/android/server/wm/WindowList;

    invoke-virtual {v2}, Lcom/android/server/wm/WindowList;->isEmpty()Z

    move-result v2

    if-nez v2, :cond_196

    .line 8898
    sget-boolean v2, DEBUG_ADD_REMOVE:Z

    if-nez v2, :cond_10e

    sget-boolean v2, DEBUG_TOKEN_MOVEMENT:Z

    if-eqz v2, :cond_127

    :cond_10e
    const-string v2, "WindowManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v5, "removeAppToken make exiting: "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v2, v4}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 8900
    :cond_127
    move-object/from16 v0, v16

    iget-object v2, v0, Lcom/android/server/wm/TaskStack;->mExitingAppTokens:Lcom/android/server/wm/AppTokenList;

    invoke-virtual {v2, v3}, Lcom/android/server/wm/AppTokenList;->add(Ljava/lang/Object;)Z

    .line 8901
    const/4 v2, 0x1

    iput-boolean v2, v3, Lcom/android/server/wm/AppWindowToken;->mIsExiting:Z

    .line 8911
    :goto_131
    const/4 v2, 0x1

    iput-boolean v2, v3, Lcom/android/server/wm/AppWindowToken;->removed:Z

    .line 8912
    iget-object v2, v3, Lcom/android/server/wm/AppWindowToken;->startingData:Lcom/android/server/wm/StartingData;

    if-eqz v2, :cond_13a

    .line 8913
    move-object/from16 v17, v3

    .line 8915
    :cond_13a
    const/4 v2, 0x1

    const/4 v4, 0x1

    move-object/from16 v0, p0

    invoke-virtual {v0, v3, v2, v4}, unsetAppFreezingScreenLocked(Lcom/android/server/wm/AppWindowToken;ZZ)V

    .line 8916
    move-object/from16 v0, p0

    iget-object v2, v0, mFocusedApp:Lcom/android/server/wm/AppWindowToken;

    if-ne v2, v3, :cond_177

    .line 8917
    sget-boolean v2, DEBUG_FOCUS_LIGHT:Z

    if-eqz v2, :cond_163

    const-string v2, "WindowManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Removing focused app token:"

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v2, v4}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 8918
    :cond_163
    const/4 v2, 0x0

    move-object/from16 v0, p0

    iput-object v2, v0, mFocusedApp:Lcom/android/server/wm/AppWindowToken;

    .line 8919
    const/4 v2, 0x0

    const/4 v4, 0x1

    move-object/from16 v0, p0

    invoke-direct {v0, v2, v4}, updateFocusedWindowLocked(IZ)Z

    .line 8920
    move-object/from16 v0, p0

    iget-object v2, v0, mInputMonitor:Lcom/android/server/wm/InputMonitor;

    const/4 v4, 0x0

    invoke-virtual {v2, v4}, Lcom/android/server/wm/InputMonitor;->setFocusedAppLw(Lcom/android/server/wm/AppWindowToken;)V

    .line 8926
    .end local v11    # "mAppTransition":Lcom/android/server/wm/AppTransition;
    .end local v12    # "mClosingApps":Landroid/util/ArraySet;, "Landroid/util/ArraySet<Lcom/android/server/wm/AppWindowToken;>;"
    .end local v13    # "mOpeningApps":Landroid/util/ArraySet;, "Landroid/util/ArraySet<Lcom/android/server/wm/AppWindowToken;>;"
    .end local v16    # "stack":Lcom/android/server/wm/TaskStack;
    :cond_177
    :goto_177
    if-nez v10, :cond_17e

    if-eqz v3, :cond_17e

    .line 8927
    invoke-virtual {v3}, Lcom/android/server/wm/AppWindowToken;->updateReportedVisibilityLocked()V

    .line 8931
    :cond_17e
    move-object/from16 v0, p0

    move-object/from16 v1, v17

    invoke-virtual {v0, v1}, scheduleRemoveStartingWindowLocked(Lcom/android/server/wm/AppWindowToken;)V

    .line 8932
    monitor-exit v18
    :try_end_186
    .catchall {:try_start_24 .. :try_end_186} :catchall_1a4

    .line 8933
    invoke-static {v14, v15}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 8935
    return-void

    .line 8885
    .restart local v11    # "mAppTransition":Lcom/android/server/wm/AppTransition;
    .restart local v12    # "mClosingApps":Landroid/util/ArraySet;, "Landroid/util/ArraySet<Lcom/android/server/wm/AppWindowToken;>;"
    .restart local v13    # "mOpeningApps":Landroid/util/ArraySet;, "Landroid/util/ArraySet<Lcom/android/server/wm/AppWindowToken;>;"
    :cond_18a
    :try_start_18a
    invoke-virtual {v11}, Lcom/android/server/wm/AppTransition;->isTransitionSet()Z

    move-result v2

    if-eqz v2, :cond_7a

    .line 8886
    invoke-virtual {v12, v3}, Landroid/util/ArraySet;->add(Ljava/lang/Object;)Z

    .line 8887
    const/4 v10, 0x1

    goto/16 :goto_7a

    .line 8906
    .restart local v16    # "stack":Lcom/android/server/wm/TaskStack;
    :cond_196
    iget-object v2, v3, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    invoke-virtual {v2}, Lcom/android/server/wm/AppWindowAnimator;->clearAnimation()V

    .line 8907
    iget-object v2, v3, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    const/4 v4, 0x0

    iput-boolean v4, v2, Lcom/android/server/wm/AppWindowAnimator;->animating:Z

    .line 8908
    invoke-virtual {v3}, Lcom/android/server/wm/AppWindowToken;->removeAppFromTaskLocked()V

    goto :goto_131

    .line 8932
    .end local v9    # "basewtoken":Lcom/android/server/wm/WindowToken;
    .end local v11    # "mAppTransition":Lcom/android/server/wm/AppTransition;
    .end local v12    # "mClosingApps":Landroid/util/ArraySet;, "Landroid/util/ArraySet<Lcom/android/server/wm/AppWindowToken;>;"
    .end local v13    # "mOpeningApps":Landroid/util/ArraySet;, "Landroid/util/ArraySet<Lcom/android/server/wm/AppWindowToken;>;"
    .end local v16    # "stack":Lcom/android/server/wm/TaskStack;
    :catchall_1a4
    move-exception v2

    monitor-exit v18
    :try_end_1a6
    .catchall {:try_start_18a .. :try_end_1a6} :catchall_1a4

    throw v2

    .line 8923
    .restart local v9    # "basewtoken":Lcom/android/server/wm/WindowToken;
    :cond_1a7
    :try_start_1a7
    const-string v2, "WindowManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Attempted to remove non-existing app token: "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p1

    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v2, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_1c1
    .catchall {:try_start_1a7 .. :try_end_1c1} :catchall_1a4

    goto :goto_177
.end method

.method removeInputConsumer()Z
    .registers 5

    .prologue
    const/4 v0, 0x1

    .line 19184
    iget-object v1, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v1

    .line 19185
    :try_start_4
    iget-object v2, p0, mInputConsumer:Lcom/android/server/wm/InputConsumerImpl;

    if-eqz v2, :cond_13

    .line 19186
    const/4 v2, 0x0

    iput-object v2, p0, mInputConsumer:Lcom/android/server/wm/InputConsumerImpl;

    .line 19187
    iget-object v2, p0, mInputMonitor:Lcom/android/server/wm/InputMonitor;

    const/4 v3, 0x1

    invoke-virtual {v2, v3}, Lcom/android/server/wm/InputMonitor;->updateInputWindowsLw(Z)V

    .line 19188
    monitor-exit v1

    .line 19190
    :goto_12
    return v0

    :cond_13
    const/4 v0, 0x0

    monitor-exit v1

    goto :goto_12

    .line 19191
    :catchall_16
    move-exception v0

    monitor-exit v1
    :try_end_18
    .catchall {:try_start_4 .. :try_end_18} :catchall_16

    throw v0
.end method

.method removeInputConsumer(I)Z
    .registers 4
    .param p1, "displayId"    # I

    .prologue
    .line 19211
    iget-object v1, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v1

    .line 19219
    const/4 v0, 0x0

    :try_start_4
    monitor-exit v1

    return v0

    .line 19220
    :catchall_6
    move-exception v0

    monitor-exit v1
    :try_end_8
    .catchall {:try_start_4 .. :try_end_8} :catchall_6

    throw v0
.end method

.method public removeRotationWatcher(Landroid/view/IRotationWatcher;)V
    .registers 10
    .param p1, "watcher"    # Landroid/view/IRotationWatcher;

    .prologue
    .line 11938
    invoke-interface {p1}, Landroid/view/IRotationWatcher;->asBinder()Landroid/os/IBinder;

    move-result-object v4

    .line 11939
    .local v4, "watcherBinder":Landroid/os/IBinder;
    iget-object v6, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v6

    .line 11940
    const/4 v1, 0x0

    .local v1, "i":I
    :goto_8
    :try_start_8
    iget-object v5, p0, mRotationWatchers:Ljava/util/ArrayList;

    invoke-virtual {v5}, Ljava/util/ArrayList;->size()I

    move-result v5

    if-ge v1, v5, :cond_3b

    .line 11941
    iget-object v5, p0, mRotationWatchers:Ljava/util/ArrayList;

    invoke-virtual {v5, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/wm/WindowManagerService$RotationWatcher;

    .line 11942
    .local v3, "rotationWatcher":Lcom/android/server/wm/WindowManagerService$RotationWatcher;
    iget-object v5, v3, Lcom/android/server/wm/WindowManagerService$RotationWatcher;->watcher:Landroid/view/IRotationWatcher;

    invoke-interface {v5}, Landroid/view/IRotationWatcher;->asBinder()Landroid/os/IBinder;

    move-result-object v5

    if-ne v4, v5, :cond_38

    .line 11943
    iget-object v5, p0, mRotationWatchers:Ljava/util/ArrayList;

    invoke-virtual {v5, v1}, Ljava/util/ArrayList;->remove(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/wm/WindowManagerService$RotationWatcher;

    .line 11944
    .local v2, "removed":Lcom/android/server/wm/WindowManagerService$RotationWatcher;
    iget-object v5, v2, Lcom/android/server/wm/WindowManagerService$RotationWatcher;->watcher:Landroid/view/IRotationWatcher;

    invoke-interface {v5}, Landroid/view/IRotationWatcher;->asBinder()Landroid/os/IBinder;

    move-result-object v0

    .line 11945
    .local v0, "binder":Landroid/os/IBinder;
    if-eqz v0, :cond_36

    .line 11946
    iget-object v5, v2, Lcom/android/server/wm/WindowManagerService$RotationWatcher;->deathRecipient:Landroid/os/IBinder$DeathRecipient;

    const/4 v7, 0x0

    invoke-interface {v0, v5, v7}, Landroid/os/IBinder;->unlinkToDeath(Landroid/os/IBinder$DeathRecipient;I)Z

    .line 11948
    :cond_36
    add-int/lit8 v1, v1, -0x1

    .line 11940
    .end local v0    # "binder":Landroid/os/IBinder;
    .end local v2    # "removed":Lcom/android/server/wm/WindowManagerService$RotationWatcher;
    :cond_38
    add-int/lit8 v1, v1, 0x1

    goto :goto_8

    .line 11951
    .end local v3    # "rotationWatcher":Lcom/android/server/wm/WindowManagerService$RotationWatcher;
    :cond_3b
    monitor-exit v6

    .line 11952
    return-void

    .line 11951
    :catchall_3d
    move-exception v5

    monitor-exit v6
    :try_end_3f
    .catchall {:try_start_8 .. :try_end_3f} :catchall_3d

    throw v5
.end method

.method public removeScaledPid(I)V
    .registers 4
    .param p1, "pid"    # I

    .prologue
    .line 4003
    iget-object v0, p0, mScaledPids:Ljava/util/HashMap;

    invoke-static {p1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v1

    invoke-virtual {v0, v1}, Ljava/util/HashMap;->containsKey(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_1a

    .line 4004
    iget-object v0, p0, mScaledPids:Ljava/util/HashMap;

    invoke-static {p1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v1

    invoke-virtual {v0, v1}, Ljava/util/HashMap;->remove(Ljava/lang/Object;)Ljava/lang/Object;

    .line 4005
    iget-object v0, p0, mDisplayManagerInternal:Landroid/hardware/display/DisplayManagerInternal;

    invoke-virtual {v0, p1}, Landroid/hardware/display/DisplayManagerInternal;->removeScaledPidFromWindowManager(I)V

    .line 4007
    :cond_1a
    return-void
.end method

.method public removeScaledPids()V
    .registers 2

    .prologue
    .line 4010
    iget-object v0, p0, mScaledPids:Ljava/util/HashMap;

    invoke-virtual {v0}, Ljava/util/HashMap;->clear()V

    .line 4011
    iget-object v0, p0, mDisplayManagerInternal:Landroid/hardware/display/DisplayManagerInternal;

    invoke-virtual {v0}, Landroid/hardware/display/DisplayManagerInternal;->removeScaledPidsFromWindowManager()V

    .line 4012
    return-void
.end method

.method public removeStack(I)V
    .registers 4
    .param p1, "stackId"    # I

    .prologue
    .line 9298
    iget-object v1, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v1

    .line 9299
    :try_start_3
    iget-object v0, p0, mStackIdToStack:Landroid/util/SparseArray;

    invoke-virtual {v0, p1}, Landroid/util/SparseArray;->remove(I)V

    .line 9300
    monitor-exit v1

    .line 9301
    return-void

    .line 9300
    :catchall_a
    move-exception v0

    monitor-exit v1
    :try_end_c
    .catchall {:try_start_3 .. :try_end_c} :catchall_a

    throw v0
.end method

.method public removeTask(I)V
    .registers 3
    .param p1, "taskId"    # I

    .prologue
    const/4 v0, 0x0

    .line 9316
    invoke-virtual {p0, p1, v0, v0}, removeTask(IZZ)V

    .line 9317
    return-void
.end method

.method public removeTask(IZZ)V
    .registers 9
    .param p1, "taskId"    # I
    .param p2, "move"    # Z
    .param p3, "displayChange"    # Z

    .prologue
    .line 9323
    iget-object v2, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v2

    .line 9324
    :try_start_3
    iget-object v1, p0, mTaskIdToTask:Landroid/util/SparseArray;

    invoke-virtual {v1, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/wm/Task;

    .line 9325
    .local v0, "task":Lcom/android/server/wm/Task;
    if-nez v0, :cond_2c

    .line 9326
    sget-boolean v1, DEBUG_STACK:Z

    if-eqz v1, :cond_2a

    const-string v1, "WindowManager"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v4, "removeTask: could not find taskId="

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v1, v3}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 9327
    :cond_2a
    monitor-exit v2

    .line 9338
    :goto_2b
    return-void

    .line 9332
    :cond_2c
    invoke-virtual {v0, p2}, Lcom/android/server/wm/Task;->removeLocked(Z)V

    .line 9337
    monitor-exit v2

    goto :goto_2b

    .end local v0    # "task":Lcom/android/server/wm/Task;
    :catchall_31
    move-exception v1

    monitor-exit v2
    :try_end_33
    .catchall {:try_start_3 .. :try_end_33} :catchall_31

    throw v1
.end method

.method public removeWindow(Lcom/android/server/wm/Session;Landroid/view/IWindow;)V
    .registers 6
    .param p1, "session"    # Lcom/android/server/wm/Session;
    .param p2, "client"    # Landroid/view/IWindow;

    .prologue
    .line 4611
    iget-object v2, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v2

    .line 4612
    const/4 v1, 0x0

    :try_start_4
    invoke-virtual {p0, p1, p2, v1}, windowForClientLocked(Lcom/android/server/wm/Session;Landroid/view/IWindow;Z)Lcom/android/server/wm/WindowState;

    move-result-object v0

    .line 4613
    .local v0, "win":Lcom/android/server/wm/WindowState;
    if-nez v0, :cond_c

    .line 4614
    monitor-exit v2

    .line 4618
    :goto_b
    return-void

    .line 4616
    :cond_c
    invoke-virtual {p0, v0}, removeWindowLocked(Lcom/android/server/wm/WindowState;)V

    .line 4617
    monitor-exit v2

    goto :goto_b

    .end local v0    # "win":Lcom/android/server/wm/WindowState;
    :catchall_11
    move-exception v1

    monitor-exit v2
    :try_end_13
    .catchall {:try_start_4 .. :try_end_13} :catchall_11

    throw v1
.end method

.method public removeWindowChangeListener(Lcom/android/server/wm/WindowManagerService$WindowChangeListener;)V
    .registers 4
    .param p1, "listener"    # Lcom/android/server/wm/WindowManagerService$WindowChangeListener;

    .prologue
    .line 12363
    iget-object v1, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v1

    .line 12364
    :try_start_3
    iget-object v0, p0, mWindowChangeListeners:Ljava/util/ArrayList;

    invoke-virtual {v0, p1}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    .line 12365
    monitor-exit v1

    .line 12366
    return-void

    .line 12365
    :catchall_a
    move-exception v0

    monitor-exit v1
    :try_end_c
    .catchall {:try_start_3 .. :try_end_c} :catchall_a

    throw v0
.end method

.method removeWindowInnerLocked(Lcom/android/server/wm/WindowState;)V
    .registers 3
    .param p1, "win"    # Lcom/android/server/wm/WindowState;

    .prologue
    .line 4750
    const/4 v0, 0x1

    invoke-virtual {p0, p1, v0}, removeWindowInnerLocked(Lcom/android/server/wm/WindowState;Z)V

    .line 4751
    return-void
.end method

.method removeWindowInnerLocked(Lcom/android/server/wm/WindowState;Z)V
    .registers 16
    .param p1, "win"    # Lcom/android/server/wm/WindowState;
    .param p2, "performLayout"    # Z

    .prologue
    .line 4754
    iget-boolean v9, p1, Lcom/android/server/wm/WindowState;->mRemoved:Z

    if-eqz v9, :cond_5

    .line 4956
    :goto_4
    return-void

    .line 4759
    :cond_5
    iget-object v9, p1, Lcom/android/server/wm/WindowState;->mChildWindows:Lcom/android/server/wm/WindowList;

    invoke-virtual {v9}, Lcom/android/server/wm/WindowList;->size()I

    move-result v9

    add-int/lit8 v4, v9, -0x1

    .local v4, "i":I
    :goto_d
    if-ltz v4, :cond_3f

    .line 4760
    iget-object v9, p1, Lcom/android/server/wm/WindowState;->mChildWindows:Lcom/android/server/wm/WindowList;

    invoke-virtual {v9, v4}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/wm/WindowState;

    .line 4761
    .local v2, "cwin":Lcom/android/server/wm/WindowState;
    const-string v9, "WindowManager"

    new-instance v10, Ljava/lang/StringBuilder;

    invoke-direct {v10}, Ljava/lang/StringBuilder;-><init>()V

    const-string v11, "Force-removing child win "

    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    invoke-virtual {v10, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v10

    const-string v11, " from container "

    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    invoke-virtual {v10, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v10

    invoke-virtual {v10}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v10

    invoke-static {v9, v10}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 4763
    invoke-virtual {p0, v2}, removeWindowInnerLocked(Lcom/android/server/wm/WindowState;)V

    .line 4759
    add-int/lit8 v4, v4, -0x1

    goto :goto_d

    .line 4766
    .end local v2    # "cwin":Lcom/android/server/wm/WindowState;
    :cond_3f
    const/4 v9, 0x1

    iput-boolean v9, p1, Lcom/android/server/wm/WindowState;->mRemoved:Z

    .line 4770
    iget-object v9, p0, mMultiWindowCenterBar:Lcom/android/server/wm/WindowState;

    if-ne v9, p1, :cond_4a

    .line 4771
    const/4 v9, 0x0

    invoke-virtual {p0, v9}, moveMultiWindowCenterBarLocked(Z)Z

    .line 4776
    :cond_4a
    iget-object v9, p0, mInputMethodTarget:Lcom/android/server/wm/WindowState;

    if-ne v9, p1, :cond_52

    .line 4777
    const/4 v9, 0x0

    invoke-virtual {p0, v9}, moveInputMethodWindowsIfNeededLocked(Z)Z

    .line 4781
    :cond_52
    sget-boolean v9, DUALSCREEN_DEBUG_INPUT_METHOD:Z

    if-eqz v9, :cond_6f

    .line 4782
    iget-object v9, p0, mDualScreenInputMethodManager:Lcom/android/server/wm/DualScreenInputMethodManager;

    new-instance v10, Ljava/lang/StringBuilder;

    invoke-direct {v10}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v11, "remove window win="

    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    invoke-virtual {v10, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v10

    invoke-virtual {v10}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v10

    invoke-virtual {v9, v10}, Lcom/android/server/wm/DualScreenInputMethodManager;->printDebugInfo(Ljava/lang/String;)V

    .line 4808
    :cond_6f
    iget-object v9, p0, mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v9, p1}, Landroid/view/WindowManagerPolicy;->removeWindowLw(Landroid/view/WindowManagerPolicy$WindowState;)V

    .line 4809
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->removeLocked()V

    .line 4811
    sget-boolean v9, DEBUG_ADD_REMOVE:Z

    if-eqz v9, :cond_94

    const-string v9, "WindowManager"

    new-instance v10, Ljava/lang/StringBuilder;

    invoke-direct {v10}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v11, "removeWindowInnerLocked: "

    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    invoke-virtual {v10, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v10

    invoke-virtual {v10}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v10

    invoke-static {v9, v10}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 4812
    :cond_94
    iget-object v9, p0, mWindowMap:Ljava/util/HashMap;

    iget-object v10, p1, Lcom/android/server/wm/WindowState;->mClient:Landroid/view/IWindow;

    invoke-interface {v10}, Landroid/view/IWindow;->asBinder()Landroid/os/IBinder;

    move-result-object v10

    invoke-virtual {v9, v10}, Ljava/util/HashMap;->remove(Ljava/lang/Object;)Ljava/lang/Object;

    .line 4813
    iget v9, p1, Lcom/android/server/wm/WindowState;->mAppOp:I

    const/4 v10, -0x1

    if-eq v9, v10, :cond_b3

    .line 4814
    iget-object v9, p0, mAppOps:Landroid/app/AppOpsManager;

    iget v10, p1, Lcom/android/server/wm/WindowState;->mAppOp:I

    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->getOwningUid()I

    move-result v11

    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->getOwningPackage()Ljava/lang/String;

    move-result-object v12

    invoke-virtual {v9, v10, v11, v12}, Landroid/app/AppOpsManager;->finishOp(IILjava/lang/String;)V

    .line 4817
    :cond_b3
    iget-object v9, p0, mPendingRemove:Ljava/util/ArrayList;

    invoke-virtual {v9, p1}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    .line 4818
    iget-object v9, p0, mResizingWindows:Ljava/util/ArrayList;

    invoke-virtual {v9, p1}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    .line 4819
    const/4 v9, 0x1

    iput-boolean v9, p0, mWindowsChanged:Z

    .line 4820
    sget-boolean v9, DEBUG_WINDOW_MOVEMENT:Z

    if-eqz v9, :cond_dc

    const-string v9, "WindowManager"

    new-instance v10, Ljava/lang/StringBuilder;

    invoke-direct {v10}, Ljava/lang/StringBuilder;-><init>()V

    const-string v11, "Final remove of window: "

    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    invoke-virtual {v10, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v10

    invoke-virtual {v10}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v10

    invoke-static {v9, v10}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 4822
    :cond_dc
    iget-object v9, p0, mInputMethodWindow:Lcom/android/server/wm/WindowState;

    if-ne v9, p1, :cond_1f6

    .line 4823
    const/4 v9, 0x0

    iput-object v9, p0, mInputMethodWindow:Lcom/android/server/wm/WindowState;

    .line 4825
    sget-boolean v9, DUALSCREEN_DEBUG_INPUT_METHOD:Z

    if-eqz v9, :cond_ef

    .line 4826
    iget-object v9, p0, mDualScreenInputMethodManager:Lcom/android/server/wm/DualScreenInputMethodManager;

    const-string/jumbo v10, "remove SIP"

    invoke-virtual {v9, v10}, Lcom/android/server/wm/DualScreenInputMethodManager;->printDebugInfo(Ljava/lang/String;)V

    .line 4835
    :cond_ef
    :goto_ef
    iget-object v9, p0, mMultiWindowCenterBar:Lcom/android/server/wm/WindowState;

    if-ne v9, p1, :cond_20d

    .line 4836
    const/4 v9, 0x0

    iput-object v9, p0, mMultiWindowCenterBar:Lcom/android/server/wm/WindowState;

    .line 4857
    :cond_f6
    :goto_f6
    iget-object v6, p1, Lcom/android/server/wm/WindowState;->mToken:Lcom/android/server/wm/WindowToken;

    .line 4858
    .local v6, "token":Lcom/android/server/wm/WindowToken;
    iget-object v1, p1, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    .line 4859
    .local v1, "atoken":Lcom/android/server/wm/AppWindowToken;
    sget-boolean v9, DEBUG_ADD_REMOVE:Z

    if-eqz v9, :cond_120

    const-string v9, "WindowManager"

    new-instance v10, Ljava/lang/StringBuilder;

    invoke-direct {v10}, Ljava/lang/StringBuilder;-><init>()V

    const-string v11, "Removing "

    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    invoke-virtual {v10, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v10

    const-string v11, " from "

    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    invoke-virtual {v10, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v10

    invoke-virtual {v10}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v10

    invoke-static {v9, v10}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 4860
    :cond_120
    iget-object v9, v6, Lcom/android/server/wm/WindowToken;->windows:Lcom/android/server/wm/WindowList;

    invoke-virtual {v9, p1}, Lcom/android/server/wm/WindowList;->remove(Ljava/lang/Object;)Z

    .line 4861
    if-eqz v1, :cond_12c

    .line 4862
    iget-object v9, v1, Lcom/android/server/wm/AppWindowToken;->allAppWindows:Lcom/android/server/wm/WindowList;

    invoke-virtual {v9, p1}, Lcom/android/server/wm/WindowList;->remove(Ljava/lang/Object;)Z

    .line 4867
    :cond_12c
    iget-object v9, v6, Lcom/android/server/wm/WindowToken;->windows:Lcom/android/server/wm/WindowList;

    invoke-virtual {v9}, Lcom/android/server/wm/WindowList;->size()I

    move-result v9

    if-nez v9, :cond_13f

    .line 4868
    iget-boolean v9, v6, Lcom/android/server/wm/WindowToken;->explicit:Z

    if-nez v9, :cond_21f

    .line 4869
    iget-object v9, p0, mTokenMap:Ljava/util/HashMap;

    iget-object v10, v6, Lcom/android/server/wm/WindowToken;->token:Landroid/os/IBinder;

    invoke-virtual {v9, v10}, Ljava/util/HashMap;->remove(Ljava/lang/Object;)Ljava/lang/Object;

    .line 4875
    :cond_13f
    :goto_13f
    if-eqz v1, :cond_172

    .line 4876
    iget-object v9, v1, Lcom/android/server/wm/AppWindowToken;->startingWindow:Lcom/android/server/wm/WindowState;

    if-ne v9, p1, :cond_226

    .line 4877
    sget-boolean v9, DEBUG_STARTING_WINDOW:Z

    if-eqz v9, :cond_161

    const-string v9, "WindowManager"

    new-instance v10, Ljava/lang/StringBuilder;

    invoke-direct {v10}, Ljava/lang/StringBuilder;-><init>()V

    const-string v11, "Notify removed startingWindow "

    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    invoke-virtual {v10, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v10

    invoke-virtual {v10}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v10

    invoke-static {v9, v10}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 4878
    :cond_161
    invoke-virtual {p0, v1}, scheduleRemoveStartingWindowLocked(Lcom/android/server/wm/AppWindowToken;)V

    .line 4891
    :cond_164
    :goto_164
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->stopWaitingForOrientation()V

    .line 4895
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->getStack()Lcom/android/server/wm/TaskStack;

    move-result-object v9

    iget-object v10, p1, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    iget v10, v10, Lcom/android/server/wm/WindowStateAnimator;->mAnimLayer:I

    invoke-virtual {v9, v10}, Lcom/android/server/wm/TaskStack;->clearDimmingIfNeeded(I)V

    .line 4899
    :cond_172
    iget-object v9, p1, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v9, v9, Landroid/view/WindowManager$LayoutParams;->type:I

    const/16 v10, 0x7dd

    if-ne v9, v10, :cond_254

    .line 4909
    const-wide/16 v10, 0x0

    iput-wide v10, p0, mLastWallpaperTimeoutTime:J

    .line 4910
    invoke-virtual {p0}, getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v9

    iget v10, v9, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    or-int/lit8 v10, v10, 0x4

    iput v10, v9, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    .line 4919
    :cond_188
    :goto_188
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->getWindowList()Lcom/android/server/wm/WindowList;

    move-result-object v8

    .line 4920
    .local v8, "windows":Lcom/android/server/wm/WindowList;
    if-eqz v8, :cond_1af

    .line 4921
    invoke-virtual {v8, p1}, Lcom/android/server/wm/WindowList;->remove(Ljava/lang/Object;)Z

    .line 4922
    iget-boolean v9, p0, mInLayout:Z

    if-nez v9, :cond_1af

    .line 4923
    invoke-direct {p0, v8}, assignLayersLocked(Lcom/android/server/wm/WindowList;)V

    .line 4924
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    move-result-object v3

    .line 4925
    .local v3, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-eqz v3, :cond_1a1

    .line 4926
    const/4 v9, 0x1

    iput-boolean v9, v3, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    .line 4928
    :cond_1a1
    if-eqz p2, :cond_1a6

    .line 4929
    invoke-direct {p0}, performLayoutAndPlaceSurfacesLocked()V

    .line 4931
    :cond_1a6
    iget-object v9, p1, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    if-eqz v9, :cond_1af

    .line 4932
    iget-object v9, p1, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    invoke-virtual {v9}, Lcom/android/server/wm/AppWindowToken;->updateReportedVisibilityLocked()V

    .line 4938
    .end local v3    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :cond_1af
    iget-object v9, p1, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v9, v9, Landroid/view/WindowManager$LayoutParams;->type:I

    const/16 v10, 0x834

    if-eq v9, v10, :cond_1bf

    iget-object v9, p1, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v9, v9, Landroid/view/WindowManager$LayoutParams;->type:I

    const/16 v10, 0x836

    if-ne v9, v10, :cond_1ee

    .line 4940
    :cond_1bf
    const/4 v9, 0x0

    iput-object v9, p0, mTopWidgetWindow:Lcom/android/server/wm/WindowState;

    .line 4941
    iget v9, p0, mWidgetWindowCount:I

    add-int/lit8 v9, v9, -0x1

    iput v9, p0, mWidgetWindowCount:I

    .line 4942
    iget v9, p0, mWidgetWindowCount:I

    if-lez v9, :cond_1ee

    if-eqz v8, :cond_1ee

    .line 4943
    invoke-virtual {v8}, Lcom/android/server/wm/WindowList;->size()I

    move-result v0

    .line 4944
    .local v0, "N":I
    add-int/lit8 v5, v0, -0x1

    .local v5, "j":I
    :goto_1d4
    if-ltz v5, :cond_1ee

    .line 4945
    invoke-virtual {v8, v5}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v7

    check-cast v7, Lcom/android/server/wm/WindowState;

    .line 4946
    .local v7, "tw":Lcom/android/server/wm/WindowState;
    iget-object v9, v7, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v9, v9, Landroid/view/WindowManager$LayoutParams;->type:I

    const/16 v10, 0x834

    if-eq v9, v10, :cond_1ec

    iget-object v9, v7, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v9, v9, Landroid/view/WindowManager$LayoutParams;->type:I

    const/16 v10, 0x836

    if-ne v9, v10, :cond_269

    .line 4947
    :cond_1ec
    iput-object v7, p0, mTopWidgetWindow:Lcom/android/server/wm/WindowState;

    .line 4955
    .end local v0    # "N":I
    .end local v5    # "j":I
    .end local v7    # "tw":Lcom/android/server/wm/WindowState;
    :cond_1ee
    iget-object v9, p0, mInputMonitor:Lcom/android/server/wm/InputMonitor;

    const/4 v10, 0x1

    invoke-virtual {v9, v10}, Lcom/android/server/wm/InputMonitor;->updateInputWindowsLw(Z)V

    goto/16 :goto_4

    .line 4829
    .end local v1    # "atoken":Lcom/android/server/wm/AppWindowToken;
    .end local v6    # "token":Lcom/android/server/wm/WindowToken;
    .end local v8    # "windows":Lcom/android/server/wm/WindowList;
    :cond_1f6
    iget-object v9, p1, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v9, v9, Landroid/view/WindowManager$LayoutParams;->type:I

    const/16 v10, 0x7dc

    if-eq v9, v10, :cond_206

    iget-object v9, p1, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v9, v9, Landroid/view/WindowManager$LayoutParams;->type:I

    const/16 v10, 0x8e8

    if-ne v9, v10, :cond_ef

    .line 4830
    :cond_206
    iget-object v9, p0, mInputMethodDialogs:Ljava/util/ArrayList;

    invoke-virtual {v9, p1}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    goto/16 :goto_ef

    .line 4837
    :cond_20d
    iget-object v9, p0, mMultiWindowTraybarTarget:Lcom/android/server/wm/WindowState;

    if-ne v9, p1, :cond_216

    .line 4838
    const/4 v9, 0x0

    iput-object v9, p0, mMultiWindowTraybarTarget:Lcom/android/server/wm/WindowState;

    goto/16 :goto_f6

    .line 4839
    :cond_216
    iget-object v9, p0, mMultiWindowSwitchWindowTarget:Lcom/android/server/wm/WindowState;

    if-ne v9, p1, :cond_f6

    .line 4840
    const/4 v9, 0x0

    iput-object v9, p0, mMultiWindowSwitchWindowTarget:Lcom/android/server/wm/WindowState;

    goto/16 :goto_f6

    .line 4870
    .restart local v1    # "atoken":Lcom/android/server/wm/AppWindowToken;
    .restart local v6    # "token":Lcom/android/server/wm/WindowToken;
    :cond_21f
    if-eqz v1, :cond_13f

    .line 4871
    const/4 v9, 0x0

    iput-boolean v9, v1, Lcom/android/server/wm/AppWindowToken;->firstWindowDrawn:Z

    goto/16 :goto_13f

    .line 4880
    :cond_226
    iget-object v9, v1, Lcom/android/server/wm/AppWindowToken;->allAppWindows:Lcom/android/server/wm/WindowList;

    invoke-virtual {v9}, Lcom/android/server/wm/WindowList;->size()I

    move-result v9

    if-nez v9, :cond_242

    iget-object v9, v1, Lcom/android/server/wm/AppWindowToken;->startingData:Lcom/android/server/wm/StartingData;

    if-eqz v9, :cond_242

    .line 4883
    sget-boolean v9, DEBUG_STARTING_WINDOW:Z

    if-eqz v9, :cond_23d

    const-string v9, "WindowManager"

    const-string v10, "Nulling last startingWindow"

    invoke-static {v9, v10}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 4884
    :cond_23d
    const/4 v9, 0x0

    iput-object v9, v1, Lcom/android/server/wm/AppWindowToken;->startingData:Lcom/android/server/wm/StartingData;

    goto/16 :goto_164

    .line 4885
    :cond_242
    iget-object v9, v1, Lcom/android/server/wm/AppWindowToken;->allAppWindows:Lcom/android/server/wm/WindowList;

    invoke-virtual {v9}, Lcom/android/server/wm/WindowList;->size()I

    move-result v9

    const/4 v10, 0x1

    if-ne v9, v10, :cond_164

    iget-object v9, v1, Lcom/android/server/wm/AppWindowToken;->startingView:Landroid/view/View;

    if-eqz v9, :cond_164

    .line 4888
    invoke-virtual {p0, v1}, scheduleRemoveStartingWindowLocked(Lcom/android/server/wm/AppWindowToken;)V

    goto/16 :goto_164

    .line 4914
    :cond_254
    iget-object v9, p1, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v9, v9, Landroid/view/WindowManager$LayoutParams;->flags:I

    const/high16 v10, 0x100000

    and-int/2addr v9, v10

    if-eqz v9, :cond_188

    .line 4915
    invoke-virtual {p0}, getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v9

    iget v10, v9, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    or-int/lit8 v10, v10, 0x4

    iput v10, v9, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    goto/16 :goto_188

    .line 4944
    .restart local v0    # "N":I
    .restart local v5    # "j":I
    .restart local v7    # "tw":Lcom/android/server/wm/WindowState;
    .restart local v8    # "windows":Lcom/android/server/wm/WindowList;
    :cond_269
    add-int/lit8 v5, v5, -0x1

    goto/16 :goto_1d4
.end method

.method removeWindowLocked(Lcom/android/server/wm/WindowState;)V
    .registers 16
    .param p1, "win"    # Lcom/android/server/wm/WindowState;

    .prologue
    .line 4621
    iget-object v11, p1, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v11, v11, Landroid/view/WindowManager$LayoutParams;->type:I

    const/4 v12, 0x3

    if-ne v11, v12, :cond_186

    const/4 v7, 0x1

    .line 4622
    .local v7, "startingWindow":Z
    :goto_8
    if-eqz v7, :cond_26

    .line 4623
    sget-boolean v11, DEBUG_STARTING_WINDOW:Z

    if-eqz v11, :cond_26

    const-string v11, "WindowManager"

    new-instance v12, Ljava/lang/StringBuilder;

    invoke-direct {v12}, Ljava/lang/StringBuilder;-><init>()V

    const-string v13, "Starting window removed "

    invoke-virtual {v12, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v12

    invoke-virtual {v12, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v12

    invoke-virtual {v12}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v12

    invoke-static {v11, v12}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 4626
    :cond_26
    sget-boolean v11, DEBUG_FOCUS:Z

    if-nez v11, :cond_32

    sget-boolean v11, DEBUG_FOCUS_LIGHT:Z

    if-eqz v11, :cond_7f

    iget-object v11, p0, mCurrentFocus:Lcom/android/server/wm/WindowState;

    if-ne p1, v11, :cond_7f

    :cond_32
    const-string v11, "WindowManager"

    new-instance v12, Ljava/lang/StringBuilder;

    invoke-direct {v12}, Ljava/lang/StringBuilder;-><init>()V

    const-string v13, "Remove "

    invoke-virtual {v12, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v12

    invoke-virtual {v12, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v12

    const-string v13, " client="

    invoke-virtual {v12, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v12

    iget-object v13, p1, Lcom/android/server/wm/WindowState;->mClient:Landroid/view/IWindow;

    invoke-interface {v13}, Landroid/view/IWindow;->asBinder()Landroid/os/IBinder;

    move-result-object v13

    invoke-static {v13}, Ljava/lang/System;->identityHashCode(Ljava/lang/Object;)I

    move-result v13

    invoke-static {v13}, Ljava/lang/Integer;->toHexString(I)Ljava/lang/String;

    move-result-object v13

    invoke-virtual {v12, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v12

    const-string v13, ", surface="

    invoke-virtual {v12, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v12

    iget-object v13, p1, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    iget-object v13, v13, Lcom/android/server/wm/WindowStateAnimator;->mSurfaceControl:Landroid/view/SurfaceControl;

    invoke-virtual {v12, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v12

    const-string v13, " Callers="

    invoke-virtual {v12, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v12

    const/4 v13, 0x4

    invoke-static {v13}, Landroid/os/Debug;->getCallers(I)Ljava/lang/String;

    move-result-object v13

    invoke-virtual {v12, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v12

    invoke-virtual {v12}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v12

    invoke-static {v11, v12}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 4632
    :cond_7f
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v4

    .line 4634
    .local v4, "origId":J
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->disposeInputChannel()V

    .line 4636
    sget-boolean v11, DEBUG_APP_TRANSITIONS:Z

    if-eqz v11, :cond_fe

    const-string v12, "WindowManager"

    new-instance v11, Ljava/lang/StringBuilder;

    invoke-direct {v11}, Ljava/lang/StringBuilder;-><init>()V

    const-string v13, "Remove "

    invoke-virtual {v11, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v11

    invoke-virtual {v11, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v11

    const-string v13, ": mSurface="

    invoke-virtual {v11, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v11

    iget-object v13, p1, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    iget-object v13, v13, Lcom/android/server/wm/WindowStateAnimator;->mSurfaceControl:Landroid/view/SurfaceControl;

    invoke-virtual {v11, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v11

    const-string v13, " mExiting="

    invoke-virtual {v11, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v11

    iget-boolean v13, p1, Lcom/android/server/wm/WindowState;->mExiting:Z

    invoke-virtual {v11, v13}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v11

    const-string v13, " isAnimating="

    invoke-virtual {v11, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v11

    iget-object v13, p1, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    invoke-virtual {v13}, Lcom/android/server/wm/WindowStateAnimator;->isAnimating()Z

    move-result v13

    invoke-virtual {v11, v13}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v11

    const-string v13, " app-animation="

    invoke-virtual {v11, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v13

    iget-object v11, p1, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    if-eqz v11, :cond_189

    iget-object v11, p1, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    iget-object v11, v11, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    iget-object v11, v11, Lcom/android/server/wm/AppWindowAnimator;->animation:Landroid/view/animation/Animation;

    :goto_d5
    invoke-virtual {v13, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v11

    const-string v13, " inPendingTransaction="

    invoke-virtual {v11, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v13

    iget-object v11, p1, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    if-eqz v11, :cond_18c

    iget-object v11, p1, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    iget-boolean v11, v11, Lcom/android/server/wm/AppWindowToken;->inPendingTransaction:Z

    :goto_e7
    invoke-virtual {v13, v11}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v11

    const-string v13, " mDisplayFrozen="

    invoke-virtual {v11, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v11

    iget-boolean v13, p0, mDisplayFrozen:Z

    invoke-virtual {v11, v13}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v11

    invoke-virtual {v11}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v11

    invoke-static {v12, v11}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 4646
    :cond_fe
    const/4 v10, 0x0

    .line 4651
    .local v10, "wasVisible":Z
    iget-boolean v11, p1, Lcom/android/server/wm/WindowState;->mHasSurface:Z

    if-eqz v11, :cond_191

    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->getDisplayId()I

    move-result v11

    invoke-virtual {p0, v11}, okToDisplay(I)Z

    move-result v11

    if-eqz v11, :cond_191

    .line 4654
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->isWinVisibleLw()Z

    move-result v10

    .line 4655
    if-eqz v10, :cond_137

    .line 4657
    const/4 v8, 0x2

    .line 4658
    .local v8, "transit":I
    iget-object v11, p1, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v11, v11, Landroid/view/WindowManager$LayoutParams;->type:I

    const/4 v12, 0x3

    if-ne v11, v12, :cond_11c

    .line 4659
    const/4 v8, 0x5

    .line 4662
    :cond_11c
    iget-object v11, p1, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    const/4 v12, 0x0

    invoke-virtual {v11, v8, v12}, Lcom/android/server/wm/WindowStateAnimator;->applyAnimationLocked(IZ)Z

    move-result v11

    if-eqz v11, :cond_128

    .line 4663
    const/4 v11, 0x1

    iput-boolean v11, p1, Lcom/android/server/wm/WindowState;->mExiting:Z

    .line 4674
    :cond_128
    iget-object v11, p0, mAccessibilityController:Lcom/android/server/wm/AccessibilityController;

    if-eqz v11, :cond_137

    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->getDisplayId()I

    move-result v11

    if-nez v11, :cond_137

    .line 4676
    iget-object v11, p0, mAccessibilityController:Lcom/android/server/wm/AccessibilityController;

    invoke-virtual {v11, p1, v8}, Lcom/android/server/wm/AccessibilityController;->onWindowTransitionLocked(Lcom/android/server/wm/WindowState;I)V

    .line 4680
    .end local v8    # "transit":I
    :cond_137
    iget-object v0, p1, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    .line 4684
    .local v0, "appToken":Lcom/android/server/wm/AppWindowToken;
    if-eqz v7, :cond_18f

    if-eqz v0, :cond_18f

    iget-object v11, v0, Lcom/android/server/wm/AppWindowToken;->allAppWindows:Lcom/android/server/wm/WindowList;

    invoke-virtual {v11}, Lcom/android/server/wm/WindowList;->size()I

    move-result v11

    const/4 v12, 0x1

    if-ne v11, v12, :cond_18f

    iget-object v11, p1, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    invoke-virtual {v11}, Lcom/android/server/wm/WindowStateAnimator;->isAnimating()Z

    move-result v11

    if-nez v11, :cond_18f

    const/4 v3, 0x1

    .line 4686
    .local v3, "lastWinStartingNotAnimating":Z
    :goto_14f
    if-nez v3, :cond_191

    iget-boolean v11, p1, Lcom/android/server/wm/WindowState;->mExiting:Z

    if-nez v11, :cond_15d

    iget-object v11, p1, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    invoke-virtual {v11}, Lcom/android/server/wm/WindowStateAnimator;->isAnimating()Z

    move-result v11

    if-eqz v11, :cond_191

    .line 4688
    :cond_15d
    const/4 v11, 0x1

    iput-boolean v11, p1, Lcom/android/server/wm/WindowState;->mExiting:Z

    .line 4689
    const/4 v11, 0x1

    iput-boolean v11, p1, Lcom/android/server/wm/WindowState;->mRemoveOnExit:Z

    .line 4690
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    move-result-object v1

    .line 4691
    .local v1, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-eqz v1, :cond_16c

    .line 4692
    const/4 v11, 0x1

    iput-boolean v11, v1, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    .line 4694
    :cond_16c
    const/4 v11, 0x3

    const/4 v12, 0x0

    invoke-direct {p0, v11, v12}, updateFocusedWindowLocked(IZ)Z

    move-result v2

    .line 4696
    .local v2, "focusChanged":Z
    invoke-direct {p0}, performLayoutAndPlaceSurfacesLocked()V

    .line 4697
    if-eqz v0, :cond_17a

    .line 4698
    invoke-virtual {v0}, Lcom/android/server/wm/AppWindowToken;->updateReportedVisibilityLocked()V

    .line 4700
    :cond_17a
    if-eqz v2, :cond_182

    .line 4701
    iget-object v11, p0, mInputMonitor:Lcom/android/server/wm/InputMonitor;

    const/4 v12, 0x0

    invoke-virtual {v11, v12}, Lcom/android/server/wm/InputMonitor;->updateInputWindowsLw(Z)V

    .line 4703
    :cond_182
    invoke-static {v4, v5}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 4747
    .end local v0    # "appToken":Lcom/android/server/wm/AppWindowToken;
    .end local v1    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v2    # "focusChanged":Z
    .end local v3    # "lastWinStartingNotAnimating":Z
    :goto_185
    return-void

    .line 4621
    .end local v4    # "origId":J
    .end local v7    # "startingWindow":Z
    .end local v10    # "wasVisible":Z
    :cond_186
    const/4 v7, 0x0

    goto/16 :goto_8

    .line 4636
    .restart local v4    # "origId":J
    .restart local v7    # "startingWindow":Z
    :cond_189
    const/4 v11, 0x0

    goto/16 :goto_d5

    :cond_18c
    const/4 v11, 0x0

    goto/16 :goto_e7

    .line 4684
    .restart local v0    # "appToken":Lcom/android/server/wm/AppWindowToken;
    .restart local v10    # "wasVisible":Z
    :cond_18f
    const/4 v3, 0x0

    goto :goto_14f

    .line 4708
    .end local v0    # "appToken":Lcom/android/server/wm/AppWindowToken;
    :cond_191
    const/4 v9, 0x1

    .line 4711
    .local v9, "updateOrientation":Z
    iget-object v11, p1, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v11, v11, Landroid/view/WindowManager$LayoutParams;->type:I

    const/16 v12, 0x8ad

    if-ne v11, v12, :cond_20a

    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->isVisibleLw()Z

    move-result v11

    if-eqz v11, :cond_20a

    .line 4712
    iget-object v11, p1, Lcom/android/server/wm/WindowState;->mToken:Lcom/android/server/wm/WindowToken;

    const/4 v12, 0x1

    iput-boolean v12, v11, Lcom/android/server/wm/WindowToken;->willBeHideBlockMain:Z

    .line 4713
    const/4 v11, 0x0

    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->getDisplayId()I

    move-result v12

    invoke-virtual {p0, v11, v12}, updateOrientationFromAppTokensLocked(ZI)Z

    move-result v11

    if-eqz v11, :cond_1b7

    .line 4714
    iget-object v11, p0, mH:Lcom/android/server/wm/WindowManagerService$H;

    const/16 v12, 0x12

    invoke-virtual {v11, v12}, Lcom/android/server/wm/WindowManagerService$H;->sendEmptyMessage(I)Z

    .line 4716
    :cond_1b7
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->getDisplayId()I

    move-result v11

    invoke-virtual {p0, v11}, okToDisplay(I)Z

    move-result v11

    if-eqz v11, :cond_1c6

    .line 4717
    iget-object v11, p1, Lcom/android/server/wm/WindowState;->mToken:Lcom/android/server/wm/WindowToken;

    const/4 v12, 0x0

    iput-boolean v12, v11, Lcom/android/server/wm/WindowToken;->willBeHideBlockMain:Z

    .line 4719
    :cond_1c6
    invoke-virtual {p0, p1}, removeWindowInnerLocked(Lcom/android/server/wm/WindowState;)V

    .line 4720
    const/4 v9, 0x0

    .line 4729
    :goto_1ca
    if-eqz v9, :cond_200

    .line 4730
    if-eqz v10, :cond_1ec

    iget-object v11, p1, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    if-nez v11, :cond_1ec

    iget-object v11, p1, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v11, v11, Landroid/view/WindowManager$LayoutParams;->screenOrientation:I

    const/4 v12, -0x1

    if-eq v11, v12, :cond_1ec

    iget-object v11, p1, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v11, v11, Landroid/view/WindowManager$LayoutParams;->screenOrientation:I

    iget v12, p0, mForcedAppOrientation:I

    if-ne v11, v12, :cond_1ec

    .line 4732
    invoke-virtual {p0}, getOrientationLocked()I

    move-result v6

    .line 4733
    .local v6, "req":I
    iget v11, p0, mForcedAppOrientation:I

    if-ne v6, v11, :cond_1ec

    .line 4734
    const/4 v11, -0x1

    iput v11, p0, mForcedAppOrientation:I

    .line 4740
    .end local v6    # "req":I
    :cond_1ec
    if-eqz v10, :cond_200

    const/4 v11, 0x0

    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->getDisplayId()I

    move-result v12

    invoke-virtual {p0, v11, v12}, updateOrientationFromAppTokensLocked(ZI)Z

    move-result v11

    if-eqz v11, :cond_200

    .line 4741
    iget-object v11, p0, mH:Lcom/android/server/wm/WindowManagerService$H;

    const/16 v12, 0x12

    invoke-virtual {v11, v12}, Lcom/android/server/wm/WindowManagerService$H;->sendEmptyMessage(I)Z

    .line 4745
    :cond_200
    const/4 v11, 0x0

    const/4 v12, 0x1

    invoke-direct {p0, v11, v12}, updateFocusedWindowLocked(IZ)Z

    .line 4746
    invoke-static {v4, v5}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    goto/16 :goto_185

    .line 4722
    :cond_20a
    invoke-virtual {p0, p1}, removeWindowInnerLocked(Lcom/android/server/wm/WindowState;)V

    goto :goto_1ca
.end method

.method public removeWindowToken(Landroid/os/IBinder;)V
    .registers 16
    .param p1, "token"    # Landroid/os/IBinder;

    .prologue
    .line 6290
    const-string v10, "android.permission.MANAGE_APP_TOKENS"

    const-string/jumbo v11, "removeWindowToken()"

    invoke-virtual {p0, v10, v11}, checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v10

    if-nez v10, :cond_13

    .line 6292
    new-instance v10, Ljava/lang/SecurityException;

    const-string v11, "Requires MANAGE_APP_TOKENS permission"

    invoke-direct {v10, v11}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v10

    .line 6295
    :cond_13
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v6

    .line 6296
    .local v6, "origId":J
    iget-object v11, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v11

    .line 6297
    const/4 v3, 0x0

    .line 6298
    .local v3, "displayContent":Lcom/android/server/wm/DisplayContent;
    :try_start_1b
    iget-object v10, p0, mTokenMap:Ljava/util/HashMap;

    invoke-virtual {v10, p1}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v9

    check-cast v9, Lcom/android/server/wm/WindowToken;

    .line 6299
    .local v9, "wtoken":Lcom/android/server/wm/WindowToken;
    if-eqz v9, :cond_32

    iget-object v10, v9, Lcom/android/server/wm/WindowToken;->appWindowToken:Lcom/android/server/wm/AppWindowToken;

    if-eqz v10, :cond_32

    .line 6300
    const-string v10, "WindowManager"

    const-string v12, "Tried to remove window which has appWindowToken"

    invoke-static {v10, v12}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 6301
    monitor-exit v11

    .line 6385
    :goto_31
    return-void

    .line 6303
    :cond_32
    iget-object v10, p0, mTokenMap:Ljava/util/HashMap;

    invoke-virtual {v10, p1}, Ljava/util/HashMap;->remove(Ljava/lang/Object;)Ljava/lang/Object;

    .line 6305
    if-eqz v9, :cond_bf

    .line 6306
    const/4 v2, 0x0

    .line 6307
    .local v2, "delayed":Z
    iget-boolean v10, v9, Lcom/android/server/wm/WindowToken;->hidden:Z

    if-nez v10, :cond_b3

    .line 6308
    iget-object v10, v9, Lcom/android/server/wm/WindowToken;->windows:Lcom/android/server/wm/WindowList;

    invoke-virtual {v10}, Lcom/android/server/wm/WindowList;->size()I

    move-result v0

    .line 6309
    .local v0, "N":I
    const/4 v1, 0x0

    .line 6311
    .local v1, "changed":Z
    const/4 v4, 0x0

    .local v4, "i":I
    :goto_46
    if-ge v4, v0, :cond_83

    .line 6312
    iget-object v10, v9, Lcom/android/server/wm/WindowToken;->windows:Lcom/android/server/wm/WindowList;

    invoke-virtual {v10, v4}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v8

    check-cast v8, Lcom/android/server/wm/WindowState;

    .line 6313
    .local v8, "win":Lcom/android/server/wm/WindowState;
    invoke-virtual {v8}, Lcom/android/server/wm/WindowState;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    move-result-object v3

    .line 6315
    iget-object v10, v8, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    invoke-virtual {v10}, Lcom/android/server/wm/WindowStateAnimator;->isAnimating()Z

    move-result v10

    if-eqz v10, :cond_5d

    .line 6316
    const/4 v2, 0x1

    .line 6319
    :cond_5d
    invoke-virtual {v8}, Lcom/android/server/wm/WindowState;->isVisibleNow()Z

    move-result v10

    if-eqz v10, :cond_80

    .line 6320
    iget-object v10, v8, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    const/4 v12, 0x2

    const/4 v13, 0x0

    invoke-virtual {v10, v12, v13}, Lcom/android/server/wm/WindowStateAnimator;->applyAnimationLocked(IZ)Z

    .line 6332
    iget-object v10, p0, mAccessibilityController:Lcom/android/server/wm/AccessibilityController;

    if-eqz v10, :cond_7a

    invoke-virtual {v8}, Lcom/android/server/wm/WindowState;->isDefaultDisplay()Z

    move-result v10

    if-eqz v10, :cond_7a

    .line 6333
    iget-object v10, p0, mAccessibilityController:Lcom/android/server/wm/AccessibilityController;

    const/4 v12, 0x2

    invoke-virtual {v10, v8, v12}, Lcom/android/server/wm/AccessibilityController;->onWindowTransitionLocked(Lcom/android/server/wm/WindowState;I)V

    .line 6337
    :cond_7a
    const/4 v1, 0x1

    .line 6338
    if-eqz v3, :cond_80

    .line 6339
    const/4 v10, 0x1

    iput-boolean v10, v3, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    .line 6311
    :cond_80
    add-int/lit8 v4, v4, 0x1

    goto :goto_46

    .line 6344
    .end local v8    # "win":Lcom/android/server/wm/WindowState;
    :cond_83
    const/4 v10, 0x1

    iput-boolean v10, v9, Lcom/android/server/wm/WindowToken;->hidden:Z

    .line 6346
    if-eqz v1, :cond_90

    .line 6347
    invoke-direct {p0}, performLayoutAndPlaceSurfacesLocked()V

    .line 6348
    const/4 v10, 0x0

    const/4 v12, 0x0

    invoke-direct {p0, v10, v12}, updateFocusedWindowLocked(IZ)Z

    .line 6352
    :cond_90
    if-eqz v2, :cond_a4

    if-eqz v3, :cond_a4

    .line 6353
    iget-object v10, v3, Lcom/android/server/wm/DisplayContent;->mExitingTokens:Ljava/util/ArrayList;

    invoke-virtual {v10, v9}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 6379
    .end local v0    # "N":I
    .end local v1    # "changed":Z
    .end local v4    # "i":I
    :cond_99
    :goto_99
    iget-object v10, p0, mInputMonitor:Lcom/android/server/wm/InputMonitor;

    const/4 v12, 0x1

    invoke-virtual {v10, v12}, Lcom/android/server/wm/InputMonitor;->updateInputWindowsLw(Z)V

    .line 6383
    .end local v2    # "delayed":Z
    :goto_9f
    monitor-exit v11
    :try_end_a0
    .catchall {:try_start_1b .. :try_end_a0} :catchall_b0

    .line 6384
    invoke-static {v6, v7}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    goto :goto_31

    .line 6354
    .restart local v0    # "N":I
    .restart local v1    # "changed":Z
    .restart local v2    # "delayed":Z
    .restart local v4    # "i":I
    :cond_a4
    :try_start_a4
    iget v10, v9, Lcom/android/server/wm/WindowToken;->windowType:I

    const/16 v12, 0x7dd

    if-ne v10, v12, :cond_99

    .line 6370
    iget-object v5, p0, mWallpaperTokens:Ljava/util/ArrayList;

    .line 6371
    .local v5, "mWallpaperTokens":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/WindowToken;>;"
    invoke-virtual {v5, v9}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    goto :goto_99

    .line 6383
    .end local v0    # "N":I
    .end local v1    # "changed":Z
    .end local v2    # "delayed":Z
    .end local v4    # "i":I
    .end local v5    # "mWallpaperTokens":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/WindowToken;>;"
    .end local v9    # "wtoken":Lcom/android/server/wm/WindowToken;
    :catchall_b0
    move-exception v10

    monitor-exit v11
    :try_end_b2
    .catchall {:try_start_a4 .. :try_end_b2} :catchall_b0

    throw v10

    .line 6375
    .restart local v2    # "delayed":Z
    .restart local v9    # "wtoken":Lcom/android/server/wm/WindowToken;
    :cond_b3
    :try_start_b3
    iget v10, v9, Lcom/android/server/wm/WindowToken;->windowType:I

    const/16 v12, 0x7dd

    if-ne v10, v12, :cond_99

    .line 6376
    iget-object v10, p0, mWallpaperTokens:Ljava/util/ArrayList;

    invoke-virtual {v10, v9}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    goto :goto_99

    .line 6381
    .end local v2    # "delayed":Z
    :cond_bf
    const-string v10, "WindowManager"

    new-instance v12, Ljava/lang/StringBuilder;

    invoke-direct {v12}, Ljava/lang/StringBuilder;-><init>()V

    const-string v13, "Attempted to remove non-existing token: "

    invoke-virtual {v12, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v12

    invoke-virtual {v12, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v12

    invoke-virtual {v12}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v12

    invoke-static {v10, v12}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_d7
    .catchall {:try_start_b3 .. :try_end_d7} :catchall_b0

    goto :goto_9f
.end method

.method public requestAssistScreenshot(Lcom/android/internal/app/IAssistScreenshotReceiver;)Z
    .registers 4
    .param p1, "receiver"    # Lcom/android/internal/app/IAssistScreenshotReceiver;

    .prologue
    .line 10758
    const-string v0, "android.permission.READ_FRAME_BUFFER"

    const-string/jumbo v1, "requestAssistScreenshot()"

    invoke-virtual {p0, v0, v1}, checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v0

    if-nez v0, :cond_13

    .line 10760
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Requires READ_FRAME_BUFFER permission"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 10763
    :cond_13
    invoke-static {}, Lcom/android/server/FgThread;->getHandler()Landroid/os/Handler;

    move-result-object v0

    new-instance v1, Lcom/android/server/wm/WindowManagerService$8;

    invoke-direct {v1, p0, p1}, Lcom/android/server/wm/WindowManagerService$8;-><init>(Lcom/android/server/wm/WindowManagerService;Lcom/android/internal/app/IAssistScreenshotReceiver;)V

    invoke-virtual {v0, v1}, Landroid/os/Handler;->post(Ljava/lang/Runnable;)Z

    .line 10775
    const/4 v0, 0x1

    return v0
.end method

.method public requestHideSoftInputMethodLocked(Lcom/android/server/wm/WindowState;)V
    .registers 4
    .param p1, "win"    # Lcom/android/server/wm/WindowState;

    .prologue
    .line 21975
    if-eqz p1, :cond_37

    iget-object v0, p0, mFocusedApp:Lcom/android/server/wm/AppWindowToken;

    iget-object v1, p1, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    if-ne v0, v1, :cond_37

    iget-object v0, p1, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    const/4 v1, 0x1

    if-ne v0, v1, :cond_37

    iget-object v0, p0, mInputMethodTarget:Lcom/android/server/wm/WindowState;

    if-eqz v0, :cond_37

    iget-object v0, p0, mInputMethodTarget:Lcom/android/server/wm/WindowState;

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    if-eqz v0, :cond_37

    iget-object v0, p0, mInputMethodTarget:Lcom/android/server/wm/WindowState;

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    iget-object v1, p1, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    if-ne v0, v1, :cond_37

    iget-object v0, p0, mInputMethodWindow:Lcom/android/server/wm/WindowState;

    if-eqz v0, :cond_37

    iget-object v0, p0, mInputMethodWindow:Lcom/android/server/wm/WindowState;

    invoke-virtual {v0}, Lcom/android/server/wm/WindowState;->isVisibleLw()Z

    move-result v0

    if-eqz v0, :cond_37

    .line 21982
    iget-object v0, p0, mH:Lcom/android/server/wm/WindowManagerService$H;

    new-instance v1, Lcom/android/server/wm/WindowManagerService$12;

    invoke-direct {v1, p0}, Lcom/android/server/wm/WindowManagerService$12;-><init>(Lcom/android/server/wm/WindowManagerService;)V

    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowManagerService$H;->post(Ljava/lang/Runnable;)Z

    .line 21991
    :cond_37
    return-void
.end method

.method public requestMetaKeyEvent(Landroid/content/ComponentName;Z)V
    .registers 4
    .param p1, "componentName"    # Landroid/content/ComponentName;
    .param p2, "request"    # Z

    .prologue
    .line 20236
    iget-object v0, p0, mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v0, p1, p2}, Landroid/view/WindowManagerPolicy;->requestMetaKeyEvent(Landroid/content/ComponentName;Z)V

    .line 20237
    return-void
.end method

.method public requestReportDrawn(Landroid/view/IApplicationToken;)V
    .registers 5
    .param p1, "token"    # Landroid/view/IApplicationToken;

    .prologue
    .line 23035
    if-nez p1, :cond_3

    .line 23042
    :goto_2
    return-void

    .line 23038
    :cond_3
    iget-object v2, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v2

    .line 23039
    :try_start_6
    invoke-interface {p1}, Landroid/view/IApplicationToken;->asBinder()Landroid/os/IBinder;

    move-result-object v1

    invoke-virtual {p0, v1}, findAppWindowToken(Landroid/os/IBinder;)Lcom/android/server/wm/AppWindowToken;

    move-result-object v0

    .line 23040
    .local v0, "atoken":Lcom/android/server/wm/AppWindowToken;
    invoke-direct {p0, v0}, requestReportDrawnLocked(Lcom/android/server/wm/AppWindowToken;)V

    .line 23041
    monitor-exit v2

    goto :goto_2

    .end local v0    # "atoken":Lcom/android/server/wm/AppWindowToken;
    :catchall_13
    move-exception v1

    monitor-exit v2
    :try_end_15
    .catchall {:try_start_6 .. :try_end_15} :catchall_13

    throw v1
.end method

.method public requestSystemKeyEvent(ILandroid/content/ComponentName;Z)Z
    .registers 5
    .param p1, "keyCode"    # I
    .param p2, "componentName"    # Landroid/content/ComponentName;
    .param p3, "request"    # Z

    .prologue
    .line 20226
    iget-object v0, p0, mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v0, p1, p2, p3}, Landroid/view/WindowManagerPolicy;->requestSystemKeyEvent(ILandroid/content/ComponentName;Z)Z

    move-result v0

    return v0
.end method

.method public requestTransientBars()V
    .registers 2

    .prologue
    .line 20292
    iget-object v0, p0, mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v0}, Landroid/view/WindowManagerPolicy;->requestTransientBars()V

    .line 20293
    return-void
.end method

.method requestTraversal()V
    .registers 3

    .prologue
    .line 18039
    iget-object v1, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v1

    .line 18040
    :try_start_3
    invoke-virtual {p0}, requestTraversalLocked()V

    .line 18041
    monitor-exit v1

    .line 18042
    return-void

    .line 18041
    :catchall_8
    move-exception v0

    monitor-exit v1
    :try_end_a
    .catchall {:try_start_3 .. :try_end_a} :catchall_8

    throw v0
.end method

.method requestTraversalLocked()V
    .registers 3

    .prologue
    .line 18045
    iget-boolean v0, p0, mTraversalScheduled:Z

    if-nez v0, :cond_d

    .line 18046
    const/4 v0, 0x1

    iput-boolean v0, p0, mTraversalScheduled:Z

    .line 18047
    iget-object v0, p0, mH:Lcom/android/server/wm/WindowManagerService$H;

    const/4 v1, 0x4

    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowManagerService$H;->sendEmptyMessage(I)Z

    .line 18049
    :cond_d
    return-void
.end method

.method public resizeStack(ILandroid/graphics/Rect;)Landroid/content/res/Configuration;
    .registers 13
    .param p1, "stackId"    # I
    .param p2, "bounds"    # Landroid/graphics/Rect;

    .prologue
    .line 9652
    iget-object v7, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v7

    .line 9653
    :try_start_3
    iget-object v6, p0, mStackIdToStack:Landroid/util/SparseArray;

    invoke-virtual {v6, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/wm/TaskStack;

    .line 9654
    .local v2, "stack":Lcom/android/server/wm/TaskStack;
    if-nez v2, :cond_30

    .line 9655
    new-instance v6, Ljava/lang/IllegalArgumentException;

    new-instance v8, Ljava/lang/StringBuilder;

    invoke-direct {v8}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v9, "resizeStack: stackId "

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v8

    invoke-virtual {v8, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v8

    const-string v9, " not found."

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v8

    invoke-virtual {v8}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v8

    invoke-direct {v6, v8}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v6

    .line 9681
    .end local v2    # "stack":Lcom/android/server/wm/TaskStack;
    :catchall_2d
    move-exception v6

    monitor-exit v7
    :try_end_2f
    .catchall {:try_start_3 .. :try_end_2f} :catchall_2d

    throw v6

    .line 9659
    .restart local v2    # "stack":Lcom/android/server/wm/TaskStack;
    :cond_30
    :try_start_30
    invoke-virtual {v2, p2}, Lcom/android/server/wm/TaskStack;->isSameBounds(Landroid/graphics/Rect;)Z

    move-result v6

    if-nez v6, :cond_77

    invoke-virtual {v2}, Lcom/android/server/wm/TaskStack;->isFloatingStack()Z

    move-result v6

    if-nez v6, :cond_77

    .line 9661
    new-instance v3, Ljava/util/ArrayList;

    invoke-direct {v3}, Ljava/util/ArrayList;-><init>()V

    .line 9662
    .local v3, "targetTokens":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/AppWindowToken;>;"
    invoke-virtual {v2}, Lcom/android/server/wm/TaskStack;->getTasks()Ljava/util/ArrayList;

    move-result-object v6

    invoke-virtual {v6}, Ljava/util/ArrayList;->iterator()Ljava/util/Iterator;

    move-result-object v0

    :cond_49
    invoke-interface {v0}, Ljava/util/Iterator;->hasNext()Z

    move-result v6

    if-eqz v6, :cond_6b

    invoke-interface {v0}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/server/wm/Task;

    .line 9663
    .local v4, "task":Lcom/android/server/wm/Task;
    iget-object v6, v4, Lcom/android/server/wm/Task;->mAppTokens:Lcom/android/server/wm/AppTokenList;

    invoke-virtual {v6}, Lcom/android/server/wm/AppTokenList;->iterator()Ljava/util/Iterator;

    move-result-object v1

    .local v1, "i$":Ljava/util/Iterator;
    :goto_5b
    invoke-interface {v1}, Ljava/util/Iterator;->hasNext()Z

    move-result v6

    if-eqz v6, :cond_49

    invoke-interface {v1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/android/server/wm/AppWindowToken;

    .line 9664
    .local v5, "wtoken":Lcom/android/server/wm/AppWindowToken;
    invoke-virtual {v3, v5}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    goto :goto_5b

    .line 9667
    .end local v1    # "i$":Ljava/util/Iterator;
    .end local v4    # "task":Lcom/android/server/wm/Task;
    .end local v5    # "wtoken":Lcom/android/server/wm/AppWindowToken;
    :cond_6b
    const/4 v6, 0x1

    invoke-virtual {v2}, Lcom/android/server/wm/TaskStack;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    move-result-object v8

    invoke-virtual {v8}, Lcom/android/server/wm/DisplayContent;->getDisplayId()I

    move-result v8

    invoke-direct {p0, v3, v6, v8}, prepareMultiWindowTransitionLocked(Ljava/util/ArrayList;II)V

    .line 9670
    .end local v3    # "targetTokens":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/AppWindowToken;>;"
    :cond_77
    invoke-virtual {v2, p2}, Lcom/android/server/wm/TaskStack;->setBounds(Landroid/graphics/Rect;)Z

    move-result v6

    if-eqz v6, :cond_8d

    .line 9673
    invoke-direct {p0, v2}, assignMultiWindowScaleLocked(Lcom/android/server/wm/TaskStack;)V

    .line 9676
    invoke-virtual {v2}, Lcom/android/server/wm/TaskStack;->resizeWindows()V

    .line 9677
    invoke-virtual {v2}, Lcom/android/server/wm/TaskStack;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    move-result-object v6

    const/4 v8, 0x1

    iput-boolean v8, v6, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    .line 9678
    invoke-direct {p0}, performLayoutAndPlaceSurfacesLocked()V

    .line 9680
    :cond_8d
    new-instance v6, Landroid/content/res/Configuration;

    iget-object v8, v2, Lcom/android/server/wm/TaskStack;->mOverrideConfig:Landroid/content/res/Configuration;

    invoke-direct {v6, v8}, Landroid/content/res/Configuration;-><init>(Landroid/content/res/Configuration;)V

    monitor-exit v7
    :try_end_95
    .catchall {:try_start_30 .. :try_end_95} :catchall_2d

    return-object v6
.end method

.method public resumeKeyDispatching(Landroid/os/IBinder;)V
    .registers 5
    .param p1, "_token"    # Landroid/os/IBinder;

    .prologue
    .line 12985
    const-string v1, "android.permission.MANAGE_APP_TOKENS"

    const-string/jumbo v2, "resumeKeyDispatching()"

    invoke-virtual {p0, v1, v2}, checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v1

    if-nez v1, :cond_13

    .line 12987
    new-instance v1, Ljava/lang/SecurityException;

    const-string v2, "Requires MANAGE_APP_TOKENS permission"

    invoke-direct {v1, v2}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 12990
    :cond_13
    iget-object v2, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v2

    .line 12991
    :try_start_16
    iget-object v1, p0, mTokenMap:Ljava/util/HashMap;

    invoke-virtual {v1, p1}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/wm/WindowToken;

    .line 12992
    .local v0, "token":Lcom/android/server/wm/WindowToken;
    if-eqz v0, :cond_25

    .line 12993
    iget-object v1, p0, mInputMonitor:Lcom/android/server/wm/InputMonitor;

    invoke-virtual {v1, v0}, Lcom/android/server/wm/InputMonitor;->resumeDispatchingLw(Lcom/android/server/wm/WindowToken;)V

    .line 12995
    :cond_25
    monitor-exit v2

    .line 12996
    return-void

    .line 12995
    .end local v0    # "token":Lcom/android/server/wm/WindowToken;
    :catchall_27
    move-exception v1

    monitor-exit v2
    :try_end_29
    .catchall {:try_start_16 .. :try_end_29} :catchall_27

    throw v1
.end method

.method resumeRotationLocked()V
    .registers 4

    .prologue
    .line 11295
    iget v1, p0, mDeferredRotationPauseCount:I

    if-lez v1, :cond_1c

    .line 11296
    iget v1, p0, mDeferredRotationPauseCount:I

    add-int/lit8 v1, v1, -0x1

    iput v1, p0, mDeferredRotationPauseCount:I

    .line 11297
    iget v1, p0, mDeferredRotationPauseCount:I

    if-nez v1, :cond_1c

    .line 11298
    const/4 v1, 0x0

    invoke-virtual {p0, v1}, updateRotationUncheckedLocked(Z)Z

    move-result v0

    .line 11299
    .local v0, "changed":Z
    if-eqz v0, :cond_1c

    .line 11300
    iget-object v1, p0, mH:Lcom/android/server/wm/WindowManagerService$H;

    const/16 v2, 0x12

    invoke-virtual {v1, v2}, Lcom/android/server/wm/WindowManagerService$H;->sendEmptyMessage(I)Z

    .line 11304
    .end local v0    # "changed":Z
    :cond_1c
    return-void
.end method

.method public saveANRStateLocked(Lcom/android/server/wm/AppWindowToken;Lcom/android/server/wm/WindowState;Ljava/lang/String;)V
    .registers 11
    .param p1, "appWindowToken"    # Lcom/android/server/wm/AppWindowToken;
    .param p2, "windowState"    # Lcom/android/server/wm/WindowState;
    .param p3, "reason"    # Ljava/lang/String;

    .prologue
    const/16 v6, 0x26

    const/4 v5, 0x1

    .line 19810
    new-instance v1, Ljava/io/StringWriter;

    invoke-direct {v1}, Ljava/io/StringWriter;-><init>()V

    .line 19811
    .local v1, "sw":Ljava/io/StringWriter;
    new-instance v0, Lcom/android/internal/util/FastPrintWriter;

    const/4 v2, 0x0

    const/16 v3, 0x400

    invoke-direct {v0, v1, v2, v3}, Lcom/android/internal/util/FastPrintWriter;-><init>(Ljava/io/Writer;ZI)V

    .line 19812
    .local v0, "pw":Ljava/io/PrintWriter;
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "  ANR time: "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-static {}, Ljava/text/DateFormat;->getInstance()Ljava/text/DateFormat;

    move-result-object v3

    new-instance v4, Ljava/util/Date;

    invoke-direct {v4}, Ljava/util/Date;-><init>()V

    invoke-virtual {v3, v4}, Ljava/text/DateFormat;->format(Ljava/util/Date;)Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19813
    if-eqz p1, :cond_4d

    .line 19814
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "  Application at fault: "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    iget-object v3, p1, Lcom/android/server/wm/AppWindowToken;->stringName:Ljava/lang/String;

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19816
    :cond_4d
    if-eqz p2, :cond_6b

    .line 19817
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "  Window at fault: "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    iget-object v3, p2, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    invoke-virtual {v3}, Landroid/view/WindowManager$LayoutParams;->getTitle()Ljava/lang/CharSequence;

    move-result-object v3

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19819
    :cond_6b
    if-eqz p3, :cond_83

    .line 19820
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "  Reason: "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19822
    :cond_83
    invoke-virtual {v0}, Ljava/io/PrintWriter;->println()V

    .line 19823
    const/4 v2, 0x0

    invoke-virtual {p0, v0, v5, v2}, dumpWindowsNoHeaderLocked(Ljava/io/PrintWriter;ZLjava/util/ArrayList;)V

    .line 19824
    invoke-virtual {v0}, Ljava/io/PrintWriter;->println()V

    .line 19825
    const-string v2, "Last ANR continued"

    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 19826
    invoke-virtual {p0, v0, v5}, dumpDisplayContentsLocked(Ljava/io/PrintWriter;Z)V

    .line 19827
    invoke-virtual {v0}, Ljava/io/PrintWriter;->close()V

    .line 19828
    invoke-virtual {v1}, Ljava/io/StringWriter;->toString()Ljava/lang/String;

    move-result-object v2

    iput-object v2, p0, mLastANRState:Ljava/lang/String;

    .line 19830
    iget-object v2, p0, mH:Lcom/android/server/wm/WindowManagerService$H;

    invoke-virtual {v2, v6}, Lcom/android/server/wm/WindowManagerService$H;->removeMessages(I)V

    .line 19831
    iget-object v2, p0, mH:Lcom/android/server/wm/WindowManagerService$H;

    const-wide/32 v4, 0x6ddd00

    invoke-virtual {v2, v6, v4, v5}, Lcom/android/server/wm/WindowManagerService$H;->sendEmptyMessageDelayed(IJ)Z

    .line 19832
    return-void
.end method

.method public saveLastInputMethodWindowForTransition()V
    .registers 6

    .prologue
    .line 19226
    iget-object v2, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v2

    .line 19228
    :try_start_3
    invoke-virtual {p0}, getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v0

    .line 19229
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    iget-object v1, p0, mInputMethodWindow:Lcom/android/server/wm/WindowState;

    if-eqz v1, :cond_14

    .line 19230
    iget-object v1, p0, mPolicy:Landroid/view/WindowManagerPolicy;

    iget-object v3, p0, mInputMethodWindow:Lcom/android/server/wm/WindowState;

    iget-object v4, p0, mInputMethodTarget:Lcom/android/server/wm/WindowState;

    invoke-interface {v1, v3, v4}, Landroid/view/WindowManagerPolicy;->setLastInputMethodWindowLw(Landroid/view/WindowManagerPolicy$WindowState;Landroid/view/WindowManagerPolicy$WindowState;)V

    .line 19232
    :cond_14
    monitor-exit v2

    .line 19233
    return-void

    .line 19232
    .end local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :catchall_16
    move-exception v1

    monitor-exit v2
    :try_end_18
    .catchall {:try_start_3 .. :try_end_18} :catchall_16

    throw v1
.end method

.method public scheduleAnimationLocked()V
    .registers 3

    .prologue
    .line 18053
    iget-boolean v0, p0, mAnimationScheduled:Z

    if-nez v0, :cond_10

    .line 18054
    const/4 v0, 0x1

    iput-boolean v0, p0, mAnimationScheduled:Z

    .line 18055
    iget-object v0, p0, mChoreographer:Landroid/view/Choreographer;

    iget-object v1, p0, mAnimator:Lcom/android/server/wm/WindowAnimator;

    iget-object v1, v1, Lcom/android/server/wm/WindowAnimator;->mAnimationFrameCallback:Landroid/view/Choreographer$FrameCallback;

    invoke-virtual {v0, v1}, Landroid/view/Choreographer;->postFrameCallback(Landroid/view/Choreographer$FrameCallback;)V

    .line 18057
    :cond_10
    return-void
.end method

.method scheduleRemoveStartingWindowLocked(Lcom/android/server/wm/AppWindowToken;)V
    .registers 7
    .param p1, "wtoken"    # Lcom/android/server/wm/AppWindowToken;

    .prologue
    const/4 v4, 0x6

    .line 8943
    iget-object v1, p0, mH:Lcom/android/server/wm/WindowManagerService$H;

    invoke-virtual {v1, v4, p1}, Lcom/android/server/wm/WindowManagerService$H;->hasMessages(ILjava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_a

    .line 8954
    :cond_9
    :goto_9
    return-void

    .line 8947
    :cond_a
    if-eqz p1, :cond_9

    iget-object v1, p1, Lcom/android/server/wm/AppWindowToken;->startingWindow:Lcom/android/server/wm/WindowState;

    if-eqz v1, :cond_9

    .line 8948
    sget-boolean v1, DEBUG_STARTING_WINDOW:Z

    if-eqz v1, :cond_41

    .line 8949
    const-string v1, "WindowManager"

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const/4 v3, 0x1

    invoke-static {v3}, Landroid/os/Debug;->getCallers(I)Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string v3, ": Schedule remove starting "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string v3, " startingWindow="

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    iget-object v3, p1, Lcom/android/server/wm/AppWindowToken;->startingWindow:Lcom/android/server/wm/WindowState;

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v1, v2}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 8951
    :cond_41
    iget-object v1, p0, mH:Lcom/android/server/wm/WindowManagerService$H;

    invoke-virtual {v1, v4, p1}, Lcom/android/server/wm/WindowManagerService$H;->obtainMessage(ILjava/lang/Object;)Landroid/os/Message;

    move-result-object v0

    .line 8952
    .local v0, "m":Landroid/os/Message;
    iget-object v1, p0, mH:Lcom/android/server/wm/WindowManagerService$H;

    invoke-virtual {v1, v0}, Lcom/android/server/wm/WindowManagerService$H;->sendMessage(Landroid/os/Message;)Z

    goto :goto_9
.end method

.method public screenshotApplications(Landroid/os/IBinder;III)Landroid/graphics/Bitmap;
    .registers 11
    .param p1, "appToken"    # Landroid/os/IBinder;
    .param p2, "displayId"    # I
    .param p3, "width"    # I
    .param p4, "height"    # I

    .prologue
    .line 10789
    const-string v0, "android.permission.READ_FRAME_BUFFER"

    const-string/jumbo v1, "screenshotApplications()"

    invoke-virtual {p0, v0, v1}, checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v0

    if-nez v0, :cond_13

    .line 10791
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Requires READ_FRAME_BUFFER permission"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 10804
    :cond_13
    const/4 v5, 0x0

    move-object v0, p0

    move-object v1, p1

    move v2, p2

    move v3, p3

    move v4, p4

    invoke-virtual/range {v0 .. v5}, screenshotApplicationsInner(Landroid/os/IBinder;IIIZ)Landroid/graphics/Bitmap;

    move-result-object v0

    return-object v0
.end method

.method screenshotApplicationsInner(Landroid/os/IBinder;IIIZ)Landroid/graphics/Bitmap;
    .registers 60
    .param p1, "appToken"    # Landroid/os/IBinder;
    .param p2, "displayId"    # I
    .param p3, "width"    # I
    .param p4, "height"    # I
    .param p5, "includeFullDisplay"    # Z

    .prologue
    .line 10810
    move-object/from16 v0, p0

    iget-object v8, v0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v8

    .line 10811
    :try_start_5
    move-object/from16 v0, p0

    move/from16 v1, p2

    invoke-virtual {v0, v1}, getDisplayContentLocked(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v26

    .line 10812
    .local v26, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-nez v26, :cond_13

    .line 10815
    const/16 v37, 0x0

    monitor-exit v8

    .line 11182
    :goto_12
    return-object v37

    .line 10817
    :cond_13
    monitor-exit v8
    :try_end_14
    .catchall {:try_start_5 .. :try_end_14} :catchall_2b

    .line 10818
    invoke-virtual/range {v26 .. v26}, Lcom/android/server/wm/DisplayContent;->getDisplayInfo()Landroid/view/DisplayInfo;

    move-result-object v27

    .line 10819
    .local v27, "displayInfo":Landroid/view/DisplayInfo;
    move-object/from16 v0, v27

    iget v0, v0, Landroid/view/DisplayInfo;->logicalWidth:I

    move/from16 v28, v0

    .line 10820
    .local v28, "dw":I
    move-object/from16 v0, v27

    iget v0, v0, Landroid/view/DisplayInfo;->logicalHeight:I

    move/from16 v25, v0

    .line 10821
    .local v25, "dh":I
    if-eqz v28, :cond_28

    if-nez v25, :cond_2e

    .line 10824
    :cond_28
    const/16 v37, 0x0

    goto :goto_12

    .line 10817
    .end local v25    # "dh":I
    .end local v26    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v27    # "displayInfo":Landroid/view/DisplayInfo;
    .end local v28    # "dw":I
    :catchall_2b
    move-exception v7

    :try_start_2c
    monitor-exit v8
    :try_end_2d
    .catchall {:try_start_2c .. :try_end_2d} :catchall_2b

    throw v7

    .line 10827
    .restart local v25    # "dh":I
    .restart local v26    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .restart local v27    # "displayInfo":Landroid/view/DisplayInfo;
    .restart local v28    # "dw":I
    :cond_2e
    move-object/from16 v0, v27

    iget v0, v0, Landroid/view/DisplayInfo;->appWidth:I

    move/from16 v17, v0

    .line 10828
    .local v17, "appWidth":I
    move-object/from16 v0, v27

    iget v15, v0, Landroid/view/DisplayInfo;->appHeight:I

    .line 10831
    .local v15, "appHeight":I
    const/16 v20, 0x0

    .line 10833
    .local v20, "bm":Landroid/graphics/Bitmap;
    const/4 v10, 0x0

    .line 10834
    .local v10, "maxLayer":I
    new-instance v29, Landroid/graphics/Rect;

    invoke-direct/range {v29 .. v29}, Landroid/graphics/Rect;-><init>()V

    .line 10835
    .local v29, "frame":Landroid/graphics/Rect;
    new-instance v44, Landroid/graphics/Rect;

    invoke-direct/range {v44 .. v44}, Landroid/graphics/Rect;-><init>()V

    .line 10839
    .local v44, "stackBounds":Landroid/graphics/Rect;
    const/16 v31, 0x0

    .line 10842
    .local v31, "hasSecureWindow":Z
    if-nez p1, :cond_c0

    .line 10843
    const/16 v42, 0x1

    .line 10844
    .local v42, "screenshotReady":Z
    const/4 v9, 0x0

    .line 10850
    .local v9, "minLayer":I
    :goto_4c
    const/16 v38, 0x0

    .line 10851
    .local v38, "retryCount":I
    const/16 v18, 0x0

    .line 10853
    .local v18, "appWin":Lcom/android/server/wm/WindowState;
    move-object/from16 v0, p0

    iget-object v7, v0, mInputMethodTarget:Lcom/android/server/wm/WindowState;

    if-eqz v7, :cond_c6

    move-object/from16 v0, p0

    iget-object v7, v0, mInputMethodTarget:Lcom/android/server/wm/WindowState;

    iget-object v7, v7, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    if-eqz v7, :cond_c6

    move-object/from16 v0, p0

    iget-object v7, v0, mInputMethodTarget:Lcom/android/server/wm/WindowState;

    iget-object v7, v7, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    iget-object v7, v7, Lcom/android/server/wm/AppWindowToken;->appToken:Landroid/view/IApplicationToken;

    if-eqz v7, :cond_c6

    move-object/from16 v0, p0

    iget-object v7, v0, mInputMethodTarget:Lcom/android/server/wm/WindowState;

    iget-object v7, v7, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    iget-object v7, v7, Lcom/android/server/wm/AppWindowToken;->appToken:Landroid/view/IApplicationToken;

    invoke-interface {v7}, Landroid/view/IApplicationToken;->asBinder()Landroid/os/IBinder;

    move-result-object v7

    move-object/from16 v0, p1

    if-ne v7, v0, :cond_c6

    const/16 v16, 0x1

    .line 10858
    .local v16, "appIsImTarget":Z
    :goto_7a
    move-object/from16 v0, p0

    iget-object v7, v0, mPolicy:Landroid/view/WindowManagerPolicy;

    const/4 v8, 0x2

    invoke-interface {v7, v8}, Landroid/view/WindowManagerPolicy;->windowTypeToLayerLw(I)I

    move-result v7

    add-int/lit8 v7, v7, 0x1

    mul-int/lit16 v7, v7, 0x2710

    add-int/lit16 v14, v7, 0x3e8

    .local v14, "aboveAppLayer":I
    move/from16 v39, v38

    .line 10862
    .end local v38    # "retryCount":I
    .local v39, "retryCount":I
    :goto_8b
    add-int/lit8 v38, v39, 0x1

    .end local v39    # "retryCount":I
    .restart local v38    # "retryCount":I
    if-lez v39, :cond_98

    .line 10865
    const/4 v10, 0x0

    .line 10866
    const v9, 0x7fffffff

    .line 10868
    const-wide/16 v52, 0x64

    :try_start_95
    invoke-static/range {v52 .. v53}, Ljava/lang/Thread;->sleep(J)V
    :try_end_98
    .catch Ljava/lang/InterruptedException; {:try_start_95 .. :try_end_98} :catch_52f

    .line 10872
    :cond_98
    :goto_98
    move-object/from16 v0, p0

    iget-object v0, v0, mWindowMap:Ljava/util/HashMap;

    move-object/from16 v51, v0

    monitor-enter v51

    .line 10874
    const/16 v18, 0x0

    .line 10875
    :try_start_a1
    invoke-virtual/range {v26 .. v26}, Lcom/android/server/wm/DisplayContent;->getWindowList()Lcom/android/server/wm/WindowList;

    move-result-object v49

    .line 10876
    .local v49, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual/range {v49 .. v49}, Lcom/android/server/wm/WindowList;->size()I

    move-result v7

    add-int/lit8 v32, v7, -0x1

    .local v32, "i":I
    :goto_ab
    if-ltz v32, :cond_1cf

    .line 10877
    move-object/from16 v0, v49

    move/from16 v1, v32

    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v50

    check-cast v50, Lcom/android/server/wm/WindowState;

    .line 10878
    .local v50, "ws":Lcom/android/server/wm/WindowState;
    move-object/from16 v0, v50

    iget-boolean v7, v0, Lcom/android/server/wm/WindowState;->mHasSurface:Z

    if-nez v7, :cond_c9

    .line 10876
    :cond_bd
    :goto_bd
    add-int/lit8 v32, v32, -0x1

    goto :goto_ab

    .line 10846
    .end local v9    # "minLayer":I
    .end local v14    # "aboveAppLayer":I
    .end local v16    # "appIsImTarget":Z
    .end local v18    # "appWin":Lcom/android/server/wm/WindowState;
    .end local v32    # "i":I
    .end local v38    # "retryCount":I
    .end local v42    # "screenshotReady":Z
    .end local v49    # "windows":Lcom/android/server/wm/WindowList;
    .end local v50    # "ws":Lcom/android/server/wm/WindowState;
    :cond_c0
    const/16 v42, 0x0

    .line 10847
    .restart local v42    # "screenshotReady":Z
    const v9, 0x7fffffff

    .restart local v9    # "minLayer":I
    goto :goto_4c

    .line 10853
    .restart local v18    # "appWin":Lcom/android/server/wm/WindowState;
    .restart local v38    # "retryCount":I
    :cond_c6
    const/16 v16, 0x0

    goto :goto_7a

    .line 10881
    .restart local v14    # "aboveAppLayer":I
    .restart local v16    # "appIsImTarget":Z
    .restart local v32    # "i":I
    .restart local v49    # "windows":Lcom/android/server/wm/WindowList;
    .restart local v50    # "ws":Lcom/android/server/wm/WindowState;
    :cond_c9
    move-object/from16 v0, v50

    iget v7, v0, Lcom/android/server/wm/WindowState;->mLayer:I

    if-ge v7, v14, :cond_bd

    .line 10886
    move-object/from16 v0, v50

    iget-object v7, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v7, v7, Landroid/view/WindowManager$LayoutParams;->type:I

    const/16 v8, 0x3ee

    if-eq v7, v8, :cond_bd

    move-object/from16 v0, v50

    iget-object v7, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v7, v7, Landroid/view/WindowManager$LayoutParams;->type:I

    const/16 v8, 0x3ef

    if-eq v7, v8, :cond_bd

    .line 10892
    move-object/from16 v0, v50

    iget-boolean v7, v0, Lcom/android/server/wm/WindowState;->mIsImWindow:Z

    if-eqz v7, :cond_1db

    .line 10893
    if-eqz v16, :cond_bd

    .line 10926
    :cond_eb
    :goto_eb
    move-object/from16 v0, v50

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    move-object/from16 v48, v0

    .line 10927
    .local v48, "winAnim":Lcom/android/server/wm/WindowStateAnimator;
    move-object/from16 v0, v48

    iget v7, v0, Lcom/android/server/wm/WindowStateAnimator;->mSurfaceLayer:I

    if-ge v10, v7, :cond_fb

    .line 10928
    move-object/from16 v0, v48

    iget v10, v0, Lcom/android/server/wm/WindowStateAnimator;->mSurfaceLayer:I

    .line 10930
    :cond_fb
    move-object/from16 v0, v48

    iget v7, v0, Lcom/android/server/wm/WindowStateAnimator;->mSurfaceLayer:I

    if-le v9, v7, :cond_105

    .line 10931
    move-object/from16 v0, v48

    iget v9, v0, Lcom/android/server/wm/WindowStateAnimator;->mSurfaceLayer:I

    .line 10935
    :cond_105
    if-nez p5, :cond_197

    move-object/from16 v0, v50

    iget-boolean v7, v0, Lcom/android/server/wm/WindowState;->mIsWallpaper:Z

    if-nez v7, :cond_197

    .line 10936
    move-object/from16 v0, v50

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mFrame:Landroid/graphics/Rect;

    move-object/from16 v47, v0

    .line 10937
    .local v47, "wf":Landroid/graphics/Rect;
    move-object/from16 v0, v50

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mContentInsets:Landroid/graphics/Rect;

    move-object/from16 v22, v0

    .line 10938
    .local v22, "cr":Landroid/graphics/Rect;
    move-object/from16 v0, v47

    iget v7, v0, Landroid/graphics/Rect;->left:I

    move-object/from16 v0, v22

    iget v8, v0, Landroid/graphics/Rect;->left:I

    add-int v34, v7, v8

    .line 10939
    .local v34, "left":I
    move-object/from16 v0, v47

    iget v7, v0, Landroid/graphics/Rect;->top:I

    move-object/from16 v0, v22

    iget v8, v0, Landroid/graphics/Rect;->top:I

    add-int v45, v7, v8

    .line 10940
    .local v45, "top":I
    move-object/from16 v0, v47

    iget v7, v0, Landroid/graphics/Rect;->right:I

    move-object/from16 v0, v22

    iget v8, v0, Landroid/graphics/Rect;->right:I

    sub-int v40, v7, v8

    .line 10941
    .local v40, "right":I
    move-object/from16 v0, v47

    iget v7, v0, Landroid/graphics/Rect;->bottom:I

    move-object/from16 v0, v22

    iget v8, v0, Landroid/graphics/Rect;->bottom:I

    sub-int v21, v7, v8

    .line 10942
    .local v21, "bottom":I
    move-object/from16 v0, v29

    move/from16 v1, v34

    move/from16 v2, v45

    move/from16 v3, v40

    move/from16 v4, v21

    invoke-virtual {v0, v1, v2, v3, v4}, Landroid/graphics/Rect;->union(IIII)V

    .line 10943
    move-object/from16 v0, v50

    move-object/from16 v1, v44

    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowState;->getStackBounds(Landroid/graphics/Rect;)V

    .line 10945
    if-eqz v18, :cond_163

    .line 10946
    const/high16 v7, 0x3f800000    # 1.0f

    move-object/from16 v0, v18

    iget v8, v0, Lcom/android/server/wm/WindowState;->mDssScale:F

    div-float/2addr v7, v8

    move-object/from16 v0, v44

    invoke-virtual {v0, v7}, Landroid/graphics/Rect;->scale(F)V

    .line 10948
    :cond_163
    move-object/from16 v0, v29

    move-object/from16 v1, v44

    invoke-virtual {v0, v1}, Landroid/graphics/Rect;->intersect(Landroid/graphics/Rect;)Z

    move-result v7

    if-nez v7, :cond_170

    .line 10950
    invoke-virtual/range {v29 .. v29}, Landroid/graphics/Rect;->setEmpty()V

    .line 10954
    :cond_170
    move-object/from16 v0, p0

    iget-object v7, v0, mContext:Landroid/content/Context;

    invoke-static {v7}, Lcom/samsung/android/cocktailbar/CocktailBarFeatures;->isSystemBarType(Landroid/content/Context;)Z

    move-result v7

    if-eqz v7, :cond_197

    .line 10955
    move-object/from16 v0, p0

    iget-object v7, v0, mCocktailBar:Lcom/android/server/wm/WindowState;

    if-eqz v7, :cond_197

    move-object/from16 v0, p0

    iget-object v7, v0, mCocktailBar:Lcom/android/server/wm/WindowState;

    invoke-virtual {v7}, Lcom/android/server/wm/WindowState;->isVisibleLw()Z

    move-result v7

    if-eqz v7, :cond_197

    move/from16 v0, v17

    if-le v15, v0, :cond_197

    .line 10956
    const/4 v7, 0x0

    const/4 v8, 0x0

    move-object/from16 v0, v29

    move/from16 v1, v17

    invoke-virtual {v0, v7, v8, v1, v15}, Landroid/graphics/Rect;->intersect(IIII)Z

    .line 10962
    .end local v21    # "bottom":I
    .end local v22    # "cr":Landroid/graphics/Rect;
    .end local v34    # "left":I
    .end local v40    # "right":I
    .end local v45    # "top":I
    .end local v47    # "wf":Landroid/graphics/Rect;
    :cond_197
    move-object/from16 v0, v50

    iget-object v7, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    if-eqz v7, :cond_1b5

    move-object/from16 v0, v50

    iget-object v7, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    iget-object v7, v7, Lcom/android/server/wm/AppWindowToken;->token:Landroid/os/IBinder;

    move-object/from16 v0, p1

    if-ne v7, v0, :cond_1b5

    invoke-virtual/range {v50 .. v50}, Lcom/android/server/wm/WindowState;->isDisplayedLw()Z

    move-result v7

    if-eqz v7, :cond_1b5

    move-object/from16 v0, v48

    iget-boolean v7, v0, Lcom/android/server/wm/WindowStateAnimator;->mSurfaceShown:Z

    if-eqz v7, :cond_1b5

    .line 10964
    const/16 v42, 0x1

    .line 10968
    :cond_1b5
    invoke-virtual/range {v48 .. v48}, Lcom/android/server/wm/WindowStateAnimator;->hasSecureSurface()Z

    move-result v7

    if-eqz v7, :cond_1bd

    .line 10969
    const/16 v31, 0x1

    .line 10973
    :cond_1bd
    move-object/from16 v0, v50

    move/from16 v1, v28

    move/from16 v2, v25

    invoke-virtual {v0, v1, v2}, Lcom/android/server/wm/WindowState;->isFullscreen(II)Z

    move-result v7

    if-eqz v7, :cond_bd

    invoke-virtual/range {v50 .. v50}, Lcom/android/server/wm/WindowState;->isOpaqueDrawn()Z

    move-result v7

    if-eqz v7, :cond_bd

    .line 10978
    .end local v48    # "winAnim":Lcom/android/server/wm/WindowStateAnimator;
    .end local v50    # "ws":Lcom/android/server/wm/WindowState;
    :cond_1cf
    if-eqz p1, :cond_226

    if-nez v18, :cond_226

    .line 10982
    const/16 v37, 0x0

    monitor-exit v51

    goto/16 :goto_12

    .line 11153
    .end local v32    # "i":I
    .end local v49    # "windows":Lcom/android/server/wm/WindowList;
    :catchall_1d8
    move-exception v7

    monitor-exit v51
    :try_end_1da
    .catchall {:try_start_a1 .. :try_end_1da} :catchall_1d8

    throw v7

    .line 10896
    .restart local v32    # "i":I
    .restart local v49    # "windows":Lcom/android/server/wm/WindowList;
    .restart local v50    # "ws":Lcom/android/server/wm/WindowState;
    :cond_1db
    :try_start_1db
    move-object/from16 v0, v50

    iget-boolean v7, v0, Lcom/android/server/wm/WindowState;->mIsWallpaper:Z

    if-eqz v7, :cond_1e5

    .line 10897
    if-nez v18, :cond_eb

    goto/16 :goto_bd

    .line 10908
    :cond_1e5
    if-eqz p1, :cond_eb

    .line 10910
    invoke-virtual/range {p0 .. p1}, findAppWindowToken(Landroid/os/IBinder;)Lcom/android/server/wm/AppWindowToken;

    move-result-object v19

    .line 10911
    .local v19, "atoken":Lcom/android/server/wm/AppWindowToken;
    if-eqz v19, :cond_223

    move-object/from16 v0, v50

    iget-object v7, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    if-eqz v7, :cond_223

    move-object/from16 v0, v50

    iget-object v7, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    iget-object v7, v7, Lcom/android/server/wm/AppWindowToken;->mTask:Lcom/android/server/wm/Task;

    if-eqz v7, :cond_223

    move-object/from16 v0, v19

    iget-object v7, v0, Lcom/android/server/wm/AppWindowToken;->mTask:Lcom/android/server/wm/Task;

    iget v7, v7, Lcom/android/server/wm/Task;->mTaskId:I

    move-object/from16 v0, v50

    iget-object v8, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    iget-object v8, v8, Lcom/android/server/wm/AppWindowToken;->mTask:Lcom/android/server/wm/Task;

    iget v8, v8, Lcom/android/server/wm/Task;->mTaskId:I

    if-ne v7, v8, :cond_223

    const/16 v33, 0x1

    .line 10915
    .local v33, "isSameTask":Z
    :goto_20d
    move-object/from16 v0, v50

    iget-object v7, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    if-eqz v7, :cond_bd

    move-object/from16 v0, v50

    iget-object v7, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    iget-object v7, v7, Lcom/android/server/wm/AppWindowToken;->token:Landroid/os/IBinder;

    move-object/from16 v0, p1

    if-eq v7, v0, :cond_21f

    if-eqz v33, :cond_bd

    .line 10921
    :cond_21f
    move-object/from16 v18, v50

    goto/16 :goto_eb

    .line 10911
    .end local v33    # "isSameTask":Z
    :cond_223
    const/16 v33, 0x0

    goto :goto_20d

    .line 10985
    .end local v19    # "atoken":Lcom/android/server/wm/AppWindowToken;
    .end local v50    # "ws":Lcom/android/server/wm/WindowState;
    :cond_226
    if-nez v42, :cond_2b7

    .line 10987
    if-eqz v18, :cond_249

    move-object/from16 v0, p0

    iget-object v7, v0, mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v7}, Landroid/view/WindowManagerPolicy;->isForceHideBySViewCover()Z

    move-result v7

    if-eqz v7, :cond_249

    move-object/from16 v0, p0

    iget-object v7, v0, mPolicy:Landroid/view/WindowManagerPolicy;

    move-object/from16 v0, v18

    iget-object v8, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    move-object/from16 v0, v18

    invoke-interface {v7, v0, v8}, Landroid/view/WindowManagerPolicy;->canBeForceHiddenBySViewCover(Landroid/view/WindowManagerPolicy$WindowState;Landroid/view/WindowManager$LayoutParams;)Z

    move-result v7

    if-eqz v7, :cond_249

    .line 10989
    const/16 v37, 0x0

    monitor-exit v51

    goto/16 :goto_12

    .line 10993
    :cond_249
    const/4 v7, 0x3

    move/from16 v0, v38

    if-le v0, v7, :cond_2b2

    .line 10994
    const-string v8, "WindowManager"

    new-instance v7, Ljava/lang/StringBuilder;

    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    const-string v13, "Screenshot max retries "

    invoke-virtual {v7, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    move/from16 v0, v38

    invoke-virtual {v7, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v7

    const-string v13, " of "

    invoke-virtual {v7, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    move-object/from16 v0, p1

    invoke-virtual {v7, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v7

    const-string v13, " appWin="

    invoke-virtual {v7, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v13

    if-nez v18, :cond_288

    const-string/jumbo v7, "null"

    :goto_278
    invoke-virtual {v13, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v7

    invoke-static {v8, v7}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 10997
    const/16 v37, 0x0

    monitor-exit v51

    goto/16 :goto_12

    .line 10994
    :cond_288
    new-instance v7, Ljava/lang/StringBuilder;

    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    move-object/from16 v0, v18

    invoke-virtual {v7, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v7

    const-string v52, " drawState="

    move-object/from16 v0, v52

    invoke-virtual {v7, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    move-object/from16 v0, v18

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    move-object/from16 v52, v0

    move-object/from16 v0, v52

    iget v0, v0, Lcom/android/server/wm/WindowStateAnimator;->mDrawState:I

    move/from16 v52, v0

    move/from16 v0, v52

    invoke-virtual {v7, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v7

    goto :goto_278

    .line 11003
    :cond_2b2
    monitor-exit v51

    move/from16 v39, v38

    .end local v38    # "retryCount":I
    .restart local v39    # "retryCount":I
    goto/16 :goto_8b

    .line 11011
    .end local v39    # "retryCount":I
    .restart local v38    # "retryCount":I
    :cond_2b7
    if-nez v10, :cond_2be

    .line 11014
    const/16 v37, 0x0

    monitor-exit v51

    goto/16 :goto_12

    .line 11019
    :cond_2be
    move-object/from16 v0, p0

    iget-boolean v7, v0, mReduceScreenRunning:Z
    :try_end_2c2
    .catchall {:try_start_1db .. :try_end_2c2} :catchall_1d8

    if-eqz v7, :cond_367

    .line 11021
    const/4 v7, 0x0

    :try_start_2c5
    move-object/from16 v0, p0

    invoke-virtual {v0, v7}, getEasyOneHandScaleSpecLocked(I)Landroid/view/MagnificationSpec;

    move-result-object v43

    .line 11022
    .local v43, "spec":Landroid/view/MagnificationSpec;
    if-eqz v43, :cond_367

    move-object/from16 v0, v43

    iget v7, v0, Landroid/view/MagnificationSpec;->scale:F

    const/high16 v8, 0x3f800000    # 1.0f

    cmpg-float v7, v7, v8

    if-gez v7, :cond_367

    .line 11024
    move-object/from16 v0, v43

    iget v7, v0, Landroid/view/MagnificationSpec;->offsetX:F

    float-to-int v0, v7

    move/from16 v35, v0

    .line 11025
    .local v35, "offsetX":I
    move-object/from16 v0, v43

    iget v7, v0, Landroid/view/MagnificationSpec;->offsetY:F

    float-to-int v0, v7

    move/from16 v36, v0

    .line 11026
    .local v36, "offsetY":I
    if-eqz v18, :cond_307

    move-object/from16 v0, v18

    iget v7, v0, Lcom/android/server/wm/WindowState;->mDssScale:F

    const/high16 v8, 0x3f800000    # 1.0f

    cmpl-float v7, v7, v8

    if-eqz v7, :cond_307

    .line 11027
    move/from16 v0, v35

    int-to-float v7, v0

    move-object/from16 v0, v18

    iget v8, v0, Lcom/android/server/wm/WindowState;->mDssScale:F

    div-float/2addr v7, v8

    float-to-int v0, v7

    move/from16 v35, v0

    .line 11028
    move/from16 v0, v36

    int-to-float v7, v0

    move-object/from16 v0, v18

    iget v8, v0, Lcom/android/server/wm/WindowState;->mDssScale:F

    div-float/2addr v7, v8

    float-to-int v0, v7

    move/from16 v36, v0

    .line 11031
    :cond_307
    if-eqz v18, :cond_385

    invoke-virtual/range {v18 .. v18}, Lcom/android/server/wm/WindowState;->getMultiWindowStyleLw()Lcom/samsung/android/multiwindow/MultiWindowStyle;

    move-result-object v7

    invoke-virtual {v7}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->isCascade()Z

    move-result v7

    if-eqz v7, :cond_385

    .line 11032
    invoke-virtual/range {v29 .. v29}, Landroid/graphics/Rect;->width()I

    move-result v7

    int-to-float v7, v7

    move-object/from16 v0, v43

    iget v8, v0, Landroid/view/MagnificationSpec;->scale:F

    mul-float/2addr v7, v8

    float-to-int v0, v7

    move/from16 v46, v0

    .line 11033
    .local v46, "w":I
    invoke-virtual/range {v29 .. v29}, Landroid/graphics/Rect;->height()I

    move-result v7

    int-to-float v7, v7

    move-object/from16 v0, v43

    iget v8, v0, Landroid/view/MagnificationSpec;->scale:F

    mul-float/2addr v7, v8

    float-to-int v0, v7

    move/from16 v30, v0

    .line 11034
    .local v30, "h":I
    move/from16 v0, v35

    int-to-float v7, v0

    move-object/from16 v0, v29

    iget v8, v0, Landroid/graphics/Rect;->left:I

    int-to-float v8, v8

    move-object/from16 v0, v43

    iget v13, v0, Landroid/view/MagnificationSpec;->scale:F

    mul-float/2addr v8, v13

    add-float/2addr v7, v8

    float-to-int v7, v7

    move-object/from16 v0, v29

    iput v7, v0, Landroid/graphics/Rect;->left:I

    .line 11035
    move/from16 v0, v36

    int-to-float v7, v0

    move-object/from16 v0, v29

    iget v8, v0, Landroid/graphics/Rect;->top:I

    int-to-float v8, v8

    move-object/from16 v0, v43

    iget v13, v0, Landroid/view/MagnificationSpec;->scale:F

    mul-float/2addr v8, v13

    add-float/2addr v7, v8

    float-to-int v7, v7

    move-object/from16 v0, v29

    iput v7, v0, Landroid/graphics/Rect;->top:I

    .line 11036
    move-object/from16 v0, v29

    iget v7, v0, Landroid/graphics/Rect;->top:I

    add-int v7, v7, v30

    move-object/from16 v0, v29

    iput v7, v0, Landroid/graphics/Rect;->bottom:I

    .line 11037
    move-object/from16 v0, v29

    iget v7, v0, Landroid/graphics/Rect;->left:I

    add-int v7, v7, v46

    move-object/from16 v0, v29

    iput v7, v0, Landroid/graphics/Rect;->right:I
    :try_end_367
    .catch Ljava/lang/Exception; {:try_start_2c5 .. :try_end_367} :catch_3da
    .catchall {:try_start_2c5 .. :try_end_367} :catchall_1d8

    .line 11051
    .end local v30    # "h":I
    .end local v35    # "offsetX":I
    .end local v36    # "offsetY":I
    .end local v43    # "spec":Landroid/view/MagnificationSpec;
    .end local v46    # "w":I
    :cond_367
    :goto_367
    if-nez p5, :cond_3dc

    .line 11053
    const/4 v7, 0x0

    const/4 v8, 0x0

    :try_start_36b
    move-object/from16 v0, v29

    move/from16 v1, v28

    move/from16 v2, v25

    invoke-virtual {v0, v7, v8, v1, v2}, Landroid/graphics/Rect;->intersect(IIII)Z

    move-result v7

    if-nez v7, :cond_37a

    .line 11054
    invoke-virtual/range {v29 .. v29}, Landroid/graphics/Rect;->setEmpty()V

    .line 11060
    :cond_37a
    :goto_37a
    invoke-virtual/range {v29 .. v29}, Landroid/graphics/Rect;->isEmpty()Z

    move-result v7

    if-eqz v7, :cond_3e8

    .line 11061
    const/16 v37, 0x0

    monitor-exit v51
    :try_end_383
    .catchall {:try_start_36b .. :try_end_383} :catchall_1d8

    goto/16 :goto_12

    .line 11039
    .restart local v35    # "offsetX":I
    .restart local v36    # "offsetY":I
    .restart local v43    # "spec":Landroid/view/MagnificationSpec;
    :cond_385
    move/from16 v0, v36

    int-to-float v7, v0

    :try_start_388
    move-object/from16 v0, v29

    iget v8, v0, Landroid/graphics/Rect;->top:I

    int-to-float v8, v8

    move-object/from16 v0, v43

    iget v13, v0, Landroid/view/MagnificationSpec;->scale:F

    mul-float/2addr v8, v13

    add-float/2addr v7, v8

    float-to-int v7, v7

    move/from16 v0, v35

    int-to-float v8, v0

    invoke-virtual/range {v29 .. v29}, Landroid/graphics/Rect;->width()I

    move-result v13

    int-to-float v13, v13

    move-object/from16 v0, v43

    iget v0, v0, Landroid/view/MagnificationSpec;->scale:F

    move/from16 v52, v0

    mul-float v13, v13, v52

    add-float/2addr v8, v13

    float-to-int v8, v8

    move/from16 v0, v36

    int-to-float v13, v0

    move-object/from16 v0, v29

    iget v0, v0, Landroid/graphics/Rect;->top:I

    move/from16 v52, v0

    move/from16 v0, v52

    int-to-float v0, v0

    move/from16 v52, v0

    move-object/from16 v0, v43

    iget v0, v0, Landroid/view/MagnificationSpec;->scale:F

    move/from16 v53, v0

    mul-float v52, v52, v53

    add-float v13, v13, v52

    invoke-virtual/range {v29 .. v29}, Landroid/graphics/Rect;->height()I

    move-result v52

    move/from16 v0, v52

    int-to-float v0, v0

    move/from16 v52, v0

    move-object/from16 v0, v43

    iget v0, v0, Landroid/view/MagnificationSpec;->scale:F

    move/from16 v53, v0

    mul-float v52, v52, v53

    add-float v13, v13, v52

    float-to-int v13, v13

    move-object/from16 v0, v29

    move/from16 v1, v35

    invoke-virtual {v0, v1, v7, v8, v13}, Landroid/graphics/Rect;->intersect(IIII)Z
    :try_end_3d9
    .catch Ljava/lang/Exception; {:try_start_388 .. :try_end_3d9} :catch_3da
    .catchall {:try_start_388 .. :try_end_3d9} :catchall_1d8

    goto :goto_367

    .line 11045
    .end local v35    # "offsetX":I
    .end local v36    # "offsetY":I
    .end local v43    # "spec":Landroid/view/MagnificationSpec;
    :catch_3da
    move-exception v7

    goto :goto_367

    .line 11058
    :cond_3dc
    const/4 v7, 0x0

    const/4 v8, 0x0

    :try_start_3de
    move-object/from16 v0, v29

    move/from16 v1, v28

    move/from16 v2, v25

    invoke-virtual {v0, v7, v8, v1, v2}, Landroid/graphics/Rect;->set(IIII)V

    goto :goto_37a

    .line 11064
    :cond_3e8
    if-gez p3, :cond_3ee

    .line 11065
    invoke-virtual/range {v29 .. v29}, Landroid/graphics/Rect;->width()I

    move-result p3

    .line 11067
    :cond_3ee
    if-gez p4, :cond_3f4

    .line 11068
    invoke-virtual/range {v29 .. v29}, Landroid/graphics/Rect;->height()I

    move-result p4

    .line 11073
    :cond_3f4
    new-instance v6, Landroid/graphics/Rect;

    move-object/from16 v0, v29

    invoke-direct {v6, v0}, Landroid/graphics/Rect;-><init>(Landroid/graphics/Rect;)V

    .line 11074
    .local v6, "crop":Landroid/graphics/Rect;
    move/from16 v0, p3

    int-to-float v7, v0

    invoke-virtual/range {v29 .. v29}, Landroid/graphics/Rect;->width()I

    move-result v8

    int-to-float v8, v8

    div-float/2addr v7, v8

    move/from16 v0, p4

    int-to-float v8, v0

    invoke-virtual/range {v29 .. v29}, Landroid/graphics/Rect;->height()I

    move-result v13

    int-to-float v13, v13

    div-float/2addr v8, v13

    cmpg-float v7, v7, v8

    if-gez v7, :cond_4d3

    .line 11075
    move/from16 v0, p3

    int-to-float v7, v0

    move/from16 v0, p4

    int-to-float v8, v0

    div-float/2addr v7, v8

    invoke-virtual/range {v29 .. v29}, Landroid/graphics/Rect;->height()I

    move-result v8

    int-to-float v8, v8

    mul-float/2addr v7, v8

    float-to-int v0, v7

    move/from16 v24, v0

    .line 11076
    .local v24, "cropWidth":I
    iget v7, v6, Landroid/graphics/Rect;->left:I

    add-int v7, v7, v24

    iput v7, v6, Landroid/graphics/Rect;->right:I

    .line 11083
    .end local v24    # "cropWidth":I
    :goto_427
    if-eqz v18, :cond_464

    invoke-virtual/range {v18 .. v18}, Lcom/android/server/wm/WindowState;->getMultiWindowStyleLw()Lcom/samsung/android/multiwindow/MultiWindowStyle;

    move-result-object v7

    invoke-virtual {v7}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->isCascade()Z

    move-result v7

    if-eqz v7, :cond_464

    .line 11084
    move-object/from16 v0, p0

    iget v7, v0, mThicknessBorderPaintInner:I

    if-gez v7, :cond_44c

    .line 11085
    move-object/from16 v0, p0

    iget-object v7, v0, mContext:Landroid/content/Context;

    invoke-virtual {v7}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    move-result-object v7

    const v8, 0x10502c2

    invoke-virtual {v7, v8}, Landroid/content/res/Resources;->getDimensionPixelSize(I)I

    move-result v7

    move-object/from16 v0, p0

    iput v7, v0, mThicknessBorderPaintInner:I

    .line 11088
    :cond_44c
    move-object/from16 v0, p0

    iget v7, v0, mThicknessBorderPaintInner:I

    if-lez v7, :cond_464

    .line 11089
    iget v7, v6, Landroid/graphics/Rect;->left:I

    move-object/from16 v0, p0

    iget v8, v0, mThicknessBorderPaintInner:I

    add-int/2addr v7, v8

    iput v7, v6, Landroid/graphics/Rect;->left:I

    .line 11090
    iget v7, v6, Landroid/graphics/Rect;->right:I

    move-object/from16 v0, p0

    iget v8, v0, mThicknessBorderPaintInner:I

    sub-int/2addr v7, v8

    iput v7, v6, Landroid/graphics/Rect;->right:I

    .line 11096
    :cond_464
    if-eqz v18, :cond_477

    move-object/from16 v0, v18

    iget v7, v0, Lcom/android/server/wm/WindowState;->mDssScale:F

    const/high16 v8, 0x3f800000    # 1.0f

    cmpl-float v7, v7, v8

    if-eqz v7, :cond_477

    .line 11097
    move-object/from16 v0, v18

    iget v7, v0, Lcom/android/server/wm/WindowState;->mDssScale:F

    invoke-virtual {v6, v7}, Landroid/graphics/Rect;->scale(F)V

    .line 11105
    :cond_477
    invoke-virtual/range {v26 .. v26}, Lcom/android/server/wm/DisplayContent;->getDisplay()Landroid/view/Display;

    move-result-object v7

    invoke-virtual {v7}, Landroid/view/Display;->getRotation()I

    move-result v12

    .line 11108
    .local v12, "rot":I
    const/4 v7, 0x1

    if-eq v12, v7, :cond_485

    const/4 v7, 0x3

    if-ne v12, v7, :cond_489

    .line 11109
    :cond_485
    const/4 v7, 0x1

    if-ne v12, v7, :cond_4eb

    const/4 v12, 0x3

    .line 11114
    :cond_489
    :goto_489
    move/from16 v0, v28

    move/from16 v1, v25

    invoke-static {v6, v12, v0, v1}, convertCropForSurfaceFlinger(Landroid/graphics/Rect;III)V

    .line 11127
    move-object/from16 v0, p0

    iget-object v7, v0, mAnimator:Lcom/android/server/wm/WindowAnimator;

    const/4 v8, 0x0

    invoke-virtual {v7, v8}, Lcom/android/server/wm/WindowAnimator;->getScreenRotationAnimationLocked(I)Lcom/android/server/wm/ScreenRotationAnimation;

    move-result-object v41

    .line 11129
    .local v41, "screenRotationAnimation":Lcom/android/server/wm/ScreenRotationAnimation;
    if-eqz v41, :cond_4ed

    invoke-virtual/range {v41 .. v41}, Lcom/android/server/wm/ScreenRotationAnimation;->isAnimating()Z

    move-result v7

    if-eqz v7, :cond_4ed

    const/4 v11, 0x1

    .local v11, "inRotation":Z
    :goto_4a2
    move/from16 v7, p3

    move/from16 v8, p4

    move/from16 v13, p2

    .line 11134
    invoke-static/range {v6 .. v13}, Landroid/view/SurfaceControl;->screenshot(Landroid/graphics/Rect;IIIIZII)Landroid/graphics/Bitmap;

    move-result-object v20

    .line 11136
    if-nez v20, :cond_525

    .line 11138
    if-eqz v31, :cond_4ef

    .line 11139
    sget-object v7, Landroid/graphics/Bitmap$Config;->ARGB_8888:Landroid/graphics/Bitmap$Config;

    move/from16 v0, p3

    move/from16 v1, p4

    invoke-static {v0, v1, v7}, Landroid/graphics/Bitmap;->createBitmap(IILandroid/graphics/Bitmap$Config;)Landroid/graphics/Bitmap;

    move-result-object v20

    .line 11140
    const v7, -0xcccccd

    move-object/from16 v0, v20

    invoke-virtual {v0, v7}, Landroid/graphics/Bitmap;->eraseColor(I)V

    .line 11141
    const-string v7, "WindowManager"

    const-string v8, "Empty screenshot because it is a secure window"

    invoke-static {v7, v8}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 11153
    :cond_4c9
    :goto_4c9
    monitor-exit v51
    :try_end_4ca
    .catchall {:try_start_3de .. :try_end_4ca} :catchall_1d8

    .line 11180
    invoke-virtual/range {v20 .. v20}, Landroid/graphics/Bitmap;->createAshmemBitmap()Landroid/graphics/Bitmap;

    move-result-object v37

    .line 11181
    .local v37, "ret":Landroid/graphics/Bitmap;
    invoke-virtual/range {v20 .. v20}, Landroid/graphics/Bitmap;->recycle()V

    goto/16 :goto_12

    .line 11078
    .end local v11    # "inRotation":Z
    .end local v12    # "rot":I
    .end local v37    # "ret":Landroid/graphics/Bitmap;
    .end local v41    # "screenRotationAnimation":Lcom/android/server/wm/ScreenRotationAnimation;
    :cond_4d3
    move/from16 v0, p4

    int-to-float v7, v0

    move/from16 v0, p3

    int-to-float v8, v0

    div-float/2addr v7, v8

    :try_start_4da
    invoke-virtual/range {v29 .. v29}, Landroid/graphics/Rect;->width()I

    move-result v8

    int-to-float v8, v8

    mul-float/2addr v7, v8

    float-to-int v0, v7

    move/from16 v23, v0

    .line 11079
    .local v23, "cropHeight":I
    iget v7, v6, Landroid/graphics/Rect;->top:I

    add-int v7, v7, v23

    iput v7, v6, Landroid/graphics/Rect;->bottom:I

    goto/16 :goto_427

    .line 11109
    .end local v23    # "cropHeight":I
    .restart local v12    # "rot":I
    :cond_4eb
    const/4 v12, 0x1

    goto :goto_489

    .line 11129
    .restart local v41    # "screenRotationAnimation":Lcom/android/server/wm/ScreenRotationAnimation;
    :cond_4ed
    const/4 v11, 0x0

    goto :goto_4a2

    .line 11144
    .restart local v11    # "inRotation":Z
    :cond_4ef
    const-string v7, "WindowManager"

    new-instance v8, Ljava/lang/StringBuilder;

    invoke-direct {v8}, Ljava/lang/StringBuilder;-><init>()V

    const-string v13, "Screenshot failure taking screenshot for ("

    invoke-virtual {v8, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v8

    move/from16 v0, v28

    invoke-virtual {v8, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v8

    const-string/jumbo v13, "x"

    invoke-virtual {v8, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v8

    move/from16 v0, v25

    invoke-virtual {v8, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v8

    const-string v13, ") to layer "

    invoke-virtual {v8, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v8

    invoke-virtual {v8, v10}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v8

    invoke-virtual {v8}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v8

    invoke-static {v7, v8}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 11146
    const/16 v37, 0x0

    monitor-exit v51

    goto/16 :goto_12

    .line 11149
    :cond_525
    if-eqz v31, :cond_4c9

    .line 11150
    const-string v7, "WindowManager"

    const-string v8, "Screen shot captured even though it is a secure window"

    invoke-static {v7, v8}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_52e
    .catchall {:try_start_4da .. :try_end_52e} :catchall_1d8

    goto :goto_4c9

    .line 10869
    .end local v6    # "crop":Landroid/graphics/Rect;
    .end local v11    # "inRotation":Z
    .end local v12    # "rot":I
    .end local v32    # "i":I
    .end local v41    # "screenRotationAnimation":Lcom/android/server/wm/ScreenRotationAnimation;
    .end local v49    # "windows":Lcom/android/server/wm/WindowList;
    :catch_52f
    move-exception v7

    goto/16 :goto_98
.end method

.method sendNewConfiguration()V
    .registers 3

    .prologue
    .line 12427
    :try_start_0
    iget-object v0, p0, mActivityManager:Landroid/app/IActivityManager;

    const/4 v1, 0x0

    invoke-interface {v0, v1}, Landroid/app/IActivityManager;->updateConfiguration(Landroid/content/res/Configuration;)V
    :try_end_6
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_6} :catch_7

    .line 12430
    :goto_6
    return-void

    .line 12428
    :catch_7
    move-exception v0

    goto :goto_6
.end method

.method public sendWindowWallpaperCommandLocked(Lcom/android/server/wm/WindowState;Ljava/lang/String;IIILandroid/os/Bundle;Z)Landroid/os/Bundle;
    .registers 25
    .param p1, "window"    # Lcom/android/server/wm/WindowState;
    .param p2, "action"    # Ljava/lang/String;
    .param p3, "x"    # I
    .param p4, "y"    # I
    .param p5, "z"    # I
    .param p6, "extras"    # Landroid/os/Bundle;
    .param p7, "sync"    # Z

    .prologue
    .line 5121
    move-object/from16 v0, p0

    iget-object v13, v0, mWallpaperTokens:Ljava/util/ArrayList;

    .line 5122
    .local v13, "mWallpaperTokens":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/WindowToken;>;"
    move-object/from16 v0, p0

    iget-object v12, v0, mWallpaperTarget:Lcom/android/server/wm/WindowState;

    .line 5123
    .local v12, "mWallpaperTarget":Lcom/android/server/wm/WindowState;
    move-object/from16 v0, p0

    iget-object v10, v0, mLowerWallpaperTarget:Lcom/android/server/wm/WindowState;

    .line 5124
    .local v10, "mLowerWallpaperTarget":Lcom/android/server/wm/WindowState;
    move-object/from16 v0, p0

    iget-object v11, v0, mUpperWallpaperTarget:Lcom/android/server/wm/WindowState;

    .line 5128
    .local v11, "mUpperWallpaperTarget":Lcom/android/server/wm/WindowState;
    move-object/from16 v0, p1

    if-eq v0, v12, :cond_1c

    move-object/from16 v0, p1

    if-eq v0, v10, :cond_1c

    move-object/from16 v0, p1

    if-ne v0, v11, :cond_5b

    .line 5130
    :cond_1c
    move/from16 v9, p7

    .line 5131
    .local v9, "doWait":Z
    invoke-virtual {v13}, Ljava/util/ArrayList;->size()I

    move-result v1

    add-int/lit8 v8, v1, -0x1

    .local v8, "curTokenNdx":I
    :goto_24
    if-ltz v8, :cond_59

    .line 5132
    invoke-virtual {v13, v8}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/wm/WindowToken;

    iget-object v0, v1, Lcom/android/server/wm/WindowToken;->windows:Lcom/android/server/wm/WindowList;

    move-object/from16 v16, v0

    .line 5133
    .local v16, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual/range {v16 .. v16}, Lcom/android/server/wm/WindowList;->size()I

    move-result v1

    add-int/lit8 v15, v1, -0x1

    .local v15, "wallpaperNdx":I
    :goto_36
    if-ltz v15, :cond_56

    .line 5134
    move-object/from16 v0, v16

    invoke-virtual {v0, v15}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v14

    check-cast v14, Lcom/android/server/wm/WindowState;

    .line 5136
    .local v14, "wallpaper":Lcom/android/server/wm/WindowState;
    :try_start_40
    iget-object v1, v14, Lcom/android/server/wm/WindowState;->mClient:Landroid/view/IWindow;

    move-object/from16 v2, p2

    move/from16 v3, p3

    move/from16 v4, p4

    move/from16 v5, p5

    move-object/from16 v6, p6

    move/from16 v7, p7

    invoke-interface/range {v1 .. v7}, Landroid/view/IWindow;->dispatchWallpaperCommand(Ljava/lang/String;IIILandroid/os/Bundle;Z)V
    :try_end_51
    .catch Landroid/os/RemoteException; {:try_start_40 .. :try_end_51} :catch_5d

    .line 5139
    const/16 p7, 0x0

    .line 5133
    :goto_53
    add-int/lit8 v15, v15, -0x1

    goto :goto_36

    .line 5131
    .end local v14    # "wallpaper":Lcom/android/server/wm/WindowState;
    :cond_56
    add-int/lit8 v8, v8, -0x1

    goto :goto_24

    .line 5145
    .end local v15    # "wallpaperNdx":I
    .end local v16    # "windows":Lcom/android/server/wm/WindowList;
    :cond_59
    if-eqz v9, :cond_5b

    .line 5150
    .end local v8    # "curTokenNdx":I
    .end local v9    # "doWait":Z
    :cond_5b
    const/4 v1, 0x0

    return-object v1

    .line 5140
    .restart local v8    # "curTokenNdx":I
    .restart local v9    # "doWait":Z
    .restart local v14    # "wallpaper":Lcom/android/server/wm/WindowState;
    .restart local v15    # "wallpaperNdx":I
    .restart local v16    # "windows":Lcom/android/server/wm/WindowList;
    :catch_5d
    move-exception v1

    goto :goto_53
.end method

.method public setAdaptiveEvent(Ljava/lang/String;Landroid/widget/RemoteViews;Landroid/widget/RemoteViews;)V
    .registers 5
    .param p1, "requestClass"    # Ljava/lang/String;
    .param p2, "smallView"    # Landroid/widget/RemoteViews;
    .param p3, "bigView"    # Landroid/widget/RemoteViews;

    .prologue
    .line 9935
    iget-object v0, p0, mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v0, p1, p2, p3}, Landroid/view/WindowManagerPolicy;->setAdaptiveEvent(Ljava/lang/String;Landroid/widget/RemoteViews;Landroid/widget/RemoteViews;)V

    .line 9936
    return-void
.end method

.method public setAnimationScale(IF)V
    .registers 5
    .param p1, "which"    # I
    .param p2, "scale"    # F

    .prologue
    .line 10036
    const-string v0, "android.permission.SET_ANIMATION_SCALE"

    const-string/jumbo v1, "setAnimationScale()"

    invoke-virtual {p0, v0, v1}, checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v0

    if-nez v0, :cond_13

    .line 10038
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Requires SET_ANIMATION_SCALE permission"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 10041
    :cond_13
    invoke-static {p2}, fixScale(F)F

    move-result p2

    .line 10042
    packed-switch p1, :pswitch_data_32

    .line 10047
    :goto_1a
    sget-boolean v0, SAFE_DEBUG:Z

    if-eqz v0, :cond_21

    .line 10048
    invoke-direct {p0}, trackingAnimationChangingHistory()V

    .line 10051
    :cond_21
    iget-object v0, p0, mH:Lcom/android/server/wm/WindowManagerService$H;

    const/16 v1, 0xe

    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowManagerService$H;->sendEmptyMessage(I)Z

    .line 10052
    return-void

    .line 10043
    :pswitch_29
    iput p2, p0, mWindowAnimationScaleSetting:F

    goto :goto_1a

    .line 10044
    :pswitch_2c
    iput p2, p0, mTransitionAnimationScaleSetting:F

    goto :goto_1a

    .line 10045
    :pswitch_2f
    iput p2, p0, mAnimatorDurationScaleSetting:F

    goto :goto_1a

    .line 10042
    :pswitch_data_32
    .packed-switch 0x0
        :pswitch_29
        :pswitch_2c
        :pswitch_2f
    .end packed-switch
.end method

.method public setAnimationScales([F)V
    .registers 6
    .param p1, "scales"    # [F

    .prologue
    const/4 v3, 0x2

    const/4 v2, 0x1

    .line 10056
    const-string v0, "android.permission.SET_ANIMATION_SCALE"

    const-string/jumbo v1, "setAnimationScale()"

    invoke-virtual {p0, v0, v1}, checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v0

    if-nez v0, :cond_15

    .line 10058
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Requires SET_ANIMATION_SCALE permission"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 10061
    :cond_15
    if-eqz p1, :cond_3e

    .line 10062
    array-length v0, p1

    if-lt v0, v2, :cond_23

    .line 10063
    const/4 v0, 0x0

    aget v0, p1, v0

    invoke-static {v0}, fixScale(F)F

    move-result v0

    iput v0, p0, mWindowAnimationScaleSetting:F

    .line 10065
    :cond_23
    array-length v0, p1

    if-lt v0, v3, :cond_2e

    .line 10066
    aget v0, p1, v2

    invoke-static {v0}, fixScale(F)F

    move-result v0

    iput v0, p0, mTransitionAnimationScaleSetting:F

    .line 10068
    :cond_2e
    array-length v0, p1

    const/4 v1, 0x3

    if-lt v0, v1, :cond_3e

    .line 10069
    aget v0, p1, v3

    invoke-static {v0}, fixScale(F)F

    move-result v0

    iput v0, p0, mAnimatorDurationScaleSetting:F

    .line 10070
    const/4 v0, 0x0

    invoke-virtual {p0, v0}, dispatchNewAnimatorScaleLocked(Lcom/android/server/wm/Session;)V

    .line 10074
    :cond_3e
    sget-boolean v0, SAFE_DEBUG:Z

    if-eqz v0, :cond_45

    .line 10075
    invoke-direct {p0}, trackingAnimationChangingHistory()V

    .line 10078
    :cond_45
    iget-object v0, p0, mH:Lcom/android/server/wm/WindowManagerService$H;

    const/16 v1, 0xe

    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowManagerService$H;->sendEmptyMessage(I)Z

    .line 10079
    return-void
.end method

.method public setAppBackWindow(I)V
    .registers 6
    .param p1, "displayId"    # I

    .prologue
    .line 23209
    iget-object v1, p0, mH:Lcom/android/server/wm/WindowManagerService$H;

    const/16 v2, 0xca

    const/4 v3, 0x0

    invoke-virtual {v1, v2, p1, v3}, Lcom/android/server/wm/WindowManagerService$H;->obtainMessage(III)Landroid/os/Message;

    move-result-object v0

    .line 23210
    .local v0, "m":Landroid/os/Message;
    iget-object v1, p0, mH:Lcom/android/server/wm/WindowManagerService$H;

    invoke-virtual {v1, v0}, Lcom/android/server/wm/WindowManagerService$H;->sendMessageAtFrontOfQueue(Landroid/os/Message;)Z

    .line 23211
    return-void
.end method

.method public setAppFullscreen(Landroid/os/IBinder;Z)V
    .registers 6
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "toOpaque"    # Z

    .prologue
    .line 8281
    iget-object v2, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v2

    .line 8282
    :try_start_3
    invoke-virtual {p0, p1}, findAppWindowToken(Landroid/os/IBinder;)Lcom/android/server/wm/AppWindowToken;

    move-result-object v0

    .line 8283
    .local v0, "atoken":Lcom/android/server/wm/AppWindowToken;
    if-eqz v0, :cond_11

    .line 8284
    iput-boolean p2, v0, Lcom/android/server/wm/AppWindowToken;->appFullscreen:Z

    .line 8285
    invoke-virtual {p0, p1, p2}, setWindowOpaqueLocked(Landroid/os/IBinder;Z)V

    .line 8286
    invoke-virtual {p0}, requestTraversalLocked()V

    .line 8288
    :cond_11
    monitor-exit v2

    .line 8289
    return-void

    .line 8288
    .end local v0    # "atoken":Lcom/android/server/wm/AppWindowToken;
    :catchall_13
    move-exception v1

    monitor-exit v2
    :try_end_15
    .catchall {:try_start_3 .. :try_end_15} :catchall_13

    throw v1
.end method

.method public setAppMultiWindowStyle(Landroid/view/IApplicationToken;Lcom/samsung/android/multiwindow/MultiWindowStyle;ZI)V
    .registers 29
    .param p1, "token"    # Landroid/view/IApplicationToken;
    .param p2, "appMultiWindowStyle"    # Lcom/samsung/android/multiwindow/MultiWindowStyle;
    .param p3, "bLayoutNeeded"    # Z
    .param p4, "notifyReason"    # I

    .prologue
    .line 20879
    sget-boolean v19, DEBUG_MULTIWINDOW:Z

    if-eqz v19, :cond_42

    .line 20880
    const-string v19, "WindowManager"

    new-instance v20, Ljava/lang/StringBuilder;

    invoke-direct/range {v20 .. v20}, Ljava/lang/StringBuilder;-><init>()V

    const-string v21, "WindowManagerService.setAppZone( token = "

    invoke-virtual/range {v20 .. v21}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v20

    move-object/from16 v0, v20

    move-object/from16 v1, p1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v20

    const-string v21, ", appMultiWindowStyle = "

    invoke-virtual/range {v20 .. v21}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v20

    move-object/from16 v0, v20

    move-object/from16 v1, p2

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v20

    const-string v21, " notifyReason="

    invoke-virtual/range {v20 .. v21}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v20

    move-object/from16 v0, v20

    move/from16 v1, p4

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v20

    const-string v21, " )"

    invoke-virtual/range {v20 .. v21}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v20

    invoke-virtual/range {v20 .. v20}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v20

    invoke-static/range {v19 .. v20}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 20883
    :cond_42
    const-string v19, "android.permission.MANAGE_APP_TOKENS"

    const-string v20, "addAppToken()"

    move-object/from16 v0, p0

    move-object/from16 v1, v19

    move-object/from16 v2, v20

    invoke-virtual {v0, v1, v2}, checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v19

    if-nez v19, :cond_5a

    .line 20884
    new-instance v19, Ljava/lang/SecurityException;

    const-string v20, "Requires MANAGE_APP_TOKENS permission"

    invoke-direct/range {v19 .. v20}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v19

    .line 20887
    :cond_5a
    move-object/from16 v0, p0

    iget-object v0, v0, mWindowMap:Ljava/util/HashMap;

    move-object/from16 v20, v0

    monitor-enter v20

    .line 20888
    :try_start_61
    invoke-interface/range {p1 .. p1}, Landroid/view/IApplicationToken;->asBinder()Landroid/os/IBinder;

    move-result-object v19

    move-object/from16 v0, p0

    move-object/from16 v1, v19

    invoke-virtual {v0, v1}, findAppWindowToken(Landroid/os/IBinder;)Lcom/android/server/wm/AppWindowToken;

    move-result-object v18

    .line 20889
    .local v18, "wtoken":Lcom/android/server/wm/AppWindowToken;
    if-nez v18, :cond_91

    .line 20890
    const-string v19, "WindowManager"

    new-instance v21, Ljava/lang/StringBuilder;

    invoke-direct/range {v21 .. v21}, Ljava/lang/StringBuilder;-><init>()V

    const-string v22, "Attempted to change zone for non-existent app token: "

    invoke-virtual/range {v21 .. v22}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v21

    move-object/from16 v0, v21

    move-object/from16 v1, p1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v21

    invoke-virtual/range {v21 .. v21}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v21

    move-object/from16 v0, v19

    move-object/from16 v1, v21

    invoke-static {v0, v1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 20891
    monitor-exit v20

    .line 21056
    :goto_90
    return-void

    .line 20899
    :cond_91
    move-object/from16 v0, p0

    iget-object v8, v0, mAppTransition:Lcom/android/server/wm/AppTransition;

    .line 20902
    .local v8, "mAppTransition":Lcom/android/server/wm/AppTransition;
    const/4 v15, 0x0

    .line 20903
    .local v15, "transit":I
    new-instance v12, Ljava/util/ArrayList;

    invoke-direct {v12}, Ljava/util/ArrayList;-><init>()V

    .line 20904
    .local v12, "targetTokens":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/AppWindowToken;>;"
    const/16 v19, 0x0

    move/from16 v0, v19

    move-object/from16 v1, v18

    iput-boolean v0, v1, Lcom/android/server/wm/AppWindowToken;->mWaitingForMaximizeAnim:Z

    .line 20907
    move-object/from16 v0, v18

    iget-object v0, v0, Lcom/android/server/wm/AppWindowToken;->appMultiWindowStyle:Lcom/samsung/android/multiwindow/MultiWindowStyle;

    move-object/from16 v19, v0

    move-object/from16 v0, p2

    move-object/from16 v1, v19

    invoke-virtual {v0, v1}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->equals(Lcom/samsung/android/multiwindow/MultiWindowStyle;)Z

    move-result v19

    if-nez v19, :cond_2e2

    .line 20908
    invoke-virtual/range {v18 .. v18}, Lcom/android/server/wm/AppWindowToken;->isVisible()Z

    move-result v19

    if-nez v19, :cond_c1

    move-object/from16 v0, v18

    iget-boolean v0, v0, Lcom/android/server/wm/AppWindowToken;->hiddenRequested:Z

    move/from16 v19, v0

    if-nez v19, :cond_154

    :cond_c1
    const/4 v7, 0x1

    .line 20909
    .local v7, "isVisible":Z
    :goto_c2
    if-eqz v7, :cond_28d

    .line 20910
    const/4 v9, 0x0

    .line 20911
    .local v9, "styleChanging":Z
    move-object/from16 v0, v18

    iget-object v0, v0, Lcom/android/server/wm/AppWindowToken;->appMultiWindowStyle:Lcom/samsung/android/multiwindow/MultiWindowStyle;

    move-object/from16 v19, v0

    invoke-virtual/range {v19 .. v19}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->getType()I

    move-result v19

    packed-switch v19, :pswitch_data_3ea

    .line 20964
    :cond_d2
    :goto_d2
    if-eqz v9, :cond_28d

    move-object/from16 v0, v18

    iget v0, v0, Lcom/android/server/wm/AppWindowToken;->mTargetTransit:I

    move/from16 v19, v0

    move/from16 v0, v19

    if-eq v15, v0, :cond_28d

    .line 20965
    const/16 v19, 0x1

    move/from16 v0, v19

    move-object/from16 v1, v18

    iput-boolean v0, v1, Lcom/android/server/wm/AppWindowToken;->mMultiWindowStyleChanging:Z

    .line 20966
    move-object/from16 v0, v18

    iput v15, v0, Lcom/android/server/wm/AppWindowToken;->mTargetTransit:I

    .line 20967
    move-object/from16 v0, p0

    iget-object v0, v0, mH:Lcom/android/server/wm/WindowManagerService$H;

    move-object/from16 v19, v0

    const/16 v21, 0x68

    move-object/from16 v0, v18

    iget-object v0, v0, Lcom/android/server/wm/AppWindowToken;->token:Landroid/os/IBinder;

    move-object/from16 v22, v0

    move-object/from16 v0, v19

    move/from16 v1, v21

    move-object/from16 v2, v22

    invoke-virtual {v0, v1, v2}, Lcom/android/server/wm/WindowManagerService$H;->removeMessages(ILjava/lang/Object;)V

    .line 20968
    move-object/from16 v0, p0

    iget-object v0, v0, mH:Lcom/android/server/wm/WindowManagerService$H;

    move-object/from16 v19, v0

    move-object/from16 v0, p0

    iget-object v0, v0, mH:Lcom/android/server/wm/WindowManagerService$H;

    move-object/from16 v21, v0

    const/16 v22, 0x68

    move-object/from16 v0, v18

    iget-object v0, v0, Lcom/android/server/wm/AppWindowToken;->token:Landroid/os/IBinder;

    move-object/from16 v23, v0

    invoke-virtual/range {v21 .. v23}, Lcom/android/server/wm/WindowManagerService$H;->obtainMessage(ILjava/lang/Object;)Landroid/os/Message;

    move-result-object v21

    const-wide/16 v22, 0xbb8

    move-object/from16 v0, v19

    move-object/from16 v1, v21

    move-wide/from16 v2, v22

    invoke-virtual {v0, v1, v2, v3}, Lcom/android/server/wm/WindowManagerService$H;->sendMessageDelayed(Landroid/os/Message;J)Z

    .line 20969
    move-object/from16 v0, v18

    invoke-virtual {v12, v0}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 20971
    move-object/from16 v0, v18

    iget-boolean v0, v0, Lcom/android/server/wm/AppWindowToken;->appFullscreen:Z

    move/from16 v19, v0

    if-nez v19, :cond_28d

    .line 20973
    move-object/from16 v0, v18

    iget-object v5, v0, Lcom/android/server/wm/AppWindowToken;->mTask:Lcom/android/server/wm/Task;

    .line 20974
    .local v5, "currentTask":Lcom/android/server/wm/Task;
    if-eqz v5, :cond_28d

    iget-object v0, v5, Lcom/android/server/wm/Task;->mStack:Lcom/android/server/wm/TaskStack;

    move-object/from16 v19, v0

    if-eqz v19, :cond_28d

    .line 20976
    iget-object v14, v5, Lcom/android/server/wm/Task;->mAppTokens:Lcom/android/server/wm/AppTokenList;

    .line 20977
    .local v14, "tokens":Lcom/android/server/wm/AppTokenList;
    invoke-virtual {v14}, Lcom/android/server/wm/AppTokenList;->size()I

    move-result v19

    add-int/lit8 v13, v19, -0x1

    .local v13, "tokenNdx":I
    :goto_145
    if-ltz v13, :cond_28d

    .line 20978
    invoke-virtual {v14, v13}, Lcom/android/server/wm/AppTokenList;->get(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/server/wm/AppWindowToken;

    .line 20979
    .local v4, "atoken":Lcom/android/server/wm/AppWindowToken;
    move-object/from16 v0, v18

    if-ne v4, v0, :cond_240

    .line 20977
    :cond_151
    add-int/lit8 v13, v13, -0x1

    goto :goto_145

    .line 20908
    .end local v4    # "atoken":Lcom/android/server/wm/AppWindowToken;
    .end local v5    # "currentTask":Lcom/android/server/wm/Task;
    .end local v7    # "isVisible":Z
    .end local v9    # "styleChanging":Z
    .end local v13    # "tokenNdx":I
    .end local v14    # "tokens":Lcom/android/server/wm/AppTokenList;
    :cond_154
    const/4 v7, 0x0

    goto/16 :goto_c2

    .line 20913
    .restart local v7    # "isVisible":Z
    .restart local v9    # "styleChanging":Z
    :pswitch_157
    invoke-virtual/range {p2 .. p2}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->isCascade()Z

    move-result v19

    if-eqz v19, :cond_d2

    .line 20914
    move-object/from16 v0, v18

    iget-object v0, v0, Lcom/android/server/wm/AppWindowToken;->appMultiWindowStyle:Lcom/samsung/android/multiwindow/MultiWindowStyle;

    move-object/from16 v19, v0

    const/high16 v21, 0x20000

    move-object/from16 v0, v19

    move/from16 v1, v21

    invoke-virtual {v0, v1}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->isEnabled(I)Z

    move-result v19

    if-nez v19, :cond_d2

    .line 20917
    const/4 v15, 0x7

    .line 20918
    const/16 v19, 0x64

    move/from16 v0, v19

    invoke-virtual {v8, v0}, Lcom/android/server/wm/AppTransition;->setAppTransition(I)V

    .line 20919
    const/4 v9, 0x1

    goto/16 :goto_d2

    .line 20924
    :pswitch_17a
    invoke-virtual/range {p2 .. p2}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->isNormal()Z

    move-result v19

    if-eqz v19, :cond_183

    .line 20925
    const/4 v15, 0x2

    goto/16 :goto_d2

    .line 20926
    :cond_183
    invoke-virtual/range {p2 .. p2}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->isCascade()Z

    move-result v19

    if-eqz v19, :cond_d2

    .line 20927
    const/4 v15, 0x6

    .line 20928
    const/4 v9, 0x1

    goto/16 :goto_d2

    .line 20932
    :pswitch_18d
    invoke-virtual/range {p2 .. p2}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->isNormal()Z

    move-result v19

    if-eqz v19, :cond_1d5

    .line 20933
    move-object/from16 v0, v18

    iget-object v0, v0, Lcom/android/server/wm/AppWindowToken;->appMultiWindowStyle:Lcom/samsung/android/multiwindow/MultiWindowStyle;

    move-object/from16 v19, v0

    const/high16 v21, 0x20000

    move-object/from16 v0, v19

    move/from16 v1, v21

    invoke-virtual {v0, v1}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->isEnabled(I)Z

    move-result v19

    if-eqz v19, :cond_1ca

    .line 20934
    const/16 v15, 0xa

    .line 20935
    const/4 v9, 0x1

    .line 20936
    move-object/from16 v0, v18

    iget-object v0, v0, Lcom/android/server/wm/AppWindowToken;->allAppWindows:Lcom/android/server/wm/WindowList;

    move-object/from16 v19, v0

    invoke-virtual/range {v19 .. v19}, Lcom/android/server/wm/WindowList;->iterator()Ljava/util/Iterator;

    move-result-object v6

    .local v6, "i$":Ljava/util/Iterator;
    :goto_1b2
    invoke-interface {v6}, Ljava/util/Iterator;->hasNext()Z

    move-result v19

    if-eqz v19, :cond_1d2

    invoke-interface {v6}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v16

    check-cast v16, Lcom/android/server/wm/WindowState;

    .line 20937
    .local v16, "w":Lcom/android/server/wm/WindowState;
    const/16 v19, 0x1

    move/from16 v0, v19

    move-object/from16 v1, v16

    iput-boolean v0, v1, Lcom/android/server/wm/WindowState;->mLayoutNeeded:Z

    goto :goto_1b2

    .line 21055
    .end local v6    # "i$":Ljava/util/Iterator;
    .end local v7    # "isVisible":Z
    .end local v8    # "mAppTransition":Lcom/android/server/wm/AppTransition;
    .end local v9    # "styleChanging":Z
    .end local v12    # "targetTokens":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/AppWindowToken;>;"
    .end local v15    # "transit":I
    .end local v16    # "w":Lcom/android/server/wm/WindowState;
    .end local v18    # "wtoken":Lcom/android/server/wm/AppWindowToken;
    :catchall_1c7
    move-exception v19

    monitor-exit v20
    :try_end_1c9
    .catchall {:try_start_61 .. :try_end_1c9} :catchall_1c7

    throw v19

    .line 20940
    .restart local v7    # "isVisible":Z
    .restart local v8    # "mAppTransition":Lcom/android/server/wm/AppTransition;
    .restart local v9    # "styleChanging":Z
    .restart local v12    # "targetTokens":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/AppWindowToken;>;"
    .restart local v15    # "transit":I
    .restart local v18    # "wtoken":Lcom/android/server/wm/AppWindowToken;
    :cond_1ca
    const/16 v19, 0x64

    :try_start_1cc
    move/from16 v0, v19

    invoke-virtual {v8, v0}, Lcom/android/server/wm/AppTransition;->setAppTransition(I)V

    .line 20941
    const/4 v15, 0x4

    .line 20943
    :cond_1d2
    const/4 v9, 0x1

    goto/16 :goto_d2

    .line 20944
    :cond_1d5
    invoke-virtual/range {p2 .. p2}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->isSplit()Z

    move-result v19

    if-eqz v19, :cond_1df

    .line 20945
    const/4 v15, 0x5

    .line 20946
    const/4 v9, 0x1

    goto/16 :goto_d2

    .line 20947
    :cond_1df
    move-object/from16 v0, v18

    iget-object v0, v0, Lcom/android/server/wm/AppWindowToken;->appMultiWindowStyle:Lcom/samsung/android/multiwindow/MultiWindowStyle;

    move-object/from16 v19, v0

    const/16 v21, 0x4

    move-object/from16 v0, v19

    move/from16 v1, v21

    invoke-virtual {v0, v1}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->isEnabled(I)Z

    move-result v19

    if-eqz v19, :cond_21f

    const/16 v19, 0x4

    move-object/from16 v0, p2

    move/from16 v1, v19

    invoke-virtual {v0, v1}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->isEnabled(I)Z

    move-result v19

    if-nez v19, :cond_21f

    .line 20950
    const/16 v15, 0x15

    .line 20951
    const/4 v9, 0x1

    .line 20952
    move-object/from16 v0, v18

    iget-object v0, v0, Lcom/android/server/wm/AppWindowToken;->allAppWindows:Lcom/android/server/wm/WindowList;

    move-object/from16 v19, v0

    invoke-virtual/range {v19 .. v19}, Lcom/android/server/wm/WindowList;->iterator()Ljava/util/Iterator;

    move-result-object v6

    .restart local v6    # "i$":Ljava/util/Iterator;
    :goto_20a
    invoke-interface {v6}, Ljava/util/Iterator;->hasNext()Z

    move-result v19

    if-eqz v19, :cond_d2

    invoke-interface {v6}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v16

    check-cast v16, Lcom/android/server/wm/WindowState;

    .line 20953
    .restart local v16    # "w":Lcom/android/server/wm/WindowState;
    const/16 v19, 0x1

    move/from16 v0, v19

    move-object/from16 v1, v16

    iput-boolean v0, v1, Lcom/android/server/wm/WindowState;->mLayoutNeeded:Z

    goto :goto_20a

    .line 20955
    .end local v6    # "i$":Ljava/util/Iterator;
    .end local v16    # "w":Lcom/android/server/wm/WindowState;
    :cond_21f
    move-object/from16 v0, v18

    iget-object v0, v0, Lcom/android/server/wm/AppWindowToken;->appMultiWindowStyle:Lcom/samsung/android/multiwindow/MultiWindowStyle;

    move-object/from16 v19, v0

    const/16 v21, 0x4

    move-object/from16 v0, v19

    move/from16 v1, v21

    invoke-virtual {v0, v1}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->isEnabled(I)Z

    move-result v19

    if-nez v19, :cond_d2

    const/16 v19, 0x4

    move-object/from16 v0, p2

    move/from16 v1, v19

    invoke-virtual {v0, v1}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->isEnabled(I)Z

    move-result v19

    if-eqz v19, :cond_d2

    .line 20958
    const/4 v9, 0x1

    goto/16 :goto_d2

    .line 20981
    .restart local v4    # "atoken":Lcom/android/server/wm/AppWindowToken;
    .restart local v5    # "currentTask":Lcom/android/server/wm/Task;
    .restart local v13    # "tokenNdx":I
    .restart local v14    # "tokens":Lcom/android/server/wm/AppTokenList;
    :cond_240
    const/16 v19, 0x0

    move/from16 v0, v19

    iput-boolean v0, v4, Lcom/android/server/wm/AppWindowToken;->mWaitingForMaximizeAnim:Z

    .line 20982
    const/16 v19, 0x1

    move/from16 v0, v19

    iput-boolean v0, v4, Lcom/android/server/wm/AppWindowToken;->mMultiWindowStyleChanging:Z

    .line 20983
    iput v15, v4, Lcom/android/server/wm/AppWindowToken;->mTargetTransit:I

    .line 20984
    move-object/from16 v0, p0

    iget-object v0, v0, mH:Lcom/android/server/wm/WindowManagerService$H;

    move-object/from16 v19, v0

    const/16 v21, 0x68

    iget-object v0, v4, Lcom/android/server/wm/AppWindowToken;->token:Landroid/os/IBinder;

    move-object/from16 v22, v0

    move-object/from16 v0, v19

    move/from16 v1, v21

    move-object/from16 v2, v22

    invoke-virtual {v0, v1, v2}, Lcom/android/server/wm/WindowManagerService$H;->removeMessages(ILjava/lang/Object;)V

    .line 20985
    move-object/from16 v0, p0

    iget-object v0, v0, mH:Lcom/android/server/wm/WindowManagerService$H;

    move-object/from16 v19, v0

    move-object/from16 v0, p0

    iget-object v0, v0, mH:Lcom/android/server/wm/WindowManagerService$H;

    move-object/from16 v21, v0

    const/16 v22, 0x68

    iget-object v0, v4, Lcom/android/server/wm/AppWindowToken;->token:Landroid/os/IBinder;

    move-object/from16 v23, v0

    invoke-virtual/range {v21 .. v23}, Lcom/android/server/wm/WindowManagerService$H;->obtainMessage(ILjava/lang/Object;)Landroid/os/Message;

    move-result-object v21

    const-wide/16 v22, 0xbb8

    move-object/from16 v0, v19

    move-object/from16 v1, v21

    move-wide/from16 v2, v22

    invoke-virtual {v0, v1, v2, v3}, Lcom/android/server/wm/WindowManagerService$H;->sendMessageDelayed(Landroid/os/Message;J)Z

    .line 20986
    invoke-virtual {v12, v4}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 20988
    iget-boolean v0, v4, Lcom/android/server/wm/AppWindowToken;->appFullscreen:Z

    move/from16 v19, v0

    if-eqz v19, :cond_151

    .line 20995
    .end local v4    # "atoken":Lcom/android/server/wm/AppWindowToken;
    .end local v5    # "currentTask":Lcom/android/server/wm/Task;
    .end local v9    # "styleChanging":Z
    .end local v13    # "tokenNdx":I
    .end local v14    # "tokens":Lcom/android/server/wm/AppTokenList;
    :cond_28d
    move-object/from16 v0, v18

    iget-object v0, v0, Lcom/android/server/wm/AppWindowToken;->appMultiWindowStyle:Lcom/samsung/android/multiwindow/MultiWindowStyle;

    move-object/from16 v19, v0

    const/16 v21, 0x1

    move-object/from16 v0, v19

    move-object/from16 v1, p2

    move/from16 v2, v21

    invoke-virtual {v0, v1, v2}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->setTo(Lcom/samsung/android/multiwindow/MultiWindowStyle;Z)V

    .line 20996
    if-eqz p3, :cond_2e2

    .line 20997
    sget-boolean v19, DEBUG_MULTIWINDOW:Z

    if-eqz v19, :cond_2c4

    const-string v19, "WindowManager"

    new-instance v21, Ljava/lang/StringBuilder;

    invoke-direct/range {v21 .. v21}, Ljava/lang/StringBuilder;-><init>()V

    const-string v22, "  Set new appMultiWindowStyle: "

    invoke-virtual/range {v21 .. v22}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v21

    move-object/from16 v0, v21

    move-object/from16 v1, p2

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v21

    invoke-virtual/range {v21 .. v21}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v21

    move-object/from16 v0, v19

    move-object/from16 v1, v21

    invoke-static {v0, v1}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 20998
    :cond_2c4
    invoke-virtual/range {v18 .. v18}, Lcom/android/server/wm/AppWindowToken;->findMainWindow()Lcom/android/server/wm/WindowState;

    move-result-object v17

    .line 20999
    .local v17, "win":Lcom/android/server/wm/WindowState;
    if-eqz v17, :cond_2d8

    .line 21000
    move-object/from16 v0, v17

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mDisplayContent:Lcom/android/server/wm/DisplayContent;

    move-object/from16 v19, v0

    const/16 v21, 0x1

    move/from16 v0, v21

    move-object/from16 v1, v19

    iput-boolean v0, v1, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    .line 21002
    :cond_2d8
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v10

    .line 21003
    .local v10, "origId":J
    invoke-direct/range {p0 .. p0}, performLayoutAndPlaceSurfacesLocked()V

    .line 21004
    invoke-static {v10, v11}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 21008
    .end local v7    # "isVisible":Z
    .end local v10    # "origId":J
    .end local v17    # "win":Lcom/android/server/wm/WindowState;
    :cond_2e2
    move/from16 v0, p4

    and-int/lit16 v0, v0, 0x1fe

    move/from16 v19, v0

    packed-switch v19, :pswitch_data_3f4

    .line 21039
    :pswitch_2eb
    const-string v19, "WindowManager"

    new-instance v21, Ljava/lang/StringBuilder;

    invoke-direct/range {v21 .. v21}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v22, "setAppMultiWindowStyle Invaild notifyReason :"

    invoke-virtual/range {v21 .. v22}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v21

    move-object/from16 v0, v21

    move/from16 v1, p4

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v21

    invoke-virtual/range {v21 .. v21}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v21

    move-object/from16 v0, v19

    move-object/from16 v1, v21

    invoke-static {v0, v1}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 21043
    :cond_30c
    :goto_30c
    if-eqz v15, :cond_320

    .line 21044
    move-object/from16 v0, v18

    invoke-virtual {v12, v0}, Ljava/util/ArrayList;->contains(Ljava/lang/Object;)Z

    move-result v19

    if-nez v19, :cond_31b

    .line 21045
    move-object/from16 v0, v18

    invoke-virtual {v12, v0}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 21052
    :cond_31b
    move-object/from16 v0, p0

    invoke-direct {v0, v12, v15}, prepareMultiWindowTransitionLocked(Ljava/util/ArrayList;I)V

    .line 21055
    :cond_320
    monitor-exit v20

    goto/16 :goto_90

    .line 21011
    :pswitch_323
    move-object/from16 v0, v18

    iget-object v0, v0, Lcom/android/server/wm/AppWindowToken;->appMultiWindowStyle:Lcom/samsung/android/multiwindow/MultiWindowStyle;

    move-object/from16 v19, v0

    const/high16 v21, 0x20000

    move-object/from16 v0, v19

    move/from16 v1, v21

    invoke-virtual {v0, v1}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->isEnabled(I)Z

    move-result v19

    if-eqz v19, :cond_37e

    .line 21012
    const/16 v15, 0x9

    .line 21013
    move-object/from16 v0, v18

    iput v15, v0, Lcom/android/server/wm/AppWindowToken;->mTargetTransit:I

    .line 21017
    const/16 v19, 0x1

    move/from16 v0, v19

    move-object/from16 v1, v18

    iput-boolean v0, v1, Lcom/android/server/wm/AppWindowToken;->mMultiWindowStyleChanging:Z

    .line 21018
    move-object/from16 v0, p0

    iget-object v0, v0, mH:Lcom/android/server/wm/WindowManagerService$H;

    move-object/from16 v19, v0

    const/16 v21, 0x68

    move-object/from16 v0, v18

    iget-object v0, v0, Lcom/android/server/wm/AppWindowToken;->token:Landroid/os/IBinder;

    move-object/from16 v22, v0

    move-object/from16 v0, v19

    move/from16 v1, v21

    move-object/from16 v2, v22

    invoke-virtual {v0, v1, v2}, Lcom/android/server/wm/WindowManagerService$H;->removeMessages(ILjava/lang/Object;)V

    .line 21019
    move-object/from16 v0, p0

    iget-object v0, v0, mH:Lcom/android/server/wm/WindowManagerService$H;

    move-object/from16 v19, v0

    move-object/from16 v0, p0

    iget-object v0, v0, mH:Lcom/android/server/wm/WindowManagerService$H;

    move-object/from16 v21, v0

    const/16 v22, 0x68

    move-object/from16 v0, v18

    iget-object v0, v0, Lcom/android/server/wm/AppWindowToken;->token:Landroid/os/IBinder;

    move-object/from16 v23, v0

    invoke-virtual/range {v21 .. v23}, Lcom/android/server/wm/WindowManagerService$H;->obtainMessage(ILjava/lang/Object;)Landroid/os/Message;

    move-result-object v21

    const-wide/16 v22, 0xbb8

    move-object/from16 v0, v19

    move-object/from16 v1, v21

    move-wide/from16 v2, v22

    invoke-virtual {v0, v1, v2, v3}, Lcom/android/server/wm/WindowManagerService$H;->sendMessageDelayed(Landroid/os/Message;J)Z

    goto :goto_30c

    .line 21020
    :cond_37e
    move-object/from16 v0, v18

    iget-object v0, v0, Lcom/android/server/wm/AppWindowToken;->appMultiWindowStyle:Lcom/samsung/android/multiwindow/MultiWindowStyle;

    move-object/from16 v19, v0

    invoke-virtual/range {v19 .. v19}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->isCascade()Z

    move-result v19

    if-eqz v19, :cond_30c

    .line 21021
    invoke-virtual/range {v18 .. v18}, Lcom/android/server/wm/AppWindowToken;->isVisible()Z

    move-result v19

    if-eqz v19, :cond_398

    .line 21022
    const/16 v15, 0x14

    .line 21023
    move-object/from16 v0, v18

    iput v15, v0, Lcom/android/server/wm/AppWindowToken;->mTargetTransit:I

    goto/16 :goto_30c

    .line 21025
    :cond_398
    move-object/from16 v0, p0

    iget-object v0, v0, mH:Lcom/android/server/wm/WindowManagerService$H;

    move-object/from16 v19, v0

    const/16 v21, 0x68

    move-object/from16 v0, v18

    iget-object v0, v0, Lcom/android/server/wm/AppWindowToken;->token:Landroid/os/IBinder;

    move-object/from16 v22, v0

    move-object/from16 v0, v19

    move/from16 v1, v21

    move-object/from16 v2, v22

    invoke-virtual {v0, v1, v2}, Lcom/android/server/wm/WindowManagerService$H;->removeMessages(ILjava/lang/Object;)V

    .line 21026
    move-object/from16 v0, p0

    iget-object v0, v0, mH:Lcom/android/server/wm/WindowManagerService$H;

    move-object/from16 v19, v0

    move-object/from16 v0, p0

    iget-object v0, v0, mH:Lcom/android/server/wm/WindowManagerService$H;

    move-object/from16 v21, v0

    const/16 v22, 0x68

    move-object/from16 v0, v18

    iget-object v0, v0, Lcom/android/server/wm/AppWindowToken;->token:Landroid/os/IBinder;

    move-object/from16 v23, v0

    invoke-virtual/range {v21 .. v23}, Lcom/android/server/wm/WindowManagerService$H;->obtainMessage(ILjava/lang/Object;)Landroid/os/Message;

    move-result-object v21

    const-wide/16 v22, 0xbb8

    move-object/from16 v0, v19

    move-object/from16 v1, v21

    move-wide/from16 v2, v22

    invoke-virtual {v0, v1, v2, v3}, Lcom/android/server/wm/WindowManagerService$H;->sendMessageDelayed(Landroid/os/Message;J)Z

    .line 21027
    const/16 v19, 0x1

    move/from16 v0, v19

    move-object/from16 v1, v18

    iput-boolean v0, v1, Lcom/android/server/wm/AppWindowToken;->mPendingMinimizeAnim:Z

    goto/16 :goto_30c

    .line 21033
    :pswitch_3dc
    invoke-virtual/range {v18 .. v18}, Lcom/android/server/wm/AppWindowToken;->isVisible()Z
    :try_end_3df
    .catchall {:try_start_1cc .. :try_end_3df} :catchall_1c7

    move-result v19

    if-eqz v19, :cond_30c

    and-int/lit8 v19, p4, 0x40

    if-eqz v19, :cond_30c

    .line 21035
    const/16 v15, 0x8

    goto/16 :goto_30c

    .line 20911
    :pswitch_data_3ea
    .packed-switch 0x0
        :pswitch_157
        :pswitch_17a
        :pswitch_18d
    .end packed-switch

    .line 21008
    :pswitch_data_3f4
    .packed-switch 0x1
        :pswitch_3dc
        :pswitch_3dc
        :pswitch_2eb
        :pswitch_323
    .end packed-switch
.end method

.method public setAppOrientation(Landroid/view/IApplicationToken;I)V
    .registers 8
    .param p1, "token"    # Landroid/view/IApplicationToken;
    .param p2, "requestedOrientation"    # I

    .prologue
    .line 7181
    const-string v1, "android.permission.MANAGE_APP_TOKENS"

    const-string/jumbo v2, "setAppOrientation()"

    invoke-virtual {p0, v1, v2}, checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v1

    if-nez v1, :cond_13

    .line 7183
    new-instance v1, Ljava/lang/SecurityException;

    const-string v2, "Requires MANAGE_APP_TOKENS permission"

    invoke-direct {v1, v2}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 7186
    :cond_13
    iget-object v2, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v2

    .line 7187
    :try_start_16
    invoke-interface {p1}, Landroid/view/IApplicationToken;->asBinder()Landroid/os/IBinder;

    move-result-object v1

    invoke-virtual {p0, v1}, findAppWindowToken(Landroid/os/IBinder;)Lcom/android/server/wm/AppWindowToken;

    move-result-object v0

    .line 7188
    .local v0, "atoken":Lcom/android/server/wm/AppWindowToken;
    if-nez v0, :cond_3a

    .line 7189
    const-string v1, "WindowManager"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "Attempted to set orientation of non-existing app token: "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v1, v3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 7190
    monitor-exit v2

    .line 7200
    :goto_39
    return-void

    .line 7193
    :cond_3a
    iput p2, v0, Lcom/android/server/wm/AppWindowToken;->requestedOrientation:I

    .line 7195
    sget-boolean v1, Lcom/samsung/android/multiwindow/MultiWindowFeatures;->SELECTIVE1ORIENTATION_ENABLED:Z

    if-eqz v1, :cond_46

    .line 7196
    iget-object v1, v0, Lcom/android/server/wm/AppWindowToken;->appMultiWindowStyle:Lcom/samsung/android/multiwindow/MultiWindowStyle;

    const/4 v3, 0x1

    invoke-virtual {v1, p2, v3}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->setAppRequestOrientation(IZ)V

    .line 7199
    :cond_46
    monitor-exit v2

    goto :goto_39

    .end local v0    # "atoken":Lcom/android/server/wm/AppWindowToken;
    :catchall_48
    move-exception v1

    monitor-exit v2
    :try_end_4a
    .catchall {:try_start_16 .. :try_end_4a} :catchall_48

    throw v1
.end method

.method public setAppPolicyExpandedDisplayOrientation(Landroid/os/IBinder;I)V
    .registers 6
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "orientation"    # I

    .prologue
    .line 22494
    iget-object v2, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v2

    .line 22495
    :try_start_3
    invoke-virtual {p0, p1}, findAppWindowToken(Landroid/os/IBinder;)Lcom/android/server/wm/AppWindowToken;

    move-result-object v0

    .line 22496
    .local v0, "atoken":Lcom/android/server/wm/AppWindowToken;
    if-eqz v0, :cond_b

    .line 22497
    iput p2, v0, Lcom/android/server/wm/AppWindowToken;->policyExpandedDisplayOrientation:I

    .line 22499
    :cond_b
    monitor-exit v2

    .line 22500
    return-void

    .line 22499
    .end local v0    # "atoken":Lcom/android/server/wm/AppWindowToken;
    :catchall_d
    move-exception v1

    monitor-exit v2
    :try_end_f
    .catchall {:try_start_3 .. :try_end_f} :catchall_d

    throw v1
.end method

.method public setAppPolicyOppositeDisplayOrientation(Landroid/os/IBinder;I)V
    .registers 6
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "orientation"    # I

    .prologue
    .line 22485
    iget-object v2, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v2

    .line 22486
    :try_start_3
    invoke-virtual {p0, p1}, findAppWindowToken(Landroid/os/IBinder;)Lcom/android/server/wm/AppWindowToken;

    move-result-object v0

    .line 22487
    .local v0, "atoken":Lcom/android/server/wm/AppWindowToken;
    if-eqz v0, :cond_b

    .line 22488
    iput p2, v0, Lcom/android/server/wm/AppWindowToken;->policyOppositeDisplayOrientation:I

    .line 22490
    :cond_b
    monitor-exit v2

    .line 22491
    return-void

    .line 22490
    .end local v0    # "atoken":Lcom/android/server/wm/AppWindowToken;
    :catchall_d
    move-exception v1

    monitor-exit v2
    :try_end_f
    .catchall {:try_start_3 .. :try_end_f} :catchall_d

    throw v1
.end method

.method public setAppStartingWindow(Landroid/os/IBinder;Ljava/lang/String;ILandroid/content/res/CompatibilityInfo;Ljava/lang/CharSequence;IIIILandroid/os/IBinder;Z)V
    .registers 26
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "pkg"    # Ljava/lang/String;
    .param p3, "theme"    # I
    .param p4, "compatInfo"    # Landroid/content/res/CompatibilityInfo;
    .param p5, "nonLocalizedLabel"    # Ljava/lang/CharSequence;
    .param p6, "labelRes"    # I
    .param p7, "icon"    # I
    .param p8, "logo"    # I
    .param p9, "windowFlags"    # I
    .param p10, "transferFrom"    # Landroid/os/IBinder;
    .param p11, "createIfNeeded"    # Z

    .prologue
    .line 7966
    const/4 v12, 0x0

    const/4 v13, 0x0

    move-object v0, p0

    move-object v1, p1

    move-object/from16 v2, p2

    move/from16 v3, p3

    move-object/from16 v4, p4

    move-object/from16 v5, p5

    move/from16 v6, p6

    move/from16 v7, p7

    move/from16 v8, p8

    move/from16 v9, p9

    move-object/from16 v10, p10

    move/from16 v11, p11

    invoke-virtual/range {v0 .. v13}, setAppStartingWindow(Landroid/os/IBinder;Ljava/lang/String;ILandroid/content/res/CompatibilityInfo;Ljava/lang/CharSequence;IIIILandroid/os/IBinder;ZLcom/android/server/wm/CustomStartingWindowData;I)V

    .line 7969
    return-void
.end method

.method public setAppStartingWindow(Landroid/os/IBinder;Ljava/lang/String;ILandroid/content/res/CompatibilityInfo;Ljava/lang/CharSequence;IIIILandroid/os/IBinder;ZLcom/android/server/wm/CustomStartingWindowData;I)V
    .registers 29
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "pkg"    # Ljava/lang/String;
    .param p3, "theme"    # I
    .param p4, "compatInfo"    # Landroid/content/res/CompatibilityInfo;
    .param p5, "nonLocalizedLabel"    # Ljava/lang/CharSequence;
    .param p6, "labelRes"    # I
    .param p7, "icon"    # I
    .param p8, "logo"    # I
    .param p9, "windowFlags"    # I
    .param p10, "transferFrom"    # Landroid/os/IBinder;
    .param p11, "createIfNeeded"    # Z
    .param p12, "customStartingWindowData"    # Lcom/android/server/wm/CustomStartingWindowData;
    .param p13, "displayId"    # I

    .prologue
    .line 7977
    const/4 v12, 0x0

    const/4 v14, 0x0

    move-object v0, p0

    move-object/from16 v1, p1

    move-object/from16 v2, p2

    move/from16 v3, p3

    move-object/from16 v4, p4

    move-object/from16 v5, p5

    move/from16 v6, p6

    move/from16 v7, p7

    move/from16 v8, p8

    move/from16 v9, p9

    move-object/from16 v10, p10

    move/from16 v11, p11

    move/from16 v13, p13

    invoke-virtual/range {v0 .. v14}, setAppStartingWindow(Landroid/os/IBinder;Ljava/lang/String;ILandroid/content/res/CompatibilityInfo;Ljava/lang/CharSequence;IIIILandroid/os/IBinder;ZLcom/android/server/wm/CustomStartingWindowData;II)V

    .line 7982
    return-void
.end method

.method public setAppStartingWindow(Landroid/os/IBinder;Ljava/lang/String;ILandroid/content/res/CompatibilityInfo;Ljava/lang/CharSequence;IIIILandroid/os/IBinder;ZLcom/android/server/wm/CustomStartingWindowData;II)V
    .registers 44
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "pkg"    # Ljava/lang/String;
    .param p3, "theme"    # I
    .param p4, "compatInfo"    # Landroid/content/res/CompatibilityInfo;
    .param p5, "nonLocalizedLabel"    # Ljava/lang/CharSequence;
    .param p6, "labelRes"    # I
    .param p7, "icon"    # I
    .param p8, "logo"    # I
    .param p9, "windowFlags"    # I
    .param p10, "transferFrom"    # Landroid/os/IBinder;
    .param p11, "createIfNeeded"    # Z
    .param p12, "customStartingWindowData"    # Lcom/android/server/wm/CustomStartingWindowData;
    .param p13, "displayId"    # I
    .param p14, "originalUserId"    # I

    .prologue
    .line 7991
    const-string v2, "android.permission.MANAGE_APP_TOKENS"

    const-string/jumbo v3, "setAppStartingWindow()"

    move-object/from16 v0, p0

    invoke-virtual {v0, v2, v3}, checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v2

    if-nez v2, :cond_15

    .line 7993
    new-instance v2, Ljava/lang/SecurityException;

    const-string v3, "Requires MANAGE_APP_TOKENS permission"

    invoke-direct {v2, v3}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v2

    .line 7996
    :cond_15
    move-object/from16 v0, p0

    iget-object v0, v0, mWindowMap:Ljava/util/HashMap;

    move-object/from16 v28, v0

    monitor-enter v28

    .line 7997
    :try_start_1c
    sget-boolean v2, DEBUG_STARTING_WINDOW:Z

    if-eqz v2, :cond_53

    const-string v2, "WindowManager"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v4, "setAppStartingWindow: token="

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    move-object/from16 v0, p1

    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v3

    const-string v4, " pkg="

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    move-object/from16 v0, p2

    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    const-string v4, " transferFrom="

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    move-object/from16 v0, p10

    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 8007
    :cond_53
    move-object/from16 v0, p0

    iget-boolean v14, v0, mStartingIconInTransition:Z

    .line 8008
    .local v14, "mStartingIconInTransition":Z
    move-object/from16 v0, p0

    iget-boolean v13, v0, mSkipAppTransitionAnimation:Z

    .line 8012
    .local v13, "mSkipAppTransitionAnimation":Z
    invoke-virtual/range {p0 .. p1}, findAppWindowToken(Landroid/os/IBinder;)Lcom/android/server/wm/AppWindowToken;

    move-result-object v27

    .line 8013
    .local v27, "wtoken":Lcom/android/server/wm/AppWindowToken;
    if-nez v27, :cond_7d

    .line 8014
    const-string v2, "WindowManager"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "Attempted to set icon of non-existing app token: "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    move-object/from16 v0, p1

    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 8015
    monitor-exit v28

    .line 8250
    :goto_7c
    return-void

    .line 8028
    :cond_7d
    move-object/from16 v0, v27

    iget-object v2, v0, Lcom/android/server/wm/AppWindowToken;->startingData:Lcom/android/server/wm/StartingData;

    if-eqz v2, :cond_88

    .line 8029
    monitor-exit v28

    goto :goto_7c

    .line 8249
    .end local v13    # "mSkipAppTransitionAnimation":Z
    .end local v14    # "mStartingIconInTransition":Z
    .end local v27    # "wtoken":Lcom/android/server/wm/AppWindowToken;
    :catchall_85
    move-exception v2

    monitor-exit v28
    :try_end_87
    .catchall {:try_start_1c .. :try_end_87} :catchall_85

    throw v2

    .line 8032
    .restart local v13    # "mSkipAppTransitionAnimation":Z
    .restart local v14    # "mStartingIconInTransition":Z
    .restart local v27    # "wtoken":Lcom/android/server/wm/AppWindowToken;
    :cond_88
    if-eqz p10, :cond_318

    .line 8033
    :try_start_8a
    move-object/from16 v0, p0

    move-object/from16 v1, p10

    invoke-virtual {v0, v1}, findAppWindowToken(Landroid/os/IBinder;)Lcom/android/server/wm/AppWindowToken;

    move-result-object v21

    .line 8034
    .local v21, "ttoken":Lcom/android/server/wm/AppWindowToken;
    if-eqz v21, :cond_318

    .line 8035
    move-object/from16 v0, v21

    iget-object v0, v0, Lcom/android/server/wm/AppWindowToken;->startingWindow:Lcom/android/server/wm/WindowState;

    move-object/from16 v17, v0

    .line 8036
    .local v17, "startingWindow":Lcom/android/server/wm/WindowState;
    if-eqz v17, :cond_254

    .line 8038
    move-object/from16 v0, p0

    move-object/from16 v1, v27

    invoke-virtual {v0, v1}, setStartingWindowTargetAppTokenLocked(Lcom/android/server/wm/AppWindowToken;)V

    .line 8042
    const/4 v13, 0x1

    .line 8044
    sget-boolean v2, DEBUG_STARTING_WINDOW:Z

    if-eqz v2, :cond_da

    const-string v2, "WindowManager"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "Moving existing starting "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    move-object/from16 v0, v17

    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v3

    const-string v4, " from "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    move-object/from16 v0, v21

    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v3

    const-string v4, " to "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    move-object/from16 v0, v27

    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 8047
    :cond_da
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v18

    .line 8050
    .local v18, "origId":J
    move-object/from16 v0, v21

    iget-object v2, v0, Lcom/android/server/wm/AppWindowToken;->startingData:Lcom/android/server/wm/StartingData;

    move-object/from16 v0, v27

    iput-object v2, v0, Lcom/android/server/wm/AppWindowToken;->startingData:Lcom/android/server/wm/StartingData;

    .line 8051
    move-object/from16 v0, v21

    iget-object v2, v0, Lcom/android/server/wm/AppWindowToken;->startingView:Landroid/view/View;

    move-object/from16 v0, v27

    iput-object v2, v0, Lcom/android/server/wm/AppWindowToken;->startingView:Landroid/view/View;

    .line 8053
    move-object/from16 v0, v27

    iget-object v2, v0, Lcom/android/server/wm/AppWindowToken;->startingView:Landroid/view/View;

    if-nez v2, :cond_11e

    .line 8054
    move-object/from16 v0, v27

    move-object/from16 v1, p0

    iput-object v0, v1, mNextStartingWindowAppToken:Lcom/android/server/wm/AppWindowToken;

    .line 8055
    sget-boolean v2, DEBUG_STARTING_WINDOW:Z

    if-eqz v2, :cond_11e

    const-string v2, "WindowManager"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "The staringView of starting "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    move-object/from16 v0, v17

    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v3

    const-string v4, " is null"

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 8059
    :cond_11e
    move-object/from16 v0, v21

    iget-boolean v2, v0, Lcom/android/server/wm/AppWindowToken;->startingDisplayed:Z

    move-object/from16 v0, v27

    iput-boolean v2, v0, Lcom/android/server/wm/AppWindowToken;->startingDisplayed:Z

    .line 8060
    const/4 v2, 0x0

    move-object/from16 v0, v21

    iput-boolean v2, v0, Lcom/android/server/wm/AppWindowToken;->startingDisplayed:Z

    .line 8061
    move-object/from16 v0, v17

    move-object/from16 v1, v27

    iput-object v0, v1, Lcom/android/server/wm/AppWindowToken;->startingWindow:Lcom/android/server/wm/WindowState;

    .line 8062
    move-object/from16 v0, v21

    iget-boolean v2, v0, Lcom/android/server/wm/AppWindowToken;->reportedVisible:Z

    move-object/from16 v0, v27

    iput-boolean v2, v0, Lcom/android/server/wm/AppWindowToken;->reportedVisible:Z

    .line 8063
    const/4 v2, 0x0

    move-object/from16 v0, v21

    iput-object v2, v0, Lcom/android/server/wm/AppWindowToken;->startingData:Lcom/android/server/wm/StartingData;

    .line 8064
    const/4 v2, 0x0

    move-object/from16 v0, v21

    iput-object v2, v0, Lcom/android/server/wm/AppWindowToken;->startingView:Landroid/view/View;

    .line 8065
    const/4 v2, 0x0

    move-object/from16 v0, v21

    iput-object v2, v0, Lcom/android/server/wm/AppWindowToken;->startingWindow:Lcom/android/server/wm/WindowState;

    .line 8066
    const/4 v2, 0x1

    move-object/from16 v0, v21

    iput-boolean v2, v0, Lcom/android/server/wm/AppWindowToken;->startingMoved:Z

    .line 8067
    const/4 v2, 0x0

    move-object/from16 v0, v21

    iput v2, v0, Lcom/android/server/wm/AppWindowToken;->startingAnimLayerAdjustment:I

    .line 8068
    move-object/from16 v0, v27

    move-object/from16 v1, v17

    iput-object v0, v1, Lcom/android/server/wm/WindowState;->mToken:Lcom/android/server/wm/WindowToken;

    .line 8069
    move-object/from16 v0, v27

    move-object/from16 v1, v17

    iput-object v0, v1, Lcom/android/server/wm/WindowState;->mRootToken:Lcom/android/server/wm/WindowToken;

    .line 8070
    move-object/from16 v0, v27

    move-object/from16 v1, v17

    iput-object v0, v1, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    .line 8073
    move-object/from16 v0, v27

    iget-object v2, v0, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    iget-boolean v2, v2, Lcom/android/server/wm/AppWindowAnimator;->freezingScreen:Z

    move-object/from16 v0, v17

    iput-boolean v2, v0, Lcom/android/server/wm/WindowState;->mAppFreezing:Z

    .line 8076
    sget-boolean v2, DEBUG_WINDOW_MOVEMENT:Z

    if-nez v2, :cond_17a

    sget-boolean v2, DEBUG_ADD_REMOVE:Z

    if-nez v2, :cond_17a

    sget-boolean v2, DEBUG_STARTING_WINDOW:Z

    if-eqz v2, :cond_194

    .line 8077
    :cond_17a
    const-string v2, "WindowManager"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "Removing starting window: "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    move-object/from16 v0, v17

    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 8079
    :cond_194
    invoke-virtual/range {v17 .. v17}, Lcom/android/server/wm/WindowState;->getWindowList()Lcom/android/server/wm/WindowList;

    move-result-object v2

    move-object/from16 v0, v17

    invoke-virtual {v2, v0}, Lcom/android/server/wm/WindowList;->remove(Ljava/lang/Object;)Z

    .line 8080
    const/4 v2, 0x1

    move-object/from16 v0, p0

    iput-boolean v2, v0, mWindowsChanged:Z

    .line 8081
    sget-boolean v2, DEBUG_ADD_REMOVE:Z

    if-eqz v2, :cond_1cc

    const-string v2, "WindowManager"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "Removing starting "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    move-object/from16 v0, v17

    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v3

    const-string v4, " from "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    move-object/from16 v0, v21

    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 8083
    :cond_1cc
    move-object/from16 v0, v21

    iget-object v2, v0, Lcom/android/server/wm/AppWindowToken;->windows:Lcom/android/server/wm/WindowList;

    move-object/from16 v0, v17

    invoke-virtual {v2, v0}, Lcom/android/server/wm/WindowList;->remove(Ljava/lang/Object;)Z

    .line 8084
    move-object/from16 v0, v21

    iget-object v2, v0, Lcom/android/server/wm/AppWindowToken;->allAppWindows:Lcom/android/server/wm/WindowList;

    move-object/from16 v0, v17

    invoke-virtual {v2, v0}, Lcom/android/server/wm/WindowList;->remove(Ljava/lang/Object;)Z

    .line 8085
    const/4 v2, 0x1

    move-object/from16 v0, p0

    move-object/from16 v1, v17

    invoke-direct {v0, v1, v2}, addWindowToListInOrderLocked(Lcom/android/server/wm/WindowState;Z)V

    .line 8092
    move-object/from16 v0, v21

    iget-boolean v2, v0, Lcom/android/server/wm/AppWindowToken;->allDrawn:Z

    if-eqz v2, :cond_1f9

    .line 8093
    const/4 v2, 0x1

    move-object/from16 v0, v27

    iput-boolean v2, v0, Lcom/android/server/wm/AppWindowToken;->allDrawn:Z

    .line 8094
    move-object/from16 v0, v21

    iget-boolean v2, v0, Lcom/android/server/wm/AppWindowToken;->deferClearAllDrawn:Z

    move-object/from16 v0, v27

    iput-boolean v2, v0, Lcom/android/server/wm/AppWindowToken;->deferClearAllDrawn:Z

    .line 8096
    :cond_1f9
    move-object/from16 v0, v21

    iget-boolean v2, v0, Lcom/android/server/wm/AppWindowToken;->firstWindowDrawn:Z

    if-eqz v2, :cond_204

    .line 8097
    const/4 v2, 0x1

    move-object/from16 v0, v27

    iput-boolean v2, v0, Lcom/android/server/wm/AppWindowToken;->firstWindowDrawn:Z

    .line 8099
    :cond_204
    move-object/from16 v0, v21

    iget-boolean v2, v0, Lcom/android/server/wm/AppWindowToken;->hidden:Z

    if-nez v2, :cond_219

    .line 8100
    const/4 v2, 0x0

    move-object/from16 v0, v27

    iput-boolean v2, v0, Lcom/android/server/wm/AppWindowToken;->hidden:Z

    .line 8101
    const/4 v2, 0x0

    move-object/from16 v0, v27

    iput-boolean v2, v0, Lcom/android/server/wm/AppWindowToken;->hiddenRequested:Z

    .line 8102
    const/4 v2, 0x0

    move-object/from16 v0, v27

    iput-boolean v2, v0, Lcom/android/server/wm/AppWindowToken;->willBeHidden:Z

    .line 8104
    :cond_219
    move-object/from16 v0, v27

    iget-boolean v2, v0, Lcom/android/server/wm/AppWindowToken;->clientHidden:Z

    move-object/from16 v0, v21

    iget-boolean v3, v0, Lcom/android/server/wm/AppWindowToken;->clientHidden:Z

    if-eq v2, v3, :cond_22e

    .line 8105
    move-object/from16 v0, v21

    iget-boolean v2, v0, Lcom/android/server/wm/AppWindowToken;->clientHidden:Z

    move-object/from16 v0, v27

    iput-boolean v2, v0, Lcom/android/server/wm/AppWindowToken;->clientHidden:Z

    .line 8106
    invoke-virtual/range {v27 .. v27}, Lcom/android/server/wm/AppWindowToken;->sendAppVisibilityToClients()V

    .line 8108
    :cond_22e
    move-object/from16 v0, v21

    iget-object v2, v0, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    move-object/from16 v0, v27

    iget-object v3, v0, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    move-object/from16 v0, v17

    iget-object v4, v0, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    invoke-virtual {v2, v3, v4}, Lcom/android/server/wm/AppWindowAnimator;->transferCurrentAnimation(Lcom/android/server/wm/AppWindowAnimator;Lcom/android/server/wm/WindowStateAnimator;)V

    .line 8111
    const/4 v2, 0x3

    const/4 v3, 0x1

    move-object/from16 v0, p0

    invoke-direct {v0, v2, v3}, updateFocusedWindowLocked(IZ)Z

    .line 8113
    invoke-virtual/range {p0 .. p0}, getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v2

    const/4 v3, 0x1

    iput-boolean v3, v2, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    .line 8114
    invoke-direct/range {p0 .. p0}, performLayoutAndPlaceSurfacesLocked()V

    .line 8115
    invoke-static/range {v18 .. v19}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 8116
    monitor-exit v28

    goto/16 :goto_7c

    .line 8117
    .end local v18    # "origId":J
    :cond_254
    move-object/from16 v0, v21

    iget-object v2, v0, Lcom/android/server/wm/AppWindowToken;->startingData:Lcom/android/server/wm/StartingData;

    if-eqz v2, :cond_2cc

    .line 8120
    sget-boolean v2, DEBUG_STARTING_WINDOW:Z

    if-eqz v2, :cond_284

    const-string v2, "WindowManager"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "Moving pending starting from "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    move-object/from16 v0, v21

    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v3

    const-string v4, " to "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    move-object/from16 v0, v27

    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 8123
    :cond_284
    move-object/from16 v0, v21

    iget-object v2, v0, Lcom/android/server/wm/AppWindowToken;->startingData:Lcom/android/server/wm/StartingData;

    move-object/from16 v0, v27

    iput-object v2, v0, Lcom/android/server/wm/AppWindowToken;->startingData:Lcom/android/server/wm/StartingData;

    .line 8124
    const/4 v2, 0x0

    move-object/from16 v0, v21

    iput-object v2, v0, Lcom/android/server/wm/AppWindowToken;->startingData:Lcom/android/server/wm/StartingData;

    .line 8125
    const/4 v2, 0x1

    move-object/from16 v0, v21

    iput-boolean v2, v0, Lcom/android/server/wm/AppWindowToken;->startingMoved:Z

    .line 8128
    new-instance v16, Landroid/util/Pair;

    invoke-static/range {p13 .. p13}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v2

    move-object/from16 v0, v16

    move-object/from16 v1, v27

    invoke-direct {v0, v1, v2}, Landroid/util/Pair;-><init>(Ljava/lang/Object;Ljava/lang/Object;)V

    .line 8129
    .local v16, "msgPair":Landroid/util/Pair;, "Landroid/util/Pair<Lcom/android/server/wm/AppWindowToken;Ljava/lang/Integer;>;"
    move-object/from16 v0, p0

    iget-object v2, v0, mH:Lcom/android/server/wm/WindowManagerService$H;

    const/4 v3, 0x5

    move-object/from16 v0, v16

    invoke-virtual {v2, v3, v0}, Lcom/android/server/wm/WindowManagerService$H;->obtainMessage(ILjava/lang/Object;)Landroid/os/Message;

    move-result-object v12

    .line 8132
    .local v12, "m":Landroid/os/Message;
    new-instance v22, Landroid/os/Bundle;

    invoke-direct/range {v22 .. v22}, Landroid/os/Bundle;-><init>()V

    .line 8133
    .local v22, "userData":Landroid/os/Bundle;
    const-string/jumbo v2, "originalUserId"

    move-object/from16 v0, v22

    move/from16 v1, p14

    invoke-virtual {v0, v2, v1}, Landroid/os/Bundle;->putInt(Ljava/lang/String;I)V

    .line 8134
    move-object/from16 v0, v22

    invoke-virtual {v12, v0}, Landroid/os/Message;->setData(Landroid/os/Bundle;)V

    .line 8139
    move-object/from16 v0, p0

    iget-object v2, v0, mH:Lcom/android/server/wm/WindowManagerService$H;

    invoke-virtual {v2, v12}, Lcom/android/server/wm/WindowManagerService$H;->sendMessageAtFrontOfQueue(Landroid/os/Message;)Z

    .line 8140
    monitor-exit v28

    goto/16 :goto_7c

    .line 8142
    .end local v12    # "m":Landroid/os/Message;
    .end local v16    # "msgPair":Landroid/util/Pair;, "Landroid/util/Pair<Lcom/android/server/wm/AppWindowToken;Ljava/lang/Integer;>;"
    .end local v22    # "userData":Landroid/os/Bundle;
    :cond_2cc
    move-object/from16 v0, v21

    iget-object v0, v0, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    move-object/from16 v20, v0

    .line 8143
    .local v20, "tAppAnimator":Lcom/android/server/wm/AppWindowAnimator;
    move-object/from16 v0, v27

    iget-object v0, v0, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    move-object/from16 v23, v0

    .line 8144
    .local v23, "wAppAnimator":Lcom/android/server/wm/AppWindowAnimator;
    move-object/from16 v0, v20

    iget-object v2, v0, Lcom/android/server/wm/AppWindowAnimator;->thumbnail:Landroid/view/SurfaceControl;

    if-eqz v2, :cond_318

    .line 8147
    move-object/from16 v0, v23

    iget-object v2, v0, Lcom/android/server/wm/AppWindowAnimator;->thumbnail:Landroid/view/SurfaceControl;

    if-eqz v2, :cond_2eb

    .line 8148
    move-object/from16 v0, v23

    iget-object v2, v0, Lcom/android/server/wm/AppWindowAnimator;->thumbnail:Landroid/view/SurfaceControl;

    invoke-virtual {v2}, Landroid/view/SurfaceControl;->destroy()V

    .line 8150
    :cond_2eb
    move-object/from16 v0, v20

    iget-object v2, v0, Lcom/android/server/wm/AppWindowAnimator;->thumbnail:Landroid/view/SurfaceControl;

    move-object/from16 v0, v23

    iput-object v2, v0, Lcom/android/server/wm/AppWindowAnimator;->thumbnail:Landroid/view/SurfaceControl;

    .line 8151
    move-object/from16 v0, v20

    iget v2, v0, Lcom/android/server/wm/AppWindowAnimator;->thumbnailX:I

    move-object/from16 v0, v23

    iput v2, v0, Lcom/android/server/wm/AppWindowAnimator;->thumbnailX:I

    .line 8152
    move-object/from16 v0, v20

    iget v2, v0, Lcom/android/server/wm/AppWindowAnimator;->thumbnailY:I

    move-object/from16 v0, v23

    iput v2, v0, Lcom/android/server/wm/AppWindowAnimator;->thumbnailY:I

    .line 8153
    move-object/from16 v0, v20

    iget v2, v0, Lcom/android/server/wm/AppWindowAnimator;->thumbnailLayer:I

    move-object/from16 v0, v23

    iput v2, v0, Lcom/android/server/wm/AppWindowAnimator;->thumbnailLayer:I

    .line 8154
    move-object/from16 v0, v20

    iget-object v2, v0, Lcom/android/server/wm/AppWindowAnimator;->thumbnailAnimation:Landroid/view/animation/Animation;

    move-object/from16 v0, v23

    iput-object v2, v0, Lcom/android/server/wm/AppWindowAnimator;->thumbnailAnimation:Landroid/view/animation/Animation;

    .line 8155
    const/4 v2, 0x0

    move-object/from16 v0, v20

    iput-object v2, v0, Lcom/android/server/wm/AppWindowAnimator;->thumbnail:Landroid/view/SurfaceControl;

    .line 8162
    .end local v17    # "startingWindow":Lcom/android/server/wm/WindowState;
    .end local v20    # "tAppAnimator":Lcom/android/server/wm/AppWindowAnimator;
    .end local v21    # "ttoken":Lcom/android/server/wm/AppWindowToken;
    .end local v23    # "wAppAnimator":Lcom/android/server/wm/AppWindowAnimator;
    :cond_318
    if-nez p11, :cond_31d

    .line 8163
    monitor-exit v28

    goto/16 :goto_7c

    .line 8170
    :cond_31d
    sget-boolean v2, DEBUG_STARTING_WINDOW:Z

    if-eqz v2, :cond_33d

    const-string v2, "WindowManager"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "Checking theme of starting window: 0x"

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-static/range {p3 .. p3}, Ljava/lang/Integer;->toHexString(I)Ljava/lang/String;

    move-result-object v4

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 8172
    :cond_33d
    if-eqz p3, :cond_3e2

    .line 8173
    invoke-static {}, Lcom/android/server/AttributeCache;->instance()Lcom/android/server/AttributeCache;

    move-result-object v2

    sget-object v3, Lcom/android/internal/R$styleable;->Window:[I

    move-object/from16 v0, p0

    iget v4, v0, mCurrentUserId:I

    move-object/from16 v0, p2

    move/from16 v1, p3

    invoke-virtual {v2, v0, v1, v3, v4}, Lcom/android/server/AttributeCache;->get(Ljava/lang/String;I[II)Lcom/android/server/AttributeCache$Entry;

    move-result-object v11

    .line 8175
    .local v11, "ent":Lcom/android/server/AttributeCache$Entry;
    if-nez v11, :cond_356

    .line 8178
    monitor-exit v28

    goto/16 :goto_7c

    .line 8180
    :cond_356
    sget-boolean v2, DEBUG_STARTING_WINDOW:Z

    if-eqz v2, :cond_39f

    const-string v2, "WindowManager"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "Translucent="

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    iget-object v4, v11, Lcom/android/server/AttributeCache$Entry;->array:Landroid/content/res/TypedArray;

    const/4 v5, 0x5

    const/4 v6, 0x0

    invoke-virtual {v4, v5, v6}, Landroid/content/res/TypedArray;->getBoolean(IZ)Z

    move-result v4

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v3

    const-string v4, " Floating="

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    iget-object v4, v11, Lcom/android/server/AttributeCache$Entry;->array:Landroid/content/res/TypedArray;

    const/4 v5, 0x4

    const/4 v6, 0x0

    invoke-virtual {v4, v5, v6}, Landroid/content/res/TypedArray;->getBoolean(IZ)Z

    move-result v4

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v3

    const-string v4, " ShowWallpaper="

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    iget-object v4, v11, Lcom/android/server/AttributeCache$Entry;->array:Landroid/content/res/TypedArray;

    const/16 v5, 0xe

    const/4 v6, 0x0

    invoke-virtual {v4, v5, v6}, Landroid/content/res/TypedArray;->getBoolean(IZ)Z

    move-result v4

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 8189
    :cond_39f
    iget-object v2, v11, Lcom/android/server/AttributeCache$Entry;->array:Landroid/content/res/TypedArray;

    const/4 v3, 0x5

    invoke-virtual {v2, v3}, Landroid/content/res/TypedArray;->hasValue(I)Z

    move-result v25

    .line 8191
    .local v25, "windowIsTranslucentDefined":Z
    iget-object v2, v11, Lcom/android/server/AttributeCache$Entry;->array:Landroid/content/res/TypedArray;

    const/4 v3, 0x5

    const/4 v4, 0x0

    invoke-virtual {v2, v3, v4}, Landroid/content/res/TypedArray;->getBoolean(IZ)Z

    move-result v24

    .line 8193
    .local v24, "windowIsTranslucent":Z
    iget-object v2, v11, Lcom/android/server/AttributeCache$Entry;->array:Landroid/content/res/TypedArray;

    const/16 v3, 0x19

    const/4 v4, 0x0

    invoke-virtual {v2, v3, v4}, Landroid/content/res/TypedArray;->getBoolean(IZ)Z

    move-result v26

    .line 8195
    .local v26, "windowSwipeToDismiss":Z
    if-nez v24, :cond_3bd

    if-nez v25, :cond_3c0

    if-eqz v26, :cond_3c0

    .line 8196
    :cond_3bd
    monitor-exit v28

    goto/16 :goto_7c

    .line 8198
    :cond_3c0
    iget-object v2, v11, Lcom/android/server/AttributeCache$Entry;->array:Landroid/content/res/TypedArray;

    const/4 v3, 0x4

    const/4 v4, 0x0

    invoke-virtual {v2, v3, v4}, Landroid/content/res/TypedArray;->getBoolean(IZ)Z

    move-result v2

    if-eqz v2, :cond_3cd

    .line 8200
    monitor-exit v28

    goto/16 :goto_7c

    .line 8202
    :cond_3cd
    iget-object v2, v11, Lcom/android/server/AttributeCache$Entry;->array:Landroid/content/res/TypedArray;

    const/16 v3, 0xe

    const/4 v4, 0x0

    invoke-virtual {v2, v3, v4}, Landroid/content/res/TypedArray;->getBoolean(IZ)Z

    move-result v2

    if-eqz v2, :cond_3e2

    .line 8210
    move-object/from16 v0, p0

    iget-object v15, v0, mWallpaperTarget:Lcom/android/server/wm/WindowState;

    .line 8213
    .local v15, "mWallpaperTarget":Lcom/android/server/wm/WindowState;
    if-nez v15, :cond_44d

    .line 8219
    const/high16 v2, 0x100000

    or-int p9, p9, v2

    .line 8226
    .end local v11    # "ent":Lcom/android/server/AttributeCache$Entry;
    .end local v15    # "mWallpaperTarget":Lcom/android/server/wm/WindowState;
    .end local v24    # "windowIsTranslucent":Z
    .end local v25    # "windowIsTranslucentDefined":Z
    .end local v26    # "windowSwipeToDismiss":Z
    :cond_3e2
    sget-boolean v2, DEBUG_STARTING_WINDOW:Z

    if-eqz v2, :cond_3ed

    const-string v2, "WindowManager"

    const-string v3, "Creating StartingData"

    invoke-static {v2, v3}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 8227
    :cond_3ed
    new-instance v2, Lcom/android/server/wm/StartingData;

    move-object/from16 v3, p2

    move/from16 v4, p3

    move-object/from16 v5, p4

    move-object/from16 v6, p5

    move/from16 v7, p6

    move/from16 v8, p7

    move/from16 v9, p8

    move/from16 v10, p9

    invoke-direct/range {v2 .. v10}, Lcom/android/server/wm/StartingData;-><init>(Ljava/lang/String;ILandroid/content/res/CompatibilityInfo;Ljava/lang/CharSequence;IIII)V

    move-object/from16 v0, v27

    iput-object v2, v0, Lcom/android/server/wm/AppWindowToken;->startingData:Lcom/android/server/wm/StartingData;

    .line 8231
    move-object/from16 v0, p12

    move-object/from16 v1, v27

    iput-object v0, v1, Lcom/android/server/wm/AppWindowToken;->customStartingWindowData:Lcom/android/server/wm/CustomStartingWindowData;

    .line 8236
    new-instance v16, Landroid/util/Pair;

    invoke-static/range {p13 .. p13}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v2

    move-object/from16 v0, v16

    move-object/from16 v1, v27

    invoke-direct {v0, v1, v2}, Landroid/util/Pair;-><init>(Ljava/lang/Object;Ljava/lang/Object;)V

    .line 8237
    .restart local v16    # "msgPair":Landroid/util/Pair;, "Landroid/util/Pair<Lcom/android/server/wm/AppWindowToken;Ljava/lang/Integer;>;"
    move-object/from16 v0, p0

    iget-object v2, v0, mH:Lcom/android/server/wm/WindowManagerService$H;

    const/4 v3, 0x5

    move-object/from16 v0, v16

    invoke-virtual {v2, v3, v0}, Lcom/android/server/wm/WindowManagerService$H;->obtainMessage(ILjava/lang/Object;)Landroid/os/Message;

    move-result-object v12

    .line 8240
    .restart local v12    # "m":Landroid/os/Message;
    new-instance v22, Landroid/os/Bundle;

    invoke-direct/range {v22 .. v22}, Landroid/os/Bundle;-><init>()V

    .line 8241
    .restart local v22    # "userData":Landroid/os/Bundle;
    const-string/jumbo v2, "originalUserId"

    move-object/from16 v0, v22

    move/from16 v1, p14

    invoke-virtual {v0, v2, v1}, Landroid/os/Bundle;->putInt(Ljava/lang/String;I)V

    .line 8242
    move-object/from16 v0, v22

    invoke-virtual {v12, v0}, Landroid/os/Message;->setData(Landroid/os/Bundle;)V

    .line 8247
    sget-boolean v2, DEBUG_STARTING_WINDOW:Z

    if-eqz v2, :cond_443

    const-string v2, "WindowManager"

    const-string v3, "Enqueueing ADD_STARTING"

    invoke-static {v2, v3}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 8248
    :cond_443
    move-object/from16 v0, p0

    iget-object v2, v0, mH:Lcom/android/server/wm/WindowManagerService$H;

    invoke-virtual {v2, v12}, Lcom/android/server/wm/WindowManagerService$H;->sendMessageAtFrontOfQueue(Landroid/os/Message;)Z

    .line 8249
    monitor-exit v28

    goto/16 :goto_7c

    .line 8221
    .end local v12    # "m":Landroid/os/Message;
    .end local v16    # "msgPair":Landroid/util/Pair;, "Landroid/util/Pair<Lcom/android/server/wm/AppWindowToken;Ljava/lang/Integer;>;"
    .end local v22    # "userData":Landroid/os/Bundle;
    .restart local v11    # "ent":Lcom/android/server/AttributeCache$Entry;
    .restart local v15    # "mWallpaperTarget":Lcom/android/server/wm/WindowState;
    .restart local v24    # "windowIsTranslucent":Z
    .restart local v25    # "windowIsTranslucentDefined":Z
    .restart local v26    # "windowSwipeToDismiss":Z
    :cond_44d
    monitor-exit v28
    :try_end_44e
    .catchall {:try_start_8a .. :try_end_44e} :catchall_85

    goto/16 :goto_7c
.end method

.method public setAppTask(Landroid/os/IBinder;I)V
    .registers 10
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "taskId"    # I

    .prologue
    .line 6554
    const-string v3, "android.permission.MANAGE_APP_TOKENS"

    const-string/jumbo v4, "setAppTask()"

    invoke-virtual {p0, v3, v4}, checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v3

    if-nez v3, :cond_13

    .line 6556
    new-instance v3, Ljava/lang/SecurityException;

    const-string v4, "Requires MANAGE_APP_TOKENS permission"

    invoke-direct {v3, v4}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v3

    .line 6559
    :cond_13
    iget-object v4, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v4

    .line 6560
    :try_start_16
    invoke-virtual {p0, p1}, findAppWindowToken(Landroid/os/IBinder;)Lcom/android/server/wm/AppWindowToken;

    move-result-object v0

    .line 6561
    .local v0, "atoken":Lcom/android/server/wm/AppWindowToken;
    if-nez v0, :cond_36

    .line 6562
    const-string v3, "WindowManager"

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string v6, "Attempted to set task id of non-existing app token: "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v3, v5}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 6563
    monitor-exit v4

    .line 6575
    :goto_35
    return-void

    .line 6565
    :cond_36
    iget-object v2, v0, Lcom/android/server/wm/AppWindowToken;->mTask:Lcom/android/server/wm/Task;

    .line 6566
    .local v2, "oldTask":Lcom/android/server/wm/Task;
    invoke-virtual {v2, v0}, Lcom/android/server/wm/Task;->removeAppToken(Lcom/android/server/wm/AppWindowToken;)Z

    .line 6568
    iget-object v3, p0, mTaskIdToTask:Landroid/util/SparseArray;

    invoke-virtual {v3, p2}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/wm/Task;

    iput-object v1, v0, Lcom/android/server/wm/AppWindowToken;->mTask:Lcom/android/server/wm/Task;

    .line 6569
    .local v1, "newTask":Lcom/android/server/wm/Task;
    if-nez v1, :cond_51

    .line 6570
    iget-object v3, v2, Lcom/android/server/wm/Task;->mStack:Lcom/android/server/wm/TaskStack;

    iget v3, v3, Lcom/android/server/wm/TaskStack;->mStackId:I

    iget v5, v2, Lcom/android/server/wm/Task;->mUserId:I

    invoke-direct {p0, p2, v3, v5, v0}, createTaskLocked(IIILcom/android/server/wm/AppWindowToken;)Lcom/android/server/wm/Task;

    move-result-object v1

    .line 6573
    :cond_51
    const v3, 0x7fffffff

    invoke-virtual {v1, v3, v0}, Lcom/android/server/wm/Task;->addAppToken(ILcom/android/server/wm/AppWindowToken;)V

    .line 6574
    monitor-exit v4

    goto :goto_35

    .end local v0    # "atoken":Lcom/android/server/wm/AppWindowToken;
    .end local v1    # "newTask":Lcom/android/server/wm/Task;
    .end local v2    # "oldTask":Lcom/android/server/wm/Task;
    :catchall_59
    move-exception v3

    monitor-exit v4
    :try_end_5b
    .catchall {:try_start_16 .. :try_end_5b} :catchall_59

    throw v3
.end method

.method public setAppTokenDisplayId(Landroid/view/IApplicationToken;I)V
    .registers 8
    .param p1, "token"    # Landroid/view/IApplicationToken;
    .param p2, "displayId"    # I

    .prologue
    .line 22692
    iget-object v2, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v2

    .line 22693
    :try_start_3
    invoke-interface {p1}, Landroid/view/IApplicationToken;->asBinder()Landroid/os/IBinder;

    move-result-object v1

    invoke-virtual {p0, v1}, findAppWindowToken(Landroid/os/IBinder;)Lcom/android/server/wm/AppWindowToken;

    move-result-object v0

    .line 22694
    .local v0, "atoken":Lcom/android/server/wm/AppWindowToken;
    if-nez v0, :cond_27

    .line 22695
    const-string v1, "WindowManager"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "Attempted to set displayId of non-existing app token for "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v1, v3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 22696
    monitor-exit v2

    .line 22705
    :goto_26
    return-void

    .line 22698
    :cond_27
    sget-boolean v1, Lcom/samsung/android/multidisplay/common/MultiDisplayFeatures;->DEBUG_MULTIDISPLAY:Z

    if-eqz v1, :cond_4d

    .line 22699
    const-string v1, "WindowManager"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "Set displayId #"

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v3

    const-string v4, " for app token: "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v1, v3}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 22701
    :cond_4d
    invoke-virtual {v0}, Lcom/android/server/wm/AppWindowToken;->getDisplayId()I

    move-result v1

    if-eq v1, p2, :cond_56

    .line 22702
    invoke-virtual {v0, p2}, Lcom/android/server/wm/AppWindowToken;->setDisplayId(I)V

    .line 22704
    :cond_56
    monitor-exit v2

    goto :goto_26

    .end local v0    # "atoken":Lcom/android/server/wm/AppWindowToken;
    :catchall_58
    move-exception v1

    monitor-exit v2
    :try_end_5a
    .catchall {:try_start_3 .. :try_end_5a} :catchall_58

    throw v1
.end method

.method public setAppVisibility(Landroid/os/IBinder;Z)V
    .registers 4
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "visible"    # Z

    .prologue
    .line 8505
    const/4 v0, 0x0

    invoke-virtual {p0, p1, p2, v0}, setAppVisibility(Landroid/os/IBinder;ZI)V

    .line 8506
    return-void
.end method

.method public setAppVisibility(Landroid/os/IBinder;ZI)V
    .registers 26
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "visible"    # Z
    .param p3, "displayId"    # I

    .prologue
    .line 8510
    const-string v2, "android.permission.MANAGE_APP_TOKENS"

    const-string/jumbo v4, "setAppVisibility()"

    move-object/from16 v0, p0

    invoke-virtual {v0, v2, v4}, checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v2

    if-nez v2, :cond_15

    .line 8512
    new-instance v2, Ljava/lang/SecurityException;

    const-string v4, "Requires MANAGE_APP_TOKENS permission"

    invoke-direct {v2, v4}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v2

    .line 8517
    :cond_15
    move-object/from16 v0, p0

    iget-object v0, v0, mWindowMap:Ljava/util/HashMap;

    move-object/from16 v21, v0

    monitor-enter v21

    .line 8518
    :try_start_1c
    invoke-virtual/range {p0 .. p1}, findAppWindowToken(Landroid/os/IBinder;)Lcom/android/server/wm/AppWindowToken;

    move-result-object v3

    .line 8519
    .local v3, "wtoken":Lcom/android/server/wm/AppWindowToken;
    if-nez v3, :cond_3e

    .line 8520
    const-string v2, "WindowManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Attempted to set visibility of non-existing app token: "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p1

    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v2, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 8521
    monitor-exit v21

    .line 8657
    :goto_3d
    return-void

    .line 8532
    :cond_3e
    move-object/from16 v0, p0

    iget-object v12, v0, mAppTransition:Lcom/android/server/wm/AppTransition;

    .line 8533
    .local v12, "mAppTransition":Lcom/android/server/wm/AppTransition;
    move-object/from16 v0, p0

    iget-object v14, v0, mOpeningApps:Landroid/util/ArraySet;

    .line 8534
    .local v14, "mOpeningApps":Landroid/util/ArraySet;, "Landroid/util/ArraySet<Lcom/android/server/wm/AppWindowToken;>;"
    move-object/from16 v0, p0

    iget-object v13, v0, mClosingApps:Landroid/util/ArraySet;

    .line 8537
    .local v13, "mClosingApps":Landroid/util/ArraySet;, "Landroid/util/ArraySet<Lcom/android/server/wm/AppWindowToken;>;"
    sget-boolean v2, DEBUG_APP_TRANSITIONS:Z

    if-nez v2, :cond_52

    sget-boolean v2, DEBUG_ORIENTATION:Z

    if-eqz v2, :cond_b6

    :cond_52
    const-string v2, "WindowManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v5, "setAppVisibility("

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p1

    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, ", displayId="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move/from16 v0, p3

    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, ", visible="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move/from16 v0, p2

    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, "): "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, " hidden="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    iget-boolean v5, v3, Lcom/android/server/wm/AppWindowToken;->hidden:Z

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, " hiddenRequested="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    iget-boolean v5, v3, Lcom/android/server/wm/AppWindowToken;->hiddenRequested:Z

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, " Callers="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    const/4 v5, 0x6

    invoke-static {v5}, Landroid/os/Debug;->getCallers(I)Ljava/lang/String;

    move-result-object v5

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v2, v4}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 8544
    :cond_b6
    invoke-virtual {v14, v3}, Landroid/util/ArraySet;->remove(Ljava/lang/Object;)Z

    .line 8545
    invoke-virtual {v13, v3}, Landroid/util/ArraySet;->remove(Ljava/lang/Object;)Z

    .line 8547
    if-nez p2, :cond_226

    const/4 v2, 0x1

    :goto_bf
    iput-boolean v2, v3, Lcom/android/server/wm/AppWindowToken;->hiddenRequested:Z

    .line 8548
    const/4 v2, 0x0

    iput-boolean v2, v3, Lcom/android/server/wm/AppWindowToken;->inPendingTransaction:Z

    .line 8553
    move-object/from16 v0, p0

    move/from16 v1, p3

    invoke-virtual {v0, v1}, okToDisplay(I)Z

    move-result v2

    if-eqz v2, :cond_230

    invoke-virtual {v12}, Lcom/android/server/wm/AppTransition;->isTransitionSet()Z

    move-result v2

    if-nez v2, :cond_e4

    move-object/from16 v0, p0

    move/from16 v1, p3

    invoke-virtual {v0, v1}, getMultiWindowTransitionLocked(I)Lcom/android/server/wm/MultiWindowTransition;

    move-result-object v2

    invoke-virtual {v2}, Lcom/android/server/wm/MultiWindowTransition;->getMultiWindowTransition()I

    move-result v2

    const/16 v4, 0xa

    if-ne v2, v4, :cond_230

    .line 8558
    :cond_e4
    if-nez p2, :cond_10e

    invoke-virtual {v3}, Lcom/android/server/wm/AppWindowToken;->findMainWindow()Lcom/android/server/wm/WindowState;

    move-result-object v2

    if-nez v2, :cond_10e

    .line 8559
    const/4 v2, 0x1

    iput-boolean v2, v3, Lcom/android/server/wm/AppWindowToken;->noWindowWhenHiddenRequested:Z

    .line 8560
    sget-boolean v2, DEBUG_APP_TRANSITIONS:Z

    if-eqz v2, :cond_10e

    const-string v2, "WindowManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v5, "setAppVisibility: noWindowWhenHiddenRequested "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    iget-boolean v5, v3, Lcom/android/server/wm/AppWindowToken;->noWindowWhenHiddenRequested:Z

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v2, v4}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 8569
    :cond_10e
    iget-object v2, v3, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    iget-boolean v2, v2, Lcom/android/server/wm/AppWindowAnimator;->usingTransferredAnimation:Z

    if-nez v2, :cond_13f

    iget-boolean v2, v3, Lcom/android/server/wm/AppWindowToken;->startingDisplayed:Z

    if-eqz v2, :cond_11e

    move-object/from16 v0, p0

    iget-boolean v2, v0, mSkipAppTransitionAnimation:Z

    if-eqz v2, :cond_13f

    .line 8571
    :cond_11e
    sget-boolean v2, DEBUG_APP_TRANSITIONS:Z

    if-eqz v2, :cond_13a

    const-string v2, "WindowManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Setting dummy animation on: "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v2, v4}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 8573
    :cond_13a
    iget-object v2, v3, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    invoke-virtual {v2}, Lcom/android/server/wm/AppWindowAnimator;->setDummyAnimation()V

    .line 8575
    :cond_13f
    const/4 v2, 0x1

    iput-boolean v2, v3, Lcom/android/server/wm/AppWindowToken;->inPendingTransaction:Z

    .line 8576
    if-eqz p2, :cond_229

    .line 8577
    invoke-virtual {v14, v3}, Landroid/util/ArraySet;->add(Ljava/lang/Object;)Z

    .line 8578
    const/4 v2, 0x0

    iput-boolean v2, v3, Lcom/android/server/wm/AppWindowToken;->startingMoved:Z

    .line 8579
    const/4 v2, 0x1

    iput-boolean v2, v3, Lcom/android/server/wm/AppWindowToken;->mEnteringAnimation:Z

    .line 8584
    iget-boolean v2, v3, Lcom/android/server/wm/AppWindowToken;->hidden:Z

    if-eqz v2, :cond_1de

    .line 8585
    const/4 v2, 0x0

    iput-boolean v2, v3, Lcom/android/server/wm/AppWindowToken;->allDrawn:Z

    .line 8586
    const/4 v2, 0x0

    iput-boolean v2, v3, Lcom/android/server/wm/AppWindowToken;->deferClearAllDrawn:Z

    .line 8587
    const/4 v2, 0x1

    iput-boolean v2, v3, Lcom/android/server/wm/AppWindowToken;->waitingToShow:Z

    .line 8589
    invoke-virtual {v12}, Lcom/android/server/wm/AppTransition;->isTransitionSet()Z

    move-result v2

    if-eqz v2, :cond_199

    .line 8590
    sget-boolean v2, DEBUG_APP_TRANSITIONS:Z

    if-eqz v2, :cond_194

    const-string v2, "WindowManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Initialize numInterestingWindows="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    iget v5, v3, Lcom/android/server/wm/AppWindowToken;->numInterestingWindows:I

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, ", numDrawnWindows="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    iget v5, v3, Lcom/android/server/wm/AppWindowToken;->numDrawnWindows:I

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, " of token="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v2, v4}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 8593
    :cond_194
    const/4 v2, 0x0

    iput v2, v3, Lcom/android/server/wm/AppWindowToken;->numDrawnWindows:I

    iput v2, v3, Lcom/android/server/wm/AppWindowToken;->numInterestingWindows:I

    .line 8596
    :cond_199
    iget-boolean v2, v3, Lcom/android/server/wm/AppWindowToken;->clientHidden:Z

    if-eqz v2, :cond_1de

    .line 8603
    const/4 v2, 0x0

    iput-boolean v2, v3, Lcom/android/server/wm/AppWindowToken;->clientHidden:Z

    .line 8605
    iget-object v0, v3, Lcom/android/server/wm/AppWindowToken;->mTask:Lcom/android/server/wm/Task;

    move-object/from16 v18, v0

    .line 8606
    .local v18, "task":Lcom/android/server/wm/Task;
    if-eqz v18, :cond_1db

    move-object/from16 v0, v18

    iget-object v2, v0, Lcom/android/server/wm/Task;->mStack:Lcom/android/server/wm/TaskStack;

    if-eqz v2, :cond_1db

    move-object/from16 v0, v18

    iget-object v2, v0, Lcom/android/server/wm/Task;->mStack:Lcom/android/server/wm/TaskStack;

    iget-boolean v2, v2, Lcom/android/server/wm/TaskStack;->mPostFixedBound:Z

    if-eqz v2, :cond_1db

    .line 8607
    new-instance v15, Landroid/graphics/Rect;

    invoke-direct {v15}, Landroid/graphics/Rect;-><init>()V

    .line 8608
    .local v15, "rect":Landroid/graphics/Rect;
    move-object/from16 v0, v18

    iget-object v2, v0, Lcom/android/server/wm/Task;->mStack:Lcom/android/server/wm/TaskStack;

    invoke-virtual {v2, v15}, Lcom/android/server/wm/TaskStack;->getBounds(Landroid/graphics/Rect;)V

    .line 8609
    const/4 v2, 0x0

    const/4 v4, 0x0

    iget v5, v15, Landroid/graphics/Rect;->right:I

    iget v6, v15, Landroid/graphics/Rect;->bottom:I

    invoke-virtual {v15, v2, v4, v5, v6}, Landroid/graphics/Rect;->intersect(IIII)Z

    .line 8610
    move-object/from16 v0, v18

    iget-object v2, v0, Lcom/android/server/wm/Task;->mStack:Lcom/android/server/wm/TaskStack;

    invoke-virtual {v2, v15}, Lcom/android/server/wm/TaskStack;->setBounds(Landroid/graphics/Rect;)Z

    .line 8611
    move-object/from16 v0, v18

    iget-object v2, v0, Lcom/android/server/wm/Task;->mStack:Lcom/android/server/wm/TaskStack;

    invoke-virtual {v2}, Lcom/android/server/wm/TaskStack;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    move-result-object v2

    const/4 v4, 0x1

    iput-boolean v4, v2, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    .line 8614
    .end local v15    # "rect":Landroid/graphics/Rect;
    :cond_1db
    invoke-virtual {v3}, Lcom/android/server/wm/AppWindowToken;->sendAppVisibilityToClients()V

    .line 8621
    .end local v18    # "task":Lcom/android/server/wm/Task;
    :cond_1de
    :goto_1de
    invoke-virtual {v12}, Lcom/android/server/wm/AppTransition;->getAppTransition()I

    move-result v2

    const/16 v4, 0x10

    if-ne v2, v4, :cond_220

    .line 8623
    invoke-virtual/range {p0 .. p0}, getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v2

    move-object/from16 v0, p0

    invoke-direct {v0, v2}, findFocusedWindowLocked(Lcom/android/server/wm/DisplayContent;)Lcom/android/server/wm/WindowState;

    move-result-object v19

    .line 8625
    .local v19, "win":Lcom/android/server/wm/WindowState;
    if-eqz v19, :cond_220

    .line 8626
    move-object/from16 v0, v19

    iget-object v10, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    .line 8627
    .local v10, "focusedToken":Lcom/android/server/wm/AppWindowToken;
    if-eqz v10, :cond_220

    .line 8628
    sget-boolean v2, DEBUG_APP_TRANSITIONS:Z

    if-eqz v2, :cond_21a

    const-string v2, "WindowManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "TRANSIT_TASK_OPEN_BEHIND,  adding "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, " to mOpeningApps"

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v2, v4}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 8631
    :cond_21a
    const/4 v2, 0x1

    iput-boolean v2, v10, Lcom/android/server/wm/AppWindowToken;->hidden:Z

    .line 8632
    invoke-virtual {v14, v10}, Landroid/util/ArraySet;->add(Ljava/lang/Object;)Z

    .line 8636
    .end local v10    # "focusedToken":Lcom/android/server/wm/AppWindowToken;
    .end local v19    # "win":Lcom/android/server/wm/WindowState;
    :cond_220
    monitor-exit v21

    goto/16 :goto_3d

    .line 8656
    .end local v3    # "wtoken":Lcom/android/server/wm/AppWindowToken;
    .end local v12    # "mAppTransition":Lcom/android/server/wm/AppTransition;
    .end local v13    # "mClosingApps":Landroid/util/ArraySet;, "Landroid/util/ArraySet<Lcom/android/server/wm/AppWindowToken;>;"
    .end local v14    # "mOpeningApps":Landroid/util/ArraySet;, "Landroid/util/ArraySet<Lcom/android/server/wm/AppWindowToken;>;"
    :catchall_223
    move-exception v2

    monitor-exit v21
    :try_end_225
    .catchall {:try_start_1c .. :try_end_225} :catchall_223

    throw v2

    .line 8547
    .restart local v3    # "wtoken":Lcom/android/server/wm/AppWindowToken;
    .restart local v12    # "mAppTransition":Lcom/android/server/wm/AppTransition;
    .restart local v13    # "mClosingApps":Landroid/util/ArraySet;, "Landroid/util/ArraySet<Lcom/android/server/wm/AppWindowToken;>;"
    .restart local v14    # "mOpeningApps":Landroid/util/ArraySet;, "Landroid/util/ArraySet<Lcom/android/server/wm/AppWindowToken;>;"
    :cond_226
    const/4 v2, 0x0

    goto/16 :goto_bf

    .line 8618
    :cond_229
    :try_start_229
    invoke-virtual {v13, v3}, Landroid/util/ArraySet;->add(Ljava/lang/Object;)Z

    .line 8619
    const/4 v2, 0x0

    iput-boolean v2, v3, Lcom/android/server/wm/AppWindowToken;->mEnteringAnimation:Z

    goto :goto_1de

    .line 8639
    :cond_230
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v16

    .line 8640
    .local v16, "origId":J
    const/4 v2, 0x0

    iput-boolean v2, v3, Lcom/android/server/wm/AppWindowToken;->inPendingTransaction:Z

    .line 8641
    const/4 v4, 0x0

    const/4 v6, -0x1

    const/4 v7, 0x1

    iget-boolean v8, v3, Lcom/android/server/wm/AppWindowToken;->voiceInteraction:Z

    move-object/from16 v2, p0

    move/from16 v5, p2

    invoke-virtual/range {v2 .. v8}, setTokenVisibilityLocked(Lcom/android/server/wm/AppWindowToken;Landroid/view/WindowManager$LayoutParams;ZIZZ)Z

    .line 8643
    invoke-virtual {v3}, Lcom/android/server/wm/AppWindowToken;->updateReportedVisibilityLocked()V

    .line 8645
    if-nez p2, :cond_265

    .line 8646
    iget-object v2, v3, Lcom/android/server/wm/AppWindowToken;->allAppWindows:Lcom/android/server/wm/WindowList;

    invoke-virtual {v2}, Lcom/android/server/wm/WindowList;->size()I

    move-result v9

    .line 8647
    .local v9, "NUM":I
    const/4 v11, 0x0

    .local v11, "i":I
    :goto_24f
    if-ge v11, v9, :cond_265

    .line 8648
    iget-object v2, v3, Lcom/android/server/wm/AppWindowToken;->allAppWindows:Lcom/android/server/wm/WindowList;

    invoke-virtual {v2, v11}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v20

    check-cast v20, Lcom/android/server/wm/WindowState;

    .line 8649
    .local v20, "ws":Lcom/android/server/wm/WindowState;
    move-object/from16 v0, v20

    iget-boolean v2, v0, Lcom/android/server/wm/WindowState;->mWaitingForOrientation:Z

    if-eqz v2, :cond_262

    .line 8650
    invoke-virtual/range {v20 .. v20}, Lcom/android/server/wm/WindowState;->stopWaitingForOrientation()V

    .line 8647
    :cond_262
    add-int/lit8 v11, v11, 0x1

    goto :goto_24f

    .line 8655
    .end local v9    # "NUM":I
    .end local v11    # "i":I
    .end local v20    # "ws":Lcom/android/server/wm/WindowState;
    :cond_265
    invoke-static/range {v16 .. v17}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 8656
    monitor-exit v21
    :try_end_269
    .catchall {:try_start_229 .. :try_end_269} :catchall_223

    goto/16 :goto_3d
.end method

.method public setAppWillBeHidden(Landroid/os/IBinder;)V
    .registers 7
    .param p1, "token"    # Landroid/os/IBinder;

    .prologue
    .line 8263
    const-string v1, "android.permission.MANAGE_APP_TOKENS"

    const-string/jumbo v2, "setAppWillBeHidden()"

    invoke-virtual {p0, v1, v2}, checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v1

    if-nez v1, :cond_13

    .line 8265
    new-instance v1, Ljava/lang/SecurityException;

    const-string v2, "Requires MANAGE_APP_TOKENS permission"

    invoke-direct {v1, v2}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 8270
    :cond_13
    iget-object v2, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v2

    .line 8271
    :try_start_16
    invoke-virtual {p0, p1}, findAppWindowToken(Landroid/os/IBinder;)Lcom/android/server/wm/AppWindowToken;

    move-result-object v0

    .line 8272
    .local v0, "wtoken":Lcom/android/server/wm/AppWindowToken;
    if-nez v0, :cond_36

    .line 8273
    const-string v1, "WindowManager"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "Attempted to set will be hidden of non-existing app token: "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v1, v3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 8274
    monitor-exit v2

    .line 8278
    :goto_35
    return-void

    .line 8276
    :cond_36
    const/4 v1, 0x1

    iput-boolean v1, v0, Lcom/android/server/wm/AppWindowToken;->willBeHidden:Z

    .line 8277
    monitor-exit v2

    goto :goto_35

    .end local v0    # "wtoken":Lcom/android/server/wm/AppWindowToken;
    :catchall_3b
    move-exception v1

    monitor-exit v2
    :try_end_3d
    .catchall {:try_start_16 .. :try_end_3d} :catchall_3b

    throw v1
.end method

.method public setAppWindowIsLastShownWhenLocked(Landroid/view/IApplicationToken;Z)Z
    .registers 6
    .param p1, "token"    # Landroid/view/IApplicationToken;
    .param p2, "isLastShownWhenLocked"    # Z

    .prologue
    const/4 v1, 0x0

    .line 21963
    if-nez p1, :cond_4

    .line 21971
    :cond_3
    :goto_3
    return v1

    .line 21966
    :cond_4
    invoke-interface {p1}, Landroid/view/IApplicationToken;->asBinder()Landroid/os/IBinder;

    move-result-object v2

    invoke-virtual {p0, v2}, findAppWindowToken(Landroid/os/IBinder;)Lcom/android/server/wm/AppWindowToken;

    move-result-object v0

    .line 21967
    .local v0, "wtoken":Lcom/android/server/wm/AppWindowToken;
    if-eqz v0, :cond_3

    .line 21970
    iput-boolean p2, v0, Lcom/android/server/wm/AppWindowToken;->mIsLastShownWhenLocked:Z

    .line 21971
    const/4 v1, 0x1

    goto :goto_3
.end method

.method public setBendedPendingIntent(Landroid/app/PendingIntent;Landroid/content/Intent;)V
    .registers 4
    .param p1, "p"    # Landroid/app/PendingIntent;
    .param p2, "fillInIntent"    # Landroid/content/Intent;

    .prologue
    .line 9960
    iget-object v0, p0, mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v0, p1, p2}, Landroid/view/WindowManagerPolicy;->setBendedPendingIntent(Landroid/app/PendingIntent;Landroid/content/Intent;)V

    .line 9961
    return-void
.end method

.method public setBendedPendingIntentInSecure(Landroid/app/PendingIntent;Landroid/content/Intent;)V
    .registers 4
    .param p1, "p"    # Landroid/app/PendingIntent;
    .param p2, "fillInIntent"    # Landroid/content/Intent;

    .prologue
    .line 9968
    iget-object v0, p0, mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v0, p1, p2}, Landroid/view/WindowManagerPolicy;->setBendedPendingIntentInSecure(Landroid/app/PendingIntent;Landroid/content/Intent;)V

    .line 9969
    return-void
.end method

.method public setCenterBarPoint(ILandroid/graphics/Point;)V
    .registers 6
    .param p1, "displayId"    # I
    .param p2, "point"    # Landroid/graphics/Point;

    .prologue
    .line 22023
    iget-object v2, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v2

    .line 22024
    :try_start_3
    invoke-virtual {p0, p1}, getDisplayContentLocked(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v0

    .line 22025
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-eqz v0, :cond_c

    .line 22026
    invoke-virtual {v0, p2}, Lcom/android/server/wm/DisplayContent;->setCenterBarPoint(Landroid/graphics/Point;)V

    .line 22028
    :cond_c
    monitor-exit v2

    .line 22029
    return-void

    .line 22028
    .end local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :catchall_e
    move-exception v1

    monitor-exit v2
    :try_end_10
    .catchall {:try_start_3 .. :try_end_10} :catchall_e

    throw v1
.end method

.method public setChildCoupledTask(Landroid/view/IApplicationToken;Landroid/view/IApplicationToken;)V
    .registers 3
    .param p1, "token"    # Landroid/view/IApplicationToken;
    .param p2, "childToken"    # Landroid/view/IApplicationToken;

    .prologue
    .line 22742
    return-void
.end method

.method public setCurrentInputMethodClient(Landroid/os/IBinder;)V
    .registers 6
    .param p1, "token"    # Landroid/os/IBinder;

    .prologue
    .line 21402
    iget-object v2, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v2

    .line 21403
    :try_start_3
    iget-object v1, p0, mWindowMap:Ljava/util/HashMap;

    invoke-virtual {v1, p1}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/wm/WindowState;

    .line 21404
    .local v0, "client":Lcom/android/server/wm/WindowState;
    if-eqz v0, :cond_26

    .line 21405
    iget-object v1, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v1, v1, Landroid/view/WindowManager$LayoutParams;->type:I

    const/16 v3, 0x3e9

    if-eq v1, v3, :cond_24

    iget-object v1, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v1, v1, Landroid/view/WindowManager$LayoutParams;->type:I

    const/16 v3, 0x3e8

    if-eq v1, v3, :cond_24

    iget-object v1, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v1, v1, Landroid/view/WindowManager$LayoutParams;->type:I

    const/4 v3, 0x3

    if-ne v1, v3, :cond_26

    .line 21408
    :cond_24
    iget-object v0, p0, mCurrentFocus:Lcom/android/server/wm/WindowState;

    .line 21411
    :cond_26
    iput-object v0, p0, mCurrentInputMethodClient:Lcom/android/server/wm/WindowState;

    .line 21412
    monitor-exit v2
    :try_end_29
    .catchall {:try_start_3 .. :try_end_29} :catchall_31

    .line 21414
    iget-object v1, p0, mPolicy:Landroid/view/WindowManagerPolicy;

    iget-object v2, p0, mCurrentInputMethodClient:Lcom/android/server/wm/WindowState;

    invoke-interface {v1, v2}, Landroid/view/WindowManagerPolicy;->updateTspInputMethodPolicy(Landroid/view/WindowManagerPolicy$WindowState;)V

    .line 21415
    return-void

    .line 21412
    .end local v0    # "client":Lcom/android/server/wm/WindowState;
    :catchall_31
    move-exception v1

    :try_start_32
    monitor-exit v2
    :try_end_33
    .catchall {:try_start_32 .. :try_end_33} :catchall_31

    throw v1
.end method

.method public setCurrentProfileIds([I)V
    .registers 4
    .param p1, "currentProfileIds"    # [I

    .prologue
    .line 10226
    iget-object v1, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v1

    .line 10227
    :try_start_3
    iput-object p1, p0, mCurrentProfileIds:[I

    .line 10228
    monitor-exit v1

    .line 10229
    return-void

    .line 10228
    :catchall_7
    move-exception v0

    monitor-exit v1
    :try_end_9
    .catchall {:try_start_3 .. :try_end_9} :catchall_7

    throw v0
.end method

.method public setCurrentUser(I[I)V
    .registers 8
    .param p1, "newUserId"    # I
    .param p2, "currentProfileIds"    # [I

    .prologue
    .line 10243
    iget-object v4, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v4

    .line 10244
    :try_start_3
    iput p1, p0, mCurrentUserId:I

    .line 10245
    iput-object p2, p0, mCurrentProfileIds:[I

    .line 10249
    iget-object v3, p0, mAppTransition:Lcom/android/server/wm/AppTransition;

    invoke-virtual {v3, p1}, Lcom/android/server/wm/AppTransition;->setCurrentUser(I)V

    .line 10253
    iget-object v3, p0, mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v3, p1}, Landroid/view/WindowManagerPolicy;->setCurrentUserLw(I)V

    .line 10256
    iget-object v3, p0, mDisplayContents:Landroid/util/SparseArray;

    invoke-virtual {v3}, Landroid/util/SparseArray;->size()I

    move-result v2

    .line 10257
    .local v2, "numDisplays":I
    const/4 v1, 0x0

    .local v1, "displayNdx":I
    :goto_18
    if-ge v1, v2, :cond_2b

    .line 10258
    iget-object v3, p0, mDisplayContents:Landroid/util/SparseArray;

    invoke-virtual {v3, v1}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/wm/DisplayContent;

    .line 10264
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    invoke-virtual {v0, p1}, Lcom/android/server/wm/DisplayContent;->switchUserStacks(I)V

    .line 10265
    invoke-direct {p0, v0}, rebuildAppWindowListLocked(Lcom/android/server/wm/DisplayContent;)V

    .line 10257
    add-int/lit8 v1, v1, 0x1

    goto :goto_18

    .line 10267
    .end local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :cond_2b
    invoke-direct {p0}, performLayoutAndPlaceSurfacesLocked()V

    .line 10268
    monitor-exit v4

    .line 10269
    return-void

    .line 10268
    .end local v1    # "displayNdx":I
    .end local v2    # "numDisplays":I
    :catchall_30
    move-exception v3

    monitor-exit v4
    :try_end_32
    .catchall {:try_start_3 .. :try_end_32} :catchall_30

    throw v3
.end method

.method public setCustomImage(Landroid/content/pm/ActivityInfo;ILjava/io/FileDescriptor;I)Z
    .registers 6
    .param p1, "info"    # Landroid/content/pm/ActivityInfo;
    .param p2, "taskUserId"    # I
    .param p3, "fd"    # Ljava/io/FileDescriptor;
    .param p4, "rotation"    # I

    .prologue
    .line 22422
    iget-object v0, p0, mCustomStartingWindowManager:Lcom/android/server/wm/CustomStartingWindowManager;

    if-eqz v0, :cond_b

    .line 22423
    iget-object v0, p0, mCustomStartingWindowManager:Lcom/android/server/wm/CustomStartingWindowManager;

    invoke-virtual {v0, p1, p2, p3, p4}, Lcom/android/server/wm/CustomStartingWindowManager;->setCustomImage(Landroid/content/pm/ActivityInfo;ILjava/io/FileDescriptor;I)Z

    move-result v0

    .line 22425
    :goto_a
    return v0

    :cond_b
    const/4 v0, 0x0

    goto :goto_a
.end method

.method public setDismissKeyguardOnNextActivity(Z)V
    .registers 2
    .param p1, "dismiss"    # Z

    .prologue
    .line 6966
    iput-boolean p1, p0, mRequestedDismissKeyguardOnNextActivity:Z

    .line 6967
    return-void
.end method

.method public setEventDispatching(Z)V
    .registers 4
    .param p1, "enabled"    # Z

    .prologue
    .line 13000
    const-string v0, "android.permission.MANAGE_APP_TOKENS"

    const-string/jumbo v1, "setEventDispatching()"

    invoke-virtual {p0, v0, v1}, checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v0

    if-nez v0, :cond_13

    .line 13002
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Requires MANAGE_APP_TOKENS permission"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 13005
    :cond_13
    iget-object v1, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v1

    .line 13006
    :try_start_16
    iput-boolean p1, p0, mEventDispatchingEnabled:Z

    .line 13007
    iget-boolean v0, p0, mDisplayEnabled:Z

    if-eqz v0, :cond_21

    .line 13008
    iget-object v0, p0, mInputMonitor:Lcom/android/server/wm/InputMonitor;

    invoke-virtual {v0, p1}, Lcom/android/server/wm/InputMonitor;->setEventDispatchingLw(Z)V

    .line 13010
    :cond_21
    monitor-exit v1

    .line 13011
    return-void

    .line 13010
    :catchall_23
    move-exception v0

    monitor-exit v1
    :try_end_25
    .catchall {:try_start_16 .. :try_end_25} :catchall_23

    throw v0
.end method

.method public setFinishWithCoupledTask(Landroid/view/IApplicationToken;Z)V
    .registers 3
    .param p1, "token"    # Landroid/view/IApplicationToken;
    .param p2, "finishWithCoupledTask"    # Z

    .prologue
    .line 22775
    return-void
.end method

.method public setFocusedApp(Landroid/os/IBinder;Z)V
    .registers 13
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "moveFocusNow"    # Z

    .prologue
    const/4 v3, 0x0

    const/4 v0, 0x1

    .line 7553
    const-string v6, "android.permission.MANAGE_APP_TOKENS"

    const-string/jumbo v7, "setFocusedApp()"

    invoke-virtual {p0, v6, v7}, checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v6

    if-nez v6, :cond_15

    .line 7555
    new-instance v3, Ljava/lang/SecurityException;

    const-string v6, "Requires MANAGE_APP_TOKENS permission"

    invoke-direct {v3, v6}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v3

    .line 7559
    :cond_15
    const/4 v1, -0x1

    .line 7573
    .local v1, "displayId":I
    iget-object v6, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v6

    .line 7575
    if-nez p1, :cond_b7

    .line 7576
    :try_start_1b
    sget-boolean v7, DEBUG_FOCUS_LIGHT:Z

    if-eqz v7, :cond_39

    const-string v7, "WindowManager"

    new-instance v8, Ljava/lang/StringBuilder;

    invoke-direct {v8}, Ljava/lang/StringBuilder;-><init>()V

    const-string v9, "Clearing focused app, was "

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v8

    iget-object v9, p0, mFocusedApp:Lcom/android/server/wm/AppWindowToken;

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v8

    invoke-virtual {v8}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v8

    invoke-static {v7, v8}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 7577
    :cond_39
    const/4 v2, 0x0

    .line 7587
    .local v2, "newFocus":Lcom/android/server/wm/AppWindowToken;
    :cond_3a
    :goto_3a
    iget-object v7, p0, mFocusedApp:Lcom/android/server/wm/AppWindowToken;

    if-eq v7, v2, :cond_10c

    .line 7588
    .local v0, "changed":Z
    :goto_3e
    if-eqz v0, :cond_a5

    .line 7589
    iput-object v2, p0, mFocusedApp:Lcom/android/server/wm/AppWindowToken;

    .line 7590
    iget-object v3, p0, mInputMonitor:Lcom/android/server/wm/InputMonitor;

    invoke-virtual {v3, v2}, Lcom/android/server/wm/InputMonitor;->setFocusedAppLw(Lcom/android/server/wm/AppWindowToken;)V

    .line 7591
    invoke-direct {p0}, needToUpdateFocusStackFrame()Z

    move-result v3

    if-eqz v3, :cond_10f

    .line 7592
    const/4 v3, 0x1

    const/4 v7, 0x0

    invoke-virtual {p0, v3, v7}, setFocusedStackFrame(ZZ)V

    .line 7596
    :goto_52
    iget-object v3, p0, mFocusedApp:Lcom/android/server/wm/AppWindowToken;

    if-eqz v3, :cond_6f

    iget-object v3, p0, mFocusedApp:Lcom/android/server/wm/AppWindowToken;

    iget-object v3, v3, Lcom/android/server/wm/AppWindowToken;->appMultiWindowStyle:Lcom/samsung/android/multiwindow/MultiWindowStyle;

    if-eqz v3, :cond_6f

    iget-object v3, p0, mFocusedApp:Lcom/android/server/wm/AppWindowToken;

    iget-object v3, v3, Lcom/android/server/wm/AppWindowToken;->appMultiWindowStyle:Lcom/samsung/android/multiwindow/MultiWindowStyle;

    invoke-virtual {v3}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->isSplit()Z

    move-result v3

    if-nez v3, :cond_6f

    .line 7599
    invoke-static {}, Landroid/view/SurfaceControl;->openTransaction()V
    :try_end_69
    .catchall {:try_start_1b .. :try_end_69} :catchall_109

    .line 7601
    :try_start_69
    invoke-virtual {p0}, setFocusedStackLayer()V
    :try_end_6c
    .catchall {:try_start_69 .. :try_end_6c} :catchall_114

    .line 7603
    :try_start_6c
    invoke-static {}, Landroid/view/SurfaceControl;->closeTransaction()V

    .line 7608
    :cond_6f
    iget-object v3, p0, mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-direct {p0, p1}, convertActivityResultToComponentName(Landroid/os/IBinder;)Landroid/content/ComponentName;

    move-result-object v7

    invoke-interface {v3, v7}, Landroid/view/WindowManagerPolicy;->updateTopActivity(Landroid/content/ComponentName;)V

    .line 7619
    iget-object v3, p0, mFocusedApp:Lcom/android/server/wm/AppWindowToken;

    if-eqz v3, :cond_a2

    iget-object v3, p0, mFocusedApp:Lcom/android/server/wm/AppWindowToken;

    iget-object v3, v3, Lcom/android/server/wm/AppWindowToken;->appMultiWindowStyle:Lcom/samsung/android/multiwindow/MultiWindowStyle;

    invoke-virtual {v3}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->isCascade()Z

    move-result v3

    if-eqz v3, :cond_a2

    iget-object v3, p0, mFocusedApp:Lcom/android/server/wm/AppWindowToken;

    iget-object v3, v3, Lcom/android/server/wm/AppWindowToken;->appMultiWindowStyle:Lcom/samsung/android/multiwindow/MultiWindowStyle;

    const/4 v7, 0x4

    invoke-virtual {v3, v7}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->isEnabled(I)Z

    move-result v3

    if-nez v3, :cond_a2

    .line 7620
    invoke-virtual {p0}, getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v3

    iget v7, v3, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    or-int/lit8 v7, v7, 0x3

    iput v7, v3, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    .line 7622
    invoke-virtual {p0}, getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v3

    const/4 v7, 0x1

    iput-boolean v7, v3, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    .line 7625
    :cond_a2
    invoke-virtual {p0}, requestTraversal()V

    .line 7630
    :cond_a5
    if-eqz p2, :cond_b5

    if-eqz v0, :cond_b5

    .line 7631
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v4

    .line 7632
    .local v4, "origId":J
    const/4 v3, 0x0

    const/4 v7, 0x1

    invoke-direct {p0, v3, v7}, updateFocusedWindowLocked(IZ)Z

    .line 7633
    invoke-static {v4, v5}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 7635
    .end local v4    # "origId":J
    :cond_b5
    monitor-exit v6

    .line 7636
    return-void

    .line 7579
    .end local v0    # "changed":Z
    .end local v2    # "newFocus":Lcom/android/server/wm/AppWindowToken;
    :cond_b7
    invoke-virtual {p0, p1}, findAppWindowToken(Landroid/os/IBinder;)Lcom/android/server/wm/AppWindowToken;

    move-result-object v2

    .line 7580
    .restart local v2    # "newFocus":Lcom/android/server/wm/AppWindowToken;
    if-nez v2, :cond_d5

    .line 7581
    const-string v7, "WindowManager"

    new-instance v8, Ljava/lang/StringBuilder;

    invoke-direct {v8}, Ljava/lang/StringBuilder;-><init>()V

    const-string v9, "Attempted to set focus to non-existing app token: "

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v8

    invoke-virtual {v8, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v8

    invoke-virtual {v8}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v8

    invoke-static {v7, v8}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 7583
    :cond_d5
    sget-boolean v7, DEBUG_FOCUS_LIGHT:Z

    if-eqz v7, :cond_3a

    const-string v7, "WindowManager"

    new-instance v8, Ljava/lang/StringBuilder;

    invoke-direct {v8}, Ljava/lang/StringBuilder;-><init>()V

    const-string v9, "Set focused app to: "

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v8

    invoke-virtual {v8, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v8

    const-string v9, " old focus="

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v8

    iget-object v9, p0, mFocusedApp:Lcom/android/server/wm/AppWindowToken;

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v8

    const-string v9, " moveFocusNow="

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v8

    invoke-virtual {v8, p2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v8

    invoke-virtual {v8}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v8

    invoke-static {v7, v8}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    goto/16 :goto_3a

    .line 7635
    .end local v2    # "newFocus":Lcom/android/server/wm/AppWindowToken;
    :catchall_109
    move-exception v3

    monitor-exit v6
    :try_end_10b
    .catchall {:try_start_6c .. :try_end_10b} :catchall_109

    throw v3

    .restart local v2    # "newFocus":Lcom/android/server/wm/AppWindowToken;
    :cond_10c
    move v0, v3

    .line 7587
    goto/16 :goto_3e

    .line 7594
    .restart local v0    # "changed":Z
    :cond_10f
    :try_start_10f
    invoke-virtual {p0}, setFocusedStackFrame()V

    goto/16 :goto_52

    .line 7603
    :catchall_114
    move-exception v3

    invoke-static {}, Landroid/view/SurfaceControl;->closeTransaction()V

    throw v3
    :try_end_119
    .catchall {:try_start_10f .. :try_end_119} :catchall_109
.end method

.method setFocusedDevice(I)V
    .registers 5
    .param p1, "displayId"    # I

    .prologue
    .line 23199
    const/4 v0, 0x2

    if-ge p1, v0, :cond_24

    .line 23200
    iput p1, p0, mFocusedDevice:I

    .line 23201
    sget-boolean v0, DEBUG_DUALSCREEN:Z

    if-eqz v0, :cond_24

    .line 23202
    const-string v0, "WindowManager"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v2, "setFocusedDevice() : mFocusedDevice="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    iget v2, p0, mFocusedDevice:I

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 23205
    :cond_24
    return-void
.end method

.method setFocusedStackFrame()V
    .registers 2

    .prologue
    const/4 v0, 0x0

    .line 7326
    invoke-virtual {p0, v0, v0}, setFocusedStackFrame(ZZ)V

    .line 7327
    return-void
.end method

.method setFocusedStackFrame(ZZ)V
    .registers 35
    .param p1, "forceRedraw"    # Z
    .param p2, "forceHide"    # Z

    .prologue
    .line 7342
    move-object/from16 v0, p0

    iget-object v0, v0, mFocusedStackFrame:Lcom/android/server/wm/FocusedStackFrame;

    move-object/from16 v27, v0

    move-object/from16 v0, v27

    move/from16 v1, p1

    invoke-virtual {v0, v1}, Lcom/android/server/wm/FocusedStackFrame;->setForceReDraw(Z)V

    .line 7343
    move-object/from16 v0, p0

    iget v0, v0, mLastDrawnFoucsedStackFrameId:I

    move/from16 v27, v0

    if-eqz v27, :cond_54

    .line 7344
    const/16 v18, -0xff

    .line 7345
    .local v18, "stackId":I
    move-object/from16 v0, p0

    iget-object v0, v0, mFocusedApp:Lcom/android/server/wm/AppWindowToken;

    move-object/from16 v27, v0

    if-eqz v27, :cond_37

    .line 7346
    move-object/from16 v0, p0

    iget-object v0, v0, mFocusedApp:Lcom/android/server/wm/AppWindowToken;

    move-object/from16 v27, v0

    move-object/from16 v0, v27

    iget-object v0, v0, Lcom/android/server/wm/AppWindowToken;->mTask:Lcom/android/server/wm/Task;

    move-object/from16 v27, v0

    move-object/from16 v0, v27

    iget-object v0, v0, Lcom/android/server/wm/Task;->mStack:Lcom/android/server/wm/TaskStack;

    move-object/from16 v27, v0

    move-object/from16 v0, v27

    iget v0, v0, Lcom/android/server/wm/TaskStack;->mStackId:I

    move/from16 v18, v0

    .line 7348
    :cond_37
    move-object/from16 v0, p0

    iget v0, v0, mLastDrawnFoucsedStackFrameId:I

    move/from16 v27, v0

    if-lez v27, :cond_89

    move-object/from16 v0, p0

    iget v0, v0, mLastDrawnFoucsedStackFrameId:I

    move/from16 v27, v0

    move/from16 v0, v27

    move/from16 v1, v18

    if-eq v0, v1, :cond_89

    .line 7349
    const/16 v27, 0x0

    move-object/from16 v0, p0

    move/from16 v1, v27

    invoke-virtual {v0, v1}, setLastDrawnFocusedStackFrameId(I)V

    .line 7364
    .end local v18    # "stackId":I
    :cond_54
    const/4 v8, -0x1

    .line 7365
    .local v8, "displayId":I
    move-object/from16 v0, p0

    iget-object v0, v0, mFocusedApp:Lcom/android/server/wm/AppWindowToken;

    move-object/from16 v27, v0

    if-eqz v27, :cond_ad

    .line 7366
    move-object/from16 v0, p0

    iget-object v0, v0, mFocusedApp:Lcom/android/server/wm/AppWindowToken;

    move-object/from16 v27, v0

    invoke-virtual/range {v27 .. v27}, Lcom/android/server/wm/AppWindowToken;->findMainWindow()Lcom/android/server/wm/WindowState;

    move-result-object v23

    .line 7367
    .local v23, "win":Lcom/android/server/wm/WindowState;
    if-eqz v23, :cond_ad

    move-object/from16 v0, v23

    iget v0, v0, Lcom/android/server/wm/WindowState;->mViewVisibility:I

    move/from16 v27, v0

    if-nez v27, :cond_77

    invoke-virtual/range {v23 .. v23}, Lcom/android/server/wm/WindowState;->isDrawnLw()Z

    move-result v27

    if-nez v27, :cond_ad

    .line 7368
    :cond_77
    invoke-static {}, Landroid/view/SurfaceControl;->openTransaction()V

    .line 7370
    :try_start_7a
    move-object/from16 v0, p0

    iget-object v0, v0, mFocusedStackFrame:Lcom/android/server/wm/FocusedStackFrame;

    move-object/from16 v27, v0

    const/16 v28, 0x0

    invoke-virtual/range {v27 .. v28}, Lcom/android/server/wm/FocusedStackFrame;->setVisibility(Lcom/android/server/wm/TaskStack;)V
    :try_end_85
    .catchall {:try_start_7a .. :try_end_85} :catchall_a8

    .line 7372
    invoke-static {}, Landroid/view/SurfaceControl;->closeTransaction()V

    .line 7534
    .end local v8    # "displayId":I
    .end local v23    # "win":Lcom/android/server/wm/WindowState;
    :cond_88
    :goto_88
    return-void

    .line 7351
    .restart local v18    # "stackId":I
    :cond_89
    move-object/from16 v0, p0

    iget-object v0, v0, mFocusedStackFrame:Lcom/android/server/wm/FocusedStackFrame;

    move-object/from16 v27, v0

    if-eqz v27, :cond_88

    .line 7353
    invoke-static {}, Landroid/view/SurfaceControl;->openTransaction()V

    .line 7355
    :try_start_94
    move-object/from16 v0, p0

    iget-object v0, v0, mFocusedStackFrame:Lcom/android/server/wm/FocusedStackFrame;

    move-object/from16 v27, v0

    const/16 v28, 0x0

    invoke-virtual/range {v27 .. v28}, Lcom/android/server/wm/FocusedStackFrame;->setVisibility(Lcom/android/server/wm/TaskStack;)V
    :try_end_9f
    .catchall {:try_start_94 .. :try_end_9f} :catchall_a3

    .line 7357
    invoke-static {}, Landroid/view/SurfaceControl;->closeTransaction()V

    goto :goto_88

    :catchall_a3
    move-exception v27

    invoke-static {}, Landroid/view/SurfaceControl;->closeTransaction()V

    throw v27

    .line 7372
    .end local v18    # "stackId":I
    .restart local v8    # "displayId":I
    .restart local v23    # "win":Lcom/android/server/wm/WindowState;
    :catchall_a8
    move-exception v27

    invoke-static {}, Landroid/view/SurfaceControl;->closeTransaction()V

    throw v27

    .line 7378
    .end local v23    # "win":Lcom/android/server/wm/WindowState;
    :cond_ad
    move-object/from16 v0, p0

    iget-object v0, v0, mClosingApps:Landroid/util/ArraySet;

    move-object/from16 v27, v0

    invoke-virtual/range {v27 .. v27}, Landroid/util/ArraySet;->size()I

    move-result v27

    if-lez v27, :cond_bd

    if-nez p1, :cond_bd

    if-eqz p2, :cond_88

    .line 7384
    :cond_bd
    const/16 v20, 0x0

    .line 7401
    .local v20, "task":Lcom/android/server/wm/Task;
    move-object/from16 v0, p0

    iget-object v0, v0, mAccessibilityController:Lcom/android/server/wm/AccessibilityController;

    move-object/from16 v27, v0

    if-eqz v27, :cond_ea

    move-object/from16 v0, p0

    iget-object v0, v0, mAccessibilityController:Lcom/android/server/wm/AccessibilityController;

    move-object/from16 v27, v0

    invoke-virtual/range {v27 .. v27}, Lcom/android/server/wm/AccessibilityController;->isMagnifyingLocked()Z

    move-result v27

    if-eqz v27, :cond_ea

    .line 7403
    invoke-static {}, Landroid/view/SurfaceControl;->openTransaction()V

    .line 7405
    :try_start_d6
    move-object/from16 v0, p0

    iget-object v0, v0, mFocusedStackFrame:Lcom/android/server/wm/FocusedStackFrame;

    move-object/from16 v27, v0

    const/16 v28, 0x0

    invoke-virtual/range {v27 .. v28}, Lcom/android/server/wm/FocusedStackFrame;->setVisibility(Lcom/android/server/wm/TaskStack;)V
    :try_end_e1
    .catchall {:try_start_d6 .. :try_end_e1} :catchall_e5

    .line 7407
    invoke-static {}, Landroid/view/SurfaceControl;->closeTransaction()V

    goto :goto_88

    :catchall_e5
    move-exception v27

    invoke-static {}, Landroid/view/SurfaceControl;->closeTransaction()V

    throw v27

    .line 7414
    :cond_ea
    move-object/from16 v0, p0

    iget-object v0, v0, mFocusedApp:Lcom/android/server/wm/AppWindowToken;

    move-object/from16 v27, v0

    if-eqz v27, :cond_194

    .line 7415
    move-object/from16 v0, p0

    iget-object v0, v0, mFocusedApp:Lcom/android/server/wm/AppWindowToken;

    move-object/from16 v27, v0

    move-object/from16 v0, v27

    iget-object v0, v0, Lcom/android/server/wm/AppWindowToken;->mTask:Lcom/android/server/wm/Task;

    move-object/from16 v20, v0

    .line 7417
    if-eqz v20, :cond_88

    move-object/from16 v0, v20

    iget-object v0, v0, Lcom/android/server/wm/Task;->mStack:Lcom/android/server/wm/TaskStack;

    move-object/from16 v27, v0

    if-eqz v27, :cond_88

    move-object/from16 v0, v20

    iget-object v0, v0, Lcom/android/server/wm/Task;->mStack:Lcom/android/server/wm/TaskStack;

    move-object/from16 v27, v0

    invoke-virtual/range {v27 .. v27}, Lcom/android/server/wm/TaskStack;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    move-result-object v27

    if-eqz v27, :cond_88

    .line 7420
    move-object/from16 v0, v20

    iget-object v0, v0, Lcom/android/server/wm/Task;->mStack:Lcom/android/server/wm/TaskStack;

    move-object/from16 v17, v0

    .line 7421
    .local v17, "stack":Lcom/android/server/wm/TaskStack;
    move-object/from16 v0, p0

    iget-object v0, v0, mAnimator:Lcom/android/server/wm/WindowAnimator;

    move-object/from16 v27, v0

    invoke-virtual/range {v17 .. v17}, Lcom/android/server/wm/TaskStack;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    move-result-object v28

    invoke-virtual/range {v28 .. v28}, Lcom/android/server/wm/DisplayContent;->getDisplayId()I

    move-result v28

    invoke-virtual/range {v27 .. v28}, Lcom/android/server/wm/WindowAnimator;->getMultiWindowTransitionLocked(I)Lcom/android/server/wm/MultiWindowTransition;

    move-result-object v5

    .line 7422
    .local v5, "animator":Lcom/android/server/wm/MultiWindowTransition;
    if-eqz v5, :cond_16d

    invoke-virtual {v5}, Lcom/android/server/wm/MultiWindowTransition;->isAnimating()Z

    move-result v27

    if-eqz v27, :cond_16d

    .line 7423
    invoke-virtual {v5}, Lcom/android/server/wm/MultiWindowTransition;->getMultiWindowTransition()I

    move-result v21

    .line 7424
    .local v21, "transit":I
    const/16 v27, 0x2

    move/from16 v0, v21

    move/from16 v1, v27

    if-eq v0, v1, :cond_150

    const/16 v27, 0x5

    move/from16 v0, v21

    move/from16 v1, v27

    if-eq v0, v1, :cond_150

    const/16 v27, 0x6

    move/from16 v0, v21

    move/from16 v1, v27

    if-ne v0, v1, :cond_166

    :cond_150
    const/4 v9, 0x1

    .line 7427
    .local v9, "isFocusChanged":Z
    :goto_151
    if-eqz v9, :cond_16d

    .line 7429
    invoke-static {}, Landroid/view/SurfaceControl;->openTransaction()V

    .line 7431
    :try_start_156
    move-object/from16 v0, p0

    iget-object v0, v0, mFocusedStackFrame:Lcom/android/server/wm/FocusedStackFrame;

    move-object/from16 v27, v0

    const/16 v28, 0x0

    invoke-virtual/range {v27 .. v28}, Lcom/android/server/wm/FocusedStackFrame;->setVisibility(Lcom/android/server/wm/TaskStack;)V
    :try_end_161
    .catchall {:try_start_156 .. :try_end_161} :catchall_168

    .line 7433
    invoke-static {}, Landroid/view/SurfaceControl;->closeTransaction()V

    goto/16 :goto_88

    .line 7424
    .end local v9    # "isFocusChanged":Z
    :cond_166
    const/4 v9, 0x0

    goto :goto_151

    .line 7433
    .restart local v9    # "isFocusChanged":Z
    :catchall_168
    move-exception v27

    invoke-static {}, Landroid/view/SurfaceControl;->closeTransaction()V

    throw v27

    .line 7439
    .end local v9    # "isFocusChanged":Z
    .end local v21    # "transit":I
    :cond_16d
    invoke-virtual/range {v20 .. v20}, Lcom/android/server/wm/Task;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    move-result-object v27

    move-object/from16 v0, v27

    move-object/from16 v1, v17

    invoke-virtual {v0, v1}, Lcom/android/server/wm/DisplayContent;->setTouchExcludeRegion(Lcom/android/server/wm/TaskStack;)V

    .line 7443
    .end local v5    # "animator":Lcom/android/server/wm/MultiWindowTransition;
    :goto_178
    if-eqz v17, :cond_17c

    if-eqz p2, :cond_197

    .line 7444
    :cond_17c
    if-eqz p2, :cond_187

    .line 7445
    move-object/from16 v0, p0

    iget-object v0, v0, mFocusedStackFrame:Lcom/android/server/wm/FocusedStackFrame;

    move-object/from16 v27, v0

    invoke-virtual/range {v27 .. v27}, Lcom/android/server/wm/FocusedStackFrame;->clear()V

    .line 7447
    :cond_187
    move-object/from16 v0, p0

    iget-object v0, v0, mFocusedStackFrame:Lcom/android/server/wm/FocusedStackFrame;

    move-object/from16 v27, v0

    const/16 v28, 0x0

    invoke-virtual/range {v27 .. v28}, Lcom/android/server/wm/FocusedStackFrame;->setVisibility(Lcom/android/server/wm/TaskStack;)V

    goto/16 :goto_88

    .line 7441
    .end local v17    # "stack":Lcom/android/server/wm/TaskStack;
    :cond_194
    const/16 v17, 0x0

    .restart local v17    # "stack":Lcom/android/server/wm/TaskStack;
    goto :goto_178

    .line 7449
    :cond_197
    new-instance v6, Landroid/graphics/Rect;

    invoke-direct {v6}, Landroid/graphics/Rect;-><init>()V

    .line 7450
    .local v6, "bounds":Landroid/graphics/Rect;
    move-object/from16 v0, v17

    invoke-virtual {v0, v6}, Lcom/android/server/wm/TaskStack;->getShownBounds(Landroid/graphics/Rect;)V

    .line 7453
    move-object/from16 v0, p0

    iget-object v0, v0, mContext:Landroid/content/Context;

    move-object/from16 v27, v0

    invoke-static/range {v27 .. v27}, Lcom/samsung/android/cocktailbar/CocktailBarFeatures;->isSystemBarType(Landroid/content/Context;)Z

    move-result v27

    if-eqz v27, :cond_1ee

    .line 7454
    move-object/from16 v0, p0

    iget-object v0, v0, mPolicy:Landroid/view/WindowManagerPolicy;

    move-object/from16 v27, v0

    const/16 v28, 0x0

    const/16 v29, 0x1

    invoke-interface/range {v27 .. v29}, Landroid/view/WindowManagerPolicy;->getCocktailBarFrame(Landroid/view/WindowManagerPolicy$WindowState;Z)Landroid/graphics/Rect;

    move-result-object v7

    .line 7455
    .local v7, "cocktailBarFrame":Landroid/graphics/Rect;
    iget v0, v6, Landroid/graphics/Rect;->left:I

    move/from16 v27, v0

    iget v0, v7, Landroid/graphics/Rect;->left:I

    move/from16 v28, v0

    add-int v27, v27, v28

    iget v0, v6, Landroid/graphics/Rect;->top:I

    move/from16 v28, v0

    iget v0, v7, Landroid/graphics/Rect;->top:I

    move/from16 v29, v0

    add-int v28, v28, v29

    iget v0, v6, Landroid/graphics/Rect;->right:I

    move/from16 v29, v0

    iget v0, v7, Landroid/graphics/Rect;->right:I

    move/from16 v30, v0

    sub-int v29, v29, v30

    iget v0, v6, Landroid/graphics/Rect;->bottom:I

    move/from16 v30, v0

    iget v0, v7, Landroid/graphics/Rect;->bottom:I

    move/from16 v31, v0

    sub-int v30, v30, v31

    move/from16 v0, v27

    move/from16 v1, v28

    move/from16 v2, v29

    move/from16 v3, v30

    invoke-virtual {v6, v0, v1, v2, v3}, Landroid/graphics/Rect;->set(IIII)V

    .line 7462
    .end local v7    # "cocktailBarFrame":Landroid/graphics/Rect;
    :cond_1ee
    iget v0, v6, Landroid/graphics/Rect;->top:I

    move/from16 v27, v0

    if-gez v27, :cond_1fa

    .line 7463
    const/16 v27, 0x0

    move/from16 v0, v27

    iput v0, v6, Landroid/graphics/Rect;->top:I

    .line 7465
    :cond_1fa
    invoke-virtual/range {v17 .. v17}, Lcom/android/server/wm/TaskStack;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    move-result-object v27

    move-object/from16 v0, p0

    move-object/from16 v1, v27

    invoke-direct {v0, v1}, findFocusedWindowLocked(Lcom/android/server/wm/DisplayContent;)Lcom/android/server/wm/WindowState;

    move-result-object v13

    .line 7466
    .local v13, "realFocusedWin":Lcom/android/server/wm/WindowState;
    const/4 v10, 0x0

    .line 7467
    .local v10, "isSplitWindowState":Z
    if-eqz v13, :cond_2be

    iget-object v0, v13, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    move-object/from16 v27, v0

    if-eqz v27, :cond_2be

    iget-object v0, v13, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    move-object/from16 v27, v0

    move-object/from16 v0, v27

    iget-object v0, v0, Lcom/android/server/wm/AppWindowToken;->appMultiWindowStyle:Lcom/samsung/android/multiwindow/MultiWindowStyle;

    move-object/from16 v27, v0

    if-eqz v27, :cond_2be

    .line 7469
    iget-object v0, v13, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    move-object/from16 v27, v0

    move-object/from16 v0, v27

    iget-object v0, v0, Lcom/android/server/wm/AppWindowToken;->appMultiWindowStyle:Lcom/samsung/android/multiwindow/MultiWindowStyle;

    move-object/from16 v27, v0

    invoke-virtual/range {v27 .. v27}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->getType()I

    move-result v27

    const/16 v28, 0x1

    move/from16 v0, v27

    move/from16 v1, v28

    if-ne v0, v1, :cond_2be

    iget-object v0, v13, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    move-object/from16 v27, v0

    move-object/from16 v0, v27

    iget-object v0, v0, Lcom/android/server/wm/AppWindowToken;->appMultiWindowStyle:Lcom/samsung/android/multiwindow/MultiWindowStyle;

    move-object/from16 v27, v0

    const/high16 v28, 0x200000

    invoke-virtual/range {v27 .. v28}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->isEnabled(I)Z

    move-result v27

    if-nez v27, :cond_2be

    invoke-virtual {v13}, Lcom/android/server/wm/WindowState;->isAnimatingLw()Z

    move-result v27

    if-nez v27, :cond_2be

    .line 7472
    invoke-virtual/range {v17 .. v17}, Lcom/android/server/wm/TaskStack;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    move-result-object v27

    invoke-virtual/range {v27 .. v27}, Lcom/android/server/wm/DisplayContent;->getWindowList()Lcom/android/server/wm/WindowList;

    move-result-object v25

    .line 7473
    .local v25, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual/range {v25 .. v25}, Lcom/android/server/wm/WindowList;->size()I

    move-result v12

    .line 7474
    .local v12, "numWindows":I
    const/16 v24, 0x0

    .local v24, "winNdx":I
    :goto_257
    move/from16 v0, v24

    if-ge v0, v12, :cond_2be

    .line 7475
    move-object/from16 v0, v25

    move/from16 v1, v24

    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v22

    check-cast v22, Lcom/android/server/wm/WindowState;

    .line 7476
    .local v22, "w":Lcom/android/server/wm/WindowState;
    move-object/from16 v0, v22

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    move-object/from16 v27, v0

    if-eqz v27, :cond_390

    move-object/from16 v0, v22

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    move-object/from16 v27, v0

    move-object/from16 v0, v27

    iget-object v0, v0, Lcom/android/server/wm/AppWindowToken;->appMultiWindowStyle:Lcom/samsung/android/multiwindow/MultiWindowStyle;

    move-object/from16 v27, v0

    if-eqz v27, :cond_390

    move-object/from16 v0, v22

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    move-object/from16 v27, v0

    move-object/from16 v0, v27

    iget-object v0, v0, Lcom/android/server/wm/AppWindowToken;->appMultiWindowStyle:Lcom/samsung/android/multiwindow/MultiWindowStyle;

    move-object/from16 v27, v0

    invoke-virtual/range {v27 .. v27}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->getType()I

    move-result v27

    const/16 v28, 0x1

    move/from16 v0, v27

    move/from16 v1, v28

    if-ne v0, v1, :cond_390

    move-object/from16 v0, v22

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    move-object/from16 v27, v0

    move-object/from16 v0, v27

    iget-object v0, v0, Lcom/android/server/wm/AppWindowToken;->appMultiWindowStyle:Lcom/samsung/android/multiwindow/MultiWindowStyle;

    move-object/from16 v27, v0

    invoke-virtual/range {v27 .. v27}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->getZone()I

    move-result v27

    iget-object v0, v13, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    move-object/from16 v28, v0

    move-object/from16 v0, v28

    iget-object v0, v0, Lcom/android/server/wm/AppWindowToken;->appMultiWindowStyle:Lcom/samsung/android/multiwindow/MultiWindowStyle;

    move-object/from16 v28, v0

    invoke-virtual/range {v28 .. v28}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->getOppositeZone()I

    move-result v28

    move/from16 v0, v27

    move/from16 v1, v28

    if-ne v0, v1, :cond_390

    invoke-virtual/range {v22 .. v22}, Lcom/android/server/wm/WindowState;->isDisplayedLw()Z

    move-result v27

    if-eqz v27, :cond_390

    .line 7480
    const/4 v10, 0x1

    .line 7490
    .end local v12    # "numWindows":I
    .end local v22    # "w":Lcom/android/server/wm/WindowState;
    .end local v24    # "winNdx":I
    .end local v25    # "windows":Lcom/android/server/wm/WindowList;
    :cond_2be
    if-nez p1, :cond_2e0

    if-eqz v10, :cond_394

    move-object/from16 v0, p0

    iget-boolean v0, v0, mForceHideCenterbar:Z

    move/from16 v27, v0

    if-nez v27, :cond_394

    move-object/from16 v0, p0

    iget-boolean v0, v0, mIsRecentsMultiWindowRunning:Z

    move/from16 v27, v0

    if-nez v27, :cond_394

    move-object/from16 v0, p0

    iget-object v0, v0, mTmpContentRect:Landroid/graphics/Rect;

    move-object/from16 v27, v0

    move-object/from16 v0, v27

    invoke-virtual {v6, v0}, Landroid/graphics/Rect;->equals(Ljava/lang/Object;)Z

    move-result v27

    if-nez v27, :cond_394

    :cond_2e0
    const/4 v11, 0x1

    .line 7493
    .local v11, "multipleStacks":Z
    :goto_2e1
    new-instance v15, Landroid/graphics/Rect;

    invoke-direct {v15}, Landroid/graphics/Rect;-><init>()V

    .line 7494
    .local v15, "screenSize":Landroid/graphics/Rect;
    new-instance v19, Landroid/graphics/Rect;

    invoke-direct/range {v19 .. v19}, Landroid/graphics/Rect;-><init>()V

    .line 7495
    .local v19, "surfaceSize":Landroid/graphics/Rect;
    new-instance v14, Landroid/graphics/Point;

    invoke-direct {v14}, Landroid/graphics/Point;-><init>()V

    .line 7496
    .local v14, "realSize":Landroid/graphics/Point;
    invoke-virtual/range {p0 .. p0}, getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v27

    invoke-virtual/range {v27 .. v27}, Lcom/android/server/wm/DisplayContent;->getDisplay()Landroid/view/Display;

    move-result-object v27

    move-object/from16 v0, v27

    invoke-virtual {v0, v14}, Landroid/view/Display;->getRealSize(Landroid/graphics/Point;)V

    .line 7497
    const/16 v27, 0x0

    const/16 v28, 0x0

    iget v0, v14, Landroid/graphics/Point;->x:I

    move/from16 v29, v0

    iget v0, v14, Landroid/graphics/Point;->y:I

    move/from16 v30, v0

    move/from16 v0, v27

    move/from16 v1, v28

    move/from16 v2, v29

    move/from16 v3, v30

    invoke-virtual {v15, v0, v1, v2, v3}, Landroid/graphics/Rect;->set(IIII)V

    .line 7498
    const/16 v27, 0x0

    const/16 v28, 0x0

    iget v0, v14, Landroid/graphics/Point;->x:I

    move/from16 v29, v0

    iget v0, v14, Landroid/graphics/Point;->y:I

    move/from16 v30, v0

    move-object/from16 v0, v19

    move/from16 v1, v27

    move/from16 v2, v28

    move/from16 v3, v29

    move/from16 v4, v30

    invoke-virtual {v0, v1, v2, v3, v4}, Landroid/graphics/Rect;->set(IIII)V

    .line 7501
    move-object/from16 v0, p0

    iget-object v0, v0, mContext:Landroid/content/Context;

    move-object/from16 v27, v0

    invoke-static/range {v27 .. v27}, Lcom/samsung/android/cocktailbar/CocktailBarFeatures;->isSystemBarType(Landroid/content/Context;)Z

    move-result v27

    if-eqz v27, :cond_344

    .line 7502
    move-object/from16 v0, p0

    iget-object v0, v0, mTmpContentRect:Landroid/graphics/Rect;

    move-object/from16 v27, v0

    move-object/from16 v0, v27

    invoke-virtual {v15, v0}, Landroid/graphics/Rect;->set(Landroid/graphics/Rect;)V

    .line 7506
    :cond_344
    move-object/from16 v0, p0

    iget-object v0, v0, mFocusedStackFrame:Lcom/android/server/wm/FocusedStackFrame;

    move-object/from16 v27, v0

    move-object/from16 v0, v27

    move-object/from16 v1, v19

    invoke-virtual {v0, v15, v1}, Lcom/android/server/wm/FocusedStackFrame;->setScreenSize(Landroid/graphics/Rect;Landroid/graphics/Rect;)V

    .line 7508
    if-eqz v10, :cond_3d0

    .line 7511
    const/16 v16, 0x0

    .line 7512
    .local v16, "skipSetBound":Z
    iget-object v0, v13, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    move-object/from16 v26, v0

    .line 7513
    .local v26, "wtoken":Lcom/android/server/wm/AppWindowToken;
    if-eqz v26, :cond_36d

    .line 7514
    move-object/from16 v0, v26

    iget-boolean v0, v0, Lcom/android/server/wm/AppWindowToken;->firstWindowDrawn:Z

    move/from16 v27, v0

    if-eqz v27, :cond_36b

    move-object/from16 v0, v26

    iget-boolean v0, v0, Lcom/android/server/wm/AppWindowToken;->hidden:Z

    move/from16 v27, v0

    if-eqz v27, :cond_36d

    .line 7515
    :cond_36b
    const/16 v16, 0x1

    .line 7518
    :cond_36d
    if-nez p1, :cond_397

    if-eqz v16, :cond_397

    .line 7519
    move-object/from16 v0, p0

    iget-object v0, v0, mFocusedStackFrame:Lcom/android/server/wm/FocusedStackFrame;

    move-object/from16 v27, v0

    new-instance v28, Landroid/graphics/Rect;

    invoke-direct/range {v28 .. v28}, Landroid/graphics/Rect;-><init>()V

    invoke-virtual/range {v27 .. v28}, Lcom/android/server/wm/FocusedStackFrame;->setBounds(Landroid/graphics/Rect;)V

    .line 7532
    .end local v16    # "skipSetBound":Z
    .end local v26    # "wtoken":Lcom/android/server/wm/AppWindowToken;
    :goto_37f
    move-object/from16 v0, p0

    iget-object v0, v0, mFocusedStackFrame:Lcom/android/server/wm/FocusedStackFrame;

    move-object/from16 v27, v0

    if-eqz v11, :cond_3df

    .end local v17    # "stack":Lcom/android/server/wm/TaskStack;
    :goto_387
    move-object/from16 v0, v27

    move-object/from16 v1, v17

    invoke-virtual {v0, v1}, Lcom/android/server/wm/FocusedStackFrame;->setVisibility(Lcom/android/server/wm/TaskStack;)V

    goto/16 :goto_88

    .line 7474
    .end local v11    # "multipleStacks":Z
    .end local v14    # "realSize":Landroid/graphics/Point;
    .end local v15    # "screenSize":Landroid/graphics/Rect;
    .end local v19    # "surfaceSize":Landroid/graphics/Rect;
    .restart local v12    # "numWindows":I
    .restart local v17    # "stack":Lcom/android/server/wm/TaskStack;
    .restart local v22    # "w":Lcom/android/server/wm/WindowState;
    .restart local v24    # "winNdx":I
    .restart local v25    # "windows":Lcom/android/server/wm/WindowList;
    :cond_390
    add-int/lit8 v24, v24, 0x1

    goto/16 :goto_257

    .line 7490
    .end local v12    # "numWindows":I
    .end local v22    # "w":Lcom/android/server/wm/WindowState;
    .end local v24    # "winNdx":I
    .end local v25    # "windows":Lcom/android/server/wm/WindowList;
    :cond_394
    const/4 v11, 0x0

    goto/16 :goto_2e1

    .line 7522
    .restart local v11    # "multipleStacks":Z
    .restart local v14    # "realSize":Landroid/graphics/Point;
    .restart local v15    # "screenSize":Landroid/graphics/Rect;
    .restart local v16    # "skipSetBound":Z
    .restart local v19    # "surfaceSize":Landroid/graphics/Rect;
    .restart local v26    # "wtoken":Lcom/android/server/wm/AppWindowToken;
    :cond_397
    if-eqz v13, :cond_3c4

    move-object/from16 v0, p0

    iget-object v0, v0, mInputMethodWindow:Lcom/android/server/wm/WindowState;

    move-object/from16 v27, v0

    if-eqz v27, :cond_3c4

    move-object/from16 v0, p0

    iget-object v0, v0, mInputMethodTarget:Lcom/android/server/wm/WindowState;

    move-object/from16 v27, v0

    move-object/from16 v0, v27

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    move-object/from16 v27, v0

    if-eqz v27, :cond_3c4

    move-object/from16 v0, p0

    iget-object v0, v0, mInputMethodTarget:Lcom/android/server/wm/WindowState;

    move-object/from16 v27, v0

    invoke-virtual/range {v27 .. v27}, Lcom/android/server/wm/WindowState;->isVisibleLw()Z

    move-result v27

    if-eqz v27, :cond_3c4

    .line 7524
    iget v0, v13, Lcom/android/server/wm/WindowState;->mDssScale:F

    move/from16 v27, v0

    move/from16 v0, v27

    invoke-virtual {v6, v0}, Landroid/graphics/Rect;->scale(F)V

    .line 7527
    :cond_3c4
    move-object/from16 v0, p0

    iget-object v0, v0, mFocusedStackFrame:Lcom/android/server/wm/FocusedStackFrame;

    move-object/from16 v27, v0

    move-object/from16 v0, v27

    invoke-virtual {v0, v6}, Lcom/android/server/wm/FocusedStackFrame;->setBounds(Landroid/graphics/Rect;)V

    goto :goto_37f

    .line 7530
    .end local v16    # "skipSetBound":Z
    .end local v26    # "wtoken":Lcom/android/server/wm/AppWindowToken;
    :cond_3d0
    move-object/from16 v0, p0

    iget-object v0, v0, mFocusedStackFrame:Lcom/android/server/wm/FocusedStackFrame;

    move-object/from16 v27, v0

    new-instance v28, Landroid/graphics/Rect;

    invoke-direct/range {v28 .. v28}, Landroid/graphics/Rect;-><init>()V

    invoke-virtual/range {v27 .. v28}, Lcom/android/server/wm/FocusedStackFrame;->setBounds(Landroid/graphics/Rect;)V

    goto :goto_37f

    .line 7532
    :cond_3df
    const/16 v17, 0x0

    goto :goto_387
.end method

.method setFocusedStackLayer()V
    .registers 12

    .prologue
    const/4 v10, 0x0

    .line 7233
    const/4 v4, 0x0

    .line 7235
    .local v4, "isInputMethodTarget":Z
    iput v10, p0, mFocusedStackLayer:I

    .line 7236
    iget-object v8, p0, mFocusedApp:Lcom/android/server/wm/AppWindowToken;

    if-eqz v8, :cond_8d

    .line 7237
    iget-object v8, p0, mFocusedApp:Lcom/android/server/wm/AppWindowToken;

    iget-object v7, v8, Lcom/android/server/wm/AppWindowToken;->allAppWindows:Lcom/android/server/wm/WindowList;

    .line 7238
    .local v7, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual {v7}, Lcom/android/server/wm/WindowList;->size()I

    move-result v8

    add-int/lit8 v3, v8, -0x1

    .local v3, "i":I
    :goto_12
    if-ltz v3, :cond_8d

    .line 7239
    invoke-virtual {v7, v3}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/android/server/wm/WindowState;

    .line 7240
    .local v5, "win":Lcom/android/server/wm/WindowState;
    iget-object v8, v5, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    iget v0, v8, Lcom/android/server/wm/WindowStateAnimator;->mAnimLayer:I

    .line 7243
    .local v0, "animLayer":I
    invoke-virtual {v5}, Lcom/android/server/wm/WindowState;->isVisibleLw()Z

    move-result v8

    if-eqz v8, :cond_78

    .line 7244
    iget-object v8, p0, mInputMethodTarget:Lcom/android/server/wm/WindowState;

    if-ne v8, v5, :cond_29

    .line 7245
    const/4 v4, 0x1

    .line 7248
    :cond_29
    new-instance v6, Landroid/graphics/Rect;

    invoke-virtual {v5}, Lcom/android/server/wm/WindowState;->getFrameLw()Landroid/graphics/Rect;

    move-result-object v8

    invoke-direct {v6, v8}, Landroid/graphics/Rect;-><init>(Landroid/graphics/Rect;)V

    .line 7251
    .local v6, "winFrame":Landroid/graphics/Rect;
    iget v8, v5, Lcom/android/server/wm/WindowState;->mDssScale:F

    invoke-virtual {v6, v8}, Landroid/graphics/Rect;->scale(F)V

    .line 7254
    iget-object v8, v5, Lcom/android/server/wm/WindowState;->mAttachedWindow:Lcom/android/server/wm/WindowState;

    if-eqz v8, :cond_4b

    iget-object v8, v5, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v8, v8, Landroid/view/WindowManager$LayoutParams;->type:I

    const/16 v9, 0x3e9

    if-eq v8, v9, :cond_4b

    iget-object v8, v5, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v8, v8, Landroid/view/WindowManager$LayoutParams;->type:I

    const/16 v9, 0x3e8

    if-ne v8, v9, :cond_78

    .line 7257
    :cond_4b
    iget-object v8, p0, mFocusedStackFrame:Lcom/android/server/wm/FocusedStackFrame;

    invoke-virtual {v8}, Lcom/android/server/wm/FocusedStackFrame;->getBounds()Landroid/graphics/Rect;

    move-result-object v8

    invoke-virtual {v8, v6}, Landroid/graphics/Rect;->contains(Landroid/graphics/Rect;)Z

    move-result v8

    if-eqz v8, :cond_80

    .line 7258
    iget v8, p0, mFocusedStackLayer:I

    if-le v0, v8, :cond_78

    .line 7259
    iget v8, p0, mFocusedStackLayer:I

    if-lez v8, :cond_7b

    iget-object v8, v5, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    iget-boolean v8, v8, Lcom/android/server/wm/AppWindowToken;->appFullscreen:Z

    if-nez v8, :cond_7b

    iget-object v8, p0, mFocusedStackFrame:Lcom/android/server/wm/FocusedStackFrame;

    invoke-virtual {v8}, Lcom/android/server/wm/FocusedStackFrame;->getBounds()Landroid/graphics/Rect;

    move-result-object v8

    invoke-virtual {v8, v6}, Landroid/graphics/Rect;->equals(Ljava/lang/Object;)Z

    move-result v8

    if-nez v8, :cond_7b

    iget-object v8, v5, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v8, v8, Landroid/view/WindowManager$LayoutParams;->type:I

    const/4 v9, 0x1

    if-eq v8, v9, :cond_7b

    .line 7238
    .end local v6    # "winFrame":Landroid/graphics/Rect;
    :cond_78
    :goto_78
    add-int/lit8 v3, v3, -0x1

    goto :goto_12

    .line 7265
    .restart local v6    # "winFrame":Landroid/graphics/Rect;
    :cond_7b
    add-int/lit8 v8, v0, 0x1

    iput v8, p0, mFocusedStackLayer:I

    goto :goto_78

    .line 7268
    :cond_80
    iget v8, p0, mFocusedStackLayer:I

    if-eqz v8, :cond_88

    iget v8, p0, mFocusedStackLayer:I

    if-ge v0, v8, :cond_78

    .line 7269
    :cond_88
    add-int/lit8 v8, v0, -0x1

    iput v8, p0, mFocusedStackLayer:I

    goto :goto_78

    .line 7287
    .end local v0    # "animLayer":I
    .end local v3    # "i":I
    .end local v5    # "win":Lcom/android/server/wm/WindowState;
    .end local v6    # "winFrame":Landroid/graphics/Rect;
    .end local v7    # "windows":Lcom/android/server/wm/WindowList;
    :cond_8d
    iget-object v1, p0, mInputMethodWindow:Lcom/android/server/wm/WindowState;

    .line 7288
    .local v1, "baseImWin":Lcom/android/server/wm/WindowState;
    if-nez v1, :cond_b6

    iget-object v8, p0, mInputMethodDialogs:Ljava/util/ArrayList;

    invoke-virtual {v8}, Ljava/util/ArrayList;->size()I

    move-result v8

    if-lez v8, :cond_b6

    .line 7289
    iget-object v8, p0, mInputMethodDialogs:Ljava/util/ArrayList;

    invoke-virtual {v8, v10}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v1

    .end local v1    # "baseImWin":Lcom/android/server/wm/WindowState;
    check-cast v1, Lcom/android/server/wm/WindowState;

    .line 7290
    .restart local v1    # "baseImWin":Lcom/android/server/wm/WindowState;
    iget-object v8, v1, Lcom/android/server/wm/WindowState;->mChildWindows:Lcom/android/server/wm/WindowList;

    invoke-virtual {v8}, Lcom/android/server/wm/WindowList;->size()I

    move-result v8

    if-lez v8, :cond_b6

    .line 7291
    iget-object v8, v1, Lcom/android/server/wm/WindowState;->mChildWindows:Lcom/android/server/wm/WindowList;

    invoke-virtual {v8, v10}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/wm/WindowState;

    .line 7292
    .local v2, "cw":Lcom/android/server/wm/WindowState;
    iget v8, v2, Lcom/android/server/wm/WindowState;->mSubLayer:I

    if-gez v8, :cond_b6

    move-object v1, v2

    .line 7295
    .end local v2    # "cw":Lcom/android/server/wm/WindowState;
    :cond_b6
    if-eqz v4, :cond_d0

    if-eqz v1, :cond_d0

    invoke-virtual {v1}, Lcom/android/server/wm/WindowState;->isVisibleLw()Z

    move-result v8

    if-eqz v8, :cond_d0

    iget v8, p0, mFocusedStackLayer:I

    iget-object v9, v1, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    iget v9, v9, Lcom/android/server/wm/WindowStateAnimator;->mAnimLayer:I

    if-lt v8, v9, :cond_d0

    .line 7297
    iget-object v8, v1, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    iget v8, v8, Lcom/android/server/wm/WindowStateAnimator;->mAnimLayer:I

    add-int/lit8 v8, v8, -0x1

    iput v8, p0, mFocusedStackLayer:I

    .line 7299
    :cond_d0
    iget-object v8, p0, mMultiWindowCenterBar:Lcom/android/server/wm/WindowState;

    if-eqz v8, :cond_f0

    iget-object v8, p0, mMultiWindowCenterBar:Lcom/android/server/wm/WindowState;

    invoke-virtual {v8}, Lcom/android/server/wm/WindowState;->isVisibleLw()Z

    move-result v8

    if-eqz v8, :cond_f0

    iget v8, p0, mFocusedStackLayer:I

    iget-object v9, p0, mMultiWindowCenterBar:Lcom/android/server/wm/WindowState;

    iget-object v9, v9, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    iget v9, v9, Lcom/android/server/wm/WindowStateAnimator;->mAnimLayer:I

    if-lt v8, v9, :cond_f0

    .line 7302
    iget-object v8, p0, mMultiWindowCenterBar:Lcom/android/server/wm/WindowState;

    iget-object v8, v8, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    iget v8, v8, Lcom/android/server/wm/WindowStateAnimator;->mAnimLayer:I

    add-int/lit8 v8, v8, -0x1

    iput v8, p0, mFocusedStackLayer:I

    .line 7307
    :cond_f0
    sget-boolean v8, DEBUG_LAYERS:Z

    if-eqz v8, :cond_10e

    const-string v8, "WindowManager"

    new-instance v9, Ljava/lang/StringBuilder;

    invoke-direct {v9}, Ljava/lang/StringBuilder;-><init>()V

    const-string v10, "Setting FocusedStackFrame to layer="

    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v9

    iget v10, p0, mFocusedStackLayer:I

    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v9

    invoke-virtual {v9}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v9

    invoke-static {v8, v9}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 7310
    :cond_10e
    iget v8, p0, mFocusedStackLayer:I

    if-lez v8, :cond_119

    .line 7312
    iget-object v8, p0, mFocusedStackFrame:Lcom/android/server/wm/FocusedStackFrame;

    iget v9, p0, mFocusedStackLayer:I

    invoke-virtual {v8, v9}, Lcom/android/server/wm/FocusedStackFrame;->setLayer(I)V

    .line 7314
    :cond_119
    return-void
.end method

.method public setForcedDisplayDensity(II)V
    .registers 4
    .param p1, "displayId"    # I
    .param p2, "density"    # I

    .prologue
    .line 14612
    const/4 v0, 0x1

    invoke-virtual {p0, p1, p2, v0}, setForcedDisplayDensity(IIZ)V

    .line 14613
    return-void
.end method

.method public setForcedDisplayDensity(IIZ)V
    .registers 11
    .param p1, "displayId"    # I
    .param p2, "density"    # I
    .param p3, "needFreeze"    # Z

    .prologue
    .line 14616
    iget-object v1, p0, mContext:Landroid/content/Context;

    const-string v4, "android.permission.WRITE_SECURE_SETTINGS"

    invoke-virtual {v1, v4}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    move-result v1

    if-eqz v1, :cond_12

    .line 14619
    new-instance v1, Ljava/lang/SecurityException;

    const-string v4, "Must hold permission android.permission.WRITE_SECURE_SETTINGS"

    invoke-direct {v1, v4}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 14622
    :cond_12
    if-eqz p1, :cond_1c

    .line 14623
    new-instance v1, Ljava/lang/IllegalArgumentException;

    const-string v4, "Can only set the default display"

    invoke-direct {v1, v4}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 14625
    :cond_1c
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v2

    .line 14627
    .local v2, "ident":J
    :try_start_20
    iget-object v4, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v4
    :try_end_23
    .catchall {:try_start_20 .. :try_end_23} :catchall_46

    .line 14628
    :try_start_23
    invoke-virtual {p0, p1}, getDisplayContentLocked(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v0

    .line 14629
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-eqz v0, :cond_3e

    .line 14630
    if-eqz p3, :cond_2e

    .line 14631
    invoke-direct {p0, v0, p2}, setForcedDisplayDensityLocked(Lcom/android/server/wm/DisplayContent;I)V

    .line 14633
    :cond_2e
    iget-object v1, p0, mContext:Landroid/content/Context;

    invoke-virtual {v1}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v1

    const-string/jumbo v5, "display_density_forced"

    invoke-static {p2}, Ljava/lang/Integer;->toString(I)Ljava/lang/String;

    move-result-object v6

    invoke-static {v1, v5, v6}, Landroid/provider/Settings$Global;->putString(Landroid/content/ContentResolver;Ljava/lang/String;Ljava/lang/String;)Z

    .line 14636
    :cond_3e
    monitor-exit v4
    :try_end_3f
    .catchall {:try_start_23 .. :try_end_3f} :catchall_43

    .line 14638
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 14640
    return-void

    .line 14636
    .end local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :catchall_43
    move-exception v1

    :try_start_44
    monitor-exit v4
    :try_end_45
    .catchall {:try_start_44 .. :try_end_45} :catchall_43

    :try_start_45
    throw v1
    :try_end_46
    .catchall {:try_start_45 .. :try_end_46} :catchall_46

    .line 14638
    :catchall_46
    move-exception v1

    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v1
.end method

.method public setForcedDisplayDensityNoFreeze(II)V
    .registers 4
    .param p1, "displayId"    # I
    .param p2, "density"    # I

    .prologue
    .line 14607
    const/4 v0, 0x0

    invoke-virtual {p0, p1, p2, v0}, setForcedDisplayDensity(IIZ)V

    .line 14608
    return-void
.end method

.method public setForcedDisplayScalingMode(II)V
    .registers 9
    .param p1, "displayId"    # I
    .param p2, "mode"    # I

    .prologue
    .line 14446
    iget-object v1, p0, mContext:Landroid/content/Context;

    const-string v4, "android.permission.WRITE_SECURE_SETTINGS"

    invoke-virtual {v1, v4}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    move-result v1

    if-eqz v1, :cond_12

    .line 14449
    new-instance v1, Ljava/lang/SecurityException;

    const-string v4, "Must hold permission android.permission.WRITE_SECURE_SETTINGS"

    invoke-direct {v1, v4}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 14452
    :cond_12
    if-eqz p1, :cond_1c

    .line 14453
    new-instance v1, Ljava/lang/IllegalArgumentException;

    const-string v4, "Can only set the default display"

    invoke-direct {v1, v4}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 14455
    :cond_1c
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v2

    .line 14457
    .local v2, "ident":J
    :try_start_20
    iget-object v4, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v4
    :try_end_23
    .catchall {:try_start_20 .. :try_end_23} :catchall_46

    .line 14458
    :try_start_23
    invoke-virtual {p0, p1}, getDisplayContentLocked(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v0

    .line 14459
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-eqz v0, :cond_3e

    .line 14460
    if-ltz p2, :cond_2e

    const/4 v1, 0x1

    if-le p2, v1, :cond_2f

    .line 14461
    :cond_2e
    const/4 p2, 0x0

    .line 14463
    :cond_2f
    invoke-direct {p0, v0, p2}, setForcedDisplayScalingModeLocked(Lcom/android/server/wm/DisplayContent;I)V

    .line 14464
    iget-object v1, p0, mContext:Landroid/content/Context;

    invoke-virtual {v1}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v1

    const-string/jumbo v5, "display_scaling_force"

    invoke-static {v1, v5, p2}, Landroid/provider/Settings$Global;->putInt(Landroid/content/ContentResolver;Ljava/lang/String;I)Z

    .line 14467
    :cond_3e
    monitor-exit v4
    :try_end_3f
    .catchall {:try_start_23 .. :try_end_3f} :catchall_43

    .line 14469
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 14471
    return-void

    .line 14467
    .end local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :catchall_43
    move-exception v1

    :try_start_44
    monitor-exit v4
    :try_end_45
    .catchall {:try_start_44 .. :try_end_45} :catchall_43

    :try_start_45
    throw v1
    :try_end_46
    .catchall {:try_start_45 .. :try_end_46} :catchall_46

    .line 14469
    :catchall_46
    move-exception v1

    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v1
.end method

.method public setForcedDisplaySize(III)V
    .registers 15
    .param p1, "displayId"    # I
    .param p2, "width"    # I
    .param p3, "height"    # I

    .prologue
    .line 14411
    iget-object v6, p0, mContext:Landroid/content/Context;

    const-string v7, "android.permission.WRITE_SECURE_SETTINGS"

    invoke-virtual {v6, v7}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    move-result v6

    if-eqz v6, :cond_12

    .line 14414
    new-instance v6, Ljava/lang/SecurityException;

    const-string v7, "Must hold permission android.permission.WRITE_SECURE_SETTINGS"

    invoke-direct {v6, v7}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v6

    .line 14417
    :cond_12
    if-eqz p1, :cond_1c

    .line 14418
    new-instance v6, Ljava/lang/IllegalArgumentException;

    const-string v7, "Can only set the default display"

    invoke-direct {v6, v7}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v6

    .line 14420
    :cond_1c
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v4

    .line 14422
    .local v4, "ident":J
    :try_start_20
    iget-object v7, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v7
    :try_end_23
    .catchall {:try_start_20 .. :try_end_23} :catchall_78

    .line 14425
    const/16 v2, 0xc8

    .line 14426
    .local v2, "MIN_WIDTH":I
    const/16 v1, 0xc8

    .line 14427
    .local v1, "MIN_HEIGHT":I
    const/4 v0, 0x2

    .line 14428
    .local v0, "MAX_SCALE":I
    :try_start_28
    invoke-virtual {p0, p1}, getDisplayContentLocked(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v3

    .line 14429
    .local v3, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-eqz v3, :cond_70

    .line 14430
    const/16 v6, 0xc8

    invoke-static {p2, v6}, Ljava/lang/Math;->max(II)I

    move-result v6

    iget v8, v3, Lcom/android/server/wm/DisplayContent;->mInitialDisplayWidth:I

    mul-int/lit8 v8, v8, 0x2

    invoke-static {v6, v8}, Ljava/lang/Math;->min(II)I

    move-result p2

    .line 14432
    const/16 v6, 0xc8

    invoke-static {p3, v6}, Ljava/lang/Math;->max(II)I

    move-result v6

    iget v8, v3, Lcom/android/server/wm/DisplayContent;->mInitialDisplayHeight:I

    mul-int/lit8 v8, v8, 0x2

    invoke-static {v6, v8}, Ljava/lang/Math;->min(II)I

    move-result p3

    .line 14434
    invoke-direct {p0, v3, p2, p3}, setForcedDisplaySizeLocked(Lcom/android/server/wm/DisplayContent;II)V

    .line 14435
    iget-object v6, p0, mContext:Landroid/content/Context;

    invoke-virtual {v6}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v6

    const-string/jumbo v8, "display_size_forced"

    new-instance v9, Ljava/lang/StringBuilder;

    invoke-direct {v9}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v9, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v9

    const-string v10, ","

    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v9

    invoke-virtual {v9, p3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v9

    invoke-virtual {v9}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v9

    invoke-static {v6, v8, v9}, Landroid/provider/Settings$Global;->putString(Landroid/content/ContentResolver;Ljava/lang/String;Ljava/lang/String;)Z

    .line 14438
    :cond_70
    monitor-exit v7
    :try_end_71
    .catchall {:try_start_28 .. :try_end_71} :catchall_75

    .line 14440
    invoke-static {v4, v5}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 14442
    return-void

    .line 14438
    .end local v3    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :catchall_75
    move-exception v6

    :try_start_76
    monitor-exit v7
    :try_end_77
    .catchall {:try_start_76 .. :try_end_77} :catchall_75

    :try_start_77
    throw v6
    :try_end_78
    .catchall {:try_start_77 .. :try_end_78} :catchall_78

    .line 14440
    .end local v0    # "MAX_SCALE":I
    .end local v1    # "MIN_HEIGHT":I
    .end local v2    # "MIN_WIDTH":I
    :catchall_78
    move-exception v6

    invoke-static {v4, v5}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v6
.end method

.method setHoldScreenLocked(Lcom/android/server/wm/Session;)V
    .registers 7
    .param p1, "newHoldScreen"    # Lcom/android/server/wm/Session;

    .prologue
    .line 18019
    if-eqz p1, :cond_2c

    const/4 v0, 0x1

    .line 18021
    .local v0, "hold":Z
    :goto_3
    if-eqz v0, :cond_15

    iget-object v2, p0, mHoldingScreenOn:Lcom/android/server/wm/Session;

    if-eq v2, p1, :cond_15

    .line 18022
    iget-object v2, p0, mHoldingScreenWakeLock:Landroid/os/PowerManager$WakeLock;

    new-instance v3, Landroid/os/WorkSource;

    iget v4, p1, Lcom/android/server/wm/Session;->mUid:I

    invoke-direct {v3, v4}, Landroid/os/WorkSource;-><init>(I)V

    invoke-virtual {v2, v3}, Landroid/os/PowerManager$WakeLock;->setWorkSource(Landroid/os/WorkSource;)V

    .line 18024
    :cond_15
    iput-object p1, p0, mHoldingScreenOn:Lcom/android/server/wm/Session;

    .line 18026
    iget-object v2, p0, mHoldingScreenWakeLock:Landroid/os/PowerManager$WakeLock;

    invoke-virtual {v2}, Landroid/os/PowerManager$WakeLock;->isHeld()Z

    move-result v1

    .line 18027
    .local v1, "state":Z
    if-eq v0, v1, :cond_2b

    .line 18028
    if-eqz v0, :cond_2e

    .line 18029
    iget-object v2, p0, mHoldingScreenWakeLock:Landroid/os/PowerManager$WakeLock;

    invoke-virtual {v2}, Landroid/os/PowerManager$WakeLock;->acquire()V

    .line 18030
    iget-object v2, p0, mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v2}, Landroid/view/WindowManagerPolicy;->keepScreenOnStartedLw()V

    .line 18036
    :cond_2b
    :goto_2b
    return-void

    .line 18019
    .end local v0    # "hold":Z
    .end local v1    # "state":Z
    :cond_2c
    const/4 v0, 0x0

    goto :goto_3

    .line 18032
    .restart local v0    # "hold":Z
    .restart local v1    # "state":Z
    :cond_2e
    iget-object v2, p0, mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v2}, Landroid/view/WindowManagerPolicy;->keepScreenOnStoppedLw()V

    .line 18033
    iget-object v2, p0, mHoldingScreenWakeLock:Landroid/os/PowerManager$WakeLock;

    invoke-virtual {v2}, Landroid/os/PowerManager$WakeLock;->release()V

    goto :goto_2b
.end method

.method public setInTouchMode(Z)V
    .registers 4
    .param p1, "mode"    # Z

    .prologue
    .line 10577
    iget-object v1, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v1

    .line 10578
    :try_start_3
    iput-boolean p1, p0, mInTouchMode:Z

    .line 10579
    monitor-exit v1

    .line 10580
    return-void

    .line 10579
    :catchall_7
    move-exception v0

    monitor-exit v1
    :try_end_9
    .catchall {:try_start_3 .. :try_end_9} :catchall_7

    throw v0
.end method

.method setInputMethodAnimLayerAdjustment(I)V
    .registers 9
    .param p1, "adj"    # I

    .prologue
    .line 2655
    sget-boolean v4, DEBUG_LAYERS:Z

    if-eqz v4, :cond_1c

    const-string v4, "WindowManager"

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string v6, "Setting im layer adj to "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v4, v5}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 2656
    :cond_1c
    iput p1, p0, mInputMethodAnimLayerAdjustment:I

    .line 2657
    iget-object v2, p0, mInputMethodWindow:Lcom/android/server/wm/WindowState;

    .line 2658
    .local v2, "imw":Lcom/android/server/wm/WindowState;
    if-eqz v2, :cond_97

    .line 2659
    iget-object v4, v2, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    iget v5, v2, Lcom/android/server/wm/WindowState;->mLayer:I

    add-int/2addr v5, p1

    iput v5, v4, Lcom/android/server/wm/WindowStateAnimator;->mAnimLayer:I

    .line 2660
    sget-boolean v4, DEBUG_LAYERS:Z

    if-eqz v4, :cond_53

    const-string v4, "WindowManager"

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string v6, "IM win "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v5

    const-string v6, " anim layer: "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    iget-object v6, v2, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    iget v6, v6, Lcom/android/server/wm/WindowStateAnimator;->mAnimLayer:I

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v4, v5}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 2662
    :cond_53
    iget-object v4, v2, Lcom/android/server/wm/WindowState;->mChildWindows:Lcom/android/server/wm/WindowList;

    invoke-virtual {v4}, Lcom/android/server/wm/WindowList;->size()I

    move-result v3

    .line 2663
    .local v3, "wi":I
    :cond_59
    :goto_59
    if-lez v3, :cond_97

    .line 2664
    add-int/lit8 v3, v3, -0x1

    .line 2665
    iget-object v4, v2, Lcom/android/server/wm/WindowState;->mChildWindows:Lcom/android/server/wm/WindowList;

    invoke-virtual {v4, v3}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/wm/WindowState;

    .line 2666
    .local v0, "cw":Lcom/android/server/wm/WindowState;
    iget-object v4, v0, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    iget v5, v0, Lcom/android/server/wm/WindowState;->mLayer:I

    add-int/2addr v5, p1

    iput v5, v4, Lcom/android/server/wm/WindowStateAnimator;->mAnimLayer:I

    .line 2667
    sget-boolean v4, DEBUG_LAYERS:Z

    if-eqz v4, :cond_59

    const-string v4, "WindowManager"

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string v6, "IM win "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v5

    const-string v6, " anim layer: "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    iget-object v6, v0, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    iget v6, v6, Lcom/android/server/wm/WindowStateAnimator;->mAnimLayer:I

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v4, v5}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_59

    .line 2671
    .end local v0    # "cw":Lcom/android/server/wm/WindowState;
    .end local v3    # "wi":I
    :cond_97
    iget-object v4, p0, mInputMethodDialogs:Ljava/util/ArrayList;

    invoke-virtual {v4}, Ljava/util/ArrayList;->size()I

    move-result v1

    .line 2672
    .local v1, "di":I
    :cond_9d
    :goto_9d
    if-lez v1, :cond_db

    .line 2673
    add-int/lit8 v1, v1, -0x1

    .line 2674
    iget-object v4, p0, mInputMethodDialogs:Ljava/util/ArrayList;

    invoke-virtual {v4, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v2

    .end local v2    # "imw":Lcom/android/server/wm/WindowState;
    check-cast v2, Lcom/android/server/wm/WindowState;

    .line 2675
    .restart local v2    # "imw":Lcom/android/server/wm/WindowState;
    iget-object v4, v2, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    iget v5, v2, Lcom/android/server/wm/WindowState;->mLayer:I

    add-int/2addr v5, p1

    iput v5, v4, Lcom/android/server/wm/WindowStateAnimator;->mAnimLayer:I

    .line 2676
    sget-boolean v4, DEBUG_LAYERS:Z

    if-eqz v4, :cond_9d

    const-string v4, "WindowManager"

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string v6, "IM win "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v5

    const-string v6, " anim layer: "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    iget-object v6, v2, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    iget v6, v6, Lcom/android/server/wm/WindowStateAnimator;->mAnimLayer:I

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v4, v5}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_9d

    .line 2679
    :cond_db
    return-void
.end method

.method setInsetsWindow(Lcom/android/server/wm/Session;Landroid/view/IWindow;ILandroid/graphics/Rect;Landroid/graphics/Rect;Landroid/graphics/Region;)V
    .registers 14
    .param p1, "session"    # Lcom/android/server/wm/Session;
    .param p2, "client"    # Landroid/view/IWindow;
    .param p3, "touchableInsets"    # I
    .param p4, "contentInsets"    # Landroid/graphics/Rect;
    .param p5, "visibleInsets"    # Landroid/graphics/Rect;
    .param p6, "touchableRegion"    # Landroid/graphics/Region;

    .prologue
    .line 5012
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v2

    .line 5014
    .local v2, "origId":J
    :try_start_4
    iget-object v5, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v5
    :try_end_7
    .catchall {:try_start_4 .. :try_end_7} :catchall_53

    .line 5015
    const/4 v4, 0x0

    :try_start_8
    invoke-virtual {p0, p1, p2, v4}, windowForClientLocked(Lcom/android/server/wm/Session;Landroid/view/IWindow;Z)Lcom/android/server/wm/WindowState;

    move-result-object v1

    .line 5016
    .local v1, "w":Lcom/android/server/wm/WindowState;
    if-eqz v1, :cond_4b

    .line 5017
    const/4 v4, 0x0

    iput-boolean v4, v1, Lcom/android/server/wm/WindowState;->mGivenInsetsPending:Z

    .line 5018
    iget-object v4, v1, Lcom/android/server/wm/WindowState;->mGivenContentInsets:Landroid/graphics/Rect;

    invoke-virtual {v4, p4}, Landroid/graphics/Rect;->set(Landroid/graphics/Rect;)V

    .line 5019
    iget-object v4, v1, Lcom/android/server/wm/WindowState;->mGivenVisibleInsets:Landroid/graphics/Rect;

    invoke-virtual {v4, p5}, Landroid/graphics/Rect;->set(Landroid/graphics/Rect;)V

    .line 5020
    iget-object v4, v1, Lcom/android/server/wm/WindowState;->mGivenTouchableRegion:Landroid/graphics/Region;

    invoke-virtual {v4, p6}, Landroid/graphics/Region;->set(Landroid/graphics/Region;)Z

    .line 5021
    iput p3, v1, Lcom/android/server/wm/WindowState;->mTouchableInsets:I

    .line 5022
    iget v4, v1, Lcom/android/server/wm/WindowState;->mGlobalScale:F

    const/high16 v6, 0x3f800000    # 1.0f

    cmpl-float v4, v4, v6

    if-eqz v4, :cond_3f

    .line 5023
    iget-object v4, v1, Lcom/android/server/wm/WindowState;->mGivenContentInsets:Landroid/graphics/Rect;

    iget v6, v1, Lcom/android/server/wm/WindowState;->mGlobalScale:F

    invoke-virtual {v4, v6}, Landroid/graphics/Rect;->scale(F)V

    .line 5024
    iget-object v4, v1, Lcom/android/server/wm/WindowState;->mGivenVisibleInsets:Landroid/graphics/Rect;

    iget v6, v1, Lcom/android/server/wm/WindowState;->mGlobalScale:F

    invoke-virtual {v4, v6}, Landroid/graphics/Rect;->scale(F)V

    .line 5025
    iget-object v4, v1, Lcom/android/server/wm/WindowState;->mGivenTouchableRegion:Landroid/graphics/Region;

    iget v6, v1, Lcom/android/server/wm/WindowState;->mGlobalScale:F

    invoke-virtual {v4, v6}, Landroid/graphics/Region;->scale(F)V

    .line 5027
    :cond_3f
    invoke-virtual {v1}, Lcom/android/server/wm/WindowState;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    move-result-object v0

    .line 5028
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-eqz v0, :cond_48

    .line 5029
    const/4 v4, 0x1

    iput-boolean v4, v0, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    .line 5031
    :cond_48
    invoke-direct {p0}, performLayoutAndPlaceSurfacesLocked()V

    .line 5033
    .end local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :cond_4b
    monitor-exit v5
    :try_end_4c
    .catchall {:try_start_8 .. :try_end_4c} :catchall_50

    .line 5035
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 5037
    return-void

    .line 5033
    .end local v1    # "w":Lcom/android/server/wm/WindowState;
    :catchall_50
    move-exception v4

    :try_start_51
    monitor-exit v5
    :try_end_52
    .catchall {:try_start_51 .. :try_end_52} :catchall_50

    :try_start_52
    throw v4
    :try_end_53
    .catchall {:try_start_52 .. :try_end_53} :catchall_53

    .line 5035
    :catchall_53
    move-exception v4

    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v4
.end method

.method public setIsCascadeRunning(Z)V
    .registers 2
    .param p1, "running"    # Z

    .prologue
    .line 20389
    iput-boolean p1, p0, mIsCascadeAppRunniung:Z

    .line 20390
    return-void
.end method

.method public setKeyguardPreview(Ljava/lang/String;I)V
    .registers 6
    .param p1, "pkgName"    # Ljava/lang/String;
    .param p2, "resId"    # I

    .prologue
    const/4 v2, 0x3

    .line 22401
    const-string v0, "com.samsung.android.permission.MANAGE_CUSTOM_STARTING_WINDOW"

    const-string v1, "CustomStartingWindow"

    invoke-virtual {p0, v0, v1}, checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v0

    if-nez v0, :cond_14

    .line 22402
    new-instance v0, Ljava/lang/SecurityException;

    const-string/jumbo v1, "setKeyguardPreview Requires MANAGE_CUSTOM_STARTING_WINDOW permission"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 22405
    :cond_14
    iget-object v0, p0, mCustomStartingWindowManager:Lcom/android/server/wm/CustomStartingWindowManager;

    if-eqz v0, :cond_1f

    .line 22406
    if-lez p2, :cond_20

    .line 22407
    iget-object v0, p0, mCustomStartingWindowManager:Lcom/android/server/wm/CustomStartingWindowManager;

    invoke-virtual {v0, p1, p2, v2}, Lcom/android/server/wm/CustomStartingWindowManager;->addCustomLayoutResId(Ljava/lang/String;II)V

    .line 22412
    :cond_1f
    :goto_1f
    return-void

    .line 22409
    :cond_20
    iget-object v0, p0, mCustomStartingWindowManager:Lcom/android/server/wm/CustomStartingWindowManager;

    invoke-virtual {v0, p1, v2}, Lcom/android/server/wm/CustomStartingWindowManager;->removeCustomLayoutResId(Ljava/lang/String;I)V

    goto :goto_1f
.end method

.method public setLastDrawnFocusedStackFrameId(I)V
    .registers 5
    .param p1, "stackId"    # I

    .prologue
    .line 20824
    iput p1, p0, mLastDrawnFoucsedStackFrameId:I

    .line 20825
    const-string v0, "FocusedStackFrame"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Set to : "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    iget v2, p0, mLastDrawnFoucsedStackFrameId:I

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 20826
    return-void
.end method

.method public setLastDrawnFocusedStackFrameIdToSkip(I)V
    .registers 4
    .param p1, "taskId"    # I

    .prologue
    .line 20829
    iget-object v1, p0, mTaskIdToTask:Landroid/util/SparseArray;

    invoke-virtual {v1, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/wm/Task;

    .line 20830
    .local v0, "task":Lcom/android/server/wm/Task;
    if-eqz v0, :cond_11

    .line 20831
    iget-object v1, v0, Lcom/android/server/wm/Task;->mStack:Lcom/android/server/wm/TaskStack;

    iget v1, v1, Lcom/android/server/wm/TaskStack;->mStackId:I

    invoke-virtual {p0, v1}, setLastDrawnFocusedStackFrameId(I)V

    .line 20833
    :cond_11
    return-void
.end method

.method public setMultiWindowTrayOpenState(Z)V
    .registers 3
    .param p1, "open"    # Z

    .prologue
    .line 21418
    iget-object v0, p0, mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v0, p1}, Landroid/view/WindowManagerPolicy;->setMultiWindowTrayOpenState(Z)V

    .line 21419
    return-void
.end method

.method public setNewConfiguration(Landroid/content/res/Configuration;)V
    .registers 3
    .param p1, "config"    # Landroid/content/res/Configuration;

    .prologue
    .line 7148
    const/4 v0, 0x1

    invoke-virtual {p0, p1, v0}, setNewConfiguration(Landroid/content/res/Configuration;Z)V

    .line 7149
    return-void
.end method

.method public setNewConfiguration(Landroid/content/res/Configuration;Z)V
    .registers 5
    .param p1, "config"    # Landroid/content/res/Configuration;
    .param p2, "performLayout"    # Z

    .prologue
    .line 7153
    const-string v0, "android.permission.MANAGE_APP_TOKENS"

    const-string/jumbo v1, "setNewConfiguration()"

    invoke-virtual {p0, v0, v1}, checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v0

    if-nez v0, :cond_13

    .line 7155
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Requires MANAGE_APP_TOKENS permission"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 7158
    :cond_13
    iget-object v1, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v1

    .line 7165
    :try_start_16
    new-instance v0, Landroid/content/res/Configuration;

    invoke-direct {v0, p1}, Landroid/content/res/Configuration;-><init>(Landroid/content/res/Configuration;)V

    iput-object v0, p0, mCurConfiguration:Landroid/content/res/Configuration;

    .line 7167
    iget-boolean v0, p0, mWaitingForConfig:Z

    if-eqz v0, :cond_29

    .line 7168
    const/4 v0, 0x0

    iput-boolean v0, p0, mWaitingForConfig:Z

    .line 7169
    const-string/jumbo v0, "new-config"

    iput-object v0, p0, mLastFinishedFreezeSource:Ljava/lang/Object;

    .line 7173
    :cond_29
    invoke-direct {p0}, performLayoutAndPlaceSurfacesLocked()V

    .line 7176
    monitor-exit v1

    .line 7177
    return-void

    .line 7176
    :catchall_2e
    move-exception v0

    monitor-exit v1
    :try_end_30
    .catchall {:try_start_16 .. :try_end_30} :catchall_2e

    throw v0
.end method

.method public setOnHardKeyboardStatusChangeListener(Lcom/android/server/wm/WindowManagerService$OnHardKeyboardStatusChangeListener;)V
    .registers 4
    .param p1, "listener"    # Lcom/android/server/wm/WindowManagerService$OnHardKeyboardStatusChangeListener;

    .prologue
    .line 12863
    iget-object v1, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v1

    .line 12864
    :try_start_3
    iput-object p1, p0, mHardKeyboardStatusChangeListener:Lcom/android/server/wm/WindowManagerService$OnHardKeyboardStatusChangeListener;

    .line 12865
    monitor-exit v1

    .line 12866
    return-void

    .line 12865
    :catchall_7
    move-exception v0

    monitor-exit v1
    :try_end_9
    .catchall {:try_start_3 .. :try_end_9} :catchall_7

    throw v0
.end method

.method public setOverscan(IIIII)V
    .registers 15
    .param p1, "displayId"    # I
    .param p2, "left"    # I
    .param p3, "top"    # I
    .param p4, "right"    # I
    .param p5, "bottom"    # I

    .prologue
    .line 14736
    iget-object v0, p0, mContext:Landroid/content/Context;

    const-string v2, "android.permission.WRITE_SECURE_SETTINGS"

    invoke-virtual {v0, v2}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    move-result v0

    if-eqz v0, :cond_12

    .line 14739
    new-instance v0, Ljava/lang/SecurityException;

    const-string v2, "Must hold permission android.permission.WRITE_SECURE_SETTINGS"

    invoke-direct {v0, v2}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 14742
    :cond_12
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v6

    .line 14744
    .local v6, "ident":J
    :try_start_16
    iget-object v8, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v8
    :try_end_19
    .catchall {:try_start_16 .. :try_end_19} :catchall_2f

    .line 14745
    :try_start_19
    invoke-virtual {p0, p1}, getDisplayContentLocked(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v1

    .line 14746
    .local v1, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-eqz v1, :cond_27

    move-object v0, p0

    move v2, p2

    move v3, p3

    move v4, p4

    move v5, p5

    .line 14747
    invoke-direct/range {v0 .. v5}, setOverscanLocked(Lcom/android/server/wm/DisplayContent;IIII)V

    .line 14749
    :cond_27
    monitor-exit v8
    :try_end_28
    .catchall {:try_start_19 .. :try_end_28} :catchall_2c

    .line 14751
    invoke-static {v6, v7}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 14753
    return-void

    .line 14749
    .end local v1    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :catchall_2c
    move-exception v0

    :try_start_2d
    monitor-exit v8
    :try_end_2e
    .catchall {:try_start_2d .. :try_end_2e} :catchall_2c

    :try_start_2e
    throw v0
    :try_end_2f
    .catchall {:try_start_2e .. :try_end_2f} :catchall_2f

    .line 14751
    :catchall_2f
    move-exception v0

    invoke-static {v6, v7}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v0
.end method

.method public setParentCoupledTask(Landroid/view/IApplicationToken;Landroid/view/IApplicationToken;)V
    .registers 3
    .param p1, "token"    # Landroid/view/IApplicationToken;
    .param p2, "parentToken"    # Landroid/view/IApplicationToken;

    .prologue
    .line 22709
    return-void
.end method

.method public setReverseStartingWindowContentView(Ljava/lang/String;I)V
    .registers 5
    .param p1, "pkgName"    # Ljava/lang/String;
    .param p2, "resId"    # I

    .prologue
    const/4 v1, 0x2

    .line 22391
    iget-object v0, p0, mCustomStartingWindowManager:Lcom/android/server/wm/CustomStartingWindowManager;

    if-eqz v0, :cond_c

    .line 22392
    if-lez p2, :cond_d

    .line 22393
    iget-object v0, p0, mCustomStartingWindowManager:Lcom/android/server/wm/CustomStartingWindowManager;

    invoke-virtual {v0, p1, p2, v1}, Lcom/android/server/wm/CustomStartingWindowManager;->addCustomLayoutResId(Ljava/lang/String;II)V

    .line 22398
    :cond_c
    :goto_c
    return-void

    .line 22395
    :cond_d
    iget-object v0, p0, mCustomStartingWindowManager:Lcom/android/server/wm/CustomStartingWindowManager;

    invoke-virtual {v0, p1, v1}, Lcom/android/server/wm/CustomStartingWindowManager;->removeCustomLayoutResId(Ljava/lang/String;I)V

    goto :goto_c
.end method

.method public setScreenCaptureDisabled(IZ)V
    .registers 14
    .param p1, "userId"    # I
    .param p2, "disabled"    # Z

    .prologue
    .line 4583
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v0

    .line 4584
    .local v0, "callingUid":I
    const/16 v7, 0x3e8

    if-eq v0, v7, :cond_10

    .line 4585
    new-instance v7, Ljava/lang/SecurityException;

    const-string v8, "Only system can call setScreenCaptureDisabled."

    invoke-direct {v7, v8}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v7

    .line 4588
    :cond_10
    iget-object v8, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v8

    .line 4590
    :try_start_13
    iget-object v7, p0, mDisplayContents:Landroid/util/SparseArray;

    invoke-virtual {v7}, Landroid/util/SparseArray;->size()I

    move-result v4

    .line 4592
    .local v4, "numDisplays":I
    const/4 v2, 0x0

    .local v2, "displayNdx":I
    :goto_1a
    if-ge v2, v4, :cond_72

    .line 4593
    iget-object v7, p0, mDisplayContents:Landroid/util/SparseArray;

    invoke-virtual {v7, v2}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/wm/DisplayContent;

    .line 4594
    .local v1, "displayContent":Lcom/android/server/wm/DisplayContent;
    invoke-virtual {v1}, Lcom/android/server/wm/DisplayContent;->getWindowList()Lcom/android/server/wm/WindowList;

    move-result-object v6

    .line 4595
    .local v6, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual {v6}, Lcom/android/server/wm/WindowList;->size()I

    move-result v7

    add-int/lit8 v3, v7, -0x1

    .local v3, "i":I
    :goto_2e
    if-ltz v3, :cond_6f

    .line 4596
    invoke-virtual {v6, v3}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/android/server/wm/WindowState;

    .line 4597
    .local v5, "w":Lcom/android/server/wm/WindowState;
    iget-object v7, v5, Lcom/android/server/wm/WindowState;->mSession:Lcom/android/server/wm/Session;

    iget v7, v7, Lcom/android/server/wm/Session;->mUid:I

    invoke-static {v7}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v7

    if-ne v7, p1, :cond_6c

    .line 4598
    iget-object v7, v5, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    invoke-virtual {v7, p2}, Lcom/android/server/wm/WindowStateAnimator;->setSecureLocked(Z)V

    .line 4599
    sget-boolean v7, SAFE_DEBUG:Z

    if-eqz v7, :cond_6c

    .line 4600
    const-string v7, "WindowManager"

    new-instance v9, Ljava/lang/StringBuilder;

    invoke-direct {v9}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v10, "setScreenCaptureDisabled SetSecure win="

    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v9

    invoke-virtual {v9, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v9

    const-string v10, " set disabled="

    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v9

    invoke-virtual {v9, p2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v9

    invoke-virtual {v9}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v9

    invoke-static {v7, v9}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 4595
    :cond_6c
    add-int/lit8 v3, v3, -0x1

    goto :goto_2e

    .line 4592
    .end local v5    # "w":Lcom/android/server/wm/WindowState;
    :cond_6f
    add-int/lit8 v2, v2, 0x1

    goto :goto_1a

    .line 4606
    .end local v1    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v3    # "i":I
    .end local v6    # "windows":Lcom/android/server/wm/WindowList;
    :cond_72
    iget-object v7, p0, mScreenCaptureDisabled:Landroid/util/SparseArray;

    invoke-static {p2}, Ljava/lang/Boolean;->valueOf(Z)Ljava/lang/Boolean;

    move-result-object v9

    invoke-virtual {v7, p1, v9}, Landroid/util/SparseArray;->put(ILjava/lang/Object;)V

    .line 4607
    monitor-exit v8

    .line 4608
    return-void

    .line 4607
    .end local v2    # "displayNdx":I
    .end local v4    # "numDisplays":I
    :catchall_7d
    move-exception v7

    monitor-exit v8
    :try_end_7f
    .catchall {:try_start_13 .. :try_end_7f} :catchall_7d

    throw v7
.end method

.method public setStackBound(ILandroid/graphics/Rect;)V
    .registers 9
    .param p1, "stackId"    # I
    .param p2, "bounds"    # Landroid/graphics/Rect;

    .prologue
    .line 21426
    iget-object v3, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v3

    .line 21427
    :try_start_3
    iget-object v2, p0, mStackIdToStack:Landroid/util/SparseArray;

    invoke-virtual {v2, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/wm/TaskStack;

    .line 21428
    .local v1, "taskStack":Lcom/android/server/wm/TaskStack;
    if-eqz v1, :cond_53

    .line 21429
    invoke-virtual {v1}, Lcom/android/server/wm/TaskStack;->isFloatingStack()Z

    move-result v2

    if-nez v2, :cond_35

    .line 21430
    new-instance v2, Ljava/lang/IllegalStateException;

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "This stack("

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, ") is not floating"

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-direct {v2, v4}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw v2

    .line 21442
    .end local v1    # "taskStack":Lcom/android/server/wm/TaskStack;
    :catchall_32
    move-exception v2

    monitor-exit v3
    :try_end_34
    .catchall {:try_start_3 .. :try_end_34} :catchall_32

    throw v2

    .line 21432
    .restart local v1    # "taskStack":Lcom/android/server/wm/TaskStack;
    :cond_35
    :try_start_35
    new-instance v0, Landroid/graphics/Rect;

    invoke-direct {v0}, Landroid/graphics/Rect;-><init>()V

    .line 21433
    .local v0, "oldBounds":Landroid/graphics/Rect;
    invoke-virtual {v1, v0}, Lcom/android/server/wm/TaskStack;->getBounds(Landroid/graphics/Rect;)V

    .line 21435
    invoke-virtual {p2, v0}, Landroid/graphics/Rect;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-nez v2, :cond_49

    .line 21436
    invoke-virtual {v1, p2}, Lcom/android/server/wm/TaskStack;->setBounds(Landroid/graphics/Rect;)Z

    .line 21437
    invoke-direct {p0, v1}, assignMultiWindowScaleLocked(Lcom/android/server/wm/TaskStack;)V

    .line 21439
    :cond_49
    invoke-virtual {v1}, Lcom/android/server/wm/TaskStack;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    move-result-object v2

    const/4 v4, 0x1

    iput-boolean v4, v2, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    .line 21440
    invoke-virtual {p0}, requestTraversalLocked()V

    .line 21442
    .end local v0    # "oldBounds":Landroid/graphics/Rect;
    :cond_53
    monitor-exit v3
    :try_end_54
    .catchall {:try_start_35 .. :try_end_54} :catchall_32

    .line 21443
    return-void
.end method

.method public setStartingWindowContentView(Ljava/lang/String;I)V
    .registers 5
    .param p1, "pkgName"    # Ljava/lang/String;
    .param p2, "resId"    # I

    .prologue
    const/4 v1, 0x1

    .line 22381
    iget-object v0, p0, mCustomStartingWindowManager:Lcom/android/server/wm/CustomStartingWindowManager;

    if-eqz v0, :cond_c

    .line 22382
    if-lez p2, :cond_d

    .line 22383
    iget-object v0, p0, mCustomStartingWindowManager:Lcom/android/server/wm/CustomStartingWindowManager;

    invoke-virtual {v0, p1, p2, v1}, Lcom/android/server/wm/CustomStartingWindowManager;->addCustomLayoutResId(Ljava/lang/String;II)V

    .line 22388
    :cond_c
    :goto_c
    return-void

    .line 22385
    :cond_d
    iget-object v0, p0, mCustomStartingWindowManager:Lcom/android/server/wm/CustomStartingWindowManager;

    invoke-virtual {v0, p1, v1}, Lcom/android/server/wm/CustomStartingWindowManager;->removeCustomLayoutResId(Ljava/lang/String;I)V

    goto :goto_c
.end method

.method setStartingWindowTargetAppTokenLocked(Lcom/android/server/wm/AppWindowToken;)V
    .registers 6
    .param p1, "appToken"    # Lcom/android/server/wm/AppWindowToken;

    .prologue
    .line 20301
    if-nez p1, :cond_3

    .line 20311
    :cond_2
    :goto_2
    return-void

    .line 20304
    :cond_3
    iget-object v0, p1, Lcom/android/server/wm/AppWindowToken;->mTask:Lcom/android/server/wm/Task;

    .line 20305
    .local v0, "task":Lcom/android/server/wm/Task;
    if-eqz v0, :cond_2

    .line 20306
    iput-object p1, v0, Lcom/android/server/wm/Task;->mStartingWindowTargetAppToken:Lcom/android/server/wm/AppWindowToken;

    .line 20307
    sget-boolean v1, DEBUG_STARTING_WINDOW:Z

    if-eqz v1, :cond_2

    .line 20308
    const-string v1, "WindowManager"

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v3, "setStartingWindowTargetAppTokenLocked = "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string v3, " Caller="

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    const/4 v3, 0x2

    invoke-static {v3}, Landroid/os/Debug;->getCallers(I)Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v1, v2}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_2
.end method

.method public setStrictModeVisualIndicatorPreference(Ljava/lang/String;)V
    .registers 3
    .param p1, "value"    # Ljava/lang/String;

    .prologue
    .line 10725
    const-string/jumbo v0, "persist.sys.strictmode.visual"

    invoke-static {v0, p1}, Landroid/os/SystemProperties;->set(Ljava/lang/String;Ljava/lang/String;)V

    .line 10726
    return-void
.end method

.method public setTabFrontStack(I)V
    .registers 2
    .param p1, "stackId"    # I

    .prologue
    .line 22019
    iput p1, p0, mTabFrontStack:I

    .line 22020
    return-void
.end method

.method public setToVRStack(I)V
    .registers 5
    .param p1, "stackId"    # I

    .prologue
    .line 9305
    iget-object v2, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v2

    .line 9306
    :try_start_3
    iget-object v1, p0, mStackIdToStack:Landroid/util/SparseArray;

    invoke-virtual {v1, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/wm/TaskStack;

    .line 9307
    .local v0, "stack":Lcom/android/server/wm/TaskStack;
    if-eqz v0, :cond_10

    .line 9308
    const/4 v1, 0x1

    iput-boolean v1, v0, Lcom/android/server/wm/TaskStack;->mVRStack:Z

    .line 9310
    :cond_10
    monitor-exit v2

    .line 9311
    return-void

    .line 9310
    .end local v0    # "stack":Lcom/android/server/wm/TaskStack;
    :catchall_12
    move-exception v1

    monitor-exit v2
    :try_end_14
    .catchall {:try_start_3 .. :try_end_14} :catchall_12

    throw v1
.end method

.method setTokenVisibilityLocked(Lcom/android/server/wm/AppWindowToken;Landroid/view/WindowManager$LayoutParams;ZIZZ)Z
    .registers 15
    .param p1, "wtoken"    # Lcom/android/server/wm/AppWindowToken;
    .param p2, "lp"    # Landroid/view/WindowManager$LayoutParams;
    .param p3, "visible"    # Z
    .param p4, "transit"    # I
    .param p5, "performLayout"    # Z
    .param p6, "isVoiceInteraction"    # Z

    .prologue
    .line 8310
    const/4 v7, 0x0

    move-object v0, p0

    move-object v1, p1

    move-object v2, p2

    move v3, p3

    move v4, p4

    move v5, p5

    move v6, p6

    invoke-virtual/range {v0 .. v7}, setTokenVisibilityLocked(Lcom/android/server/wm/AppWindowToken;Landroid/view/WindowManager$LayoutParams;ZIZZZ)Z

    move-result v0

    return v0
.end method

.method setTokenVisibilityLocked(Lcom/android/server/wm/AppWindowToken;Landroid/view/WindowManager$LayoutParams;ZIZZZ)Z
    .registers 27
    .param p1, "wtoken"    # Lcom/android/server/wm/AppWindowToken;
    .param p2, "lp"    # Landroid/view/WindowManager$LayoutParams;
    .param p3, "visible"    # Z
    .param p4, "transit"    # I
    .param p5, "performLayout"    # Z
    .param p6, "isVoiceInteraction"    # Z
    .param p7, "cancelAnimation"    # Z

    .prologue
    .line 8316
    const/4 v9, 0x0

    .line 8318
    .local v9, "delayed":Z
    move-object/from16 v0, p1

    iget-boolean v2, v0, Lcom/android/server/wm/AppWindowToken;->clientHidden:Z

    move/from16 v0, p3

    if-ne v2, v0, :cond_13

    .line 8319
    if-nez p3, :cond_9f

    const/4 v2, 0x1

    :goto_c
    move-object/from16 v0, p1

    iput-boolean v2, v0, Lcom/android/server/wm/AppWindowToken;->clientHidden:Z

    .line 8320
    invoke-virtual/range {p1 .. p1}, Lcom/android/server/wm/AppWindowToken;->sendAppVisibilityToClients()V

    .line 8323
    :cond_13
    const/4 v2, 0x0

    move-object/from16 v0, p1

    iput-boolean v2, v0, Lcom/android/server/wm/AppWindowToken;->willBeHidden:Z

    .line 8324
    move-object/from16 v0, p1

    iget-boolean v2, v0, Lcom/android/server/wm/AppWindowToken;->hidden:Z

    move/from16 v0, p3

    if-eq v2, v0, :cond_a2

    .line 8471
    const/4 v2, -0x1

    move/from16 v0, p4

    if-eq v0, v2, :cond_72

    if-nez p7, :cond_72

    move-object/from16 v0, p1

    iget-object v2, v0, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    iget-object v2, v2, Lcom/android/server/wm/AppWindowAnimator;->animation:Landroid/view/animation/Animation;

    sget-object v3, Lcom/android/server/wm/AppWindowAnimator;->sDummyAnimation:Landroid/view/animation/Animation;

    if-ne v2, v3, :cond_72

    .line 8474
    sget-boolean v2, SAFE_DEBUG:Z

    if-eqz v2, :cond_6b

    const-string v2, "WindowManager"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v4, "remove sDummyAnimation wtoken = "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    move-object/from16 v0, p1

    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v3

    const-string v4, " transit="

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    move/from16 v0, p4

    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v3

    const-string v4, " Callers="

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    const/4 v4, 0x4

    invoke-static {v4}, Landroid/os/Debug;->getCallers(I)Ljava/lang/String;

    move-result-object v4

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 8476
    :cond_6b
    move-object/from16 v0, p1

    iget-object v2, v0, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    const/4 v3, 0x0

    iput-object v3, v2, Lcom/android/server/wm/AppWindowAnimator;->animation:Landroid/view/animation/Animation;

    .line 8480
    .end local v9    # "delayed":Z
    :cond_72
    :goto_72
    move-object/from16 v0, p1

    iget-object v2, v0, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    iget-object v2, v2, Lcom/android/server/wm/AppWindowAnimator;->animation:Landroid/view/animation/Animation;

    if-eqz v2, :cond_7b

    .line 8481
    const/4 v9, 0x1

    .line 8484
    :cond_7b
    move-object/from16 v0, p1

    iget-object v2, v0, Lcom/android/server/wm/AppWindowToken;->allAppWindows:Lcom/android/server/wm/WindowList;

    invoke-virtual {v2}, Lcom/android/server/wm/WindowList;->size()I

    move-result v2

    add-int/lit8 v11, v2, -0x1

    .local v11, "i":I
    :goto_85
    if-ltz v11, :cond_280

    if-nez v9, :cond_280

    .line 8485
    move-object/from16 v0, p1

    iget-object v2, v0, Lcom/android/server/wm/AppWindowToken;->allAppWindows:Lcom/android/server/wm/WindowList;

    invoke-virtual {v2, v11}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/wm/WindowState;

    iget-object v2, v2, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    invoke-virtual {v2}, Lcom/android/server/wm/WindowStateAnimator;->isWindowAnimating()Z

    move-result v2

    if-eqz v2, :cond_9c

    .line 8486
    const/4 v9, 0x1

    .line 8484
    :cond_9c
    add-int/lit8 v11, v11, -0x1

    goto :goto_85

    .line 8319
    .end local v11    # "i":I
    .restart local v9    # "delayed":Z
    :cond_9f
    const/4 v2, 0x0

    goto/16 :goto_c

    .line 8325
    :cond_a2
    const/4 v8, 0x0

    .line 8337
    .local v8, "changed":Z
    sget-boolean v2, DEBUG_APP_TRANSITIONS:Z

    if-eqz v2, :cond_db

    const-string v2, "WindowManager"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "Changing app "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    move-object/from16 v0, p1

    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v3

    const-string v4, " hidden="

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    move-object/from16 v0, p1

    iget-boolean v4, v0, Lcom/android/server/wm/AppWindowToken;->hidden:Z

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v3

    const-string v4, " performLayout="

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    move/from16 v0, p5

    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 8341
    :cond_db
    const/4 v14, 0x0

    .line 8343
    .local v14, "runningAppAnimation":Z
    const/4 v2, -0x1

    move/from16 v0, p4

    if-eq v0, v2, :cond_173

    if-nez p7, :cond_173

    .line 8344
    move-object/from16 v0, p1

    iget-object v2, v0, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    iget-object v2, v2, Lcom/android/server/wm/AppWindowAnimator;->animation:Landroid/view/animation/Animation;

    sget-object v3, Lcom/android/server/wm/AppWindowAnimator;->sDummyAnimation:Landroid/view/animation/Animation;

    if-ne v2, v3, :cond_f4

    .line 8345
    move-object/from16 v0, p1

    iget-object v2, v0, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    const/4 v3, 0x0

    iput-object v3, v2, Lcom/android/server/wm/AppWindowAnimator;->animation:Landroid/view/animation/Animation;

    .line 8348
    :cond_f4
    const/4 v12, 0x0

    .line 8350
    .local v12, "isMultiWindowTransitionTarget":Z
    move-object/from16 v0, p0

    iget-object v2, v0, mAnimator:Lcom/android/server/wm/WindowAnimator;

    invoke-virtual/range {p1 .. p1}, Lcom/android/server/wm/AppWindowToken;->getDisplayId()I

    move-result v3

    invoke-virtual {v2, v3}, Lcom/android/server/wm/WindowAnimator;->getMultiWindowTransitionLocked(I)Lcom/android/server/wm/MultiWindowTransition;

    move-result-object v13

    .line 8351
    .local v13, "mwTransition":Lcom/android/server/wm/MultiWindowTransition;
    if-eqz v13, :cond_13f

    iget-object v2, v13, Lcom/android/server/wm/MultiWindowTransition;->mTargetAppList:Ljava/util/ArrayList;

    move-object/from16 v0, p1

    invoke-virtual {v2, v0}, Ljava/util/ArrayList;->contains(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_13f

    move-object/from16 v0, p1

    iget v2, v0, Lcom/android/server/wm/AppWindowToken;->mTargetTransit:I

    const/4 v3, -0x1

    if-eq v2, v3, :cond_13f

    .line 8352
    const/4 v12, 0x1

    .line 8353
    sget-boolean v2, SAFE_DEBUG:Z

    if-eqz v2, :cond_13f

    const-string v2, "WindowManager"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "MultiWindowTransitionTarget wtoken="

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    move-object/from16 v0, p1

    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v3

    const-string v4, ", skip applyAnimation transit="

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    move/from16 v0, p4

    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 8357
    :cond_13f
    if-nez v12, :cond_155

    move-object/from16 v2, p0

    move-object/from16 v3, p1

    move-object/from16 v4, p2

    move/from16 v5, p4

    move/from16 v6, p3

    move/from16 v7, p6

    invoke-direct/range {v2 .. v7}, applyAnimationLocked(Lcom/android/server/wm/AppWindowToken;Landroid/view/WindowManager$LayoutParams;IZZ)Z

    move-result v2

    if-eqz v2, :cond_155

    .line 8359
    const/4 v14, 0x1

    move v9, v14

    .line 8361
    .end local v9    # "delayed":Z
    :cond_155
    invoke-virtual/range {p1 .. p1}, Lcom/android/server/wm/AppWindowToken;->findMainWindow()Lcom/android/server/wm/WindowState;

    move-result-object v17

    .line 8371
    .local v17, "window":Lcom/android/server/wm/WindowState;
    if-eqz v17, :cond_172

    move-object/from16 v0, p0

    iget-object v2, v0, mAccessibilityController:Lcom/android/server/wm/AccessibilityController;

    if-eqz v2, :cond_172

    invoke-virtual/range {v17 .. v17}, Lcom/android/server/wm/WindowState;->getDisplayId()I

    move-result v2

    if-nez v2, :cond_172

    .line 8373
    move-object/from16 v0, p0

    iget-object v2, v0, mAccessibilityController:Lcom/android/server/wm/AccessibilityController;

    move-object/from16 v0, v17

    move/from16 v1, p4

    invoke-virtual {v2, v0, v1}, Lcom/android/server/wm/AccessibilityController;->onAppWindowTransitionLocked(Lcom/android/server/wm/WindowState;I)V

    .line 8376
    :cond_172
    const/4 v8, 0x1

    .line 8379
    .end local v12    # "isMultiWindowTransitionTarget":Z
    .end local v13    # "mwTransition":Lcom/android/server/wm/MultiWindowTransition;
    .end local v17    # "window":Lcom/android/server/wm/WindowState;
    :cond_173
    move-object/from16 v0, p1

    iget-object v2, v0, Lcom/android/server/wm/AppWindowToken;->allAppWindows:Lcom/android/server/wm/WindowList;

    invoke-virtual {v2}, Lcom/android/server/wm/WindowList;->size()I

    move-result v18

    .line 8380
    .local v18, "windowsCount":I
    const/4 v11, 0x0

    .restart local v11    # "i":I
    :goto_17c
    move/from16 v0, v18

    if-ge v11, v0, :cond_1fb

    .line 8381
    move-object/from16 v0, p1

    iget-object v2, v0, Lcom/android/server/wm/AppWindowToken;->allAppWindows:Lcom/android/server/wm/WindowList;

    invoke-virtual {v2, v11}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v16

    check-cast v16, Lcom/android/server/wm/WindowState;

    .line 8382
    .local v16, "win":Lcom/android/server/wm/WindowState;
    move-object/from16 v0, p1

    iget-object v2, v0, Lcom/android/server/wm/AppWindowToken;->startingWindow:Lcom/android/server/wm/WindowState;

    move-object/from16 v0, v16

    if-ne v0, v2, :cond_195

    .line 8380
    :cond_192
    :goto_192
    add-int/lit8 v11, v11, 0x1

    goto :goto_17c

    .line 8388
    :cond_195
    if-eqz p3, :cond_1c9

    .line 8389
    invoke-virtual/range {v16 .. v16}, Lcom/android/server/wm/WindowState;->isVisibleNow()Z

    move-result v2

    if-nez v2, :cond_192

    .line 8390
    if-nez v14, :cond_1be

    .line 8391
    move-object/from16 v0, v16

    iget-object v2, v0, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    const/4 v3, 0x1

    const/4 v4, 0x1

    invoke-virtual {v2, v3, v4}, Lcom/android/server/wm/WindowStateAnimator;->applyAnimationLocked(IZ)Z

    .line 8402
    move-object/from16 v0, p0

    iget-object v2, v0, mAccessibilityController:Lcom/android/server/wm/AccessibilityController;

    if-eqz v2, :cond_1be

    invoke-virtual/range {v16 .. v16}, Lcom/android/server/wm/WindowState;->getDisplayId()I

    move-result v2

    if-nez v2, :cond_1be

    .line 8404
    move-object/from16 v0, p0

    iget-object v2, v0, mAccessibilityController:Lcom/android/server/wm/AccessibilityController;

    const/4 v3, 0x1

    move-object/from16 v0, v16

    invoke-virtual {v2, v0, v3}, Lcom/android/server/wm/AccessibilityController;->onWindowTransitionLocked(Lcom/android/server/wm/WindowState;I)V

    .line 8409
    :cond_1be
    const/4 v8, 0x1

    .line 8410
    invoke-virtual/range {v16 .. v16}, Lcom/android/server/wm/WindowState;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    move-result-object v10

    .line 8411
    .local v10, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-eqz v10, :cond_192

    .line 8412
    const/4 v2, 0x1

    iput-boolean v2, v10, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    goto :goto_192

    .line 8415
    .end local v10    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :cond_1c9
    invoke-virtual/range {v16 .. v16}, Lcom/android/server/wm/WindowState;->isVisibleNow()Z

    move-result v2

    if-eqz v2, :cond_192

    .line 8416
    if-nez v14, :cond_1f0

    .line 8417
    move-object/from16 v0, v16

    iget-object v2, v0, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    const/4 v3, 0x2

    const/4 v4, 0x0

    invoke-virtual {v2, v3, v4}, Lcom/android/server/wm/WindowStateAnimator;->applyAnimationLocked(IZ)Z

    .line 8428
    move-object/from16 v0, p0

    iget-object v2, v0, mAccessibilityController:Lcom/android/server/wm/AccessibilityController;

    if-eqz v2, :cond_1f0

    invoke-virtual/range {v16 .. v16}, Lcom/android/server/wm/WindowState;->getDisplayId()I

    move-result v2

    if-nez v2, :cond_1f0

    .line 8430
    move-object/from16 v0, p0

    iget-object v2, v0, mAccessibilityController:Lcom/android/server/wm/AccessibilityController;

    const/4 v3, 0x2

    move-object/from16 v0, v16

    invoke-virtual {v2, v0, v3}, Lcom/android/server/wm/AccessibilityController;->onWindowTransitionLocked(Lcom/android/server/wm/WindowState;I)V

    .line 8435
    :cond_1f0
    const/4 v8, 0x1

    .line 8436
    invoke-virtual/range {v16 .. v16}, Lcom/android/server/wm/WindowState;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    move-result-object v10

    .line 8437
    .restart local v10    # "displayContent":Lcom/android/server/wm/DisplayContent;
    if-eqz v10, :cond_192

    .line 8438
    const/4 v2, 0x1

    iput-boolean v2, v10, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    goto :goto_192

    .line 8443
    .end local v10    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v16    # "win":Lcom/android/server/wm/WindowState;
    :cond_1fb
    if-nez p3, :cond_26b

    const/4 v2, 0x1

    :goto_1fe
    move-object/from16 v0, p1

    iput-boolean v2, v0, Lcom/android/server/wm/AppWindowToken;->hiddenRequested:Z

    move-object/from16 v0, p1

    iput-boolean v2, v0, Lcom/android/server/wm/AppWindowToken;->hidden:Z

    .line 8444
    if-nez p3, :cond_26d

    .line 8445
    const/4 v2, 0x1

    const/4 v3, 0x1

    move-object/from16 v0, p0

    move-object/from16 v1, p1

    invoke-virtual {v0, v1, v2, v3}, unsetAppFreezingScreenLocked(Lcom/android/server/wm/AppWindowToken;ZZ)V

    .line 8456
    :cond_211
    :goto_211
    sget-boolean v2, DEBUG_APP_TRANSITIONS:Z

    if-eqz v2, :cond_24c

    const-string v2, "WindowManager"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v4, "setTokenVisibilityLocked: "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    move-object/from16 v0, p1

    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v3

    const-string v4, ": hidden="

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    move-object/from16 v0, p1

    iget-boolean v4, v0, Lcom/android/server/wm/AppWindowToken;->hidden:Z

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v3

    const-string v4, " hiddenRequested="

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    move-object/from16 v0, p1

    iget-boolean v4, v0, Lcom/android/server/wm/AppWindowToken;->hiddenRequested:Z

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 8460
    :cond_24c
    if-eqz v8, :cond_72

    .line 8461
    move-object/from16 v0, p0

    iget-object v2, v0, mInputMonitor:Lcom/android/server/wm/InputMonitor;

    invoke-virtual {v2}, Lcom/android/server/wm/InputMonitor;->setUpdateInputWindowsNeededLw()V

    .line 8462
    if-eqz p5, :cond_261

    .line 8463
    const/4 v2, 0x3

    const/4 v3, 0x0

    move-object/from16 v0, p0

    invoke-direct {v0, v2, v3}, updateFocusedWindowLocked(IZ)Z

    .line 8465
    invoke-direct/range {p0 .. p0}, performLayoutAndPlaceSurfacesLocked()V

    .line 8467
    :cond_261
    move-object/from16 v0, p0

    iget-object v2, v0, mInputMonitor:Lcom/android/server/wm/InputMonitor;

    const/4 v3, 0x0

    invoke-virtual {v2, v3}, Lcom/android/server/wm/InputMonitor;->updateInputWindowsLw(Z)V

    goto/16 :goto_72

    .line 8443
    :cond_26b
    const/4 v2, 0x0

    goto :goto_1fe

    .line 8449
    :cond_26d
    move-object/from16 v0, p1

    iget-object v15, v0, Lcom/android/server/wm/AppWindowToken;->startingWindow:Lcom/android/server/wm/WindowState;

    .line 8450
    .local v15, "swin":Lcom/android/server/wm/WindowState;
    if-eqz v15, :cond_211

    invoke-virtual {v15}, Lcom/android/server/wm/WindowState;->isDrawnLw()Z

    move-result v2

    if-nez v2, :cond_211

    .line 8451
    const/4 v2, 0x0

    iput-boolean v2, v15, Lcom/android/server/wm/WindowState;->mPolicyVisibility:Z

    .line 8452
    const/4 v2, 0x0

    iput-boolean v2, v15, Lcom/android/server/wm/WindowState;->mPolicyVisibilityAfterAnim:Z

    goto :goto_211

    .line 8490
    .end local v8    # "changed":Z
    .end local v14    # "runningAppAnimation":Z
    .end local v15    # "swin":Lcom/android/server/wm/WindowState;
    .end local v18    # "windowsCount":I
    :cond_280
    return v9
.end method

.method setTransparentRegionWindow(Lcom/android/server/wm/Session;Landroid/view/IWindow;Landroid/graphics/Region;)V
    .registers 9
    .param p1, "session"    # Lcom/android/server/wm/Session;
    .param p2, "client"    # Landroid/view/IWindow;
    .param p3, "region"    # Landroid/graphics/Region;

    .prologue
    .line 4996
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 4998
    .local v0, "origId":J
    :try_start_4
    iget-object v4, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v4
    :try_end_7
    .catchall {:try_start_4 .. :try_end_7} :catchall_1f

    .line 4999
    const/4 v3, 0x0

    :try_start_8
    invoke-virtual {p0, p1, p2, v3}, windowForClientLocked(Lcom/android/server/wm/Session;Landroid/view/IWindow;Z)Lcom/android/server/wm/WindowState;

    move-result-object v2

    .line 5000
    .local v2, "w":Lcom/android/server/wm/WindowState;
    if-eqz v2, :cond_17

    iget-boolean v3, v2, Lcom/android/server/wm/WindowState;->mHasSurface:Z

    if-eqz v3, :cond_17

    .line 5001
    iget-object v3, v2, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    invoke-virtual {v3, p3}, Lcom/android/server/wm/WindowStateAnimator;->setTransparentRegionHintLocked(Landroid/graphics/Region;)V

    .line 5003
    :cond_17
    monitor-exit v4
    :try_end_18
    .catchall {:try_start_8 .. :try_end_18} :catchall_1c

    .line 5005
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 5007
    return-void

    .line 5003
    .end local v2    # "w":Lcom/android/server/wm/WindowState;
    :catchall_1c
    move-exception v3

    :try_start_1d
    monitor-exit v4
    :try_end_1e
    .catchall {:try_start_1d .. :try_end_1e} :catchall_1c

    :try_start_1e
    throw v3
    :try_end_1f
    .catchall {:try_start_1e .. :try_end_1f} :catchall_1f

    .line 5005
    :catchall_1f
    move-exception v3

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v3
.end method

.method setWallpaperAnimLayerAdjustmentLocked(I)V
    .registers 3
    .param p1, "adj"    # I

    .prologue
    .line 3611
    const/4 v0, 0x0

    invoke-virtual {p0, v0, p1}, setWallpaperAnimLayerAdjustmentLocked(II)V

    .line 3612
    return-void
.end method

.method setWallpaperAnimLayerAdjustmentLocked(II)V
    .registers 11
    .param p1, "displayId"    # I
    .param p2, "adj"    # I

    .prologue
    .line 3616
    sget-boolean v5, DEBUG_LAYERS:Z

    if-nez v5, :cond_8

    sget-boolean v5, DEBUG_WALLPAPER:Z

    if-eqz v5, :cond_20

    :cond_8
    const-string v5, "WindowManager"

    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "Setting wallpaper layer adj to "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-static {v5, v6}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 3626
    :cond_20
    iput p2, p0, mWallpaperAnimLayerAdjustment:I

    .line 3627
    iget-object v1, p0, mWallpaperTokens:Ljava/util/ArrayList;

    .line 3631
    .local v1, "mWallpaperTokens":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/WindowToken;>;"
    invoke-virtual {v1}, Ljava/util/ArrayList;->size()I

    move-result v5

    add-int/lit8 v0, v5, -0x1

    .local v0, "curTokenNdx":I
    :goto_2a
    if-ltz v0, :cond_7e

    .line 3632
    invoke-virtual {v1, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/android/server/wm/WindowToken;

    iget-object v4, v5, Lcom/android/server/wm/WindowToken;->windows:Lcom/android/server/wm/WindowList;

    .line 3633
    .local v4, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual {v4}, Lcom/android/server/wm/WindowList;->size()I

    move-result v5

    add-int/lit8 v3, v5, -0x1

    .local v3, "wallpaperNdx":I
    :goto_3a
    if-ltz v3, :cond_7b

    .line 3634
    invoke-virtual {v4, v3}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/wm/WindowState;

    .line 3635
    .local v2, "wallpaper":Lcom/android/server/wm/WindowState;
    iget-object v5, v2, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    iget v6, v2, Lcom/android/server/wm/WindowState;->mLayer:I

    add-int/2addr v6, p2

    iput v6, v5, Lcom/android/server/wm/WindowStateAnimator;->mAnimLayer:I

    .line 3636
    sget-boolean v5, DEBUG_LAYERS:Z

    if-nez v5, :cond_51

    sget-boolean v5, DEBUG_WALLPAPER:Z

    if-eqz v5, :cond_78

    :cond_51
    const-string v5, "WindowManager"

    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v7, "setWallpaper win "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v6

    const-string v7, " anim layer: "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    iget-object v7, v2, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    iget v7, v7, Lcom/android/server/wm/WindowStateAnimator;->mAnimLayer:I

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-static {v5, v6}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 3633
    :cond_78
    add-int/lit8 v3, v3, -0x1

    goto :goto_3a

    .line 3631
    .end local v2    # "wallpaper":Lcom/android/server/wm/WindowState;
    :cond_7b
    add-int/lit8 v0, v0, -0x1

    goto :goto_2a

    .line 3640
    .end local v3    # "wallpaperNdx":I
    .end local v4    # "windows":Lcom/android/server/wm/WindowList;
    :cond_7e
    return-void
.end method

.method public setWindowOpaque(Landroid/os/IBinder;Z)V
    .registers 5
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "isOpaque"    # Z

    .prologue
    .line 8292
    iget-object v1, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v1

    .line 8293
    :try_start_3
    invoke-virtual {p0, p1, p2}, setWindowOpaqueLocked(Landroid/os/IBinder;Z)V

    .line 8294
    monitor-exit v1

    .line 8295
    return-void

    .line 8294
    :catchall_8
    move-exception v0

    monitor-exit v1
    :try_end_a
    .catchall {:try_start_3 .. :try_end_a} :catchall_8

    throw v0
.end method

.method public setWindowOpaqueLocked(Landroid/os/IBinder;Z)V
    .registers 6
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "isOpaque"    # Z

    .prologue
    .line 8298
    invoke-virtual {p0, p1}, findAppWindowToken(Landroid/os/IBinder;)Lcom/android/server/wm/AppWindowToken;

    move-result-object v1

    .line 8299
    .local v1, "wtoken":Lcom/android/server/wm/AppWindowToken;
    if-eqz v1, :cond_11

    .line 8300
    invoke-virtual {v1}, Lcom/android/server/wm/AppWindowToken;->findMainWindow()Lcom/android/server/wm/WindowState;

    move-result-object v0

    .line 8301
    .local v0, "win":Lcom/android/server/wm/WindowState;
    if-eqz v0, :cond_11

    .line 8302
    iget-object v2, v0, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    invoke-virtual {v2, p2}, Lcom/android/server/wm/WindowStateAnimator;->setOpaqueLocked(Z)V

    .line 8305
    .end local v0    # "win":Lcom/android/server/wm/WindowState;
    :cond_11
    return-void
.end method

.method public setWindowWallpaperDisplayOffsetLocked(Lcom/android/server/wm/WindowState;II)V
    .registers 5
    .param p1, "window"    # Lcom/android/server/wm/WindowState;
    .param p2, "x"    # I
    .param p3, "y"    # I

    .prologue
    .line 5098
    iget v0, p1, Lcom/android/server/wm/WindowState;->mWallpaperDisplayOffsetX:I

    if-ne v0, p2, :cond_8

    iget v0, p1, Lcom/android/server/wm/WindowState;->mWallpaperDisplayOffsetY:I

    if-eq v0, p3, :cond_10

    .line 5099
    :cond_8
    iput p2, p1, Lcom/android/server/wm/WindowState;->mWallpaperDisplayOffsetX:I

    .line 5100
    iput p3, p1, Lcom/android/server/wm/WindowState;->mWallpaperDisplayOffsetY:I

    .line 5101
    const/4 v0, 0x1

    invoke-virtual {p0, p1, v0}, updateWallpaperOffsetLocked(Lcom/android/server/wm/WindowState;Z)V

    .line 5103
    :cond_10
    return-void
.end method

.method public setWindowWallpaperPositionLocked(Lcom/android/server/wm/WindowState;FFFF)V
    .registers 7
    .param p1, "window"    # Lcom/android/server/wm/WindowState;
    .param p2, "x"    # F
    .param p3, "y"    # F
    .param p4, "xStep"    # F
    .param p5, "yStep"    # F

    .prologue
    .line 5059
    iget v0, p1, Lcom/android/server/wm/WindowState;->mWallpaperX:F

    cmpl-float v0, v0, p2

    if-nez v0, :cond_c

    iget v0, p1, Lcom/android/server/wm/WindowState;->mWallpaperY:F

    cmpl-float v0, v0, p3

    if-eqz v0, :cond_18

    .line 5060
    :cond_c
    iput p2, p1, Lcom/android/server/wm/WindowState;->mWallpaperX:F

    .line 5061
    iput p3, p1, Lcom/android/server/wm/WindowState;->mWallpaperY:F

    .line 5062
    iput p4, p1, Lcom/android/server/wm/WindowState;->mWallpaperXStep:F

    .line 5063
    iput p5, p1, Lcom/android/server/wm/WindowState;->mWallpaperYStep:F

    .line 5064
    const/4 v0, 0x1

    invoke-virtual {p0, p1, v0}, updateWallpaperOffsetLocked(Lcom/android/server/wm/WindowState;Z)V

    .line 5066
    :cond_18
    return-void
.end method

.method public shouldHandleOrientation(ILcom/samsung/android/multiwindow/MultiWindowStyle;)Z
    .registers 5
    .param p1, "requestedOrientation"    # I
    .param p2, "mwStyle"    # Lcom/samsung/android/multiwindow/MultiWindowStyle;

    .prologue
    const/4 v0, 0x1

    .line 21710
    const/high16 v1, 0x400000

    invoke-virtual {p2, v1}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->isEnabled(I)Z

    move-result v1

    if-nez v1, :cond_32

    const/4 v1, 0x4

    invoke-virtual {p2, v1}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->isEnabled(I)Z

    move-result v1

    if-nez v1, :cond_32

    const/4 v1, 0x5

    if-eq p1, v1, :cond_31

    const/16 v1, 0xe

    if-eq p1, v1, :cond_31

    if-eq p1, v0, :cond_31

    const/4 v1, 0x7

    if-eq p1, v1, :cond_31

    const/16 v1, 0x9

    if-eq p1, v1, :cond_31

    const/16 v1, 0xc

    if-eq p1, v1, :cond_31

    if-eqz p1, :cond_31

    const/4 v1, 0x6

    if-eq p1, v1, :cond_31

    const/16 v1, 0x8

    if-eq p1, v1, :cond_31

    const/16 v1, 0xb

    if-ne p1, v1, :cond_32

    :cond_31
    :goto_31
    return v0

    :cond_32
    const/4 v0, 0x0

    goto :goto_31
.end method

.method shouldHideWhileStartingWindowIsShown(Lcom/android/server/wm/AppWindowToken;)Z
    .registers 7
    .param p1, "appToken"    # Lcom/android/server/wm/AppWindowToken;

    .prologue
    const/4 v2, 0x0

    .line 20327
    if-nez p1, :cond_4

    .line 20340
    :cond_3
    :goto_3
    return v2

    .line 20331
    :cond_4
    iget-object v1, p1, Lcom/android/server/wm/AppWindowToken;->mTask:Lcom/android/server/wm/Task;

    .line 20332
    .local v1, "task":Lcom/android/server/wm/Task;
    if-eqz v1, :cond_3c

    iget-object v0, v1, Lcom/android/server/wm/Task;->mStartingWindowTargetAppToken:Lcom/android/server/wm/AppWindowToken;

    .line 20333
    .local v0, "startingTargetAppToken":Lcom/android/server/wm/AppWindowToken;
    :goto_a
    if-eqz v0, :cond_3

    if-eq v0, p1, :cond_3

    .line 20334
    sget-boolean v2, DEBUG_STARTING_WINDOW:Z

    if-eqz v2, :cond_3a

    .line 20335
    const-string v2, "WindowManager"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v4, "shouldHideWhileStartingWindowIsShown() : true for appToken="

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v3

    const-string v4, " Caller="

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    const/4 v4, 0x2

    invoke-static {v4}, Landroid/os/Debug;->getCallers(I)Ljava/lang/String;

    move-result-object v4

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 20337
    :cond_3a
    const/4 v2, 0x1

    goto :goto_3

    .line 20332
    .end local v0    # "startingTargetAppToken":Lcom/android/server/wm/AppWindowToken;
    :cond_3c
    const/4 v0, 0x0

    goto :goto_a
.end method

.method public showBootMessage(Ljava/lang/CharSequence;Z)V
    .registers 6
    .param p1, "msg"    # Ljava/lang/CharSequence;
    .param p2, "always"    # Z

    .prologue
    .line 10530
    const/4 v0, 0x0

    .line 10531
    .local v0, "first":Z
    iget-object v2, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v2

    .line 10540
    :try_start_4
    iget-boolean v1, p0, mAllowBootMessages:Z

    if-nez v1, :cond_a

    .line 10541
    monitor-exit v2

    .line 10558
    :cond_9
    :goto_9
    return-void

    .line 10543
    :cond_a
    iget-boolean v1, p0, mShowingBootMessages:Z

    if-nez v1, :cond_16

    .line 10544
    if-nez p2, :cond_15

    .line 10545
    monitor-exit v2

    goto :goto_9

    .line 10554
    :catchall_12
    move-exception v1

    monitor-exit v2
    :try_end_14
    .catchall {:try_start_4 .. :try_end_14} :catchall_12

    throw v1

    .line 10547
    :cond_15
    const/4 v0, 0x1

    .line 10549
    :cond_16
    :try_start_16
    iget-boolean v1, p0, mSystemBooted:Z

    if-eqz v1, :cond_1c

    .line 10550
    monitor-exit v2

    goto :goto_9

    .line 10552
    :cond_1c
    const/4 v1, 0x1

    iput-boolean v1, p0, mShowingBootMessages:Z

    .line 10553
    iget-object v1, p0, mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v1, p1, p2}, Landroid/view/WindowManagerPolicy;->showBootMessage(Ljava/lang/CharSequence;Z)V

    .line 10554
    monitor-exit v2
    :try_end_25
    .catchall {:try_start_16 .. :try_end_25} :catchall_12

    .line 10555
    if-eqz v0, :cond_9

    .line 10556
    invoke-virtual {p0}, performEnableScreen()V

    goto :goto_9
.end method

.method public showCircularMask(Z)V
    .registers 10
    .param p1, "visible"    # Z

    .prologue
    .line 10613
    iget-object v6, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v6

    .line 10617
    :try_start_3
    invoke-static {}, Landroid/view/SurfaceControl;->openTransaction()V
    :try_end_6
    .catchall {:try_start_3 .. :try_end_6} :catchall_61

    .line 10619
    if-eqz p1, :cond_4e

    .line 10621
    :try_start_8
    iget-object v0, p0, mCircularDisplayMask:Lcom/android/server/wm/CircularDisplayMask;

    if-nez v0, :cond_43

    .line 10622
    iget-object v0, p0, mContext:Landroid/content/Context;

    invoke-virtual {v0}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    move-result-object v0

    const v1, 0x105008a

    invoke-virtual {v0, v1}, Landroid/content/res/Resources;->getDimensionPixelSize(I)I

    move-result v4

    .line 10624
    .local v4, "screenOffset":I
    iget-object v0, p0, mContext:Landroid/content/Context;

    invoke-virtual {v0}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    move-result-object v0

    const v1, 0x105008b

    invoke-virtual {v0, v1}, Landroid/content/res/Resources;->getDimensionPixelSize(I)I

    move-result v5

    .line 10627
    .local v5, "maskThickness":I
    new-instance v0, Lcom/android/server/wm/CircularDisplayMask;

    invoke-virtual {p0}, getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v1

    invoke-virtual {v1}, Lcom/android/server/wm/DisplayContent;->getDisplay()Landroid/view/Display;

    move-result-object v1

    iget-object v2, p0, mFxSession:Landroid/view/SurfaceSession;

    iget-object v3, p0, mPolicy:Landroid/view/WindowManagerPolicy;

    const/16 v7, 0x7e2

    invoke-interface {v3, v7}, Landroid/view/WindowManagerPolicy;->windowTypeToLayerLw(I)I

    move-result v3

    mul-int/lit16 v3, v3, 0x2710

    add-int/lit8 v3, v3, 0xa

    invoke-direct/range {v0 .. v5}, Lcom/android/server/wm/CircularDisplayMask;-><init>(Landroid/view/Display;Landroid/view/SurfaceSession;III)V

    iput-object v0, p0, mCircularDisplayMask:Lcom/android/server/wm/CircularDisplayMask;

    .line 10634
    .end local v4    # "screenOffset":I
    .end local v5    # "maskThickness":I
    :cond_43
    iget-object v0, p0, mCircularDisplayMask:Lcom/android/server/wm/CircularDisplayMask;

    const/4 v1, 0x1

    invoke-virtual {v0, v1}, Lcom/android/server/wm/CircularDisplayMask;->setVisibility(Z)V
    :try_end_49
    .catchall {:try_start_8 .. :try_end_49} :catchall_5c

    .line 10640
    :cond_49
    :goto_49
    :try_start_49
    invoke-static {}, Landroid/view/SurfaceControl;->closeTransaction()V

    .line 10644
    monitor-exit v6
    :try_end_4d
    .catchall {:try_start_49 .. :try_end_4d} :catchall_61

    .line 10645
    return-void

    .line 10635
    :cond_4e
    :try_start_4e
    iget-object v0, p0, mCircularDisplayMask:Lcom/android/server/wm/CircularDisplayMask;

    if-eqz v0, :cond_49

    .line 10636
    iget-object v0, p0, mCircularDisplayMask:Lcom/android/server/wm/CircularDisplayMask;

    const/4 v1, 0x0

    invoke-virtual {v0, v1}, Lcom/android/server/wm/CircularDisplayMask;->setVisibility(Z)V

    .line 10637
    const/4 v0, 0x0

    iput-object v0, p0, mCircularDisplayMask:Lcom/android/server/wm/CircularDisplayMask;
    :try_end_5b
    .catchall {:try_start_4e .. :try_end_5b} :catchall_5c

    goto :goto_49

    .line 10640
    :catchall_5c
    move-exception v0

    :try_start_5d
    invoke-static {}, Landroid/view/SurfaceControl;->closeTransaction()V

    throw v0

    .line 10644
    :catchall_61
    move-exception v0

    monitor-exit v6
    :try_end_63
    .catchall {:try_start_5d .. :try_end_63} :catchall_61

    throw v0
.end method

.method public showEmulatorDisplayOverlay()V
    .registers 8

    .prologue
    .line 10648
    iget-object v1, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v1

    .line 10652
    :try_start_3
    invoke-static {}, Landroid/view/SurfaceControl;->openTransaction()V
    :try_end_6
    .catchall {:try_start_3 .. :try_end_6} :catchall_39

    .line 10654
    :try_start_6
    iget-object v0, p0, mEmulatorDisplayOverlay:Lcom/android/server/wm/EmulatorDisplayOverlay;

    if-nez v0, :cond_29

    .line 10655
    new-instance v0, Lcom/android/server/wm/EmulatorDisplayOverlay;

    iget-object v2, p0, mContext:Landroid/content/Context;

    invoke-virtual {p0}, getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v3

    invoke-virtual {v3}, Lcom/android/server/wm/DisplayContent;->getDisplay()Landroid/view/Display;

    move-result-object v3

    iget-object v4, p0, mFxSession:Landroid/view/SurfaceSession;

    iget-object v5, p0, mPolicy:Landroid/view/WindowManagerPolicy;

    const/16 v6, 0x7e2

    invoke-interface {v5, v6}, Landroid/view/WindowManagerPolicy;->windowTypeToLayerLw(I)I

    move-result v5

    mul-int/lit16 v5, v5, 0x2710

    add-int/lit8 v5, v5, 0xa

    invoke-direct {v0, v2, v3, v4, v5}, Lcom/android/server/wm/EmulatorDisplayOverlay;-><init>(Landroid/content/Context;Landroid/view/Display;Landroid/view/SurfaceSession;I)V

    iput-object v0, p0, mEmulatorDisplayOverlay:Lcom/android/server/wm/EmulatorDisplayOverlay;

    .line 10663
    :cond_29
    iget-object v0, p0, mEmulatorDisplayOverlay:Lcom/android/server/wm/EmulatorDisplayOverlay;

    const/4 v2, 0x1

    invoke-virtual {v0, v2}, Lcom/android/server/wm/EmulatorDisplayOverlay;->setVisibility(Z)V
    :try_end_2f
    .catchall {:try_start_6 .. :try_end_2f} :catchall_34

    .line 10665
    :try_start_2f
    invoke-static {}, Landroid/view/SurfaceControl;->closeTransaction()V

    .line 10669
    monitor-exit v1

    .line 10670
    return-void

    .line 10665
    :catchall_34
    move-exception v0

    invoke-static {}, Landroid/view/SurfaceControl;->closeTransaction()V

    throw v0

    .line 10669
    :catchall_39
    move-exception v0

    monitor-exit v1
    :try_end_3b
    .catchall {:try_start_2f .. :try_end_3b} :catchall_39

    throw v0
.end method

.method public showEmulatorDisplayOverlayIfNeeded()V
    .registers 4

    .prologue
    .line 10604
    iget-object v0, p0, mContext:Landroid/content/Context;

    invoke-virtual {v0}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    move-result-object v0

    const v1, 0x112008b

    invoke-virtual {v0, v1}, Landroid/content/res/Resources;->getBoolean(I)Z

    move-result v0

    if-eqz v0, :cond_31

    const-string/jumbo v0, "ro.emulator.circular"

    const/4 v1, 0x0

    invoke-static {v0, v1}, Landroid/os/SystemProperties;->getBoolean(Ljava/lang/String;Z)Z

    move-result v0

    if-eqz v0, :cond_31

    sget-object v0, Landroid/os/Build;->HARDWARE:Ljava/lang/String;

    const-string/jumbo v1, "goldfish"

    invoke-virtual {v0, v1}, Ljava/lang/String;->contains(Ljava/lang/CharSequence;)Z

    move-result v0

    if-eqz v0, :cond_31

    .line 10608
    iget-object v0, p0, mH:Lcom/android/server/wm/WindowManagerService$H;

    iget-object v1, p0, mH:Lcom/android/server/wm/WindowManagerService$H;

    const/16 v2, 0x24

    invoke-virtual {v1, v2}, Lcom/android/server/wm/WindowManagerService$H;->obtainMessage(I)Landroid/os/Message;

    move-result-object v1

    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowManagerService$H;->sendMessage(Landroid/os/Message;)Z

    .line 10610
    :cond_31
    return-void
.end method

.method showGlobalActions()V
    .registers 2

    .prologue
    .line 9926
    iget-object v0, p0, mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v0}, Landroid/view/WindowManagerPolicy;->showGlobalActions()V

    .line 9927
    return-void
.end method

.method public showRecentApps()V
    .registers 2

    .prologue
    .line 19252
    iget-object v0, p0, mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v0}, Landroid/view/WindowManagerPolicy;->showRecentApps()V

    .line 19253
    return-void
.end method

.method public showStrictModeViolation(Z)V
    .registers 7
    .param p1, "on"    # Z

    .prologue
    .line 10676
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v0

    .line 10677
    .local v0, "pid":I
    iget-object v2, p0, mH:Lcom/android/server/wm/WindowManagerService$H;

    iget-object v3, p0, mH:Lcom/android/server/wm/WindowManagerService$H;

    const/16 v4, 0x19

    if-eqz p1, :cond_15

    const/4 v1, 0x1

    :goto_d
    invoke-virtual {v3, v4, v1, v0}, Lcom/android/server/wm/WindowManagerService$H;->obtainMessage(III)Landroid/os/Message;

    move-result-object v1

    invoke-virtual {v2, v1}, Lcom/android/server/wm/WindowManagerService$H;->sendMessage(Landroid/os/Message;)Z

    .line 10678
    return-void

    .line 10677
    :cond_15
    const/4 v1, 0x0

    goto :goto_d
.end method

.method public shutdown(Z)V
    .registers 3
    .param p1, "confirm"    # Z

    .prologue
    .line 10205
    iget-object v0, p0, mContext:Landroid/content/Context;

    invoke-static {v0, p1}, Lcom/android/server/power/ShutdownThread;->shutdown(Landroid/content/Context;Z)V

    .line 10206
    return-void
.end method

.method public startAppFreezingScreen(Landroid/os/IBinder;I)V
    .registers 11
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "configChanges"    # I

    .prologue
    .line 8777
    const-string v4, "android.permission.MANAGE_APP_TOKENS"

    const-string/jumbo v5, "setAppFreezingScreen()"

    invoke-virtual {p0, v4, v5}, checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v4

    if-nez v4, :cond_13

    .line 8779
    new-instance v4, Ljava/lang/SecurityException;

    const-string v5, "Requires MANAGE_APP_TOKENS permission"

    invoke-direct {v4, v5}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v4

    .line 8782
    :cond_13
    iget-object v5, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v5

    .line 8783
    :try_start_16
    invoke-virtual {p0, p1}, findAppWindowToken(Landroid/os/IBinder;)Lcom/android/server/wm/AppWindowToken;

    move-result-object v1

    .line 8793
    .local v1, "wtoken":Lcom/android/server/wm/AppWindowToken;
    invoke-virtual {p0}, okToDisplay()Z

    move-result v0

    .line 8796
    .local v0, "goodToDisplay":Z
    if-nez p2, :cond_40

    if-eqz v0, :cond_40

    .line 8797
    sget-boolean v4, DEBUG_ORIENTATION:Z

    if-eqz v4, :cond_3e

    const-string v4, "WindowManager"

    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "Skipping set freeze of "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-static {v4, v6}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 8798
    :cond_3e
    monitor-exit v5

    .line 8809
    :goto_3f
    return-void

    .line 8801
    :cond_40
    if-eqz v1, :cond_46

    iget-object v4, v1, Lcom/android/server/wm/AppWindowToken;->appToken:Landroid/view/IApplicationToken;

    if-nez v4, :cond_63

    .line 8802
    :cond_46
    const-string v4, "WindowManager"

    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "Attempted to freeze screen with non-existing app token: "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-static {v4, v6}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 8803
    monitor-exit v5

    goto :goto_3f

    .line 8808
    .end local v0    # "goodToDisplay":Z
    .end local v1    # "wtoken":Lcom/android/server/wm/AppWindowToken;
    :catchall_60
    move-exception v4

    monitor-exit v5
    :try_end_62
    .catchall {:try_start_16 .. :try_end_62} :catchall_60

    throw v4

    .line 8805
    .restart local v0    # "goodToDisplay":Z
    .restart local v1    # "wtoken":Lcom/android/server/wm/AppWindowToken;
    :cond_63
    :try_start_63
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v2

    .line 8806
    .local v2, "origId":J
    invoke-direct {p0, v1}, startAppFreezingScreenLocked(Lcom/android/server/wm/AppWindowToken;)V

    .line 8807
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 8808
    monitor-exit v5
    :try_end_6e
    .catchall {:try_start_63 .. :try_end_6e} :catchall_60

    goto :goto_3f
.end method

.method public startDisplayChanging(Landroid/os/IBinder;)V
    .registers 10
    .param p1, "token"    # Landroid/os/IBinder;

    .prologue
    .line 23403
    iget-object v5, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v5

    .line 23404
    :try_start_3
    invoke-virtual {p0, p1}, findAppWindowToken(Landroid/os/IBinder;)Lcom/android/server/wm/AppWindowToken;

    move-result-object v3

    .line 23405
    .local v3, "wtoken":Lcom/android/server/wm/AppWindowToken;
    if-nez v3, :cond_23

    .line 23406
    const-string v4, "WindowManager"

    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "Attempted to display changing screen with non-existing app token: "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-static {v4, v6}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 23407
    monitor-exit v5

    .line 23416
    :goto_22
    return-void

    .line 23410
    :cond_23
    iget-object v4, v3, Lcom/android/server/wm/AppWindowToken;->allAppWindows:Lcom/android/server/wm/WindowList;

    invoke-virtual {v4}, Lcom/android/server/wm/WindowList;->size()I

    move-result v0

    .line 23411
    .local v0, "N":I
    const/4 v1, 0x0

    .local v1, "i":I
    :goto_2a
    if-ge v1, v0, :cond_3a

    .line 23412
    iget-object v4, v3, Lcom/android/server/wm/AppWindowToken;->allAppWindows:Lcom/android/server/wm/WindowList;

    invoke-virtual {v4, v1}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/wm/WindowState;

    .line 23413
    .local v2, "w":Lcom/android/server/wm/WindowState;
    const/4 v4, 0x1

    iput-boolean v4, v2, Lcom/android/server/wm/WindowState;->mDisplayChanging:Z

    .line 23411
    add-int/lit8 v1, v1, 0x1

    goto :goto_2a

    .line 23415
    .end local v2    # "w":Lcom/android/server/wm/WindowState;
    :cond_3a
    monitor-exit v5

    goto :goto_22

    .end local v0    # "N":I
    .end local v1    # "i":I
    .end local v3    # "wtoken":Lcom/android/server/wm/AppWindowToken;
    :catchall_3c
    move-exception v4

    monitor-exit v5
    :try_end_3e
    .catchall {:try_start_3 .. :try_end_3e} :catchall_3c

    throw v4
.end method

.method public startFreezingScreen(II)V
    .registers 11
    .param p1, "exitAnim"    # I
    .param p2, "enterAnim"    # I

    .prologue
    .line 9739
    const-string v2, "android.permission.FREEZE_SCREEN"

    const-string/jumbo v3, "startFreezingScreen()"

    invoke-virtual {p0, v2, v3}, checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v2

    if-nez v2, :cond_13

    .line 9741
    new-instance v2, Ljava/lang/SecurityException;

    const-string v3, "Requires FREEZE_SCREEN permission"

    invoke-direct {v2, v3}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v2

    .line 9744
    :cond_13
    iget-object v3, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v3

    .line 9745
    :try_start_16
    iget-boolean v2, p0, mClientFreezingScreen:Z

    if-nez v2, :cond_38

    .line 9746
    const/4 v2, 0x1

    iput-boolean v2, p0, mClientFreezingScreen:Z

    .line 9747
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J
    :try_end_20
    .catchall {:try_start_16 .. :try_end_20} :catchall_3f

    move-result-wide v0

    .line 9749
    .local v0, "origId":J
    const/4 v2, 0x0

    :try_start_22
    invoke-direct {p0, v2, p1, p2}, startFreezingDisplayLocked(ZII)V

    .line 9750
    iget-object v2, p0, mH:Lcom/android/server/wm/WindowManagerService$H;

    const/16 v4, 0x1e

    invoke-virtual {v2, v4}, Lcom/android/server/wm/WindowManagerService$H;->removeMessages(I)V

    .line 9751
    iget-object v2, p0, mH:Lcom/android/server/wm/WindowManagerService$H;

    const/16 v4, 0x1e

    const-wide/16 v6, 0x1388

    invoke-virtual {v2, v4, v6, v7}, Lcom/android/server/wm/WindowManagerService$H;->sendEmptyMessageDelayed(IJ)Z
    :try_end_35
    .catchall {:try_start_22 .. :try_end_35} :catchall_3a

    .line 9753
    :try_start_35
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 9756
    .end local v0    # "origId":J
    :cond_38
    monitor-exit v3

    .line 9757
    return-void

    .line 9753
    .restart local v0    # "origId":J
    :catchall_3a
    move-exception v2

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v2

    .line 9756
    .end local v0    # "origId":J
    :catchall_3f
    move-exception v2

    monitor-exit v3
    :try_end_41
    .catchall {:try_start_35 .. :try_end_41} :catchall_3f

    throw v2
.end method

.method public startViewServer(I)Z
    .registers 6
    .param p1, "port"    # I

    .prologue
    const/4 v1, 0x0

    .line 12074
    invoke-direct {p0}, isSystemSecure()Z

    move-result v2

    if-eqz v2, :cond_8

    .line 12103
    :cond_7
    :goto_7
    return v1

    .line 12078
    :cond_8
    const-string v2, "android.permission.DUMP"

    const-string/jumbo v3, "startViewServer"

    invoke-virtual {p0, v2, v3}, checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v2

    if-eqz v2, :cond_7

    .line 12082
    const/16 v2, 0x400

    if-lt p1, v2, :cond_7

    .line 12086
    iget-object v2, p0, mViewServer:Lcom/android/server/wm/ViewServer;

    if-eqz v2, :cond_33

    .line 12087
    iget-object v2, p0, mViewServer:Lcom/android/server/wm/ViewServer;

    invoke-virtual {v2}, Lcom/android/server/wm/ViewServer;->isRunning()Z

    move-result v2

    if-nez v2, :cond_7

    .line 12089
    :try_start_23
    iget-object v2, p0, mViewServer:Lcom/android/server/wm/ViewServer;

    invoke-virtual {v2}, Lcom/android/server/wm/ViewServer;->start()Z
    :try_end_28
    .catch Ljava/io/IOException; {:try_start_23 .. :try_end_28} :catch_2a

    move-result v1

    goto :goto_7

    .line 12090
    :catch_2a
    move-exception v0

    .line 12091
    .local v0, "e":Ljava/io/IOException;
    const-string v2, "WindowManager"

    const-string v3, "View server did not start"

    invoke-static {v2, v3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_7

    .line 12098
    .end local v0    # "e":Ljava/io/IOException;
    :cond_33
    :try_start_33
    new-instance v2, Lcom/android/server/wm/ViewServer;

    invoke-direct {v2, p0, p1}, Lcom/android/server/wm/ViewServer;-><init>(Lcom/android/server/wm/WindowManagerService;I)V

    iput-object v2, p0, mViewServer:Lcom/android/server/wm/ViewServer;

    .line 12099
    iget-object v2, p0, mViewServer:Lcom/android/server/wm/ViewServer;

    invoke-virtual {v2}, Lcom/android/server/wm/ViewServer;->start()Z
    :try_end_3f
    .catch Ljava/io/IOException; {:try_start_33 .. :try_end_3f} :catch_41

    move-result v1

    goto :goto_7

    .line 12100
    :catch_41
    move-exception v0

    .line 12101
    .restart local v0    # "e":Ljava/io/IOException;
    const-string v2, "WindowManager"

    const-string v3, "View server did not start"

    invoke-static {v2, v3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_7
.end method

.method public statusBarVisibilityChanged(I)V
    .registers 3
    .param p1, "visibility"    # I

    .prologue
    .line 19064
    const/4 v0, 0x0

    invoke-virtual {p0, p1, v0}, statusBarVisibilityChangedToDisplay(II)V

    .line 19065
    return-void
.end method

.method public statusBarVisibilityChangedToDisplay(II)V
    .registers 5
    .param p1, "visibility"    # I
    .param p2, "displayId"    # I

    .prologue
    .line 19070
    iget-object v0, p0, mContext:Landroid/content/Context;

    const-string v1, "android.permission.STATUS_BAR"

    invoke-virtual {v0, v1}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    move-result v0

    if-eqz v0, :cond_12

    .line 19072
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Caller does not hold permission android.permission.STATUS_BAR"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 19076
    :cond_12
    iget-object v1, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v1

    .line 19084
    :try_start_15
    iput p1, p0, mLastStatusBarVisibility:I

    .line 19085
    iget-object v0, p0, mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v0, p1}, Landroid/view/WindowManagerPolicy;->adjustSystemUiVisibilityLw(I)I

    move-result p1

    .line 19086
    invoke-virtual {p0, p1}, updateStatusBarVisibilityLocked(I)V

    .line 19090
    monitor-exit v1

    .line 19091
    return-void

    .line 19090
    :catchall_22
    move-exception v0

    monitor-exit v1
    :try_end_24
    .catchall {:try_start_15 .. :try_end_24} :catchall_22

    throw v0
.end method

.method public stopAppFreezingScreen(Landroid/os/IBinder;Z)V
    .registers 10
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "force"    # Z

    .prologue
    .line 8813
    const-string v3, "android.permission.MANAGE_APP_TOKENS"

    const-string/jumbo v4, "setAppFreezingScreen()"

    invoke-virtual {p0, v3, v4}, checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v3

    if-nez v3, :cond_13

    .line 8815
    new-instance v3, Ljava/lang/SecurityException;

    const-string v4, "Requires MANAGE_APP_TOKENS permission"

    invoke-direct {v3, v4}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v3

    .line 8818
    :cond_13
    iget-object v4, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v4

    .line 8819
    :try_start_16
    invoke-virtual {p0, p1}, findAppWindowToken(Landroid/os/IBinder;)Lcom/android/server/wm/AppWindowToken;

    move-result-object v2

    .line 8820
    .local v2, "wtoken":Lcom/android/server/wm/AppWindowToken;
    if-eqz v2, :cond_20

    iget-object v3, v2, Lcom/android/server/wm/AppWindowToken;->appToken:Landroid/view/IApplicationToken;

    if-nez v3, :cond_22

    .line 8821
    :cond_20
    monitor-exit v4

    .line 8829
    :goto_21
    return-void

    .line 8823
    :cond_22
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 8824
    .local v0, "origId":J
    sget-boolean v3, DEBUG_ORIENTATION:Z

    if-eqz v3, :cond_5c

    const-string v3, "WindowManager"

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string v6, "Clear freezing of "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v5

    const-string v6, ": hidden="

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    iget-boolean v6, v2, Lcom/android/server/wm/AppWindowToken;->hidden:Z

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v5

    const-string v6, " freezing="

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    iget-object v6, v2, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    iget-boolean v6, v6, Lcom/android/server/wm/AppWindowAnimator;->freezingScreen:Z

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v3, v5}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 8826
    :cond_5c
    const/4 v3, 0x1

    invoke-virtual {p0, v2, v3, p2}, unsetAppFreezingScreenLocked(Lcom/android/server/wm/AppWindowToken;ZZ)V

    .line 8827
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 8828
    monitor-exit v4

    goto :goto_21

    .end local v0    # "origId":J
    .end local v2    # "wtoken":Lcom/android/server/wm/AppWindowToken;
    :catchall_65
    move-exception v3

    monitor-exit v4
    :try_end_67
    .catchall {:try_start_16 .. :try_end_67} :catchall_65

    throw v3
.end method

.method public stopDisplayChanging(Landroid/os/IBinder;)V
    .registers 10
    .param p1, "token"    # Landroid/os/IBinder;

    .prologue
    .line 23419
    iget-object v5, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v5

    .line 23420
    :try_start_3
    invoke-virtual {p0, p1}, findAppWindowToken(Landroid/os/IBinder;)Lcom/android/server/wm/AppWindowToken;

    move-result-object v3

    .line 23421
    .local v3, "wtoken":Lcom/android/server/wm/AppWindowToken;
    if-nez v3, :cond_23

    .line 23422
    const-string v4, "WindowManager"

    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "Attempted to dispaly changing screen with non-existing app token: "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-static {v4, v6}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 23423
    monitor-exit v5

    .line 23432
    :goto_22
    return-void

    .line 23426
    :cond_23
    iget-object v4, v3, Lcom/android/server/wm/AppWindowToken;->allAppWindows:Lcom/android/server/wm/WindowList;

    invoke-virtual {v4}, Lcom/android/server/wm/WindowList;->size()I

    move-result v0

    .line 23427
    .local v0, "N":I
    const/4 v1, 0x0

    .local v1, "i":I
    :goto_2a
    if-ge v1, v0, :cond_3a

    .line 23428
    iget-object v4, v3, Lcom/android/server/wm/AppWindowToken;->allAppWindows:Lcom/android/server/wm/WindowList;

    invoke-virtual {v4, v1}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/wm/WindowState;

    .line 23429
    .local v2, "w":Lcom/android/server/wm/WindowState;
    const/4 v4, 0x0

    iput-boolean v4, v2, Lcom/android/server/wm/WindowState;->mDisplayChanging:Z

    .line 23427
    add-int/lit8 v1, v1, 0x1

    goto :goto_2a

    .line 23431
    .end local v2    # "w":Lcom/android/server/wm/WindowState;
    :cond_3a
    monitor-exit v5

    goto :goto_22

    .end local v0    # "N":I
    .end local v1    # "i":I
    .end local v3    # "wtoken":Lcom/android/server/wm/AppWindowToken;
    :catchall_3c
    move-exception v4

    monitor-exit v5
    :try_end_3e
    .catchall {:try_start_3 .. :try_end_3e} :catchall_3c

    throw v4
.end method

.method public stopFreezingForDualScreenTransition(Z)V
    .registers 10
    .param p1, "inTransaction"    # Z

    .prologue
    .line 23102
    sget-boolean v3, DEBUG_DUALSCREEN:Z

    if-eqz v3, :cond_21

    .line 23103
    const-string v3, "WindowManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "[DualScreenTransition] stopFreezingForDualScreenTransition() !! callers="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    const/4 v5, 0x3

    invoke-static {v5}, Landroid/os/Debug;->getCallers(I)Ljava/lang/String;

    move-result-object v5

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v3, v4}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 23106
    :cond_21
    iget-object v3, p0, mAnimator:Lcom/android/server/wm/WindowAnimator;

    invoke-virtual {v3}, Lcom/android/server/wm/WindowAnimator;->getDualScreenTransitionLocked()Lcom/android/server/wm/DualScreenTransition;

    move-result-object v1

    .line 23107
    .local v1, "dualScreenTransition":Lcom/android/server/wm/DualScreenTransition;
    if-nez v1, :cond_2a

    .line 23140
    :goto_29
    return-void

    .line 23110
    :cond_2a
    iget-object v4, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v4

    .line 23111
    const/4 v2, 0x0

    .line 23112
    .local v2, "updateRotation":Z
    :try_start_2e
    invoke-virtual {v1}, Lcom/android/server/wm/DualScreenTransition;->hasScreenshot()Z

    move-result v3

    if-eqz v3, :cond_7d

    .line 23113
    iget-object v3, p0, mH:Lcom/android/server/wm/WindowManagerService$H;

    const/16 v5, 0xc9

    invoke-virtual {v3, v5}, Lcom/android/server/wm/WindowManagerService$H;->removeMessages(I)V

    .line 23114
    iget-object v3, p0, mFxSession:Landroid/view/SurfaceSession;

    const-wide/16 v6, 0x2710

    invoke-virtual {p0}, getTransitionAnimationScaleLocked()F

    move-result v5

    invoke-virtual {v1, v3, v6, v7, v5}, Lcom/android/server/wm/DualScreenTransition;->dismiss(Landroid/view/SurfaceSession;JF)Z

    move-result v3

    if-eqz v3, :cond_72

    .line 23116
    invoke-virtual {p0}, scheduleAnimationLocked()V

    .line 23128
    :goto_4c
    const/4 v0, 0x0

    .line 23129
    .local v0, "configChanged":Z
    if-eqz v2, :cond_64

    .line 23130
    sget-boolean v3, DEBUG_ORIENTATION:Z

    if-nez v3, :cond_57

    sget-boolean v3, Lcom/android/server/wm/DualScreenTransition;->DEBUG:Z

    if-eqz v3, :cond_5e

    .line 23132
    :cond_57
    const-string v3, "WindowManager"

    const-string v5, "Performing post-dualscreen-transition rotation"

    invoke-static {v3, v5}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 23134
    :cond_5e
    const/4 v3, 0x0

    invoke-virtual {p0, v3}, updateRotationUncheckedLocked(Z)Z

    move-result v3

    or-int/2addr v0, v3

    .line 23136
    :cond_64
    if-eqz v0, :cond_6d

    .line 23137
    iget-object v3, p0, mH:Lcom/android/server/wm/WindowManagerService$H;

    const/16 v5, 0x12

    invoke-virtual {v3, v5}, Lcom/android/server/wm/WindowManagerService$H;->sendEmptyMessage(I)Z

    .line 23139
    :cond_6d
    monitor-exit v4

    goto :goto_29

    .end local v0    # "configChanged":Z
    :catchall_6f
    move-exception v3

    monitor-exit v4
    :try_end_71
    .catchall {:try_start_2e .. :try_end_71} :catchall_6f

    throw v3

    .line 23118
    :cond_72
    :try_start_72
    invoke-virtual {v1, p1}, Lcom/android/server/wm/DualScreenTransition;->kill(Z)V

    .line 23119
    iget-object v3, p0, mAnimator:Lcom/android/server/wm/WindowAnimator;

    const/4 v5, 0x0

    invoke-virtual {v3, v5}, Lcom/android/server/wm/WindowAnimator;->setDualScreenTransitionLocked(Lcom/android/server/wm/DualScreenTransition;)V

    .line 23120
    const/4 v2, 0x1

    goto :goto_4c

    .line 23123
    :cond_7d
    invoke-virtual {v1, p1}, Lcom/android/server/wm/DualScreenTransition;->kill(Z)V

    .line 23124
    iget-object v3, p0, mAnimator:Lcom/android/server/wm/WindowAnimator;

    const/4 v5, 0x0

    invoke-virtual {v3, v5}, Lcom/android/server/wm/WindowAnimator;->setDualScreenTransitionLocked(Lcom/android/server/wm/DualScreenTransition;)V
    :try_end_86
    .catchall {:try_start_72 .. :try_end_86} :catchall_6f

    .line 23125
    const/4 v2, 0x1

    goto :goto_4c
.end method

.method public stopFreezingScreen()V
    .registers 5

    .prologue
    .line 9761
    const-string v2, "android.permission.FREEZE_SCREEN"

    const-string/jumbo v3, "stopFreezingScreen()"

    invoke-virtual {p0, v2, v3}, checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v2

    if-nez v2, :cond_13

    .line 9763
    new-instance v2, Ljava/lang/SecurityException;

    const-string v3, "Requires FREEZE_SCREEN permission"

    invoke-direct {v2, v3}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v2

    .line 9766
    :cond_13
    iget-object v3, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v3

    .line 9767
    :try_start_16
    iget-boolean v2, p0, mClientFreezingScreen:Z

    if-eqz v2, :cond_2b

    .line 9768
    const/4 v2, 0x0

    iput-boolean v2, p0, mClientFreezingScreen:Z

    .line 9769
    const-string v2, "client"

    iput-object v2, p0, mLastFinishedFreezeSource:Ljava/lang/Object;

    .line 9770
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J
    :try_end_24
    .catchall {:try_start_16 .. :try_end_24} :catchall_32

    move-result-wide v0

    .line 9772
    .local v0, "origId":J
    :try_start_25
    invoke-direct {p0}, stopFreezingDisplayLocked()V
    :try_end_28
    .catchall {:try_start_25 .. :try_end_28} :catchall_2d

    .line 9774
    :try_start_28
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 9777
    .end local v0    # "origId":J
    :cond_2b
    monitor-exit v3

    .line 9778
    return-void

    .line 9774
    .restart local v0    # "origId":J
    :catchall_2d
    move-exception v2

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v2

    .line 9777
    .end local v0    # "origId":J
    :catchall_32
    move-exception v2

    monitor-exit v3
    :try_end_34
    .catchall {:try_start_28 .. :try_end_34} :catchall_32

    throw v2
.end method

.method public stopViewServer()Z
    .registers 4

    .prologue
    const/4 v0, 0x0

    .line 12121
    invoke-direct {p0}, isSystemSecure()Z

    move-result v1

    if-eqz v1, :cond_8

    .line 12132
    :cond_7
    :goto_7
    return v0

    .line 12125
    :cond_8
    const-string v1, "android.permission.DUMP"

    const-string/jumbo v2, "stopViewServer"

    invoke-virtual {p0, v1, v2}, checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v1

    if-eqz v1, :cond_7

    .line 12129
    iget-object v1, p0, mViewServer:Lcom/android/server/wm/ViewServer;

    if-eqz v1, :cond_7

    .line 12130
    iget-object v0, p0, mViewServer:Lcom/android/server/wm/ViewServer;

    invoke-virtual {v0}, Lcom/android/server/wm/ViewServer;->stop()Z

    move-result v0

    goto :goto_7
.end method

.method public switchKeyboardLayout(II)V
    .registers 4
    .param p1, "deviceId"    # I
    .param p2, "direction"    # I

    .prologue
    .line 10199
    iget-object v0, p0, mInputManager:Lcom/android/server/input/InputManagerService;

    invoke-virtual {v0, p1, p2}, Lcom/android/server/input/InputManagerService;->switchKeyboardLayout(II)V

    .line 10200
    return-void
.end method

.method public systemReady()V
    .registers 2

    .prologue
    .line 13193
    iget-object v0, p0, mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v0}, Landroid/view/WindowManagerPolicy;->systemReady()V

    .line 13194
    return-void
.end method

.method public thawRotation()V
    .registers 7

    .prologue
    const/4 v5, 0x0

    .line 11239
    const-string v2, "android.permission.SET_ORIENTATION"

    const-string/jumbo v3, "thawRotation()"

    invoke-virtual {p0, v2, v3}, checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v2

    if-nez v2, :cond_14

    .line 11241
    new-instance v2, Ljava/lang/SecurityException;

    const-string v3, "Requires SET_ORIENTATION permission"

    invoke-direct {v2, v3}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v2

    .line 11252
    :cond_14
    sget-boolean v2, DEBUG_ORIENTATION:Z

    if-nez v2, :cond_1c

    sget-boolean v2, SAFE_DEBUG:Z

    if-eqz v2, :cond_44

    :cond_1c
    const-string v2, "WindowManager"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "Process "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v4

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v3

    const-string v4, " request thawRotation: mRotation="

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    iget v4, p0, mRotation:I

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3}, Landroid/util/Log;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 11255
    :cond_44
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 11257
    .local v0, "origId":J
    :try_start_48
    iget-object v2, p0, mPolicy:Landroid/view/WindowManagerPolicy;

    const/4 v3, 0x0

    const/16 v4, 0x309

    invoke-interface {v2, v3, v4}, Landroid/view/WindowManagerPolicy;->setUserRotationMode(II)V
    :try_end_50
    .catchall {:try_start_48 .. :try_end_50} :catchall_57

    .line 11260
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 11263
    invoke-virtual {p0, v5, v5}, updateRotationUnchecked(ZZ)V

    .line 11264
    return-void

    .line 11260
    :catchall_57
    move-exception v2

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v2
.end method

.method public unregisterEasyOneHandWatcher(Landroid/sec/easyonehand/IEasyOneHandWatcher;)V
    .registers 5
    .param p1, "watcher"    # Landroid/sec/easyonehand/IEasyOneHandWatcher;

    .prologue
    .line 22243
    invoke-interface {p1}, Landroid/sec/easyonehand/IEasyOneHandWatcher;->asBinder()Landroid/os/IBinder;

    move-result-object v0

    .line 22244
    .local v0, "watcherBinder":Landroid/os/IBinder;
    iget-object v1, p0, mEasyOneHandDR:Lcom/android/server/wm/WindowManagerService$EasyOneHandDeathRecipient;

    if-eqz v1, :cond_1d

    iget-object v1, p0, mEasyOneHandWatcher:Landroid/sec/easyonehand/IEasyOneHandWatcher;

    if-eqz v1, :cond_1d

    iget-object v1, p0, mEasyOneHandWatcher:Landroid/sec/easyonehand/IEasyOneHandWatcher;

    invoke-interface {v1}, Landroid/sec/easyonehand/IEasyOneHandWatcher;->asBinder()Landroid/os/IBinder;

    move-result-object v1

    if-ne v1, v0, :cond_1d

    .line 22248
    :try_start_14
    iget-object v1, p0, mEasyOneHandDR:Lcom/android/server/wm/WindowManagerService$EasyOneHandDeathRecipient;

    const/4 v2, 0x0

    invoke-interface {v0, v1, v2}, Landroid/os/IBinder;->unlinkToDeath(Landroid/os/IBinder$DeathRecipient;I)Z

    .line 22249
    const/4 v1, 0x0

    iput-object v1, p0, mEasyOneHandWatcher:Landroid/sec/easyonehand/IEasyOneHandWatcher;
    :try_end_1d
    .catch Ljava/lang/IllegalArgumentException; {:try_start_14 .. :try_end_1d} :catch_1e

    .line 22256
    :cond_1d
    :goto_1d
    return-void

    .line 22250
    :catch_1e
    move-exception v1

    goto :goto_1d
.end method

.method public unregisterPointerEventListener(Landroid/view/WindowManagerPolicy$PointerEventListener;)V
    .registers 3
    .param p1, "listener"    # Landroid/view/WindowManagerPolicy$PointerEventListener;

    .prologue
    .line 10128
    iget-object v0, p0, mPointerEventDispatcher:Lcom/android/server/wm/PointerEventDispatcher;

    invoke-virtual {v0, p1}, Lcom/android/server/wm/PointerEventDispatcher;->unregisterInputEventListener(Landroid/view/WindowManagerPolicy$PointerEventListener;)V

    .line 10129
    return-void
.end method

.method unsetAppFreezingScreenLocked(Lcom/android/server/wm/AppWindowToken;ZZ)V
    .registers 14
    .param p1, "wtoken"    # Lcom/android/server/wm/AppWindowToken;
    .param p2, "unfreezeSurfaceNow"    # Z
    .param p3, "force"    # Z

    .prologue
    const/4 v9, 0x1

    const/4 v8, 0x0

    .line 8662
    iget-boolean v5, p1, Lcom/android/server/wm/AppWindowToken;->hiddenRequested:Z

    if-nez v5, :cond_8

    if-eqz p3, :cond_1f

    .line 8663
    :cond_8
    iget-object v5, p1, Lcom/android/server/wm/AppWindowToken;->allAppWindows:Lcom/android/server/wm/WindowList;

    invoke-virtual {v5}, Lcom/android/server/wm/WindowList;->size()I

    move-result v0

    .line 8664
    .local v0, "N":I
    const/4 v2, 0x0

    .local v2, "i":I
    :goto_f
    if-ge v2, v0, :cond_1f

    .line 8665
    iget-object v5, p1, Lcom/android/server/wm/AppWindowToken;->allAppWindows:Lcom/android/server/wm/WindowList;

    invoke-virtual {v5, v2}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/server/wm/WindowState;

    .line 8666
    .local v4, "w":Lcom/android/server/wm/WindowState;
    invoke-virtual {v4}, Lcom/android/server/wm/WindowState;->stopWaitingForOrientation()V

    .line 8664
    add-int/lit8 v2, v2, 0x1

    goto :goto_f

    .line 8671
    .end local v0    # "N":I
    .end local v2    # "i":I
    .end local v4    # "w":Lcom/android/server/wm/WindowState;
    :cond_1f
    iget-object v5, p1, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    iget-boolean v5, v5, Lcom/android/server/wm/AppWindowAnimator;->freezingScreen:Z

    if-eqz v5, :cond_c4

    .line 8673
    sget-boolean v5, DUALSCREEN_DEBUG_INPUT_METHOD:Z

    if-eqz v5, :cond_42

    .line 8674
    iget-object v5, p0, mDualScreenInputMethodManager:Lcom/android/server/wm/DualScreenInputMethodManager;

    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v7, "stop app freeze appToken="

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-virtual {v5, v6}, Lcom/android/server/wm/DualScreenInputMethodManager;->printDebugInfo(Ljava/lang/String;)V

    .line 8677
    :cond_42
    sget-boolean v5, DEBUG_ORIENTATION:Z

    if-eqz v5, :cond_68

    const-string v5, "WindowManager"

    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "Clear freezing of "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v6

    const-string v7, " force="

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6, p3}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-static {v5, v6}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 8679
    :cond_68
    iget-object v5, p1, Lcom/android/server/wm/AppWindowToken;->allAppWindows:Lcom/android/server/wm/WindowList;

    invoke-virtual {v5}, Lcom/android/server/wm/WindowList;->size()I

    move-result v0

    .line 8680
    .restart local v0    # "N":I
    const/4 v3, 0x0

    .line 8681
    .local v3, "unfrozeWindows":Z
    const/4 v2, 0x0

    .restart local v2    # "i":I
    :goto_70
    if-ge v2, v0, :cond_82

    .line 8682
    iget-object v5, p1, Lcom/android/server/wm/AppWindowToken;->allAppWindows:Lcom/android/server/wm/WindowList;

    invoke-virtual {v5, v2}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/server/wm/WindowState;

    .line 8685
    .restart local v4    # "w":Lcom/android/server/wm/WindowState;
    if-nez p3, :cond_c5

    if-ne v0, v9, :cond_c5

    iget-object v5, p1, Lcom/android/server/wm/AppWindowToken;->startingWindow:Lcom/android/server/wm/WindowState;

    if-ne v4, v5, :cond_c5

    .line 8706
    .end local v4    # "w":Lcom/android/server/wm/WindowState;
    :cond_82
    if-nez p3, :cond_86

    if-eqz v3, :cond_ba

    .line 8707
    :cond_86
    sget-boolean v5, DEBUG_ORIENTATION:Z

    if-eqz v5, :cond_a2

    const-string v5, "WindowManager"

    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "No longer freezing: "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-static {v5, v6}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 8713
    :cond_a2
    iget-object v5, p1, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    iput-boolean v8, v5, Lcom/android/server/wm/AppWindowAnimator;->freezingScreen:Z

    .line 8714
    iget-object v5, p1, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J

    move-result-wide v6

    iget-wide v8, p0, mDisplayFreezeTime:J

    sub-long/2addr v6, v8

    long-to-int v6, v6

    iput v6, v5, Lcom/android/server/wm/AppWindowAnimator;->lastFreezeDuration:I

    .line 8716
    iget v5, p0, mAppsFreezingScreen:I

    add-int/lit8 v5, v5, -0x1

    iput v5, p0, mAppsFreezingScreen:I

    .line 8717
    iput-object p1, p0, mLastFinishedFreezeSource:Ljava/lang/Object;

    .line 8719
    :cond_ba
    if-eqz p2, :cond_c4

    .line 8720
    if-eqz v3, :cond_c1

    .line 8721
    invoke-direct {p0}, performLayoutAndPlaceSurfacesLocked()V

    .line 8723
    :cond_c1
    invoke-direct {p0}, stopFreezingDisplayLocked()V

    .line 8726
    .end local v0    # "N":I
    .end local v2    # "i":I
    .end local v3    # "unfrozeWindows":Z
    :cond_c4
    return-void

    .line 8690
    .restart local v0    # "N":I
    .restart local v2    # "i":I
    .restart local v3    # "unfrozeWindows":Z
    .restart local v4    # "w":Lcom/android/server/wm/WindowState;
    :cond_c5
    iget-boolean v5, v4, Lcom/android/server/wm/WindowState;->mAppFreezing:Z

    if-eqz v5, :cond_106

    .line 8691
    iput-boolean v8, v4, Lcom/android/server/wm/WindowState;->mAppFreezing:Z

    .line 8692
    iget-boolean v5, v4, Lcom/android/server/wm/WindowState;->mHasSurface:Z

    if-eqz v5, :cond_fb

    iget-boolean v5, v4, Lcom/android/server/wm/WindowState;->mOrientationChanging:Z

    if-nez v5, :cond_fb

    iget v5, p0, mWindowsFreezingScreen:I

    const/4 v6, 0x2

    if-eq v5, v6, :cond_fb

    .line 8694
    sget-boolean v5, DEBUG_ORIENTATION:Z

    if-eqz v5, :cond_f5

    const-string v5, "WindowManager"

    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v7, "set mOrientationChanging of "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-static {v5, v6}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 8695
    :cond_f5
    iput-boolean v9, v4, Lcom/android/server/wm/WindowState;->mOrientationChanging:Z

    .line 8696
    iget-object v5, p0, mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    iput-boolean v8, v5, Lcom/android/server/wm/WindowManagerService$LayoutFields;->mOrientationChangeComplete:Z

    .line 8698
    :cond_fb
    iput v8, v4, Lcom/android/server/wm/WindowState;->mLastFreezeDuration:I

    .line 8699
    const/4 v3, 0x1

    .line 8700
    invoke-virtual {v4}, Lcom/android/server/wm/WindowState;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    move-result-object v1

    .line 8701
    .local v1, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-eqz v1, :cond_106

    .line 8702
    iput-boolean v9, v1, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    .line 8681
    .end local v1    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :cond_106
    add-int/lit8 v2, v2, 0x1

    goto/16 :goto_70
.end method

.method public updateAdaptiveEvent(Ljava/lang/String;Landroid/widget/RemoteViews;Landroid/widget/RemoteViews;)V
    .registers 5
    .param p1, "requestClass"    # Ljava/lang/String;
    .param p2, "smallView"    # Landroid/widget/RemoteViews;
    .param p3, "bigView"    # Landroid/widget/RemoteViews;

    .prologue
    .line 9951
    iget-object v0, p0, mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v0, p1, p2, p3}, Landroid/view/WindowManagerPolicy;->updateAdaptiveEvent(Ljava/lang/String;Landroid/widget/RemoteViews;Landroid/widget/RemoteViews;)V

    .line 9952
    return-void
.end method

.method public updateAppOpsState()V
    .registers 13

    .prologue
    .line 4959
    iget-object v8, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v8

    .line 4960
    :try_start_3
    iget-object v7, p0, mDisplayContents:Landroid/util/SparseArray;

    invoke-virtual {v7}, Landroid/util/SparseArray;->size()I

    move-result v2

    .line 4961
    .local v2, "numDisplays":I
    const/4 v0, 0x0

    .local v0, "displayNdx":I
    :goto_a
    if-ge v0, v2, :cond_4b

    .line 4962
    iget-object v7, p0, mDisplayContents:Landroid/util/SparseArray;

    invoke-virtual {v7, v0}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v7

    check-cast v7, Lcom/android/server/wm/DisplayContent;

    invoke-virtual {v7}, Lcom/android/server/wm/DisplayContent;->getWindowList()Lcom/android/server/wm/WindowList;

    move-result-object v6

    .line 4963
    .local v6, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual {v6}, Lcom/android/server/wm/WindowList;->size()I

    move-result v3

    .line 4964
    .local v3, "numWindows":I
    const/4 v5, 0x0

    .local v5, "winNdx":I
    :goto_1d
    if-ge v5, v3, :cond_48

    .line 4965
    invoke-virtual {v6, v5}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/server/wm/WindowState;

    .line 4966
    .local v4, "win":Lcom/android/server/wm/WindowState;
    iget v7, v4, Lcom/android/server/wm/WindowState;->mAppOp:I

    const/4 v9, -0x1

    if-eq v7, v9, :cond_43

    .line 4967
    iget-object v7, p0, mAppOps:Landroid/app/AppOpsManager;

    iget v9, v4, Lcom/android/server/wm/WindowState;->mAppOp:I

    invoke-virtual {v4}, Lcom/android/server/wm/WindowState;->getOwningUid()I

    move-result v10

    invoke-virtual {v4}, Lcom/android/server/wm/WindowState;->getOwningPackage()Ljava/lang/String;

    move-result-object v11

    invoke-virtual {v7, v9, v10, v11}, Landroid/app/AppOpsManager;->checkOpNoThrow(IILjava/lang/String;)I

    move-result v1

    .line 4969
    .local v1, "mode":I
    if-eqz v1, :cond_3f

    const/4 v7, 0x3

    if-ne v1, v7, :cond_46

    :cond_3f
    const/4 v7, 0x1

    :goto_40
    invoke-virtual {v4, v7}, Lcom/android/server/wm/WindowState;->setAppOpVisibilityLw(Z)V

    .line 4964
    .end local v1    # "mode":I
    :cond_43
    add-int/lit8 v5, v5, 0x1

    goto :goto_1d

    .line 4969
    .restart local v1    # "mode":I
    :cond_46
    const/4 v7, 0x0

    goto :goto_40

    .line 4961
    .end local v1    # "mode":I
    .end local v4    # "win":Lcom/android/server/wm/WindowState;
    :cond_48
    add-int/lit8 v0, v0, 0x1

    goto :goto_a

    .line 4974
    .end local v3    # "numWindows":I
    .end local v5    # "winNdx":I
    .end local v6    # "windows":Lcom/android/server/wm/WindowList;
    :cond_4b
    monitor-exit v8

    .line 4975
    return-void

    .line 4974
    .end local v0    # "displayNdx":I
    .end local v2    # "numDisplays":I
    :catchall_4d
    move-exception v7

    monitor-exit v8
    :try_end_4f
    .catchall {:try_start_3 .. :try_end_4f} :catchall_4d

    throw v7
.end method

.method public updateCircularDisplayMaskIfNeeded()V
    .registers 8

    .prologue
    const/4 v4, 0x1

    const/4 v3, 0x0

    .line 10584
    iget-object v5, p0, mContext:Landroid/content/Context;

    invoke-virtual {v5}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    move-result-object v5

    invoke-virtual {v5}, Landroid/content/res/Resources;->getConfiguration()Landroid/content/res/Configuration;

    move-result-object v5

    invoke-virtual {v5}, Landroid/content/res/Configuration;->isScreenRound()Z

    move-result v5

    if-eqz v5, :cond_44

    iget-object v5, p0, mContext:Landroid/content/Context;

    invoke-virtual {v5}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    move-result-object v5

    const v6, 0x112008a

    invoke-virtual {v5, v6}, Landroid/content/res/Resources;->getBoolean(I)Z

    move-result v5

    if-eqz v5, :cond_44

    .line 10588
    iget-object v5, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v5

    .line 10589
    :try_start_24
    iget v0, p0, mCurrentUserId:I

    .line 10590
    .local v0, "currentUserId":I
    monitor-exit v5
    :try_end_27
    .catchall {:try_start_24 .. :try_end_27} :catchall_45

    .line 10594
    iget-object v5, p0, mContext:Landroid/content/Context;

    invoke-virtual {v5}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v5

    const-string v6, "accessibility_display_inversion_enabled"

    invoke-static {v5, v6, v3, v0}, Landroid/provider/Settings$Secure;->getIntForUser(Landroid/content/ContentResolver;Ljava/lang/String;II)I

    move-result v1

    .line 10596
    .local v1, "inversionState":I
    if-ne v1, v4, :cond_48

    .line 10597
    .local v3, "showMask":I
    :goto_35
    iget-object v4, p0, mH:Lcom/android/server/wm/WindowManagerService$H;

    const/16 v5, 0x23

    invoke-virtual {v4, v5}, Lcom/android/server/wm/WindowManagerService$H;->obtainMessage(I)Landroid/os/Message;

    move-result-object v2

    .line 10598
    .local v2, "m":Landroid/os/Message;
    iput v3, v2, Landroid/os/Message;->arg1:I

    .line 10599
    iget-object v4, p0, mH:Lcom/android/server/wm/WindowManagerService$H;

    invoke-virtual {v4, v2}, Lcom/android/server/wm/WindowManagerService$H;->sendMessage(Landroid/os/Message;)Z

    .line 10601
    .end local v0    # "currentUserId":I
    .end local v1    # "inversionState":I
    .end local v2    # "m":Landroid/os/Message;
    .end local v3    # "showMask":I
    :cond_44
    return-void

    .line 10590
    :catchall_45
    move-exception v4

    :try_start_46
    monitor-exit v5
    :try_end_47
    .catchall {:try_start_46 .. :try_end_47} :catchall_45

    throw v4

    .restart local v0    # "currentUserId":I
    .restart local v1    # "inversionState":I
    :cond_48
    move v3, v4

    .line 10596
    goto :goto_35
.end method

.method public updateCoverSwitchState(Lcom/samsung/android/cover/CoverState;)V
    .registers 5
    .param p1, "coverState"    # Lcom/samsung/android/cover/CoverState;

    .prologue
    const/16 v2, 0x69

    .line 20774
    iget-object v1, p0, mH:Lcom/android/server/wm/WindowManagerService$H;

    invoke-virtual {v1, v2}, Lcom/android/server/wm/WindowManagerService$H;->removeMessages(I)V

    .line 20775
    invoke-static {}, Landroid/os/Message;->obtain()Landroid/os/Message;

    move-result-object v0

    .line 20776
    .local v0, "msg":Landroid/os/Message;
    iput v2, v0, Landroid/os/Message;->what:I

    .line 20777
    iput-object p1, v0, Landroid/os/Message;->obj:Ljava/lang/Object;

    .line 20778
    iget-object v1, p0, mH:Lcom/android/server/wm/WindowManagerService$H;

    invoke-virtual {v1, v0}, Lcom/android/server/wm/WindowManagerService$H;->sendMessage(Landroid/os/Message;)Z

    .line 20780
    return-void
.end method

.method public updateCurrentUserPolicy(I)V
    .registers 7
    .param p1, "newUserId"    # I

    .prologue
    .line 10233
    iget-object v4, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v4

    .line 10234
    :try_start_3
    iget-object v3, p0, mDisplayContents:Landroid/util/SparseArray;

    invoke-virtual {v3}, Landroid/util/SparseArray;->size()I

    move-result v2

    .line 10235
    .local v2, "numDisplays":I
    const/4 v1, 0x0

    .local v1, "displayNdx":I
    :goto_a
    if-ge v1, v2, :cond_1a

    .line 10236
    iget-object v3, p0, mDisplayContents:Landroid/util/SparseArray;

    invoke-virtual {v3, v1}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/wm/DisplayContent;

    .line 10237
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    invoke-virtual {v0, p1}, Lcom/android/server/wm/DisplayContent;->updateCurrentUserPolicy(I)V

    .line 10235
    add-int/lit8 v1, v1, 0x1

    goto :goto_a

    .line 10239
    .end local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :cond_1a
    monitor-exit v4

    .line 10240
    return-void

    .line 10239
    .end local v1    # "displayNdx":I
    .end local v2    # "numDisplays":I
    :catchall_1c
    move-exception v3

    monitor-exit v4
    :try_end_1e
    .catchall {:try_start_3 .. :try_end_1e} :catchall_1c

    throw v3
.end method

.method public updateDisplay()V
    .registers 9

    .prologue
    .line 14391
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v2

    .line 14393
    .local v2, "origId":J
    iget-object v4, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v4

    .line 14394
    const/4 v1, 0x0

    const/4 v5, 0x1

    const/4 v6, 0x1

    const/4 v7, -0x1

    :try_start_b
    invoke-virtual {p0, v1, v5, v6, v7}, updateRotationUncheckedLocked(ZZZI)Z

    move-result v0

    .line 14395
    .local v0, "changed":Z
    if-nez v0, :cond_1b

    .line 14396
    invoke-virtual {p0}, getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v1

    const/4 v5, 0x1

    iput-boolean v5, v1, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    .line 14397
    invoke-direct {p0}, performLayoutAndPlaceSurfacesLocked()V

    .line 14399
    :cond_1b
    monitor-exit v4
    :try_end_1c
    .catchall {:try_start_b .. :try_end_1c} :catchall_25

    .line 14401
    if-eqz v0, :cond_21

    .line 14402
    invoke-virtual {p0}, sendNewConfiguration()V

    .line 14405
    :cond_21
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 14406
    return-void

    .line 14399
    .end local v0    # "changed":Z
    :catchall_25
    move-exception v1

    :try_start_26
    monitor-exit v4
    :try_end_27
    .catchall {:try_start_26 .. :try_end_27} :catchall_25

    throw v1
.end method

.method updateDisplayAndOrientationLocked()Landroid/view/DisplayInfo;
    .registers 2

    .prologue
    .line 12585
    const/4 v0, 0x0

    invoke-virtual {p0, v0}, updateDisplayAndOrientationLocked(I)Landroid/view/DisplayInfo;

    move-result-object v0

    return-object v0
.end method

.method updateDisplayAndOrientationLocked(I)Landroid/view/DisplayInfo;
    .registers 23
    .param p1, "displayId"    # I

    .prologue
    .line 12594
    invoke-virtual/range {p0 .. p1}, getDisplayContentLocked(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v8

    .line 12604
    .local v8, "displayContent":Lcom/android/server/wm/DisplayContent;
    move-object/from16 v0, p0

    iget v11, v0, mRotation:I

    .line 12608
    .local v11, "mRotation":I
    const/16 v17, 0x1

    move/from16 v0, v17

    if-eq v11, v0, :cond_14

    const/16 v17, 0x3

    move/from16 v0, v17

    if-ne v11, v0, :cond_f1

    :cond_14
    const/16 v16, 0x1

    .line 12610
    .local v16, "rotated":Z
    :goto_16
    if-eqz v16, :cond_f5

    iget v15, v8, Lcom/android/server/wm/DisplayContent;->mBaseDisplayHeight:I

    .line 12612
    .local v15, "realdw":I
    :goto_1a
    if-eqz v16, :cond_f9

    iget v14, v8, Lcom/android/server/wm/DisplayContent;->mBaseDisplayWidth:I

    .line 12614
    .local v14, "realdh":I
    :goto_1e
    move v10, v15

    .line 12615
    .local v10, "dw":I
    move v7, v14

    .line 12634
    .local v7, "dh":I
    move-object/from16 v0, p0

    iget-boolean v0, v0, mAltOrientation:Z

    move/from16 v17, v0

    if-eqz v17, :cond_38

    .line 12635
    if-le v15, v14, :cond_fd

    .line 12637
    int-to-float v0, v14

    move/from16 v17, v0

    const v18, 0x3fa66666    # 1.3f

    div-float v17, v17, v18

    move/from16 v0, v17

    float-to-int v13, v0

    .line 12638
    .local v13, "maxw":I
    if-ge v13, v15, :cond_38

    .line 12639
    move v10, v13

    .line 12652
    .end local v13    # "maxw":I
    :cond_38
    :goto_38
    move-object/from16 v0, p0

    iget-object v0, v0, mPolicy:Landroid/view/WindowManagerPolicy;

    move-object/from16 v17, v0

    move-object/from16 v0, v17

    invoke-interface {v0, v10, v7, v11}, Landroid/view/WindowManagerPolicy;->getNonDecorDisplayWidth(III)I

    move-result v6

    .line 12653
    .local v6, "appWidth":I
    move-object/from16 v0, p0

    iget-object v0, v0, mPolicy:Landroid/view/WindowManagerPolicy;

    move-object/from16 v17, v0

    move-object/from16 v0, v17

    invoke-interface {v0, v10, v7, v11}, Landroid/view/WindowManagerPolicy;->getNonDecorDisplayHeight(III)I

    move-result v5

    .line 12655
    .local v5, "appHeight":I
    move-object/from16 v0, p0

    iget-object v0, v0, mPolicy:Landroid/view/WindowManagerPolicy;

    move-object/from16 v17, v0

    move-object/from16 v0, v17

    invoke-interface {v0, v10, v7}, Landroid/view/WindowManagerPolicy;->getNonDecorAlphaScreenDisplayWidth(II)I

    move-result v4

    .line 12656
    .local v4, "alphaScreenAppWidth":I
    move-object/from16 v0, p0

    iget-object v0, v0, mPolicy:Landroid/view/WindowManagerPolicy;

    move-object/from16 v17, v0

    move-object/from16 v0, v17

    invoke-interface {v0, v10, v7}, Landroid/view/WindowManagerPolicy;->getNonDecorAlphaScreenDisplayHeight(II)I

    move-result v3

    .line 12658
    .local v3, "alphaScreenAppHeight":I
    invoke-virtual {v8}, Lcom/android/server/wm/DisplayContent;->getDisplayInfo()Landroid/view/DisplayInfo;

    move-result-object v9

    .line 12659
    .local v9, "displayInfo":Landroid/view/DisplayInfo;
    iget-object v0, v8, Lcom/android/server/wm/DisplayContent;->mDisplaySizeLock:Ljava/lang/Object;

    move-object/from16 v18, v0

    monitor-enter v18

    .line 12660
    :try_start_71
    iput v11, v9, Landroid/view/DisplayInfo;->rotation:I

    .line 12661
    iput v10, v9, Landroid/view/DisplayInfo;->logicalWidth:I

    .line 12662
    iput v7, v9, Landroid/view/DisplayInfo;->logicalHeight:I

    .line 12663
    iget v0, v8, Lcom/android/server/wm/DisplayContent;->mBaseDisplayDensity:I

    move/from16 v17, v0

    move/from16 v0, v17

    iput v0, v9, Landroid/view/DisplayInfo;->logicalDensityDpi:I

    .line 12664
    iput v6, v9, Landroid/view/DisplayInfo;->appWidth:I

    .line 12665
    iput v5, v9, Landroid/view/DisplayInfo;->appHeight:I

    .line 12667
    iput v4, v9, Landroid/view/DisplayInfo;->alphaScreenAppWidth:I

    .line 12668
    iput v3, v9, Landroid/view/DisplayInfo;->alphaScreenAppHeight:I

    .line 12670
    move-object/from16 v0, p0

    iget-object v0, v0, mRealDisplayMetrics:Landroid/util/DisplayMetrics;

    move-object/from16 v17, v0

    sget-object v19, Landroid/content/res/CompatibilityInfo;->DEFAULT_COMPATIBILITY_INFO:Landroid/content/res/CompatibilityInfo;

    const/16 v20, 0x0

    move-object/from16 v0, v17

    move-object/from16 v1, v19

    move-object/from16 v2, v20

    invoke-virtual {v9, v0, v1, v2}, Landroid/view/DisplayInfo;->getLogicalMetrics(Landroid/util/DisplayMetrics;Landroid/content/res/CompatibilityInfo;Landroid/content/res/Configuration;)V

    .line 12672
    move-object/from16 v0, p0

    iget-object v0, v0, mDisplayMetrics:Landroid/util/DisplayMetrics;

    move-object/from16 v17, v0

    move-object/from16 v0, v17

    invoke-virtual {v9, v0}, Landroid/view/DisplayInfo;->getAppMetrics(Landroid/util/DisplayMetrics;)V

    .line 12673
    iget-boolean v0, v8, Lcom/android/server/wm/DisplayContent;->mDisplayScalingDisabled:Z

    move/from16 v17, v0

    if-eqz v17, :cond_10d

    .line 12674
    iget v0, v9, Landroid/view/DisplayInfo;->flags:I

    move/from16 v17, v0

    const/high16 v19, 0x40000000    # 2.0f

    or-int v17, v17, v19

    move/from16 v0, v17

    iput v0, v9, Landroid/view/DisplayInfo;->flags:I

    .line 12679
    :goto_b7
    move-object/from16 v0, p0

    iget-object v0, v0, mDisplayManagerInternal:Landroid/hardware/display/DisplayManagerInternal;

    move-object/from16 v17, v0

    invoke-virtual {v8}, Lcom/android/server/wm/DisplayContent;->getDisplayId()I

    move-result v19

    move-object/from16 v0, v17

    move/from16 v1, v19

    invoke-virtual {v0, v1, v9}, Landroid/hardware/display/DisplayManagerInternal;->setDisplayInfoOverrideFromWindowManager(ILandroid/view/DisplayInfo;)V

    .line 12682
    iget-object v0, v8, Lcom/android/server/wm/DisplayContent;->mBaseDisplayRect:Landroid/graphics/Rect;

    move-object/from16 v17, v0

    const/16 v19, 0x0

    const/16 v20, 0x0

    move-object/from16 v0, v17

    move/from16 v1, v19

    move/from16 v2, v20

    invoke-virtual {v0, v1, v2, v10, v7}, Landroid/graphics/Rect;->set(IIII)V

    .line 12683
    monitor-exit v18
    :try_end_da
    .catchall {:try_start_71 .. :try_end_da} :catchall_11b

    .line 12688
    move-object/from16 v0, p0

    iget-object v0, v0, mDisplayMetrics:Landroid/util/DisplayMetrics;

    move-object/from16 v17, v0

    move-object/from16 v0, p0

    iget-object v0, v0, mCompatDisplayMetrics:Landroid/util/DisplayMetrics;

    move-object/from16 v18, v0

    invoke-static/range {v17 .. v18}, Landroid/content/res/CompatibilityInfo;->computeCompatibleScaling(Landroid/util/DisplayMetrics;Landroid/util/DisplayMetrics;)F

    move-result v17

    move/from16 v0, v17

    move-object/from16 v1, p0

    iput v0, v1, mCompatibleScreenScale:F

    .line 12690
    return-object v9

    .line 12608
    .end local v3    # "alphaScreenAppHeight":I
    .end local v4    # "alphaScreenAppWidth":I
    .end local v5    # "appHeight":I
    .end local v6    # "appWidth":I
    .end local v7    # "dh":I
    .end local v9    # "displayInfo":Landroid/view/DisplayInfo;
    .end local v10    # "dw":I
    .end local v14    # "realdh":I
    .end local v15    # "realdw":I
    .end local v16    # "rotated":Z
    :cond_f1
    const/16 v16, 0x0

    goto/16 :goto_16

    .line 12610
    .restart local v16    # "rotated":Z
    :cond_f5
    iget v15, v8, Lcom/android/server/wm/DisplayContent;->mBaseDisplayWidth:I

    goto/16 :goto_1a

    .line 12612
    .restart local v15    # "realdw":I
    :cond_f9
    iget v14, v8, Lcom/android/server/wm/DisplayContent;->mBaseDisplayHeight:I

    goto/16 :goto_1e

    .line 12643
    .restart local v7    # "dh":I
    .restart local v10    # "dw":I
    .restart local v14    # "realdh":I
    :cond_fd
    int-to-float v0, v15

    move/from16 v17, v0

    const v18, 0x3fa66666    # 1.3f

    div-float v17, v17, v18

    move/from16 v0, v17

    float-to-int v12, v0

    .line 12644
    .local v12, "maxh":I
    if-ge v12, v14, :cond_38

    .line 12645
    move v7, v12

    goto/16 :goto_38

    .line 12676
    .end local v12    # "maxh":I
    .restart local v3    # "alphaScreenAppHeight":I
    .restart local v4    # "alphaScreenAppWidth":I
    .restart local v5    # "appHeight":I
    .restart local v6    # "appWidth":I
    .restart local v9    # "displayInfo":Landroid/view/DisplayInfo;
    :cond_10d
    :try_start_10d
    iget v0, v9, Landroid/view/DisplayInfo;->flags:I

    move/from16 v17, v0

    const v19, -0x40000001    # -1.9999999f

    and-int v17, v17, v19

    move/from16 v0, v17

    iput v0, v9, Landroid/view/DisplayInfo;->flags:I

    goto :goto_b7

    .line 12683
    :catchall_11b
    move-exception v17

    monitor-exit v18
    :try_end_11d
    .catchall {:try_start_10d .. :try_end_11d} :catchall_11b

    throw v17
.end method

.method public updateMinimizeSize(ILandroid/os/IBinder;[I)V
    .registers 7
    .param p1, "stackId"    # I
    .param p2, "activityToken"    # Landroid/os/IBinder;
    .param p3, "size"    # [I

    .prologue
    .line 21499
    iget-object v2, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v2

    .line 21500
    :try_start_3
    iget-object v1, p0, mStackIdToStack:Landroid/util/SparseArray;

    invoke-virtual {v1, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/wm/TaskStack;

    .line 21501
    .local v0, "taskStack":Lcom/android/server/wm/TaskStack;
    if-eqz v0, :cond_10

    .line 21502
    invoke-virtual {v0, p2, p3}, Lcom/android/server/wm/TaskStack;->updateMinimizeSize(Landroid/os/IBinder;[I)V

    .line 21504
    :cond_10
    monitor-exit v2

    .line 21505
    return-void

    .line 21504
    .end local v0    # "taskStack":Lcom/android/server/wm/TaskStack;
    :catchall_12
    move-exception v1

    monitor-exit v2
    :try_end_14
    .catchall {:try_start_3 .. :try_end_14} :catchall_12

    throw v1
.end method

.method public updateOrientationFromAppTokens(Landroid/content/res/Configuration;Landroid/os/IBinder;)Landroid/content/res/Configuration;
    .registers 8
    .param p1, "currentConfig"    # Landroid/content/res/Configuration;
    .param p2, "freezeThisOneIfNeeded"    # Landroid/os/IBinder;

    .prologue
    .line 6973
    const-string v1, "android.permission.MANAGE_APP_TOKENS"

    const-string/jumbo v4, "updateOrientationFromAppTokens()"

    invoke-virtual {p0, v1, v4}, checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v1

    if-nez v1, :cond_13

    .line 6975
    new-instance v1, Ljava/lang/SecurityException;

    const-string v4, "Requires MANAGE_APP_TOKENS permission"

    invoke-direct {v1, v4}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 6978
    :cond_13
    const/4 v0, 0x0

    .line 6979
    .local v0, "config":Landroid/content/res/Configuration;
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v2

    .line 6981
    .local v2, "ident":J
    iget-object v4, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v4

    .line 6982
    :try_start_1b
    invoke-direct {p0, p1, p2}, updateOrientationFromAppTokensLocked(Landroid/content/res/Configuration;Landroid/os/IBinder;)Landroid/content/res/Configuration;

    move-result-object v0

    .line 6984
    monitor-exit v4
    :try_end_20
    .catchall {:try_start_1b .. :try_end_20} :catchall_24

    .line 6986
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 6987
    return-object v0

    .line 6984
    :catchall_24
    move-exception v1

    :try_start_25
    monitor-exit v4
    :try_end_26
    .catchall {:try_start_25 .. :try_end_26} :catchall_24

    throw v1
.end method

.method updateOrientationFromAppTokensLocked(Z)Z
    .registers 3
    .param p1, "inTransaction"    # Z

    .prologue
    .line 7078
    const/4 v0, 0x0

    invoke-virtual {p0, p1, v0}, updateOrientationFromAppTokensLocked(ZI)Z

    move-result v0

    return v0
.end method

.method updateOrientationFromAppTokensLocked(ZI)Z
    .registers 4
    .param p1, "inTransaction"    # Z
    .param p2, "displayId"    # I

    .prologue
    .line 7083
    invoke-virtual {p0, p1, p2}, updateOrientationFromAppTokensLockedInner(ZI)Z

    move-result v0

    return v0
.end method

.method updateOrientationFromAppTokensLockedInner(ZI)Z
    .registers 9
    .param p1, "inTransaction"    # Z
    .param p2, "displayId"    # I

    .prologue
    const/4 v4, 0x0

    .line 7102
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 7104
    .local v0, "ident":J
    const/4 v3, -0x1

    .line 7113
    .local v3, "req":I
    :try_start_6
    invoke-virtual {p0}, getOrientationLocked()I

    move-result v3

    .line 7114
    iget v2, p0, mForcedAppOrientation:I

    .line 7116
    .local v2, "mForcedAppOrientation":I
    if-eq v3, v2, :cond_28

    .line 7122
    iput v3, p0, mForcedAppOrientation:I

    .line 7126
    iget-object v5, p0, mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v5, v3}, Landroid/view/WindowManagerPolicy;->setCurrentOrientationLw(I)V

    .line 7127
    const/4 v5, 0x0

    invoke-virtual {p0, p1, v5, p2}, updateRotationUncheckedLocked(ZZI)Z

    move-result v5

    if-eqz v5, :cond_28

    .line 7131
    iget-boolean v4, p0, mRequestedDismissKeyguardOnNextActivity:Z

    if-eqz v4, :cond_23

    .line 7132
    const/4 v4, 0x0

    iput-boolean v4, p0, mRequestedDismissKeyguardOnNextActivity:Z
    :try_end_23
    .catchall {:try_start_6 .. :try_end_23} :catchall_2c

    .line 7135
    :cond_23
    const/4 v4, 0x1

    .line 7141
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    :goto_27
    return v4

    :cond_28
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    goto :goto_27

    .end local v2    # "mForcedAppOrientation":I
    :catchall_2c
    move-exception v4

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v4
.end method

.method public updateRotation(ZZ)V
    .registers 3
    .param p1, "alwaysSendConfiguration"    # Z
    .param p2, "forceRelayout"    # Z

    .prologue
    .line 11275
    invoke-virtual {p0, p1, p2}, updateRotationUnchecked(ZZ)V

    .line 11276
    return-void
.end method

.method public updateRotationUnchecked(ZZ)V
    .registers 9
    .param p1, "alwaysSendConfiguration"    # Z
    .param p2, "forceRelayout"    # Z

    .prologue
    .line 11307
    sget-boolean v1, DEBUG_ORIENTATION:Z

    if-eqz v1, :cond_23

    const-string v1, "WindowManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v5, "updateRotationUnchecked(alwaysSendConfiguration="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4, p1}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, ")"

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v1, v4}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 11310
    :cond_23
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v2

    .line 11312
    .local v2, "origId":J
    iget-object v4, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v4

    .line 11313
    const/4 v1, 0x0

    :try_start_2b
    invoke-virtual {p0, v1}, updateRotationUncheckedLocked(Z)Z

    move-result v0

    .line 11314
    .local v0, "changed":Z
    if-eqz v0, :cond_33

    if-eqz p2, :cond_3d

    .line 11315
    :cond_33
    invoke-virtual {p0}, getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v1

    const/4 v5, 0x1

    iput-boolean v5, v1, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    .line 11316
    invoke-direct {p0}, performLayoutAndPlaceSurfacesLocked()V

    .line 11318
    :cond_3d
    monitor-exit v4
    :try_end_3e
    .catchall {:try_start_2b .. :try_end_3e} :catchall_49

    .line 11320
    if-nez v0, :cond_42

    if-eqz p1, :cond_45

    .line 11321
    :cond_42
    invoke-virtual {p0}, sendNewConfiguration()V

    .line 11324
    :cond_45
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 11325
    return-void

    .line 11318
    .end local v0    # "changed":Z
    :catchall_49
    move-exception v1

    :try_start_4a
    monitor-exit v4
    :try_end_4b
    .catchall {:try_start_4a .. :try_end_4b} :catchall_49

    throw v1
.end method

.method public updateRotationUncheckedLocked(Z)Z
    .registers 3
    .param p1, "inTransaction"    # Z

    .prologue
    .line 11336
    const/4 v0, 0x0

    invoke-virtual {p0, p1, v0}, updateRotationUncheckedLocked(ZZ)Z

    move-result v0

    return v0
.end method

.method public updateRotationUncheckedLocked(ZZ)Z
    .registers 4
    .param p1, "inTransaction"    # Z
    .param p2, "forceUpdate"    # Z

    .prologue
    .line 11340
    const/4 v0, -0x1

    invoke-virtual {p0, p1, p2, v0}, updateRotationUncheckedLocked(ZZI)Z

    move-result v0

    return v0
.end method

.method public updateRotationUncheckedLocked(ZZI)Z
    .registers 5
    .param p1, "inTransaction"    # Z
    .param p2, "forceUpdate"    # Z
    .param p3, "displayId"    # I

    .prologue
    .line 11344
    const/4 v0, 0x0

    invoke-virtual {p0, p1, p2, v0, p3}, updateRotationUncheckedLocked(ZZZI)Z

    move-result v0

    return v0
.end method

.method public updateRotationUncheckedLocked(ZZZI)Z
    .registers 25
    .param p1, "inTransaction"    # Z
    .param p2, "forceUpdate"    # Z
    .param p3, "forceUpdateRotation"    # Z
    .param p4, "displayId"    # I

    .prologue
    .line 11350
    move-object/from16 v0, p0

    iget v5, v0, mDeferredRotationPauseCount:I

    if-lez v5, :cond_15

    if-nez p2, :cond_15

    .line 11353
    sget-boolean v5, DEBUG_ORIENTATION:Z

    if-eqz v5, :cond_13

    const-string v5, "WindowManager"

    const-string v6, "Deferring rotation, rotation is paused."

    invoke-static {v5, v6}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 11354
    :cond_13
    const/4 v5, 0x0

    .line 11872
    :goto_14
    return v5

    .line 11357
    :cond_15
    const/4 v3, 0x0

    .line 11360
    .local v3, "screenRotationAnimation":Lcom/android/server/wm/ScreenRotationAnimation;
    const/4 v15, 0x0

    .line 11396
    .local v15, "dualScreenTransition":Lcom/android/server/wm/DualScreenTransition;
    move-object/from16 v0, p0

    iget-object v5, v0, mAnimator:Lcom/android/server/wm/WindowAnimator;

    const/4 v6, 0x0

    invoke-virtual {v5, v6}, Lcom/android/server/wm/WindowAnimator;->getScreenRotationAnimationLocked(I)Lcom/android/server/wm/ScreenRotationAnimation;

    move-result-object v3

    .line 11399
    if-eqz v3, :cond_37

    invoke-virtual {v3}, Lcom/android/server/wm/ScreenRotationAnimation;->isAnimating()Z

    move-result v5

    if-eqz v5, :cond_37

    if-nez p2, :cond_37

    .line 11403
    sget-boolean v5, DEBUG_ORIENTATION:Z

    if-eqz v5, :cond_35

    const-string v5, "WindowManager"

    const-string v6, "Deferring rotation, animation in progress."

    invoke-static {v5, v6}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 11404
    :cond_35
    const/4 v5, 0x0

    goto :goto_14

    .line 11408
    :cond_37
    move-object/from16 v0, p0

    iget-boolean v5, v0, mDisplayEnabled:Z

    if-nez v5, :cond_4a

    .line 11410
    sget-boolean v5, DEBUG_ORIENTATION:Z

    if-eqz v5, :cond_48

    const-string v5, "WindowManager"

    const-string v6, "Deferring rotation, display is not enabled."

    invoke-static {v5, v6}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 11411
    :cond_48
    const/4 v5, 0x0

    goto :goto_14

    .line 11731
    :cond_4a
    move-object/from16 v0, p0

    iget-object v5, v0, mPolicy:Landroid/view/WindowManagerPolicy;

    move-object/from16 v0, p0

    iget v6, v0, mForcedAppOrientation:I

    move-object/from16 v0, p0

    iget v7, v0, mRotation:I

    const/4 v8, 0x0

    invoke-interface {v5, v6, v7, v8}, Landroid/view/WindowManagerPolicy;->rotationForOrientationLw(III)I

    move-result v4

    .line 11732
    .local v4, "rotation":I
    move-object/from16 v0, p0

    iget-object v5, v0, mPolicy:Landroid/view/WindowManagerPolicy;

    move-object/from16 v0, p0

    iget v6, v0, mForcedAppOrientation:I

    const/4 v7, 0x0

    invoke-interface {v5, v6, v4, v7}, Landroid/view/WindowManagerPolicy;->rotationHasCompatibleMetricsLw(III)Z

    move-result v5

    if-nez v5, :cond_bb

    const/4 v2, 0x1

    .line 11735
    .local v2, "altOrientation":Z
    :goto_6b
    sget-boolean v5, DEBUG_ORIENTATION:Z

    if-eqz v5, :cond_aa

    .line 11736
    const-string v6, "WindowManager"

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "Application requested orientation "

    invoke-virtual {v5, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    move-object/from16 v0, p0

    iget v7, v0, mForcedAppOrientation:I

    invoke-virtual {v5, v7}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v5

    const-string v7, ", got rotation "

    invoke-virtual {v5, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5, v4}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v5

    const-string v7, " which has "

    invoke-virtual {v5, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    if-eqz v2, :cond_bd

    const-string/jumbo v5, "incompatible"

    :goto_99
    invoke-virtual {v7, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    const-string v7, " metrics"

    invoke-virtual {v5, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v6, v5}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 11742
    :cond_aa
    move-object/from16 v0, p0

    iget v5, v0, mRotation:I

    if-ne v5, v4, :cond_c0

    move-object/from16 v0, p0

    iget-boolean v5, v0, mAltOrientation:Z

    if-ne v5, v2, :cond_c0

    if-nez p3, :cond_c0

    .line 11744
    const/4 v5, 0x0

    goto/16 :goto_14

    .line 11732
    .end local v2    # "altOrientation":Z
    :cond_bb
    const/4 v2, 0x0

    goto :goto_6b

    .line 11736
    .restart local v2    # "altOrientation":Z
    :cond_bd
    const-string v5, "compatible"

    goto :goto_99

    .line 11747
    :cond_c0
    sget-boolean v5, DEBUG_ORIENTATION:Z

    if-eqz v5, :cond_10c

    .line 11748
    const-string v6, "WindowManager"

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "Rotation changed to "

    invoke-virtual {v5, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5, v4}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v7

    if-eqz v2, :cond_172

    const-string v5, " (alt)"

    :goto_d9
    invoke-virtual {v7, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    const-string v7, " from "

    invoke-virtual {v5, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    move-object/from16 v0, p0

    iget v7, v0, mRotation:I

    invoke-virtual {v5, v7}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v7

    move-object/from16 v0, p0

    iget-boolean v5, v0, mAltOrientation:Z

    if-eqz v5, :cond_176

    const-string v5, " (alt)"

    :goto_f3
    invoke-virtual {v7, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    const-string v7, ", forceApp="

    invoke-virtual {v5, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    move-object/from16 v0, p0

    iget v7, v0, mForcedAppOrientation:I

    invoke-virtual {v5, v7}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v6, v5}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 11754
    :cond_10c
    move-object/from16 v0, p0

    iput v4, v0, mRotation:I

    .line 11755
    move-object/from16 v0, p0

    iput-boolean v2, v0, mAltOrientation:Z

    .line 11756
    move-object/from16 v0, p0

    iget-object v5, v0, mPolicy:Landroid/view/WindowManagerPolicy;

    move-object/from16 v0, p0

    iget v6, v0, mRotation:I

    invoke-interface {v5, v6}, Landroid/view/WindowManagerPolicy;->setRotationLw(I)V

    .line 11758
    const/4 v5, 0x1

    move-object/from16 v0, p0

    iput v5, v0, mWindowsFreezingScreen:I

    .line 11759
    move-object/from16 v0, p0

    iget-object v5, v0, mH:Lcom/android/server/wm/WindowManagerService$H;

    const/16 v6, 0xb

    invoke-virtual {v5, v6}, Lcom/android/server/wm/WindowManagerService$H;->removeMessages(I)V

    .line 11760
    move-object/from16 v0, p0

    iget-object v5, v0, mH:Lcom/android/server/wm/WindowManagerService$H;

    const/16 v6, 0xb

    const-wide/16 v8, 0x7d0

    invoke-virtual {v5, v6, v8, v9}, Lcom/android/server/wm/WindowManagerService$H;->sendEmptyMessageDelayed(IJ)Z

    .line 11761
    const/4 v5, 0x1

    move-object/from16 v0, p0

    iput-boolean v5, v0, mWaitingForConfig:Z

    .line 11762
    invoke-virtual/range {p0 .. p0}, getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v13

    .line 11763
    .local v13, "displayContent":Lcom/android/server/wm/DisplayContent;
    const/4 v5, 0x1

    iput-boolean v5, v13, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    .line 11767
    const/16 v17, 0x0

    .local v17, "ndx":I
    :goto_146
    move-object/from16 v0, p0

    iget-object v5, v0, mDisplayContents:Landroid/util/SparseArray;

    invoke-virtual {v5}, Landroid/util/SparseArray;->size()I

    move-result v5

    move/from16 v0, v17

    if-ge v0, v5, :cond_17a

    .line 11768
    move-object/from16 v0, p0

    iget-object v5, v0, mDisplayContents:Landroid/util/SparseArray;

    move/from16 v0, v17

    invoke-virtual {v5, v0}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v12

    check-cast v12, Lcom/android/server/wm/DisplayContent;

    .line 11769
    .local v12, "d":Lcom/android/server/wm/DisplayContent;
    invoke-static {}, Lcom/android/server/am/VirtualScreenManagerService;->self()Lcom/android/server/am/VirtualScreenManagerService;

    move-result-object v5

    invoke-virtual {v12}, Lcom/android/server/wm/DisplayContent;->getDisplayId()I

    move-result v6

    invoke-virtual {v5, v6}, Lcom/android/server/am/VirtualScreenManagerService;->isVirtualScreen(I)Z

    move-result v5

    if-eqz v5, :cond_16f

    .line 11770
    const/4 v5, 0x1

    iput-boolean v5, v12, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    .line 11767
    :cond_16f
    add-int/lit8 v17, v17, 0x1

    goto :goto_146

    .line 11748
    .end local v12    # "d":Lcom/android/server/wm/DisplayContent;
    .end local v13    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v17    # "ndx":I
    :cond_172
    const-string v5, ""

    goto/16 :goto_d9

    :cond_176
    const-string v5, ""

    goto/16 :goto_f3

    .line 11776
    .restart local v13    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .restart local v17    # "ndx":I
    :cond_17a
    const/4 v5, 0x2

    new-array v11, v5, [I

    .line 11777
    .local v11, "anim":[I
    invoke-virtual {v13}, Lcom/android/server/wm/DisplayContent;->isDimming()Z

    move-result v5

    if-eqz v5, :cond_1d7

    .line 11778
    const/4 v5, 0x0

    const/4 v6, 0x1

    const/4 v7, 0x0

    aput v7, v11, v6

    aput v7, v11, v5

    .line 11782
    :goto_18a
    const/4 v5, 0x0

    aget v5, v11, v5

    const/4 v6, 0x1

    aget v6, v11, v6

    move-object/from16 v0, p0

    move/from16 v1, p1

    invoke-direct {v0, v1, v5, v6}, startFreezingDisplayLocked(ZII)V

    .line 11784
    move-object/from16 v0, p0

    iget-object v5, v0, mAnimator:Lcom/android/server/wm/WindowAnimator;

    const/4 v6, 0x0

    invoke-virtual {v5, v6}, Lcom/android/server/wm/WindowAnimator;->getScreenRotationAnimationLocked(I)Lcom/android/server/wm/ScreenRotationAnimation;

    move-result-object v3

    .line 11792
    invoke-virtual/range {p0 .. p0}, updateDisplayAndOrientationLocked()Landroid/view/DisplayInfo;

    .line 11796
    const/16 v17, 0x0

    :goto_1a5
    move-object/from16 v0, p0

    iget-object v5, v0, mDisplayContents:Landroid/util/SparseArray;

    invoke-virtual {v5}, Landroid/util/SparseArray;->size()I

    move-result v5

    move/from16 v0, v17

    if-ge v0, v5, :cond_1df

    .line 11797
    move-object/from16 v0, p0

    iget-object v5, v0, mDisplayContents:Landroid/util/SparseArray;

    move/from16 v0, v17

    invoke-virtual {v5, v0}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v12

    check-cast v12, Lcom/android/server/wm/DisplayContent;

    .line 11798
    .restart local v12    # "d":Lcom/android/server/wm/DisplayContent;
    invoke-static {}, Lcom/android/server/am/VirtualScreenManagerService;->self()Lcom/android/server/am/VirtualScreenManagerService;

    move-result-object v5

    invoke-virtual {v12}, Lcom/android/server/wm/DisplayContent;->getDisplayId()I

    move-result v6

    invoke-virtual {v5, v6}, Lcom/android/server/am/VirtualScreenManagerService;->isVirtualScreen(I)Z

    move-result v5

    if-eqz v5, :cond_1d4

    .line 11799
    invoke-virtual {v12}, Lcom/android/server/wm/DisplayContent;->getDisplayId()I

    move-result v5

    move-object/from16 v0, p0

    invoke-virtual {v0, v5}, updateDisplayAndOrientationLocked(I)Landroid/view/DisplayInfo;

    .line 11796
    :cond_1d4
    add-int/lit8 v17, v17, 0x1

    goto :goto_1a5

    .line 11780
    .end local v12    # "d":Lcom/android/server/wm/DisplayContent;
    :cond_1d7
    move-object/from16 v0, p0

    iget-object v5, v0, mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v5, v11}, Landroid/view/WindowManagerPolicy;->selectRotationAnimationLw([I)V

    goto :goto_18a

    .line 11805
    :cond_1df
    invoke-virtual {v13}, Lcom/android/server/wm/DisplayContent;->getDisplayInfo()Landroid/view/DisplayInfo;

    move-result-object v14

    .line 11806
    .local v14, "displayInfo":Landroid/view/DisplayInfo;
    if-nez p1, :cond_1e8

    .line 11810
    invoke-static {}, Landroid/view/SurfaceControl;->openTransaction()V

    .line 11815
    :cond_1e8
    if-eqz v3, :cond_20c

    :try_start_1ea
    invoke-virtual {v3}, Lcom/android/server/wm/ScreenRotationAnimation;->hasScreenshot()Z

    move-result v5

    if-eqz v5, :cond_20c

    .line 11817
    move-object/from16 v0, p0

    iget-object v5, v0, mFxSession:Landroid/view/SurfaceSession;

    const-wide/16 v6, 0x2710

    invoke-virtual/range {p0 .. p0}, getTransitionAnimationScaleLocked()F

    move-result v8

    iget v9, v14, Landroid/view/DisplayInfo;->logicalWidth:I

    iget v10, v14, Landroid/view/DisplayInfo;->logicalHeight:I

    invoke-virtual/range {v3 .. v10}, Lcom/android/server/wm/ScreenRotationAnimation;->setRotationInTransaction(ILandroid/view/SurfaceSession;JFII)Z

    move-result v5

    if-eqz v5, :cond_207

    .line 11821
    invoke-virtual/range {p0 .. p0}, scheduleAnimationLocked()V

    .line 11825
    :cond_207
    move-object/from16 v0, p0

    invoke-direct {v0, v13}, updateSurfacesInTransactionLocked(Lcom/android/server/wm/DisplayContent;)Z

    .line 11829
    :cond_20c
    move-object/from16 v0, p0

    iget-object v5, v0, mDisplayManagerInternal:Landroid/hardware/display/DisplayManagerInternal;

    invoke-virtual {v5}, Landroid/hardware/display/DisplayManagerInternal;->performTraversalInTransactionFromWindowManager()V
    :try_end_213
    .catchall {:try_start_1ea .. :try_end_213} :catchall_266

    .line 11831
    if-nez p1, :cond_218

    .line 11832
    invoke-static {}, Landroid/view/SurfaceControl;->closeTransaction()V

    .line 11839
    :cond_218
    invoke-virtual {v13}, Lcom/android/server/wm/DisplayContent;->getWindowList()Lcom/android/server/wm/WindowList;

    move-result-object v19

    .line 11840
    .local v19, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual/range {v19 .. v19}, Lcom/android/server/wm/WindowList;->size()I

    move-result v5

    add-int/lit8 v16, v5, -0x1

    .local v16, "i":I
    :goto_222
    if-ltz v16, :cond_2a4

    .line 11841
    move-object/from16 v0, v19

    move/from16 v1, v16

    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v18

    check-cast v18, Lcom/android/server/wm/WindowState;

    .line 11842
    .local v18, "w":Lcom/android/server/wm/WindowState;
    move-object/from16 v0, v18

    iget-boolean v5, v0, Lcom/android/server/wm/WindowState;->mHasSurface:Z

    if-eqz v5, :cond_26d

    .line 11843
    sget-boolean v5, DEBUG_ORIENTATION:Z

    if-eqz v5, :cond_252

    const-string v5, "WindowManager"

    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "Set mOrientationChanging of "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    move-object/from16 v0, v18

    invoke-virtual {v6, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-static {v5, v6}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 11844
    :cond_252
    const/4 v5, 0x1

    move-object/from16 v0, v18

    iput-boolean v5, v0, Lcom/android/server/wm/WindowState;->mOrientationChanging:Z

    .line 11845
    move-object/from16 v0, p0

    iget-object v5, v0, mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    const/4 v6, 0x0

    iput-boolean v6, v5, Lcom/android/server/wm/WindowManagerService$LayoutFields;->mOrientationChangeComplete:Z

    .line 11853
    :cond_25e
    :goto_25e
    const/4 v5, 0x0

    move-object/from16 v0, v18

    iput v5, v0, Lcom/android/server/wm/WindowState;->mLastFreezeDuration:I

    .line 11840
    add-int/lit8 v16, v16, -0x1

    goto :goto_222

    .line 11831
    .end local v16    # "i":I
    .end local v18    # "w":Lcom/android/server/wm/WindowState;
    .end local v19    # "windows":Lcom/android/server/wm/WindowList;
    :catchall_266
    move-exception v5

    if-nez p1, :cond_26c

    .line 11832
    invoke-static {}, Landroid/view/SurfaceControl;->closeTransaction()V

    :cond_26c
    throw v5

    .line 11848
    .restart local v16    # "i":I
    .restart local v18    # "w":Lcom/android/server/wm/WindowState;
    .restart local v19    # "windows":Lcom/android/server/wm/WindowList;
    :cond_26d
    move-object/from16 v0, p0

    iget-object v5, v0, mOpeningApps:Landroid/util/ArraySet;

    move-object/from16 v0, v18

    iget-object v6, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    invoke-virtual {v5, v6}, Landroid/util/ArraySet;->contains(Ljava/lang/Object;)Z

    move-result v5

    if-eqz v5, :cond_25e

    invoke-virtual/range {v18 .. v18}, Lcom/android/server/wm/WindowState;->shouldWaitForOrientation()Z

    move-result v5

    if-eqz v5, :cond_25e

    .line 11849
    sget-boolean v5, DEBUG_ORIENTATION:Z

    if-eqz v5, :cond_2a0

    const-string v5, "WindowManager"

    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v7, "wait for orientation...  Set mOrientationChanging of "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    move-object/from16 v0, v18

    invoke-virtual {v6, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-static {v5, v6}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 11850
    :cond_2a0
    invoke-virtual/range {v18 .. v18}, Lcom/android/server/wm/WindowState;->startWaitingForOrientation()V

    goto :goto_25e

    .line 11856
    .end local v18    # "w":Lcom/android/server/wm/WindowState;
    :cond_2a4
    move-object/from16 v0, p0

    iget-object v5, v0, mRotationWatchers:Ljava/util/ArrayList;

    invoke-virtual {v5}, Ljava/util/ArrayList;->size()I

    move-result v5

    add-int/lit8 v16, v5, -0x1

    :goto_2ae
    if-ltz v16, :cond_2c4

    .line 11858
    :try_start_2b0
    move-object/from16 v0, p0

    iget-object v5, v0, mRotationWatchers:Ljava/util/ArrayList;

    move/from16 v0, v16

    invoke-virtual {v5, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/android/server/wm/WindowManagerService$RotationWatcher;

    iget-object v5, v5, Lcom/android/server/wm/WindowManagerService$RotationWatcher;->watcher:Landroid/view/IRotationWatcher;

    invoke-interface {v5, v4}, Landroid/view/IRotationWatcher;->onRotationChanged(I)V
    :try_end_2c1
    .catch Landroid/os/RemoteException; {:try_start_2b0 .. :try_end_2c1} :catch_2e5

    .line 11856
    :goto_2c1
    add-int/lit8 v16, v16, -0x1

    goto :goto_2ae

    .line 11866
    :cond_2c4
    if-nez v3, :cond_2e0

    move-object/from16 v0, p0

    iget-object v5, v0, mAccessibilityController:Lcom/android/server/wm/AccessibilityController;

    if-eqz v5, :cond_2e0

    invoke-virtual {v13}, Lcom/android/server/wm/DisplayContent;->getDisplayId()I

    move-result v5

    if-nez v5, :cond_2e0

    .line 11868
    move-object/from16 v0, p0

    iget-object v6, v0, mAccessibilityController:Lcom/android/server/wm/AccessibilityController;

    invoke-virtual/range {p0 .. p0}, getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v7

    if-nez v3, :cond_2e3

    const/4 v5, 0x1

    :goto_2dd
    invoke-virtual {v6, v7, v4, v5}, Lcom/android/server/wm/AccessibilityController;->onRotationChangedLocked(Lcom/android/server/wm/DisplayContent;IZ)V

    .line 11872
    :cond_2e0
    const/4 v5, 0x1

    goto/16 :goto_14

    .line 11868
    :cond_2e3
    const/4 v5, 0x0

    goto :goto_2dd

    .line 11859
    :catch_2e5
    move-exception v5

    goto :goto_2c1
.end method

.method public updateScreenRotationAnimationLocked(Z[Z)V
    .registers 16
    .param p1, "inTransaction"    # Z
    .param p2, "fakeNoChanges"    # [Z

    .prologue
    const/4 v12, 0x4

    .line 23346
    const/4 v0, 0x0

    .local v0, "d":I
    :goto_2
    if-ge v0, v12, :cond_b

    .line 23347
    const/4 v2, 0x0

    invoke-virtual {p0, v2, v0}, computeScreenConfigurationLocked(Landroid/content/res/Configuration;I)V

    .line 23346
    add-int/lit8 v0, v0, 0x1

    goto :goto_2

    .line 23350
    :cond_b
    if-nez p1, :cond_10

    .line 23354
    invoke-static {}, Landroid/view/SurfaceControl;->openTransaction()V

    .line 23357
    :cond_10
    iget-object v2, p0, mAnimator:Lcom/android/server/wm/WindowAnimator;

    invoke-virtual {v2}, Lcom/android/server/wm/WindowAnimator;->getDualScreenTransitionLocked()Lcom/android/server/wm/DualScreenTransition;

    move-result-object v11

    .line 23360
    .local v11, "dualScreenTransition":Lcom/android/server/wm/DualScreenTransition;
    const/4 v0, 0x0

    :goto_17
    if-ge v0, v12, :cond_77

    .line 23361
    :try_start_19
    aget-boolean v2, p2, v0

    if-nez v2, :cond_20

    .line 23360
    :cond_1d
    :goto_1d
    add-int/lit8 v0, v0, 0x1

    goto :goto_17

    .line 23365
    :cond_20
    invoke-virtual {p0, v0}, getDisplayContentLocked(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v9

    .line 23368
    .local v9, "displayContent":Lcom/android/server/wm/DisplayContent;
    iget-object v2, p0, mAnimator:Lcom/android/server/wm/WindowAnimator;

    invoke-virtual {v2, v0}, Lcom/android/server/wm/WindowAnimator;->getScreenRotationAnimationLocked(I)Lcom/android/server/wm/ScreenRotationAnimation;

    move-result-object v1

    .line 23370
    .local v1, "screenRotationAnimation":Lcom/android/server/wm/ScreenRotationAnimation;
    if-eqz v1, :cond_5a

    invoke-virtual {v1}, Lcom/android/server/wm/ScreenRotationAnimation;->hasScreenshot()Z

    move-result v2

    if-eqz v2, :cond_5a

    .line 23371
    invoke-virtual {v9}, Lcom/android/server/wm/DisplayContent;->getDisplayInfo()Landroid/view/DisplayInfo;

    move-result-object v10

    .line 23372
    .local v10, "displayInfo":Landroid/view/DisplayInfo;
    iget-object v2, p0, mRotations:Lcom/samsung/android/multidisplay/common/FallbackArrayList;

    invoke-virtual {v2, v0}, Lcom/samsung/android/multidisplay/common/FallbackArrayList;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Ljava/lang/Integer;

    invoke-virtual {v2}, Ljava/lang/Integer;->intValue()I

    move-result v2

    iget-object v3, p0, mFxSession:Landroid/view/SurfaceSession;

    const-wide/16 v4, 0x2710

    invoke-virtual {p0}, getTransitionAnimationScaleLocked()F

    move-result v6

    iget v7, v10, Landroid/view/DisplayInfo;->logicalWidth:I

    iget v8, v10, Landroid/view/DisplayInfo;->logicalHeight:I

    invoke-virtual/range {v1 .. v8}, Lcom/android/server/wm/ScreenRotationAnimation;->setRotationInTransaction(ILandroid/view/SurfaceSession;JFII)Z

    move-result v2

    if-eqz v2, :cond_57

    .line 23376
    invoke-virtual {p0}, scheduleAnimationLocked()V

    .line 23380
    :cond_57
    invoke-direct {p0, v9}, updateSurfacesInTransactionLocked(Lcom/android/server/wm/DisplayContent;)Z

    .line 23386
    .end local v10    # "displayInfo":Landroid/view/DisplayInfo;
    :cond_5a
    if-eqz v11, :cond_1d

    .line 23387
    invoke-virtual {p0, v0}, getDisplayContentLocked(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v3

    iget-object v2, p0, mRotations:Lcom/samsung/android/multidisplay/common/FallbackArrayList;

    invoke-virtual {v2, v0}, Lcom/samsung/android/multidisplay/common/FallbackArrayList;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Ljava/lang/Integer;

    invoke-virtual {v2}, Ljava/lang/Integer;->intValue()I

    move-result v2

    invoke-virtual {v11, v3, v2}, Lcom/android/server/wm/DualScreenTransition;->setRotationInTransaction(Lcom/android/server/wm/DisplayContent;I)V
    :try_end_6f
    .catchall {:try_start_19 .. :try_end_6f} :catchall_70

    goto :goto_1d

    .line 23393
    .end local v1    # "screenRotationAnimation":Lcom/android/server/wm/ScreenRotationAnimation;
    .end local v9    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :catchall_70
    move-exception v2

    if-nez p1, :cond_76

    .line 23394
    invoke-static {}, Landroid/view/SurfaceControl;->closeTransaction()V

    :cond_76
    throw v2

    .line 23391
    :cond_77
    :try_start_77
    iget-object v2, p0, mDisplayManagerInternal:Landroid/hardware/display/DisplayManagerInternal;

    invoke-virtual {v2}, Landroid/hardware/display/DisplayManagerInternal;->performTraversalInTransactionFromWindowManager()V
    :try_end_7c
    .catchall {:try_start_77 .. :try_end_7c} :catchall_70

    .line 23393
    if-nez p1, :cond_81

    .line 23394
    invoke-static {}, Landroid/view/SurfaceControl;->closeTransaction()V

    .line 23400
    :cond_81
    return-void
.end method

.method public updateShowImeWithHardKeyboard()V
    .registers 8

    .prologue
    const/4 v2, 0x1

    .line 12838
    const-string/jumbo v3, "ro.build.characteristics"

    invoke-static {v3}, Landroid/os/SystemProperties;->get(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v1

    .line 12839
    .local v1, "deviceType":Ljava/lang/String;
    const/4 v0, 0x1

    .line 12840
    .local v0, "defaultValue":I
    if-eqz v1, :cond_38

    const-string/jumbo v3, "tablet"

    invoke-virtual {v1, v3}, Ljava/lang/String;->contains(Ljava/lang/CharSequence;)Z

    move-result v3

    if-eqz v3, :cond_38

    .line 12841
    const/4 v0, 0x0

    .line 12850
    :cond_15
    :goto_15
    iget-object v4, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v4

    .line 12851
    :try_start_18
    iget-object v3, p0, mContext:Landroid/content/Context;

    invoke-virtual {v3}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v3

    const-string/jumbo v5, "show_ime_with_hard_keyboard"

    iget v6, p0, mCurrentUserId:I

    invoke-static {v3, v5, v0, v6}, Landroid/provider/Settings$Secure;->getIntForUser(Landroid/content/ContentResolver;Ljava/lang/String;II)I

    move-result v3

    if-ne v3, v2, :cond_48

    .line 12854
    .local v2, "showImeWithHardKeyboard":Z
    :goto_29
    iget-boolean v3, p0, mShowImeWithHardKeyboard:Z

    if-eq v3, v2, :cond_36

    .line 12855
    iput-boolean v2, p0, mShowImeWithHardKeyboard:Z

    .line 12856
    iget-object v3, p0, mH:Lcom/android/server/wm/WindowManagerService$H;

    const/16 v5, 0x12

    invoke-virtual {v3, v5}, Lcom/android/server/wm/WindowManagerService$H;->sendEmptyMessage(I)Z

    .line 12858
    :cond_36
    monitor-exit v4
    :try_end_37
    .catchall {:try_start_18 .. :try_end_37} :catchall_4a

    .line 12859
    return-void

    .line 12842
    .end local v2    # "showImeWithHardKeyboard":Z
    :cond_38
    iget-object v3, p0, mContext:Landroid/content/Context;

    invoke-virtual {v3}, Landroid/content/Context;->getPackageManager()Landroid/content/pm/PackageManager;

    move-result-object v3

    const-string v4, "com.sec.feature.folder_type"

    invoke-virtual {v3, v4}, Landroid/content/pm/PackageManager;->hasSystemFeature(Ljava/lang/String;)Z

    move-result v3

    if-eqz v3, :cond_15

    .line 12843
    const/4 v0, 0x0

    goto :goto_15

    .line 12851
    :cond_48
    const/4 v2, 0x0

    goto :goto_29

    .line 12858
    :catchall_4a
    move-exception v3

    :try_start_4b
    monitor-exit v4
    :try_end_4c
    .catchall {:try_start_4b .. :try_end_4c} :catchall_4a

    throw v3
.end method

.method updateStatusBarVisibilityLocked(I)V
    .registers 3
    .param p1, "visibility"    # I

    .prologue
    .line 19095
    const/4 v0, 0x0

    invoke-virtual {p0, p1, v0}, updateStatusBarVisibilityLocked(II)V

    .line 19096
    return-void
.end method

.method updateStatusBarVisibilityLocked(II)V
    .registers 12
    .param p1, "visibility"    # I
    .param p2, "displayId"    # I

    .prologue
    .line 19105
    iget v7, p0, mLastDispatchedSystemUiVisibility:I

    if-ne v7, p1, :cond_5

    .line 19146
    :cond_4
    return-void

    .line 19108
    :cond_5
    iput p1, p0, mLastDispatchedSystemUiVisibility:I

    .line 19111
    iget-object v7, p0, mInputManager:Lcom/android/server/input/InputManagerService;

    invoke-virtual {v7, p1}, Lcom/android/server/input/InputManagerService;->setSystemUiVisibility(I)V

    .line 19114
    invoke-virtual {p0}, getDefaultWindowListLocked()Lcom/android/server/wm/WindowList;

    move-result-object v5

    .line 19116
    .local v5, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual {v5}, Lcom/android/server/wm/WindowList;->size()I

    move-result v0

    .line 19117
    .local v0, "N":I
    const/4 v3, 0x0

    .local v3, "i":I
    :goto_15
    if-ge v3, v0, :cond_4

    .line 19118
    invoke-virtual {v5, v3}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Lcom/android/server/wm/WindowState;

    .line 19120
    .local v6, "ws":Lcom/android/server/wm/WindowState;
    :try_start_1d
    iget v1, v6, Lcom/android/server/wm/WindowState;->mSystemUiVisibility:I

    .line 19121
    .local v1, "curValue":I
    xor-int v2, v1, p1

    .line 19124
    .local v2, "diff":I
    and-int/lit8 v2, v2, 0x7

    .line 19126
    xor-int/lit8 v7, p1, -0x1

    and-int/2addr v2, v7

    .line 19127
    xor-int/lit8 v7, v2, -0x1

    and-int/2addr v7, v1

    and-int v8, p1, v2

    or-int v4, v7, v8

    .line 19129
    .local v4, "newValue":I
    invoke-virtual {v6}, Lcom/android/server/wm/WindowState;->getMultiWindowStyleLw()Lcom/samsung/android/multiwindow/MultiWindowStyle;

    move-result-object v7

    invoke-virtual {v7}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->isCascade()Z

    move-result v7

    if-eqz v7, :cond_3a

    .line 19117
    .end local v1    # "curValue":I
    .end local v2    # "diff":I
    .end local v4    # "newValue":I
    :cond_37
    :goto_37
    add-int/lit8 v3, v3, 0x1

    goto :goto_15

    .line 19134
    .restart local v1    # "curValue":I
    .restart local v2    # "diff":I
    .restart local v4    # "newValue":I
    :cond_3a
    if-eq v4, v1, :cond_44

    .line 19135
    iget v7, v6, Lcom/android/server/wm/WindowState;->mSeq:I

    add-int/lit8 v7, v7, 0x1

    iput v7, v6, Lcom/android/server/wm/WindowState;->mSeq:I

    .line 19136
    iput v4, v6, Lcom/android/server/wm/WindowState;->mSystemUiVisibility:I

    .line 19138
    :cond_44
    if-ne v4, v1, :cond_4c

    iget-object v7, v6, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget-boolean v7, v7, Landroid/view/WindowManager$LayoutParams;->hasSystemUiListeners:Z

    if-eqz v7, :cond_37

    .line 19139
    :cond_4c
    iget-object v7, v6, Lcom/android/server/wm/WindowState;->mClient:Landroid/view/IWindow;

    iget v8, v6, Lcom/android/server/wm/WindowState;->mSeq:I

    invoke-interface {v7, v8, p1, v4, v2}, Landroid/view/IWindow;->dispatchSystemUiVisibilityChanged(IIII)V
    :try_end_53
    .catch Landroid/os/RemoteException; {:try_start_1d .. :try_end_53} :catch_54

    goto :goto_37

    .line 19142
    .end local v1    # "curValue":I
    .end local v2    # "diff":I
    .end local v4    # "newValue":I
    :catch_54
    move-exception v7

    goto :goto_37
.end method

.method updateTokenInPlaceLocked(Lcom/android/server/wm/AppWindowToken;I)V
    .registers 9
    .param p1, "wtoken"    # Lcom/android/server/wm/AppWindowToken;
    .param p2, "transit"    # I

    .prologue
    const/4 v2, 0x0

    const/4 v4, 0x0

    .line 8494
    const/4 v0, -0x1

    if-eq p2, v0, :cond_18

    .line 8495
    iget-object v0, p1, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    iget-object v0, v0, Lcom/android/server/wm/AppWindowAnimator;->animation:Landroid/view/animation/Animation;

    sget-object v1, Lcom/android/server/wm/AppWindowAnimator;->sDummyAnimation:Landroid/view/animation/Animation;

    if-ne v0, v1, :cond_11

    .line 8496
    iget-object v0, p1, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    iput-object v2, v0, Lcom/android/server/wm/AppWindowAnimator;->animation:Landroid/view/animation/Animation;

    :cond_11
    move-object v0, p0

    move-object v1, p1

    move v3, p2

    move v5, v4

    .line 8498
    invoke-direct/range {v0 .. v5}, applyAnimationLocked(Lcom/android/server/wm/AppWindowToken;Landroid/view/WindowManager$LayoutParams;IZZ)Z

    .line 8500
    :cond_18
    return-void
.end method

.method public updateTspViewPolicy(I)V
    .registers 3
    .param p1, "viewPolicy"    # I

    .prologue
    .line 23531
    iget-object v0, p0, mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v0, p1}, Landroid/view/WindowManagerPolicy;->updateTspViewPolicy(I)V

    .line 23532
    return-void
.end method

.method updateWallpaperOffsetLocked(Lcom/android/server/wm/WindowState;Z)V
    .registers 18
    .param p1, "changingTarget"    # Lcom/android/server/wm/WindowState;
    .param p2, "sync"    # Z

    .prologue
    .line 3806
    invoke-virtual/range {p1 .. p1}, Lcom/android/server/wm/WindowState;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    move-result-object v3

    .line 3807
    .local v3, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-nez v3, :cond_7

    .line 3903
    :cond_6
    return-void

    .line 3810
    :cond_7
    invoke-virtual {v3}, Lcom/android/server/wm/DisplayContent;->getDisplayInfo()Landroid/view/DisplayInfo;

    move-result-object v4

    .line 3811
    .local v4, "displayInfo":Landroid/view/DisplayInfo;
    iget v5, v4, Landroid/view/DisplayInfo;->logicalWidth:I

    .line 3812
    .local v5, "dw":I
    iget v2, v4, Landroid/view/DisplayInfo;->logicalHeight:I

    .line 3824
    .local v2, "dh":I
    iget-object v7, p0, mWallpaperTokens:Ljava/util/ArrayList;

    .line 3825
    .local v7, "mWallpaperTokens":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/WindowToken;>;"
    iget-object v6, p0, mWallpaperTarget:Lcom/android/server/wm/WindowState;

    .line 3829
    .local v6, "mWallpaperTarget":Lcom/android/server/wm/WindowState;
    move-object v8, v6

    .line 3830
    .local v8, "target":Lcom/android/server/wm/WindowState;
    if-eqz v8, :cond_56

    .line 3855
    iget v13, v8, Lcom/android/server/wm/WindowState;->mWallpaperX:F

    const/4 v14, 0x0

    cmpl-float v13, v13, v14

    if-ltz v13, :cond_8b

    .line 3856
    iget v13, v8, Lcom/android/server/wm/WindowState;->mWallpaperX:F

    iput v13, p0, mLastWallpaperX:F

    .line 3860
    :cond_21
    :goto_21
    iget v13, v8, Lcom/android/server/wm/WindowState;->mWallpaperY:F

    const/4 v14, 0x0

    cmpl-float v13, v13, v14

    if-ltz v13, :cond_9b

    .line 3861
    iget v13, v8, Lcom/android/server/wm/WindowState;->mWallpaperY:F

    iput v13, p0, mLastWallpaperY:F

    .line 3865
    :cond_2c
    :goto_2c
    iget v13, v8, Lcom/android/server/wm/WindowState;->mWallpaperDisplayOffsetX:I

    const/high16 v14, -0x80000000

    if-eq v13, v14, :cond_ab

    .line 3866
    iget v13, v8, Lcom/android/server/wm/WindowState;->mWallpaperDisplayOffsetX:I

    iput v13, p0, mLastWallpaperDisplayOffsetX:I

    .line 3870
    :cond_36
    :goto_36
    iget v13, v8, Lcom/android/server/wm/WindowState;->mWallpaperDisplayOffsetY:I

    const/high16 v14, -0x80000000

    if-eq v13, v14, :cond_bb

    .line 3871
    iget v13, v8, Lcom/android/server/wm/WindowState;->mWallpaperDisplayOffsetY:I

    iput v13, p0, mLastWallpaperDisplayOffsetY:I

    .line 3876
    :cond_40
    :goto_40
    iget v13, v8, Lcom/android/server/wm/WindowState;->mWallpaperXStep:F

    const/4 v14, 0x0

    cmpl-float v13, v13, v14

    if-ltz v13, :cond_cb

    .line 3877
    iget v13, v8, Lcom/android/server/wm/WindowState;->mWallpaperXStep:F

    iput v13, p0, mLastWallpaperXStep:F

    .line 3881
    :cond_4b
    :goto_4b
    iget v13, v8, Lcom/android/server/wm/WindowState;->mWallpaperYStep:F

    const/4 v14, 0x0

    cmpl-float v13, v13, v14

    if-ltz v13, :cond_dc

    .line 3882
    iget v13, v8, Lcom/android/server/wm/WindowState;->mWallpaperYStep:F

    iput v13, p0, mLastWallpaperYStep:F

    .line 3888
    :cond_56
    :goto_56
    invoke-virtual {v7}, Ljava/util/ArrayList;->size()I

    move-result v13

    add-int/lit8 v1, v13, -0x1

    .local v1, "curTokenNdx":I
    :goto_5c
    if-ltz v1, :cond_6

    .line 3889
    invoke-virtual {v7, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v13

    check-cast v13, Lcom/android/server/wm/WindowToken;

    iget-object v12, v13, Lcom/android/server/wm/WindowToken;->windows:Lcom/android/server/wm/WindowList;

    .line 3890
    .local v12, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual {v12}, Lcom/android/server/wm/WindowList;->size()I

    move-result v13

    add-int/lit8 v10, v13, -0x1

    .local v10, "wallpaperNdx":I
    :goto_6c
    if-ltz v10, :cond_ed

    .line 3891
    invoke-virtual {v12, v10}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v9

    check-cast v9, Lcom/android/server/wm/WindowState;

    .line 3892
    .local v9, "wallpaper":Lcom/android/server/wm/WindowState;
    move/from16 v0, p2

    invoke-virtual {p0, v9, v5, v2, v0}, updateWallpaperOffsetLocked(Lcom/android/server/wm/WindowState;IIZ)Z

    move-result v13

    if-eqz v13, :cond_88

    .line 3893
    iget-object v11, v9, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    .line 3894
    .local v11, "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    invoke-virtual {v11}, Lcom/android/server/wm/WindowStateAnimator;->computeShownFrameLocked()V

    .line 3897
    iget-object v13, v9, Lcom/android/server/wm/WindowState;->mShownFrame:Landroid/graphics/RectF;

    invoke-virtual {v11, v13}, Lcom/android/server/wm/WindowStateAnimator;->setWallpaperOffset(Landroid/graphics/RectF;)V

    .line 3899
    const/16 p2, 0x0

    .line 3890
    .end local v11    # "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    :cond_88
    add-int/lit8 v10, v10, -0x1

    goto :goto_6c

    .line 3857
    .end local v1    # "curTokenNdx":I
    .end local v9    # "wallpaper":Lcom/android/server/wm/WindowState;
    .end local v10    # "wallpaperNdx":I
    .end local v12    # "windows":Lcom/android/server/wm/WindowList;
    :cond_8b
    move-object/from16 v0, p1

    iget v13, v0, Lcom/android/server/wm/WindowState;->mWallpaperX:F

    const/4 v14, 0x0

    cmpl-float v13, v13, v14

    if-ltz v13, :cond_21

    .line 3858
    move-object/from16 v0, p1

    iget v13, v0, Lcom/android/server/wm/WindowState;->mWallpaperX:F

    iput v13, p0, mLastWallpaperX:F

    goto :goto_21

    .line 3862
    :cond_9b
    move-object/from16 v0, p1

    iget v13, v0, Lcom/android/server/wm/WindowState;->mWallpaperY:F

    const/4 v14, 0x0

    cmpl-float v13, v13, v14

    if-ltz v13, :cond_2c

    .line 3863
    move-object/from16 v0, p1

    iget v13, v0, Lcom/android/server/wm/WindowState;->mWallpaperY:F

    iput v13, p0, mLastWallpaperY:F

    goto :goto_2c

    .line 3867
    :cond_ab
    move-object/from16 v0, p1

    iget v13, v0, Lcom/android/server/wm/WindowState;->mWallpaperDisplayOffsetX:I

    const/high16 v14, -0x80000000

    if-eq v13, v14, :cond_36

    .line 3868
    move-object/from16 v0, p1

    iget v13, v0, Lcom/android/server/wm/WindowState;->mWallpaperDisplayOffsetX:I

    iput v13, p0, mLastWallpaperDisplayOffsetX:I

    goto/16 :goto_36

    .line 3872
    :cond_bb
    move-object/from16 v0, p1

    iget v13, v0, Lcom/android/server/wm/WindowState;->mWallpaperDisplayOffsetY:I

    const/high16 v14, -0x80000000

    if-eq v13, v14, :cond_40

    .line 3873
    move-object/from16 v0, p1

    iget v13, v0, Lcom/android/server/wm/WindowState;->mWallpaperDisplayOffsetY:I

    iput v13, p0, mLastWallpaperDisplayOffsetY:I

    goto/16 :goto_40

    .line 3878
    :cond_cb
    move-object/from16 v0, p1

    iget v13, v0, Lcom/android/server/wm/WindowState;->mWallpaperXStep:F

    const/4 v14, 0x0

    cmpl-float v13, v13, v14

    if-ltz v13, :cond_4b

    .line 3879
    move-object/from16 v0, p1

    iget v13, v0, Lcom/android/server/wm/WindowState;->mWallpaperXStep:F

    iput v13, p0, mLastWallpaperXStep:F

    goto/16 :goto_4b

    .line 3883
    :cond_dc
    move-object/from16 v0, p1

    iget v13, v0, Lcom/android/server/wm/WindowState;->mWallpaperYStep:F

    const/4 v14, 0x0

    cmpl-float v13, v13, v14

    if-ltz v13, :cond_56

    .line 3884
    move-object/from16 v0, p1

    iget v13, v0, Lcom/android/server/wm/WindowState;->mWallpaperYStep:F

    iput v13, p0, mLastWallpaperYStep:F

    goto/16 :goto_56

    .line 3888
    .restart local v1    # "curTokenNdx":I
    .restart local v10    # "wallpaperNdx":I
    .restart local v12    # "windows":Lcom/android/server/wm/WindowList;
    :cond_ed
    add-int/lit8 v1, v1, -0x1

    goto/16 :goto_5c
.end method

.method updateWallpaperOffsetLocked(Lcom/android/server/wm/WindowState;IIZ)Z
    .registers 35
    .param p1, "wallpaperWin"    # Lcom/android/server/wm/WindowState;
    .param p2, "dw"    # I
    .param p3, "dh"    # I
    .param p4, "sync"    # Z

    .prologue
    .line 3666
    move-object/from16 v0, p0

    iget v15, v0, mLastWallpaperX:F

    .line 3667
    .local v15, "mLastWallpaperX":F
    move-object/from16 v0, p0

    iget v0, v0, mLastWallpaperY:F

    move/from16 v19, v0

    .line 3668
    .local v19, "mLastWallpaperY":F
    move-object/from16 v0, p0

    iget v0, v0, mLastWallpaperXStep:F

    move/from16 v18, v0

    .line 3669
    .local v18, "mLastWallpaperXStep":F
    move-object/from16 v0, p0

    iget v0, v0, mLastWallpaperYStep:F

    move/from16 v20, v0

    .line 3670
    .local v20, "mLastWallpaperYStep":F
    move-object/from16 v0, p0

    iget v13, v0, mLastWallpaperDisplayOffsetX:I

    .line 3671
    .local v13, "mLastWallpaperDisplayOffsetX":I
    move-object/from16 v0, p0

    iget v14, v0, mLastWallpaperDisplayOffsetY:I

    .line 3672
    .local v14, "mLastWallpaperDisplayOffsetY":I
    move-object/from16 v0, p0

    iget-object v0, v0, mWaitingOnWallpaper:Lcom/android/server/wm/WindowState;

    move-object/from16 v21, v0

    .line 3673
    .local v21, "mWaitingOnWallpaper":Lcom/android/server/wm/WindowState;
    move-object/from16 v0, p0

    iget-wide v0, v0, mLastWallpaperTimeoutTime:J

    move-wide/from16 v16, v0

    .line 3677
    .local v16, "mLastWallpaperTimeoutTime":J
    const/4 v12, 0x0

    .line 3678
    .local v12, "changed":Z
    const/16 v23, 0x0

    .line 3679
    .local v23, "rawChanged":Z
    const/4 v4, 0x0

    cmpl-float v4, v15, v4

    if-ltz v4, :cond_203

    move/from16 v26, v15

    .line 3680
    .local v26, "wpx":F
    :goto_34
    const/4 v4, 0x0

    cmpl-float v4, v18, v4

    if-ltz v4, :cond_207

    move/from16 v27, v18

    .line 3681
    .local v27, "wpxs":F
    :goto_3b
    move-object/from16 v0, p1

    iget-object v4, v0, Lcom/android/server/wm/WindowState;->mFrame:Landroid/graphics/Rect;

    iget v4, v4, Landroid/graphics/Rect;->right:I

    move-object/from16 v0, p1

    iget-object v5, v0, Lcom/android/server/wm/WindowState;->mFrame:Landroid/graphics/Rect;

    iget v5, v5, Landroid/graphics/Rect;->left:I

    sub-int/2addr v4, v5

    sub-int v11, v4, p2

    .line 3682
    .local v11, "availw":I
    if-lez v11, :cond_20b

    int-to-float v4, v11

    mul-float v4, v4, v26

    const/high16 v5, 0x3f000000    # 0.5f

    add-float/2addr v4, v5

    float-to-int v4, v4

    neg-int v0, v4

    move/from16 v22, v0

    .line 3683
    .local v22, "offset":I
    :goto_56
    const/high16 v4, -0x80000000

    if-eq v13, v4, :cond_5c

    .line 3684
    add-int v22, v22, v13

    .line 3686
    :cond_5c
    move-object/from16 v0, p1

    iget v4, v0, Lcom/android/server/wm/WindowState;->mXOffset:I

    move/from16 v0, v22

    if-eq v4, v0, :cond_20f

    const/4 v12, 0x1

    .line 3687
    :goto_65
    if-eqz v12, :cond_97

    .line 3688
    sget-boolean v4, DEBUG_WALLPAPER:Z

    if-eqz v4, :cond_91

    const-string v4, "WindowManager"

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string v6, "Update wallpaper "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    move-object/from16 v0, p1

    invoke-virtual {v5, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v5

    const-string v6, " x: "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    move/from16 v0, v22

    invoke-virtual {v5, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v4, v5}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 3690
    :cond_91
    move/from16 v0, v22

    move-object/from16 v1, p1

    iput v0, v1, Lcom/android/server/wm/WindowState;->mXOffset:I

    .line 3692
    :cond_97
    move-object/from16 v0, p1

    iget v4, v0, Lcom/android/server/wm/WindowState;->mWallpaperX:F

    cmpl-float v4, v4, v26

    if-nez v4, :cond_a7

    move-object/from16 v0, p1

    iget v4, v0, Lcom/android/server/wm/WindowState;->mWallpaperXStep:F

    cmpl-float v4, v4, v27

    if-eqz v4, :cond_b5

    .line 3693
    :cond_a7
    move/from16 v0, v26

    move-object/from16 v1, p1

    iput v0, v1, Lcom/android/server/wm/WindowState;->mWallpaperX:F

    .line 3694
    move/from16 v0, v27

    move-object/from16 v1, p1

    iput v0, v1, Lcom/android/server/wm/WindowState;->mWallpaperXStep:F

    .line 3695
    const/16 v23, 0x1

    .line 3698
    :cond_b5
    const/4 v4, 0x0

    cmpl-float v4, v19, v4

    if-ltz v4, :cond_212

    move/from16 v28, v19

    .line 3699
    .local v28, "wpy":F
    :goto_bc
    const/4 v4, 0x0

    cmpl-float v4, v20, v4

    if-ltz v4, :cond_216

    move/from16 v29, v20

    .line 3700
    .local v29, "wpys":F
    :goto_c3
    move-object/from16 v0, p1

    iget-object v4, v0, Lcom/android/server/wm/WindowState;->mFrame:Landroid/graphics/Rect;

    iget v4, v4, Landroid/graphics/Rect;->bottom:I

    move-object/from16 v0, p1

    iget-object v5, v0, Lcom/android/server/wm/WindowState;->mFrame:Landroid/graphics/Rect;

    iget v5, v5, Landroid/graphics/Rect;->top:I

    sub-int/2addr v4, v5

    sub-int v10, v4, p3

    .line 3701
    .local v10, "availh":I
    if-lez v10, :cond_21a

    int-to-float v4, v10

    mul-float v4, v4, v28

    const/high16 v5, 0x3f000000    # 0.5f

    add-float/2addr v4, v5

    float-to-int v4, v4

    neg-int v0, v4

    move/from16 v22, v0

    .line 3702
    :goto_de
    const/high16 v4, -0x80000000

    if-eq v14, v4, :cond_e4

    .line 3703
    add-int v22, v22, v14

    .line 3705
    :cond_e4
    move-object/from16 v0, p1

    iget v4, v0, Lcom/android/server/wm/WindowState;->mYOffset:I

    move/from16 v0, v22

    if-eq v4, v0, :cond_11d

    .line 3706
    sget-boolean v4, DEBUG_WALLPAPER:Z

    if-eqz v4, :cond_116

    const-string v4, "WindowManager"

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string v6, "Update wallpaper "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    move-object/from16 v0, p1

    invoke-virtual {v5, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v5

    const-string v6, " y: "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    move/from16 v0, v22

    invoke-virtual {v5, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v4, v5}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 3708
    :cond_116
    const/4 v12, 0x1

    .line 3709
    move/from16 v0, v22

    move-object/from16 v1, p1

    iput v0, v1, Lcom/android/server/wm/WindowState;->mYOffset:I

    .line 3711
    :cond_11d
    move-object/from16 v0, p1

    iget v4, v0, Lcom/android/server/wm/WindowState;->mWallpaperY:F

    cmpl-float v4, v4, v28

    if-nez v4, :cond_12d

    move-object/from16 v0, p1

    iget v4, v0, Lcom/android/server/wm/WindowState;->mWallpaperYStep:F

    cmpl-float v4, v4, v29

    if-eqz v4, :cond_13b

    .line 3712
    :cond_12d
    move/from16 v0, v28

    move-object/from16 v1, p1

    iput v0, v1, Lcom/android/server/wm/WindowState;->mWallpaperY:F

    .line 3713
    move/from16 v0, v29

    move-object/from16 v1, p1

    iput v0, v1, Lcom/android/server/wm/WindowState;->mWallpaperYStep:F

    .line 3714
    const/16 v23, 0x1

    .line 3717
    :cond_13b
    if-eqz v23, :cond_202

    move-object/from16 v0, p1

    iget-object v4, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v4, v4, Landroid/view/WindowManager$LayoutParams;->privateFlags:I

    and-int/lit8 v4, v4, 0x4

    if-eqz v4, :cond_202

    .line 3720
    :try_start_147
    sget-boolean v4, DEBUG_WALLPAPER:Z

    if-eqz v4, :cond_181

    const-string v4, "WindowManager"

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string v6, "Report new wp offset "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    move-object/from16 v0, p1

    invoke-virtual {v5, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v5

    const-string v6, " x="

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    move-object/from16 v0, p1

    iget v6, v0, Lcom/android/server/wm/WindowState;->mWallpaperX:F

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(F)Ljava/lang/StringBuilder;

    move-result-object v5

    const-string v6, " y="

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    move-object/from16 v0, p1

    iget v6, v0, Lcom/android/server/wm/WindowState;->mWallpaperY:F

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(F)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v4, v5}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 3723
    :cond_181
    if-eqz p4, :cond_189

    .line 3728
    move-object/from16 v0, p1

    move-object/from16 v1, p0

    iput-object v0, v1, mWaitingOnWallpaper:Lcom/android/server/wm/WindowState;

    .line 3732
    :cond_189
    move-object/from16 v0, p1

    iget-object v4, v0, Lcom/android/server/wm/WindowState;->mClient:Landroid/view/IWindow;

    move-object/from16 v0, p1

    iget v5, v0, Lcom/android/server/wm/WindowState;->mWallpaperX:F

    move-object/from16 v0, p1

    iget v6, v0, Lcom/android/server/wm/WindowState;->mWallpaperY:F

    move-object/from16 v0, p1

    iget v7, v0, Lcom/android/server/wm/WindowState;->mWallpaperXStep:F

    move-object/from16 v0, p1

    iget v8, v0, Lcom/android/server/wm/WindowState;->mWallpaperYStep:F

    move/from16 v9, p4

    invoke-interface/range {v4 .. v9}, Landroid/view/IWindow;->dispatchWallpaperOffsets(FFFFZ)V

    .line 3735
    if-eqz p4, :cond_202

    .line 3736
    if-eqz v21, :cond_202

    .line 3737
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J
    :try_end_1a9
    .catch Landroid/os/RemoteException; {:try_start_147 .. :try_end_1a9} :catch_21e

    move-result-wide v24

    .line 3738
    .local v24, "start":J
    const-wide/16 v4, 0x2710

    add-long v4, v4, v16

    cmp-long v4, v4, v24

    if-gez v4, :cond_1fd

    .line 3741
    :try_start_1b2
    sget-boolean v4, DEBUG_WALLPAPER:Z

    if-eqz v4, :cond_1bd

    const-string v4, "WindowManager"

    const-string v5, "Waiting for offset complete..."

    invoke-static {v4, v5}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 3743
    :cond_1bd
    move-object/from16 v0, p0

    iget-object v4, v0, mWindowMap:Ljava/util/HashMap;

    const-wide/16 v6, 0x96

    invoke-virtual {v4, v6, v7}, Ljava/lang/Object;->wait(J)V
    :try_end_1c6
    .catch Ljava/lang/InterruptedException; {:try_start_1b2 .. :try_end_1c6} :catch_220
    .catch Landroid/os/RemoteException; {:try_start_1b2 .. :try_end_1c6} :catch_21e

    .line 3746
    :goto_1c6
    :try_start_1c6
    sget-boolean v4, DEBUG_WALLPAPER:Z

    if-eqz v4, :cond_1d1

    const-string v4, "WindowManager"

    const-string v5, "Offset complete!"

    invoke-static {v4, v5}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 3747
    :cond_1d1
    const-wide/16 v4, 0x96

    add-long v4, v4, v24

    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v6

    cmp-long v4, v4, v6

    if-gez v4, :cond_1fd

    .line 3749
    const-string v4, "WindowManager"

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string v6, "Timeout waiting for wallpaper to offset: "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    move-object/from16 v0, p1

    invoke-virtual {v5, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v4, v5}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 3755
    move-wide/from16 v0, v24

    move-object/from16 v2, p0

    iput-wide v0, v2, mLastWallpaperTimeoutTime:J

    .line 3764
    :cond_1fd
    const/4 v4, 0x0

    move-object/from16 v0, p0

    iput-object v4, v0, mWaitingOnWallpaper:Lcom/android/server/wm/WindowState;
    :try_end_202
    .catch Landroid/os/RemoteException; {:try_start_1c6 .. :try_end_202} :catch_21e

    .line 3773
    .end local v24    # "start":J
    :cond_202
    :goto_202
    return v12

    .line 3679
    .end local v10    # "availh":I
    .end local v11    # "availw":I
    .end local v22    # "offset":I
    .end local v26    # "wpx":F
    .end local v27    # "wpxs":F
    .end local v28    # "wpy":F
    .end local v29    # "wpys":F
    :cond_203
    const/high16 v26, 0x3f000000    # 0.5f

    goto/16 :goto_34

    .line 3680
    .restart local v26    # "wpx":F
    :cond_207
    const/high16 v27, -0x40800000    # -1.0f

    goto/16 :goto_3b

    .line 3682
    .restart local v11    # "availw":I
    .restart local v27    # "wpxs":F
    :cond_20b
    const/16 v22, 0x0

    goto/16 :goto_56

    .line 3686
    .restart local v22    # "offset":I
    :cond_20f
    const/4 v12, 0x0

    goto/16 :goto_65

    .line 3698
    :cond_212
    const/high16 v28, 0x3f000000    # 0.5f

    goto/16 :goto_bc

    .line 3699
    .restart local v28    # "wpy":F
    :cond_216
    const/high16 v29, -0x40800000    # -1.0f

    goto/16 :goto_c3

    .line 3701
    .restart local v10    # "availh":I
    .restart local v29    # "wpys":F
    :cond_21a
    const/16 v22, 0x0

    goto/16 :goto_de

    .line 3769
    :catch_21e
    move-exception v4

    goto :goto_202

    .line 3744
    .restart local v24    # "start":J
    :catch_220
    move-exception v4

    goto :goto_1c6
.end method

.method updateWallpaperVisibilityLocked(I)V
    .registers 15
    .param p1, "displayId"    # I

    .prologue
    .line 3941
    iget-object v6, p0, mWallpaperTokens:Ljava/util/ArrayList;

    .line 3942
    .local v6, "mWallpaperTokens":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/WindowToken;>;"
    iget-object v5, p0, mWallpaperTarget:Lcom/android/server/wm/WindowState;

    .line 3946
    .local v5, "mWallpaperTarget":Lcom/android/server/wm/WindowState;
    invoke-direct {p0, v5}, isWallpaperVisible(Lcom/android/server/wm/WindowState;)Z

    move-result v8

    .line 3947
    .local v8, "visible":Z
    invoke-virtual {v5}, Lcom/android/server/wm/WindowState;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    move-result-object v2

    .line 3948
    .local v2, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-nez v2, :cond_f

    .line 3974
    :cond_e
    return-void

    .line 3951
    :cond_f
    invoke-virtual {v2}, Lcom/android/server/wm/DisplayContent;->getDisplayInfo()Landroid/view/DisplayInfo;

    move-result-object v3

    .line 3952
    .local v3, "displayInfo":Landroid/view/DisplayInfo;
    iget v4, v3, Landroid/view/DisplayInfo;->logicalWidth:I

    .line 3953
    .local v4, "dw":I
    iget v1, v3, Landroid/view/DisplayInfo;->logicalHeight:I

    .line 3955
    .local v1, "dh":I
    invoke-virtual {v6}, Ljava/util/ArrayList;->size()I

    move-result v12

    add-int/lit8 v0, v12, -0x1

    .local v0, "curTokenNdx":I
    :goto_1d
    if-ltz v0, :cond_e

    .line 3956
    invoke-virtual {v6, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v7

    check-cast v7, Lcom/android/server/wm/WindowToken;

    .line 3957
    .local v7, "token":Lcom/android/server/wm/WindowToken;
    iget-boolean v12, v7, Lcom/android/server/wm/WindowToken;->hidden:Z

    if-ne v12, v8, :cond_31

    .line 3958
    if-nez v8, :cond_4d

    const/4 v12, 0x1

    :goto_2c
    iput-boolean v12, v7, Lcom/android/server/wm/WindowToken;->hidden:Z

    .line 3961
    const/4 v12, 0x1

    iput-boolean v12, v2, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    .line 3964
    :cond_31
    iget-object v11, v7, Lcom/android/server/wm/WindowToken;->windows:Lcom/android/server/wm/WindowList;

    .line 3965
    .local v11, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual {v11}, Lcom/android/server/wm/WindowList;->size()I

    move-result v12

    add-int/lit8 v10, v12, -0x1

    .local v10, "wallpaperNdx":I
    :goto_39
    if-ltz v10, :cond_4f

    .line 3966
    invoke-virtual {v11, v10}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v9

    check-cast v9, Lcom/android/server/wm/WindowState;

    .line 3967
    .local v9, "wallpaper":Lcom/android/server/wm/WindowState;
    if-eqz v8, :cond_47

    .line 3968
    const/4 v12, 0x0

    invoke-virtual {p0, v9, v4, v1, v12}, updateWallpaperOffsetLocked(Lcom/android/server/wm/WindowState;IIZ)Z

    .line 3971
    :cond_47
    invoke-virtual {p0, v9, v8}, dispatchWallpaperVisibility(Lcom/android/server/wm/WindowState;Z)V

    .line 3965
    add-int/lit8 v10, v10, -0x1

    goto :goto_39

    .line 3958
    .end local v9    # "wallpaper":Lcom/android/server/wm/WindowState;
    .end local v10    # "wallpaperNdx":I
    .end local v11    # "windows":Lcom/android/server/wm/WindowList;
    :cond_4d
    const/4 v12, 0x0

    goto :goto_2c

    .line 3955
    .restart local v10    # "wallpaperNdx":I
    .restart local v11    # "windows":Lcom/android/server/wm/WindowList;
    :cond_4f
    add-int/lit8 v0, v0, -0x1

    goto :goto_1d
.end method

.method public validateAppTokens(ILjava/util/List;)V
    .registers 22
    .param p1, "stackId"    # I
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(I",
            "Ljava/util/List",
            "<",
            "Lcom/android/server/wm/TaskGroup;",
            ">;)V"
        }
    .end annotation

    .prologue
    .line 6149
    .local p2, "tasks":Ljava/util/List;, "Ljava/util/List<Lcom/android/server/wm/TaskGroup;>;"
    move-object/from16 v0, p0

    iget-object v0, v0, mWindowMap:Ljava/util/HashMap;

    move-object/from16 v16, v0

    monitor-enter v16

    .line 6150
    :try_start_7
    invoke-interface/range {p2 .. p2}, Ljava/util/List;->size()I

    move-result v15

    add-int/lit8 v7, v15, -0x1

    .line 6151
    .local v7, "t":I
    if-gez v7, :cond_1b

    .line 6152
    const-string v15, "WindowManager"

    const-string/jumbo v17, "validateAppTokens: empty task list"

    move-object/from16 v0, v17

    invoke-static {v15, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 6153
    monitor-exit v16

    .line 6206
    :goto_1a
    return-void

    .line 6156
    :cond_1b
    const/4 v15, 0x0

    move-object/from16 v0, p2

    invoke-interface {v0, v15}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v9

    check-cast v9, Lcom/android/server/wm/TaskGroup;

    .line 6157
    .local v9, "task":Lcom/android/server/wm/TaskGroup;
    iget v10, v9, Lcom/android/server/wm/TaskGroup;->taskId:I

    .line 6158
    .local v10, "taskId":I
    move-object/from16 v0, p0

    iget-object v15, v0, mTaskIdToTask:Landroid/util/SparseArray;

    invoke-virtual {v15, v10}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v8

    check-cast v8, Lcom/android/server/wm/Task;

    .line 6159
    .local v8, "targetTask":Lcom/android/server/wm/Task;
    invoke-virtual {v8}, Lcom/android/server/wm/Task;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    move-result-object v3

    .line 6160
    .local v3, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-nez v3, :cond_58

    .line 6161
    const-string v15, "WindowManager"

    new-instance v17, Ljava/lang/StringBuilder;

    invoke-direct/range {v17 .. v17}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v18, "validateAppTokens: no Display for taskId="

    invoke-virtual/range {v17 .. v18}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v17

    move-object/from16 v0, v17

    invoke-virtual {v0, v10}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v17

    invoke-virtual/range {v17 .. v17}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v17

    move-object/from16 v0, v17

    invoke-static {v15, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 6162
    monitor-exit v16

    goto :goto_1a

    .line 6205
    .end local v3    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v7    # "t":I
    .end local v8    # "targetTask":Lcom/android/server/wm/Task;
    .end local v9    # "task":Lcom/android/server/wm/TaskGroup;
    .end local v10    # "taskId":I
    :catchall_55
    move-exception v15

    monitor-exit v16
    :try_end_57
    .catchall {:try_start_7 .. :try_end_57} :catchall_55

    throw v15

    .line 6165
    .restart local v3    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .restart local v7    # "t":I
    .restart local v8    # "targetTask":Lcom/android/server/wm/Task;
    .restart local v9    # "task":Lcom/android/server/wm/TaskGroup;
    .restart local v10    # "taskId":I
    :cond_58
    :try_start_58
    move-object/from16 v0, p0

    iget-object v15, v0, mStackIdToStack:Landroid/util/SparseArray;

    move/from16 v0, p1

    invoke-virtual {v15, v0}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v15

    check-cast v15, Lcom/android/server/wm/TaskStack;

    invoke-virtual {v15}, Lcom/android/server/wm/TaskStack;->getTasks()Ljava/util/ArrayList;

    move-result-object v5

    .line 6167
    .local v5, "localTasks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/Task;>;"
    invoke-virtual {v5}, Ljava/util/ArrayList;->size()I

    move-result v15

    add-int/lit8 v11, v15, -0x1

    .local v11, "taskNdx":I
    :goto_6e
    if-ltz v11, :cond_d1

    if-ltz v7, :cond_d1

    .line 6168
    invoke-virtual {v5, v11}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v15

    check-cast v15, Lcom/android/server/wm/Task;

    iget-object v6, v15, Lcom/android/server/wm/Task;->mAppTokens:Lcom/android/server/wm/AppTokenList;

    .line 6169
    .local v6, "localTokens":Lcom/android/server/wm/AppTokenList;
    move-object/from16 v0, p2

    invoke-interface {v0, v7}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v9

    .end local v9    # "task":Lcom/android/server/wm/TaskGroup;
    check-cast v9, Lcom/android/server/wm/TaskGroup;

    .line 6170
    .restart local v9    # "task":Lcom/android/server/wm/TaskGroup;
    iget-object v13, v9, Lcom/android/server/wm/TaskGroup;->tokens:Ljava/util/ArrayList;

    .line 6172
    .local v13, "tokens":Ljava/util/List;, "Ljava/util/List<Landroid/view/IApplicationToken;>;"
    move-object v4, v3

    .line 6173
    .local v4, "lastDisplayContent":Lcom/android/server/wm/DisplayContent;
    move-object/from16 v0, p0

    iget-object v15, v0, mTaskIdToTask:Landroid/util/SparseArray;

    invoke-virtual {v15, v10}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v15

    check-cast v15, Lcom/android/server/wm/Task;

    invoke-virtual {v15}, Lcom/android/server/wm/Task;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    move-result-object v3

    .line 6174
    if-eq v3, v4, :cond_a2

    .line 6175
    const-string v15, "WindowManager"

    const-string/jumbo v17, "validateAppTokens: displayContent changed in TaskGroup list!"

    move-object/from16 v0, v17

    invoke-static {v15, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 6176
    monitor-exit v16

    goto/16 :goto_1a

    .line 6181
    :cond_a2
    invoke-virtual {v6}, Lcom/android/server/wm/AppTokenList;->size()I

    move-result v15

    add-int/lit8 v12, v15, -0x1

    .local v12, "tokenNdx":I
    iget-object v15, v9, Lcom/android/server/wm/TaskGroup;->tokens:Ljava/util/ArrayList;

    invoke-virtual {v15}, Ljava/util/ArrayList;->size()I

    move-result v15

    add-int/lit8 v14, v15, -0x1

    .line 6182
    .local v14, "v":I
    :goto_b0
    if-ltz v12, :cond_cd

    if-ltz v14, :cond_cd

    .line 6183
    invoke-virtual {v6, v12}, Lcom/android/server/wm/AppTokenList;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/wm/AppWindowToken;

    .line 6184
    .local v2, "atoken":Lcom/android/server/wm/AppWindowToken;
    iget-boolean v15, v2, Lcom/android/server/wm/AppWindowToken;->removed:Z

    if-eqz v15, :cond_c1

    .line 6185
    add-int/lit8 v12, v12, -0x1

    .line 6186
    goto :goto_b0

    .line 6188
    :cond_c1
    invoke-interface {v13, v14}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v15

    iget-object v0, v2, Lcom/android/server/wm/AppWindowToken;->token:Landroid/os/IBinder;

    move-object/from16 v17, v0

    move-object/from16 v0, v17

    if-eq v15, v0, :cond_135

    .line 6195
    .end local v2    # "atoken":Lcom/android/server/wm/AppWindowToken;
    :cond_cd
    if-gez v12, :cond_d1

    if-ltz v14, :cond_13b

    .line 6200
    .end local v4    # "lastDisplayContent":Lcom/android/server/wm/DisplayContent;
    .end local v6    # "localTokens":Lcom/android/server/wm/AppTokenList;
    .end local v12    # "tokenNdx":I
    .end local v13    # "tokens":Ljava/util/List;, "Ljava/util/List<Landroid/view/IApplicationToken;>;"
    .end local v14    # "v":I
    :cond_d1
    if-gez v11, :cond_d5

    if-ltz v7, :cond_132

    .line 6201
    :cond_d5
    const-string v15, "WindowManager"

    new-instance v17, Ljava/lang/StringBuilder;

    invoke-direct/range {v17 .. v17}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v18, "validateAppTokens: Mismatch! ActivityManager="

    invoke-virtual/range {v17 .. v18}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v17

    move-object/from16 v0, v17

    move-object/from16 v1, p2

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v17

    invoke-virtual/range {v17 .. v17}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v17

    move-object/from16 v0, v17

    invoke-static {v15, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 6202
    const-string v15, "WindowManager"

    new-instance v17, Ljava/lang/StringBuilder;

    invoke-direct/range {v17 .. v17}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v18, "validateAppTokens: Mismatch! WindowManager="

    invoke-virtual/range {v17 .. v18}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v17

    move-object/from16 v0, v17

    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v17

    invoke-virtual/range {v17 .. v17}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v17

    move-object/from16 v0, v17

    invoke-static {v15, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 6203
    const-string v15, "WindowManager"

    new-instance v17, Ljava/lang/StringBuilder;

    invoke-direct/range {v17 .. v17}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v18, "validateAppTokens: Mismatch! Callers="

    invoke-virtual/range {v17 .. v18}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v17

    const/16 v18, 0x4

    invoke-static/range {v18 .. v18}, Landroid/os/Debug;->getCallers(I)Ljava/lang/String;

    move-result-object v18

    invoke-virtual/range {v17 .. v18}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v17

    invoke-virtual/range {v17 .. v17}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v17

    move-object/from16 v0, v17

    invoke-static {v15, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 6205
    :cond_132
    monitor-exit v16
    :try_end_133
    .catchall {:try_start_58 .. :try_end_133} :catchall_55

    goto/16 :goto_1a

    .line 6191
    .restart local v2    # "atoken":Lcom/android/server/wm/AppWindowToken;
    .restart local v4    # "lastDisplayContent":Lcom/android/server/wm/DisplayContent;
    .restart local v6    # "localTokens":Lcom/android/server/wm/AppTokenList;
    .restart local v12    # "tokenNdx":I
    .restart local v13    # "tokens":Ljava/util/List;, "Ljava/util/List<Landroid/view/IApplicationToken;>;"
    .restart local v14    # "v":I
    :cond_135
    add-int/lit8 v12, v12, -0x1

    .line 6192
    add-int/lit8 v14, v14, -0x1

    .line 6193
    goto/16 :goto_b0

    .line 6167
    .end local v2    # "atoken":Lcom/android/server/wm/AppWindowToken;
    :cond_13b
    add-int/lit8 v11, v11, -0x1

    add-int/lit8 v7, v7, -0x1

    goto/16 :goto_6e
.end method

.method public validateStackOrder([Ljava/lang/Integer;)V
    .registers 2
    .param p1, "remoteStackIds"    # [Ljava/lang/Integer;

    .prologue
    .line 6210
    return-void
.end method

.method viewServerGetFocusedWindow(Ljava/net/Socket;)Z
    .registers 10
    .param p1, "client"    # Ljava/net/Socket;

    .prologue
    .line 12223
    invoke-direct {p0}, isSystemSecure()Z

    move-result v6

    if-eqz v6, :cond_8

    .line 12224
    const/4 v5, 0x0

    .line 12257
    :cond_7
    :goto_7
    return v5

    .line 12227
    :cond_8
    const/4 v5, 0x1

    .line 12229
    .local v5, "result":Z
    invoke-direct {p0}, getFocusedWindow()Lcom/android/server/wm/WindowState;

    move-result-object v2

    .line 12231
    .local v2, "focusedWindow":Lcom/android/server/wm/WindowState;
    const/4 v3, 0x0

    .line 12235
    .local v3, "out":Ljava/io/BufferedWriter;
    :try_start_e
    invoke-virtual {p1}, Ljava/net/Socket;->getOutputStream()Ljava/io/OutputStream;

    move-result-object v0

    .line 12236
    .local v0, "clientStream":Ljava/io/OutputStream;
    new-instance v4, Ljava/io/BufferedWriter;

    new-instance v6, Ljava/io/OutputStreamWriter;

    invoke-direct {v6, v0}, Ljava/io/OutputStreamWriter;-><init>(Ljava/io/OutputStream;)V

    const/16 v7, 0x2000

    invoke-direct {v4, v6, v7}, Ljava/io/BufferedWriter;-><init>(Ljava/io/Writer;I)V
    :try_end_1e
    .catch Ljava/lang/Exception; {:try_start_e .. :try_end_1e} :catch_4c
    .catchall {:try_start_e .. :try_end_1e} :catchall_57

    .line 12238
    .end local v3    # "out":Ljava/io/BufferedWriter;
    .local v4, "out":Ljava/io/BufferedWriter;
    if-eqz v2, :cond_39

    .line 12239
    :try_start_20
    invoke-static {v2}, Ljava/lang/System;->identityHashCode(Ljava/lang/Object;)I

    move-result v6

    invoke-static {v6}, Ljava/lang/Integer;->toHexString(I)Ljava/lang/String;

    move-result-object v6

    invoke-virtual {v4, v6}, Ljava/io/BufferedWriter;->write(Ljava/lang/String;)V

    .line 12240
    const/16 v6, 0x20

    invoke-virtual {v4, v6}, Ljava/io/BufferedWriter;->write(I)V

    .line 12241
    iget-object v6, v2, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    invoke-virtual {v6}, Landroid/view/WindowManager$LayoutParams;->getTitle()Ljava/lang/CharSequence;

    move-result-object v6

    invoke-virtual {v4, v6}, Ljava/io/BufferedWriter;->append(Ljava/lang/CharSequence;)Ljava/io/Writer;

    .line 12243
    :cond_39
    const/16 v6, 0xa

    invoke-virtual {v4, v6}, Ljava/io/BufferedWriter;->write(I)V

    .line 12244
    invoke-virtual {v4}, Ljava/io/BufferedWriter;->flush()V
    :try_end_41
    .catch Ljava/lang/Exception; {:try_start_20 .. :try_end_41} :catch_64
    .catchall {:try_start_20 .. :try_end_41} :catchall_61

    .line 12248
    if-eqz v4, :cond_67

    .line 12250
    :try_start_43
    invoke-virtual {v4}, Ljava/io/BufferedWriter;->close()V
    :try_end_46
    .catch Ljava/io/IOException; {:try_start_43 .. :try_end_46} :catch_48

    move-object v3, v4

    .line 12253
    .end local v4    # "out":Ljava/io/BufferedWriter;
    .restart local v3    # "out":Ljava/io/BufferedWriter;
    goto :goto_7

    .line 12251
    .end local v3    # "out":Ljava/io/BufferedWriter;
    .restart local v4    # "out":Ljava/io/BufferedWriter;
    :catch_48
    move-exception v1

    .line 12252
    .local v1, "e":Ljava/io/IOException;
    const/4 v5, 0x0

    move-object v3, v4

    .line 12253
    .end local v4    # "out":Ljava/io/BufferedWriter;
    .restart local v3    # "out":Ljava/io/BufferedWriter;
    goto :goto_7

    .line 12245
    .end local v0    # "clientStream":Ljava/io/OutputStream;
    .end local v1    # "e":Ljava/io/IOException;
    :catch_4c
    move-exception v1

    .line 12246
    .local v1, "e":Ljava/lang/Exception;
    :goto_4d
    const/4 v5, 0x0

    .line 12248
    if-eqz v3, :cond_7

    .line 12250
    :try_start_50
    invoke-virtual {v3}, Ljava/io/BufferedWriter;->close()V
    :try_end_53
    .catch Ljava/io/IOException; {:try_start_50 .. :try_end_53} :catch_54

    goto :goto_7

    .line 12251
    :catch_54
    move-exception v1

    .line 12252
    .local v1, "e":Ljava/io/IOException;
    const/4 v5, 0x0

    .line 12253
    goto :goto_7

    .line 12248
    .end local v1    # "e":Ljava/io/IOException;
    :catchall_57
    move-exception v6

    :goto_58
    if-eqz v3, :cond_5d

    .line 12250
    :try_start_5a
    invoke-virtual {v3}, Ljava/io/BufferedWriter;->close()V
    :try_end_5d
    .catch Ljava/io/IOException; {:try_start_5a .. :try_end_5d} :catch_5e

    .line 12253
    :cond_5d
    :goto_5d
    throw v6

    .line 12251
    :catch_5e
    move-exception v1

    .line 12252
    .restart local v1    # "e":Ljava/io/IOException;
    const/4 v5, 0x0

    goto :goto_5d

    .line 12248
    .end local v1    # "e":Ljava/io/IOException;
    .end local v3    # "out":Ljava/io/BufferedWriter;
    .restart local v0    # "clientStream":Ljava/io/OutputStream;
    .restart local v4    # "out":Ljava/io/BufferedWriter;
    :catchall_61
    move-exception v6

    move-object v3, v4

    .end local v4    # "out":Ljava/io/BufferedWriter;
    .restart local v3    # "out":Ljava/io/BufferedWriter;
    goto :goto_58

    .line 12245
    .end local v3    # "out":Ljava/io/BufferedWriter;
    .restart local v4    # "out":Ljava/io/BufferedWriter;
    :catch_64
    move-exception v1

    move-object v3, v4

    .end local v4    # "out":Ljava/io/BufferedWriter;
    .restart local v3    # "out":Ljava/io/BufferedWriter;
    goto :goto_4d

    .end local v3    # "out":Ljava/io/BufferedWriter;
    .restart local v4    # "out":Ljava/io/BufferedWriter;
    :cond_67
    move-object v3, v4

    .end local v4    # "out":Ljava/io/BufferedWriter;
    .restart local v3    # "out":Ljava/io/BufferedWriter;
    goto :goto_7
.end method

.method viewServerListWindows(Ljava/net/Socket;)Z
    .registers 16
    .param p1, "client"    # Ljava/net/Socket;

    .prologue
    .line 12165
    invoke-direct {p0}, isSystemSecure()Z

    move-result v12

    if-eqz v12, :cond_8

    .line 12166
    const/4 v9, 0x0

    .line 12211
    :cond_7
    :goto_7
    return v9

    .line 12169
    :cond_8
    const/4 v9, 0x1

    .line 12171
    .local v9, "result":Z
    new-instance v11, Lcom/android/server/wm/WindowList;

    invoke-direct {v11}, Lcom/android/server/wm/WindowList;-><init>()V

    .line 12172
    .local v11, "windows":Lcom/android/server/wm/WindowList;
    iget-object v13, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v13

    .line 12174
    :try_start_11
    iget-object v12, p0, mDisplayContents:Landroid/util/SparseArray;

    invoke-virtual {v12}, Landroid/util/SparseArray;->size()I

    move-result v6

    .line 12175
    .local v6, "numDisplays":I
    const/4 v3, 0x0

    .local v3, "displayNdx":I
    :goto_18
    if-ge v3, v6, :cond_2c

    .line 12176
    iget-object v12, p0, mDisplayContents:Landroid/util/SparseArray;

    invoke-virtual {v12, v3}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/wm/DisplayContent;

    .line 12177
    .local v2, "displayContent":Lcom/android/server/wm/DisplayContent;
    invoke-virtual {v2}, Lcom/android/server/wm/DisplayContent;->getWindowList()Lcom/android/server/wm/WindowList;

    move-result-object v12

    invoke-virtual {v11, v12}, Lcom/android/server/wm/WindowList;->addAll(Ljava/util/Collection;)Z

    .line 12175
    add-int/lit8 v3, v3, 0x1

    goto :goto_18

    .line 12179
    .end local v2    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :cond_2c
    monitor-exit v13
    :try_end_2d
    .catchall {:try_start_11 .. :try_end_2d} :catchall_6c

    .line 12181
    const/4 v7, 0x0

    .line 12185
    .local v7, "out":Ljava/io/BufferedWriter;
    :try_start_2e
    invoke-virtual {p1}, Ljava/net/Socket;->getOutputStream()Ljava/io/OutputStream;

    move-result-object v0

    .line 12186
    .local v0, "clientStream":Ljava/io/OutputStream;
    new-instance v8, Ljava/io/BufferedWriter;

    new-instance v12, Ljava/io/OutputStreamWriter;

    invoke-direct {v12, v0}, Ljava/io/OutputStreamWriter;-><init>(Ljava/io/OutputStream;)V

    const/16 v13, 0x2000

    invoke-direct {v8, v12, v13}, Ljava/io/BufferedWriter;-><init>(Ljava/io/Writer;I)V
    :try_end_3e
    .catch Ljava/lang/Exception; {:try_start_2e .. :try_end_3e} :catch_82
    .catchall {:try_start_2e .. :try_end_3e} :catchall_8f

    .line 12188
    .end local v7    # "out":Ljava/io/BufferedWriter;
    .local v8, "out":Ljava/io/BufferedWriter;
    :try_start_3e
    invoke-virtual {v11}, Lcom/android/server/wm/WindowList;->size()I

    move-result v1

    .line 12189
    .local v1, "count":I
    const/4 v5, 0x0

    .local v5, "i":I
    :goto_43
    if-ge v5, v1, :cond_6f

    .line 12190
    invoke-virtual {v11, v5}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v10

    check-cast v10, Lcom/android/server/wm/WindowState;

    .line 12191
    .local v10, "w":Lcom/android/server/wm/WindowState;
    invoke-static {v10}, Ljava/lang/System;->identityHashCode(Ljava/lang/Object;)I

    move-result v12

    invoke-static {v12}, Ljava/lang/Integer;->toHexString(I)Ljava/lang/String;

    move-result-object v12

    invoke-virtual {v8, v12}, Ljava/io/BufferedWriter;->write(Ljava/lang/String;)V

    .line 12192
    const/16 v12, 0x20

    invoke-virtual {v8, v12}, Ljava/io/BufferedWriter;->write(I)V

    .line 12193
    iget-object v12, v10, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    invoke-virtual {v12}, Landroid/view/WindowManager$LayoutParams;->getTitle()Ljava/lang/CharSequence;

    move-result-object v12

    invoke-virtual {v8, v12}, Ljava/io/BufferedWriter;->append(Ljava/lang/CharSequence;)Ljava/io/Writer;

    .line 12194
    const/16 v12, 0xa

    invoke-virtual {v8, v12}, Ljava/io/BufferedWriter;->write(I)V
    :try_end_69
    .catch Ljava/lang/Exception; {:try_start_3e .. :try_end_69} :catch_9c
    .catchall {:try_start_3e .. :try_end_69} :catchall_99

    .line 12189
    add-int/lit8 v5, v5, 0x1

    goto :goto_43

    .line 12179
    .end local v0    # "clientStream":Ljava/io/OutputStream;
    .end local v1    # "count":I
    .end local v3    # "displayNdx":I
    .end local v5    # "i":I
    .end local v6    # "numDisplays":I
    .end local v8    # "out":Ljava/io/BufferedWriter;
    .end local v10    # "w":Lcom/android/server/wm/WindowState;
    :catchall_6c
    move-exception v12

    :try_start_6d
    monitor-exit v13
    :try_end_6e
    .catchall {:try_start_6d .. :try_end_6e} :catchall_6c

    throw v12

    .line 12197
    .restart local v0    # "clientStream":Ljava/io/OutputStream;
    .restart local v1    # "count":I
    .restart local v3    # "displayNdx":I
    .restart local v5    # "i":I
    .restart local v6    # "numDisplays":I
    .restart local v8    # "out":Ljava/io/BufferedWriter;
    :cond_6f
    :try_start_6f
    const-string v12, "DONE.\n"

    invoke-virtual {v8, v12}, Ljava/io/BufferedWriter;->write(Ljava/lang/String;)V

    .line 12198
    invoke-virtual {v8}, Ljava/io/BufferedWriter;->flush()V
    :try_end_77
    .catch Ljava/lang/Exception; {:try_start_6f .. :try_end_77} :catch_9c
    .catchall {:try_start_6f .. :try_end_77} :catchall_99

    .line 12202
    if-eqz v8, :cond_9f

    .line 12204
    :try_start_79
    invoke-virtual {v8}, Ljava/io/BufferedWriter;->close()V
    :try_end_7c
    .catch Ljava/io/IOException; {:try_start_79 .. :try_end_7c} :catch_7e

    move-object v7, v8

    .line 12207
    .end local v8    # "out":Ljava/io/BufferedWriter;
    .restart local v7    # "out":Ljava/io/BufferedWriter;
    goto :goto_7

    .line 12205
    .end local v7    # "out":Ljava/io/BufferedWriter;
    .restart local v8    # "out":Ljava/io/BufferedWriter;
    :catch_7e
    move-exception v4

    .line 12206
    .local v4, "e":Ljava/io/IOException;
    const/4 v9, 0x0

    move-object v7, v8

    .line 12207
    .end local v8    # "out":Ljava/io/BufferedWriter;
    .restart local v7    # "out":Ljava/io/BufferedWriter;
    goto :goto_7

    .line 12199
    .end local v0    # "clientStream":Ljava/io/OutputStream;
    .end local v1    # "count":I
    .end local v4    # "e":Ljava/io/IOException;
    .end local v5    # "i":I
    :catch_82
    move-exception v4

    .line 12200
    .local v4, "e":Ljava/lang/Exception;
    :goto_83
    const/4 v9, 0x0

    .line 12202
    if-eqz v7, :cond_7

    .line 12204
    :try_start_86
    invoke-virtual {v7}, Ljava/io/BufferedWriter;->close()V
    :try_end_89
    .catch Ljava/io/IOException; {:try_start_86 .. :try_end_89} :catch_8b

    goto/16 :goto_7

    .line 12205
    :catch_8b
    move-exception v4

    .line 12206
    .local v4, "e":Ljava/io/IOException;
    const/4 v9, 0x0

    .line 12207
    goto/16 :goto_7

    .line 12202
    .end local v4    # "e":Ljava/io/IOException;
    :catchall_8f
    move-exception v12

    :goto_90
    if-eqz v7, :cond_95

    .line 12204
    :try_start_92
    invoke-virtual {v7}, Ljava/io/BufferedWriter;->close()V
    :try_end_95
    .catch Ljava/io/IOException; {:try_start_92 .. :try_end_95} :catch_96

    .line 12207
    :cond_95
    :goto_95
    throw v12

    .line 12205
    :catch_96
    move-exception v4

    .line 12206
    .restart local v4    # "e":Ljava/io/IOException;
    const/4 v9, 0x0

    goto :goto_95

    .line 12202
    .end local v4    # "e":Ljava/io/IOException;
    .end local v7    # "out":Ljava/io/BufferedWriter;
    .restart local v0    # "clientStream":Ljava/io/OutputStream;
    .restart local v8    # "out":Ljava/io/BufferedWriter;
    :catchall_99
    move-exception v12

    move-object v7, v8

    .end local v8    # "out":Ljava/io/BufferedWriter;
    .restart local v7    # "out":Ljava/io/BufferedWriter;
    goto :goto_90

    .line 12199
    .end local v7    # "out":Ljava/io/BufferedWriter;
    .restart local v8    # "out":Ljava/io/BufferedWriter;
    :catch_9c
    move-exception v4

    move-object v7, v8

    .end local v8    # "out":Ljava/io/BufferedWriter;
    .restart local v7    # "out":Ljava/io/BufferedWriter;
    goto :goto_83

    .end local v7    # "out":Ljava/io/BufferedWriter;
    .restart local v1    # "count":I
    .restart local v5    # "i":I
    .restart local v8    # "out":Ljava/io/BufferedWriter;
    :cond_9f
    move-object v7, v8

    .end local v8    # "out":Ljava/io/BufferedWriter;
    .restart local v7    # "out":Ljava/io/BufferedWriter;
    goto/16 :goto_7
.end method

.method viewServerWindowCommand(Ljava/net/Socket;Ljava/lang/String;Ljava/lang/String;)Z
    .registers 20
    .param p1, "client"    # Ljava/net/Socket;
    .param p2, "command"    # Ljava/lang/String;
    .param p3, "parameters"    # Ljava/lang/String;

    .prologue
    .line 12281
    invoke-direct/range {p0 .. p0}, isSystemSecure()Z

    move-result v13

    if-eqz v13, :cond_8

    .line 12282
    const/4 v11, 0x0

    .line 12353
    :cond_7
    :goto_7
    return v11

    .line 12285
    :cond_8
    const/4 v11, 0x1

    .line 12286
    .local v11, "success":Z
    const/4 v4, 0x0

    .line 12287
    .local v4, "data":Landroid/os/Parcel;
    const/4 v10, 0x0

    .line 12289
    .local v10, "reply":Landroid/os/Parcel;
    const/4 v8, 0x0

    .line 12294
    .local v8, "out":Ljava/io/BufferedWriter;
    const/16 v13, 0x20

    :try_start_e
    move-object/from16 v0, p3

    invoke-virtual {v0, v13}, Ljava/lang/String;->indexOf(I)I

    move-result v7

    .line 12295
    .local v7, "index":I
    const/4 v13, -0x1

    if-ne v7, v13, :cond_1b

    .line 12296
    invoke-virtual/range {p3 .. p3}, Ljava/lang/String;->length()I

    move-result v7

    .line 12298
    :cond_1b
    const/4 v13, 0x0

    move-object/from16 v0, p3

    invoke-virtual {v0, v13, v7}, Ljava/lang/String;->substring(II)Ljava/lang/String;

    move-result-object v3

    .line 12299
    .local v3, "code":Ljava/lang/String;
    const/16 v13, 0x10

    invoke-static {v3, v13}, Ljava/lang/Long;->parseLong(Ljava/lang/String;I)J

    move-result-wide v14

    long-to-int v6, v14

    .line 12302
    .local v6, "hashCode":I
    invoke-virtual/range {p3 .. p3}, Ljava/lang/String;->length()I

    move-result v13

    if-ge v7, v13, :cond_52

    .line 12303
    add-int/lit8 v13, v7, 0x1

    move-object/from16 v0, p3

    invoke-virtual {v0, v13}, Ljava/lang/String;->substring(I)Ljava/lang/String;

    move-result-object p3

    .line 12308
    :goto_37
    move-object/from16 v0, p0

    invoke-direct {v0, v6}, findWindow(I)Lcom/android/server/wm/WindowState;
    :try_end_3c
    .catch Ljava/lang/Exception; {:try_start_e .. :try_end_3c} :catch_b7
    .catchall {:try_start_e .. :try_end_3c} :catchall_f3

    move-result-object v12

    .line 12309
    .local v12, "window":Lcom/android/server/wm/WindowState;
    if-nez v12, :cond_55

    .line 12310
    const/4 v11, 0x0

    .line 12338
    .end local v11    # "success":Z
    if-eqz v4, :cond_45

    .line 12339
    invoke-virtual {v4}, Landroid/os/Parcel;->recycle()V

    .line 12341
    :cond_45
    if-eqz v10, :cond_4a

    .line 12342
    invoke-virtual {v10}, Landroid/os/Parcel;->recycle()V

    .line 12344
    :cond_4a
    if-eqz v8, :cond_7

    .line 12346
    :try_start_4c
    invoke-virtual {v8}, Ljava/io/BufferedWriter;->close()V
    :try_end_4f
    .catch Ljava/io/IOException; {:try_start_4c .. :try_end_4f} :catch_50

    goto :goto_7

    .line 12347
    :catch_50
    move-exception v13

    goto :goto_7

    .line 12305
    .end local v12    # "window":Lcom/android/server/wm/WindowState;
    .restart local v11    # "success":Z
    :cond_52
    :try_start_52
    const-string p3, ""

    goto :goto_37

    .line 12313
    .restart local v12    # "window":Lcom/android/server/wm/WindowState;
    :cond_55
    invoke-static {}, Landroid/os/Parcel;->obtain()Landroid/os/Parcel;

    move-result-object v4

    .line 12314
    const-string v13, "android.view.IWindow"

    invoke-virtual {v4, v13}, Landroid/os/Parcel;->writeInterfaceToken(Ljava/lang/String;)V

    .line 12315
    move-object/from16 v0, p2

    invoke-virtual {v4, v0}, Landroid/os/Parcel;->writeString(Ljava/lang/String;)V

    .line 12316
    move-object/from16 v0, p3

    invoke-virtual {v4, v0}, Landroid/os/Parcel;->writeString(Ljava/lang/String;)V

    .line 12317
    const/4 v13, 0x1

    invoke-virtual {v4, v13}, Landroid/os/Parcel;->writeInt(I)V

    .line 12318
    invoke-static/range {p1 .. p1}, Landroid/os/ParcelFileDescriptor;->fromSocket(Ljava/net/Socket;)Landroid/os/ParcelFileDescriptor;

    move-result-object v13

    const/4 v14, 0x0

    invoke-virtual {v13, v4, v14}, Landroid/os/ParcelFileDescriptor;->writeToParcel(Landroid/os/Parcel;I)V

    .line 12320
    invoke-static {}, Landroid/os/Parcel;->obtain()Landroid/os/Parcel;

    move-result-object v10

    .line 12322
    iget-object v13, v12, Lcom/android/server/wm/WindowState;->mClient:Landroid/view/IWindow;

    invoke-interface {v13}, Landroid/view/IWindow;->asBinder()Landroid/os/IBinder;

    move-result-object v2

    .line 12324
    .local v2, "binder":Landroid/os/IBinder;
    const/4 v13, 0x1

    const/4 v14, 0x0

    invoke-interface {v2, v13, v4, v10, v14}, Landroid/os/IBinder;->transact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z

    .line 12326
    invoke-virtual {v10}, Landroid/os/Parcel;->readException()V

    .line 12328
    invoke-virtual/range {p1 .. p1}, Ljava/net/Socket;->isOutputShutdown()Z

    move-result v13

    if-nez v13, :cond_a3

    .line 12329
    new-instance v9, Ljava/io/BufferedWriter;

    new-instance v13, Ljava/io/OutputStreamWriter;

    invoke-virtual/range {p1 .. p1}, Ljava/net/Socket;->getOutputStream()Ljava/io/OutputStream;

    move-result-object v14

    invoke-direct {v13, v14}, Ljava/io/OutputStreamWriter;-><init>(Ljava/io/OutputStream;)V

    invoke-direct {v9, v13}, Ljava/io/BufferedWriter;-><init>(Ljava/io/Writer;)V
    :try_end_9a
    .catch Ljava/lang/Exception; {:try_start_52 .. :try_end_9a} :catch_b7
    .catchall {:try_start_52 .. :try_end_9a} :catchall_f3

    .line 12330
    .end local v8    # "out":Ljava/io/BufferedWriter;
    .local v9, "out":Ljava/io/BufferedWriter;
    :try_start_9a
    const-string v13, "DONE\n"

    invoke-virtual {v9, v13}, Ljava/io/BufferedWriter;->write(Ljava/lang/String;)V

    .line 12331
    invoke-virtual {v9}, Ljava/io/BufferedWriter;->flush()V
    :try_end_a2
    .catch Ljava/lang/Exception; {:try_start_9a .. :try_end_a2} :catch_109
    .catchall {:try_start_9a .. :try_end_a2} :catchall_106

    move-object v8, v9

    .line 12338
    .end local v9    # "out":Ljava/io/BufferedWriter;
    .restart local v8    # "out":Ljava/io/BufferedWriter;
    :cond_a3
    if-eqz v4, :cond_a8

    .line 12339
    invoke-virtual {v4}, Landroid/os/Parcel;->recycle()V

    .line 12341
    :cond_a8
    if-eqz v10, :cond_ad

    .line 12342
    invoke-virtual {v10}, Landroid/os/Parcel;->recycle()V

    .line 12344
    :cond_ad
    if-eqz v8, :cond_7

    .line 12346
    :try_start_af
    invoke-virtual {v8}, Ljava/io/BufferedWriter;->close()V
    :try_end_b2
    .catch Ljava/io/IOException; {:try_start_af .. :try_end_b2} :catch_b4

    goto/16 :goto_7

    .line 12347
    :catch_b4
    move-exception v13

    goto/16 :goto_7

    .line 12334
    .end local v2    # "binder":Landroid/os/IBinder;
    .end local v3    # "code":Ljava/lang/String;
    .end local v6    # "hashCode":I
    .end local v7    # "index":I
    .end local v12    # "window":Lcom/android/server/wm/WindowState;
    :catch_b7
    move-exception v5

    .line 12335
    .local v5, "e":Ljava/lang/Exception;
    :goto_b8
    :try_start_b8
    const-string v13, "WindowManager"

    new-instance v14, Ljava/lang/StringBuilder;

    invoke-direct {v14}, Ljava/lang/StringBuilder;-><init>()V

    const-string v15, "Could not send command "

    invoke-virtual {v14, v15}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v14

    move-object/from16 v0, p2

    invoke-virtual {v14, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v14

    const-string v15, " with parameters "

    invoke-virtual {v14, v15}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v14

    move-object/from16 v0, p3

    invoke-virtual {v14, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v14

    invoke-virtual {v14}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v14

    invoke-static {v13, v14, v5}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_de
    .catchall {:try_start_b8 .. :try_end_de} :catchall_f3

    .line 12336
    const/4 v11, 0x0

    .line 12338
    if-eqz v4, :cond_e4

    .line 12339
    invoke-virtual {v4}, Landroid/os/Parcel;->recycle()V

    .line 12341
    :cond_e4
    if-eqz v10, :cond_e9

    .line 12342
    invoke-virtual {v10}, Landroid/os/Parcel;->recycle()V

    .line 12344
    :cond_e9
    if-eqz v8, :cond_7

    .line 12346
    :try_start_eb
    invoke-virtual {v8}, Ljava/io/BufferedWriter;->close()V
    :try_end_ee
    .catch Ljava/io/IOException; {:try_start_eb .. :try_end_ee} :catch_f0

    goto/16 :goto_7

    .line 12347
    :catch_f0
    move-exception v13

    goto/16 :goto_7

    .line 12338
    .end local v5    # "e":Ljava/lang/Exception;
    :catchall_f3
    move-exception v13

    :goto_f4
    if-eqz v4, :cond_f9

    .line 12339
    invoke-virtual {v4}, Landroid/os/Parcel;->recycle()V

    .line 12341
    :cond_f9
    if-eqz v10, :cond_fe

    .line 12342
    invoke-virtual {v10}, Landroid/os/Parcel;->recycle()V

    .line 12344
    :cond_fe
    if-eqz v8, :cond_103

    .line 12346
    :try_start_100
    invoke-virtual {v8}, Ljava/io/BufferedWriter;->close()V
    :try_end_103
    .catch Ljava/io/IOException; {:try_start_100 .. :try_end_103} :catch_104

    .line 12349
    :cond_103
    :goto_103
    throw v13

    .line 12347
    :catch_104
    move-exception v14

    goto :goto_103

    .line 12338
    .end local v8    # "out":Ljava/io/BufferedWriter;
    .restart local v2    # "binder":Landroid/os/IBinder;
    .restart local v3    # "code":Ljava/lang/String;
    .restart local v6    # "hashCode":I
    .restart local v7    # "index":I
    .restart local v9    # "out":Ljava/io/BufferedWriter;
    .restart local v12    # "window":Lcom/android/server/wm/WindowState;
    :catchall_106
    move-exception v13

    move-object v8, v9

    .end local v9    # "out":Ljava/io/BufferedWriter;
    .restart local v8    # "out":Ljava/io/BufferedWriter;
    goto :goto_f4

    .line 12334
    .end local v8    # "out":Ljava/io/BufferedWriter;
    .restart local v9    # "out":Ljava/io/BufferedWriter;
    :catch_109
    move-exception v5

    move-object v8, v9

    .end local v9    # "out":Ljava/io/BufferedWriter;
    .restart local v8    # "out":Ljava/io/BufferedWriter;
    goto :goto_b8
.end method

.method wallpaperCommandComplete(Landroid/os/IBinder;Landroid/os/Bundle;)V
    .registers 7
    .param p1, "window"    # Landroid/os/IBinder;
    .param p2, "result"    # Landroid/os/Bundle;

    .prologue
    .line 5069
    iget-object v3, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v3

    .line 5071
    const/4 v0, 0x0

    .line 5072
    .local v0, "mWaitingOnWallpaper":Lcom/android/server/wm/WindowState;
    const/4 v1, 0x0

    .line 5080
    .local v1, "wis":Lcom/android/server/wm/WindowManagerService$WallpaperInnerState;
    :try_start_5
    iget-object v0, p0, mWaitingOnWallpaper:Lcom/android/server/wm/WindowState;

    .line 5083
    if-eqz v0, :cond_19

    iget-object v2, v0, Lcom/android/server/wm/WindowState;->mClient:Landroid/view/IWindow;

    invoke-interface {v2}, Landroid/view/IWindow;->asBinder()Landroid/os/IBinder;

    move-result-object v2

    if-ne v2, p1, :cond_19

    .line 5089
    const/4 v2, 0x0

    iput-object v2, p0, mWaitingOnWallpaper:Lcom/android/server/wm/WindowState;

    .line 5092
    iget-object v2, p0, mWindowMap:Ljava/util/HashMap;

    invoke-virtual {v2}, Ljava/lang/Object;->notifyAll()V

    .line 5094
    :cond_19
    monitor-exit v3

    .line 5095
    return-void

    .line 5094
    :catchall_1b
    move-exception v2

    monitor-exit v3
    :try_end_1d
    .catchall {:try_start_5 .. :try_end_1d} :catchall_1b

    throw v2
.end method

.method wallpaperOffsetsComplete(Landroid/os/IBinder;)V
    .registers 6
    .param p1, "window"    # Landroid/os/IBinder;

    .prologue
    .line 3777
    iget-object v3, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v3

    .line 3779
    const/4 v0, 0x0

    .line 3780
    .local v0, "mWaitingOnWallpaper":Lcom/android/server/wm/WindowState;
    const/4 v1, 0x0

    .line 3788
    .local v1, "wis":Lcom/android/server/wm/WindowManagerService$WallpaperInnerState;
    :try_start_5
    iget-object v0, p0, mWaitingOnWallpaper:Lcom/android/server/wm/WindowState;

    .line 3791
    if-eqz v0, :cond_19

    iget-object v2, v0, Lcom/android/server/wm/WindowState;->mClient:Landroid/view/IWindow;

    invoke-interface {v2}, Landroid/view/IWindow;->asBinder()Landroid/os/IBinder;

    move-result-object v2

    if-ne v2, p1, :cond_19

    .line 3797
    const/4 v2, 0x0

    iput-object v2, p0, mWaitingOnWallpaper:Lcom/android/server/wm/WindowState;

    .line 3800
    iget-object v2, p0, mWindowMap:Ljava/util/HashMap;

    invoke-virtual {v2}, Ljava/lang/Object;->notifyAll()V

    .line 3802
    :cond_19
    monitor-exit v3

    .line 3803
    return-void

    .line 3802
    :catchall_1b
    move-exception v2

    monitor-exit v3
    :try_end_1d
    .catchall {:try_start_5 .. :try_end_1d} :catchall_1b

    throw v2
.end method

.method public watchRotation(Landroid/view/IRotationWatcher;)I
    .registers 7
    .param p1, "watcher"    # Landroid/view/IRotationWatcher;

    .prologue
    .line 11899
    invoke-interface {p1}, Landroid/view/IRotationWatcher;->asBinder()Landroid/os/IBinder;

    move-result-object v1

    .line 11900
    .local v1, "watcherBinder":Landroid/os/IBinder;
    new-instance v0, Lcom/android/server/wm/WindowManagerService$9;

    invoke-direct {v0, p0, v1}, Lcom/android/server/wm/WindowManagerService$9;-><init>(Lcom/android/server/wm/WindowManagerService;Landroid/os/IBinder;)V

    .line 11918
    .local v0, "dr":Landroid/os/IBinder$DeathRecipient;
    iget-object v3, p0, mWindowMap:Ljava/util/HashMap;

    monitor-enter v3

    .line 11920
    :try_start_c
    invoke-interface {p1}, Landroid/view/IRotationWatcher;->asBinder()Landroid/os/IBinder;

    move-result-object v2

    const/4 v4, 0x0

    invoke-interface {v2, v0, v4}, Landroid/os/IBinder;->linkToDeath(Landroid/os/IBinder$DeathRecipient;I)V

    .line 11921
    iget-object v2, p0, mRotationWatchers:Ljava/util/ArrayList;

    new-instance v4, Lcom/android/server/wm/WindowManagerService$RotationWatcher;

    invoke-direct {v4, p0, p1, v0}, Lcom/android/server/wm/WindowManagerService$RotationWatcher;-><init>(Lcom/android/server/wm/WindowManagerService;Landroid/view/IRotationWatcher;Landroid/os/IBinder$DeathRecipient;)V

    invoke-virtual {v2, v4}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z
    :try_end_1e
    .catch Landroid/os/RemoteException; {:try_start_c .. :try_end_1e} :catch_25
    .catchall {:try_start_c .. :try_end_1e} :catchall_22

    .line 11931
    :goto_1e
    :try_start_1e
    iget v2, p0, mRotation:I

    monitor-exit v3

    return v2

    .line 11933
    :catchall_22
    move-exception v2

    monitor-exit v3
    :try_end_24
    .catchall {:try_start_1e .. :try_end_24} :catchall_22

    throw v2

    .line 11922
    :catch_25
    move-exception v2

    goto :goto_1e
.end method

.method final windowForClientLocked(Lcom/android/server/wm/Session;Landroid/os/IBinder;Z)Lcom/android/server/wm/WindowState;
    .registers 9
    .param p1, "session"    # Lcom/android/server/wm/Session;
    .param p2, "client"    # Landroid/os/IBinder;
    .param p3, "throwOnError"    # Z

    .prologue
    const/4 v2, 0x0

    .line 14782
    iget-object v3, p0, mWindowMap:Ljava/util/HashMap;

    invoke-virtual {v3, p2}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/wm/WindowState;

    .line 14785
    .local v1, "win":Lcom/android/server/wm/WindowState;
    if-nez v1, :cond_35

    .line 14786
    new-instance v0, Ljava/lang/IllegalArgumentException;

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "Requested window "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v3

    const-string v4, " does not exist"

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-direct {v0, v3}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    .line 14788
    .local v0, "ex":Ljava/lang/RuntimeException;
    if-eqz p3, :cond_2c

    .line 14789
    throw v0

    .line 14791
    :cond_2c
    const-string v3, "WindowManager"

    const-string v4, "Failed looking up window"

    invoke-static {v3, v4, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    move-object v1, v2

    .line 14805
    .end local v0    # "ex":Ljava/lang/RuntimeException;
    .end local v1    # "win":Lcom/android/server/wm/WindowState;
    :cond_34
    :goto_34
    return-object v1

    .line 14794
    .restart local v1    # "win":Lcom/android/server/wm/WindowState;
    :cond_35
    if-eqz p1, :cond_34

    iget-object v3, v1, Lcom/android/server/wm/WindowState;->mSession:Lcom/android/server/wm/Session;

    if-eq v3, p1, :cond_34

    .line 14795
    new-instance v0, Ljava/lang/IllegalArgumentException;

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "Requested window "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v3

    const-string v4, " is in session "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    iget-object v4, v1, Lcom/android/server/wm/WindowState;->mSession:Lcom/android/server/wm/Session;

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v3

    const-string v4, ", not "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-direct {v0, v3}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    .line 14798
    .restart local v0    # "ex":Ljava/lang/RuntimeException;
    if-eqz p3, :cond_6c

    .line 14799
    throw v0

    .line 14801
    :cond_6c
    const-string v3, "WindowManager"

    const-string v4, "Failed looking up window"

    invoke-static {v3, v4, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    move-object v1, v2

    .line 14802
    goto :goto_34
.end method

.method final windowForClientLocked(Lcom/android/server/wm/Session;Landroid/view/IWindow;Z)Lcom/android/server/wm/WindowState;
    .registers 5
    .param p1, "session"    # Lcom/android/server/wm/Session;
    .param p2, "client"    # Landroid/view/IWindow;
    .param p3, "throwOnError"    # Z

    .prologue
    .line 14777
    invoke-interface {p2}, Landroid/view/IWindow;->asBinder()Landroid/os/IBinder;

    move-result-object v0

    invoke-virtual {p0, p1, v0, p3}, windowForClientLocked(Lcom/android/server/wm/Session;Landroid/os/IBinder;Z)Lcom/android/server/wm/WindowState;

    move-result-object v0

    return-object v0
.end method
